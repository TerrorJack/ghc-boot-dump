
==================== Raw Cmm ====================
2018-03-16 16:05:24.538320579 UTC

[]


==================== Raw Cmm ====================
2018-03-16 16:05:24.541442092 UTC

[section ""data" . GHC.Event.Control.$WW_closure" {
     GHC.Event.Control.$WW_closure:
         const GHC.Event.Control.$WW_info;
 },
 GHC.Event.Control.$WW_entry() //  [R2, R3, R4, R5, R6]
         { []
         }
     {offset
       capND: // global
           if ((Sp + -40) < SpLim) (likely: False) goto capO1; else goto capO2;
       capO1: // global
           R6 = R6;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Control.$WW_closure;
           call (stg_gc_fun)(R6, R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       capO2: // global
           I64[Sp - 40] = block_capNA_info;
           R1 = R2;
           P64[Sp - 32] = R3;
           P64[Sp - 24] = R4;
           P64[Sp - 16] = R5;
           P64[Sp - 8] = R6;
           Sp = Sp - 40;
           if (R1 & 7 != 0) goto uapOb; else goto capNB;
       uapOb: // global
           call _capNA(R1) args: 0, res: 0, upd: 0;
       capNB: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.$WW_info" {
     GHC.Event.Control.$WW_info:
         const GHC.Event.Control.$WW_entry;
         const 0;
         const 14;
         const 21474836505;
 },
 _capNA() //  [R1]
         { []
         }
     {offset
       capNA: // global
           I64[Sp] = block_capNG_info;
           _saoXb::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _saoXb::I64;
           if (R1 & 7 != 0) goto uapOa; else goto capNH;
       uapOa: // global
           call _capNG(R1) args: 0, res: 0, upd: 0;
       capNH: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_capNA_info" {
     block_capNA_info:
         const _capNA;
         const 4;
         const 30;
 },
 _capNG() //  [R1]
         { []
         }
     {offset
       capNG: // global
           I64[Sp] = block_capNL_info;
           _saoXd::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _saoXd::I64;
           if (R1 & 7 != 0) goto uapOc; else goto capNM;
       uapOc: // global
           call _capNL(R1) args: 0, res: 0, upd: 0;
       capNM: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_capNG_info" {
     block_capNG_info:
         const _capNG;
         const 68;
         const 30;
 },
 _capNL() //  [R1]
         { []
         }
     {offset
       capNL: // global
           I64[Sp] = block_capNQ_info;
           _saoXf::I64 = I64[R1 + 7];
           R1 = P64[Sp + 24];
           I64[Sp + 24] = _saoXf::I64;
           if (R1 & 7 != 0) goto uapOd; else goto capNR;
       uapOd: // global
           call _capNQ(R1) args: 0, res: 0, upd: 0;
       capNR: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_capNL_info" {
     block_capNL_info:
         const _capNL;
         const 196;
         const 30;
 },
 _capNQ() //  [R1]
         { []
         }
     {offset
       capNQ: // global
           I64[Sp] = block_capNV_info;
           _saoXg::P64 = R1;
           R1 = P64[Sp + 32];
           P64[Sp + 32] = _saoXg::P64;
           if (R1 & 7 != 0) goto uapOe; else goto capNW;
       uapOe: // global
           call _capNV(R1) args: 0, res: 0, upd: 0;
       capNW: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_capNQ_info" {
     block_capNQ_info:
         const _capNQ;
         const 452;
         const 30;
 },
 _capNV() //  [R1]
         { []
         }
     {offset
       capNV: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto capO9; else goto capO8;
       capO9: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       capO8: // global
           _saoXi::P64 = P64[R1 + 7];
           I64[Hp - 40] = GHC.Event.Control.W_con_info;
           P64[Hp - 32] = P64[Sp + 32];
           P64[Hp - 24] = _saoXi::P64;
           I64[Hp - 16] = I64[Sp + 8];
           I64[Hp - 8] = I64[Sp + 16];
           I64[Hp] = I64[Sp + 24];
           R1 = Hp - 39;
           Sp = Sp + 40;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_capNV_info" {
     block_capNV_info:
         const _capNV;
         const 452;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.555482408 UTC

[section ""data" . GHC.Event.Control.$WCMsgSignal_closure" {
     GHC.Event.Control.$WCMsgSignal_closure:
         const GHC.Event.Control.$WCMsgSignal_info;
 },
 GHC.Event.Control.$WCMsgSignal_entry() //  [R2, R3]
         { []
         }
     {offset
       capOQ: // global
           if ((Sp + -24) < SpLim) (likely: False) goto capOZ; else goto capP0;
       capOZ: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Control.$WCMsgSignal_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       capP0: // global
           I64[Sp - 16] = block_capON_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto uapP6; else goto capOO;
       uapP6: // global
           call _capON(R1) args: 0, res: 0, upd: 0;
       capOO: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.$WCMsgSignal_info" {
     GHC.Event.Control.$WCMsgSignal_info:
         const GHC.Event.Control.$WCMsgSignal_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _capON() //  [R1]
         { []
         }
     {offset
       capON: // global
           I64[Sp - 8] = block_capOT_info;
           _saoXn::P64 = P64[R1 + 7];
           _saoXm::I64 = I64[R1 + 15];
           R1 = P64[Sp + 8];
           P64[Sp] = _saoXn::P64;
           I64[Sp + 8] = _saoXm::I64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto uapP5; else goto capOU;
       uapP5: // global
           call _capOT(R1) args: 0, res: 0, upd: 0;
       capOU: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_capON_info" {
     block_capON_info:
         const _capON;
         const 1;
         const 30;
 },
 _capOT() //  [R1]
         { []
         }
     {offset
       capOT: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto capP4; else goto capP3;
       capP4: // global
           HpAlloc = 32;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       capP3: // global
           _saoXp::I64 = I64[R1 + 7];
           I64[Hp - 24] = GHC.Event.Control.CMsgSignal_con_info;
           P64[Hp - 16] = P64[Sp + 8];
           I64[Hp - 8] = I64[Sp + 16];
           I64[Hp] = _saoXp::I64;
           R1 = Hp - 21;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_capOT_info" {
     block_capOT_info:
         const _capOT;
         const 130;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.562390466 UTC

[section ""cstring" . GHC.Event.Control.$fShowControlMessage8_bytes" {
     GHC.Event.Control.$fShowControlMessage8_bytes:
         I8[] [67,77,115,103,87,97,107,101,117,112]
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.564590889 UTC

[section ""data" . GHC.Event.Control.$fShowControlMessage7_closure" {
     GHC.Event.Control.$fShowControlMessage7_closure:
         const GHC.Event.Control.$fShowControlMessage7_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Control.$fShowControlMessage7_entry() //  [R1]
         { []
         }
     {offset
       capPu: // global
           if ((Sp + -16) < SpLim) (likely: False) goto capPv; else goto capPw;
       capPv: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       capPw: // global
           (_capPr::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_capPr::I64 == 0) goto capPt; else goto capPs;
       capPt: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       capPs: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _capPr::I64;
           R2 = GHC.Event.Control.$fShowControlMessage8_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Event.Control.$fShowControlMessage7_info" {
     GHC.Event.Control.$fShowControlMessage7_info:
         const GHC.Event.Control.$fShowControlMessage7_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.568102313 UTC

[section ""cstring" . GHC.Event.Control.$fShowControlMessage6_bytes" {
     GHC.Event.Control.$fShowControlMessage6_bytes:
         I8[] [67,77,115,103,68,105,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.570828391 UTC

[section ""data" . GHC.Event.Control.$fShowControlMessage5_closure" {
     GHC.Event.Control.$fShowControlMessage5_closure:
         const GHC.Event.Control.$fShowControlMessage5_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Control.$fShowControlMessage5_entry() //  [R1]
         { []
         }
     {offset
       capPL: // global
           if ((Sp + -16) < SpLim) (likely: False) goto capPM; else goto capPN;
       capPM: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       capPN: // global
           (_capPI::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_capPI::I64 == 0) goto capPK; else goto capPJ;
       capPK: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       capPJ: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _capPI::I64;
           R2 = GHC.Event.Control.$fShowControlMessage6_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Event.Control.$fShowControlMessage5_info" {
     GHC.Event.Control.$fShowControlMessage5_info:
         const GHC.Event.Control.$fShowControlMessage5_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.574376166 UTC

[section ""cstring" . GHC.Event.Control.$fShowControlMessage4_bytes" {
     GHC.Event.Control.$fShowControlMessage4_bytes:
         I8[] [67,77,115,103,83,105,103,110,97,108,32]
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.576544373 UTC

[section ""data" . GHC.Event.Control.$fShowControlMessage3_closure" {
     GHC.Event.Control.$fShowControlMessage3_closure:
         const GHC.Event.Control.$fShowControlMessage3_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Control.$fShowControlMessage3_entry() //  [R1]
         { []
         }
     {offset
       capQ2: // global
           if ((Sp + -16) < SpLim) (likely: False) goto capQ3; else goto capQ4;
       capQ3: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       capQ4: // global
           (_capPZ::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_capPZ::I64 == 0) goto capQ1; else goto capQ0;
       capQ1: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       capQ0: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _capPZ::I64;
           R2 = GHC.Event.Control.$fShowControlMessage4_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Event.Control.$fShowControlMessage3_info" {
     GHC.Event.Control.$fShowControlMessage3_info:
         const GHC.Event.Control.$fShowControlMessage3_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.58596142 UTC

[section ""data" . GHC.Event.Control.$fShowControlMessage_$cshowsPrec_closure" {
     GHC.Event.Control.$fShowControlMessage_$cshowsPrec_closure:
         const GHC.Event.Control.$fShowControlMessage_$cshowsPrec_info;
         const 0;
 },
 sat_saoXD_entry() //  [R1]
         { []
         }
     {offset
       capQG: // global
           if ((Sp + -24) < SpLim) (likely: False) goto capQH; else goto capQI;
       capQH: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       capQI: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_capQD_info;
           R4 = P64[R1 + 16];
           R3 = I64[R1 + 24];
           R2 = 11;
           Sp = Sp - 24;
           call GHC.Show.$wshowSignedInt_entry(R4,
                                               R3,
                                               R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_saoXD_info" {
     sat_saoXD_info:
         const sat_saoXD_entry;
         const 4294967297;
         const 19;
 },
 _capQD() //  [R1, R2]
         { []
         }
     {offset
       capQD: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto capQL; else goto capQK;
       capQL: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       capQK: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_capQD_info" {
     block_capQD_info:
         const _capQD;
         const 0;
         const 30;
 },
 sat_saoXI_entry() //  [R1]
         { []
         }
     {offset
       capQQ: // global
           _saoXI::P64 = R1;
           if ((Sp + -8) < SpLim) (likely: False) goto capQR; else goto capQS;
       capQS: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto capQU; else goto capQT;
       capQU: // global
           HpAlloc = 56;
           goto capQR;
       capQR: // global
           R1 = _saoXI::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       capQT: // global
           _saoXs::P64 = P64[_saoXI::P64 + 16];
           _saoXu::I64 = I64[_saoXI::P64 + 24];
           _saoXw::I64 = I64[_saoXI::P64 + 32];
           I64[Hp - 48] = sat_saoXD_info;
           P64[Hp - 32] = _saoXs::P64;
           I64[Hp - 24] = _saoXw::I64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.showSpace1_closure;
           P64[Hp] = Hp - 48;
           I64[Sp - 8] = block_capQN_info;
           R3 = Hp - 14;
           R2 = _saoXu::I64;
           Sp = Sp - 8;
           call GHC.Ptr.$w$cshowsPrec_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_saoXI_info" {
     sat_saoXI_info:
         const sat_saoXI_entry;
         const 8589934593;
         const 4294967311;
         const Sap8o_srt;
 },
 _capQN() //  [R1, R2]
         { []
         }
     {offset
       capQN: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto capQX; else goto capQW;
       capQX: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 8;
       capQW: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_capQN_info" {
     block_capQN_info:
         const _capQN;
         const 0;
         const 30;
 },
 sat_saoXN_entry() //  [R1]
         { []
         }
     {offset
       capRf: // global
           _saoXN::P64 = R1;
           if ((Sp + -24) < SpLim) (likely: False) goto capRg; else goto capRh;
       capRh: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto capRj; else goto capRi;
       capRj: // global
           HpAlloc = 24;
           goto capRg;
       capRg: // global
           R1 = _saoXN::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       capRi: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _saoXN::P64;
           _saoXs::P64 = P64[_saoXN::P64 + 16];
           _saoXw::I64 = I64[_saoXN::P64 + 24];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.$fShow(,)2_closure;
           P64[Hp] = _saoXs::P64;
           I64[Sp - 24] = block_capRc_info;
           R4 = Hp - 14;
           R3 = _saoXw::I64;
           R2 = 11;
           Sp = Sp - 24;
           call GHC.Show.$wshowSignedInt_entry(R4,
                                               R3,
                                               R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_saoXN_info" {
     sat_saoXN_info:
         const sat_saoXN_entry;
         const 4294967297;
         const 19;
 },
 _capRc() //  [R1, R2]
         { []
         }
     {offset
       capRc: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto capRm; else goto capRl;
       capRm: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       capRl: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_capRc_info" {
     block_capRc_info:
         const _capRc;
         const 0;
         const 30;
 },
 sat_saoXS_entry() //  [R1]
         { []
         }
     {offset
       capRr: // global
           _saoXS::P64 = R1;
           if ((Sp + -8) < SpLim) (likely: False) goto capRs; else goto capRt;
       capRt: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto capRv; else goto capRu;
       capRv: // global
           HpAlloc = 56;
           goto capRs;
       capRs: // global
           R1 = _saoXS::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       capRu: // global
           _saoXs::P64 = P64[_saoXS::P64 + 16];
           _saoXu::I64 = I64[_saoXS::P64 + 24];
           _saoXw::I64 = I64[_saoXS::P64 + 32];
           I64[Hp - 48] = sat_saoXN_info;
           P64[Hp - 32] = _saoXs::P64;
           I64[Hp - 24] = _saoXw::I64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.showSpace1_closure;
           P64[Hp] = Hp - 48;
           I64[Sp - 8] = block_capRo_info;
           R3 = Hp - 14;
           R2 = _saoXu::I64;
           Sp = Sp - 8;
           call GHC.Ptr.$w$cshowsPrec_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_saoXS_info" {
     sat_saoXS_info:
         const sat_saoXS_entry;
         const 8589934593;
         const 4294967311;
         const Sap8o_srt;
 },
 _capRo() //  [R1, R2]
         { []
         }
     {offset
       capRo: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto capRy; else goto capRx;
       capRy: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 8;
       capRx: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_capRo_info" {
     block_capRo_info:
         const _capRo;
         const 0;
         const 30;
 },
 sat_saoXT_entry() //  [R1]
         { []
         }
     {offset
       capRz: // global
           _saoXT::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto capRA; else goto capRB;
       capRB: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto capRD; else goto capRC;
       capRD: // global
           HpAlloc = 40;
           goto capRA;
       capRA: // global
           R1 = _saoXT::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       capRC: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _saoXT::P64;
           _saoXs::P64 = P64[_saoXT::P64 + 16];
           _saoXu::I64 = I64[_saoXT::P64 + 24];
           _saoXw::I64 = I64[_saoXT::P64 + 32];
           I64[Hp - 32] = sat_saoXS_info;
           P64[Hp - 16] = _saoXs::P64;
           I64[Hp - 8] = _saoXu::I64;
           I64[Hp] = _saoXw::I64;
           R3 = Hp - 32;
           R2 = GHC.Event.Control.$fShowControlMessage3_closure;
           Sp = Sp - 16;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_saoXT_info" {
     sat_saoXT_info:
         const sat_saoXT_entry;
         const 8589934593;
         const 12884901903;
         const Sap8o_srt;
 },
 GHC.Event.Control.$fShowControlMessage_$cshowsPrec_entry() //  [R2,
                                                                 R3, R4]
         { []
         }
     {offset
       capRJ: // global
           if ((Sp + -32) < SpLim) (likely: False) goto capRK; else goto capRL;
       capRK: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Control.$fShowControlMessage_$cshowsPrec_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       capRL: // global
           I64[Sp - 24] = block_capQg_info;
           R1 = R3;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto uapS0; else goto capQh;
       uapS0: // global
           call _capQg(R1) args: 0, res: 0, upd: 0;
       capQh: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.$fShowControlMessage_$cshowsPrec_info" {
     GHC.Event.Control.$fShowControlMessage_$cshowsPrec_info:
         const GHC.Event.Control.$fShowControlMessage_$cshowsPrec_entry;
         const 0;
         const 133143986190;
         const 12884901911;
         const Sap8o_srt;
 },
 _capQg() //  [R1]
         { []
         }
     {offset
       capQg: // global
           _capRI::P64 = R1 & 7;
           if (_capRI::P64 < 3) goto uapRY; else goto capRH;
       uapRY: // global
           _saoXs::P64 = P64[Sp + 16];
           if (_capRI::P64 < 2) goto capRF; else goto capRG;
       capRF: // global
           R3 = _saoXs::P64;
           R2 = GHC.Event.Control.$fShowControlMessage7_closure;
           Sp = Sp + 24;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
       capRG: // global
           R3 = _saoXs::P64;
           R2 = GHC.Event.Control.$fShowControlMessage5_closure;
           Sp = Sp + 24;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
       capRH: // global
           I64[Sp - 8] = block_capQn_info;
           _saoXu::I64 = I64[R1 + 13];
           _saoXw::I64 = I64[R1 + 21];
           R1 = P64[Sp + 8];
           I64[Sp] = _saoXw::I64;
           I64[Sp + 8] = _saoXu::I64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto uapRZ; else goto capQo;
       uapRZ: // global
           call _capQn(R1) args: 0, res: 0, upd: 0;
       capQo: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_capQg_info" {
     block_capQg_info:
         const _capQg;
         const 2;
         const 115964117022;
         const Sap8o_srt;
 },
 _capQn() //  [R1]
         { []
         }
     {offset
       capQn: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto capRT; else goto capRS;
       capRT: // global
           HpAlloc = 64;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       capRS: // global
           _saoXs::P64 = P64[Sp + 24];
           _saoXu::I64 = I64[Sp + 16];
           _saoXw::I64 = I64[Sp + 8];
           if (%MO_S_Lt_W64(I64[R1 + 7], 11)) goto capRV; else goto capRX;
       capRV: // global
           I64[Hp - 56] = sat_saoXI_info;
           P64[Hp - 40] = _saoXs::P64;
           I64[Hp - 32] = _saoXu::I64;
           I64[Hp - 24] = _saoXw::I64;
           _capQv::P64 = Hp - 56;
           Hp = Hp - 24;
           R3 = _capQv::P64;
           R2 = GHC.Event.Control.$fShowControlMessage3_closure;
           Sp = Sp + 32;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
       capRX: // global
           I64[Hp - 56] = sat_saoXT_info;
           P64[Hp - 40] = _saoXs::P64;
           I64[Hp - 32] = _saoXu::I64;
           I64[Hp - 24] = _saoXw::I64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.$fShow(,)4_closure;
           P64[Hp] = Hp - 56;
           R1 = Hp - 14;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_capQn_info" {
     block_capQn_info:
         const _capQn;
         const 195;
         const 12884901918;
         const Sap8o_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.613516403 UTC

[section ""data" . GHC.Event.Control.$fShowControlMessage_$cshow_closure" {
     GHC.Event.Control.$fShowControlMessage_$cshow_closure:
         const GHC.Event.Control.$fShowControlMessage_$cshow_info;
         const 0;
 },
 sat_saoY2_entry() //  [R1]
         { []
         }
     {offset
       capTf: // global
           if ((Sp + -24) < SpLim) (likely: False) goto capTg; else goto capTh;
       capTg: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       capTh: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_capTc_info;
           R4 = GHC.Types.[]_closure+1;
           R3 = I64[R1 + 16];
           R2 = 11;
           Sp = Sp - 24;
           call GHC.Show.$wshowSignedInt_entry(R4,
                                               R3,
                                               R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_saoY2_info" {
     sat_saoY2_info:
         const sat_saoY2_entry;
         const 4294967296;
         const 17;
 },
 _capTc() //  [R1, R2]
         { []
         }
     {offset
       capTc: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto capTk; else goto capTj;
       capTk: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       capTj: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_capTc_info" {
     block_capTc_info:
         const _capTc;
         const 0;
         const 30;
 },
 sat_saoY7_entry() //  [R1]
         { []
         }
     {offset
       capTp: // global
           _saoY7::P64 = R1;
           if ((Sp + -8) < SpLim) (likely: False) goto capTq; else goto capTr;
       capTr: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto capTt; else goto capTs;
       capTt: // global
           HpAlloc = 48;
           goto capTq;
       capTq: // global
           R1 = _saoY7::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       capTs: // global
           _saoXW::I64 = I64[_saoY7::P64 + 16];
           _saoXY::I64 = I64[_saoY7::P64 + 24];
           I64[Hp - 40] = sat_saoY2_info;
           I64[Hp - 24] = _saoXY::I64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.showSpace1_closure;
           P64[Hp] = Hp - 40;
           I64[Sp - 8] = block_capTm_info;
           R3 = Hp - 14;
           R2 = _saoXW::I64;
           Sp = Sp - 8;
           call GHC.Ptr.$w$cshowsPrec_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_saoY7_info" {
     sat_saoY7_info:
         const sat_saoY7_entry;
         const 8589934592;
         const 4294967316;
         const Sap8o_srt;
 },
 _capTm() //  [R1, R2]
         { []
         }
     {offset
       capTm: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto capTw; else goto capTv;
       capTw: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 8;
       capTv: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_capTm_info" {
     block_capTm_info:
         const _capTm;
         const 0;
         const 30;
 },
 GHC.Event.Control.$fShowControlMessage_$cshow_entry() //  [R2]
         { []
         }
     {offset
       capTC: // global
           if ((Sp + -8) < SpLim) (likely: False) goto capTD; else goto capTE;
       capTD: // global
           R2 = R2;
           R1 = GHC.Event.Control.$fShowControlMessage_$cshow_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       capTE: // global
           I64[Sp - 8] = block_capSX_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto uapTN; else goto capSY;
       uapTN: // global
           call _capSX(R1) args: 0, res: 0, upd: 0;
       capSY: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.$fShowControlMessage_$cshow_info" {
     GHC.Event.Control.$fShowControlMessage_$cshow_info:
         const GHC.Event.Control.$fShowControlMessage_$cshow_entry;
         const 0;
         const 253403070478;
         const 4294967301;
         const Sap8o_srt;
 },
 _capSX() //  [R1]
         { []
         }
     {offset
       capSX: // global
           _capTB::P64 = R1 & 7;
           if (_capTB::P64 < 3) goto uapTM; else goto capTA;
       uapTM: // global
           if (_capTB::P64 < 2) goto capTy; else goto capTz;
       capTy: // global
           R1 = GHC.Event.Control.$fShowControlMessage7_closure;
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       capTz: // global
           R1 = GHC.Event.Control.$fShowControlMessage5_closure;
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       capTA: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto capTL; else goto capTK;
       capTL: // global
           HpAlloc = 32;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       capTK: // global
           _saoXW::I64 = I64[R1 + 13];
           _saoXY::I64 = I64[R1 + 21];
           I64[Hp - 24] = sat_saoY7_info;
           I64[Hp - 8] = _saoXW::I64;
           I64[Hp] = _saoXY::I64;
           R3 = Hp - 24;
           R2 = GHC.Event.Control.$fShowControlMessage3_closure;
           Sp = Sp + 8;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_capSX_info" {
     block_capSX_info:
         const _capSX;
         const 0;
         const 115964117022;
         const Sap8o_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.626101854 UTC

[section ""data" . GHC.Event.Control.$fShowControlMessage2_closure" {
     GHC.Event.Control.$fShowControlMessage2_closure:
         const GHC.Types.I#_con_info;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.62820315 UTC

[section ""data" . GHC.Event.Control.$fShowControlMessage1_closure" {
     GHC.Event.Control.$fShowControlMessage1_closure:
         const GHC.Event.Control.$fShowControlMessage1_info;
         const 0;
 },
 GHC.Event.Control.$fShowControlMessage1_entry() //  [R2, R3]
         { []
         }
     {offset
       capUm: // global
           R4 = R3;
           R3 = R2;
           R2 = GHC.Event.Control.$fShowControlMessage2_closure+1;
           call GHC.Event.Control.$fShowControlMessage_$cshowsPrec_entry(R4,
                                                                         R3,
                                                                         R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.$fShowControlMessage1_info" {
     GHC.Event.Control.$fShowControlMessage1_info:
         const GHC.Event.Control.$fShowControlMessage1_entry;
         const 0;
         const 4294967310;
         const 8589934607;
         const Sap8o_srt+16;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.632226953 UTC

[section ""data" . GHC.Event.Control.$fShowControlMessage_$cshowList_closure" {
     GHC.Event.Control.$fShowControlMessage_$cshowList_closure:
         const GHC.Event.Control.$fShowControlMessage_$cshowList_info;
         const 0;
 },
 GHC.Event.Control.$fShowControlMessage_$cshowList_entry() //  [R2,
                                                                R3]
         { []
         }
     {offset
       capUx: // global
           R4 = R3;
           R3 = R2;
           R2 = GHC.Event.Control.$fShowControlMessage1_closure+2;
           call GHC.Show.showList___entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.$fShowControlMessage_$cshowList_info" {
     GHC.Event.Control.$fShowControlMessage_$cshowList_info:
         const GHC.Event.Control.$fShowControlMessage_$cshowList_entry;
         const 0;
         const 4294967310;
         const 8589934607;
         const Sap8o_srt+48;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.635723684 UTC

[section ""data" . GHC.Event.Control.$fShowControlMessage_closure" {
     GHC.Event.Control.$fShowControlMessage_closure:
         const GHC.Show.C:Show_con_info;
         const GHC.Event.Control.$fShowControlMessage_$cshowsPrec_closure+3;
         const GHC.Event.Control.$fShowControlMessage_$cshow_closure+1;
         const GHC.Event.Control.$fShowControlMessage_$cshowList_closure+2;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.638305295 UTC

[section ""data" . GHC.Event.Control.controlIsDead_closure" {
     GHC.Event.Control.controlIsDead_closure:
         const GHC.Event.Control.controlIsDead_info;
 },
 GHC.Event.Control.controlIsDead_entry() //  [R2]
         { []
         }
     {offset
       capUM: // global
           if ((Sp + -8) < SpLim) (likely: False) goto capUQ; else goto capUR;
       capUQ: // global
           R2 = R2;
           R1 = GHC.Event.Control.controlIsDead_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       capUR: // global
           I64[Sp - 8] = block_capUJ_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto uapUV; else goto capUK;
       uapUV: // global
           call _capUJ(R1) args: 0, res: 0, upd: 0;
       capUK: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.controlIsDead_info" {
     GHC.Event.Control.controlIsDead_info:
         const GHC.Event.Control.controlIsDead_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _capUJ() //  [R1]
         { []
         }
     {offset
       capUJ: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto capUU; else goto capUT;
       capUU: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       capUT: // global
           _saoYg::P64 = P64[R1 + 15];
           I64[Hp - 8] = GHC.STRef.STRef_con_info;
           P64[Hp] = _saoYg::P64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_capUJ_info" {
     block_capUJ_info:
         const _capUJ;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.643872031 UTC

[section ""data" . GHC.Event.Control.didRegisterWakeupFd_closure" {
     GHC.Event.Control.didRegisterWakeupFd_closure:
         const GHC.Event.Control.didRegisterWakeupFd_info;
 },
 GHC.Event.Control.didRegisterWakeupFd_entry() //  [R2]
         { []
         }
     {offset
       capVd: // global
           if ((Sp + -8) < SpLim) (likely: False) goto capVe; else goto capVf;
       capVe: // global
           R2 = R2;
           R1 = GHC.Event.Control.didRegisterWakeupFd_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       capVf: // global
           I64[Sp - 8] = block_capVa_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto uapVj; else goto capVb;
       uapVj: // global
           call _capVa(R1) args: 0, res: 0, upd: 0;
       capVb: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.didRegisterWakeupFd_info" {
     GHC.Event.Control.didRegisterWakeupFd_info:
         const GHC.Event.Control.didRegisterWakeupFd_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _capVa() //  [R1]
         { []
         }
     {offset
       capVa: // global
           R1 = P64[R1 + 7] & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_capVa_info" {
     block_capVa_info:
         const _capVa;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.649451982 UTC

[section ""data" . GHC.Event.Control.controlEventFd_closure" {
     GHC.Event.Control.controlEventFd_closure:
         const GHC.Event.Control.controlEventFd_info;
 },
 GHC.Event.Control.controlEventFd_entry() //  [R2]
         { []
         }
     {offset
       capVC: // global
           if ((Sp + -8) < SpLim) (likely: False) goto capVG; else goto capVH;
       capVG: // global
           R2 = R2;
           R1 = GHC.Event.Control.controlEventFd_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       capVH: // global
           I64[Sp - 8] = block_capVz_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto uapVL; else goto capVA;
       uapVL: // global
           call _capVz(R1) args: 0, res: 0, upd: 0;
       capVA: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.controlEventFd_info" {
     GHC.Event.Control.controlEventFd_info:
         const GHC.Event.Control.controlEventFd_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _capVz() //  [R1]
         { []
         }
     {offset
       capVz: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto capVK; else goto capVJ;
       capVK: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       capVJ: // global
           _saoYs::I64 = I64[R1 + 39];
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = _saoYs::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_capVz_info" {
     block_capVz_info:
         const _capVz;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.655701367 UTC

[section ""data" . GHC.Event.Control.controlWriteFd_closure" {
     GHC.Event.Control.controlWriteFd_closure:
         const GHC.Event.Control.controlWriteFd_info;
 },
 GHC.Event.Control.controlWriteFd_entry() //  [R2]
         { []
         }
     {offset
       capW3: // global
           if ((Sp + -8) < SpLim) (likely: False) goto capW7; else goto capW8;
       capW7: // global
           R2 = R2;
           R1 = GHC.Event.Control.controlWriteFd_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       capW8: // global
           I64[Sp - 8] = block_capW0_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto uapWc; else goto capW1;
       uapWc: // global
           call _capW0(R1) args: 0, res: 0, upd: 0;
       capW1: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.controlWriteFd_info" {
     GHC.Event.Control.controlWriteFd_info:
         const GHC.Event.Control.controlWriteFd_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _capW0() //  [R1]
         { []
         }
     {offset
       capW0: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto capWb; else goto capWa;
       capWb: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       capWa: // global
           _saoYy::I64 = I64[R1 + 31];
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = _saoYy::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_capW0_info" {
     block_capW0_info:
         const _capW0;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.6615778 UTC

[section ""data" . GHC.Event.Control.controlReadFd_closure" {
     GHC.Event.Control.controlReadFd_closure:
         const GHC.Event.Control.controlReadFd_info;
 },
 GHC.Event.Control.controlReadFd_entry() //  [R2]
         { []
         }
     {offset
       capWu: // global
           if ((Sp + -8) < SpLim) (likely: False) goto capWy; else goto capWz;
       capWy: // global
           R2 = R2;
           R1 = GHC.Event.Control.controlReadFd_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       capWz: // global
           I64[Sp - 8] = block_capWr_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto uapWD; else goto capWs;
       uapWD: // global
           call _capWr(R1) args: 0, res: 0, upd: 0;
       capWs: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.controlReadFd_info" {
     GHC.Event.Control.controlReadFd_info:
         const GHC.Event.Control.controlReadFd_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _capWr() //  [R1]
         { []
         }
     {offset
       capWr: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto capWC; else goto capWB;
       capWC: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       capWB: // global
           _saoYE::I64 = I64[R1 + 23];
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = _saoYE::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_capWr_info" {
     block_capWr_info:
         const _capWr;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.667208758 UTC

[section ""data" . GHC.Event.Control.wakeupReadFd_closure" {
     GHC.Event.Control.wakeupReadFd_closure:
         const GHC.Event.Control.wakeupReadFd_info;
 },
 GHC.Event.Control.wakeupReadFd_entry() //  [R2]
         { []
         }
     {offset
       capWS: // global
           R2 = R2;
           call GHC.Event.Control.controlEventFd_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.wakeupReadFd_info" {
     GHC.Event.Control.wakeupReadFd_info:
         const GHC.Event.Control.wakeupReadFd_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.670211247 UTC

[section ""cstring" . GHC.Event.Control.$trModule4_bytes" {
     GHC.Event.Control.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.671807558 UTC

[section ""data" . GHC.Event.Control.$trModule3_closure" {
     GHC.Event.Control.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Control.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.673450567 UTC

[section ""cstring" . GHC.Event.Control.$trModule2_bytes" {
     GHC.Event.Control.$trModule2_bytes:
         I8[] [71,72,67,46,69,118,101,110,116,46,67,111,110,116,114,111,108]
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.675058855 UTC

[section ""data" . GHC.Event.Control.$trModule1_closure" {
     GHC.Event.Control.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Control.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.676727544 UTC

[section ""data" . GHC.Event.Control.$trModule_closure" {
     GHC.Event.Control.$trModule_closure:
         const GHC.Types.Module_con_info;
         const GHC.Event.Control.$trModule3_closure+1;
         const GHC.Event.Control.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.678890282 UTC

[section ""data" . $krep_raoWE_closure" {
     $krep_raoWE_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const Foreign.C.Types.$tcCInt_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.680546929 UTC

[section ""data" . $krep1_raoWF_closure" {
     $krep1_raoWF_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Word.$tcWord8_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.682244641 UTC

[section ""data" . $krep2_raoWG_closure" {
     $krep2_raoWG_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcBool_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.683987824 UTC

[section ""data" . $krep3_raoWH_closure" {
     $krep3_raoWH_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const System.Posix.Types.$tcFd_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.686045924 UTC

[section ""data" . $krep4_raoWI_closure" {
     $krep4_raoWI_closure:
         const :_con_info;
         const $krep1_raoWF_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.687746157 UTC

[section ""data" . $krep5_raoWJ_closure" {
     $krep5_raoWJ_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.ForeignPtr.$tcForeignPtr_closure;
         const $krep4_raoWI_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.689972923 UTC

[section ""data" . $krep6_raoWK_closure" {
     $krep6_raoWK_closure:
         const :_con_info;
         const $krep2_raoWG_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.691707114 UTC

[section ""data" . $krep7_raoWL_closure" {
     $krep7_raoWL_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.IORef.$tcIORef_closure;
         const $krep6_raoWK_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.693374451 UTC

[section ""cstring" . GHC.Event.Control.$tcControlMessage2_bytes" {
     GHC.Event.Control.$tcControlMessage2_bytes:
         I8[] [67,111,110,116,114,111,108,77,101,115,115,97,103,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.694939385 UTC

[section ""data" . GHC.Event.Control.$tcControlMessage1_closure" {
     GHC.Event.Control.$tcControlMessage1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Control.$tcControlMessage2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.696672851 UTC

[section ""data" . GHC.Event.Control.$tcControlMessage_closure" {
     GHC.Event.Control.$tcControlMessage_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Control.$trModule_closure+1;
         const GHC.Event.Control.$tcControlMessage1_closure+1;
         const GHC.Types.krep$*_closure;
         const 13490094119359668037;
         const 2953272121777407512;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.698795018 UTC

[section ""data" . GHC.Event.Control.$tc'CMsgDie1_closure" {
     GHC.Event.Control.$tc'CMsgDie1_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Event.Control.$tcControlMessage_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.70047722 UTC

[section ""cstring" . GHC.Event.Control.$tc'CMsgWakeup2_bytes" {
     GHC.Event.Control.$tc'CMsgWakeup2_bytes:
         I8[] [39,67,77,115,103,87,97,107,101,117,112]
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.702101329 UTC

[section ""data" . GHC.Event.Control.$tc'CMsgWakeup1_closure" {
     GHC.Event.Control.$tc'CMsgWakeup1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Control.$tc'CMsgWakeup2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.703831411 UTC

[section ""data" . GHC.Event.Control.$tc'CMsgWakeup_closure" {
     GHC.Event.Control.$tc'CMsgWakeup_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Control.$trModule_closure+1;
         const GHC.Event.Control.$tc'CMsgWakeup1_closure+1;
         const GHC.Event.Control.$tc'CMsgDie1_closure+1;
         const 7148775915826095055;
         const 6381666496233651559;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.705982145 UTC

[section ""cstring" . GHC.Event.Control.$tc'CMsgDie3_bytes" {
     GHC.Event.Control.$tc'CMsgDie3_bytes:
         I8[] [39,67,77,115,103,68,105,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.707608686 UTC

[section ""data" . GHC.Event.Control.$tc'CMsgDie2_closure" {
     GHC.Event.Control.$tc'CMsgDie2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Control.$tc'CMsgDie3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.709619312 UTC

[section ""data" . GHC.Event.Control.$tc'CMsgDie_closure" {
     GHC.Event.Control.$tc'CMsgDie_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Control.$trModule_closure+1;
         const GHC.Event.Control.$tc'CMsgDie2_closure+1;
         const GHC.Event.Control.$tc'CMsgDie1_closure+1;
         const 2337574862383861426;
         const 4640161931169225929;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.711350038 UTC

[section ""data" . $krep8_raoWM_closure" {
     $krep8_raoWM_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep_raoWE_closure+1;
         const GHC.Event.Control.$tc'CMsgDie1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.713039393 UTC

[section ""data" . GHC.Event.Control.$tc'CMsgSignal1_closure" {
     GHC.Event.Control.$tc'CMsgSignal1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep5_raoWJ_closure+1;
         const $krep8_raoWM_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.714722103 UTC

[section ""cstring" . GHC.Event.Control.$tc'CMsgSignal3_bytes" {
     GHC.Event.Control.$tc'CMsgSignal3_bytes:
         I8[] [39,67,77,115,103,83,105,103,110,97,108]
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.716949574 UTC

[section ""data" . GHC.Event.Control.$tc'CMsgSignal2_closure" {
     GHC.Event.Control.$tc'CMsgSignal2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Control.$tc'CMsgSignal3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.718805419 UTC

[section ""data" . GHC.Event.Control.$tc'CMsgSignal_closure" {
     GHC.Event.Control.$tc'CMsgSignal_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Control.$trModule_closure+1;
         const GHC.Event.Control.$tc'CMsgSignal2_closure+1;
         const GHC.Event.Control.$tc'CMsgSignal1_closure+4;
         const 14616621783190690564;
         const 9307773026781339016;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.720602034 UTC

[section ""cstring" . GHC.Event.Control.$tcControl2_bytes" {
     GHC.Event.Control.$tcControl2_bytes:
         I8[] [67,111,110,116,114,111,108]
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.722373819 UTC

[section ""data" . GHC.Event.Control.$tcControl1_closure" {
     GHC.Event.Control.$tcControl1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Control.$tcControl2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.724136706 UTC

[section ""data" . GHC.Event.Control.$tcControl_closure" {
     GHC.Event.Control.$tcControl_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Control.$trModule_closure+1;
         const GHC.Event.Control.$tcControl1_closure+1;
         const GHC.Types.krep$*_closure;
         const 10901861211350082240;
         const 15092011187582559326;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.725958482 UTC

[section ""data" . $krep9_raoWN_closure" {
     $krep9_raoWN_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Event.Control.$tcControl_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.72769136 UTC

[section ""data" . $krep10_raoWO_closure" {
     $krep10_raoWO_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep7_raoWL_closure+1;
         const $krep9_raoWN_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.729756426 UTC

[section ""data" . $krep11_raoWP_closure" {
     $krep11_raoWP_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep2_raoWG_closure+1;
         const $krep10_raoWO_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.731484492 UTC

[section ""data" . $krep12_raoWQ_closure" {
     $krep12_raoWQ_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep3_raoWH_closure+1;
         const $krep11_raoWP_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.733164597 UTC

[section ""data" . $krep13_raoWR_closure" {
     $krep13_raoWR_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep3_raoWH_closure+1;
         const $krep12_raoWQ_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.734898844 UTC

[section ""data" . GHC.Event.Control.$tc'W1_closure" {
     GHC.Event.Control.$tc'W1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep3_raoWH_closure+1;
         const $krep13_raoWR_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.736552751 UTC

[section ""cstring" . GHC.Event.Control.$tc'W3_bytes" {
     GHC.Event.Control.$tc'W3_bytes:
         I8[] [39,87]
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.738618302 UTC

[section ""data" . GHC.Event.Control.$tc'W2_closure" {
     GHC.Event.Control.$tc'W2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Control.$tc'W3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.740383654 UTC

[section ""data" . GHC.Event.Control.$tc'W_closure" {
     GHC.Event.Control.$tc'W_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Control.$trModule_closure+1;
         const GHC.Event.Control.$tc'W2_closure+1;
         const GHC.Event.Control.$tc'W1_closure+4;
         const 17903566110422877322;
         const 1788372901503945479;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.745604053 UTC

[section ""data" . GHC.Event.Control.$fEqControlMessage_$c==_closure" {
     GHC.Event.Control.$fEqControlMessage_$c==_closure:
         const GHC.Event.Control.$fEqControlMessage_$c==_info;
 },
 GHC.Event.Control.$fEqControlMessage_$c==_entry() //  [R2, R3]
         { []
         }
     {offset
       capXP: // global
           if ((Sp + -24) < SpLim) (likely: False) goto capXQ; else goto capXR;
       capXQ: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Control.$fEqControlMessage_$c==_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       capXR: // global
           I64[Sp - 16] = block_capXH_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto uapYW; else goto capXI;
       uapYW: // global
           call _capXH(R1) args: 0, res: 0, upd: 0;
       capXI: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.$fEqControlMessage_$c==_info" {
     GHC.Event.Control.$fEqControlMessage_$c==_info:
         const GHC.Event.Control.$fEqControlMessage_$c==_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _capXH() //  [R1]
         { []
         }
     {offset
       capXH: // global
           _saoYK::P64 = P64[Sp + 8];
           _capXO::P64 = R1 & 7;
           if (_capXO::P64 < 3) goto uapYM; else goto capXN;
       uapYM: // global
           if (_capXO::P64 < 2) goto capXL; else goto capXM;
       capXL: // global
           I64[Sp + 8] = block_capXU_info;
           R1 = _saoYK::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto uapYT; else goto capXW;
       uapYT: // global
           call _capXU(R1) args: 0, res: 0, upd: 0;
       capXW: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       capXM: // global
           I64[Sp + 8] = block_capY9_info;
           R1 = _saoYK::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto uapYU; else goto capYb;
       uapYU: // global
           call _capY9(R1) args: 0, res: 0, upd: 0;
       capYb: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       capXN: // global
           I64[Sp - 8] = block_capYo_info;
           _saoYO::I64 = I64[R1 + 13];
           _saoYQ::I64 = I64[R1 + 21];
           R1 = _saoYK::P64;
           I64[Sp] = _saoYQ::I64;
           I64[Sp + 8] = _saoYO::I64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto uapYV; else goto capYq;
       uapYV: // global
           call _capYo(R1) args: 0, res: 0, upd: 0;
       capYq: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_capXH_info" {
     block_capXH_info:
         const _capXH;
         const 1;
         const 30;
 },
 _capXU() //  [R1]
         { []
         }
     {offset
       capXU: // global
           if (R1 & 7 == 1) goto uapYN; else goto uapYO;
       uapYN: // global
           Sp = Sp + 8;
           call _capYl() args: 0, res: 0, upd: 0;
       uapYO: // global
           Sp = Sp + 8;
           call _capYD() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_capXU_info" {
     block_capXU_info:
         const _capXU;
         const 0;
         const 30;
 },
 _capY9() //  [R1]
         { []
         }
     {offset
       capY9: // global
           if (R1 & 7 == 2) goto uapYP; else goto uapYQ;
       uapYP: // global
           Sp = Sp + 8;
           call _capYl() args: 0, res: 0, upd: 0;
       uapYQ: // global
           Sp = Sp + 8;
           call _capYD() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_capY9_info" {
     block_capY9_info:
         const _capY9;
         const 0;
         const 30;
 },
 _capYl() //  []
         { []
         }
     {offset
       capYl: // global
           R1 = GHC.Types.True_closure+2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _capYo() //  [R1]
         { []
         }
     {offset
       capYo: // global
           if (R1 & 7 == 3) goto capYF; else goto uapYR;
       capYF: // global
           if (I64[Sp + 16] == I64[R1 + 13]) goto capYE; else goto uapYS;
       capYE: // global
           R1 = I64[((I64[Sp + 8] == I64[R1 + 21]) << 3) + GHC.Types.Bool_closure_tbl];
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       uapYS: // global
           Sp = Sp + 24;
           goto uapZ2;
       uapYR: // global
           Sp = Sp + 24;
           goto uapZ2;
       uapZ2: // global
           call _capYD() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_capYo_info" {
     block_capYo_info:
         const _capYo;
         const 194;
         const 30;
 },
 _capYD() //  []
         { []
         }
     {offset
       capYD: // global
           R1 = GHC.Types.False_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.759367506 UTC

[section ""data" . GHC.Event.Control.$fEqControlMessage_$c/=_closure" {
     GHC.Event.Control.$fEqControlMessage_$c/=_closure:
         const GHC.Event.Control.$fEqControlMessage_$c/=_info;
 },
 GHC.Event.Control.$fEqControlMessage_$c/=_entry() //  [R2, R3]
         { []
         }
     {offset
       capZS: // global
           if ((Sp + -24) < SpLim) (likely: False) goto capZT; else goto capZU;
       capZT: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Control.$fEqControlMessage_$c/=_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       capZU: // global
           I64[Sp - 16] = block_capZK_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto uaq15; else goto capZL;
       uaq15: // global
           call _capZK(R1) args: 0, res: 0, upd: 0;
       capZL: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.$fEqControlMessage_$c/=_info" {
     GHC.Event.Control.$fEqControlMessage_$c/=_info:
         const GHC.Event.Control.$fEqControlMessage_$c/=_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _capZK() //  [R1]
         { []
         }
     {offset
       capZK: // global
           _saoYY::P64 = P64[Sp + 8];
           _capZR::P64 = R1 & 7;
           if (_capZR::P64 < 3) goto uaq0T; else goto capZQ;
       uaq0T: // global
           if (_capZR::P64 < 2) goto capZO; else goto capZP;
       capZO: // global
           I64[Sp + 8] = block_capZX_info;
           R1 = _saoYY::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto uaq12; else goto capZZ;
       uaq12: // global
           call _capZX(R1) args: 0, res: 0, upd: 0;
       capZZ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       capZP: // global
           I64[Sp + 8] = block_caq0c_info;
           R1 = _saoYY::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto uaq13; else goto caq0e;
       uaq13: // global
           call _caq0c(R1) args: 0, res: 0, upd: 0;
       caq0e: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       capZQ: // global
           I64[Sp - 8] = block_caq0r_info;
           _saoZ2::I64 = I64[R1 + 13];
           _saoZ4::I64 = I64[R1 + 21];
           R1 = _saoYY::P64;
           I64[Sp] = _saoZ4::I64;
           I64[Sp + 8] = _saoZ2::I64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto uaq14; else goto caq0t;
       uaq14: // global
           call _caq0r(R1) args: 0, res: 0, upd: 0;
       caq0t: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_capZK_info" {
     block_capZK_info:
         const _capZK;
         const 1;
         const 30;
 },
 _capZX() //  [R1]
         { []
         }
     {offset
       capZX: // global
           if (R1 & 7 == 1) goto uaq0U; else goto uaq0V;
       uaq0U: // global
           Sp = Sp + 8;
           call _caq0N() args: 0, res: 0, upd: 0;
       uaq0V: // global
           Sp = Sp + 8;
           call _caq0M() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_capZX_info" {
     block_capZX_info:
         const _capZX;
         const 0;
         const 30;
 },
 _caq0c() //  [R1]
         { []
         }
     {offset
       caq0c: // global
           if (R1 & 7 == 2) goto uaq0W; else goto uaq0X;
       uaq0W: // global
           Sp = Sp + 8;
           call _caq0N() args: 0, res: 0, upd: 0;
       uaq0X: // global
           Sp = Sp + 8;
           call _caq0M() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_caq0c_info" {
     block_caq0c_info:
         const _caq0c;
         const 0;
         const 30;
 },
 _caq0r() //  [R1]
         { []
         }
     {offset
       caq0r: // global
           if (R1 & 7 == 3) goto caq0P; else goto uaq0Y;
       caq0P: // global
           if (I64[Sp + 16] == I64[R1 + 13]) goto caq0O; else goto uaq0Z;
       caq0O: // global
           if (I64[Sp + 8] == I64[R1 + 21]) goto uaq10; else goto uaq11;
       uaq10: // global
           Sp = Sp + 24;
           call _caq0N() args: 0, res: 0, upd: 0;
       uaq11: // global
           Sp = Sp + 24;
           goto uaq1d;
       uaq0Z: // global
           Sp = Sp + 24;
           goto uaq1d;
       uaq0Y: // global
           Sp = Sp + 24;
           goto uaq1d;
       uaq1d: // global
           call _caq0M() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_caq0r_info" {
     block_caq0r_info:
         const _caq0r;
         const 194;
         const 30;
 },
 _caq0N() //  []
         { []
         }
     {offset
       caq0N: // global
           R1 = GHC.Types.False_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _caq0M() //  []
         { []
         }
     {offset
       caq0M: // global
           R1 = GHC.Types.True_closure+2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.771018988 UTC

[section ""data" . GHC.Event.Control.$fEqControlMessage_closure" {
     GHC.Event.Control.$fEqControlMessage_closure:
         const GHC.Classes.C:Eq_con_info;
         const GHC.Event.Control.$fEqControlMessage_$c==_closure+2;
         const GHC.Event.Control.$fEqControlMessage_$c/=_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.772770276 UTC

[section ""cstring" . GHC.Event.Control.sendWakeup3_bytes" {
     GHC.Event.Control.sendWakeup3_bytes:
         I8[] [115,101,110,100,87,97,107,101,117,112]
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.775614154 UTC

[section ""data" . GHC.Event.Control.sendWakeup2_closure" {
     GHC.Event.Control.sendWakeup2_closure:
         const GHC.Event.Control.sendWakeup2_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Control.sendWakeup2_entry() //  [R1]
         { []
         }
     {offset
       caq1W: // global
           if ((Sp + -16) < SpLim) (likely: False) goto caq1X; else goto caq1Y;
       caq1X: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       caq1Y: // global
           (_caq1T::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_caq1T::I64 == 0) goto caq1V; else goto caq1U;
       caq1V: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       caq1U: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _caq1T::I64;
           R2 = GHC.Event.Control.sendWakeup3_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Event.Control.sendWakeup2_info" {
     GHC.Event.Control.sendWakeup2_info:
         const GHC.Event.Control.sendWakeup2_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.78114885 UTC

[section ""data" . GHC.Event.Control.$wsendWakeup_closure" {
     GHC.Event.Control.$wsendWakeup_closure:
         const GHC.Event.Control.$wsendWakeup_info;
         const 0;
 },
 GHC.Event.Control.$wsendWakeup_entry() //  [R2, R3]
         { []
         }
     {offset
       caq2c: // global
           if ((Sp + -16) < SpLim) (likely: False) goto caq2d; else goto caq2e;
       caq2d: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Control.$wsendWakeup_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       caq2e: // global
           _saoZc::P64 = R3;
           (_saoZi::I64) = call "ccall" arg hints:  [‘signed’,]  result hints:  [‘signed’] eventfd_write(%MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(R2)), 1);
           if (%MO_SS_Conv_W64_W32(_saoZi::I64) == 0 :: W32) goto uaq32; else goto caq2s;
       uaq32: // global
           call _caq2W() args: 0, res: 0, upd: 0;
       caq2s: // global
           (_saoZn::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           I64[Sp - 16] = block_caq2q_info;
           R1 = P64[_saoZc::P64 + 8];
           I64[Sp - 8] = _saoZn::I64;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto uaq33; else goto caq2u;
       uaq33: // global
           call _caq2q(R1) args: 0, res: 0, upd: 0;
       caq2u: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.$wsendWakeup_info" {
     GHC.Event.Control.$wsendWakeup_info:
         const GHC.Event.Control.$wsendWakeup_entry;
         const 0;
         const 30064771086;
         const 12884901901;
         const Sap8o_srt+56;
 },
 _caq2q() //  [R1]
         { []
         }
     {offset
       caq2q: // global
           if (R1 & 7 == 1) goto caq2J; else goto caq2T;
       caq2T: // global
           if (%MO_SS_Conv_W64_W32(I64[Sp + 8]) != 9 :: W32) goto caq2J; else goto uaq31;
       caq2J: // global
           R2 = GHC.Event.Control.sendWakeup2_closure;
           Sp = Sp + 16;
           call Foreign.C.Error.throwErrno1_entry(R2) args: 8, res: 0, upd: 8;
       uaq31: // global
           Sp = Sp + 16;
           call _caq2W() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_caq2q_info" {
     block_caq2q_info:
         const _caq2q;
         const 65;
         const 21474836510;
         const Sap8o_srt+56;
 },
 _caq2W() //  []
         { []
         }
     {offset
       caq2W: // global
           R1 = GHC.Tuple.()_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.788182899 UTC

[section ""data" . GHC.Event.Control.sendWakeup1_closure" {
     GHC.Event.Control.sendWakeup1_closure:
         const GHC.Event.Control.sendWakeup1_info;
         const 0;
 },
 GHC.Event.Control.sendWakeup1_entry() //  [R2]
         { []
         }
     {offset
       caq3r: // global
           if ((Sp + -8) < SpLim) (likely: False) goto caq3s; else goto caq3t;
       caq3s: // global
           R2 = R2;
           R1 = GHC.Event.Control.sendWakeup1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       caq3t: // global
           I64[Sp - 8] = block_caq3o_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto uaq3x; else goto caq3p;
       uaq3x: // global
           call _caq3o(R1) args: 0, res: 0, upd: 0;
       caq3p: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.sendWakeup1_info" {
     GHC.Event.Control.sendWakeup1_info:
         const GHC.Event.Control.sendWakeup1_entry;
         const 0;
         const 21474836494;
         const 8589934597;
         const Sap8o_srt+64;
 },
 _caq3o() //  [R1]
         { []
         }
     {offset
       caq3o: // global
           R3 = P64[R1 + 15];
           R2 = I64[R1 + 39];
           Sp = Sp + 8;
           call GHC.Event.Control.$wsendWakeup_entry(R3,
                                                     R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_caq3o_info" {
     block_caq3o_info:
         const _caq3o;
         const 0;
         const 4294967326;
         const Sap8o_srt+64;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.793546594 UTC

[section ""data" . GHC.Event.Control.sendWakeup_closure" {
     GHC.Event.Control.sendWakeup_closure:
         const GHC.Event.Control.sendWakeup_info;
         const 0;
 },
 GHC.Event.Control.sendWakeup_entry() //  [R2]
         { []
         }
     {offset
       caq3L: // global
           R2 = R2;
           call GHC.Event.Control.sendWakeup1_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.sendWakeup_info" {
     GHC.Event.Control.sendWakeup_info:
         const GHC.Event.Control.sendWakeup_entry;
         const 0;
         const 4294967310;
         const 8589934597;
         const Sap8o_srt+80;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.796635479 UTC

[section ""cstring" . lvl_raoWS_bytes" {
     lvl_raoWS_bytes:
         I8[] [115,101,110,100,68,105,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.798912896 UTC

[section ""data" . lvl1_raoWT_closure" {
     lvl1_raoWT_closure:
         const lvl1_raoWT_info;
         const 0;
         const 0;
         const 0;
 },
 lvl1_raoWT_entry() //  [R1]
         { []
         }
     {offset
       caq3Z: // global
           if ((Sp + -16) < SpLim) (likely: False) goto caq40; else goto caq41;
       caq40: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       caq41: // global
           (_caq3W::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_caq3W::I64 == 0) goto caq3Y; else goto caq3X;
       caq3Y: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       caq3X: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _caq3W::I64;
           R2 = lvl_raoWS_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl1_raoWT_info" {
     lvl1_raoWT_info:
         const lvl1_raoWT_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.802618992 UTC

[section ""data" . GHC.Event.Control.sendDie2_closure" {
     GHC.Event.Control.sendDie2_closure:
         const GHC.Event.Control.sendDie2_info;
         const 0;
 },
 GHC.Event.Control.sendDie2_entry() //  [R2]
         { []
         }
     {offset
       caq4f: // global
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(R2));
           R2 = lvl1_raoWT_closure;
           call Foreign.C.Error.$wlvl_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.sendDie2_info" {
     GHC.Event.Control.sendDie2_info:
         const GHC.Event.Control.sendDie2_entry;
         const 0;
         const 12884901902;
         const 8589934596;
         const Sap8o_srt+88;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.806828328 UTC

[section ""data" . GHC.Event.Control.$wsendDie_closure" {
     GHC.Event.Control.$wsendDie_closure:
         const GHC.Event.Control.$wsendDie_info;
         const 0;
 },
 GHC.Event.Control.$wsendDie_entry() //  [R2, R3]
         { []
         }
     {offset
       caq4u: // global
           if ((Sp + -16) < SpLim) (likely: False) goto caq4v; else goto caq4w;
       caq4v: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Control.$wsendDie_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       caq4w: // global
           I64[Sp - 16] = block_caq4q_info;
           _saoZE::I64 = R2;
           R2 = 1;
           R1 = 1;
           I64[Sp - 8] = _saoZE::I64;
           Sp = Sp - 16;
           call stg_newAlignedPinnedByteArray#(R2,
                                               R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.$wsendDie_info" {
     GHC.Event.Control.$wsendDie_info:
         const GHC.Event.Control.$wsendDie_entry;
         const 0;
         const 12884901902;
         const 12884901901;
         const Sap8o_srt+104;
 },
 _caq4q() //  [R1]
         { []
         }
     {offset
       caq4q: // global
           _saoZE::I64 = I64[Sp + 8];
           _saoZN::I64 = R1 + 16;
           I8[_saoZN::I64] = 254 :: W8;
           (_saoZT::I64) = call "capi" arg hints:  [‘signed’,
                                                    PtrHint,]  result hints:  [‘signed’] ghczuwrapperZC20ZCbaseZCSystemziPosixziInternalsZCwrite(%MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_saoZE::I64)), _saoZN::I64, 1);
           call MO_Touch(R1);
           if (_saoZT::I64 == (-1)) goto caq4K; else goto caq4J;
       caq4K: // global
           (_saoZZ::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R2 = _saoZZ::I64;
           Sp = Sp + 16;
           call GHC.Event.Control.sendDie2_entry(R2) args: 8, res: 0, upd: 8;
       caq4J: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_caq4q_info" {
     block_caq4q_info:
         const _caq4q;
         const 65;
         const 4294967326;
         const Sap8o_srt+112;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.813061156 UTC

[section ""data" . GHC.Event.Control.sendDie1_closure" {
     GHC.Event.Control.sendDie1_closure:
         const GHC.Event.Control.sendDie1_info;
         const 0;
 },
 GHC.Event.Control.sendDie1_entry() //  [R2]
         { []
         }
     {offset
       caq55: // global
           if ((Sp + -8) < SpLim) (likely: False) goto caq56; else goto caq57;
       caq56: // global
           R2 = R2;
           R1 = GHC.Event.Control.sendDie1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       caq57: // global
           I64[Sp - 8] = block_caq52_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto uaq5b; else goto caq53;
       uaq5b: // global
           call _caq52(R1) args: 0, res: 0, upd: 0;
       caq53: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.sendDie1_info" {
     GHC.Event.Control.sendDie1_info:
         const GHC.Event.Control.sendDie1_entry;
         const 0;
         const 21474836494;
         const 8589934597;
         const Sap8o_srt+104;
 },
 _caq52() //  [R1]
         { []
         }
     {offset
       caq52: // global
           R3 = P64[R1 + 15];
           R2 = I64[R1 + 31];
           Sp = Sp + 8;
           call GHC.Event.Control.$wsendDie_entry(R3,
                                                  R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_caq52_info" {
     block_caq52_info:
         const _caq52;
         const 0;
         const 4294967326;
         const Sap8o_srt+104;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.818692403 UTC

[section ""data" . GHC.Event.Control.sendDie_closure" {
     GHC.Event.Control.sendDie_closure:
         const GHC.Event.Control.sendDie_info;
         const 0;
 },
 GHC.Event.Control.sendDie_entry() //  [R2]
         { []
         }
     {offset
       caq5p: // global
           R2 = R2;
           call GHC.Event.Control.sendDie1_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.sendDie_info" {
     GHC.Event.Control.sendDie_info:
         const GHC.Event.Control.sendDie_entry;
         const 0;
         const 4294967310;
         const 8589934597;
         const Sap8o_srt+120;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.822367688 UTC

[section ""data" . GHC.Event.Control.closeControl3_closure" {
     GHC.Event.Control.closeControl3_closure:
         const (,)_con_info;
         const GHC.Types.True_closure+2;
         const GHC.Tuple.()_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.824318029 UTC

[section ""data" . GHC.Event.Control.closeControl2_closure" {
     GHC.Event.Control.closeControl2_closure:
         const GHC.Event.Control.closeControl2_info;
 },
 GHC.Event.Control.closeControl2_entry() //  []
         { []
         }
     {offset
       caq5B: // global
           R1 = GHC.Event.Control.closeControl3_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.closeControl2_info" {
     GHC.Event.Control.closeControl2_info:
         const GHC.Event.Control.closeControl2_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.829194391 UTC

[section ""data" . GHC.Event.Control.closeControl1_closure" {
     GHC.Event.Control.closeControl1_closure:
         const GHC.Event.Control.closeControl1_info;
 },
 GHC.Event.Control.closeControl1_entry() //  [R2]
         { []
         }
     {offset
       caq5Q: // global
           if ((Sp + -40) < SpLim) (likely: False) goto caq5R; else goto caq5S;
       caq5R: // global
           R2 = R2;
           R1 = GHC.Event.Control.closeControl1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       caq5S: // global
           I64[Sp - 8] = block_caq5N_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto uaq6y; else goto caq5O;
       uaq6y: // global
           call _caq5N(R1) args: 0, res: 0, upd: 0;
       caq5O: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.closeControl1_info" {
     GHC.Event.Control.closeControl1_info:
         const GHC.Event.Control.closeControl1_entry;
         const 0;
         const 14;
         const 8589934597;
 },
 _caq5N() //  [R1]
         { []
         }
     {offset
       caq5N: // global
           I64[Sp - 32] = block_caq5V_info;
           R2 = GHC.Event.Control.closeControl2_closure+1;
           _sap0g::P64 = P64[R1 + 7];
           _sap0d::I64 = I64[R1 + 23];
           _sap0e::I64 = I64[R1 + 31];
           _sap0f::I64 = I64[R1 + 39];
           R1 = P64[R1 + 15];
           I64[Sp - 24] = _sap0e::I64;
           I64[Sp - 16] = _sap0f::I64;
           P64[Sp - 8] = _sap0g::P64;
           I64[Sp] = _sap0d::I64;
           Sp = Sp - 32;
           call stg_atomicModifyMutVar#(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_caq5N_info" {
     block_caq5N_info:
         const _caq5N;
         const 0;
         const 30;
 },
 _caq5V() //  []
         { []
         }
     {offset
       caq5V: // global
           _sap0e::I64 = I64[Sp + 8];
           _sap0g::P64 = P64[Sp + 24];
           (_sap0p::I64) = call "ccall" arg hints:  [‘signed’]  result hints:  [‘signed’] close(%MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(I64[Sp + 32])));
           (_sap0u::I64) = call "ccall" arg hints:  [‘signed’]  result hints:  [‘signed’] close(%MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_sap0e::I64)));
           I64[Sp + 8] = block_caq69_info;
           R1 = _sap0g::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto uaq6z; else goto caq6a;
       uaq6z: // global
           call _caq69(R1) args: 0, res: 0, upd: 0;
       caq6a: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_caq5V_info" {
     block_caq5V_info:
         const _caq5V;
         const 708;
         const 30;
 },
 _caq69() //  [R1]
         { []
         }
     {offset
       caq69: // global
           _sap0f::I64 = I64[Sp + 8];
           if (R1 & 7 == 1) goto caq6g; else goto caq6k;
       caq6g: // global
           (_sap0A::I64) = call "ccall" arg hints:  [‘signed’]  result hints:  [‘signed’] close(%MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_sap0f::I64)));
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       caq6k: // global
           call "ccall" arg hints:  [‘signed’]  result hints:  [] setIOManagerWakeupFd((-1));
           (_sap0I::I64) = call "ccall" arg hints:  [‘signed’]  result hints:  [‘signed’] close(%MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_sap0f::I64)));
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_caq69_info" {
     block_caq69_info:
         const _caq69;
         const 451;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.838105318 UTC

[section ""data" . GHC.Event.Control.closeControl_closure" {
     GHC.Event.Control.closeControl_closure:
         const GHC.Event.Control.closeControl_info;
 },
 GHC.Event.Control.closeControl_entry() //  [R2]
         { []
         }
     {offset
       caq6Z: // global
           R2 = R2;
           call GHC.Event.Control.closeControl1_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.closeControl_info" {
     GHC.Event.Control.closeControl_info:
         const GHC.Event.Control.closeControl_entry;
         const 0;
         const 14;
         const 8589934597;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.841104264 UTC

[section ""cstring" . lvl2_raoWU_bytes" {
     lvl2_raoWU_bytes:
         I8[] [101,118,101,110,116,102,100]
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.843743224 UTC

[section ""data" . lvl3_raoWV_closure" {
     lvl3_raoWV_closure:
         const lvl3_raoWV_info;
         const 0;
         const 0;
         const 0;
 },
 lvl3_raoWV_entry() //  [R1]
         { []
         }
     {offset
       caq7d: // global
           if ((Sp + -16) < SpLim) (likely: False) goto caq7e; else goto caq7f;
       caq7e: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       caq7f: // global
           (_caq7a::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_caq7a::I64 == 0) goto caq7c; else goto caq7b;
       caq7c: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       caq7b: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _caq7a::I64;
           R2 = lvl2_raoWU_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl3_raoWV_info" {
     lvl3_raoWV_info:
         const lvl3_raoWV_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.847197442 UTC

[section ""cstring" . lvl4_raoWW_bytes" {
     lvl4_raoWW_bytes:
         I8[] [112,105,112,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.849864674 UTC

[section ""data" . lvl5_raoWX_closure" {
     lvl5_raoWX_closure:
         const lvl5_raoWX_info;
         const 0;
         const 0;
         const 0;
 },
 lvl5_raoWX_entry() //  [R1]
         { []
         }
     {offset
       caq7u: // global
           if ((Sp + -16) < SpLim) (likely: False) goto caq7v; else goto caq7w;
       caq7v: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       caq7w: // global
           (_caq7r::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_caq7r::I64 == 0) goto caq7t; else goto caq7s;
       caq7t: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       caq7s: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _caq7r::I64;
           R2 = lvl4_raoWW_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl5_raoWX_info" {
     lvl5_raoWX_info:
         const lvl5_raoWX_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.853660441 UTC

[section ""data" . lvl6_raoWY_closure" {
     lvl6_raoWY_closure:
         const lvl6_raoWY_info;
         const 0;
 },
 lvl6_raoWY_entry() //  [R2]
         { []
         }
     {offset
       caq7K: // global
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(R2));
           R2 = lvl5_raoWX_closure;
           call Foreign.C.Error.$wlvl_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . lvl6_raoWY_info" {
     lvl6_raoWY_info:
         const lvl6_raoWY_entry;
         const 0;
         const 141733920782;
         const 8589934596;
         const Sap8o_srt+88;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.865529631 UTC

[section ""data" . GHC.Event.Control.newControl1_closure" {
     GHC.Event.Control.newControl1_closure:
         const GHC.Event.Control.newControl1_info;
         const 0;
 },
 sat_sap1i_entry() //  [R1]
         { []
         }
     {offset
       caq8g: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto caq8s; else goto caq8r;
       caq8s: // global
           HpAlloc = 16;
           R1 = R1;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       caq8r: // global
           (_sap1f::I64) = call "capi" arg hints:  [‘signed’,
                                                    ‘signed’]  result hints:  [‘signed’] ghczuwrapperZC17ZCbaseZCSystemziPosixziInternalsZCfcntl(I64[R1 + 7], %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(I64[R1 + 15])));
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_sap1f::I64));
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sap1i_info" {
     sat_sap1i_info:
         const sat_sap1i_entry;
         const 8589934592;
         const 13;
         const 4294967299;
 },
 sat_sap28_entry() //  [R1]
         { []
         }
     {offset
       caq9C: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto caq9O; else goto caq9N;
       caq9O: // global
           HpAlloc = 16;
           R1 = R1;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       caq9N: // global
           (_sap25::I64) = call "capi" arg hints:  [‘signed’,
                                                    ‘signed’]  result hints:  [‘signed’] ghczuwrapperZC17ZCbaseZCSystemziPosixziInternalsZCfcntl(I64[R1 + 15], %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(I64[R1 + 7])));
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_sap25::I64));
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_sap28_info" {
     sat_sap28_info:
         const sat_sap28_entry;
         const 8589934592;
         const 13;
         const 4294967299;
 },
 GHC.Event.Control.newControl1_entry() //  [R2]
         { []
         }
     {offset
       caq9P: // global
           if ((Sp + -80) < SpLim) (likely: False) goto caq9Q; else goto caq9R;
       caq9Q: // global
           R2 = R2;
           R1 = GHC.Event.Control.newControl1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       caq9R: // global
           I64[Sp - 16] = block_caq7V_info;
           _sap0M::P64 = R2;
           R2 = 4;
           R1 = 8;
           P64[Sp - 8] = _sap0M::P64;
           Sp = Sp - 16;
           call stg_newAlignedPinnedByteArray#(R2,
                                               R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.newControl1_info" {
     GHC.Event.Control.newControl1_info:
         const GHC.Event.Control.newControl1_entry;
         const 0;
         const 277081225166862;
         const 8589934597;
         const Sap8o_srt+56;
 },
 _caq7V() //  [R1]
         { []
         }
     {offset
       caq7V: // global
           _sap0U::I64 = R1 + 16;
           (_sap0Y::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [‘signed’] pipe(_sap0U::I64);
           _sap0Z::I64 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_sap0Y::I64));
           if (_sap0Z::I64 == (-1)) goto caqcw; else goto uaqcZ;
       caqcw: // global
           (_sap3t::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R2 = _sap3t::I64;
           Sp = Sp + 16;
           call lvl6_raoWY_entry(R2) args: 8, res: 0, upd: 8;
       uaqcZ: // global
           I64[Sp - 16] = _sap0U::I64;
           I64[Sp - 8] = _sap0Z::I64;
           P64[Sp] = R1;
           Sp = Sp - 16;
           call _caq86() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_caq7V_info" {
     block_caq7V_info:
         const _caq7V;
         const 1;
         const 241896853078046;
         const Sap8o_srt+56;
 },
 _caq86() //  []
         { []
         }
     {offset
       caq86: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto caq9X; else goto caq9W;
       caq9X: // global
           HpAlloc = 24;
           I64[Sp - 8] = block_caq85_info;
           R1 = I64[Sp + 8];
           Sp = Sp - 8;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       caq9W: // global
           _sap0U::I64 = I64[Sp];
           _sap12::I64 = %MO_SS_Conv_W32_W64(I32[_sap0U::I64]);
           _sap15::I64 = %MO_SS_Conv_W32_W64(I32[_sap0U::I64 + 4]);
           (_sap19::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_f_getfl();
           I64[Hp - 16] = sat_sap1i_info;
           I64[Hp - 8] = _sap15::I64;
           I64[Hp] = _sap19::I64;
           I64[Sp - 16] = block_caq8t_info;
           R4 = Hp - 15;
           R3 = System.Posix.Internals.setNonBlockingFD3_closure;
           R2 = System.Posix.Internals.fdFileSize_pred_closure+1;
           I64[Sp - 8] = _sap19::I64;
           I64[Sp] = _sap15::I64;
           I64[Sp + 8] = _sap12::I64;
           Sp = Sp - 16;
           call Foreign.C.Error.throwErrnoIfMinus1Retry2_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 8, upd: 8;
     }
 },
 _caq85() //  [R1]
         { []
         }
     {offset
       caq85: // global
           I64[Sp + 16] = R1;
           Sp = Sp + 8;
           call _caq86() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_caq85_info" {
     block_caq85_info:
         const _caq85;
         const 196;
         const 101159364722718;
         const Sap8o_srt+56;
 },
 _caq8t() //  [R1]
         { []
         }
     {offset
       caq8t: // global
           I64[Sp] = block_caq8v_info;
           R1 = R1;
           if (R1 & 7 != 0) goto uaqd6; else goto caq8w;
       uaqd6: // global
           call _caq8v(R1) args: 0, res: 0, upd: 0;
       caq8w: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_caq8t_info" {
     block_caq8t_info:
         const _caq8t;
         const 453;
         const 101159364722718;
         const Sap8o_srt+56;
 },
 _caq8v() //  [R1]
         { []
         }
     {offset
       caq8v: // global
           _sap12::I64 = I64[Sp + 24];
           _sap15::I64 = I64[Sp + 16];
           _sap1n::I64 = I64[R1 + 7];
           (_sap1r::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_nonblock();
           _sap1s::I64 = _sap1n::I64 | %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_sap1r::I64));
           if (_sap1n::I64 == _sap1s::I64) goto sap1x; else goto caqct;
       caqct: // global
           (_sap3k::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_f_setfl();
           (_sap3p::I64) = call "capi" arg hints:  [‘signed’, ‘signed’,
                                                    ‘signed’]  result hints:  [‘signed’] ghczuwrapperZC16ZCbaseZCSystemziPosixziInternalsZCfcntl(_sap15::I64, %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_sap3k::I64)), _sap1s::I64);
           goto sap1x;
       sap1x: // global
           (_sap1C::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_f_setfd();
           (_sap1G::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_fd_cloexec();
           (_sap1L::I64) = call "capi" arg hints:  [‘signed’, ‘signed’,
                                                    ‘signed’]  result hints:  [‘signed’] ghczuwrapperZC16ZCbaseZCSystemziPosixziInternalsZCfcntl(_sap12::I64, %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_sap1C::I64)), _sap1G::I64);
           if (%MO_SS_Conv_W64_W32(_sap1L::I64) == (-1) :: W32) goto caqcl; else goto caqa2;
       caqcl: // global
           (_sap3e::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R2 = _sap3e::I64;
           Sp = Sp + 48;
           call System.Posix.Internals.setCloseOnExec2_entry(R2) args: 8, res: 0, upd: 8;
       caqa2: // global
           (_sap1R::I64) = call "capi" arg hints:  [‘signed’, ‘signed’,
                                                    ‘signed’]  result hints:  [‘signed’] ghczuwrapperZC16ZCbaseZCSystemziPosixziInternalsZCfcntl(_sap15::I64, %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_sap1C::I64)), _sap1G::I64);
           if (%MO_SS_Conv_W64_W32(_sap1R::I64) == (-1) :: W32) goto caqcf; else goto caqa5;
       caqcf: // global
           (_sap39::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R2 = _sap39::I64;
           Sp = Sp + 48;
           call System.Posix.Internals.setCloseOnExec2_entry(R2) args: 8, res: 0, upd: 8;
       caqa5: // global
           (_sap1W::I64) = call "ccall" arg hints:  [‘signed’,
                                                     ‘signed’]  result hints:  [‘signed’] eventfd(0, 0);
           _sap30::I64 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_sap1W::I64));
           if (_sap30::I64 != (-1)) goto caqbU; else goto caqc5;
       caqbU: // global
           I64[Sp - 24] = _sap1C::I64;
           I64[Sp - 16] = _sap1G::I64;
           I64[Sp - 8] = _sap30::I64;
           I64[Sp] = _sap1r::I64;
           Sp = Sp - 24;
           call _caq9t() args: 0, res: 0, upd: 0;
       caqc5: // global
           I64[Sp - 24] = block_caqc2_info;
           R2 = lvl3_raoWV_closure;
           I64[Sp - 16] = _sap1C::I64;
           I64[Sp - 8] = _sap1G::I64;
           I64[Sp] = _sap1r::I64;
           Sp = Sp - 24;
           call Foreign.C.Error.throwErrno1_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_caq8v_info" {
     block_caq8v_info:
         const _caq8v;
         const 453;
         const 101159364722718;
         const Sap8o_srt+56;
 },
 _caqc2() //  [R1]
         { []
         }
     {offset
       caqc2: // global
           I64[Sp] = block_caqc4_info;
           R1 = R1;
           if (R1 & 7 != 0) goto uaqdb; else goto caqc8;
       uaqdb: // global
           call _caqc4(R1) args: 0, res: 0, upd: 0;
       caqc8: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_caqc2_info" {
     block_caqc2_info:
         const _caqc2;
         const 4040;
         const 30064771102;
         const Sap8o_srt+136;
 },
 _caqc4() //  [R1]
         { []
         }
     {offset
       caqc4: // global
           I64[Sp] = I64[Sp + 8];
           I64[Sp + 8] = I64[Sp + 16];
           I64[Sp + 16] = I64[R1 + 7];
           call _caq9t() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_caqc4_info" {
     block_caqc4_info:
         const _caqc4;
         const 4040;
         const 30064771102;
         const Sap8o_srt+136;
 },
 _caq9t() //  []
         { []
         }
     {offset
       caq9t: // global
           Hp = Hp + 24;
           _sap1Z::I64 = I64[Sp + 16];
           if (Hp > HpLim) (likely: False) goto caqac; else goto caqab;
       caqac: // global
           HpAlloc = 24;
           I64[Sp - 8] = block_caq9s_info;
           R1 = _sap1Z::I64;
           Sp = Sp - 8;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       caqab: // global
           I64[Hp - 16] = sat_sap28_info;
           I64[Hp - 8] = I64[Sp + 32];
           I64[Hp] = _sap1Z::I64;
           I64[Sp - 8] = block_caqa7_info;
           R4 = Hp - 15;
           R3 = System.Posix.Internals.setNonBlockingFD3_closure;
           R2 = System.Posix.Internals.fdFileSize_pred_closure+1;
           Sp = Sp - 8;
           call Foreign.C.Error.throwErrnoIfMinus1Retry2_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 8, upd: 8;
     }
 },
 _caq9s() //  [R1]
         { []
         }
     {offset
       caq9s: // global
           I64[Sp + 24] = R1;
           Sp = Sp + 8;
           call _caq9t() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_caq9s_info" {
     block_caq9s_info:
         const _caq9s;
         const 8137;
         const 30064771102;
         const Sap8o_srt+136;
 },
 _caqa7() //  [R1]
         { []
         }
     {offset
       caqa7: // global
           I64[Sp] = block_caqa9_info;
           R1 = R1;
           if (R1 & 7 != 0) goto uaqd9; else goto caqae;
       uaqd9: // global
           call _caqa9(R1) args: 0, res: 0, upd: 0;
       caqae: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_caqa7_info" {
     block_caqa7_info:
         const _caqa7;
         const 8137;
         const 4294967326;
         const Sap8o_srt+144;
 },
 _caqa9() //  [R1]
         { []
         }
     {offset
       caqa9: // global
           _sap0M::P64 = P64[Sp + 72];
           _sap1C::I64 = I64[Sp + 8];
           _sap1G::I64 = I64[Sp + 16];
           _sap1Z::I64 = I64[Sp + 24];
           _sap2d::I64 = I64[R1 + 7];
           _sap2e::I64 = _sap2d::I64 | %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(I64[Sp + 32]));
           if (_sap2d::I64 == _sap2e::I64) goto sap2j; else goto caqbO;
       caqbO: // global
           (_sap2U::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_f_setfl();
           (_sap2Z::I64) = call "capi" arg hints:  [‘signed’, ‘signed’,
                                                    ‘signed’]  result hints:  [‘signed’] ghczuwrapperZC16ZCbaseZCSystemziPosixziInternalsZCfcntl(_sap1Z::I64, %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_sap2U::I64)), _sap2e::I64);
           goto sap2j;
       sap2j: // global
           (_sap2p::I64) = call "capi" arg hints:  [‘signed’, ‘signed’,
                                                    ‘signed’]  result hints:  [‘signed’] ghczuwrapperZC16ZCbaseZCSystemziPosixziInternalsZCfcntl(_sap1Z::I64, %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_sap1C::I64)), _sap1G::I64);
           if (%MO_SS_Conv_W64_W32(_sap2p::I64) == (-1) :: W32) goto caqbG; else goto caqaT;
       caqbG: // global
           (_sap2O::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R2 = _sap2O::I64;
           Sp = Sp + 80;
           call System.Posix.Internals.setCloseOnExec2_entry(R2) args: 8, res: 0, upd: 8;
       caqaT: // global
           I64[Sp + 16] = block_caqaR_info;
           R1 = _sap0M::P64;
           Sp = Sp + 16;
           if (R1 & 7 != 0) goto uaqda; else goto caqaV;
       uaqda: // global
           call _caqaR(R1) args: 0, res: 0, upd: 0;
       caqaV: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_caqa9_info" {
     block_caqa9_info:
         const _caqa9;
         const 8137;
         const 4294967326;
         const Sap8o_srt+144;
 },
 _caqaR() //  [R1]
         { []
         }
     {offset
       caqaR: // global
           if (R1 & 7 == 1) goto caqbe; else goto caqbA;
       caqbe: // global
           I64[Sp] = block_caqaZ_info;
           R1 = GHC.Types.False_closure+1;
           call stg_newMutVar#(R1) args: 8, res: 8, upd: 8;
       caqbA: // global
           call "ccall" arg hints:  [‘signed’]  result hints:  [] setIOManagerWakeupFd(I64[Sp + 8]);
           I64[Sp] = block_caqbm_info;
           R1 = GHC.Types.False_closure+1;
           call stg_newMutVar#(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_caqaR_info" {
     block_caqaR_info:
         const _caqaR;
         const 6087;
         const 30;
 },
 _caqaZ() //  [R1]
         { []
         }
     {offset
       caqaZ: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto caqbh; else goto caqbg;
       caqbh: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       caqbg: // global
           _sap12::I64 = I64[Sp + 40];
           _sap15::I64 = I64[Sp + 32];
           _sap1Z::I64 = I64[Sp + 8];
           call MO_Touch(P64[Sp + 48]);
           I64[Hp - 40] = GHC.Event.Control.W_con_info;
           P64[Hp - 32] = GHC.Types.False_closure+1;
           P64[Hp - 24] = R1;
           I64[Hp - 16] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_sap12::I64));
           I64[Hp - 8] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_sap15::I64));
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_sap1Z::I64));
           R1 = Hp - 39;
           Sp = Sp + 64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_caqaZ_info" {
     block_caqaZ_info:
         const _caqaZ;
         const 6087;
         const 30;
 },
 _caqbm() //  [R1]
         { []
         }
     {offset
       caqbm: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto caqbD; else goto caqbC;
       caqbD: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       caqbC: // global
           _sap12::I64 = I64[Sp + 40];
           _sap15::I64 = I64[Sp + 32];
           _sap1Z::I64 = I64[Sp + 8];
           call MO_Touch(P64[Sp + 48]);
           I64[Hp - 40] = GHC.Event.Control.W_con_info;
           P64[Hp - 32] = GHC.Types.True_closure+2;
           P64[Hp - 24] = R1;
           I64[Hp - 16] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_sap12::I64));
           I64[Hp - 8] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_sap15::I64));
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_sap1Z::I64));
           R1 = Hp - 39;
           Sp = Sp + 64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_caqbm_info" {
     block_caqbm_info:
         const _caqbm;
         const 6087;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.897562499 UTC

[section ""data" . GHC.Event.Control.newControl_closure" {
     GHC.Event.Control.newControl_closure:
         const GHC.Event.Control.newControl_info;
         const 0;
 },
 GHC.Event.Control.newControl_entry() //  [R2]
         { []
         }
     {offset
       caqeL: // global
           R2 = R2;
           call GHC.Event.Control.newControl1_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.newControl_info" {
     GHC.Event.Control.newControl_info:
         const GHC.Event.Control.newControl_entry;
         const 0;
         const 4294967310;
         const 8589934597;
         const Sap8o_srt+160;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.900540366 UTC

[section ""cstring" . lvl7_raoWZ_bytes" {
     lvl7_raoWZ_bytes:
         I8[] [102,97,105,108,101,100,32,116,111,32,114,101,97,100,32,115,105,103,105,110,102,111,95,116]
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.903308207 UTC

[section ""data" . GHC.Event.Control.readControlMessage4_closure" {
     GHC.Event.Control.readControlMessage4_closure:
         const GHC.Event.Control.readControlMessage4_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Control.readControlMessage4_entry() //  [R1]
         { []
         }
     {offset
       caqf1: // global
           if ((Sp + -24) < SpLim) (likely: False) goto caqf2; else goto caqf3;
       caqf2: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       caqf3: // global
           (_caqeW::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_caqeW::I64 == 0) goto caqeY; else goto caqeX;
       caqeY: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       caqeX: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _caqeW::I64;
           I64[Sp - 24] = block_caqeZ_info;
           R2 = lvl7_raoWZ_bytes;
           Sp = Sp - 24;
           call GHC.CString.unpackCString#_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Event.Control.readControlMessage4_info" {
     GHC.Event.Control.readControlMessage4_info:
         const GHC.Event.Control.readControlMessage4_entry;
         const 0;
         const 4294967317;
         const Sap8o_srt+184;
 },
 _caqeZ() //  [R1]
         { []
         }
     {offset
       caqeZ: // global
           R2 = R1;
           Sp = Sp + 8;
           call GHC.Err.errorWithoutStackTrace_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_caqeZ_info" {
     block_caqeZ_info:
         const _caqeZ;
         const 0;
         const 4294967326;
         const Sap8o_srt+184;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.90819831 UTC

[section ""cstring" . lvl8_raoX0_bytes" {
     lvl8_raoX0_bytes:
         I8[] [114,101,97,100,67,111,110,116,114,111,108,77,101,115,115,97,103,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.910407513 UTC

[section ""data" . lvl9_raoX1_closure" {
     lvl9_raoX1_closure:
         const lvl9_raoX1_info;
         const 0;
         const 0;
         const 0;
 },
 lvl9_raoX1_entry() //  [R1]
         { []
         }
     {offset
       caqfo: // global
           if ((Sp + -16) < SpLim) (likely: False) goto caqfp; else goto caqfq;
       caqfp: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       caqfq: // global
           (_caqfl::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_caqfl::I64 == 0) goto caqfn; else goto caqfm;
       caqfn: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       caqfm: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _caqfl::I64;
           R2 = lvl8_raoX0_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl9_raoX1_info" {
     lvl9_raoX1_info:
         const lvl9_raoX1_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.914571681 UTC

[section ""data" . GHC.Event.Control.readControlMessage3_closure" {
     GHC.Event.Control.readControlMessage3_closure:
         const GHC.Event.Control.readControlMessage3_info;
         const 0;
 },
 GHC.Event.Control.readControlMessage3_entry() //  [R2]
         { []
         }
     {offset
       caqfE: // global
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(R2));
           R2 = lvl9_raoX1_closure;
           call Foreign.C.Error.$wlvl_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.readControlMessage3_info" {
     GHC.Event.Control.readControlMessage3_info:
         const GHC.Event.Control.readControlMessage3_entry;
         const 0;
         const 35188667056142;
         const 8589934596;
         const Sap8o_srt+88;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.917745955 UTC

[section ""cstring" . lvl10_raoX2_bytes" {
     lvl10_raoX2_bytes:
         I8[] [114,101,97,100,87,97,107,101,117,112,77,101,115,115,97,103,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.919948854 UTC

[section ""data" . lvl11_raoX3_closure" {
     lvl11_raoX3_closure:
         const lvl11_raoX3_info;
         const 0;
         const 0;
         const 0;
 },
 lvl11_raoX3_entry() //  [R1]
         { []
         }
     {offset
       caqfS: // global
           if ((Sp + -16) < SpLim) (likely: False) goto caqfT; else goto caqfU;
       caqfT: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       caqfU: // global
           (_caqfP::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_caqfP::I64 == 0) goto caqfR; else goto caqfQ;
       caqfR: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       caqfQ: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _caqfP::I64;
           R2 = lvl10_raoX2_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl11_raoX3_info" {
     lvl11_raoX3_info:
         const lvl11_raoX3_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.923706563 UTC

[section ""data" . GHC.Event.Control.readControlMessage2_closure" {
     GHC.Event.Control.readControlMessage2_closure:
         const GHC.Event.Control.readControlMessage2_info;
         const 0;
 },
 GHC.Event.Control.readControlMessage2_entry() //  [R2]
         { []
         }
     {offset
       caqg8: // global
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(R2));
           R2 = lvl11_raoX3_closure;
           call Foreign.C.Error.$wlvl_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.readControlMessage2_info" {
     GHC.Event.Control.readControlMessage2_info:
         const GHC.Event.Control.readControlMessage2_entry;
         const 0;
         const 70373039144974;
         const 8589934596;
         const Sap8o_srt+88;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.931478802 UTC

[section ""data" . GHC.Event.Control.$wreadControlMessage_closure" {
     GHC.Event.Control.$wreadControlMessage_closure:
         const GHC.Event.Control.$wreadControlMessage_info;
         const 0;
 },
 GHC.Event.Control.$wreadControlMessage_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       caqgo: // global
           if ((Sp + -56) < SpLim) (likely: False) goto caqgp; else goto caqgq;
       caqgp: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Control.$wreadControlMessage_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       caqgq: // global
           if (R4 == R2) goto caqgn; else goto caqgm;
       caqgn: // global
           I64[Sp - 16] = block_caqhJ_info;
           R1 = 8;
           I64[Sp - 8] = R4;
           Sp = Sp - 16;
           call stg_newPinnedByteArray#(R1) args: 8, res: 8, upd: 8;
       caqgm: // global
           I64[Sp - 16] = block_caqgs_info;
           R2 = 1;
           R1 = 1;
           I64[Sp - 8] = R4;
           Sp = Sp - 16;
           call stg_newAlignedPinnedByteArray#(R2,
                                               R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.$wreadControlMessage_info" {
     GHC.Event.Control.$wreadControlMessage_info:
         const GHC.Event.Control.$wreadControlMessage_entry;
         const 0;
         const 133143986190;
         const 17179869202;
         const Sap8o_srt+208;
 },
 _caqhJ() //  [R1]
         { []
         }
     {offset
       caqhJ: // global
           (_sap4I::I64) = call "capi" arg hints:  [‘signed’,
                                                    PtrHint,]  result hints:  [‘signed’] ghczuwrapperZC22ZCbaseZCSystemziPosixziInternalsZCread(%MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(I64[Sp + 8])), R1 + 16, 8);
           if (_sap4I::I64 == (-1)) goto caqhZ; else goto caqhY;
       caqhZ: // global
           (_sap4O::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R2 = _sap4O::I64;
           Sp = Sp + 16;
           call GHC.Event.Control.readControlMessage2_entry(R2) args: 8, res: 0, upd: 8;
       caqhY: // global
           call MO_Touch(R1);
           R1 = GHC.Event.Control.CMsgWakeup_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_caqhJ_info" {
     block_caqhJ_info:
         const _caqhJ;
         const 65;
         const 4294967326;
         const Sap8o_srt+224;
 },
 _caqgs() //  [R1]
         { []
         }
     {offset
       caqgs: // global
           _sap3N::I64 = R1 + 16;
           (_sap3S::I64) = call "capi" arg hints:  [‘signed’,
                                                    PtrHint,]  result hints:  [‘signed’] ghczuwrapperZC22ZCbaseZCSystemziPosixziInternalsZCread(%MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(I64[Sp + 8])), _sap3N::I64, 1);
           if (_sap3S::I64 == (-1)) goto caqhH; else goto caqhG;
       caqhH: // global
           (_sap4v::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R2 = _sap4v::I64;
           Sp = Sp + 16;
           call GHC.Event.Control.readControlMessage3_entry(R2) args: 8, res: 0, upd: 8;
       caqhG: // global
           _sap3X::I64 = %MO_UU_Conv_W8_W64(I8[_sap3N::I64]);
           if (_sap3X::I64 == 254) goto caqhD; else goto uaqia;
       caqhD: // global
           call MO_Touch(R1);
           R1 = GHC.Event.Control.CMsgDie_closure+2;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       uaqia: // global
           if (_sap3X::I64 == 255) goto caqhE; else goto caqgJ;
       caqhE: // global
           call MO_Touch(R1);
           R1 = GHC.Event.Control.CMsgWakeup_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       caqgJ: // global
           I64[Sp - 16] = block_caqgM_info;
           I64[Sp - 8] = _sap3X::I64;
           P64[Sp] = R1;
           Sp = Sp - 16;
           _uaqid::P64 = CurrentTSO;
           I64[I64[_uaqid::P64 + 24] + 16] = Sp;
           _uaqie::I64 = CurrentNursery;
           P64[_uaqie::I64 + 8] = Hp + 8;
           I64[_uaqid::P64 + 104] = I64[_uaqid::P64 + 104] - ((Hp + 8) - I64[_uaqie::I64]);
           (_uaqib::I64) = call "ccall" arg hints:  [PtrHint,]  result hints:  [PtrHint] suspendThread(BaseReg, 0);
           (_sap41::I64) = call "ccall" arg hints:  []  result hints:  [] __hscore_sizeof_siginfo_t();
           (_uaqic::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [PtrHint] resumeThread(_uaqib::I64);
           BaseReg = _uaqic::I64;
           _uaqif::P64 = CurrentTSO;
           _uaqig::P64 = I64[_uaqif::P64 + 24];
           Sp = I64[_uaqig::P64 + 16];
           SpLim = _uaqig::P64 + 192;
           HpAlloc = 0;
           _uaqih::I64 = CurrentNursery;
           _uaqii::I64 = I64[_uaqih::I64 + 8];
           Hp = _uaqii::I64 - 8;
           _uaqij::I64 = I64[_uaqih::I64];
           HpLim = _uaqij::I64 + ((%MO_SS_Conv_W32_W64(I32[_uaqih::I64 + 48]) << 12) - 1);
           I64[_uaqif::P64 + 104] = I64[_uaqif::P64 + 104] + (_uaqii::I64 - _uaqij::I64);
           R1 = _sap41::I64;
           call (I64[I64[Sp]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_caqgs_info" {
     block_caqgs_info:
         const _caqgs;
         const 65;
         const 107374182430;
         const Sap8o_srt+208;
 },
 _caqgM() //  [R1]
         { []
         }
     {offset
       caqgM: // global
           if (%MO_S_Ge_W64(R1, 0)) goto caqhf; else goto caqhC;
       caqhf: // global
           I64[Sp - 16] = block_caqgV_info;
           _sap41::I64 = R1;
           _sap42::I64 = R1;
           R1 = GHC.ForeignPtr.NoFinalizers_closure+1;
           I64[Sp - 8] = _sap42::I64;
           I64[Sp] = _sap41::I64;
           Sp = Sp - 16;
           call stg_newMutVar#(R1) args: 8, res: 8, upd: 8;
       caqhC: // global
           R1 = GHC.ForeignPtr.mallocForeignPtrBytes2_closure;
           Sp = Sp + 32;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_caqgM_info" {
     block_caqgM_info:
         const _caqgM;
         const 323;
         const 73014444062;
         const Sap8o_srt+208;
 },
 _caqgV() //  [R1]
         { []
         }
     {offset
       caqgV: // global
           I64[Sp] = block_caqgX_info;
           _sap46::P64 = R1;
           R1 = I64[Sp + 8];
           P64[Sp + 8] = _sap46::P64;
           call stg_newPinnedByteArray#(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_caqgV_info" {
     block_caqgV_info:
         const _caqgV;
         const 1477;
         const 4294967326;
         const Sap8o_srt+240;
 },
 _caqgX() //  [R1]
         { []
         }
     {offset
       caqgX: // global
           _sap41::I64 = I64[Sp + 16];
           _sap4a::I64 = R1 + 16;
           (_sap4f::I64) = call "capi" arg hints:  [‘signed’,
                                                    PtrHint,]  result hints:  [‘signed’] ghczuwrapperZC22ZCbaseZCSystemziPosixziInternalsZCread(%MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(I64[Sp + 40])), _sap4a::I64, _sap41::I64);
           I64[Sp - 8] = block_caqh9_info;
           R2 = _sap41::I64;
           I64[Sp] = _sap4f::I64;
           I64[Sp + 16] = _sap4a::I64;
           P64[Sp + 40] = R1;
           Sp = Sp - 8;
           call GHC.Integer.Type.wordToInteger_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_caqgX_info" {
     block_caqgX_info:
         const _caqgX;
         const 1413;
         const 4294967326;
         const Sap8o_srt+240;
 },
 _caqh9() //  [R1]
         { []
         }
     {offset
       caqh9: // global
           I64[Sp] = block_caqhd_info;
           R2 = R1;
           call GHC.Integer.Type.integerToInt_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_caqh9_info" {
     block_caqh9_info:
         const _caqh9;
         const 838;
         const 4294967326;
         const Sap8o_srt+240;
 },
 _caqhd() //  [R1]
         { []
         }
     {offset
       caqhd: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto caqho; else goto caqhn;
       caqho: // global
           HpAlloc = 56;
           R1 = R1;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       caqhn: // global
           if (I64[Sp + 8] == R1) goto caqhA; else goto caqhB;
       caqhA: // global
           I64[Hp - 48] = GHC.ForeignPtr.MallocPtr_con_info;
           P64[Hp - 40] = P64[Sp + 48];
           P64[Hp - 32] = P64[Sp + 16];
           _sap3M::P64 = P64[Sp + 40];
           _sap3X::I64 = I64[Sp + 32];
           _sap4a::I64 = I64[Sp + 24];
           _caqhs::P64 = Hp - 46;
           call MO_Touch(_caqhs::P64);
           call MO_Touch(_sap3M::P64);
           I64[Hp - 24] = GHC.Event.Control.CMsgSignal_con_info;
           P64[Hp - 16] = _caqhs::P64;
           I64[Hp - 8] = _sap4a::I64;
           I64[Hp] = _sap3X::I64;
           R1 = Hp - 21;
           Sp = Sp + 56;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       caqhB: // global
           Hp = Hp - 56;
           R1 = GHC.Event.Control.readControlMessage4_closure;
           Sp = Sp + 56;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_caqhd_info" {
     block_caqhd_info:
         const _caqhd;
         const 838;
         const 4294967326;
         const Sap8o_srt+240;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.949310405 UTC

[section ""data" . GHC.Event.Control.readControlMessage1_closure" {
     GHC.Event.Control.readControlMessage1_closure:
         const GHC.Event.Control.readControlMessage1_info;
         const 0;
 },
 GHC.Event.Control.readControlMessage1_entry() //  [R2, R3]
         { []
         }
     {offset
       caqjk: // global
           if ((Sp + -24) < SpLim) (likely: False) goto caqjo; else goto caqjp;
       caqjo: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Control.readControlMessage1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       caqjp: // global
           I64[Sp - 16] = block_caqjh_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto uaqjx; else goto caqji;
       uaqjx: // global
           call _caqjh(R1) args: 0, res: 0, upd: 0;
       caqji: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.readControlMessage1_info" {
     GHC.Event.Control.readControlMessage1_info:
         const GHC.Event.Control.readControlMessage1_entry;
         const 0;
         const 73014444046;
         const 12884901903;
         const Sap8o_srt+216;
 },
 _caqjh() //  [R1]
         { []
         }
     {offset
       caqjh: // global
           I64[Sp - 8] = block_caqjn_info;
           _sap4Y::P64 = P64[R1 + 15];
           _sap4W::I64 = I64[R1 + 39];
           R1 = P64[Sp + 8];
           P64[Sp] = _sap4Y::P64;
           I64[Sp + 8] = _sap4W::I64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto uaqjw; else goto caqjr;
       uaqjw: // global
           call _caqjn(R1) args: 0, res: 0, upd: 0;
       caqjr: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_caqjh_info" {
     block_caqjh_info:
         const _caqjh;
         const 1;
         const 4294967326;
         const Sap8o_srt+216;
 },
 _caqjn() //  [R1]
         { []
         }
     {offset
       caqjn: // global
           R4 = I64[R1 + 7];
           R3 = P64[Sp + 8];
           R2 = I64[Sp + 16];
           Sp = Sp + 24;
           call GHC.Event.Control.$wreadControlMessage_entry(R4,
                                                             R3,
                                                             R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_caqjn_info" {
     block_caqjn_info:
         const _caqjn;
         const 130;
         const 4294967326;
         const Sap8o_srt+216;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.956009259 UTC

[section ""data" . GHC.Event.Control.readControlMessage_closure" {
     GHC.Event.Control.readControlMessage_closure:
         const GHC.Event.Control.readControlMessage_info;
         const 0;
 },
 GHC.Event.Control.readControlMessage_entry() //  [R2, R3]
         { []
         }
     {offset
       caqjP: // global
           R3 = R3;
           R2 = R2;
           call GHC.Event.Control.readControlMessage1_entry(R3,
                                                            R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.readControlMessage_info" {
     GHC.Event.Control.readControlMessage_info:
         const GHC.Event.Control.readControlMessage_entry;
         const 0;
         const 4294967310;
         const 12884901903;
         const Sap8o_srt+248;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.960426457 UTC

[section ""data" . GHC.Event.Control.W_closure" {
     GHC.Event.Control.W_closure:
         const GHC.Event.Control.W_info;
 },
 GHC.Event.Control.W_slow() //  [R1]
         { []
         }
     {offset
       caqjX: // global
           R6 = P64[Sp + 32];
           R5 = P64[Sp + 24];
           R4 = I64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = I64[Sp];
           R1 = R1;
           Sp = Sp + 40;
           call GHC.Event.Control.W_entry(R6,
                                          R5,
                                          R4,
                                          R3,
                                          R2,
                                          R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.Event.Control.W_entry() //  [R2, R3, R4, R5, R6]
         { []
         }
     {offset
       caqk2: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto caqk6; else goto caqk5;
       caqk6: // global
           HpAlloc = 48;
           R1 = GHC.Event.Control.W_closure;
           I64[Sp - 40] = R2;
           I64[Sp - 32] = R3;
           I64[Sp - 24] = R4;
           P64[Sp - 16] = R5;
           P64[Sp - 8] = R6;
           Sp = Sp - 40;
           call (stg_gc_fun)(R1) args: 48, res: 0, upd: 8;
       caqk5: // global
           I64[Hp - 40] = GHC.Event.Control.W_con_info;
           P64[Hp - 32] = R5;
           P64[Hp - 24] = R6;
           I64[Hp - 16] = R2;
           I64[Hp - 8] = R3;
           I64[Hp] = R4;
           R1 = Hp - 39;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.W_info" {
     GHC.Event.Control.W_info:
         const GHC.Event.Control.W_entry;
         const 0;
         const 14;
         const 21474836480;
         const 0;
         const 453;
         const GHC.Event.Control.W_slow;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.964766185 UTC

[section ""data" . GHC.Event.Control.CMsgWakeup_closure" {
     GHC.Event.Control.CMsgWakeup_closure:
         const GHC.Event.Control.CMsgWakeup_con_info;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.966962383 UTC

[section ""data" . GHC.Event.Control.CMsgDie_closure" {
     GHC.Event.Control.CMsgDie_closure:
         const GHC.Event.Control.CMsgDie_con_info;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.969223214 UTC

[section ""data" . GHC.Event.Control.CMsgSignal_closure" {
     GHC.Event.Control.CMsgSignal_closure:
         const GHC.Event.Control.CMsgSignal_info;
 },
 GHC.Event.Control.CMsgSignal_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       caqkl: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto caqkp; else goto caqko;
       caqkp: // global
           HpAlloc = 32;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Control.CMsgSignal_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       caqko: // global
           I64[Hp - 24] = GHC.Event.Control.CMsgSignal_con_info;
           P64[Hp - 16] = R3;
           I64[Hp - 8] = R2;
           I64[Hp] = R4;
           R1 = Hp - 21;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.CMsgSignal_info" {
     GHC.Event.Control.CMsgSignal_info:
         const GHC.Event.Control.CMsgSignal_entry;
         const 0;
         const 14;
         const 12884901906;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.972712935 UTC

[section ""cstring" . iapNp_str" {
     iapNp_str:
         I8[] [98,97,115,101,58,71,72,67,46,69,118,101,110,116,46,67,111,110,116,114,111,108,46,87]
 },
 GHC.Event.Control.W_con_entry() //  [R1]
         { []
         }
     {offset
       caqkv: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.W_con_info" {
     GHC.Event.Control.W_con_info:
         const GHC.Event.Control.W_con_entry;
         const 12884901890;
         const 1;
         const iapNp_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.975855707 UTC

[section ""cstring" . iapNr_str" {
     iapNr_str:
         I8[] [98,97,115,101,58,71,72,67,46,69,118,101,110,116,46,67,111,110,116,114,111,108,46,67,77,115,103,87,97,107,101,117,112]
 },
 GHC.Event.Control.CMsgWakeup_con_entry() //  [R1]
         { []
         }
     {offset
       caqkB: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.CMsgWakeup_con_info" {
     GHC.Event.Control.CMsgWakeup_con_info:
         const GHC.Event.Control.CMsgWakeup_con_entry;
         const 4294967296;
         const 3;
         const iapNr_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.979033631 UTC

[section ""cstring" . iapNt_str" {
     iapNt_str:
         I8[] [98,97,115,101,58,71,72,67,46,69,118,101,110,116,46,67,111,110,116,114,111,108,46,67,77,115,103,68,105,101]
 },
 GHC.Event.Control.CMsgDie_con_entry() //  [R1]
         { []
         }
     {offset
       caqkH: // global
           R1 = R1 + 2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.CMsgDie_con_info" {
     GHC.Event.Control.CMsgDie_con_info:
         const GHC.Event.Control.CMsgDie_con_entry;
         const 4294967296;
         const 4294967299;
         const iapNt_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.98221307 UTC

[section ""cstring" . iapNv_str" {
     iapNv_str:
         I8[] [98,97,115,101,58,71,72,67,46,69,118,101,110,116,46,67,111,110,116,114,111,108,46,67,77,115,103,83,105,103,110,97,108]
 },
 GHC.Event.Control.CMsgSignal_con_entry() //  [R1]
         { []
         }
     {offset
       caqkN: // global
           R1 = R1 + 3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.CMsgSignal_con_info" {
     GHC.Event.Control.CMsgSignal_con_info:
         const GHC.Event.Control.CMsgSignal_con_entry;
         const 8589934593;
         const 8589934593;
         const iapNv_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:24.986086334 UTC

[section ""relreadonly" . Sap8o_srt" {
     Sap8o_srt:
         const GHC.Ptr.$w$cshowsPrec_closure;
         const GHC.Event.Control.$fShowControlMessage3_closure;
         const GHC.Event.Control.$fShowControlMessage_$cshowsPrec_closure;
         const GHC.Event.Control.$fShowControlMessage5_closure;
         const GHC.Event.Control.$fShowControlMessage7_closure;
         const GHC.Event.Control.$fShowControlMessage_$cshow_closure;
         const GHC.Event.Control.$fShowControlMessage1_closure;
         const Foreign.C.Error.throwErrno1_closure;
         const GHC.Event.Control.$wsendWakeup_closure;
         const GHC.Event.Control.sendWakeup2_closure;
         const GHC.Event.Control.sendWakeup1_closure;
         const Foreign.C.Error.$wlvl_closure;
         const lvl1_raoWT_closure;
         const GHC.Event.Control.$wsendDie_closure;
         const GHC.Event.Control.sendDie2_closure;
         const GHC.Event.Control.sendDie1_closure;
         const lvl5_raoWX_closure;
         const Foreign.C.Error.throwErrnoIfMinus1Retry2_closure;
         const System.Posix.Internals.setCloseOnExec2_closure;
         const System.Posix.Internals.setNonBlockingFD3_closure;
         const GHC.Event.Control.newControl1_closure;
         const lvl3_raoWV_closure;
         const lvl6_raoWY_closure;
         const GHC.Err.errorWithoutStackTrace_closure;
         const lvl9_raoX1_closure;
         const lvl11_raoX3_closure;
         const GHC.ForeignPtr.mallocForeignPtrBytes2_closure;
         const GHC.Event.Control.$wreadControlMessage_closure;
         const GHC.Event.Control.readControlMessage2_closure;
         const GHC.Event.Control.readControlMessage3_closure;
         const GHC.Event.Control.readControlMessage4_closure;
         const GHC.Event.Control.readControlMessage1_closure;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.380768462 UTC

[]


==================== Raw Cmm ====================
2018-03-16 16:05:26.384979298 UTC

[section ""data" . GHC.Event.Control.$WW_closure" {
     GHC.Event.Control.$WW_closure:
         const GHC.Event.Control.$WW_info;
 },
 GHC.Event.Control.$WW_entry() //  [R2, R3, R4, R5, R6]
         { []
         }
     {offset
       caqsX: // global
           if ((Sp + -40) < SpLim) (likely: False) goto caqtl; else goto caqtm;
       caqtl: // global
           R6 = R6;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Control.$WW_closure;
           call (stg_gc_fun)(R6, R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       caqtm: // global
           I64[Sp - 40] = block_caqsU_info;
           R1 = R2;
           P64[Sp - 32] = R3;
           P64[Sp - 24] = R4;
           P64[Sp - 16] = R5;
           P64[Sp - 8] = R6;
           Sp = Sp - 40;
           if (R1 & 7 != 0) goto uaqtv; else goto caqsV;
       uaqtv: // global
           call _caqsU(R1) args: 0, res: 0, upd: 0;
       caqsV: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.$WW_info" {
     GHC.Event.Control.$WW_info:
         const GHC.Event.Control.$WW_entry;
         const 0;
         const 14;
         const 21474836505;
 },
 _caqsU() //  [R1]
         { []
         }
     {offset
       caqsU: // global
           I64[Sp] = block_caqt0_info;
           _saql0::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _saql0::I64;
           if (R1 & 7 != 0) goto uaqtu; else goto caqt1;
       uaqtu: // global
           call _caqt0(R1) args: 0, res: 0, upd: 0;
       caqt1: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_caqsU_info" {
     block_caqsU_info:
         const _caqsU;
         const 4;
         const 30;
 },
 _caqt0() //  [R1]
         { []
         }
     {offset
       caqt0: // global
           I64[Sp] = block_caqt5_info;
           _saql2::I64 = I64[R1 + 7];
           R1 = P64[Sp + 16];
           I64[Sp + 16] = _saql2::I64;
           if (R1 & 7 != 0) goto uaqtw; else goto caqt6;
       uaqtw: // global
           call _caqt5(R1) args: 0, res: 0, upd: 0;
       caqt6: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_caqt0_info" {
     block_caqt0_info:
         const _caqt0;
         const 68;
         const 30;
 },
 _caqt5() //  [R1]
         { []
         }
     {offset
       caqt5: // global
           I64[Sp] = block_caqta_info;
           _saql4::I64 = I64[R1 + 7];
           R1 = P64[Sp + 24];
           I64[Sp + 24] = _saql4::I64;
           if (R1 & 7 != 0) goto uaqtx; else goto caqtb;
       uaqtx: // global
           call _caqta(R1) args: 0, res: 0, upd: 0;
       caqtb: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_caqt5_info" {
     block_caqt5_info:
         const _caqt5;
         const 196;
         const 30;
 },
 _caqta() //  [R1]
         { []
         }
     {offset
       caqta: // global
           I64[Sp] = block_caqtf_info;
           _saql5::P64 = R1;
           R1 = P64[Sp + 32];
           P64[Sp + 32] = _saql5::P64;
           if (R1 & 7 != 0) goto uaqty; else goto caqtg;
       uaqty: // global
           call _caqtf(R1) args: 0, res: 0, upd: 0;
       caqtg: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_caqta_info" {
     block_caqta_info:
         const _caqta;
         const 452;
         const 30;
 },
 _caqtf() //  [R1]
         { []
         }
     {offset
       caqtf: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto caqtt; else goto caqts;
       caqtt: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       caqts: // global
           _saql7::P64 = P64[R1 + 7];
           I64[Hp - 40] = GHC.Event.Control.W_con_info;
           P64[Hp - 32] = P64[Sp + 32];
           P64[Hp - 24] = _saql7::P64;
           I64[Hp - 16] = I64[Sp + 8];
           I64[Hp - 8] = I64[Sp + 16];
           I64[Hp] = I64[Sp + 24];
           R1 = Hp - 39;
           Sp = Sp + 40;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_caqtf_info" {
     block_caqtf_info:
         const _caqtf;
         const 452;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.399202457 UTC

[section ""data" . GHC.Event.Control.$WCMsgSignal_closure" {
     GHC.Event.Control.$WCMsgSignal_closure:
         const GHC.Event.Control.$WCMsgSignal_info;
 },
 GHC.Event.Control.$WCMsgSignal_entry() //  [R2, R3]
         { []
         }
     {offset
       caqug: // global
           if ((Sp + -24) < SpLim) (likely: False) goto caqup; else goto caquq;
       caqup: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Control.$WCMsgSignal_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       caquq: // global
           I64[Sp - 16] = block_caqud_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto uaquw; else goto caque;
       uaquw: // global
           call _caqud(R1) args: 0, res: 0, upd: 0;
       caque: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.$WCMsgSignal_info" {
     GHC.Event.Control.$WCMsgSignal_info:
         const GHC.Event.Control.$WCMsgSignal_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _caqud() //  [R1]
         { []
         }
     {offset
       caqud: // global
           I64[Sp - 8] = block_caquj_info;
           _saqlc::P64 = P64[R1 + 7];
           _saqlb::I64 = I64[R1 + 15];
           R1 = P64[Sp + 8];
           P64[Sp] = _saqlc::P64;
           I64[Sp + 8] = _saqlb::I64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto uaquv; else goto caquk;
       uaquv: // global
           call _caquj(R1) args: 0, res: 0, upd: 0;
       caquk: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_caqud_info" {
     block_caqud_info:
         const _caqud;
         const 1;
         const 30;
 },
 _caquj() //  [R1]
         { []
         }
     {offset
       caquj: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto caquu; else goto caqut;
       caquu: // global
           HpAlloc = 32;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       caqut: // global
           _saqle::I64 = I64[R1 + 7];
           I64[Hp - 24] = GHC.Event.Control.CMsgSignal_con_info;
           P64[Hp - 16] = P64[Sp + 8];
           I64[Hp - 8] = I64[Sp + 16];
           I64[Hp] = _saqle::I64;
           R1 = Hp - 21;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_caquj_info" {
     block_caquj_info:
         const _caquj;
         const 130;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.406568342 UTC

[section ""cstring" . GHC.Event.Control.$fShowControlMessage8_bytes" {
     GHC.Event.Control.$fShowControlMessage8_bytes:
         I8[] [67,77,115,103,87,97,107,101,117,112]
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.408762935 UTC

[section ""data" . GHC.Event.Control.$fShowControlMessage7_closure" {
     GHC.Event.Control.$fShowControlMessage7_closure:
         const GHC.Event.Control.$fShowControlMessage7_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Control.$fShowControlMessage7_entry() //  [R1]
         { []
         }
     {offset
       caquX: // global
           if ((Sp + -16) < SpLim) (likely: False) goto caquY; else goto caquZ;
       caquY: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       caquZ: // global
           (_caquU::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_caquU::I64 == 0) goto caquW; else goto caquV;
       caquW: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       caquV: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _caquU::I64;
           R2 = GHC.Event.Control.$fShowControlMessage8_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Event.Control.$fShowControlMessage7_info" {
     GHC.Event.Control.$fShowControlMessage7_info:
         const GHC.Event.Control.$fShowControlMessage7_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.412470438 UTC

[section ""cstring" . GHC.Event.Control.$fShowControlMessage6_bytes" {
     GHC.Event.Control.$fShowControlMessage6_bytes:
         I8[] [67,77,115,103,68,105,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.415063335 UTC

[section ""data" . GHC.Event.Control.$fShowControlMessage5_closure" {
     GHC.Event.Control.$fShowControlMessage5_closure:
         const GHC.Event.Control.$fShowControlMessage5_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Control.$fShowControlMessage5_entry() //  [R1]
         { []
         }
     {offset
       caqvf: // global
           if ((Sp + -16) < SpLim) (likely: False) goto caqvg; else goto caqvh;
       caqvg: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       caqvh: // global
           (_caqvc::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_caqvc::I64 == 0) goto caqve; else goto caqvd;
       caqve: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       caqvd: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _caqvc::I64;
           R2 = GHC.Event.Control.$fShowControlMessage6_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Event.Control.$fShowControlMessage5_info" {
     GHC.Event.Control.$fShowControlMessage5_info:
         const GHC.Event.Control.$fShowControlMessage5_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.423322 UTC

[section ""cstring" . GHC.Event.Control.$fShowControlMessage4_bytes" {
     GHC.Event.Control.$fShowControlMessage4_bytes:
         I8[] [67,77,115,103,83,105,103,110,97,108,32]
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.426042894 UTC

[section ""data" . GHC.Event.Control.$fShowControlMessage3_closure" {
     GHC.Event.Control.$fShowControlMessage3_closure:
         const GHC.Event.Control.$fShowControlMessage3_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Control.$fShowControlMessage3_entry() //  [R1]
         { []
         }
     {offset
       caqvx: // global
           if ((Sp + -16) < SpLim) (likely: False) goto caqvy; else goto caqvz;
       caqvy: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       caqvz: // global
           (_caqvu::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_caqvu::I64 == 0) goto caqvw; else goto caqvv;
       caqvw: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       caqvv: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _caqvu::I64;
           R2 = GHC.Event.Control.$fShowControlMessage4_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Event.Control.$fShowControlMessage3_info" {
     GHC.Event.Control.$fShowControlMessage3_info:
         const GHC.Event.Control.$fShowControlMessage3_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.436417993 UTC

[section ""data" . GHC.Event.Control.$fShowControlMessage_$cshowsPrec_closure" {
     GHC.Event.Control.$fShowControlMessage_$cshowsPrec_closure:
         const GHC.Event.Control.$fShowControlMessage_$cshowsPrec_info;
         const 0;
 },
 sat_saqls_entry() //  [R1]
         { []
         }
     {offset
       caqwc: // global
           if ((Sp + -24) < SpLim) (likely: False) goto caqwd; else goto caqwe;
       caqwd: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       caqwe: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_caqw9_info;
           R4 = P64[R1 + 16];
           R3 = I64[R1 + 24];
           R2 = 11;
           Sp = Sp - 24;
           call GHC.Show.$wshowSignedInt_entry(R4,
                                               R3,
                                               R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_saqls_info" {
     sat_saqls_info:
         const sat_saqls_entry;
         const 4294967297;
         const 19;
 },
 _caqw9() //  [R1, R2]
         { []
         }
     {offset
       caqw9: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto caqwh; else goto caqwg;
       caqwh: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       caqwg: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_caqw9_info" {
     block_caqw9_info:
         const _caqw9;
         const 0;
         const 30;
 },
 sat_saqlx_entry() //  [R1]
         { []
         }
     {offset
       caqwm: // global
           _saqlx::P64 = R1;
           if ((Sp + -8) < SpLim) (likely: False) goto caqwn; else goto caqwo;
       caqwo: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto caqwq; else goto caqwp;
       caqwq: // global
           HpAlloc = 56;
           goto caqwn;
       caqwn: // global
           R1 = _saqlx::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       caqwp: // global
           _saqlh::P64 = P64[_saqlx::P64 + 16];
           _saqlj::I64 = I64[_saqlx::P64 + 24];
           _saqll::I64 = I64[_saqlx::P64 + 32];
           I64[Hp - 48] = sat_saqls_info;
           P64[Hp - 32] = _saqlh::P64;
           I64[Hp - 24] = _saqll::I64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.showSpace1_closure;
           P64[Hp] = Hp - 48;
           I64[Sp - 8] = block_caqwj_info;
           R3 = Hp - 14;
           R2 = _saqlj::I64;
           Sp = Sp - 8;
           call GHC.Ptr.$w$cshowsPrec_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_saqlx_info" {
     sat_saqlx_info:
         const sat_saqlx_entry;
         const 8589934593;
         const 4294967311;
         const Saqxx_srt;
 },
 _caqwj() //  [R1, R2]
         { []
         }
     {offset
       caqwj: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto caqwt; else goto caqws;
       caqwt: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 8;
       caqws: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_caqwj_info" {
     block_caqwj_info:
         const _caqwj;
         const 0;
         const 30;
 },
 sat_saqlC_entry() //  [R1]
         { []
         }
     {offset
       caqwL: // global
           _saqlC::P64 = R1;
           if ((Sp + -24) < SpLim) (likely: False) goto caqwM; else goto caqwN;
       caqwN: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto caqwP; else goto caqwO;
       caqwP: // global
           HpAlloc = 24;
           goto caqwM;
       caqwM: // global
           R1 = _saqlC::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       caqwO: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _saqlC::P64;
           _saqlh::P64 = P64[_saqlC::P64 + 16];
           _saqll::I64 = I64[_saqlC::P64 + 24];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.$fShow(,)2_closure;
           P64[Hp] = _saqlh::P64;
           I64[Sp - 24] = block_caqwI_info;
           R4 = Hp - 14;
           R3 = _saqll::I64;
           R2 = 11;
           Sp = Sp - 24;
           call GHC.Show.$wshowSignedInt_entry(R4,
                                               R3,
                                               R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_saqlC_info" {
     sat_saqlC_info:
         const sat_saqlC_entry;
         const 4294967297;
         const 19;
 },
 _caqwI() //  [R1, R2]
         { []
         }
     {offset
       caqwI: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto caqwS; else goto caqwR;
       caqwS: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       caqwR: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_caqwI_info" {
     block_caqwI_info:
         const _caqwI;
         const 0;
         const 30;
 },
 sat_saqlH_entry() //  [R1]
         { []
         }
     {offset
       caqwX: // global
           _saqlH::P64 = R1;
           if ((Sp + -8) < SpLim) (likely: False) goto caqwY; else goto caqwZ;
       caqwZ: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto caqx1; else goto caqx0;
       caqx1: // global
           HpAlloc = 56;
           goto caqwY;
       caqwY: // global
           R1 = _saqlH::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       caqx0: // global
           _saqlh::P64 = P64[_saqlH::P64 + 16];
           _saqlj::I64 = I64[_saqlH::P64 + 24];
           _saqll::I64 = I64[_saqlH::P64 + 32];
           I64[Hp - 48] = sat_saqlC_info;
           P64[Hp - 32] = _saqlh::P64;
           I64[Hp - 24] = _saqll::I64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.showSpace1_closure;
           P64[Hp] = Hp - 48;
           I64[Sp - 8] = block_caqwU_info;
           R3 = Hp - 14;
           R2 = _saqlj::I64;
           Sp = Sp - 8;
           call GHC.Ptr.$w$cshowsPrec_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_saqlH_info" {
     sat_saqlH_info:
         const sat_saqlH_entry;
         const 8589934593;
         const 4294967311;
         const Saqxx_srt;
 },
 _caqwU() //  [R1, R2]
         { []
         }
     {offset
       caqwU: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto caqx4; else goto caqx3;
       caqx4: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 8;
       caqx3: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_caqwU_info" {
     block_caqwU_info:
         const _caqwU;
         const 0;
         const 30;
 },
 sat_saqlI_entry() //  [R1]
         { []
         }
     {offset
       caqx5: // global
           _saqlI::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto caqx6; else goto caqx7;
       caqx7: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto caqx9; else goto caqx8;
       caqx9: // global
           HpAlloc = 40;
           goto caqx6;
       caqx6: // global
           R1 = _saqlI::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       caqx8: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _saqlI::P64;
           _saqlh::P64 = P64[_saqlI::P64 + 16];
           _saqlj::I64 = I64[_saqlI::P64 + 24];
           _saqll::I64 = I64[_saqlI::P64 + 32];
           I64[Hp - 32] = sat_saqlH_info;
           P64[Hp - 16] = _saqlh::P64;
           I64[Hp - 8] = _saqlj::I64;
           I64[Hp] = _saqll::I64;
           R3 = Hp - 32;
           R2 = GHC.Event.Control.$fShowControlMessage3_closure;
           Sp = Sp - 16;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_saqlI_info" {
     sat_saqlI_info:
         const sat_saqlI_entry;
         const 8589934593;
         const 12884901903;
         const Saqxx_srt;
 },
 GHC.Event.Control.$fShowControlMessage_$cshowsPrec_entry() //  [R2,
                                                                 R3, R4]
         { []
         }
     {offset
       caqxf: // global
           if ((Sp + -32) < SpLim) (likely: False) goto caqxg; else goto caqxh;
       caqxg: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Control.$fShowControlMessage_$cshowsPrec_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       caqxh: // global
           I64[Sp - 24] = block_caqvM_info;
           R1 = R3;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto uaqxw; else goto caqvN;
       uaqxw: // global
           call _caqvM(R1) args: 0, res: 0, upd: 0;
       caqvN: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.$fShowControlMessage_$cshowsPrec_info" {
     GHC.Event.Control.$fShowControlMessage_$cshowsPrec_info:
         const GHC.Event.Control.$fShowControlMessage_$cshowsPrec_entry;
         const 0;
         const 133143986190;
         const 12884901911;
         const Saqxx_srt;
 },
 _caqvM() //  [R1]
         { []
         }
     {offset
       caqvM: // global
           _caqxe::P64 = R1 & 7;
           if (_caqxe::P64 < 3) goto uaqxu; else goto caqxd;
       uaqxu: // global
           _saqlh::P64 = P64[Sp + 16];
           if (_caqxe::P64 < 2) goto caqxb; else goto caqxc;
       caqxb: // global
           R3 = _saqlh::P64;
           R2 = GHC.Event.Control.$fShowControlMessage7_closure;
           Sp = Sp + 24;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
       caqxc: // global
           R3 = _saqlh::P64;
           R2 = GHC.Event.Control.$fShowControlMessage5_closure;
           Sp = Sp + 24;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
       caqxd: // global
           I64[Sp - 8] = block_caqvT_info;
           _saqlj::I64 = I64[R1 + 13];
           _saqll::I64 = I64[R1 + 21];
           R1 = P64[Sp + 8];
           I64[Sp] = _saqll::I64;
           I64[Sp + 8] = _saqlj::I64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto uaqxv; else goto caqvU;
       uaqxv: // global
           call _caqvT(R1) args: 0, res: 0, upd: 0;
       caqvU: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_caqvM_info" {
     block_caqvM_info:
         const _caqvM;
         const 2;
         const 115964117022;
         const Saqxx_srt;
 },
 _caqvT() //  [R1]
         { []
         }
     {offset
       caqvT: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto caqxp; else goto caqxo;
       caqxp: // global
           HpAlloc = 64;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       caqxo: // global
           _saqlh::P64 = P64[Sp + 24];
           _saqlj::I64 = I64[Sp + 16];
           _saqll::I64 = I64[Sp + 8];
           if (%MO_S_Lt_W64(I64[R1 + 7], 11)) goto caqxr; else goto caqxt;
       caqxr: // global
           I64[Hp - 56] = sat_saqlx_info;
           P64[Hp - 40] = _saqlh::P64;
           I64[Hp - 32] = _saqlj::I64;
           I64[Hp - 24] = _saqll::I64;
           _caqw1::P64 = Hp - 56;
           Hp = Hp - 24;
           R3 = _caqw1::P64;
           R2 = GHC.Event.Control.$fShowControlMessage3_closure;
           Sp = Sp + 32;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
       caqxt: // global
           I64[Hp - 56] = sat_saqlI_info;
           P64[Hp - 40] = _saqlh::P64;
           I64[Hp - 32] = _saqlj::I64;
           I64[Hp - 24] = _saqll::I64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.$fShow(,)4_closure;
           P64[Hp] = Hp - 56;
           R1 = Hp - 14;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_caqvT_info" {
     block_caqvT_info:
         const _caqvT;
         const 195;
         const 12884901918;
         const Saqxx_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.463255287 UTC

[section ""data" . GHC.Event.Control.$fShowControlMessage_$cshow_closure" {
     GHC.Event.Control.$fShowControlMessage_$cshow_closure:
         const GHC.Event.Control.$fShowControlMessage_$cshow_info;
         const 0;
 },
 sat_saqlR_entry() //  [R1]
         { []
         }
     {offset
       caqzc: // global
           if ((Sp + -24) < SpLim) (likely: False) goto caqzd; else goto caqze;
       caqzd: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       caqze: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_caqz9_info;
           R4 = GHC.Types.[]_closure+1;
           R3 = I64[R1 + 16];
           R2 = 11;
           Sp = Sp - 24;
           call GHC.Show.$wshowSignedInt_entry(R4,
                                               R3,
                                               R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . sat_saqlR_info" {
     sat_saqlR_info:
         const sat_saqlR_entry;
         const 4294967296;
         const 17;
 },
 _caqz9() //  [R1, R2]
         { []
         }
     {offset
       caqz9: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto caqzh; else goto caqzg;
       caqzh: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       caqzg: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_caqz9_info" {
     block_caqz9_info:
         const _caqz9;
         const 0;
         const 30;
 },
 sat_saqlW_entry() //  [R1]
         { []
         }
     {offset
       caqzm: // global
           _saqlW::P64 = R1;
           if ((Sp + -8) < SpLim) (likely: False) goto caqzn; else goto caqzo;
       caqzo: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto caqzq; else goto caqzp;
       caqzq: // global
           HpAlloc = 48;
           goto caqzn;
       caqzn: // global
           R1 = _saqlW::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       caqzp: // global
           _saqlL::I64 = I64[_saqlW::P64 + 16];
           _saqlN::I64 = I64[_saqlW::P64 + 24];
           I64[Hp - 40] = sat_saqlR_info;
           I64[Hp - 24] = _saqlN::I64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.showSpace1_closure;
           P64[Hp] = Hp - 40;
           I64[Sp - 8] = block_caqzj_info;
           R3 = Hp - 14;
           R2 = _saqlL::I64;
           Sp = Sp - 8;
           call GHC.Ptr.$w$cshowsPrec_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . sat_saqlW_info" {
     sat_saqlW_info:
         const sat_saqlW_entry;
         const 8589934592;
         const 4294967316;
         const Saqxx_srt;
 },
 _caqzj() //  [R1, R2]
         { []
         }
     {offset
       caqzj: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto caqzt; else goto caqzs;
       caqzt: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 8;
       caqzs: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_caqzj_info" {
     block_caqzj_info:
         const _caqzj;
         const 0;
         const 30;
 },
 GHC.Event.Control.$fShowControlMessage_$cshow_entry() //  [R2]
         { []
         }
     {offset
       caqzz: // global
           if ((Sp + -8) < SpLim) (likely: False) goto caqzA; else goto caqzB;
       caqzA: // global
           R2 = R2;
           R1 = GHC.Event.Control.$fShowControlMessage_$cshow_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       caqzB: // global
           I64[Sp - 8] = block_caqyU_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto uaqzK; else goto caqyV;
       uaqzK: // global
           call _caqyU(R1) args: 0, res: 0, upd: 0;
       caqyV: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.$fShowControlMessage_$cshow_info" {
     GHC.Event.Control.$fShowControlMessage_$cshow_info:
         const GHC.Event.Control.$fShowControlMessage_$cshow_entry;
         const 0;
         const 253403070478;
         const 4294967301;
         const Saqxx_srt;
 },
 _caqyU() //  [R1]
         { []
         }
     {offset
       caqyU: // global
           _caqzy::P64 = R1 & 7;
           if (_caqzy::P64 < 3) goto uaqzJ; else goto caqzx;
       uaqzJ: // global
           if (_caqzy::P64 < 2) goto caqzv; else goto caqzw;
       caqzv: // global
           R1 = GHC.Event.Control.$fShowControlMessage7_closure;
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       caqzw: // global
           R1 = GHC.Event.Control.$fShowControlMessage5_closure;
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       caqzx: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto caqzI; else goto caqzH;
       caqzI: // global
           HpAlloc = 32;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       caqzH: // global
           _saqlL::I64 = I64[R1 + 13];
           _saqlN::I64 = I64[R1 + 21];
           I64[Hp - 24] = sat_saqlW_info;
           I64[Hp - 8] = _saqlL::I64;
           I64[Hp] = _saqlN::I64;
           R3 = Hp - 24;
           R2 = GHC.Event.Control.$fShowControlMessage3_closure;
           Sp = Sp + 8;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_caqyU_info" {
     block_caqyU_info:
         const _caqyU;
         const 0;
         const 115964117022;
         const Saqxx_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.476140191 UTC

[section ""data" . GHC.Event.Control.$fShowControlMessage2_closure" {
     GHC.Event.Control.$fShowControlMessage2_closure:
         const GHC.Types.I#_con_info;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.478227333 UTC

[section ""data" . GHC.Event.Control.$fShowControlMessage1_closure" {
     GHC.Event.Control.$fShowControlMessage1_closure:
         const GHC.Event.Control.$fShowControlMessage1_info;
         const 0;
 },
 GHC.Event.Control.$fShowControlMessage1_entry() //  [R2, R3]
         { []
         }
     {offset
       caqAu: // global
           R4 = R3;
           R3 = R2;
           R2 = GHC.Event.Control.$fShowControlMessage2_closure+1;
           call GHC.Event.Control.$fShowControlMessage_$cshowsPrec_entry(R4,
                                                                         R3,
                                                                         R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.$fShowControlMessage1_info" {
     GHC.Event.Control.$fShowControlMessage1_info:
         const GHC.Event.Control.$fShowControlMessage1_entry;
         const 0;
         const 4294967310;
         const 8589934607;
         const Saqxx_srt+16;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.481565456 UTC

[section ""data" . GHC.Event.Control.$fShowControlMessage_$cshowList_closure" {
     GHC.Event.Control.$fShowControlMessage_$cshowList_closure:
         const GHC.Event.Control.$fShowControlMessage_$cshowList_info;
         const 0;
 },
 GHC.Event.Control.$fShowControlMessage_$cshowList_entry() //  [R2,
                                                                R3]
         { []
         }
     {offset
       caqAF: // global
           R4 = R3;
           R3 = R2;
           R2 = GHC.Event.Control.$fShowControlMessage1_closure+2;
           call GHC.Show.showList___entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.$fShowControlMessage_$cshowList_info" {
     GHC.Event.Control.$fShowControlMessage_$cshowList_info:
         const GHC.Event.Control.$fShowControlMessage_$cshowList_entry;
         const 0;
         const 4294967310;
         const 8589934607;
         const Saqxx_srt+48;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.484695495 UTC

[section ""data" . GHC.Event.Control.$fShowControlMessage_closure" {
     GHC.Event.Control.$fShowControlMessage_closure:
         const GHC.Show.C:Show_con_info;
         const GHC.Event.Control.$fShowControlMessage_$cshowsPrec_closure+3;
         const GHC.Event.Control.$fShowControlMessage_$cshow_closure+1;
         const GHC.Event.Control.$fShowControlMessage_$cshowList_closure+2;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.487344865 UTC

[section ""data" . GHC.Event.Control.controlIsDead_closure" {
     GHC.Event.Control.controlIsDead_closure:
         const GHC.Event.Control.controlIsDead_info;
 },
 GHC.Event.Control.controlIsDead_entry() //  [R2]
         { []
         }
     {offset
       caqAU: // global
           if ((Sp + -8) < SpLim) (likely: False) goto caqAY; else goto caqAZ;
       caqAY: // global
           R2 = R2;
           R1 = GHC.Event.Control.controlIsDead_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       caqAZ: // global
           I64[Sp - 8] = block_caqAR_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto uaqB3; else goto caqAS;
       uaqB3: // global
           call _caqAR(R1) args: 0, res: 0, upd: 0;
       caqAS: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.controlIsDead_info" {
     GHC.Event.Control.controlIsDead_info:
         const GHC.Event.Control.controlIsDead_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _caqAR() //  [R1]
         { []
         }
     {offset
       caqAR: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto caqB2; else goto caqB1;
       caqB2: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       caqB1: // global
           _saqm5::P64 = P64[R1 + 15];
           I64[Hp - 8] = GHC.STRef.STRef_con_info;
           P64[Hp] = _saqm5::P64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_caqAR_info" {
     block_caqAR_info:
         const _caqAR;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.492756708 UTC

[section ""data" . GHC.Event.Control.didRegisterWakeupFd_closure" {
     GHC.Event.Control.didRegisterWakeupFd_closure:
         const GHC.Event.Control.didRegisterWakeupFd_info;
 },
 GHC.Event.Control.didRegisterWakeupFd_entry() //  [R2]
         { []
         }
     {offset
       caqBn: // global
           if ((Sp + -8) < SpLim) (likely: False) goto caqBo; else goto caqBp;
       caqBo: // global
           R2 = R2;
           R1 = GHC.Event.Control.didRegisterWakeupFd_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       caqBp: // global
           I64[Sp - 8] = block_caqBk_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto uaqBt; else goto caqBl;
       uaqBt: // global
           call _caqBk(R1) args: 0, res: 0, upd: 0;
       caqBl: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.didRegisterWakeupFd_info" {
     GHC.Event.Control.didRegisterWakeupFd_info:
         const GHC.Event.Control.didRegisterWakeupFd_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _caqBk() //  [R1]
         { []
         }
     {offset
       caqBk: // global
           R1 = P64[R1 + 7] & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_caqBk_info" {
     block_caqBk_info:
         const _caqBk;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.498185818 UTC

[section ""data" . GHC.Event.Control.controlEventFd_closure" {
     GHC.Event.Control.controlEventFd_closure:
         const GHC.Event.Control.controlEventFd_info;
 },
 GHC.Event.Control.controlEventFd_entry() //  [R2]
         { []
         }
     {offset
       caqBN: // global
           if ((Sp + -8) < SpLim) (likely: False) goto caqBR; else goto caqBS;
       caqBR: // global
           R2 = R2;
           R1 = GHC.Event.Control.controlEventFd_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       caqBS: // global
           I64[Sp - 8] = block_caqBK_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto uaqBW; else goto caqBL;
       uaqBW: // global
           call _caqBK(R1) args: 0, res: 0, upd: 0;
       caqBL: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.controlEventFd_info" {
     GHC.Event.Control.controlEventFd_info:
         const GHC.Event.Control.controlEventFd_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _caqBK() //  [R1]
         { []
         }
     {offset
       caqBK: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto caqBV; else goto caqBU;
       caqBV: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       caqBU: // global
           _saqmh::I64 = I64[R1 + 39];
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = _saqmh::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_caqBK_info" {
     block_caqBK_info:
         const _caqBK;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.504657294 UTC

[section ""data" . GHC.Event.Control.controlWriteFd_closure" {
     GHC.Event.Control.controlWriteFd_closure:
         const GHC.Event.Control.controlWriteFd_info;
 },
 GHC.Event.Control.controlWriteFd_entry() //  [R2]
         { []
         }
     {offset
       caqCg: // global
           if ((Sp + -8) < SpLim) (likely: False) goto caqCk; else goto caqCl;
       caqCk: // global
           R2 = R2;
           R1 = GHC.Event.Control.controlWriteFd_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       caqCl: // global
           I64[Sp - 8] = block_caqCd_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto uaqCp; else goto caqCe;
       uaqCp: // global
           call _caqCd(R1) args: 0, res: 0, upd: 0;
       caqCe: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.controlWriteFd_info" {
     GHC.Event.Control.controlWriteFd_info:
         const GHC.Event.Control.controlWriteFd_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _caqCd() //  [R1]
         { []
         }
     {offset
       caqCd: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto caqCo; else goto caqCn;
       caqCo: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       caqCn: // global
           _saqmn::I64 = I64[R1 + 31];
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = _saqmn::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_caqCd_info" {
     block_caqCd_info:
         const _caqCd;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.510794041 UTC

[section ""data" . GHC.Event.Control.controlReadFd_closure" {
     GHC.Event.Control.controlReadFd_closure:
         const GHC.Event.Control.controlReadFd_info;
 },
 GHC.Event.Control.controlReadFd_entry() //  [R2]
         { []
         }
     {offset
       caqCJ: // global
           if ((Sp + -8) < SpLim) (likely: False) goto caqCN; else goto caqCO;
       caqCN: // global
           R2 = R2;
           R1 = GHC.Event.Control.controlReadFd_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       caqCO: // global
           I64[Sp - 8] = block_caqCG_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto uaqCS; else goto caqCH;
       uaqCS: // global
           call _caqCG(R1) args: 0, res: 0, upd: 0;
       caqCH: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.controlReadFd_info" {
     GHC.Event.Control.controlReadFd_info:
         const GHC.Event.Control.controlReadFd_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _caqCG() //  [R1]
         { []
         }
     {offset
       caqCG: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto caqCR; else goto caqCQ;
       caqCR: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       caqCQ: // global
           _saqmt::I64 = I64[R1 + 23];
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = _saqmt::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_caqCG_info" {
     block_caqCG_info:
         const _caqCG;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.515765763 UTC

[section ""data" . GHC.Event.Control.wakeupReadFd_closure" {
     GHC.Event.Control.wakeupReadFd_closure:
         const GHC.Event.Control.wakeupReadFd_info;
 },
 GHC.Event.Control.wakeupReadFd_entry() //  [R2]
         { []
         }
     {offset
       caqD9: // global
           R2 = R2;
           call GHC.Event.Control.controlEventFd_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.wakeupReadFd_info" {
     GHC.Event.Control.wakeupReadFd_info:
         const GHC.Event.Control.wakeupReadFd_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.518809874 UTC

[section ""cstring" . GHC.Event.Control.$trModule4_bytes" {
     GHC.Event.Control.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.520515046 UTC

[section ""data" . GHC.Event.Control.$trModule3_closure" {
     GHC.Event.Control.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Control.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.522202522 UTC

[section ""cstring" . GHC.Event.Control.$trModule2_bytes" {
     GHC.Event.Control.$trModule2_bytes:
         I8[] [71,72,67,46,69,118,101,110,116,46,67,111,110,116,114,111,108]
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.523846131 UTC

[section ""data" . GHC.Event.Control.$trModule1_closure" {
     GHC.Event.Control.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Control.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.525593133 UTC

[section ""data" . GHC.Event.Control.$trModule_closure" {
     GHC.Event.Control.$trModule_closure:
         const GHC.Types.Module_con_info;
         const GHC.Event.Control.$trModule3_closure+1;
         const GHC.Event.Control.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.527291911 UTC

[section ""data" . $krep_raoWE_closure" {
     $krep_raoWE_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const Foreign.C.Types.$tcCInt_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.529050103 UTC

[section ""data" . $krep1_raoWF_closure" {
     $krep1_raoWF_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Word.$tcWord8_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.531258587 UTC

[section ""data" . $krep2_raoWG_closure" {
     $krep2_raoWG_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcBool_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.533076037 UTC

[section ""data" . $krep3_raoWH_closure" {
     $krep3_raoWH_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const System.Posix.Types.$tcFd_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.535023102 UTC

[section ""data" . $krep4_raoWI_closure" {
     $krep4_raoWI_closure:
         const :_con_info;
         const $krep1_raoWF_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.53666839 UTC

[section ""data" . $krep5_raoWJ_closure" {
     $krep5_raoWJ_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.ForeignPtr.$tcForeignPtr_closure;
         const $krep4_raoWI_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.538324926 UTC

[section ""data" . $krep6_raoWK_closure" {
     $krep6_raoWK_closure:
         const :_con_info;
         const $krep2_raoWG_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.540015314 UTC

[section ""data" . $krep7_raoWL_closure" {
     $krep7_raoWL_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.IORef.$tcIORef_closure;
         const $krep6_raoWK_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.542492818 UTC

[section ""cstring" . GHC.Event.Control.$tcControlMessage2_bytes" {
     GHC.Event.Control.$tcControlMessage2_bytes:
         I8[] [67,111,110,116,114,111,108,77,101,115,115,97,103,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.544161663 UTC

[section ""data" . GHC.Event.Control.$tcControlMessage1_closure" {
     GHC.Event.Control.$tcControlMessage1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Control.$tcControlMessage2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.545855335 UTC

[section ""data" . GHC.Event.Control.$tcControlMessage_closure" {
     GHC.Event.Control.$tcControlMessage_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Control.$trModule_closure+1;
         const GHC.Event.Control.$tcControlMessage1_closure+1;
         const GHC.Types.krep$*_closure;
         const 13490094119359668037;
         const 2953272121777407512;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.547712098 UTC

[section ""data" . GHC.Event.Control.$tc'CMsgDie1_closure" {
     GHC.Event.Control.$tc'CMsgDie1_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Event.Control.$tcControlMessage_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.549773182 UTC

[section ""cstring" . GHC.Event.Control.$tc'CMsgWakeup2_bytes" {
     GHC.Event.Control.$tc'CMsgWakeup2_bytes:
         I8[] [39,67,77,115,103,87,97,107,101,117,112]
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.551437675 UTC

[section ""data" . GHC.Event.Control.$tc'CMsgWakeup1_closure" {
     GHC.Event.Control.$tc'CMsgWakeup1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Control.$tc'CMsgWakeup2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.553159287 UTC

[section ""data" . GHC.Event.Control.$tc'CMsgWakeup_closure" {
     GHC.Event.Control.$tc'CMsgWakeup_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Control.$trModule_closure+1;
         const GHC.Event.Control.$tc'CMsgWakeup1_closure+1;
         const GHC.Event.Control.$tc'CMsgDie1_closure+1;
         const 7148775915826095055;
         const 6381666496233651559;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.554963537 UTC

[section ""cstring" . GHC.Event.Control.$tc'CMsgDie3_bytes" {
     GHC.Event.Control.$tc'CMsgDie3_bytes:
         I8[] [39,67,77,115,103,68,105,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.557066836 UTC

[section ""data" . GHC.Event.Control.$tc'CMsgDie2_closure" {
     GHC.Event.Control.$tc'CMsgDie2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Control.$tc'CMsgDie3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.558775452 UTC

[section ""data" . GHC.Event.Control.$tc'CMsgDie_closure" {
     GHC.Event.Control.$tc'CMsgDie_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Control.$trModule_closure+1;
         const GHC.Event.Control.$tc'CMsgDie2_closure+1;
         const GHC.Event.Control.$tc'CMsgDie1_closure+1;
         const 2337574862383861426;
         const 4640161931169225929;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.560516872 UTC

[section ""data" . $krep8_raoWM_closure" {
     $krep8_raoWM_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep_raoWE_closure+1;
         const GHC.Event.Control.$tc'CMsgDie1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.562501813 UTC

[section ""data" . GHC.Event.Control.$tc'CMsgSignal1_closure" {
     GHC.Event.Control.$tc'CMsgSignal1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep5_raoWJ_closure+1;
         const $krep8_raoWM_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.564089254 UTC

[section ""cstring" . GHC.Event.Control.$tc'CMsgSignal3_bytes" {
     GHC.Event.Control.$tc'CMsgSignal3_bytes:
         I8[] [39,67,77,115,103,83,105,103,110,97,108]
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.5657934 UTC

[section ""data" . GHC.Event.Control.$tc'CMsgSignal2_closure" {
     GHC.Event.Control.$tc'CMsgSignal2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Control.$tc'CMsgSignal3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.567474072 UTC

[section ""data" . GHC.Event.Control.$tc'CMsgSignal_closure" {
     GHC.Event.Control.$tc'CMsgSignal_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Control.$trModule_closure+1;
         const GHC.Event.Control.$tc'CMsgSignal2_closure+1;
         const GHC.Event.Control.$tc'CMsgSignal1_closure+4;
         const 14616621783190690564;
         const 9307773026781339016;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.569165727 UTC

[section ""cstring" . GHC.Event.Control.$tcControl2_bytes" {
     GHC.Event.Control.$tcControl2_bytes:
         I8[] [67,111,110,116,114,111,108]
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.57084366 UTC

[section ""data" . GHC.Event.Control.$tcControl1_closure" {
     GHC.Event.Control.$tcControl1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Control.$tcControl2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.572504237 UTC

[section ""data" . GHC.Event.Control.$tcControl_closure" {
     GHC.Event.Control.$tcControl_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Control.$trModule_closure+1;
         const GHC.Event.Control.$tcControl1_closure+1;
         const GHC.Types.krep$*_closure;
         const 10901861211350082240;
         const 15092011187582559326;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.574309536 UTC

[section ""data" . $krep9_raoWN_closure" {
     $krep9_raoWN_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Event.Control.$tcControl_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.576009906 UTC

[section ""data" . $krep10_raoWO_closure" {
     $krep10_raoWO_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep7_raoWL_closure+1;
         const $krep9_raoWN_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.578282905 UTC

[section ""data" . $krep11_raoWP_closure" {
     $krep11_raoWP_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep2_raoWG_closure+1;
         const $krep10_raoWO_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.579936726 UTC

[section ""data" . $krep12_raoWQ_closure" {
     $krep12_raoWQ_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep3_raoWH_closure+1;
         const $krep11_raoWP_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.58171797 UTC

[section ""data" . $krep13_raoWR_closure" {
     $krep13_raoWR_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep3_raoWH_closure+1;
         const $krep12_raoWQ_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.583971477 UTC

[section ""data" . GHC.Event.Control.$tc'W1_closure" {
     GHC.Event.Control.$tc'W1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep3_raoWH_closure+1;
         const $krep13_raoWR_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.586280293 UTC

[section ""cstring" . GHC.Event.Control.$tc'W3_bytes" {
     GHC.Event.Control.$tc'W3_bytes:
         I8[] [39,87]
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.587953625 UTC

[section ""data" . GHC.Event.Control.$tc'W2_closure" {
     GHC.Event.Control.$tc'W2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Control.$tc'W3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.589706556 UTC

[section ""data" . GHC.Event.Control.$tc'W_closure" {
     GHC.Event.Control.$tc'W_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Control.$trModule_closure+1;
         const GHC.Event.Control.$tc'W2_closure+1;
         const GHC.Event.Control.$tc'W1_closure+4;
         const 17903566110422877322;
         const 1788372901503945479;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.594044365 UTC

[section ""data" . GHC.Event.Control.$fEqControlMessage_$c==_closure" {
     GHC.Event.Control.$fEqControlMessage_$c==_closure:
         const GHC.Event.Control.$fEqControlMessage_$c==_info;
 },
 GHC.Event.Control.$fEqControlMessage_$c==_entry() //  [R2, R3]
         { []
         }
     {offset
       caqE6: // global
           if ((Sp + -24) < SpLim) (likely: False) goto caqE7; else goto caqE8;
       caqE7: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Control.$fEqControlMessage_$c==_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       caqE8: // global
           I64[Sp - 16] = block_caqDY_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto uaqFd; else goto caqDZ;
       uaqFd: // global
           call _caqDY(R1) args: 0, res: 0, upd: 0;
       caqDZ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.$fEqControlMessage_$c==_info" {
     GHC.Event.Control.$fEqControlMessage_$c==_info:
         const GHC.Event.Control.$fEqControlMessage_$c==_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _caqDY() //  [R1]
         { []
         }
     {offset
       caqDY: // global
           _saqmz::P64 = P64[Sp + 8];
           _caqE5::P64 = R1 & 7;
           if (_caqE5::P64 < 3) goto uaqF3; else goto caqE4;
       uaqF3: // global
           if (_caqE5::P64 < 2) goto caqE2; else goto caqE3;
       caqE2: // global
           I64[Sp + 8] = block_caqEb_info;
           R1 = _saqmz::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto uaqFa; else goto caqEd;
       uaqFa: // global
           call _caqEb(R1) args: 0, res: 0, upd: 0;
       caqEd: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       caqE3: // global
           I64[Sp + 8] = block_caqEq_info;
           R1 = _saqmz::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto uaqFb; else goto caqEs;
       uaqFb: // global
           call _caqEq(R1) args: 0, res: 0, upd: 0;
       caqEs: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       caqE4: // global
           I64[Sp - 8] = block_caqEF_info;
           _saqmD::I64 = I64[R1 + 13];
           _saqmF::I64 = I64[R1 + 21];
           R1 = _saqmz::P64;
           I64[Sp] = _saqmF::I64;
           I64[Sp + 8] = _saqmD::I64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto uaqFc; else goto caqEH;
       uaqFc: // global
           call _caqEF(R1) args: 0, res: 0, upd: 0;
       caqEH: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_caqDY_info" {
     block_caqDY_info:
         const _caqDY;
         const 1;
         const 30;
 },
 _caqEb() //  [R1]
         { []
         }
     {offset
       caqEb: // global
           if (R1 & 7 == 1) goto uaqF4; else goto uaqF5;
       uaqF4: // global
           Sp = Sp + 8;
           call _caqEC() args: 0, res: 0, upd: 0;
       uaqF5: // global
           Sp = Sp + 8;
           call _caqEU() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_caqEb_info" {
     block_caqEb_info:
         const _caqEb;
         const 0;
         const 30;
 },
 _caqEq() //  [R1]
         { []
         }
     {offset
       caqEq: // global
           if (R1 & 7 == 2) goto uaqF6; else goto uaqF7;
       uaqF6: // global
           Sp = Sp + 8;
           call _caqEC() args: 0, res: 0, upd: 0;
       uaqF7: // global
           Sp = Sp + 8;
           call _caqEU() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_caqEq_info" {
     block_caqEq_info:
         const _caqEq;
         const 0;
         const 30;
 },
 _caqEC() //  []
         { []
         }
     {offset
       caqEC: // global
           R1 = GHC.Types.True_closure+2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _caqEF() //  [R1]
         { []
         }
     {offset
       caqEF: // global
           if (R1 & 7 == 3) goto caqEW; else goto uaqF8;
       caqEW: // global
           if (I64[Sp + 16] == I64[R1 + 13]) goto caqEV; else goto uaqF9;
       caqEV: // global
           R1 = I64[((I64[Sp + 8] == I64[R1 + 21]) << 3) + GHC.Types.Bool_closure_tbl];
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       uaqF9: // global
           Sp = Sp + 24;
           goto uaqFj;
       uaqF8: // global
           Sp = Sp + 24;
           goto uaqFj;
       uaqFj: // global
           call _caqEU() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_caqEF_info" {
     block_caqEF_info:
         const _caqEF;
         const 194;
         const 30;
 },
 _caqEU() //  []
         { []
         }
     {offset
       caqEU: // global
           R1 = GHC.Types.False_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.608239123 UTC

[section ""data" . GHC.Event.Control.$fEqControlMessage_$c/=_closure" {
     GHC.Event.Control.$fEqControlMessage_$c/=_closure:
         const GHC.Event.Control.$fEqControlMessage_$c/=_info;
 },
 GHC.Event.Control.$fEqControlMessage_$c/=_entry() //  [R2, R3]
         { []
         }
     {offset
       caqGg: // global
           if ((Sp + -24) < SpLim) (likely: False) goto caqGh; else goto caqGi;
       caqGh: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Control.$fEqControlMessage_$c/=_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       caqGi: // global
           I64[Sp - 16] = block_caqG8_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto uaqHt; else goto caqG9;
       uaqHt: // global
           call _caqG8(R1) args: 0, res: 0, upd: 0;
       caqG9: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.$fEqControlMessage_$c/=_info" {
     GHC.Event.Control.$fEqControlMessage_$c/=_info:
         const GHC.Event.Control.$fEqControlMessage_$c/=_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _caqG8() //  [R1]
         { []
         }
     {offset
       caqG8: // global
           _saqmN::P64 = P64[Sp + 8];
           _caqGf::P64 = R1 & 7;
           if (_caqGf::P64 < 3) goto uaqHh; else goto caqGe;
       uaqHh: // global
           if (_caqGf::P64 < 2) goto caqGc; else goto caqGd;
       caqGc: // global
           I64[Sp + 8] = block_caqGl_info;
           R1 = _saqmN::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto uaqHq; else goto caqGn;
       uaqHq: // global
           call _caqGl(R1) args: 0, res: 0, upd: 0;
       caqGn: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       caqGd: // global
           I64[Sp + 8] = block_caqGA_info;
           R1 = _saqmN::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto uaqHr; else goto caqGC;
       uaqHr: // global
           call _caqGA(R1) args: 0, res: 0, upd: 0;
       caqGC: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       caqGe: // global
           I64[Sp - 8] = block_caqGP_info;
           _saqmR::I64 = I64[R1 + 13];
           _saqmT::I64 = I64[R1 + 21];
           R1 = _saqmN::P64;
           I64[Sp] = _saqmT::I64;
           I64[Sp + 8] = _saqmR::I64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto uaqHs; else goto caqGR;
       uaqHs: // global
           call _caqGP(R1) args: 0, res: 0, upd: 0;
       caqGR: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_caqG8_info" {
     block_caqG8_info:
         const _caqG8;
         const 1;
         const 30;
 },
 _caqGl() //  [R1]
         { []
         }
     {offset
       caqGl: // global
           if (R1 & 7 == 1) goto uaqHi; else goto uaqHj;
       uaqHi: // global
           Sp = Sp + 8;
           call _caqHb() args: 0, res: 0, upd: 0;
       uaqHj: // global
           Sp = Sp + 8;
           call _caqHa() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_caqGl_info" {
     block_caqGl_info:
         const _caqGl;
         const 0;
         const 30;
 },
 _caqGA() //  [R1]
         { []
         }
     {offset
       caqGA: // global
           if (R1 & 7 == 2) goto uaqHk; else goto uaqHl;
       uaqHk: // global
           Sp = Sp + 8;
           call _caqHb() args: 0, res: 0, upd: 0;
       uaqHl: // global
           Sp = Sp + 8;
           call _caqHa() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_caqGA_info" {
     block_caqGA_info:
         const _caqGA;
         const 0;
         const 30;
 },
 _caqGP() //  [R1]
         { []
         }
     {offset
       caqGP: // global
           if (R1 & 7 == 3) goto caqHd; else goto uaqHm;
       caqHd: // global
           if (I64[Sp + 16] == I64[R1 + 13]) goto caqHc; else goto uaqHn;
       caqHc: // global
           if (I64[Sp + 8] == I64[R1 + 21]) goto uaqHo; else goto uaqHp;
       uaqHo: // global
           Sp = Sp + 24;
           call _caqHb() args: 0, res: 0, upd: 0;
       uaqHp: // global
           Sp = Sp + 24;
           goto uaqHB;
       uaqHn: // global
           Sp = Sp + 24;
           goto uaqHB;
       uaqHm: // global
           Sp = Sp + 24;
           goto uaqHB;
       uaqHB: // global
           call _caqHa() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_caqGP_info" {
     block_caqGP_info:
         const _caqGP;
         const 194;
         const 30;
 },
 _caqHb() //  []
         { []
         }
     {offset
       caqHb: // global
           R1 = GHC.Types.False_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _caqHa() //  []
         { []
         }
     {offset
       caqHa: // global
           R1 = GHC.Types.True_closure+2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.620514037 UTC

[section ""data" . GHC.Event.Control.$fEqControlMessage_closure" {
     GHC.Event.Control.$fEqControlMessage_closure:
         const GHC.Classes.C:Eq_con_info;
         const GHC.Event.Control.$fEqControlMessage_$c==_closure+2;
         const GHC.Event.Control.$fEqControlMessage_$c/=_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.622560403 UTC

[section ""cstring" . GHC.Event.Control.sendWakeup3_bytes" {
     GHC.Event.Control.sendWakeup3_bytes:
         I8[] [115,101,110,100,87,97,107,101,117,112]
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.624889313 UTC

[section ""data" . GHC.Event.Control.sendWakeup2_closure" {
     GHC.Event.Control.sendWakeup2_closure:
         const GHC.Event.Control.sendWakeup2_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Control.sendWakeup2_entry() //  [R1]
         { []
         }
     {offset
       caqIq: // global
           if ((Sp + -16) < SpLim) (likely: False) goto caqIr; else goto caqIs;
       caqIr: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       caqIs: // global
           (_caqIn::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_caqIn::I64 == 0) goto caqIp; else goto caqIo;
       caqIp: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       caqIo: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _caqIn::I64;
           R2 = GHC.Event.Control.sendWakeup3_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Event.Control.sendWakeup2_info" {
     GHC.Event.Control.sendWakeup2_info:
         const GHC.Event.Control.sendWakeup2_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.629805522 UTC

[section ""data" . GHC.Event.Control.$wsendWakeup_closure" {
     GHC.Event.Control.$wsendWakeup_closure:
         const GHC.Event.Control.$wsendWakeup_info;
         const 0;
 },
 GHC.Event.Control.$wsendWakeup_entry() //  [R2, R3]
         { []
         }
     {offset
       caqIH: // global
           if ((Sp + -16) < SpLim) (likely: False) goto caqII; else goto caqIJ;
       caqII: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Control.$wsendWakeup_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       caqIJ: // global
           _saqn1::P64 = R3;
           (_saqn7::I64) = call "ccall" arg hints:  [‘signed’,]  result hints:  [‘signed’] eventfd_write(%MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(R2)), 1);
           if (%MO_SS_Conv_W64_W32(_saqn7::I64) == 0 :: W32) goto uaqJx; else goto caqIX;
       uaqJx: // global
           call _caqJr() args: 0, res: 0, upd: 0;
       caqIX: // global
           (_saqnc::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           I64[Sp - 16] = block_caqIV_info;
           R1 = P64[_saqn1::P64 + 8];
           I64[Sp - 8] = _saqnc::I64;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto uaqJy; else goto caqIZ;
       uaqJy: // global
           call _caqIV(R1) args: 0, res: 0, upd: 0;
       caqIZ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.$wsendWakeup_info" {
     GHC.Event.Control.$wsendWakeup_info:
         const GHC.Event.Control.$wsendWakeup_entry;
         const 0;
         const 30064771086;
         const 12884901901;
         const Saqxx_srt+56;
 },
 _caqIV() //  [R1]
         { []
         }
     {offset
       caqIV: // global
           if (R1 & 7 == 1) goto caqJe; else goto caqJo;
       caqJo: // global
           if (%MO_SS_Conv_W64_W32(I64[Sp + 8]) != 9 :: W32) goto caqJe; else goto uaqJw;
       caqJe: // global
           R2 = GHC.Event.Control.sendWakeup2_closure;
           Sp = Sp + 16;
           call Foreign.C.Error.throwErrno1_entry(R2) args: 8, res: 0, upd: 8;
       uaqJw: // global
           Sp = Sp + 16;
           call _caqJr() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_caqIV_info" {
     block_caqIV_info:
         const _caqIV;
         const 65;
         const 21474836510;
         const Saqxx_srt+56;
 },
 _caqJr() //  []
         { []
         }
     {offset
       caqJr: // global
           R1 = GHC.Tuple.()_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.636970996 UTC

[section ""data" . GHC.Event.Control.sendWakeup1_closure" {
     GHC.Event.Control.sendWakeup1_closure:
         const GHC.Event.Control.sendWakeup1_info;
         const 0;
 },
 GHC.Event.Control.sendWakeup1_entry() //  [R2]
         { []
         }
     {offset
       caqJY: // global
           if ((Sp + -8) < SpLim) (likely: False) goto caqJZ; else goto caqK0;
       caqJZ: // global
           R2 = R2;
           R1 = GHC.Event.Control.sendWakeup1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       caqK0: // global
           I64[Sp - 8] = block_caqJV_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto uaqK4; else goto caqJW;
       uaqK4: // global
           call _caqJV(R1) args: 0, res: 0, upd: 0;
       caqJW: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.sendWakeup1_info" {
     GHC.Event.Control.sendWakeup1_info:
         const GHC.Event.Control.sendWakeup1_entry;
         const 0;
         const 21474836494;
         const 8589934597;
         const Saqxx_srt+64;
 },
 _caqJV() //  [R1]
         { []
         }
     {offset
       caqJV: // global
           R3 = P64[R1 + 15];
           R2 = I64[R1 + 39];
           Sp = Sp + 8;
           call GHC.Event.Control.$wsendWakeup_entry(R3,
                                                     R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_caqJV_info" {
     block_caqJV_info:
         const _caqJV;
         const 0;
         const 4294967326;
         const Saqxx_srt+64;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.641916388 UTC

[section ""data" . GHC.Event.Control.sendWakeup_closure" {
     GHC.Event.Control.sendWakeup_closure:
         const GHC.Event.Control.sendWakeup_info;
         const 0;
 },
 GHC.Event.Control.sendWakeup_entry() //  [R2]
         { []
         }
     {offset
       caqKj: // global
           R2 = R2;
           call GHC.Event.Control.sendWakeup1_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.sendWakeup_info" {
     GHC.Event.Control.sendWakeup_info:
         const GHC.Event.Control.sendWakeup_entry;
         const 0;
         const 4294967310;
         const 8589934597;
         const Saqxx_srt+80;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.644912071 UTC

[section ""cstring" . lvl_raoWS_bytes" {
     lvl_raoWS_bytes:
         I8[] [115,101,110,100,68,105,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.647407648 UTC

[section ""data" . lvl1_raoWT_closure" {
     lvl1_raoWT_closure:
         const lvl1_raoWT_info;
         const 0;
         const 0;
         const 0;
 },
 lvl1_raoWT_entry() //  [R1]
         { []
         }
     {offset
       caqKx: // global
           if ((Sp + -16) < SpLim) (likely: False) goto caqKy; else goto caqKz;
       caqKy: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       caqKz: // global
           (_caqKu::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_caqKu::I64 == 0) goto caqKw; else goto caqKv;
       caqKw: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       caqKv: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _caqKu::I64;
           R2 = lvl_raoWS_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl1_raoWT_info" {
     lvl1_raoWT_info:
         const lvl1_raoWT_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.65115455 UTC

[section ""data" . GHC.Event.Control.sendDie2_closure" {
     GHC.Event.Control.sendDie2_closure:
         const GHC.Event.Control.sendDie2_info;
         const 0;
 },
 GHC.Event.Control.sendDie2_entry() //  [R2]
         { []
         }
     {offset
       caqKO: // global
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(R2));
           R2 = lvl1_raoWT_closure;
           call Foreign.C.Error.$wlvl_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.sendDie2_info" {
     GHC.Event.Control.sendDie2_info:
         const GHC.Event.Control.sendDie2_entry;
         const 0;
         const 12884901902;
         const 8589934596;
         const Saqxx_srt+88;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.65571766 UTC

[section ""data" . GHC.Event.Control.$wsendDie_closure" {
     GHC.Event.Control.$wsendDie_closure:
         const GHC.Event.Control.$wsendDie_info;
         const 0;
 },
 GHC.Event.Control.$wsendDie_entry() //  [R2, R3]
         { []
         }
     {offset
       caqL3: // global
           if ((Sp + -16) < SpLim) (likely: False) goto caqL4; else goto caqL5;
       caqL4: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Control.$wsendDie_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       caqL5: // global
           I64[Sp - 16] = block_caqKZ_info;
           _saqnt::I64 = R2;
           R2 = 1;
           R1 = 1;
           I64[Sp - 8] = _saqnt::I64;
           Sp = Sp - 16;
           call stg_newAlignedPinnedByteArray#(R2,
                                               R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.$wsendDie_info" {
     GHC.Event.Control.$wsendDie_info:
         const GHC.Event.Control.$wsendDie_entry;
         const 0;
         const 12884901902;
         const 12884901901;
         const Saqxx_srt+104;
 },
 _caqKZ() //  [R1]
         { []
         }
     {offset
       caqKZ: // global
           _saqnt::I64 = I64[Sp + 8];
           _saqnC::I64 = R1 + 16;
           I8[_saqnC::I64] = 254 :: W8;
           (_saqnI::I64) = call "capi" arg hints:  [‘signed’,
                                                    PtrHint,]  result hints:  [‘signed’] ghczuwrapperZC20ZCbaseZCSystemziPosixziInternalsZCwrite(%MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_saqnt::I64)), _saqnC::I64, 1);
           call MO_Touch(R1);
           if (_saqnI::I64 == (-1)) goto caqLj; else goto caqLi;
       caqLj: // global
           (_saqnO::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R2 = _saqnO::I64;
           Sp = Sp + 16;
           call GHC.Event.Control.sendDie2_entry(R2) args: 8, res: 0, upd: 8;
       caqLi: // global
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_caqKZ_info" {
     block_caqKZ_info:
         const _caqKZ;
         const 65;
         const 4294967326;
         const Saqxx_srt+112;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.661852016 UTC

[section ""data" . GHC.Event.Control.sendDie1_closure" {
     GHC.Event.Control.sendDie1_closure:
         const GHC.Event.Control.sendDie1_info;
         const 0;
 },
 GHC.Event.Control.sendDie1_entry() //  [R2]
         { []
         }
     {offset
       caqLG: // global
           if ((Sp + -8) < SpLim) (likely: False) goto caqLH; else goto caqLI;
       caqLH: // global
           R2 = R2;
           R1 = GHC.Event.Control.sendDie1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       caqLI: // global
           I64[Sp - 8] = block_caqLD_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto uaqLM; else goto caqLE;
       uaqLM: // global
           call _caqLD(R1) args: 0, res: 0, upd: 0;
       caqLE: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.sendDie1_info" {
     GHC.Event.Control.sendDie1_info:
         const GHC.Event.Control.sendDie1_entry;
         const 0;
         const 21474836494;
         const 8589934597;
         const Saqxx_srt+104;
 },
 _caqLD() //  [R1]
         { []
         }
     {offset
       caqLD: // global
           R3 = P64[R1 + 15];
           R2 = I64[R1 + 31];
           Sp = Sp + 8;
           call GHC.Event.Control.$wsendDie_entry(R3,
                                                  R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_caqLD_info" {
     block_caqLD_info:
         const _caqLD;
         const 0;
         const 4294967326;
         const Saqxx_srt+104;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.666673216 UTC

[section ""data" . GHC.Event.Control.sendDie_closure" {
     GHC.Event.Control.sendDie_closure:
         const GHC.Event.Control.sendDie_info;
         const 0;
 },
 GHC.Event.Control.sendDie_entry() //  [R2]
         { []
         }
     {offset
       caqM1: // global
           R2 = R2;
           call GHC.Event.Control.sendDie1_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.sendDie_info" {
     GHC.Event.Control.sendDie_info:
         const GHC.Event.Control.sendDie_entry;
         const 0;
         const 4294967310;
         const 8589934597;
         const Saqxx_srt+120;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.669856906 UTC

[section ""data" . GHC.Event.Control.closeControl3_closure" {
     GHC.Event.Control.closeControl3_closure:
         const (,)_con_info;
         const GHC.Types.True_closure+2;
         const GHC.Tuple.()_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.671736727 UTC

[section ""data" . GHC.Event.Control.closeControl2_closure" {
     GHC.Event.Control.closeControl2_closure:
         const GHC.Event.Control.closeControl2_info;
 },
 GHC.Event.Control.closeControl2_entry() //  []
         { []
         }
     {offset
       caqMd: // global
           R1 = GHC.Event.Control.closeControl3_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.closeControl2_info" {
     GHC.Event.Control.closeControl2_info:
         const GHC.Event.Control.closeControl2_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.676448153 UTC

[section ""data" . GHC.Event.Control.closeControl1_closure" {
     GHC.Event.Control.closeControl1_closure:
         const GHC.Event.Control.closeControl1_info;
 },
 GHC.Event.Control.closeControl1_entry() //  [R2]
         { []
         }
     {offset
       caqMs: // global
           if ((Sp + -40) < SpLim) (likely: False) goto caqMt; else goto caqMu;
       caqMt: // global
           R2 = R2;
           R1 = GHC.Event.Control.closeControl1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       caqMu: // global
           I64[Sp - 8] = block_caqMp_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto uaqNa; else goto caqMq;
       uaqNa: // global
           call _caqMp(R1) args: 0, res: 0, upd: 0;
       caqMq: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.closeControl1_info" {
     GHC.Event.Control.closeControl1_info:
         const GHC.Event.Control.closeControl1_entry;
         const 0;
         const 14;
         const 8589934597;
 },
 _caqMp() //  [R1]
         { []
         }
     {offset
       caqMp: // global
           I64[Sp - 32] = block_caqMx_info;
           R2 = GHC.Event.Control.closeControl2_closure+1;
           _saqo5::P64 = P64[R1 + 7];
           _saqo2::I64 = I64[R1 + 23];
           _saqo3::I64 = I64[R1 + 31];
           _saqo4::I64 = I64[R1 + 39];
           R1 = P64[R1 + 15];
           I64[Sp - 24] = _saqo3::I64;
           I64[Sp - 16] = _saqo4::I64;
           P64[Sp - 8] = _saqo5::P64;
           I64[Sp] = _saqo2::I64;
           Sp = Sp - 32;
           call stg_atomicModifyMutVar#(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_caqMp_info" {
     block_caqMp_info:
         const _caqMp;
         const 0;
         const 30;
 },
 _caqMx() //  []
         { []
         }
     {offset
       caqMx: // global
           _saqo3::I64 = I64[Sp + 8];
           _saqo5::P64 = P64[Sp + 24];
           (_saqoe::I64) = call "ccall" arg hints:  [‘signed’]  result hints:  [‘signed’] close(%MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(I64[Sp + 32])));
           (_saqoj::I64) = call "ccall" arg hints:  [‘signed’]  result hints:  [‘signed’] close(%MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_saqo3::I64)));
           I64[Sp + 8] = block_caqML_info;
           R1 = _saqo5::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto uaqNb; else goto caqMM;
       uaqNb: // global
           call _caqML(R1) args: 0, res: 0, upd: 0;
       caqMM: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_caqMx_info" {
     block_caqMx_info:
         const _caqMx;
         const 708;
         const 30;
 },
 _caqML() //  [R1]
         { []
         }
     {offset
       caqML: // global
           _saqo4::I64 = I64[Sp + 8];
           if (R1 & 7 == 1) goto caqMS; else goto caqMW;
       caqMS: // global
           (_saqop::I64) = call "ccall" arg hints:  [‘signed’]  result hints:  [‘signed’] close(%MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_saqo4::I64)));
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       caqMW: // global
           call "ccall" arg hints:  [‘signed’]  result hints:  [] setIOManagerWakeupFd((-1));
           (_saqox::I64) = call "ccall" arg hints:  [‘signed’]  result hints:  [‘signed’] close(%MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_saqo4::I64)));
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_caqML_info" {
     block_caqML_info:
         const _caqML;
         const 451;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.685513579 UTC

[section ""data" . GHC.Event.Control.closeControl_closure" {
     GHC.Event.Control.closeControl_closure:
         const GHC.Event.Control.closeControl_info;
 },
 GHC.Event.Control.closeControl_entry() //  [R2]
         { []
         }
     {offset
       caqNG: // global
           R2 = R2;
           call GHC.Event.Control.closeControl1_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.closeControl_info" {
     GHC.Event.Control.closeControl_info:
         const GHC.Event.Control.closeControl_entry;
         const 0;
         const 14;
         const 8589934597;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.688914768 UTC

[section ""cstring" . lvl2_raoWU_bytes" {
     lvl2_raoWU_bytes:
         I8[] [101,118,101,110,116,102,100]
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.691061192 UTC

[section ""data" . lvl3_raoWV_closure" {
     lvl3_raoWV_closure:
         const lvl3_raoWV_info;
         const 0;
         const 0;
         const 0;
 },
 lvl3_raoWV_entry() //  [R1]
         { []
         }
     {offset
       caqNU: // global
           if ((Sp + -16) < SpLim) (likely: False) goto caqNV; else goto caqNW;
       caqNV: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       caqNW: // global
           (_caqNR::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_caqNR::I64 == 0) goto caqNT; else goto caqNS;
       caqNT: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       caqNS: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _caqNR::I64;
           R2 = lvl2_raoWU_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl3_raoWV_info" {
     lvl3_raoWV_info:
         const lvl3_raoWV_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.694785391 UTC

[section ""cstring" . lvl4_raoWW_bytes" {
     lvl4_raoWW_bytes:
         I8[] [112,105,112,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.69694757 UTC

[section ""data" . lvl5_raoWX_closure" {
     lvl5_raoWX_closure:
         const lvl5_raoWX_info;
         const 0;
         const 0;
         const 0;
 },
 lvl5_raoWX_entry() //  [R1]
         { []
         }
     {offset
       caqOc: // global
           if ((Sp + -16) < SpLim) (likely: False) goto caqOd; else goto caqOe;
       caqOd: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       caqOe: // global
           (_caqO9::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_caqO9::I64 == 0) goto caqOb; else goto caqOa;
       caqOb: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       caqOa: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _caqO9::I64;
           R2 = lvl4_raoWW_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl5_raoWX_info" {
     lvl5_raoWX_info:
         const lvl5_raoWX_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.700665802 UTC

[section ""data" . lvl6_raoWY_closure" {
     lvl6_raoWY_closure:
         const lvl6_raoWY_info;
         const 0;
 },
 lvl6_raoWY_entry() //  [R2]
         { []
         }
     {offset
       caqOt: // global
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(R2));
           R2 = lvl5_raoWX_closure;
           call Foreign.C.Error.$wlvl_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . lvl6_raoWY_info" {
     lvl6_raoWY_info:
         const lvl6_raoWY_entry;
         const 0;
         const 141733920782;
         const 8589934596;
         const Saqxx_srt+88;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.711914102 UTC

[section ""data" . GHC.Event.Control.newControl1_closure" {
     GHC.Event.Control.newControl1_closure:
         const GHC.Event.Control.newControl1_info;
         const 0;
 },
 sat_saqp7_entry() //  [R1]
         { []
         }
     {offset
       caqOZ: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto caqPb; else goto caqPa;
       caqPb: // global
           HpAlloc = 16;
           R1 = R1;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       caqPa: // global
           (_saqp4::I64) = call "capi" arg hints:  [‘signed’,
                                                    ‘signed’]  result hints:  [‘signed’] ghczuwrapperZC17ZCbaseZCSystemziPosixziInternalsZCfcntl(I64[R1 + 7], %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(I64[R1 + 15])));
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_saqp4::I64));
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_saqp7_info" {
     sat_saqp7_info:
         const sat_saqp7_entry;
         const 8589934592;
         const 13;
         const 4294967299;
 },
 sat_saqpX_entry() //  [R1]
         { []
         }
     {offset
       caqQl: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto caqQx; else goto caqQw;
       caqQx: // global
           HpAlloc = 16;
           R1 = R1;
           call (stg_gc_fun)(R1) args: 8, res: 0, upd: 8;
       caqQw: // global
           (_saqpU::I64) = call "capi" arg hints:  [‘signed’,
                                                    ‘signed’]  result hints:  [‘signed’] ghczuwrapperZC17ZCbaseZCSystemziPosixziInternalsZCfcntl(I64[R1 + 15], %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(I64[R1 + 7])));
           I64[Hp - 8] = GHC.Int.I32#_con_info;
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_saqpU::I64));
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_saqpX_info" {
     sat_saqpX_info:
         const sat_saqpX_entry;
         const 8589934592;
         const 13;
         const 4294967299;
 },
 GHC.Event.Control.newControl1_entry() //  [R2]
         { []
         }
     {offset
       caqQy: // global
           if ((Sp + -80) < SpLim) (likely: False) goto caqQz; else goto caqQA;
       caqQz: // global
           R2 = R2;
           R1 = GHC.Event.Control.newControl1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       caqQA: // global
           I64[Sp - 16] = block_caqOE_info;
           _saqoB::P64 = R2;
           R2 = 4;
           R1 = 8;
           P64[Sp - 8] = _saqoB::P64;
           Sp = Sp - 16;
           call stg_newAlignedPinnedByteArray#(R2,
                                               R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.newControl1_info" {
     GHC.Event.Control.newControl1_info:
         const GHC.Event.Control.newControl1_entry;
         const 0;
         const 277081225166862;
         const 8589934597;
         const Saqxx_srt+56;
 },
 _caqOE() //  [R1]
         { []
         }
     {offset
       caqOE: // global
           _saqoJ::I64 = R1 + 16;
           (_saqoN::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [‘signed’] pipe(_saqoJ::I64);
           _saqoO::I64 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_saqoN::I64));
           if (_saqoO::I64 == (-1)) goto caqTf; else goto uaqTI;
       caqTf: // global
           (_saqri::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R2 = _saqri::I64;
           Sp = Sp + 16;
           call lvl6_raoWY_entry(R2) args: 8, res: 0, upd: 8;
       uaqTI: // global
           I64[Sp - 16] = _saqoJ::I64;
           I64[Sp - 8] = _saqoO::I64;
           P64[Sp] = R1;
           Sp = Sp - 16;
           call _caqOP() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_caqOE_info" {
     block_caqOE_info:
         const _caqOE;
         const 1;
         const 241896853078046;
         const Saqxx_srt+56;
 },
 _caqOP() //  []
         { []
         }
     {offset
       caqOP: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto caqQG; else goto caqQF;
       caqQG: // global
           HpAlloc = 24;
           I64[Sp - 8] = block_caqOO_info;
           R1 = I64[Sp + 8];
           Sp = Sp - 8;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       caqQF: // global
           _saqoJ::I64 = I64[Sp];
           _saqoR::I64 = %MO_SS_Conv_W32_W64(I32[_saqoJ::I64]);
           _saqoU::I64 = %MO_SS_Conv_W32_W64(I32[_saqoJ::I64 + 4]);
           (_saqoY::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_f_getfl();
           I64[Hp - 16] = sat_saqp7_info;
           I64[Hp - 8] = _saqoU::I64;
           I64[Hp] = _saqoY::I64;
           I64[Sp - 16] = block_caqPc_info;
           R4 = Hp - 15;
           R3 = System.Posix.Internals.setNonBlockingFD3_closure;
           R2 = System.Posix.Internals.fdFileSize_pred_closure+1;
           I64[Sp - 8] = _saqoY::I64;
           I64[Sp] = _saqoU::I64;
           I64[Sp + 8] = _saqoR::I64;
           Sp = Sp - 16;
           call Foreign.C.Error.throwErrnoIfMinus1Retry2_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 8, upd: 8;
     }
 },
 _caqOO() //  [R1]
         { []
         }
     {offset
       caqOO: // global
           I64[Sp + 16] = R1;
           Sp = Sp + 8;
           call _caqOP() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_caqOO_info" {
     block_caqOO_info:
         const _caqOO;
         const 196;
         const 101159364722718;
         const Saqxx_srt+56;
 },
 _caqPc() //  [R1]
         { []
         }
     {offset
       caqPc: // global
           I64[Sp] = block_caqPe_info;
           R1 = R1;
           if (R1 & 7 != 0) goto uaqTP; else goto caqPf;
       uaqTP: // global
           call _caqPe(R1) args: 0, res: 0, upd: 0;
       caqPf: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_caqPc_info" {
     block_caqPc_info:
         const _caqPc;
         const 453;
         const 101159364722718;
         const Saqxx_srt+56;
 },
 _caqPe() //  [R1]
         { []
         }
     {offset
       caqPe: // global
           _saqoR::I64 = I64[Sp + 24];
           _saqoU::I64 = I64[Sp + 16];
           _saqpc::I64 = I64[R1 + 7];
           (_saqpg::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_o_nonblock();
           _saqph::I64 = _saqpc::I64 | %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_saqpg::I64));
           if (_saqpc::I64 == _saqph::I64) goto saqpm; else goto caqTc;
       caqTc: // global
           (_saqr9::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_f_setfl();
           (_saqre::I64) = call "capi" arg hints:  [‘signed’, ‘signed’,
                                                    ‘signed’]  result hints:  [‘signed’] ghczuwrapperZC16ZCbaseZCSystemziPosixziInternalsZCfcntl(_saqoU::I64, %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_saqr9::I64)), _saqph::I64);
           goto saqpm;
       saqpm: // global
           (_saqpr::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_f_setfd();
           (_saqpv::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_fd_cloexec();
           (_saqpA::I64) = call "capi" arg hints:  [‘signed’, ‘signed’,
                                                    ‘signed’]  result hints:  [‘signed’] ghczuwrapperZC16ZCbaseZCSystemziPosixziInternalsZCfcntl(_saqoR::I64, %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_saqpr::I64)), _saqpv::I64);
           if (%MO_SS_Conv_W64_W32(_saqpA::I64) == (-1) :: W32) goto caqT4; else goto caqQL;
       caqT4: // global
           (_saqr3::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R2 = _saqr3::I64;
           Sp = Sp + 48;
           call System.Posix.Internals.setCloseOnExec2_entry(R2) args: 8, res: 0, upd: 8;
       caqQL: // global
           (_saqpG::I64) = call "capi" arg hints:  [‘signed’, ‘signed’,
                                                    ‘signed’]  result hints:  [‘signed’] ghczuwrapperZC16ZCbaseZCSystemziPosixziInternalsZCfcntl(_saqoU::I64, %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_saqpr::I64)), _saqpv::I64);
           if (%MO_SS_Conv_W64_W32(_saqpG::I64) == (-1) :: W32) goto caqSY; else goto caqQO;
       caqSY: // global
           (_saqqY::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R2 = _saqqY::I64;
           Sp = Sp + 48;
           call System.Posix.Internals.setCloseOnExec2_entry(R2) args: 8, res: 0, upd: 8;
       caqQO: // global
           (_saqpL::I64) = call "ccall" arg hints:  [‘signed’,
                                                     ‘signed’]  result hints:  [‘signed’] eventfd(0, 0);
           _saqqP::I64 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_saqpL::I64));
           if (_saqqP::I64 != (-1)) goto caqSD; else goto caqSO;
       caqSD: // global
           I64[Sp - 24] = _saqpr::I64;
           I64[Sp - 16] = _saqpv::I64;
           I64[Sp - 8] = _saqqP::I64;
           I64[Sp] = _saqpg::I64;
           Sp = Sp - 24;
           call _caqQc() args: 0, res: 0, upd: 0;
       caqSO: // global
           I64[Sp - 24] = block_caqSL_info;
           R2 = lvl3_raoWV_closure;
           I64[Sp - 16] = _saqpr::I64;
           I64[Sp - 8] = _saqpv::I64;
           I64[Sp] = _saqpg::I64;
           Sp = Sp - 24;
           call Foreign.C.Error.throwErrno1_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_caqPe_info" {
     block_caqPe_info:
         const _caqPe;
         const 453;
         const 101159364722718;
         const Saqxx_srt+56;
 },
 _caqSL() //  [R1]
         { []
         }
     {offset
       caqSL: // global
           I64[Sp] = block_caqSN_info;
           R1 = R1;
           if (R1 & 7 != 0) goto uaqTU; else goto caqSR;
       uaqTU: // global
           call _caqSN(R1) args: 0, res: 0, upd: 0;
       caqSR: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_caqSL_info" {
     block_caqSL_info:
         const _caqSL;
         const 4040;
         const 30064771102;
         const Saqxx_srt+136;
 },
 _caqSN() //  [R1]
         { []
         }
     {offset
       caqSN: // global
           I64[Sp] = I64[Sp + 8];
           I64[Sp + 8] = I64[Sp + 16];
           I64[Sp + 16] = I64[R1 + 7];
           call _caqQc() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_caqSN_info" {
     block_caqSN_info:
         const _caqSN;
         const 4040;
         const 30064771102;
         const Saqxx_srt+136;
 },
 _caqQc() //  []
         { []
         }
     {offset
       caqQc: // global
           Hp = Hp + 24;
           _saqpO::I64 = I64[Sp + 16];
           if (Hp > HpLim) (likely: False) goto caqQV; else goto caqQU;
       caqQV: // global
           HpAlloc = 24;
           I64[Sp - 8] = block_caqQb_info;
           R1 = _saqpO::I64;
           Sp = Sp - 8;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       caqQU: // global
           I64[Hp - 16] = sat_saqpX_info;
           I64[Hp - 8] = I64[Sp + 32];
           I64[Hp] = _saqpO::I64;
           I64[Sp - 8] = block_caqQQ_info;
           R4 = Hp - 15;
           R3 = System.Posix.Internals.setNonBlockingFD3_closure;
           R2 = System.Posix.Internals.fdFileSize_pred_closure+1;
           Sp = Sp - 8;
           call Foreign.C.Error.throwErrnoIfMinus1Retry2_entry(R4,
                                                               R3,
                                                               R2) args: 8, res: 8, upd: 8;
     }
 },
 _caqQb() //  [R1]
         { []
         }
     {offset
       caqQb: // global
           I64[Sp + 24] = R1;
           Sp = Sp + 8;
           call _caqQc() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_caqQb_info" {
     block_caqQb_info:
         const _caqQb;
         const 8137;
         const 30064771102;
         const Saqxx_srt+136;
 },
 _caqQQ() //  [R1]
         { []
         }
     {offset
       caqQQ: // global
           I64[Sp] = block_caqQS_info;
           R1 = R1;
           if (R1 & 7 != 0) goto uaqTS; else goto caqQX;
       uaqTS: // global
           call _caqQS(R1) args: 0, res: 0, upd: 0;
       caqQX: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_caqQQ_info" {
     block_caqQQ_info:
         const _caqQQ;
         const 8137;
         const 4294967326;
         const Saqxx_srt+144;
 },
 _caqQS() //  [R1]
         { []
         }
     {offset
       caqQS: // global
           _saqoB::P64 = P64[Sp + 72];
           _saqpr::I64 = I64[Sp + 8];
           _saqpv::I64 = I64[Sp + 16];
           _saqpO::I64 = I64[Sp + 24];
           _saqq2::I64 = I64[R1 + 7];
           _saqq3::I64 = _saqq2::I64 | %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(I64[Sp + 32]));
           if (_saqq2::I64 == _saqq3::I64) goto saqq8; else goto caqSx;
       caqSx: // global
           (_saqqJ::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_f_setfl();
           (_saqqO::I64) = call "capi" arg hints:  [‘signed’, ‘signed’,
                                                    ‘signed’]  result hints:  [‘signed’] ghczuwrapperZC16ZCbaseZCSystemziPosixziInternalsZCfcntl(_saqpO::I64, %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_saqqJ::I64)), _saqq3::I64);
           goto saqq8;
       saqq8: // global
           (_saqqe::I64) = call "capi" arg hints:  [‘signed’, ‘signed’,
                                                    ‘signed’]  result hints:  [‘signed’] ghczuwrapperZC16ZCbaseZCSystemziPosixziInternalsZCfcntl(_saqpO::I64, %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_saqpr::I64)), _saqpv::I64);
           if (%MO_SS_Conv_W64_W32(_saqqe::I64) == (-1) :: W32) goto caqSp; else goto caqRC;
       caqSp: // global
           (_saqqD::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R2 = _saqqD::I64;
           Sp = Sp + 80;
           call System.Posix.Internals.setCloseOnExec2_entry(R2) args: 8, res: 0, upd: 8;
       caqRC: // global
           I64[Sp + 16] = block_caqRA_info;
           R1 = _saqoB::P64;
           Sp = Sp + 16;
           if (R1 & 7 != 0) goto uaqTT; else goto caqRE;
       uaqTT: // global
           call _caqRA(R1) args: 0, res: 0, upd: 0;
       caqRE: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_caqQS_info" {
     block_caqQS_info:
         const _caqQS;
         const 8137;
         const 4294967326;
         const Saqxx_srt+144;
 },
 _caqRA() //  [R1]
         { []
         }
     {offset
       caqRA: // global
           if (R1 & 7 == 1) goto caqRX; else goto caqSj;
       caqRX: // global
           I64[Sp] = block_caqRI_info;
           R1 = GHC.Types.False_closure+1;
           call stg_newMutVar#(R1) args: 8, res: 8, upd: 8;
       caqSj: // global
           call "ccall" arg hints:  [‘signed’]  result hints:  [] setIOManagerWakeupFd(I64[Sp + 8]);
           I64[Sp] = block_caqS5_info;
           R1 = GHC.Types.False_closure+1;
           call stg_newMutVar#(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_caqRA_info" {
     block_caqRA_info:
         const _caqRA;
         const 6087;
         const 30;
 },
 _caqRI() //  [R1]
         { []
         }
     {offset
       caqRI: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto caqS0; else goto caqRZ;
       caqS0: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       caqRZ: // global
           _saqoR::I64 = I64[Sp + 40];
           _saqoU::I64 = I64[Sp + 32];
           _saqpO::I64 = I64[Sp + 8];
           call MO_Touch(P64[Sp + 48]);
           I64[Hp - 40] = GHC.Event.Control.W_con_info;
           P64[Hp - 32] = GHC.Types.False_closure+1;
           P64[Hp - 24] = R1;
           I64[Hp - 16] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_saqoR::I64));
           I64[Hp - 8] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_saqoU::I64));
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_saqpO::I64));
           R1 = Hp - 39;
           Sp = Sp + 64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_caqRI_info" {
     block_caqRI_info:
         const _caqRI;
         const 6087;
         const 30;
 },
 _caqS5() //  [R1]
         { []
         }
     {offset
       caqS5: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto caqSm; else goto caqSl;
       caqSm: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       caqSl: // global
           _saqoR::I64 = I64[Sp + 40];
           _saqoU::I64 = I64[Sp + 32];
           _saqpO::I64 = I64[Sp + 8];
           call MO_Touch(P64[Sp + 48]);
           I64[Hp - 40] = GHC.Event.Control.W_con_info;
           P64[Hp - 32] = GHC.Types.True_closure+2;
           P64[Hp - 24] = R1;
           I64[Hp - 16] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_saqoR::I64));
           I64[Hp - 8] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_saqoU::I64));
           I64[Hp] = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_saqpO::I64));
           R1 = Hp - 39;
           Sp = Sp + 64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_caqS5_info" {
     block_caqS5_info:
         const _caqS5;
         const 6087;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.744345571 UTC

[section ""data" . GHC.Event.Control.newControl_closure" {
     GHC.Event.Control.newControl_closure:
         const GHC.Event.Control.newControl_info;
         const 0;
 },
 GHC.Event.Control.newControl_entry() //  [R2]
         { []
         }
     {offset
       caqVU: // global
           R2 = R2;
           call GHC.Event.Control.newControl1_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.newControl_info" {
     GHC.Event.Control.newControl_info:
         const GHC.Event.Control.newControl_entry;
         const 0;
         const 4294967310;
         const 8589934597;
         const Saqxx_srt+160;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.747469595 UTC

[section ""cstring" . lvl7_raoWZ_bytes" {
     lvl7_raoWZ_bytes:
         I8[] [102,97,105,108,101,100,32,116,111,32,114,101,97,100,32,115,105,103,105,110,102,111,95,116]
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.749858025 UTC

[section ""data" . GHC.Event.Control.readControlMessage4_closure" {
     GHC.Event.Control.readControlMessage4_closure:
         const GHC.Event.Control.readControlMessage4_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Control.readControlMessage4_entry() //  [R1]
         { []
         }
     {offset
       caqWa: // global
           if ((Sp + -24) < SpLim) (likely: False) goto caqWb; else goto caqWc;
       caqWb: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       caqWc: // global
           (_caqW5::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_caqW5::I64 == 0) goto caqW7; else goto caqW6;
       caqW7: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       caqW6: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _caqW5::I64;
           I64[Sp - 24] = block_caqW8_info;
           R2 = lvl7_raoWZ_bytes;
           Sp = Sp - 24;
           call GHC.CString.unpackCString#_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 section ""relreadonly" . GHC.Event.Control.readControlMessage4_info" {
     GHC.Event.Control.readControlMessage4_info:
         const GHC.Event.Control.readControlMessage4_entry;
         const 0;
         const 4294967317;
         const Saqxx_srt+184;
 },
 _caqW8() //  [R1]
         { []
         }
     {offset
       caqW8: // global
           R2 = R1;
           Sp = Sp + 8;
           call GHC.Err.errorWithoutStackTrace_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . block_caqW8_info" {
     block_caqW8_info:
         const _caqW8;
         const 0;
         const 4294967326;
         const Saqxx_srt+184;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.754799077 UTC

[section ""cstring" . lvl8_raoX0_bytes" {
     lvl8_raoX0_bytes:
         I8[] [114,101,97,100,67,111,110,116,114,111,108,77,101,115,115,97,103,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.756907333 UTC

[section ""data" . lvl9_raoX1_closure" {
     lvl9_raoX1_closure:
         const lvl9_raoX1_info;
         const 0;
         const 0;
         const 0;
 },
 lvl9_raoX1_entry() //  [R1]
         { []
         }
     {offset
       caqWz: // global
           if ((Sp + -16) < SpLim) (likely: False) goto caqWA; else goto caqWB;
       caqWA: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       caqWB: // global
           (_caqWw::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_caqWw::I64 == 0) goto caqWy; else goto caqWx;
       caqWy: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       caqWx: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _caqWw::I64;
           R2 = lvl8_raoX0_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl9_raoX1_info" {
     lvl9_raoX1_info:
         const lvl9_raoX1_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.760687074 UTC

[section ""data" . GHC.Event.Control.readControlMessage3_closure" {
     GHC.Event.Control.readControlMessage3_closure:
         const GHC.Event.Control.readControlMessage3_info;
         const 0;
 },
 GHC.Event.Control.readControlMessage3_entry() //  [R2]
         { []
         }
     {offset
       caqWQ: // global
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(R2));
           R2 = lvl9_raoX1_closure;
           call Foreign.C.Error.$wlvl_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.readControlMessage3_info" {
     GHC.Event.Control.readControlMessage3_info:
         const GHC.Event.Control.readControlMessage3_entry;
         const 0;
         const 35188667056142;
         const 8589934596;
         const Saqxx_srt+88;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.764336137 UTC

[section ""cstring" . lvl10_raoX2_bytes" {
     lvl10_raoX2_bytes:
         I8[] [114,101,97,100,87,97,107,101,117,112,77,101,115,115,97,103,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.766632078 UTC

[section ""data" . lvl11_raoX3_closure" {
     lvl11_raoX3_closure:
         const lvl11_raoX3_info;
         const 0;
         const 0;
         const 0;
 },
 lvl11_raoX3_entry() //  [R1]
         { []
         }
     {offset
       caqX4: // global
           if ((Sp + -16) < SpLim) (likely: False) goto caqX5; else goto caqX6;
       caqX5: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       caqX6: // global
           (_caqX1::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_caqX1::I64 == 0) goto caqX3; else goto caqX2;
       caqX3: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       caqX2: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _caqX1::I64;
           R2 = lvl10_raoX2_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . lvl11_raoX3_info" {
     lvl11_raoX3_info:
         const lvl11_raoX3_entry;
         const 0;
         const 21;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.77034606 UTC

[section ""data" . GHC.Event.Control.readControlMessage2_closure" {
     GHC.Event.Control.readControlMessage2_closure:
         const GHC.Event.Control.readControlMessage2_info;
         const 0;
 },
 GHC.Event.Control.readControlMessage2_entry() //  [R2]
         { []
         }
     {offset
       caqXl: // global
           R3 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(R2));
           R2 = lvl11_raoX3_closure;
           call Foreign.C.Error.$wlvl_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.readControlMessage2_info" {
     GHC.Event.Control.readControlMessage2_info:
         const GHC.Event.Control.readControlMessage2_entry;
         const 0;
         const 70373039144974;
         const 8589934596;
         const Saqxx_srt+88;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.777943101 UTC

[section ""data" . GHC.Event.Control.$wreadControlMessage_closure" {
     GHC.Event.Control.$wreadControlMessage_closure:
         const GHC.Event.Control.$wreadControlMessage_info;
         const 0;
 },
 GHC.Event.Control.$wreadControlMessage_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       caqXB: // global
           if ((Sp + -56) < SpLim) (likely: False) goto caqXC; else goto caqXD;
       caqXC: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Control.$wreadControlMessage_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       caqXD: // global
           if (R4 == R2) goto caqXA; else goto caqXz;
       caqXA: // global
           I64[Sp - 16] = block_caqYW_info;
           R1 = 8;
           I64[Sp - 8] = R4;
           Sp = Sp - 16;
           call stg_newPinnedByteArray#(R1) args: 8, res: 8, upd: 8;
       caqXz: // global
           I64[Sp - 16] = block_caqXF_info;
           R2 = 1;
           R1 = 1;
           I64[Sp - 8] = R4;
           Sp = Sp - 16;
           call stg_newAlignedPinnedByteArray#(R2,
                                               R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.$wreadControlMessage_info" {
     GHC.Event.Control.$wreadControlMessage_info:
         const GHC.Event.Control.$wreadControlMessage_entry;
         const 0;
         const 133143986190;
         const 17179869202;
         const Saqxx_srt+208;
 },
 _caqYW() //  [R1]
         { []
         }
     {offset
       caqYW: // global
           (_saqsx::I64) = call "capi" arg hints:  [‘signed’,
                                                    PtrHint,]  result hints:  [‘signed’] ghczuwrapperZC22ZCbaseZCSystemziPosixziInternalsZCread(%MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(I64[Sp + 8])), R1 + 16, 8);
           if (_saqsx::I64 == (-1)) goto caqZc; else goto caqZb;
       caqZc: // global
           (_saqsD::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R2 = _saqsD::I64;
           Sp = Sp + 16;
           call GHC.Event.Control.readControlMessage2_entry(R2) args: 8, res: 0, upd: 8;
       caqZb: // global
           call MO_Touch(R1);
           R1 = GHC.Event.Control.CMsgWakeup_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_caqYW_info" {
     block_caqYW_info:
         const _caqYW;
         const 65;
         const 4294967326;
         const Saqxx_srt+224;
 },
 _caqXF() //  [R1]
         { []
         }
     {offset
       caqXF: // global
           _saqrC::I64 = R1 + 16;
           (_saqrH::I64) = call "capi" arg hints:  [‘signed’,
                                                    PtrHint,]  result hints:  [‘signed’] ghczuwrapperZC22ZCbaseZCSystemziPosixziInternalsZCread(%MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(I64[Sp + 8])), _saqrC::I64, 1);
           if (_saqrH::I64 == (-1)) goto caqYU; else goto caqYT;
       caqYU: // global
           (_saqsk::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           R2 = _saqsk::I64;
           Sp = Sp + 16;
           call GHC.Event.Control.readControlMessage3_entry(R2) args: 8, res: 0, upd: 8;
       caqYT: // global
           _saqrM::I64 = %MO_UU_Conv_W8_W64(I8[_saqrC::I64]);
           if (_saqrM::I64 == 254) goto caqYQ; else goto uaqZn;
       caqYQ: // global
           call MO_Touch(R1);
           R1 = GHC.Event.Control.CMsgDie_closure+2;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       uaqZn: // global
           if (_saqrM::I64 == 255) goto caqYR; else goto caqXW;
       caqYR: // global
           call MO_Touch(R1);
           R1 = GHC.Event.Control.CMsgWakeup_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       caqXW: // global
           I64[Sp - 16] = block_caqXZ_info;
           I64[Sp - 8] = _saqrM::I64;
           P64[Sp] = R1;
           Sp = Sp - 16;
           _uaqZq::P64 = CurrentTSO;
           I64[I64[_uaqZq::P64 + 24] + 16] = Sp;
           _uaqZr::I64 = CurrentNursery;
           P64[_uaqZr::I64 + 8] = Hp + 8;
           I64[_uaqZq::P64 + 104] = I64[_uaqZq::P64 + 104] - ((Hp + 8) - I64[_uaqZr::I64]);
           (_uaqZo::I64) = call "ccall" arg hints:  [PtrHint,]  result hints:  [PtrHint] suspendThread(BaseReg, 0);
           (_saqrQ::I64) = call "ccall" arg hints:  []  result hints:  [] __hscore_sizeof_siginfo_t();
           (_uaqZp::I64) = call "ccall" arg hints:  [PtrHint]  result hints:  [PtrHint] resumeThread(_uaqZo::I64);
           BaseReg = _uaqZp::I64;
           _uaqZs::P64 = CurrentTSO;
           _uaqZt::P64 = I64[_uaqZs::P64 + 24];
           Sp = I64[_uaqZt::P64 + 16];
           SpLim = _uaqZt::P64 + 192;
           HpAlloc = 0;
           _uaqZu::I64 = CurrentNursery;
           _uaqZv::I64 = I64[_uaqZu::I64 + 8];
           Hp = _uaqZv::I64 - 8;
           _uaqZw::I64 = I64[_uaqZu::I64];
           HpLim = _uaqZw::I64 + ((%MO_SS_Conv_W32_W64(I32[_uaqZu::I64 + 48]) << 12) - 1);
           I64[_uaqZs::P64 + 104] = I64[_uaqZs::P64 + 104] + (_uaqZv::I64 - _uaqZw::I64);
           R1 = _saqrQ::I64;
           call (I64[I64[Sp]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_caqXF_info" {
     block_caqXF_info:
         const _caqXF;
         const 65;
         const 107374182430;
         const Saqxx_srt+208;
 },
 _caqXZ() //  [R1]
         { []
         }
     {offset
       caqXZ: // global
           if (%MO_S_Ge_W64(R1, 0)) goto caqYs; else goto caqYP;
       caqYs: // global
           I64[Sp - 16] = block_caqY8_info;
           _saqrQ::I64 = R1;
           _saqrR::I64 = R1;
           R1 = GHC.ForeignPtr.NoFinalizers_closure+1;
           I64[Sp - 8] = _saqrR::I64;
           I64[Sp] = _saqrQ::I64;
           Sp = Sp - 16;
           call stg_newMutVar#(R1) args: 8, res: 8, upd: 8;
       caqYP: // global
           R1 = GHC.ForeignPtr.mallocForeignPtrBytes2_closure;
           Sp = Sp + 32;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_caqXZ_info" {
     block_caqXZ_info:
         const _caqXZ;
         const 323;
         const 73014444062;
         const Saqxx_srt+208;
 },
 _caqY8() //  [R1]
         { []
         }
     {offset
       caqY8: // global
           I64[Sp] = block_caqYa_info;
           _saqrV::P64 = R1;
           R1 = I64[Sp + 8];
           P64[Sp + 8] = _saqrV::P64;
           call stg_newPinnedByteArray#(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_caqY8_info" {
     block_caqY8_info:
         const _caqY8;
         const 1477;
         const 4294967326;
         const Saqxx_srt+240;
 },
 _caqYa() //  [R1]
         { []
         }
     {offset
       caqYa: // global
           _saqrQ::I64 = I64[Sp + 16];
           _saqrZ::I64 = R1 + 16;
           (_saqs4::I64) = call "capi" arg hints:  [‘signed’,
                                                    PtrHint,]  result hints:  [‘signed’] ghczuwrapperZC22ZCbaseZCSystemziPosixziInternalsZCread(%MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(I64[Sp + 40])), _saqrZ::I64, _saqrQ::I64);
           I64[Sp - 8] = block_caqYm_info;
           R2 = _saqrQ::I64;
           I64[Sp] = _saqs4::I64;
           I64[Sp + 16] = _saqrZ::I64;
           P64[Sp + 40] = R1;
           Sp = Sp - 8;
           call GHC.Integer.Type.wordToInteger_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_caqYa_info" {
     block_caqYa_info:
         const _caqYa;
         const 1413;
         const 4294967326;
         const Saqxx_srt+240;
 },
 _caqYm() //  [R1]
         { []
         }
     {offset
       caqYm: // global
           I64[Sp] = block_caqYq_info;
           R2 = R1;
           call GHC.Integer.Type.integerToInt_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_caqYm_info" {
     block_caqYm_info:
         const _caqYm;
         const 838;
         const 4294967326;
         const Saqxx_srt+240;
 },
 _caqYq() //  [R1]
         { []
         }
     {offset
       caqYq: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto caqYB; else goto caqYA;
       caqYB: // global
           HpAlloc = 56;
           R1 = R1;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       caqYA: // global
           if (I64[Sp + 8] == R1) goto caqYN; else goto caqYO;
       caqYN: // global
           I64[Hp - 48] = GHC.ForeignPtr.MallocPtr_con_info;
           P64[Hp - 40] = P64[Sp + 48];
           P64[Hp - 32] = P64[Sp + 16];
           _saqrB::P64 = P64[Sp + 40];
           _saqrM::I64 = I64[Sp + 32];
           _saqrZ::I64 = I64[Sp + 24];
           _caqYF::P64 = Hp - 46;
           call MO_Touch(_caqYF::P64);
           call MO_Touch(_saqrB::P64);
           I64[Hp - 24] = GHC.Event.Control.CMsgSignal_con_info;
           P64[Hp - 16] = _caqYF::P64;
           I64[Hp - 8] = _saqrZ::I64;
           I64[Hp] = _saqrM::I64;
           R1 = Hp - 21;
           Sp = Sp + 56;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       caqYO: // global
           Hp = Hp - 56;
           R1 = GHC.Event.Control.readControlMessage4_closure;
           Sp = Sp + 56;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_caqYq_info" {
     block_caqYq_info:
         const _caqYq;
         const 838;
         const 4294967326;
         const Saqxx_srt+240;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.795902322 UTC

[section ""data" . GHC.Event.Control.readControlMessage1_closure" {
     GHC.Event.Control.readControlMessage1_closure:
         const GHC.Event.Control.readControlMessage1_info;
         const 0;
 },
 GHC.Event.Control.readControlMessage1_entry() //  [R2, R3]
         { []
         }
     {offset
       car0H: // global
           if ((Sp + -24) < SpLim) (likely: False) goto car0L; else goto car0M;
       car0L: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Control.readControlMessage1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       car0M: // global
           I64[Sp - 16] = block_car0E_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto uar0U; else goto car0F;
       uar0U: // global
           call _car0E(R1) args: 0, res: 0, upd: 0;
       car0F: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.readControlMessage1_info" {
     GHC.Event.Control.readControlMessage1_info:
         const GHC.Event.Control.readControlMessage1_entry;
         const 0;
         const 73014444046;
         const 12884901903;
         const Saqxx_srt+216;
 },
 _car0E() //  [R1]
         { []
         }
     {offset
       car0E: // global
           I64[Sp - 8] = block_car0K_info;
           _saqsN::P64 = P64[R1 + 15];
           _saqsL::I64 = I64[R1 + 39];
           R1 = P64[Sp + 8];
           P64[Sp] = _saqsN::P64;
           I64[Sp + 8] = _saqsL::I64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto uar0T; else goto car0O;
       uar0T: // global
           call _car0K(R1) args: 0, res: 0, upd: 0;
       car0O: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_car0E_info" {
     block_car0E_info:
         const _car0E;
         const 1;
         const 4294967326;
         const Saqxx_srt+216;
 },
 _car0K() //  [R1]
         { []
         }
     {offset
       car0K: // global
           R4 = I64[R1 + 7];
           R3 = P64[Sp + 8];
           R2 = I64[Sp + 16];
           Sp = Sp + 24;
           call GHC.Event.Control.$wreadControlMessage_entry(R4,
                                                             R3,
                                                             R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_car0K_info" {
     block_car0K_info:
         const _car0K;
         const 130;
         const 4294967326;
         const Saqxx_srt+216;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.803310569 UTC

[section ""data" . GHC.Event.Control.readControlMessage_closure" {
     GHC.Event.Control.readControlMessage_closure:
         const GHC.Event.Control.readControlMessage_info;
         const 0;
 },
 GHC.Event.Control.readControlMessage_entry() //  [R2, R3]
         { []
         }
     {offset
       car1e: // global
           R3 = R3;
           R2 = R2;
           call GHC.Event.Control.readControlMessage1_entry(R3,
                                                            R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.readControlMessage_info" {
     GHC.Event.Control.readControlMessage_info:
         const GHC.Event.Control.readControlMessage_entry;
         const 0;
         const 4294967310;
         const 12884901903;
         const Saqxx_srt+248;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.807228581 UTC

[section ""data" . GHC.Event.Control.W_closure" {
     GHC.Event.Control.W_closure:
         const GHC.Event.Control.W_info;
 },
 GHC.Event.Control.W_slow() //  [R1]
         { []
         }
     {offset
       car1m: // global
           R6 = P64[Sp + 32];
           R5 = P64[Sp + 24];
           R4 = I64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = I64[Sp];
           R1 = R1;
           Sp = Sp + 40;
           call GHC.Event.Control.W_entry(R6,
                                          R5,
                                          R4,
                                          R3,
                                          R2,
                                          R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.Event.Control.W_entry() //  [R2, R3, R4, R5, R6]
         { []
         }
     {offset
       car1r: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto car1v; else goto car1u;
       car1v: // global
           HpAlloc = 48;
           R1 = GHC.Event.Control.W_closure;
           I64[Sp - 40] = R2;
           I64[Sp - 32] = R3;
           I64[Sp - 24] = R4;
           P64[Sp - 16] = R5;
           P64[Sp - 8] = R6;
           Sp = Sp - 40;
           call (stg_gc_fun)(R1) args: 48, res: 0, upd: 8;
       car1u: // global
           I64[Hp - 40] = GHC.Event.Control.W_con_info;
           P64[Hp - 32] = R5;
           P64[Hp - 24] = R6;
           I64[Hp - 16] = R2;
           I64[Hp - 8] = R3;
           I64[Hp] = R4;
           R1 = Hp - 39;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.W_info" {
     GHC.Event.Control.W_info:
         const GHC.Event.Control.W_entry;
         const 0;
         const 14;
         const 21474836480;
         const 0;
         const 453;
         const GHC.Event.Control.W_slow;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.81142372 UTC

[section ""data" . GHC.Event.Control.CMsgWakeup_closure" {
     GHC.Event.Control.CMsgWakeup_closure:
         const GHC.Event.Control.CMsgWakeup_con_info;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.812998858 UTC

[section ""data" . GHC.Event.Control.CMsgDie_closure" {
     GHC.Event.Control.CMsgDie_closure:
         const GHC.Event.Control.CMsgDie_con_info;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.815210239 UTC

[section ""data" . GHC.Event.Control.CMsgSignal_closure" {
     GHC.Event.Control.CMsgSignal_closure:
         const GHC.Event.Control.CMsgSignal_info;
 },
 GHC.Event.Control.CMsgSignal_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       car1L: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto car1P; else goto car1O;
       car1P: // global
           HpAlloc = 32;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Control.CMsgSignal_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       car1O: // global
           I64[Hp - 24] = GHC.Event.Control.CMsgSignal_con_info;
           P64[Hp - 16] = R3;
           I64[Hp - 8] = R2;
           I64[Hp] = R4;
           R1 = Hp - 21;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.CMsgSignal_info" {
     GHC.Event.Control.CMsgSignal_info:
         const GHC.Event.Control.CMsgSignal_entry;
         const 0;
         const 14;
         const 12884901906;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.819043412 UTC

[section ""cstring" . iar1X_str" {
     iar1X_str:
         I8[] [98,97,115,101,58,71,72,67,46,69,118,101,110,116,46,67,111,110,116,114,111,108,46,87]
 },
 GHC.Event.Control.W_con_entry() //  [R1]
         { []
         }
     {offset
       car1W: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.W_con_info" {
     GHC.Event.Control.W_con_info:
         const GHC.Event.Control.W_con_entry;
         const 12884901890;
         const 1;
         const iar1X_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.822279963 UTC

[section ""cstring" . iar24_str" {
     iar24_str:
         I8[] [98,97,115,101,58,71,72,67,46,69,118,101,110,116,46,67,111,110,116,114,111,108,46,67,77,115,103,87,97,107,101,117,112]
 },
 GHC.Event.Control.CMsgWakeup_con_entry() //  [R1]
         { []
         }
     {offset
       car23: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.CMsgWakeup_con_info" {
     GHC.Event.Control.CMsgWakeup_con_info:
         const GHC.Event.Control.CMsgWakeup_con_entry;
         const 4294967296;
         const 3;
         const iar24_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.825414018 UTC

[section ""cstring" . iar2b_str" {
     iar2b_str:
         I8[] [98,97,115,101,58,71,72,67,46,69,118,101,110,116,46,67,111,110,116,114,111,108,46,67,77,115,103,68,105,101]
 },
 GHC.Event.Control.CMsgDie_con_entry() //  [R1]
         { []
         }
     {offset
       car2a: // global
           R1 = R1 + 2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.CMsgDie_con_info" {
     GHC.Event.Control.CMsgDie_con_info:
         const GHC.Event.Control.CMsgDie_con_entry;
         const 4294967296;
         const 4294967299;
         const iar2b_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.828591508 UTC

[section ""cstring" . iar2i_str" {
     iar2i_str:
         I8[] [98,97,115,101,58,71,72,67,46,69,118,101,110,116,46,67,111,110,116,114,111,108,46,67,77,115,103,83,105,103,110,97,108]
 },
 GHC.Event.Control.CMsgSignal_con_entry() //  [R1]
         { []
         }
     {offset
       car2h: // global
           R1 = R1 + 3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Control.CMsgSignal_con_info" {
     GHC.Event.Control.CMsgSignal_con_info:
         const GHC.Event.Control.CMsgSignal_con_entry;
         const 8589934593;
         const 8589934593;
         const iar2i_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:05:26.832262478 UTC

[section ""relreadonly" . Saqxx_srt" {
     Saqxx_srt:
         const GHC.Ptr.$w$cshowsPrec_closure;
         const GHC.Event.Control.$fShowControlMessage3_closure;
         const GHC.Event.Control.$fShowControlMessage_$cshowsPrec_closure;
         const GHC.Event.Control.$fShowControlMessage5_closure;
         const GHC.Event.Control.$fShowControlMessage7_closure;
         const GHC.Event.Control.$fShowControlMessage_$cshow_closure;
         const GHC.Event.Control.$fShowControlMessage1_closure;
         const Foreign.C.Error.throwErrno1_closure;
         const GHC.Event.Control.$wsendWakeup_closure;
         const GHC.Event.Control.sendWakeup2_closure;
         const GHC.Event.Control.sendWakeup1_closure;
         const Foreign.C.Error.$wlvl_closure;
         const lvl1_raoWT_closure;
         const GHC.Event.Control.$wsendDie_closure;
         const GHC.Event.Control.sendDie2_closure;
         const GHC.Event.Control.sendDie1_closure;
         const lvl5_raoWX_closure;
         const Foreign.C.Error.throwErrnoIfMinus1Retry2_closure;
         const System.Posix.Internals.setCloseOnExec2_closure;
         const System.Posix.Internals.setNonBlockingFD3_closure;
         const GHC.Event.Control.newControl1_closure;
         const lvl3_raoWV_closure;
         const lvl6_raoWY_closure;
         const GHC.Err.errorWithoutStackTrace_closure;
         const lvl9_raoX1_closure;
         const lvl11_raoX3_closure;
         const GHC.ForeignPtr.mallocForeignPtrBytes2_closure;
         const GHC.Event.Control.$wreadControlMessage_closure;
         const GHC.Event.Control.readControlMessage2_closure;
         const GHC.Event.Control.readControlMessage3_closure;
         const GHC.Event.Control.readControlMessage4_closure;
         const GHC.Event.Control.readControlMessage1_closure;
 }]

