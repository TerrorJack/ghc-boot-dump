
==================== Pre unarise: ====================
2018-03-16 16:05:18.948536646 UTC

GHC.Event.Poll.$WPollFd [InlPrag=INLINE[2]]
  :: System.Posix.Types.Fd
     -> GHC.Event.Poll.Event
     -> GHC.Event.Poll.Event
     -> GHC.Event.Poll.PollFd
[GblId[DataConWrapper],
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,U><S,U><S,U>m,
 Unf=OtherCon []] =
    [] \r [dt_sajBm dt_sajBn dt_sajBo]
        case dt_sajBm of {
          GHC.Int.I32# dt_sajBq [Occ=Once] ->
              case dt_sajBn of {
                GHC.Int.I16# dt_sajBs [Occ=Once] ->
                    case dt_sajBo of {
                      GHC.Int.I16# dt_sajBu [Occ=Once] ->
                          GHC.Event.Poll.PollFd [dt_sajBq dt_sajBs dt_sajBu];
                    };
              };
        };

GHC.Event.Poll.$WPoll [InlPrag=INLINE[2]]
  :: GHC.MVar.MVar (GHC.Event.Array.Array GHC.Event.Poll.PollFd)
     -> GHC.Event.Array.Array GHC.Event.Poll.PollFd
     -> GHC.Event.Poll.Poll
[GblId[DataConWrapper],
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,U><S,U>m,
 Unf=OtherCon []] =
    [] \r [dt_sajBv dt_sajBw]
        case dt_sajBv of {
          GHC.MVar.MVar dt_sajBy [Occ=Once] ->
              case dt_sajBw of {
                GHC.STRef.STRef dt_sajBA [Occ=Once] ->
                    GHC.Event.Poll.Poll [dt_sajBy dt_sajBA];
              };
        };

GHC.Event.Poll.$fStorablePollFd_$calignment
  :: GHC.Event.Poll.PollFd -> GHC.Types.Int
[GblId, Arity=1, Caf=NoCafRefs, Str=<L,A>m, Unf=OtherCon []] =
    [] \r [ds_sajBB] Foreign.Storable.$fStorableBool7;

GHC.Event.Poll.$fStorablePollFd7 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [8#];

GHC.Event.Poll.$fStorablePollFd_$csizeOf
  :: GHC.Event.Poll.PollFd -> GHC.Types.Int
[GblId, Arity=1, Caf=NoCafRefs, Str=<L,A>m, Unf=OtherCon []] =
    [] \r [ds_sajBC] GHC.Event.Poll.$fStorablePollFd7;

GHC.Event.Poll.$fStorablePollFd2
  :: GHC.Ptr.Ptr GHC.Event.Poll.PollFd
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Event.Poll.PollFd #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ptr_sajBD s_sajBE]
        case ptr_sajBD of {
          GHC.Ptr.Ptr addr_sajBG ->
              case readInt32OffAddr# [addr_sajBG 0# s_sajBE] of {
                (#,#) ipv_sajBI [Occ=Once] ipv1_sajBJ [Occ=Once] ->
                    case plusAddr# [addr_sajBG 4#] of sat_sajBK {
                      __DEFAULT ->
                          case readInt16OffAddr# [sat_sajBK 0# ipv_sajBI] of {
                            (#,#) ipv2_sajBM [Occ=Once] ipv3_sajBN [Occ=Once] ->
                                case plusAddr# [addr_sajBG 6#] of sat_sajBO {
                                  __DEFAULT ->
                                      case readInt16OffAddr# [sat_sajBO 0# ipv2_sajBM] of {
                                        (#,#) ipv4_sajBQ [Occ=Once] ipv5_sajBR [Occ=Once] ->
                                            let {
                                              sat_sajBS [Occ=Once] :: GHC.Event.Poll.PollFd
                                              [LclId] =
                                                  CCCS GHC.Event.Poll.PollFd! [ipv1_sajBJ
                                                                               ipv3_sajBN
                                                                               ipv5_sajBR];
                                            } in  (#,#) [ipv4_sajBQ sat_sajBS];
                                      };
                                };
                          };
                    };
              };
        };

GHC.Event.Poll.$fStorablePollFd6
  :: GHC.Ptr.Ptr GHC.Event.Poll.PollFd
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Event.Poll.PollFd #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ptr_sajBT off_sajBU eta_sajBV]
        case ptr_sajBT of {
          GHC.Ptr.Ptr addr_sajBX [Occ=Once] ->
              case off_sajBU of {
                GHC.Types.I# x_sajBZ [Occ=Once] ->
                    case *# [x_sajBZ 8#] of sat_sajC1 {
                      __DEFAULT ->
                          case plusAddr# [addr_sajBX sat_sajC1] of addr1_sajC0 [Dmd=<S,U>] {
                            __DEFAULT ->
                                case readInt32OffAddr# [addr1_sajC0 0# eta_sajBV] of {
                                  (#,#) ipv_sajC3 [Occ=Once] ipv1_sajC4 [Occ=Once] ->
                                      case plusAddr# [addr1_sajC0 4#] of sat_sajC5 {
                                        __DEFAULT ->
                                            case readInt16OffAddr# [sat_sajC5 0# ipv_sajC3] of {
                                              (#,#) ipv2_sajC7 [Occ=Once] ipv3_sajC8 [Occ=Once] ->
                                                  case plusAddr# [addr1_sajC0 6#] of sat_sajC9 {
                                                    __DEFAULT ->
                                                        case
                                                            readInt16OffAddr# [sat_sajC9
                                                                               0#
                                                                               ipv2_sajC7]
                                                        of
                                                        { (#,#) ipv4_sajCb [Occ=Once]
                                                                ipv5_sajCc [Occ=Once] ->
                                                              let {
                                                                sat_sajCd [Occ=Once]
                                                                  :: GHC.Event.Poll.PollFd
                                                                [LclId] =
                                                                    CCCS GHC.Event.Poll.PollFd! [ipv1_sajC4
                                                                                                 ipv3_sajC8
                                                                                                 ipv5_sajCc];
                                                              } in  (#,#) [ipv4_sajCb sat_sajCd];
                                                        };
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.Event.Poll.$fStorablePollFd4
  :: forall b.
     GHC.Ptr.Ptr b
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Event.Poll.PollFd #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ptr_sajCe off_sajCf eta_sajCg]
        case ptr_sajCe of {
          GHC.Ptr.Ptr addr_sajCi [Occ=Once] ->
              case off_sajCf of {
                GHC.Types.I# d_sajCk [Occ=Once] ->
                    case plusAddr# [addr_sajCi d_sajCk] of addr1_sajCl [Dmd=<S,U>] {
                      __DEFAULT ->
                          case readInt32OffAddr# [addr1_sajCl 0# eta_sajCg] of {
                            (#,#) ipv_sajCn [Occ=Once] ipv1_sajCo [Occ=Once] ->
                                case plusAddr# [addr1_sajCl 4#] of sat_sajCp {
                                  __DEFAULT ->
                                      case readInt16OffAddr# [sat_sajCp 0# ipv_sajCn] of {
                                        (#,#) ipv2_sajCr [Occ=Once] ipv3_sajCs [Occ=Once] ->
                                            case plusAddr# [addr1_sajCl 6#] of sat_sajCt {
                                              __DEFAULT ->
                                                  case
                                                      readInt16OffAddr# [sat_sajCt 0# ipv2_sajCr]
                                                  of
                                                  { (#,#) ipv4_sajCv [Occ=Once]
                                                          ipv5_sajCw [Occ=Once] ->
                                                        let {
                                                          sat_sajCx [Occ=Once]
                                                            :: GHC.Event.Poll.PollFd
                                                          [LclId] =
                                                              CCCS GHC.Event.Poll.PollFd! [ipv1_sajCo
                                                                                           ipv3_sajCs
                                                                                           ipv5_sajCw];
                                                        } in  (#,#) [ipv4_sajCv sat_sajCx];
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.Event.Poll.$fStorablePollFd1
  :: GHC.Ptr.Ptr GHC.Event.Poll.PollFd
     -> GHC.Event.Poll.PollFd
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(SSS),1*U(U,U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ptr_sajCy p_sajCz s_sajCA]
        case ptr_sajCy of {
          GHC.Ptr.Ptr addr_sajCC ->
              case p_sajCz of {
                GHC.Event.Poll.PollFd dt_sajCE [Occ=Once]
                                      dt1_sajCF [Occ=Once]
                                      dt2_sajCG [Occ=Once] ->
                    case
                        writeInt32OffAddr# [addr_sajCC 0# dt_sajCE s_sajCA]
                    of
                    s2_sajCH
                    { __DEFAULT ->
                          case plusAddr# [addr_sajCC 4#] of sat_sajCI {
                            __DEFAULT ->
                                case
                                    writeInt16OffAddr# [sat_sajCI 0# dt1_sajCF s2_sajCH]
                                of
                                s1_sajCJ
                                { __DEFAULT ->
                                      case plusAddr# [addr_sajCC 6#] of sat_sajCK {
                                        __DEFAULT ->
                                            case
                                                writeInt16OffAddr# [sat_sajCK 0# dt2_sajCG s1_sajCJ]
                                            of
                                            s3_sajCL
                                            { __DEFAULT -> (#,#) [s3_sajCL GHC.Tuple.()];
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.Event.Poll.$fStorablePollFd5
  :: GHC.Ptr.Ptr GHC.Event.Poll.PollFd
     -> GHC.Types.Int
     -> GHC.Event.Poll.PollFd
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(SSS),1*U(U,U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ptr_sajCM off_sajCN val_sajCO eta_sajCP]
        case ptr_sajCM of {
          GHC.Ptr.Ptr addr_sajCR [Occ=Once] ->
              case off_sajCN of {
                GHC.Types.I# x_sajCT [Occ=Once] ->
                    case val_sajCO of {
                      GHC.Event.Poll.PollFd dt_sajCV [Occ=Once]
                                            dt1_sajCW [Occ=Once]
                                            dt2_sajCX [Occ=Once] ->
                          case *# [x_sajCT 8#] of sat_sajCZ {
                            __DEFAULT ->
                                case plusAddr# [addr_sajCR sat_sajCZ] of addr1_sajCY [Dmd=<S,U>] {
                                  __DEFAULT ->
                                      case
                                          writeInt32OffAddr# [addr1_sajCY 0# dt_sajCV eta_sajCP]
                                      of
                                      s2_sajD0
                                      { __DEFAULT ->
                                            case plusAddr# [addr1_sajCY 4#] of sat_sajD1 {
                                              __DEFAULT ->
                                                  case
                                                      writeInt16OffAddr# [sat_sajD1
                                                                          0#
                                                                          dt1_sajCW
                                                                          s2_sajD0]
                                                  of
                                                  s1_sajD2
                                                  { __DEFAULT ->
                                                        case
                                                            plusAddr# [addr1_sajCY 6#]
                                                        of
                                                        sat_sajD3
                                                        { __DEFAULT ->
                                                              case
                                                                  writeInt16OffAddr# [sat_sajD3
                                                                                      0#
                                                                                      dt2_sajCX
                                                                                      s1_sajD2]
                                                              of
                                                              s3_sajD4
                                                              { __DEFAULT ->
                                                                    (#,#) [s3_sajD4 GHC.Tuple.()];
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.Event.Poll.$fStorablePollFd3
  :: forall b.
     GHC.Ptr.Ptr b
     -> GHC.Types.Int
     -> GHC.Event.Poll.PollFd
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(SSS),1*U(U,U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ptr_sajD5 off_sajD6 eta_sajD7 eta1_sajD8]
        case ptr_sajD5 of {
          GHC.Ptr.Ptr addr_sajDa [Occ=Once] ->
              case off_sajD6 of {
                GHC.Types.I# d_sajDc [Occ=Once] ->
                    case eta_sajD7 of {
                      GHC.Event.Poll.PollFd dt_sajDe [Occ=Once]
                                            dt1_sajDf [Occ=Once]
                                            dt2_sajDg [Occ=Once] ->
                          case plusAddr# [addr_sajDa d_sajDc] of addr1_sajDh [Dmd=<S,U>] {
                            __DEFAULT ->
                                case
                                    writeInt32OffAddr# [addr1_sajDh 0# dt_sajDe eta1_sajD8]
                                of
                                s2_sajDi
                                { __DEFAULT ->
                                      case plusAddr# [addr1_sajDh 4#] of sat_sajDj {
                                        __DEFAULT ->
                                            case
                                                writeInt16OffAddr# [sat_sajDj 0# dt1_sajDf s2_sajDi]
                                            of
                                            s1_sajDk
                                            { __DEFAULT ->
                                                  case plusAddr# [addr1_sajDh 6#] of sat_sajDl {
                                                    __DEFAULT ->
                                                        case
                                                            writeInt16OffAddr# [sat_sajDl
                                                                                0#
                                                                                dt2_sajDg
                                                                                s1_sajDk]
                                                        of
                                                        s3_sajDm
                                                        { __DEFAULT ->
                                                              (#,#) [s3_sajDm GHC.Tuple.()];
                                                        };
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.Event.Poll.$fStorablePollFd [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable GHC.Event.Poll.PollFd
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [GHC.Event.Poll.$fStorablePollFd_$csizeOf
                                                GHC.Event.Poll.$fStorablePollFd_$calignment
                                                GHC.Event.Poll.$fStorablePollFd6
                                                GHC.Event.Poll.$fStorablePollFd5
                                                GHC.Event.Poll.$fStorablePollFd4
                                                GHC.Event.Poll.$fStorablePollFd3
                                                GHC.Event.Poll.$fStorablePollFd2
                                                GHC.Event.Poll.$fStorablePollFd1];

GHC.Event.Poll.$fStorableEvent [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable GHC.Event.Poll.Event
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableInt16_$calignment
                                                Foreign.Storable.$fStorableInt16_$calignment
                                                GHC.Storable.readInt16OffPtr1
                                                GHC.Storable.writeInt16OffPtr1
                                                Foreign.Storable.$fStorableInt9
                                                Foreign.Storable.$fStorableInt7
                                                Foreign.Storable.$fStorableInt6
                                                Foreign.Storable.$fStorableInt5];

GHC.Event.Poll.$fShowEvent2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Event "#;

GHC.Event.Poll.$w$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Event.Poll.Event -> GHC.Base.String -> GHC.Base.String
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,U><L,1*U(U)><L,U>,
 Unf=OtherCon []] =
    [] \r [ww_sajDn w_sajDo w1_sajDp]
        case >=# [ww_sajDn 11#] of {
          __DEFAULT ->
              let {
                sat_sajDw [Occ=Once] :: [GHC.Types.Char]
                [LclId] =
                    [w_sajDo w1_sajDp] \u []
                        case w_sajDo of {
                          GHC.Int.I16# x#_sajDs [Occ=Once] ->
                              case GHC.Show.$wshowSignedInt 11# x#_sajDs w1_sajDp of {
                                (#,#) ww5_sajDu [Occ=Once] ww6_sajDv [Occ=Once] ->
                                    : [ww5_sajDu ww6_sajDv];
                              };
                        };
              } in 
                GHC.CString.unpackAppendCString#
                    GHC.Event.Poll.$fShowEvent2 sat_sajDw;
          1# ->
              let {
                sat_sajDE [Occ=Once] :: [GHC.Types.Char]
                [LclId] =
                    [w_sajDo w1_sajDp] \u []
                        let {
                          sat_sajDD [Occ=Once] :: [GHC.Types.Char]
                          [LclId] =
                              [w_sajDo w1_sajDp] \u []
                                  case w_sajDo of {
                                    GHC.Int.I16# x#_sajDy [Occ=Once] ->
                                        let {
                                          sat_sajDz [Occ=Once] :: GHC.Base.String
                                          [LclId] =
                                              CCCS :! [GHC.Show.$fShow(,)2 w1_sajDp];
                                        } in 
                                          case GHC.Show.$wshowSignedInt 11# x#_sajDy sat_sajDz of {
                                            (#,#) ww5_sajDB [Occ=Once] ww6_sajDC [Occ=Once] ->
                                                : [ww5_sajDB ww6_sajDC];
                                          };
                                  };
                        } in 
                          GHC.CString.unpackAppendCString#
                              GHC.Event.Poll.$fShowEvent2 sat_sajDD;
              } in  : [GHC.Show.$fShow(,)4 sat_sajDE];
        };

GHC.Event.Poll.$fShowEvent_$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Int -> GHC.Event.Poll.Event -> GHC.Show.ShowS
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><L,1*U(U)><L,U>,
 Unf=OtherCon []] =
    [] \r [w_sajDF w1_sajDG w2_sajDH]
        case w_sajDF of {
          GHC.Types.I# ww1_sajDJ [Occ=Once] ->
              GHC.Event.Poll.$w$cshowsPrec ww1_sajDJ w1_sajDG w2_sajDH;
        };

GHC.Event.Poll.$fShowEvent_$cshow
  :: GHC.Event.Poll.Event -> GHC.Base.String
[GblId, Arity=1, Caf=NoCafRefs, Str=<L,1*U(U)>, Unf=OtherCon []] =
    [] \r [x_sajDK]
        let {
          sat_sajDQ [Occ=Once] :: [GHC.Types.Char]
          [LclId] =
              [x_sajDK] \u []
                  case x_sajDK of {
                    GHC.Int.I16# x#_sajDM [Occ=Once] ->
                        case GHC.Show.$wshowSignedInt 11# x#_sajDM GHC.Types.[] of {
                          (#,#) ww5_sajDO [Occ=Once] ww6_sajDP [Occ=Once] ->
                              : [ww5_sajDO ww6_sajDP];
                        };
                  };
        } in 
          GHC.CString.unpackAppendCString#
              GHC.Event.Poll.$fShowEvent2 sat_sajDQ;

GHC.Event.Poll.$fShowEvent1
  :: GHC.Event.Poll.Event -> GHC.Show.ShowS
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,1*U(U)><L,U>,
 Unf=OtherCon []] =
    [] \r [w_sajDR w1_sajDS]
        GHC.Event.Poll.$w$cshowsPrec 0# w_sajDR w1_sajDS;

GHC.Event.Poll.$fShowEvent_$cshowList
  :: [GHC.Event.Poll.Event] -> GHC.Show.ShowS
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><L,U>,
 Unf=OtherCon []] =
    [] \r [ls_sajDT s_sajDU]
        GHC.Show.showList__ GHC.Event.Poll.$fShowEvent1 ls_sajDT s_sajDU;

GHC.Event.Poll.$fShowEvent [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show GHC.Event.Poll.Event
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Event.Poll.$fShowEvent_$cshowsPrec
                                    GHC.Event.Poll.$fShowEvent_$cshow
                                    GHC.Event.Poll.$fShowEvent_$cshowList];

GHC.Event.Poll.$fShowPollFd6 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "PollFd {"#;

GHC.Event.Poll.$fShowPollFd5 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "pfdFd = "#;

GHC.Event.Poll.$fShowPollFd4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "pfdEvents = "#;

GHC.Event.Poll.$fShowPollFd3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "pfdRevents = "#;

GHC.Event.Poll.$fShowPollFd2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "}"#;

GHC.Event.Poll.$w$cshowsPrec1 [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Base.String
     -> GHC.Base.String
[GblId, Arity=5, Str=<S,U><L,U><L,U><L,U><L,U>, Unf=OtherCon []] =
    [] \r [ww_sajDV ww1_sajDW ww2_sajDX ww3_sajDY w_sajDZ]
        let {
          p_sajE0 [Occ=Once*!, Dmd=<L,1*C1(U)>] :: GHC.Show.ShowS
          [LclId, Arity=1, Str=<L,U>, Unf=OtherCon []] =
              sat-only [ww1_sajDW ww2_sajDX ww3_sajDY] \r [x_sajE1]
                  let {
                    sat_sajEf [Occ=Once] :: [GHC.Types.Char]
                    [LclId] =
                        [ww1_sajDW ww2_sajDX ww3_sajDY x_sajE1] \u []
                            let {
                              sat_sajEe [Occ=Once] :: [GHC.Types.Char]
                              [LclId] =
                                  [ww1_sajDW ww2_sajDX ww3_sajDY x_sajE1] \u []
                                      let {
                                        sat_sajEa [Occ=Once] :: GHC.Base.String
                                        [LclId] =
                                            [ww2_sajDX ww3_sajDY x_sajE1] \u []
                                                let {
                                                  sat_sajE9 [Occ=Once, Dmd=<L,1*U>]
                                                    :: [GHC.Types.Char]
                                                  [LclId] =
                                                      [ww2_sajDX ww3_sajDY x_sajE1] \s []
                                                          let {
                                                            sat_sajE8 [Occ=Once] :: [GHC.Types.Char]
                                                            [LclId] =
                                                                [ww2_sajDX ww3_sajDY x_sajE1] \u []
                                                                    let {
                                                                      sat_sajE7 [Occ=Once]
                                                                        :: GHC.Base.String
                                                                      [LclId] =
                                                                          [ww3_sajDY x_sajE1] \u []
                                                                              let {
                                                                                sat_sajE6 [Occ=Once,
                                                                                           Dmd=<L,1*U>]
                                                                                  :: [GHC.Types.Char]
                                                                                [LclId] =
                                                                                    [ww3_sajDY
                                                                                     x_sajE1] \s []
                                                                                        let {
                                                                                          sat_sajE5 [Occ=Once]
                                                                                            :: [GHC.Types.Char]
                                                                                          [LclId] =
                                                                                              [ww3_sajDY
                                                                                               x_sajE1] \u []
                                                                                                  let {
                                                                                                    sat_sajE4 [Occ=Once]
                                                                                                      :: GHC.Base.String
                                                                                                    [LclId] =
                                                                                                        [x_sajE1] \u []
                                                                                                            GHC.CString.unpackAppendCString#
                                                                                                                GHC.Event.Poll.$fShowPollFd2
                                                                                                                x_sajE1; } in
                                                                                                  let {
                                                                                                    sat_sajE3 [Occ=Once]
                                                                                                      :: GHC.Event.Poll.Event
                                                                                                    [LclId] =
                                                                                                        CCCS GHC.Int.I16#! [ww3_sajDY];
                                                                                                  } in 
                                                                                                    GHC.Event.Poll.$w$cshowsPrec
                                                                                                        0#
                                                                                                        sat_sajE3
                                                                                                        sat_sajE4;
                                                                                        } in 
                                                                                          GHC.CString.unpackAppendCString#
                                                                                              GHC.Event.Poll.$fShowPollFd3
                                                                                              sat_sajE5;
                                                                              } in 
                                                                                GHC.Base.++
                                                                                    GHC.Show.showCommaSpace1
                                                                                    sat_sajE6; } in
                                                                    let {
                                                                      sat_sajE2 [Occ=Once]
                                                                        :: GHC.Event.Poll.Event
                                                                      [LclId] =
                                                                          CCCS GHC.Int.I16#! [ww2_sajDX];
                                                                    } in 
                                                                      GHC.Event.Poll.$w$cshowsPrec
                                                                          0# sat_sajE2 sat_sajE7;
                                                          } in 
                                                            GHC.CString.unpackAppendCString#
                                                                GHC.Event.Poll.$fShowPollFd4
                                                                sat_sajE8;
                                                } in 
                                                  GHC.Base.++ GHC.Show.showCommaSpace1 sat_sajE9;
                                      } in 
                                        case GHC.Show.$wshowSignedInt 0# ww1_sajDW sat_sajEa of {
                                          (#,#) ww5_sajEc [Occ=Once] ww6_sajEd [Occ=Once] ->
                                              : [ww5_sajEc ww6_sajEd];
                                        };
                            } in 
                              GHC.CString.unpackAppendCString#
                                  GHC.Event.Poll.$fShowPollFd5 sat_sajEe;
                  } in 
                    GHC.CString.unpackAppendCString#
                        GHC.Event.Poll.$fShowPollFd6 sat_sajEf;
        } in 
          case >=# [ww_sajDV 11#] of {
            __DEFAULT -> p_sajE0 w_sajDZ;
            1# ->
                let {
                  sat_sajEi [Occ=Once] :: [GHC.Types.Char]
                  [LclId] =
                      [w_sajDZ p_sajE0] \u []
                          let {
                            sat_sajEh [Occ=Once] :: GHC.Base.String
                            [LclId] =
                                CCCS :! [GHC.Show.$fShow(,)2 w_sajDZ];
                          } in  p_sajE0 sat_sajEh;
                } in  : [GHC.Show.$fShow(,)4 sat_sajEi];
          };

GHC.Event.Poll.$fShowPollFd_$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Int -> GHC.Event.Poll.PollFd -> GHC.Show.ShowS
[GblId,
 Arity=3,
 Str=<S(S),1*U(U)><S(SSS),1*U(U,U,U)><L,U>,
 Unf=OtherCon []] =
    [] \r [w_sajEj w1_sajEk w2_sajEl]
        case w_sajEj of {
          GHC.Types.I# ww1_sajEn [Occ=Once] ->
              case w1_sajEk of {
                GHC.Event.Poll.PollFd ww3_sajEp [Occ=Once]
                                      ww4_sajEq [Occ=Once]
                                      ww5_sajEr [Occ=Once] ->
                    GHC.Event.Poll.$w$cshowsPrec1
                        ww1_sajEn ww3_sajEp ww4_sajEq ww5_sajEr w2_sajEl;
              };
        };

GHC.Event.Poll.$fShowPollFd7 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [0#];

GHC.Event.Poll.$fShowPollFd_$cshow
  :: GHC.Event.Poll.PollFd -> GHC.Base.String
[GblId, Arity=1, Str=<S(SSS),1*U(U,U,U)>, Unf=OtherCon []] =
    [] \r [x_sajEs]
        case x_sajEs of {
          GHC.Event.Poll.PollFd ww1_sajEu [Occ=Once]
                                ww2_sajEv [Occ=Once]
                                ww3_sajEw [Occ=Once] ->
              GHC.Event.Poll.$w$cshowsPrec1
                  0# ww1_sajEu ww2_sajEv ww3_sajEw GHC.Types.[];
        };

GHC.Event.Poll.$fShowPollFd1
  :: GHC.Event.Poll.PollFd -> GHC.Show.ShowS
[GblId, Arity=2, Str=<S(SSS),1*U(U,U,U)><L,U>, Unf=OtherCon []] =
    [] \r [w_sajEx w1_sajEy]
        case w_sajEx of {
          GHC.Event.Poll.PollFd ww1_sajEA [Occ=Once]
                                ww2_sajEB [Occ=Once]
                                ww3_sajEC [Occ=Once] ->
              GHC.Event.Poll.$w$cshowsPrec1
                  0# ww1_sajEA ww2_sajEB ww3_sajEC w1_sajEy;
        };

GHC.Event.Poll.$fShowPollFd_$cshowList
  :: [GHC.Event.Poll.PollFd] -> GHC.Show.ShowS
[GblId, Arity=2, Str=<S,1*U><L,U>, Unf=OtherCon []] =
    [] \r [ls_sajED s_sajEE]
        GHC.Show.showList__ GHC.Event.Poll.$fShowPollFd1 ls_sajED s_sajEE;

GHC.Event.Poll.$fShowPollFd [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show GHC.Event.Poll.PollFd
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Event.Poll.$fShowPollFd_$cshowsPrec
                                    GHC.Event.Poll.$fShowPollFd_$cshow
                                    GHC.Event.Poll.$fShowPollFd_$cshowList];

GHC.Event.Poll.$fEqEvent [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq GHC.Event.Poll.Event
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt16 GHC.Int.neInt16];

GHC.Event.Poll.pfdRevents
  :: GHC.Event.Poll.PollFd -> GHC.Event.Poll.Event
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLS),1*U(A,A,U)>m,
 Unf=OtherCon []] =
    [] \r [ds_sajEF]
        case ds_sajEF of {
          GHC.Event.Poll.PollFd _ [Occ=Dead]
                                _ [Occ=Dead]
                                dt2_sajEJ [Occ=Once] ->
              GHC.Int.I16# [dt2_sajEJ];
        };

GHC.Event.Poll.pfdEvents
  :: GHC.Event.Poll.PollFd -> GHC.Event.Poll.Event
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LSL),1*U(A,U,A)>m,
 Unf=OtherCon []] =
    [] \r [ds_sajEK]
        case ds_sajEK of {
          GHC.Event.Poll.PollFd _ [Occ=Dead]
                                dt1_sajEN [Occ=Once]
                                _ [Occ=Dead] ->
              GHC.Int.I16# [dt1_sajEN];
        };

GHC.Event.Poll.pfdFd
  :: GHC.Event.Poll.PollFd -> System.Posix.Types.Fd
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SLL),1*U(U,A,A)>m,
 Unf=OtherCon []] =
    [] \r [ds_sajEP]
        case ds_sajEP of {
          GHC.Event.Poll.PollFd dt_sajER [Occ=Once]
                                _ [Occ=Dead]
                                _ [Occ=Dead] ->
              GHC.Int.I32# [dt_sajER];
        };

GHC.Event.Poll.pollFd
  :: GHC.Event.Poll.Poll
     -> GHC.Event.Array.Array GHC.Event.Poll.PollFd
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LS),1*U(A,U)>m,
 Unf=OtherCon []] =
    [] \r [ds_sajEU]
        case ds_sajEU of {
          GHC.Event.Poll.Poll _ [Occ=Dead] dt1_sajEX [Occ=Once] ->
              GHC.STRef.STRef [dt1_sajEX];
        };

GHC.Event.Poll.pollChanges
  :: GHC.Event.Poll.Poll
     -> GHC.MVar.MVar (GHC.Event.Array.Array GHC.Event.Poll.PollFd)
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,A)>m,
 Unf=OtherCon []] =
    [] \r [ds_sajEY]
        case ds_sajEY of {
          GHC.Event.Poll.Poll dt_sajF0 [Occ=Once] _ [Occ=Dead] ->
              GHC.MVar.MVar [dt_sajF0];
        };

GHC.Event.Poll.available [InlPrag=INLINE (sat-args=0)]
  :: GHC.Types.Bool
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.True! [];

GHC.Event.Poll.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

GHC.Event.Poll.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Poll.$trModule4];

GHC.Event.Poll.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.Event.Poll"#;

GHC.Event.Poll.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Poll.$trModule2];

GHC.Event.Poll.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [GHC.Event.Poll.$trModule3
                                     GHC.Event.Poll.$trModule1];

$krep_rajAW :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCShort
                                              GHC.Types.[]];

$krep1_rajAX :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [System.Posix.Types.$tcFd
                                              GHC.Types.[]];

GHC.Event.Poll.$tcEvent2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Event"#;

GHC.Event.Poll.$tcEvent1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Poll.$tcEvent2];

GHC.Event.Poll.$tcEvent :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [10782964843686049546##
                                    16589058175633483645##
                                    GHC.Event.Poll.$trModule
                                    GHC.Event.Poll.$tcEvent1
                                    0#
                                    GHC.Types.krep$*];

$krep2_rajAY :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.Poll.$tcEvent
                                              GHC.Types.[]];

GHC.Event.Poll.$tc'Event1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_rajAW $krep2_rajAY];

GHC.Event.Poll.$tc'Event3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Event"#;

GHC.Event.Poll.$tc'Event2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Poll.$tc'Event3];

GHC.Event.Poll.$tc'Event :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [14301517435728423362##
                                    8190957594797964970##
                                    GHC.Event.Poll.$trModule
                                    GHC.Event.Poll.$tc'Event2
                                    0#
                                    GHC.Event.Poll.$tc'Event1];

GHC.Event.Poll.$tcPollFd2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "PollFd"#;

GHC.Event.Poll.$tcPollFd1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Poll.$tcPollFd2];

GHC.Event.Poll.$tcPollFd :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [16228031948332168786##
                                    6382085973026785723##
                                    GHC.Event.Poll.$trModule
                                    GHC.Event.Poll.$tcPollFd1
                                    0#
                                    GHC.Types.krep$*];

$krep3_rajAZ :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.Poll.$tcPollFd
                                              GHC.Types.[]];

$krep4_rajB0 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_rajAY $krep3_rajAZ];

$krep5_rajB1 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_rajAY $krep4_rajB0];

GHC.Event.Poll.$tc'PollFd1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep1_rajAX $krep5_rajB1];

GHC.Event.Poll.$tc'PollFd3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'PollFd"#;

GHC.Event.Poll.$tc'PollFd2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Poll.$tc'PollFd3];

GHC.Event.Poll.$tc'PollFd :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [13628496348781941345##
                                    13702663238288085101##
                                    GHC.Event.Poll.$trModule
                                    GHC.Event.Poll.$tc'PollFd2
                                    0#
                                    GHC.Event.Poll.$tc'PollFd1];

$krep6_rajB2 :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep3_rajAZ GHC.Types.[]];

$krep7_rajB3 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.Array.$tcArray
                                              $krep6_rajB2];

$krep8_rajB4 :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep7_rajB3 GHC.Types.[]];

$krep9_rajB5 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.MVar.$tcMVar
                                              $krep8_rajB4];

GHC.Event.Poll.$tcPoll2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Poll"#;

GHC.Event.Poll.$tcPoll1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Poll.$tcPoll2];

GHC.Event.Poll.$tcPoll :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [13451464419968486054##
                                    9195109480934256969##
                                    GHC.Event.Poll.$trModule
                                    GHC.Event.Poll.$tcPoll1
                                    0#
                                    GHC.Types.krep$*];

$krep10_rajB6 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.Poll.$tcPoll
                                              GHC.Types.[]];

$krep11_rajB7 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep7_rajB3 $krep10_rajB6];

GHC.Event.Poll.$tc'Poll1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep9_rajB5 $krep11_rajB7];

GHC.Event.Poll.$tc'Poll3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Poll"#;

GHC.Event.Poll.$tc'Poll2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Poll.$tc'Poll3];

GHC.Event.Poll.$tc'Poll :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [5431567153781643515##
                                    15938353663250731731##
                                    GHC.Event.Poll.$trModule
                                    GHC.Event.Poll.$tc'Poll2
                                    0#
                                    GHC.Event.Poll.$tc'Poll1];

GHC.Event.Poll.$fBitsEvent [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits GHC.Event.Poll.Event
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [GHC.Event.Poll.$fEqEvent
                                     GHC.Int.$fBitsInt16_$c.&.
                                     GHC.Int.$fBitsInt16_$c.|.
                                     GHC.Int.$fBitsInt16_$cxor
                                     GHC.Int.$fBitsInt16_$ccomplement
                                     GHC.Int.$fBitsInt16_$cshift
                                     GHC.Int.$fBitsInt16_$crotate
                                     GHC.Int.$fBitsInt3
                                     GHC.Int.$fBitsInt16_$cbit
                                     GHC.Int.$fBitsInt16_$csetBit
                                     GHC.Int.$fBitsInt16_$cclearBit
                                     GHC.Int.$fBitsInt16_$ccomplementBit
                                     GHC.Int.$fBitsInt16_$ctestBit
                                     GHC.Int.$fBitsInt16_$cbitSizeMaybe
                                     GHC.Int.$fBitsInt16_$cfiniteBitSize
                                     GHC.Int.$fBitsInt16_$cisSigned
                                     GHC.Int.$fBitsInt16_$cshiftL
                                     GHC.Int.$fBitsInt16_$cunsafeShiftL
                                     GHC.Int.$fBitsInt16_$cshiftR
                                     GHC.Int.$fBitsInt16_$cunsafeShiftR
                                     GHC.Int.$fBitsInt16_$crotateL
                                     GHC.Int.$fBitsInt16_$crotateR
                                     GHC.Int.$fBitsInt16_$cpopCount];

GHC.Event.Poll.$fFiniteBitsEvent [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits GHC.Event.Poll.Event
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [GHC.Event.Poll.$fBitsEvent
                                           GHC.Int.$fBitsInt16_$cfiniteBitSize
                                           GHC.Int.$fFiniteBitsInt16_$ccountLeadingZeros
                                           GHC.Int.$fFiniteBitsInt16_$ccountTrailingZeros];

GHC.Event.Poll.$fNumEvent [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num GHC.Event.Poll.Event
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Int.$fNumInt16_$c+
                                  GHC.Int.$fNumInt16_$c-
                                  GHC.Int.$fNumInt16_$c*
                                  GHC.Int.$fNumInt16_$cnegate
                                  GHC.Int.$fNumInt16_$cabs
                                  GHC.Int.$fNumInt16_$csignum
                                  GHC.Int.$fNumInt16_$cfromInteger];

lvl_rajB8 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "modifyFdOnce not supported in Poll backend"#;

GHC.Event.Poll.new3
  :: GHC.Event.Poll.Poll
     -> System.Posix.Types.Fd
     -> GHC.Event.Internal.Event
     -> GHC.Types.IO GHC.Types.Bool
[GblId, Str=x] =
    [] \u []
        case GHC.CString.unpackCString# lvl_rajB8 of sat_sajF2 {
          __DEFAULT -> GHC.Err.errorWithoutStackTrace sat_sajF2;
        };

$wc_pollLoop_rajB9
  :: GHC.Prim.Addr#
     -> GHC.Prim.Word#
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, Foreign.C.Types.CInt #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S,U><S,U><S,U><S,U>,
 Unf=OtherCon []] =
    sat-only [] \r [ww_sajF3 ww1_sajF4 ww2_sajF5 w_sajF6]
        case <=# [ww2_sajF5 2147483647#] of {
          __DEFAULT ->
              case
                  __pkg_ccall_GC base-4.11.0.0 [ww_sajF3
                                                ww1_sajF4
                                                2147483647#
                                                w_sajF6]
              of
              { (#,#) ds_sajFa [Occ=Once*] ds1_sajFb [Occ=Once] ->
                    case narrow32Int# [ds1_sajFb] of wild1_sajFc {
                      __DEFAULT ->
                          let {
                            sat_sajFd [Occ=Once] :: Foreign.C.Types.CInt
                            [LclId] =
                                CCCS GHC.Int.I32#! [wild1_sajFc];
                          } in  (#,#) [ds_sajFa sat_sajFd];
                      0# ->
                          case -# [ww2_sajF5 2147483647#] of sat_sajFe {
                            __DEFAULT ->
                                $wc_pollLoop_rajB9 ww_sajF3 ww1_sajF4 sat_sajFe ds_sajFa;
                          };
                    };
              };
          1# ->
              case narrow32Int# [ww2_sajF5] of sat_sajFg {
                __DEFAULT ->
                    case
                        __pkg_ccall_GC base-4.11.0.0 [ww_sajF3 ww1_sajF4 sat_sajFg w_sajF6]
                    of
                    { (#,#) ds_sajFi [Occ=Once] ds1_sajFj [Occ=Once] ->
                          case narrow32Int# [ds1_sajFj] of sat_sajFk {
                            __DEFAULT ->
                                let {
                                  sat_sajFl [Occ=Once] :: GHC.Int.Int32
                                  [LclId] =
                                      CCCS GHC.Int.I32#! [sat_sajFk];
                                } in  (#,#) [ds_sajFi sat_sajFl];
                          };
                    };
              };
        };

lvl1_rajBa :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [0#];

lvl2_rajBb :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "c_poll"#;

lvl3_rajBc :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl2_rajBb;

lvl4_rajBd :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "reworkFd: event not found"#;

lvl5_rajBe :: GHC.Types.IO ()
[GblId, Str=x] =
    [] \u []
        case GHC.CString.unpackCString# lvl4_rajBd of sat_sajFm {
          __DEFAULT -> GHC.Err.errorWithoutStackTrace sat_sajFm;
        };

lvl6_rajBf
  :: GHC.Event.Array.Array GHC.Event.Poll.PollFd
     -> Foreign.C.Types.CInt
     -> (Foreign.C.Types.CInt
         -> GHC.Event.Poll.PollFd
         -> GHC.Types.IO (Foreign.C.Types.CInt, GHC.Types.Bool))
     -> GHC.Types.IO ()
[GblId] =
    [] \u [] GHC.Event.Array.loop GHC.Event.Poll.$fStorablePollFd;

lvl7_rajBg :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [3#];

lvl8_rajBh :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [1#];

lvl9_rajBi :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [2#];

lvl10_rajBj
  :: GHC.Event.Array.Array GHC.Event.Poll.PollFd
     -> GHC.Types.Int -> GHC.Types.IO ()
[GblId] =
    [] \u [] GHC.Event.Array.removeAt GHC.Event.Poll.$fStorablePollFd;

lvl11_rajBk
  :: (GHC.Event.Poll.PollFd -> GHC.Types.Bool)
     -> GHC.Event.Array.Array GHC.Event.Poll.PollFd
     -> GHC.Types.IO
          (GHC.Base.Maybe (GHC.Types.Int, GHC.Event.Poll.PollFd))
[GblId] =
    [] \u [] GHC.Event.Array.findIndex GHC.Event.Poll.$fStorablePollFd;

GHC.Event.Poll.new5
  :: GHC.Event.Poll.Poll
     -> GHC.Base.Maybe GHC.Event.Internal.Timeout
     -> (System.Posix.Types.Fd
         -> GHC.Event.Internal.Event -> GHC.Types.IO ())
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=4,
 Str=<S(SL),1*U(U,U)><L,U><L,C(C1(C1(U(U,A))))><S,U>,
 Unf=OtherCon []] =
    [] \r [p_sajFn mtout_sajFo f_sajFp eta_sajFq]
        case newMutVar# [GHC.ForeignPtr.NoFinalizers eta_sajFq] of {
          (#,#) ipv_sajFs [Occ=Once] ipv1_sajFt [Occ=Once] ->
              let {
                sat_sajFu [Occ=Once] :: GHC.ForeignPtr.ForeignPtrContents
                [LclId] =
                    CCCS GHC.ForeignPtr.PlainForeignPtr! [ipv1_sajFt]; } in
              let {
                sat_sajFv [Occ=Once]
                  :: GHC.ForeignPtr.ForeignPtr GHC.Event.Poll.PollFd
                [LclId] =
                    CCCS GHC.ForeignPtr.ForeignPtr! [__NULL sat_sajFu]; } in
              let {
                sat_sajFw [Occ=Once] :: GHC.Event.Array.AC GHC.Event.Poll.PollFd
                [LclId] =
                    CCCS GHC.Event.Array.AC! [sat_sajFv 0# 0#];
              } in 
                case newMutVar# [sat_sajFw ipv_sajFs] of {
                  (#,#) ipv2_sajFy [Occ=Once] ipv3_sajFz [Occ=Once*] ->
                      case p_sajFn of {
                        GHC.Event.Poll.Poll dt_sajFB dt1_sajFC ->
                            case getMaskingState# [ipv2_sajFy] of {
                              (#,#) ipv4_sajFE [Occ=Once*] ipv5_sajFF [Occ=Once!] ->
                                  let-no-escape {
                                    $w$j_sajFG [InlPrag=NOUSERINLINE[0],
                                                Occ=Once*!T[2],
                                                Dmd=<C(C(S)),1*C1(C1(U(U,U)))>]
                                      :: GHC.Prim.State# GHC.Prim.RealWorld
                                         -> GHC.Prim.MutVar#
                                              GHC.Prim.RealWorld
                                              (GHC.Event.Array.AC GHC.Event.Poll.PollFd)
                                         -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
                                    [LclId[JoinId(2)], Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
                                        sat-only [mtout_sajFo f_sajFp dt1_sajFC] \r [w_sajFH
                                                                                     ww_sajFI]
                                            case readMutVar# [ww_sajFI w_sajFH] of {
                                              (#,#) ipv6_sajFK [Occ=Once] ipv7_sajFL [Occ=Once!] ->
                                                  case ipv7_sajFL of {
                                                    GHC.Event.Array.AC es_sajFN [Occ=Once!]
                                                                       dt2_sajFO [Occ=Once]
                                                                       _ [Occ=Dead] ->
                                                        case es_sajFN of {
                                                          GHC.ForeignPtr.ForeignPtr fo_sajFR [Occ=OnceL]
                                                                                    ds4_sajFS [Occ=Once] ->
                                                              let {
                                                                ary_sajFT
                                                                  :: GHC.STRef.STRef
                                                                       GHC.Prim.RealWorld
                                                                       (GHC.Event.Array.AC
                                                                          GHC.Event.Poll.PollFd)
                                                                [LclId, Unf=OtherCon []] =
                                                                    CCCS GHC.STRef.STRef! [dt1_sajFC];
                                                              } in 
                                                                case
                                                                    *# [dt2_sajFO 8#]
                                                                of
                                                                offset_sajFU [Dmd=<S,U>]
                                                                { __DEFAULT ->
                                                                      let-no-escape {
                                                                        exit_sajFV [Occ=OnceL!T[1],
                                                                                    Dmd=<L,C(U(U,U))>]
                                                                          :: GHC.Prim.State#
                                                                               GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Types.Int #)
                                                                        [LclId[JoinId(1)],
                                                                         Arity=1,
                                                                         Str=<S,U>,
                                                                         Unf=OtherCon []] =
                                                                            sat-only [mtout_sajFo
                                                                                      f_sajFp
                                                                                      dt1_sajFC
                                                                                      ds4_sajFS
                                                                                      ary_sajFT] \r [w1_sajFW]
                                                                                case
                                                                                    touch# [ds4_sajFS
                                                                                            w1_sajFW]
                                                                                of
                                                                                s'_sajFX
                                                                                { __DEFAULT ->
                                                                                      case
                                                                                          readMutVar# [dt1_sajFC
                                                                                                       s'_sajFX]
                                                                                      of
                                                                                      { (#,#) ipv8_sajFZ [Occ=Once*]
                                                                                              ipv9_sajG0 [Occ=Once!] ->
                                                                                            case
                                                                                                ipv9_sajG0
                                                                                            of
                                                                                            { GHC.Event.Array.AC es1_sajG2 [Occ=Once!]
                                                                                                                 dt4_sajG3 [Occ=Once*]
                                                                                                                 _ [Occ=Dead] ->
                                                                                                  case
                                                                                                      es1_sajG2
                                                                                                  of
                                                                                                  { GHC.ForeignPtr.ForeignPtr ds6_sajG6 [Occ=Once*]
                                                                                                                              r_sajG7 [Occ=Once] ->
                                                                                                        let-no-escape {
                                                                                                          $w$j1_sajG8 [InlPrag=NOUSERINLINE[0],
                                                                                                                       Occ=Once*!T[3],
                                                                                                                       Dmd=<L,1*C1(C1(C1(U(U,U))))>]
                                                                                                            :: GHC.Prim.State#
                                                                                                                 GHC.Prim.RealWorld
                                                                                                               -> GHC.Prim.Int#
                                                                                                               -> (# GHC.Prim.State#
                                                                                                                       GHC.Prim.RealWorld,
                                                                                                                     Foreign.C.Types.CInt #)
                                                                                                               -> (# GHC.Prim.State#
                                                                                                                       GHC.Prim.RealWorld,
                                                                                                                     GHC.Types.Int #)
                                                                                                          [LclId[JoinId(3)],
                                                                                                           Arity=3,
                                                                                                           Str=<S,U><S,1*U><L,A>,
                                                                                                           Unf=OtherCon []] =
                                                                                                              sat-only [f_sajFp
                                                                                                                        ary_sajFT
                                                                                                                        r_sajG7] \r [w2_sajG9
                                                                                                                                     ww1_sajGa
                                                                                                                                     w3_sajGb]
                                                                                                                  let-no-escape {
                                                                                                                    $w$j2_sajGc [InlPrag=NOUSERINLINE[0],
                                                                                                                                 Occ=Once*!T[2],
                                                                                                                                 Dmd=<L,1*C1(C1(U(U,U)))>]
                                                                                                                      :: GHC.Prim.State#
                                                                                                                           GHC.Prim.RealWorld
                                                                                                                         -> GHC.Prim.Int#
                                                                                                                         -> (# GHC.Prim.State#
                                                                                                                                 GHC.Prim.RealWorld,
                                                                                                                               GHC.Types.Int #)
                                                                                                                    [LclId[JoinId(2)],
                                                                                                                     Arity=2,
                                                                                                                     Str=<S,U><S,1*U>,
                                                                                                                     Unf=OtherCon []] =
                                                                                                                        sat-only [f_sajFp
                                                                                                                                  ary_sajFT
                                                                                                                                  r_sajG7] \r [w4_sajGd
                                                                                                                                               ww2_sajGe]
                                                                                                                            case
                                                                                                                                touch# [r_sajG7
                                                                                                                                        w4_sajGd]
                                                                                                                            of
                                                                                                                            s'1_sajGf
                                                                                                                            { __DEFAULT ->
                                                                                                                                  case
                                                                                                                                      ww2_sajGe
                                                                                                                                  of
                                                                                                                                  wild6_sajGg
                                                                                                                                  { __DEFAULT ->
                                                                                                                                        let {
                                                                                                                                          sat_sajGO [Occ=Once]
                                                                                                                                            :: Foreign.C.Types.CInt
                                                                                                                                               -> GHC.Event.Poll.PollFd
                                                                                                                                               -> GHC.Types.IO
                                                                                                                                                    (Foreign.C.Types.CInt,
                                                                                                                                                     GHC.Types.Bool)
                                                                                                                                          [LclId] =
                                                                                                                                              [f_sajFp
                                                                                                                                               wild6_sajGg] \r [i_sajGh
                                                                                                                                                                e_sajGi
                                                                                                                                                                eta1_sajGj]
                                                                                                                                                  case
                                                                                                                                                      e_sajGi
                                                                                                                                                  of
                                                                                                                                                  { GHC.Event.Poll.PollFd dt6_sajGl [Occ=Once]
                                                                                                                                                                          _ [Occ=Dead]
                                                                                                                                                                          dt8_sajGn [Occ=Once!] ->
                                                                                                                                                        case
                                                                                                                                                            dt8_sajGn
                                                                                                                                                        of
                                                                                                                                                        wild8_sajGo
                                                                                                                                                        { __DEFAULT ->
                                                                                                                                                              let {
                                                                                                                                                                sat_sajGz [Occ=Once]
                                                                                                                                                                  :: GHC.Event.Internal.Event
                                                                                                                                                                [LclId] =
                                                                                                                                                                    [wild8_sajGo] \u []
                                                                                                                                                                        case
                                                                                                                                                                            int2Word# [wild8_sajGo]
                                                                                                                                                                        of
                                                                                                                                                                        sat_sajGq
                                                                                                                                                                        { __DEFAULT ->
                                                                                                                                                                              case
                                                                                                                                                                                  and# [sat_sajGq
                                                                                                                                                                                        25##]
                                                                                                                                                                              of
                                                                                                                                                                              sat_sajGr
                                                                                                                                                                              { __DEFAULT ->
                                                                                                                                                                                    case
                                                                                                                                                                                        word2Int# [sat_sajGr]
                                                                                                                                                                                    of
                                                                                                                                                                                    { __DEFAULT ->
                                                                                                                                                                                          case
                                                                                                                                                                                              int2Word# [wild8_sajGo]
                                                                                                                                                                                          of
                                                                                                                                                                                          sat_sajGt
                                                                                                                                                                                          { __DEFAULT ->
                                                                                                                                                                                                case
                                                                                                                                                                                                    and# [sat_sajGt
                                                                                                                                                                                                          28##]
                                                                                                                                                                                                of
                                                                                                                                                                                                sat_sajGu
                                                                                                                                                                                                { __DEFAULT ->
                                                                                                                                                                                                      case
                                                                                                                                                                                                          word2Int# [sat_sajGu]
                                                                                                                                                                                                      of
                                                                                                                                                                                                      { __DEFAULT ->
                                                                                                                                                                                                            lvl7_rajBg;
                                                                                                                                                                                                        0# ->
                                                                                                                                                                                                            lvl8_rajBh;
                                                                                                                                                                                                      };
                                                                                                                                                                                                };
                                                                                                                                                                                          };
                                                                                                                                                                                      0# ->
                                                                                                                                                                                          case
                                                                                                                                                                                              int2Word# [wild8_sajGo]
                                                                                                                                                                                          of
                                                                                                                                                                                          sat_sajGw
                                                                                                                                                                                          { __DEFAULT ->
                                                                                                                                                                                                case
                                                                                                                                                                                                    and# [sat_sajGw
                                                                                                                                                                                                          28##]
                                                                                                                                                                                                of
                                                                                                                                                                                                sat_sajGx
                                                                                                                                                                                                { __DEFAULT ->
                                                                                                                                                                                                      case
                                                                                                                                                                                                          word2Int# [sat_sajGx]
                                                                                                                                                                                                      of
                                                                                                                                                                                                      { __DEFAULT ->
                                                                                                                                                                                                            lvl9_rajBi;
                                                                                                                                                                                                        0# ->
                                                                                                                                                                                                            GHC.Event.Poll.$fShowPollFd7;
                                                                                                                                                                                                      };
                                                                                                                                                                                                };
                                                                                                                                                                                          };
                                                                                                                                                                                    };
                                                                                                                                                                              };
                                                                                                                                                                        }; } in
                                                                                                                                                              let {
                                                                                                                                                                sat_sajGp [Occ=Once]
                                                                                                                                                                  :: System.Posix.Types.Fd
                                                                                                                                                                [LclId] =
                                                                                                                                                                    CCCS GHC.Int.I32#! [dt6_sajGl];
                                                                                                                                                              } in 
                                                                                                                                                                case
                                                                                                                                                                    f_sajFp
                                                                                                                                                                        sat_sajGp
                                                                                                                                                                        sat_sajGz
                                                                                                                                                                        eta1_sajGj
                                                                                                                                                                of
                                                                                                                                                                { (#,#) ipv10_sajGB [Occ=Once]
                                                                                                                                                                        _ [Occ=Dead] ->
                                                                                                                                                                      let {
                                                                                                                                                                        i'_sajGD [Dmd=<L,U(U)>]
                                                                                                                                                                          :: GHC.Int.Int32
                                                                                                                                                                        [LclId] =
                                                                                                                                                                            [i_sajGh] \u []
                                                                                                                                                                                case
                                                                                                                                                                                    i_sajGh
                                                                                                                                                                                of
                                                                                                                                                                                { GHC.Int.I32# x#_sajGF [Occ=Once] ->
                                                                                                                                                                                      case
                                                                                                                                                                                          +# [x#_sajGF
                                                                                                                                                                                              1#]
                                                                                                                                                                                      of
                                                                                                                                                                                      sat_sajGG
                                                                                                                                                                                      { __DEFAULT ->
                                                                                                                                                                                            case
                                                                                                                                                                                                narrow32Int# [sat_sajGG]
                                                                                                                                                                                            of
                                                                                                                                                                                            sat_sajGH
                                                                                                                                                                                            { __DEFAULT ->
                                                                                                                                                                                                  GHC.Int.I32# [sat_sajGH];
                                                                                                                                                                                            };
                                                                                                                                                                                      };
                                                                                                                                                                                }; } in
                                                                                                                                                                      let {
                                                                                                                                                                        sat_sajGL [Occ=Once]
                                                                                                                                                                          :: GHC.Types.Bool
                                                                                                                                                                        [LclId] =
                                                                                                                                                                            [wild6_sajGg
                                                                                                                                                                             i'_sajGD] \u []
                                                                                                                                                                                case
                                                                                                                                                                                    i'_sajGD
                                                                                                                                                                                of
                                                                                                                                                                                { GHC.Int.I32# x_sajGJ [Occ=Once] ->
                                                                                                                                                                                      case
                                                                                                                                                                                          ==# [x_sajGJ
                                                                                                                                                                                               wild6_sajGg]
                                                                                                                                                                                      of
                                                                                                                                                                                      sat_sajGK
                                                                                                                                                                                      { __DEFAULT ->
                                                                                                                                                                                            tagToEnum# [sat_sajGK];
                                                                                                                                                                                      };
                                                                                                                                                                                }; } in
                                                                                                                                                                      let {
                                                                                                                                                                        sat_sajGM [Occ=Once]
                                                                                                                                                                          :: (Foreign.C.Types.CInt,
                                                                                                                                                                              GHC.Types.Bool)
                                                                                                                                                                        [LclId] =
                                                                                                                                                                            CCCS (,)! [i'_sajGD
                                                                                                                                                                                       sat_sajGL];
                                                                                                                                                                      } in 
                                                                                                                                                                        (#,#) [ipv10_sajGB
                                                                                                                                                                               sat_sajGM];
                                                                                                                                                                };
                                                                                                                                                          0# ->
                                                                                                                                                              let {
                                                                                                                                                                sat_sajGN [Occ=Once]
                                                                                                                                                                  :: (Foreign.C.Types.CInt,
                                                                                                                                                                      GHC.Types.Bool)
                                                                                                                                                                [LclId] =
                                                                                                                                                                    CCCS (,)! [i_sajGh
                                                                                                                                                                               GHC.Types.True];
                                                                                                                                                              } in 
                                                                                                                                                                (#,#) [eta1_sajGj
                                                                                                                                                                       sat_sajGN];
                                                                                                                                                        };
                                                                                                                                                  };
                                                                                                                                        } in 
                                                                                                                                          case
                                                                                                                                              lvl6_rajBf
                                                                                                                                                  ary_sajFT
                                                                                                                                                  lvl1_rajBa
                                                                                                                                                  sat_sajGO
                                                                                                                                                  s'1_sajGf
                                                                                                                                          of
                                                                                                                                          { (#,#) ipv10_sajGQ [Occ=Once]
                                                                                                                                                  _ [Occ=Dead] ->
                                                                                                                                                let {
                                                                                                                                                  sat_sajGS [Occ=Once]
                                                                                                                                                    :: GHC.Types.Int
                                                                                                                                                  [LclId] =
                                                                                                                                                      CCCS GHC.Types.I#! [wild6_sajGg];
                                                                                                                                                } in 
                                                                                                                                                  (#,#) [ipv10_sajGQ
                                                                                                                                                         sat_sajGS];
                                                                                                                                          };
                                                                                                                                    0# ->
                                                                                                                                        (#,#) [s'1_sajGf
                                                                                                                                               GHC.Event.Poll.$fShowPollFd7];
                                                                                                                                  };
                                                                                                                            };
                                                                                                                  } in 
                                                                                                                    case
                                                                                                                        ww1_sajGa
                                                                                                                    of
                                                                                                                    wild6_sajGT
                                                                                                                    { __DEFAULT ->
                                                                                                                          $w$j2_sajGc
                                                                                                                              w2_sajG9
                                                                                                                              wild6_sajGT;
                                                                                                                      -1# ->
                                                                                                                          case
                                                                                                                              __pkg_ccall base-4.11.0.0 [w2_sajG9]
                                                                                                                          of
                                                                                                                          { (#,#) ds7_sajGW [Occ=Once*]
                                                                                                                                  ds8_sajGX [Occ=Once] ->
                                                                                                                                case
                                                                                                                                    narrow32Int# [ds8_sajGX]
                                                                                                                                of
                                                                                                                                { __DEFAULT ->
                                                                                                                                      case
                                                                                                                                          Foreign.C.Error.throwErrno1
                                                                                                                                              lvl3_rajBc
                                                                                                                                              ds7_sajGW
                                                                                                                                      of
                                                                                                                                      { (#,#) ipv10_sajH0 [Occ=Once]
                                                                                                                                              ipv11_sajH1 [Occ=Once] ->
                                                                                                                                            case
                                                                                                                                                ipv11_sajH1
                                                                                                                                            of
                                                                                                                                            { GHC.Int.I32# ww3_sajH3 [Occ=Once] ->
                                                                                                                                                  $w$j2_sajGc
                                                                                                                                                      ipv10_sajH0
                                                                                                                                                      ww3_sajH3;
                                                                                                                                            };
                                                                                                                                      };
                                                                                                                                  4# ->
                                                                                                                                      $w$j2_sajGc
                                                                                                                                          ds7_sajGW
                                                                                                                                          0#;
                                                                                                                                };
                                                                                                                          };
                                                                                                                    };
                                                                                                        } in 
                                                                                                          case
                                                                                                              mtout_sajFo
                                                                                                          of
                                                                                                          { GHC.Base.Nothing ->
                                                                                                                case
                                                                                                                    int2Word# [dt4_sajG3]
                                                                                                                of
                                                                                                                sat_sajH6
                                                                                                                { __DEFAULT ->
                                                                                                                      case
                                                                                                                          __pkg_ccall base-4.11.0.0 [ds6_sajG6
                                                                                                                                                     sat_sajH6
                                                                                                                                                     0#
                                                                                                                                                     ipv8_sajFZ]
                                                                                                                      of
                                                                                                                      { (#,#) ds7_sajH8
                                                                                                                              ds8_sajH9 [Occ=Once] ->
                                                                                                                            case
                                                                                                                                narrow32Int# [ds8_sajH9]
                                                                                                                            of
                                                                                                                            ipv10_sajHa [Dmd=<S,U>]
                                                                                                                            { __DEFAULT ->
                                                                                                                                  let {
                                                                                                                                    sat_sajHb [Occ=Once]
                                                                                                                                      :: Foreign.C.Types.CInt
                                                                                                                                    [LclId] =
                                                                                                                                        CCCS GHC.Int.I32#! [ipv10_sajHa];
                                                                                                                                  } in 
                                                                                                                                    case
                                                                                                                                        (#,#) [ds7_sajH8
                                                                                                                                               sat_sajHb]
                                                                                                                                    of
                                                                                                                                    sat_sajHc
                                                                                                                                    { __DEFAULT ->
                                                                                                                                          $w$j1_sajG8
                                                                                                                                              ds7_sajH8
                                                                                                                                              ipv10_sajHa
                                                                                                                                              sat_sajHc;
                                                                                                                                    };
                                                                                                                            };
                                                                                                                      };
                                                                                                                };
                                                                                                            GHC.Base.Just tout_sajHd [Occ=Once!] ->
                                                                                                                case
                                                                                                                    tout_sajHd
                                                                                                                of
                                                                                                                { GHC.Event.Internal.Timeout dt6_sajHf [Occ=Once] ->
                                                                                                                      case
                                                                                                                          plusWord# [dt6_sajHf
                                                                                                                                     1000000##]
                                                                                                                      of
                                                                                                                      sat_sajHh
                                                                                                                      { __DEFAULT ->
                                                                                                                            case
                                                                                                                                minusWord# [sat_sajHh
                                                                                                                                            1##]
                                                                                                                            of
                                                                                                                            sat_sajHi
                                                                                                                            { __DEFAULT ->
                                                                                                                                  case
                                                                                                                                      quotWord# [sat_sajHi
                                                                                                                                                 1000000##]
                                                                                                                                  of
                                                                                                                                  sat_sajHj
                                                                                                                                  { __DEFAULT ->
                                                                                                                                        case
                                                                                                                                            word2Int# [sat_sajHj]
                                                                                                                                        of
                                                                                                                                        sat_sajHk
                                                                                                                                        { __DEFAULT ->
                                                                                                                                              case
                                                                                                                                                  int2Word# [dt4_sajG3]
                                                                                                                                              of
                                                                                                                                              sat_sajHg
                                                                                                                                              { __DEFAULT ->
                                                                                                                                                    case
                                                                                                                                                        $wc_pollLoop_rajB9
                                                                                                                                                            ds6_sajG6
                                                                                                                                                            sat_sajHg
                                                                                                                                                            sat_sajHk
                                                                                                                                                            ipv8_sajFZ
                                                                                                                                                    of
                                                                                                                                                    ds7_sajHl
                                                                                                                                                    { (#,#) ipv10_sajHm [Occ=Once]
                                                                                                                                                            ipv11_sajHn [Occ=Once] ->
                                                                                                                                                          case
                                                                                                                                                              ipv11_sajHn
                                                                                                                                                          of
                                                                                                                                                          { GHC.Int.I32# ww2_sajHp [Occ=Once] ->
                                                                                                                                                                $w$j1_sajG8
                                                                                                                                                                    ipv10_sajHm
                                                                                                                                                                    ww2_sajHp
                                                                                                                                                                    ds7_sajHl;
                                                                                                                                                          };
                                                                                                                                                    };
                                                                                                                                              };
                                                                                                                                        };
                                                                                                                                  };
                                                                                                                            };
                                                                                                                      };
                                                                                                                  GHC.Event.Internal.Forever ->
                                                                                                                      case
                                                                                                                          int2Word# [dt4_sajG3]
                                                                                                                      of
                                                                                                                      sat_sajHq
                                                                                                                      { __DEFAULT ->
                                                                                                                            case
                                                                                                                                $wc_pollLoop_rajB9
                                                                                                                                    ds6_sajG6
                                                                                                                                    sat_sajHq
                                                                                                                                    -1#
                                                                                                                                    ipv8_sajFZ
                                                                                                                            of
                                                                                                                            ds7_sajHr
                                                                                                                            { (#,#) ipv10_sajHs [Occ=Once]
                                                                                                                                    ipv11_sajHt [Occ=Once] ->
                                                                                                                                  case
                                                                                                                                      ipv11_sajHt
                                                                                                                                  of
                                                                                                                                  { GHC.Int.I32# ww2_sajHv [Occ=Once] ->
                                                                                                                                        $w$j1_sajG8
                                                                                                                                            ipv10_sajHs
                                                                                                                                            ww2_sajHv
                                                                                                                                            ds7_sajHr;
                                                                                                                                  };
                                                                                                                            };
                                                                                                                      };
                                                                                                                };
                                                                                                          };
                                                                                                  };
                                                                                            };
                                                                                      };
                                                                                };
                                                                      } in 
                                                                        let-no-escape {
                                                                          $wgo_sajHw [InlPrag=NOUSERINLINE[0],
                                                                                      Occ=LoopBreakerT[2]]
                                                                            :: GHC.Prim.Int#
                                                                               -> GHC.Prim.State#
                                                                                    GHC.Prim.RealWorld
                                                                               -> (# GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld,
                                                                                     GHC.Types.Int #)
                                                                          [LclId[JoinId(2)],
                                                                           Arity=2,
                                                                           Str=<S,U><S,U>,
                                                                           Unf=OtherCon []] =
                                                                              sat-only [dt1_sajFC
                                                                                        fo_sajFR
                                                                                        ary_sajFT
                                                                                        offset_sajFU
                                                                                        exit_sajFV
                                                                                        $wgo_sajHw] \r [ww1_sajHx
                                                                                                        w1_sajHy]
                                                                                  case
                                                                                      >=# [ww1_sajHx
                                                                                           offset_sajFU]
                                                                                  of
                                                                                  { __DEFAULT ->
                                                                                        case
                                                                                            plusAddr# [fo_sajFR
                                                                                                       ww1_sajHx]
                                                                                        of
                                                                                        ptr_sajHA [Dmd=<S,U>]
                                                                                        { __DEFAULT ->
                                                                                              case
                                                                                                  readInt32OffAddr# [ptr_sajHA
                                                                                                                     0#
                                                                                                                     w1_sajHy]
                                                                                              of
                                                                                              { (#,#) ipv8_sajHC [Occ=Once]
                                                                                                      ipv9_sajHD ->
                                                                                                    case
                                                                                                        plusAddr# [ptr_sajHA
                                                                                                                   4#]
                                                                                                    of
                                                                                                    sat_sajHE
                                                                                                    { __DEFAULT ->
                                                                                                          case
                                                                                                              readInt16OffAddr# [sat_sajHE
                                                                                                                                 0#
                                                                                                                                 ipv8_sajHC]
                                                                                                          of
                                                                                                          { (#,#) ipv10_sajHG [Occ=Once]
                                                                                                                  ipv11_sajHH [Occ=Once*] ->
                                                                                                                case
                                                                                                                    plusAddr# [ptr_sajHA
                                                                                                                               6#]
                                                                                                                of
                                                                                                                sat_sajHI
                                                                                                                { __DEFAULT ->
                                                                                                                      case
                                                                                                                          readInt16OffAddr# [sat_sajHI
                                                                                                                                             0#
                                                                                                                                             ipv10_sajHG]
                                                                                                                      of
                                                                                                                      { (#,#) ipv12_sajHK [Occ=Once*]
                                                                                                                              ipv13_sajHL [Occ=Once!] ->
                                                                                                                            case
                                                                                                                                ipv13_sajHL
                                                                                                                            of
                                                                                                                            { __DEFAULT ->
                                                                                                                                  let {
                                                                                                                                    sat_sajHT [Occ=Once]
                                                                                                                                      :: GHC.Event.Poll.PollFd
                                                                                                                                         -> GHC.Types.Bool
                                                                                                                                    [LclId] =
                                                                                                                                        [ipv9_sajHD] \r [x_sajHN]
                                                                                                                                            case
                                                                                                                                                x_sajHN
                                                                                                                                            of
                                                                                                                                            { GHC.Event.Poll.PollFd dt4_sajHP [Occ=Once]
                                                                                                                                                                    _ [Occ=Dead]
                                                                                                                                                                    _ [Occ=Dead] ->
                                                                                                                                                  case
                                                                                                                                                      ==# [dt4_sajHP
                                                                                                                                                           ipv9_sajHD]
                                                                                                                                                  of
                                                                                                                                                  sat_sajHS
                                                                                                                                                  { __DEFAULT ->
                                                                                                                                                        tagToEnum# [sat_sajHS];
                                                                                                                                                  };
                                                                                                                                            };
                                                                                                                                  } in 
                                                                                                                                    case
                                                                                                                                        lvl11_rajBk
                                                                                                                                            sat_sajHT
                                                                                                                                            ary_sajFT
                                                                                                                                            ipv12_sajHK
                                                                                                                                    of
                                                                                                                                    { (#,#) ipv14_sajHV [Occ=Once*]
                                                                                                                                            ipv15_sajHW [Occ=Once!] ->
                                                                                                                                          case
                                                                                                                                              ipv15_sajHW
                                                                                                                                          of
                                                                                                                                          { GHC.Base.Nothing ->
                                                                                                                                                lvl5_rajBe;
                                                                                                                                            GHC.Base.Just ds9_sajHZ [Occ=Once!] ->
                                                                                                                                                case
                                                                                                                                                    ds9_sajHZ
                                                                                                                                                of
                                                                                                                                                { (,) i_sajI1 [Occ=Once*]
                                                                                                                                                      _ [Occ=Dead] ->
                                                                                                                                                      case
                                                                                                                                                          ipv11_sajHH
                                                                                                                                                      of
                                                                                                                                                      wild7_sajI3
                                                                                                                                                      { __DEFAULT ->
                                                                                                                                                            case
                                                                                                                                                                readMutVar# [dt1_sajFC
                                                                                                                                                                             ipv14_sajHV]
                                                                                                                                                            of
                                                                                                                                                            { (#,#) ipv16_sajI5 [Occ=Once]
                                                                                                                                                                    ipv17_sajI6 [Occ=Once!] ->
                                                                                                                                                                  case
                                                                                                                                                                      ipv17_sajI6
                                                                                                                                                                  of
                                                                                                                                                                  { GHC.Event.Array.AC ww3_sajI8 [Occ=Once!]
                                                                                                                                                                                       _ [Occ=Dead]
                                                                                                                                                                                       ww5_sajIa ->
                                                                                                                                                                        case
                                                                                                                                                                            ww3_sajI8
                                                                                                                                                                        of
                                                                                                                                                                        { GHC.ForeignPtr.ForeignPtr ww7_sajIc [Occ=Once]
                                                                                                                                                                                                    ww8_sajId [Occ=Once] ->
                                                                                                                                                                              case
                                                                                                                                                                                  i_sajI1
                                                                                                                                                                              of
                                                                                                                                                                              { GHC.Types.I# ww10_sajIf ->
                                                                                                                                                                                    case
                                                                                                                                                                                        <# [ww10_sajIf
                                                                                                                                                                                            0#]
                                                                                                                                                                                    of
                                                                                                                                                                                    { __DEFAULT ->
                                                                                                                                                                                          case
                                                                                                                                                                                              >=# [ww10_sajIf
                                                                                                                                                                                                   ww5_sajIa]
                                                                                                                                                                                          of
                                                                                                                                                                                          { __DEFAULT ->
                                                                                                                                                                                                case
                                                                                                                                                                                                    *# [ww10_sajIf
                                                                                                                                                                                                        8#]
                                                                                                                                                                                                of
                                                                                                                                                                                                sat_sajIj
                                                                                                                                                                                                { __DEFAULT ->
                                                                                                                                                                                                      case
                                                                                                                                                                                                          plusAddr# [ww7_sajIc
                                                                                                                                                                                                                     sat_sajIj]
                                                                                                                                                                                                      of
                                                                                                                                                                                                      addr_sajIi [Dmd=<S,U>]
                                                                                                                                                                                                      { __DEFAULT ->
                                                                                                                                                                                                            case
                                                                                                                                                                                                                writeInt32OffAddr# [addr_sajIi
                                                                                                                                                                                                                                    0#
                                                                                                                                                                                                                                    ipv9_sajHD
                                                                                                                                                                                                                                    ipv16_sajI5]
                                                                                                                                                                                                            of
                                                                                                                                                                                                            s2_sajIk
                                                                                                                                                                                                            { __DEFAULT ->
                                                                                                                                                                                                                  case
                                                                                                                                                                                                                      plusAddr# [addr_sajIi
                                                                                                                                                                                                                                 4#]
                                                                                                                                                                                                                  of
                                                                                                                                                                                                                  sat_sajIl
                                                                                                                                                                                                                  { __DEFAULT ->
                                                                                                                                                                                                                        case
                                                                                                                                                                                                                            writeInt16OffAddr# [sat_sajIl
                                                                                                                                                                                                                                                0#
                                                                                                                                                                                                                                                wild7_sajI3
                                                                                                                                                                                                                                                s2_sajIk]
                                                                                                                                                                                                                        of
                                                                                                                                                                                                                        s1_sajIm
                                                                                                                                                                                                                        { __DEFAULT ->
                                                                                                                                                                                                                              case
                                                                                                                                                                                                                                  plusAddr# [addr_sajIi
                                                                                                                                                                                                                                             6#]
                                                                                                                                                                                                                              of
                                                                                                                                                                                                                              sat_sajIn
                                                                                                                                                                                                                              { __DEFAULT ->
                                                                                                                                                                                                                                    case
                                                                                                                                                                                                                                        writeInt16OffAddr# [sat_sajIn
                                                                                                                                                                                                                                                            0#
                                                                                                                                                                                                                                                            0#
                                                                                                                                                                                                                                                            s1_sajIm]
                                                                                                                                                                                                                                    of
                                                                                                                                                                                                                                    s3_sajIo
                                                                                                                                                                                                                                    { __DEFAULT ->
                                                                                                                                                                                                                                          case
                                                                                                                                                                                                                                              touch# [ww8_sajId
                                                                                                                                                                                                                                                      s3_sajIo]
                                                                                                                                                                                                                                          of
                                                                                                                                                                                                                                          s'_sajIp
                                                                                                                                                                                                                                          { __DEFAULT ->
                                                                                                                                                                                                                                                case
                                                                                                                                                                                                                                                    +# [ww1_sajHx
                                                                                                                                                                                                                                                        8#]
                                                                                                                                                                                                                                                of
                                                                                                                                                                                                                                                sat_sajIq
                                                                                                                                                                                                                                                { __DEFAULT ->
                                                                                                                                                                                                                                                      $wgo_sajHw
                                                                                                                                                                                                                                                          sat_sajIq
                                                                                                                                                                                                                                                          s'_sajIp;
                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                          };
                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                              };
                                                                                                                                                                                                                        };
                                                                                                                                                                                                                  };
                                                                                                                                                                                                            };
                                                                                                                                                                                                      };
                                                                                                                                                                                                };
                                                                                                                                                                                            1# ->
                                                                                                                                                                                                GHC.Event.Array.$wlvl
                                                                                                                                                                                                    ww5_sajIa
                                                                                                                                                                                                    ww10_sajIf;
                                                                                                                                                                                          };
                                                                                                                                                                                      1# ->
                                                                                                                                                                                          GHC.Event.Array.$wlvl
                                                                                                                                                                                              ww5_sajIa
                                                                                                                                                                                              ww10_sajIf;
                                                                                                                                                                                    };
                                                                                                                                                                              };
                                                                                                                                                                        };
                                                                                                                                                                  };
                                                                                                                                                            };
                                                                                                                                                        0# ->
                                                                                                                                                            case
                                                                                                                                                                lvl10_rajBj
                                                                                                                                                                    ary_sajFT
                                                                                                                                                                    i_sajI1
                                                                                                                                                                    ipv14_sajHV
                                                                                                                                                            of
                                                                                                                                                            { (#,#) ipv16_sajIu [Occ=Once]
                                                                                                                                                                    _ [Occ=Dead] ->
                                                                                                                                                                  case
                                                                                                                                                                      +# [ww1_sajHx
                                                                                                                                                                          8#]
                                                                                                                                                                  of
                                                                                                                                                                  sat_sajIw
                                                                                                                                                                  { __DEFAULT ->
                                                                                                                                                                        $wgo_sajHw
                                                                                                                                                                            sat_sajIw
                                                                                                                                                                            ipv16_sajIu;
                                                                                                                                                                  };
                                                                                                                                                            };
                                                                                                                                                      };
                                                                                                                                                };
                                                                                                                                          };
                                                                                                                                    };
                                                                                                                              0# ->
                                                                                                                                  let {
                                                                                                                                    sat_sajIx [Occ=Once]
                                                                                                                                      :: GHC.Event.Poll.PollFd
                                                                                                                                    [LclId] =
                                                                                                                                        CCCS GHC.Event.Poll.PollFd! [ipv9_sajHD
                                                                                                                                                                     ipv11_sajHH
                                                                                                                                                                     0#];
                                                                                                                                  } in 
                                                                                                                                    case
                                                                                                                                        GHC.Event.Array.$wsnoc
                                                                                                                                            GHC.Event.Poll.$fStorablePollFd
                                                                                                                                            dt1_sajFC
                                                                                                                                            sat_sajIx
                                                                                                                                            ipv12_sajHK
                                                                                                                                    of
                                                                                                                                    { (#,#) ipv14_sajIz [Occ=Once]
                                                                                                                                            _ [Occ=Dead] ->
                                                                                                                                          case
                                                                                                                                              +# [ww1_sajHx
                                                                                                                                                  8#]
                                                                                                                                          of
                                                                                                                                          sat_sajIB
                                                                                                                                          { __DEFAULT ->
                                                                                                                                                $wgo_sajHw
                                                                                                                                                    sat_sajIB
                                                                                                                                                    ipv14_sajIz;
                                                                                                                                          };
                                                                                                                                    };
                                                                                                                            };
                                                                                                                      };
                                                                                                                };
                                                                                                          };
                                                                                                    };
                                                                                              };
                                                                                        };
                                                                                    1# ->
                                                                                        exit_sajFV
                                                                                            w1_sajHy;
                                                                                  };
                                                                        } in 
                                                                          $wgo_sajHw 0# ipv6_sajFK;
                                                                };
                                                        };
                                                  };
                                            };
                                  } in 
                                    case ipv5_sajFF of {
                                      __DEFAULT ->
                                          case takeMVar# [dt_sajFB ipv4_sajFE] of {
                                            (#,#) ipv6_sajIE [Occ=Once] ipv7_sajIF [Occ=Once] ->
                                                let {
                                                  sat_sajIG [Occ=Once]
                                                    :: GHC.Event.Array.Array GHC.Event.Poll.PollFd
                                                  [LclId] =
                                                      CCCS GHC.STRef.STRef! [ipv3_sajFz];
                                                } in 
                                                  case
                                                      putMVar# [dt_sajFB sat_sajIG ipv6_sajIE]
                                                  of
                                                  s2#_sajIH
                                                  { __DEFAULT ->
                                                        case ipv7_sajIF of {
                                                          GHC.STRef.STRef ww1_sajIJ [Occ=Once] ->
                                                              $w$j_sajFG s2#_sajIH ww1_sajIJ;
                                                        };
                                                  };
                                          };
                                      0# ->
                                          let {
                                            sat_sajIQ [Occ=Once]
                                              :: GHC.Prim.State# GHC.Prim.RealWorld
                                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                       GHC.Event.Array.Array
                                                         GHC.Event.Poll.PollFd #)
                                            [LclId] =
                                                [ipv3_sajFz dt_sajFB] \r [s_sajIK]
                                                    case takeMVar# [dt_sajFB s_sajIK] of {
                                                      (#,#) ipv6_sajIM [Occ=Once]
                                                            ipv7_sajIN [Occ=Once] ->
                                                          let {
                                                            sat_sajIO [Occ=Once]
                                                              :: GHC.Event.Array.Array
                                                                   GHC.Event.Poll.PollFd
                                                            [LclId] =
                                                                CCCS GHC.STRef.STRef! [ipv3_sajFz];
                                                          } in 
                                                            case
                                                                putMVar# [dt_sajFB
                                                                          sat_sajIO
                                                                          ipv6_sajIM]
                                                            of
                                                            s2#_sajIP
                                                            { __DEFAULT ->
                                                                  (#,#) [s2#_sajIP ipv7_sajIN];
                                                            };
                                                    };
                                          } in 
                                            case maskAsyncExceptions# [sat_sajIQ ipv4_sajFE] of {
                                              (#,#) ipv6_sajIS [Occ=Once] ipv7_sajIT [Occ=Once] ->
                                                  case ipv7_sajIT of {
                                                    GHC.STRef.STRef ww1_sajIV [Occ=Once] ->
                                                        $w$j_sajFG ipv6_sajIS ww1_sajIV;
                                                  };
                                            };
                                    };
                            };
                      };
                };
        };

GHC.Event.Poll.new4
  :: GHC.Event.Poll.Poll
     -> System.Posix.Types.Fd
     -> GHC.Event.Internal.Event
     -> GHC.Event.Internal.Event
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
[GblId,
 Arity=5,
 Str=<S(SL),1*U(U,A)><L,1*U(U)><L,1*U(U)><L,1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [p_sajIW fd_sajIX oevt_sajIY nevt_sajIZ eta_sajJ0]
        case p_sajIW of {
          GHC.Event.Poll.Poll dt_sajJ2 [Occ=Once] _ [Occ=Dead] ->
              let {
                sat_sajJD [Occ=Once]
                  :: GHC.Event.Array.Array GHC.Event.Poll.PollFd
                     -> GHC.Types.IO GHC.Types.Bool
                [LclId] =
                    [fd_sajIX oevt_sajIY nevt_sajIZ] \r [ary_sajJ4 s_sajJ5]
                        case ary_sajJ4 of {
                          GHC.STRef.STRef ww1_sajJ7 [Occ=Once] ->
                              let {
                                sat_sajJz [Occ=Once] :: GHC.Event.Poll.PollFd
                                [LclId] =
                                    [fd_sajIX oevt_sajIY nevt_sajIZ] \u []
                                        case fd_sajIX of {
                                          GHC.Int.I32# dt3_sajJ9 [Occ=Once*] ->
                                              case nevt_sajIZ of {
                                                GHC.Types.I# x#_sajJb ->
                                                    case andI# [x#_sajJb 1#] of {
                                                      __DEFAULT ->
                                                          case andI# [x#_sajJb 2#] of {
                                                            __DEFAULT ->
                                                                case oevt_sajIY of {
                                                                  GHC.Types.I# x#1_sajJf ->
                                                                      case andI# [x#1_sajJf 1#] of {
                                                                        __DEFAULT ->
                                                                            case
                                                                                andI# [x#1_sajJf 2#]
                                                                            of
                                                                            { __DEFAULT ->
                                                                                  GHC.Event.Poll.PollFd [dt3_sajJ9
                                                                                                         5#
                                                                                                         5#];
                                                                              0# ->
                                                                                  GHC.Event.Poll.PollFd [dt3_sajJ9
                                                                                                         5#
                                                                                                         1#];
                                                                            };
                                                                        0# ->
                                                                            case
                                                                                andI# [x#1_sajJf 2#]
                                                                            of
                                                                            { __DEFAULT ->
                                                                                  GHC.Event.Poll.PollFd [dt3_sajJ9
                                                                                                         5#
                                                                                                         4#];
                                                                              0# ->
                                                                                  GHC.Event.Poll.PollFd [dt3_sajJ9
                                                                                                         5#
                                                                                                         0#];
                                                                            };
                                                                      };
                                                                };
                                                            0# ->
                                                                case oevt_sajIY of {
                                                                  GHC.Types.I# x#1_sajJk ->
                                                                      case andI# [x#1_sajJk 1#] of {
                                                                        __DEFAULT ->
                                                                            case
                                                                                andI# [x#1_sajJk 2#]
                                                                            of
                                                                            { __DEFAULT ->
                                                                                  GHC.Event.Poll.PollFd [dt3_sajJ9
                                                                                                         1#
                                                                                                         5#];
                                                                              0# ->
                                                                                  GHC.Event.Poll.PollFd [dt3_sajJ9
                                                                                                         1#
                                                                                                         1#];
                                                                            };
                                                                        0# ->
                                                                            case
                                                                                andI# [x#1_sajJk 2#]
                                                                            of
                                                                            { __DEFAULT ->
                                                                                  GHC.Event.Poll.PollFd [dt3_sajJ9
                                                                                                         1#
                                                                                                         4#];
                                                                              0# ->
                                                                                  GHC.Event.Poll.PollFd [dt3_sajJ9
                                                                                                         1#
                                                                                                         0#];
                                                                            };
                                                                      };
                                                                };
                                                          };
                                                      0# ->
                                                          case andI# [x#_sajJb 2#] of {
                                                            __DEFAULT ->
                                                                case oevt_sajIY of {
                                                                  GHC.Types.I# x#1_sajJq ->
                                                                      case andI# [x#1_sajJq 1#] of {
                                                                        __DEFAULT ->
                                                                            case
                                                                                andI# [x#1_sajJq 2#]
                                                                            of
                                                                            { __DEFAULT ->
                                                                                  GHC.Event.Poll.PollFd [dt3_sajJ9
                                                                                                         4#
                                                                                                         5#];
                                                                              0# ->
                                                                                  GHC.Event.Poll.PollFd [dt3_sajJ9
                                                                                                         4#
                                                                                                         1#];
                                                                            };
                                                                        0# ->
                                                                            case
                                                                                andI# [x#1_sajJq 2#]
                                                                            of
                                                                            { __DEFAULT ->
                                                                                  GHC.Event.Poll.PollFd [dt3_sajJ9
                                                                                                         4#
                                                                                                         4#];
                                                                              0# ->
                                                                                  GHC.Event.Poll.PollFd [dt3_sajJ9
                                                                                                         4#
                                                                                                         0#];
                                                                            };
                                                                      };
                                                                };
                                                            0# ->
                                                                case oevt_sajIY of {
                                                                  GHC.Types.I# x#1_sajJv ->
                                                                      case andI# [x#1_sajJv 1#] of {
                                                                        __DEFAULT ->
                                                                            case
                                                                                andI# [x#1_sajJv 2#]
                                                                            of
                                                                            { __DEFAULT ->
                                                                                  GHC.Event.Poll.PollFd [dt3_sajJ9
                                                                                                         0#
                                                                                                         5#];
                                                                              0# ->
                                                                                  GHC.Event.Poll.PollFd [dt3_sajJ9
                                                                                                         0#
                                                                                                         1#];
                                                                            };
                                                                        0# ->
                                                                            case
                                                                                andI# [x#1_sajJv 2#]
                                                                            of
                                                                            { __DEFAULT ->
                                                                                  GHC.Event.Poll.PollFd [dt3_sajJ9
                                                                                                         0#
                                                                                                         4#];
                                                                              0# ->
                                                                                  GHC.Event.Poll.PollFd [dt3_sajJ9
                                                                                                         0#
                                                                                                         0#];
                                                                            };
                                                                      };
                                                                };
                                                          };
                                                    };
                                              };
                                        };
                              } in 
                                case
                                    GHC.Event.Array.$wsnoc
                                        GHC.Event.Poll.$fStorablePollFd ww1_sajJ7 sat_sajJz s_sajJ5
                                of
                                { (#,#) ipv_sajJB [Occ=Once] _ [Occ=Dead] ->
                                      (#,#) [ipv_sajJB GHC.Types.True];
                                };
                        };
              } in  GHC.Conc.Sync.$wwithMVar dt_sajJ2 sat_sajJD eta_sajJ0;
        };

GHC.Event.Poll.new2
  :: GHC.Event.Poll.Poll
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=2, Caf=NoCafRefs, Str=<L,A><S,U>, Unf=OtherCon []] =
    [] \r [ds_sajJE s_sajJF] (#,#) [s_sajJF GHC.Tuple.()];

GHC.Event.Poll.new1
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Event.Internal.Backend #)
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [s_sajJG]
        case newMutVar# [GHC.ForeignPtr.NoFinalizers s_sajJG] of {
          (#,#) ipv_sajJI [Occ=Once] ipv1_sajJJ [Occ=Once] ->
              let {
                sat_sajJK [Occ=Once] :: GHC.ForeignPtr.ForeignPtrContents
                [LclId] =
                    CCCS GHC.ForeignPtr.PlainForeignPtr! [ipv1_sajJJ]; } in
              let {
                sat_sajJL [Occ=Once]
                  :: GHC.ForeignPtr.ForeignPtr GHC.Event.Poll.PollFd
                [LclId] =
                    CCCS GHC.ForeignPtr.ForeignPtr! [__NULL sat_sajJK]; } in
              let {
                sat_sajJM [Occ=Once] :: GHC.Event.Array.AC GHC.Event.Poll.PollFd
                [LclId] =
                    CCCS GHC.Event.Array.AC! [sat_sajJL 0# 0#];
              } in 
                case newMutVar# [sat_sajJM ipv_sajJI] of {
                  (#,#) ipv2_sajJO [Occ=Once] ipv3_sajJP [Occ=Once] ->
                      case newMVar# [ipv2_sajJO] of {
                        (#,#) ipv4_sajJR [Occ=Once] ipv5_sajJS ->
                            let {
                              sat_sajJT [Occ=Once] :: GHC.Event.Array.Array GHC.Event.Poll.PollFd
                              [LclId] =
                                  CCCS GHC.STRef.STRef! [ipv3_sajJP];
                            } in 
                              case putMVar# [ipv5_sajJS sat_sajJT ipv4_sajJR] of s2#_sajJU {
                                __DEFAULT ->
                                    case newMutVar# [GHC.ForeignPtr.NoFinalizers s2#_sajJU] of {
                                      (#,#) ipv6_sajJW [Occ=Once] ipv7_sajJX [Occ=Once] ->
                                          let {
                                            sat_sajJY [Occ=Once]
                                              :: GHC.ForeignPtr.ForeignPtrContents
                                            [LclId] =
                                                CCCS GHC.ForeignPtr.PlainForeignPtr! [ipv7_sajJX]; } in
                                          let {
                                            sat_sajJZ [Occ=Once]
                                              :: GHC.ForeignPtr.ForeignPtr GHC.Event.Poll.PollFd
                                            [LclId] =
                                                CCCS GHC.ForeignPtr.ForeignPtr! [__NULL
                                                                                 sat_sajJY]; } in
                                          let {
                                            sat_sajK0 [Occ=Once]
                                              :: GHC.Event.Array.AC GHC.Event.Poll.PollFd
                                            [LclId] =
                                                CCCS GHC.Event.Array.AC! [sat_sajJZ 0# 0#];
                                          } in 
                                            case newMutVar# [sat_sajK0 ipv6_sajJW] of {
                                              (#,#) ipv8_sajK2 [Occ=Once] ipv9_sajK3 [Occ=Once] ->
                                                  let {
                                                    sat_sajK4 [Occ=Once] :: GHC.Event.Poll.Poll
                                                    [LclId] =
                                                        CCCS GHC.Event.Poll.Poll! [ipv5_sajJS
                                                                                   ipv9_sajK3]; } in
                                                  let {
                                                    sat_sajK5 [Occ=Once]
                                                      :: GHC.Event.Internal.Backend
                                                    [LclId] =
                                                        CCCS GHC.Event.Internal.Backend! [sat_sajK4
                                                                                          GHC.Event.Poll.new5
                                                                                          GHC.Event.Poll.new4
                                                                                          GHC.Event.Poll.new3
                                                                                          GHC.Event.Poll.new2];
                                                  } in  (#,#) [ipv8_sajK2 sat_sajK5];
                                            };
                                    };
                              };
                      };
                };
        };

GHC.Event.Poll.new :: GHC.Types.IO GHC.Event.Internal.Backend
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [eta_B1] GHC.Event.Poll.new1 eta_B1;

GHC.Event.Poll.PollFd
  :: GHC.Prim.Int#
     -> GHC.Prim.Int# -> GHC.Prim.Int# -> GHC.Event.Poll.PollFd
[GblId[DataCon],
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,U><L,U><L,U>m,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.Event.Poll.PollFd [eta_B3 eta_B2 eta_B1];

GHC.Event.Poll.Poll
  :: GHC.Prim.MVar#
       GHC.Prim.RealWorld (GHC.Event.Array.Array GHC.Event.Poll.PollFd)
     -> GHC.Prim.MutVar#
          GHC.Prim.RealWorld (GHC.Event.Array.AC GHC.Event.Poll.PollFd)
     -> GHC.Event.Poll.Poll
[GblId[DataCon],
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U><L,U>m,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] GHC.Event.Poll.Poll [eta_B2 eta_B1];


==================== STG syntax: ====================
2018-03-16 16:05:18.98166542 UTC

GHC.Event.Poll.$WPollFd [InlPrag=INLINE[2]]
  :: System.Posix.Types.Fd
     -> GHC.Event.Poll.Event
     -> GHC.Event.Poll.Event
     -> GHC.Event.Poll.PollFd
[GblId[DataConWrapper],
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,U><S,U><S,U>m,
 Unf=OtherCon []] =
    [] \r [dt_sajBm dt_sajBn dt_sajBo]
        case dt_sajBm of {
          GHC.Int.I32# dt_sajBq [Occ=Once] ->
              case dt_sajBn of {
                GHC.Int.I16# dt_sajBs [Occ=Once] ->
                    case dt_sajBo of {
                      GHC.Int.I16# dt_sajBu [Occ=Once] ->
                          GHC.Event.Poll.PollFd [dt_sajBq dt_sajBs dt_sajBu];
                    };
              };
        };

GHC.Event.Poll.$WPoll [InlPrag=INLINE[2]]
  :: GHC.MVar.MVar (GHC.Event.Array.Array GHC.Event.Poll.PollFd)
     -> GHC.Event.Array.Array GHC.Event.Poll.PollFd
     -> GHC.Event.Poll.Poll
[GblId[DataConWrapper],
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,U><S,U>m,
 Unf=OtherCon []] =
    [] \r [dt_sajBv dt_sajBw]
        case dt_sajBv of {
          GHC.MVar.MVar dt_sajBy [Occ=Once] ->
              case dt_sajBw of {
                GHC.STRef.STRef dt_sajBA [Occ=Once] ->
                    GHC.Event.Poll.Poll [dt_sajBy dt_sajBA];
              };
        };

GHC.Event.Poll.$fStorablePollFd_$calignment
  :: GHC.Event.Poll.PollFd -> GHC.Types.Int
[GblId, Arity=1, Caf=NoCafRefs, Str=<L,A>m, Unf=OtherCon []] =
    [] \r [ds_sajBB] Foreign.Storable.$fStorableBool7;

GHC.Event.Poll.$fStorablePollFd7 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [8#];

GHC.Event.Poll.$fStorablePollFd_$csizeOf
  :: GHC.Event.Poll.PollFd -> GHC.Types.Int
[GblId, Arity=1, Caf=NoCafRefs, Str=<L,A>m, Unf=OtherCon []] =
    [] \r [ds_sajBC] GHC.Event.Poll.$fStorablePollFd7;

GHC.Event.Poll.$fStorablePollFd2
  :: GHC.Ptr.Ptr GHC.Event.Poll.PollFd
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Event.Poll.PollFd #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ptr_sajBD void_0E]
        case ptr_sajBD of {
          GHC.Ptr.Ptr addr_sajBG ->
              case readInt32OffAddr# [addr_sajBG 0# GHC.Prim.void#] of {
                Unit# ipv1_sajBJ [Occ=Once] ->
                    case plusAddr# [addr_sajBG 4#] of sat_sajBK {
                      __DEFAULT ->
                          case readInt16OffAddr# [sat_sajBK 0# GHC.Prim.void#] of {
                            Unit# ipv3_sajBN [Occ=Once] ->
                                case plusAddr# [addr_sajBG 6#] of sat_sajBO {
                                  __DEFAULT ->
                                      case readInt16OffAddr# [sat_sajBO 0# GHC.Prim.void#] of {
                                        Unit# ipv5_sajBR [Occ=Once] ->
                                            let {
                                              sat_sajBS [Occ=Once] :: GHC.Event.Poll.PollFd
                                              [LclId] =
                                                  CCCS GHC.Event.Poll.PollFd! [ipv1_sajBJ
                                                                               ipv3_sajBN
                                                                               ipv5_sajBR];
                                            } in  Unit# [sat_sajBS];
                                      };
                                };
                          };
                    };
              };
        };

GHC.Event.Poll.$fStorablePollFd6
  :: GHC.Ptr.Ptr GHC.Event.Poll.PollFd
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Event.Poll.PollFd #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ptr_sajBT off_sajBU void_0E]
        case ptr_sajBT of {
          GHC.Ptr.Ptr addr_sajBX [Occ=Once] ->
              case off_sajBU of {
                GHC.Types.I# x_sajBZ [Occ=Once] ->
                    case *# [x_sajBZ 8#] of sat_sajC1 {
                      __DEFAULT ->
                          case plusAddr# [addr_sajBX sat_sajC1] of addr1_sajC0 [Dmd=<S,U>] {
                            __DEFAULT ->
                                case readInt32OffAddr# [addr1_sajC0 0# GHC.Prim.void#] of {
                                  Unit# ipv1_sajC4 [Occ=Once] ->
                                      case plusAddr# [addr1_sajC0 4#] of sat_sajC5 {
                                        __DEFAULT ->
                                            case
                                                readInt16OffAddr# [sat_sajC5 0# GHC.Prim.void#]
                                            of
                                            { Unit# ipv3_sajC8 [Occ=Once] ->
                                                  case plusAddr# [addr1_sajC0 6#] of sat_sajC9 {
                                                    __DEFAULT ->
                                                        case
                                                            readInt16OffAddr# [sat_sajC9
                                                                               0#
                                                                               GHC.Prim.void#]
                                                        of
                                                        { Unit# ipv5_sajCc [Occ=Once] ->
                                                              let {
                                                                sat_sajCd [Occ=Once]
                                                                  :: GHC.Event.Poll.PollFd
                                                                [LclId] =
                                                                    CCCS GHC.Event.Poll.PollFd! [ipv1_sajC4
                                                                                                 ipv3_sajC8
                                                                                                 ipv5_sajCc];
                                                              } in  Unit# [sat_sajCd];
                                                        };
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.Event.Poll.$fStorablePollFd4
  :: forall b.
     GHC.Ptr.Ptr b
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Event.Poll.PollFd #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ptr_sajCe off_sajCf void_0E]
        case ptr_sajCe of {
          GHC.Ptr.Ptr addr_sajCi [Occ=Once] ->
              case off_sajCf of {
                GHC.Types.I# d_sajCk [Occ=Once] ->
                    case plusAddr# [addr_sajCi d_sajCk] of addr1_sajCl [Dmd=<S,U>] {
                      __DEFAULT ->
                          case readInt32OffAddr# [addr1_sajCl 0# GHC.Prim.void#] of {
                            Unit# ipv1_sajCo [Occ=Once] ->
                                case plusAddr# [addr1_sajCl 4#] of sat_sajCp {
                                  __DEFAULT ->
                                      case readInt16OffAddr# [sat_sajCp 0# GHC.Prim.void#] of {
                                        Unit# ipv3_sajCs [Occ=Once] ->
                                            case plusAddr# [addr1_sajCl 6#] of sat_sajCt {
                                              __DEFAULT ->
                                                  case
                                                      readInt16OffAddr# [sat_sajCt
                                                                         0#
                                                                         GHC.Prim.void#]
                                                  of
                                                  { Unit# ipv5_sajCw [Occ=Once] ->
                                                        let {
                                                          sat_sajCx [Occ=Once]
                                                            :: GHC.Event.Poll.PollFd
                                                          [LclId] =
                                                              CCCS GHC.Event.Poll.PollFd! [ipv1_sajCo
                                                                                           ipv3_sajCs
                                                                                           ipv5_sajCw];
                                                        } in  Unit# [sat_sajCx];
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.Event.Poll.$fStorablePollFd1
  :: GHC.Ptr.Ptr GHC.Event.Poll.PollFd
     -> GHC.Event.Poll.PollFd
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(SSS),1*U(U,U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ptr_sajCy p_sajCz void_0E]
        case ptr_sajCy of {
          GHC.Ptr.Ptr addr_sajCC ->
              case p_sajCz of {
                GHC.Event.Poll.PollFd dt_sajCE [Occ=Once]
                                      dt1_sajCF [Occ=Once]
                                      dt2_sajCG [Occ=Once] ->
                    case
                        writeInt32OffAddr# [addr_sajCC 0# dt_sajCE GHC.Prim.void#]
                    of
                    s2_sajCH
                    { (##) ->
                          case plusAddr# [addr_sajCC 4#] of sat_sajCI {
                            __DEFAULT ->
                                case
                                    writeInt16OffAddr# [sat_sajCI 0# dt1_sajCF GHC.Prim.void#]
                                of
                                s1_sajCJ
                                { (##) ->
                                      case plusAddr# [addr_sajCC 6#] of sat_sajCK {
                                        __DEFAULT ->
                                            case
                                                writeInt16OffAddr# [sat_sajCK
                                                                    0#
                                                                    dt2_sajCG
                                                                    GHC.Prim.void#]
                                            of
                                            s3_sajCL
                                            { (##) -> Unit# [GHC.Tuple.()];
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.Event.Poll.$fStorablePollFd5
  :: GHC.Ptr.Ptr GHC.Event.Poll.PollFd
     -> GHC.Types.Int
     -> GHC.Event.Poll.PollFd
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(SSS),1*U(U,U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ptr_sajCM off_sajCN val_sajCO void_0E]
        case ptr_sajCM of {
          GHC.Ptr.Ptr addr_sajCR [Occ=Once] ->
              case off_sajCN of {
                GHC.Types.I# x_sajCT [Occ=Once] ->
                    case val_sajCO of {
                      GHC.Event.Poll.PollFd dt_sajCV [Occ=Once]
                                            dt1_sajCW [Occ=Once]
                                            dt2_sajCX [Occ=Once] ->
                          case *# [x_sajCT 8#] of sat_sajCZ {
                            __DEFAULT ->
                                case plusAddr# [addr_sajCR sat_sajCZ] of addr1_sajCY [Dmd=<S,U>] {
                                  __DEFAULT ->
                                      case
                                          writeInt32OffAddr# [addr1_sajCY
                                                              0#
                                                              dt_sajCV
                                                              GHC.Prim.void#]
                                      of
                                      s2_sajD0
                                      { (##) ->
                                            case plusAddr# [addr1_sajCY 4#] of sat_sajD1 {
                                              __DEFAULT ->
                                                  case
                                                      writeInt16OffAddr# [sat_sajD1
                                                                          0#
                                                                          dt1_sajCW
                                                                          GHC.Prim.void#]
                                                  of
                                                  s1_sajD2
                                                  { (##) ->
                                                        case
                                                            plusAddr# [addr1_sajCY 6#]
                                                        of
                                                        sat_sajD3
                                                        { __DEFAULT ->
                                                              case
                                                                  writeInt16OffAddr# [sat_sajD3
                                                                                      0#
                                                                                      dt2_sajCX
                                                                                      GHC.Prim.void#]
                                                              of
                                                              s3_sajD4
                                                              { (##) -> Unit# [GHC.Tuple.()];
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.Event.Poll.$fStorablePollFd3
  :: forall b.
     GHC.Ptr.Ptr b
     -> GHC.Types.Int
     -> GHC.Event.Poll.PollFd
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(SSS),1*U(U,U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ptr_sajD5 off_sajD6 eta_sajD7 void_0E]
        case ptr_sajD5 of {
          GHC.Ptr.Ptr addr_sajDa [Occ=Once] ->
              case off_sajD6 of {
                GHC.Types.I# d_sajDc [Occ=Once] ->
                    case eta_sajD7 of {
                      GHC.Event.Poll.PollFd dt_sajDe [Occ=Once]
                                            dt1_sajDf [Occ=Once]
                                            dt2_sajDg [Occ=Once] ->
                          case plusAddr# [addr_sajDa d_sajDc] of addr1_sajDh [Dmd=<S,U>] {
                            __DEFAULT ->
                                case
                                    writeInt32OffAddr# [addr1_sajDh 0# dt_sajDe GHC.Prim.void#]
                                of
                                s2_sajDi
                                { (##) ->
                                      case plusAddr# [addr1_sajDh 4#] of sat_sajDj {
                                        __DEFAULT ->
                                            case
                                                writeInt16OffAddr# [sat_sajDj
                                                                    0#
                                                                    dt1_sajDf
                                                                    GHC.Prim.void#]
                                            of
                                            s1_sajDk
                                            { (##) ->
                                                  case plusAddr# [addr1_sajDh 6#] of sat_sajDl {
                                                    __DEFAULT ->
                                                        case
                                                            writeInt16OffAddr# [sat_sajDl
                                                                                0#
                                                                                dt2_sajDg
                                                                                GHC.Prim.void#]
                                                        of
                                                        s3_sajDm
                                                        { (##) -> Unit# [GHC.Tuple.()];
                                                        };
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.Event.Poll.$fStorablePollFd [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable GHC.Event.Poll.PollFd
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [GHC.Event.Poll.$fStorablePollFd_$csizeOf
                                                GHC.Event.Poll.$fStorablePollFd_$calignment
                                                GHC.Event.Poll.$fStorablePollFd6
                                                GHC.Event.Poll.$fStorablePollFd5
                                                GHC.Event.Poll.$fStorablePollFd4
                                                GHC.Event.Poll.$fStorablePollFd3
                                                GHC.Event.Poll.$fStorablePollFd2
                                                GHC.Event.Poll.$fStorablePollFd1];

GHC.Event.Poll.$fStorableEvent [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable GHC.Event.Poll.Event
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableInt16_$calignment
                                                Foreign.Storable.$fStorableInt16_$calignment
                                                GHC.Storable.readInt16OffPtr1
                                                GHC.Storable.writeInt16OffPtr1
                                                Foreign.Storable.$fStorableInt9
                                                Foreign.Storable.$fStorableInt7
                                                Foreign.Storable.$fStorableInt6
                                                Foreign.Storable.$fStorableInt5];

GHC.Event.Poll.$fShowEvent2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Event "#;

GHC.Event.Poll.$w$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Event.Poll.Event -> GHC.Base.String -> GHC.Base.String
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,U><L,1*U(U)><L,U>,
 Unf=OtherCon []] =
    [] \r [ww_sajDn w_sajDo w1_sajDp]
        case >=# [ww_sajDn 11#] of {
          __DEFAULT ->
              let {
                sat_sajDw [Occ=Once] :: [GHC.Types.Char]
                [LclId] =
                    [w_sajDo w1_sajDp] \u []
                        case w_sajDo of {
                          GHC.Int.I16# x#_sajDs [Occ=Once] ->
                              case GHC.Show.$wshowSignedInt 11# x#_sajDs w1_sajDp of {
                                (#,#) ww5_sajDu [Occ=Once] ww6_sajDv [Occ=Once] ->
                                    : [ww5_sajDu ww6_sajDv];
                              };
                        };
              } in 
                GHC.CString.unpackAppendCString#
                    GHC.Event.Poll.$fShowEvent2 sat_sajDw;
          1# ->
              let {
                sat_sajDE [Occ=Once] :: [GHC.Types.Char]
                [LclId] =
                    [w_sajDo w1_sajDp] \u []
                        let {
                          sat_sajDD [Occ=Once] :: [GHC.Types.Char]
                          [LclId] =
                              [w_sajDo w1_sajDp] \u []
                                  case w_sajDo of {
                                    GHC.Int.I16# x#_sajDy [Occ=Once] ->
                                        let {
                                          sat_sajDz [Occ=Once] :: GHC.Base.String
                                          [LclId] =
                                              CCCS :! [GHC.Show.$fShow(,)2 w1_sajDp];
                                        } in 
                                          case GHC.Show.$wshowSignedInt 11# x#_sajDy sat_sajDz of {
                                            (#,#) ww5_sajDB [Occ=Once] ww6_sajDC [Occ=Once] ->
                                                : [ww5_sajDB ww6_sajDC];
                                          };
                                  };
                        } in 
                          GHC.CString.unpackAppendCString#
                              GHC.Event.Poll.$fShowEvent2 sat_sajDD;
              } in  : [GHC.Show.$fShow(,)4 sat_sajDE];
        };

GHC.Event.Poll.$fShowEvent_$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Int -> GHC.Event.Poll.Event -> GHC.Show.ShowS
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><L,1*U(U)><L,U>,
 Unf=OtherCon []] =
    [] \r [w_sajDF w1_sajDG w2_sajDH]
        case w_sajDF of {
          GHC.Types.I# ww1_sajDJ [Occ=Once] ->
              GHC.Event.Poll.$w$cshowsPrec ww1_sajDJ w1_sajDG w2_sajDH;
        };

GHC.Event.Poll.$fShowEvent_$cshow
  :: GHC.Event.Poll.Event -> GHC.Base.String
[GblId, Arity=1, Caf=NoCafRefs, Str=<L,1*U(U)>, Unf=OtherCon []] =
    [] \r [x_sajDK]
        let {
          sat_sajDQ [Occ=Once] :: [GHC.Types.Char]
          [LclId] =
              [x_sajDK] \u []
                  case x_sajDK of {
                    GHC.Int.I16# x#_sajDM [Occ=Once] ->
                        case GHC.Show.$wshowSignedInt 11# x#_sajDM GHC.Types.[] of {
                          (#,#) ww5_sajDO [Occ=Once] ww6_sajDP [Occ=Once] ->
                              : [ww5_sajDO ww6_sajDP];
                        };
                  };
        } in 
          GHC.CString.unpackAppendCString#
              GHC.Event.Poll.$fShowEvent2 sat_sajDQ;

GHC.Event.Poll.$fShowEvent1
  :: GHC.Event.Poll.Event -> GHC.Show.ShowS
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,1*U(U)><L,U>,
 Unf=OtherCon []] =
    [] \r [w_sajDR w1_sajDS]
        GHC.Event.Poll.$w$cshowsPrec 0# w_sajDR w1_sajDS;

GHC.Event.Poll.$fShowEvent_$cshowList
  :: [GHC.Event.Poll.Event] -> GHC.Show.ShowS
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><L,U>,
 Unf=OtherCon []] =
    [] \r [ls_sajDT s_sajDU]
        GHC.Show.showList__ GHC.Event.Poll.$fShowEvent1 ls_sajDT s_sajDU;

GHC.Event.Poll.$fShowEvent [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show GHC.Event.Poll.Event
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Event.Poll.$fShowEvent_$cshowsPrec
                                    GHC.Event.Poll.$fShowEvent_$cshow
                                    GHC.Event.Poll.$fShowEvent_$cshowList];

GHC.Event.Poll.$fShowPollFd6 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "PollFd {"#;

GHC.Event.Poll.$fShowPollFd5 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "pfdFd = "#;

GHC.Event.Poll.$fShowPollFd4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "pfdEvents = "#;

GHC.Event.Poll.$fShowPollFd3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "pfdRevents = "#;

GHC.Event.Poll.$fShowPollFd2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "}"#;

GHC.Event.Poll.$w$cshowsPrec1 [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Base.String
     -> GHC.Base.String
[GblId, Arity=5, Str=<S,U><L,U><L,U><L,U><L,U>, Unf=OtherCon []] =
    [] \r [ww_sajDV ww1_sajDW ww2_sajDX ww3_sajDY w_sajDZ]
        let {
          p_sajE0 [Occ=Once*!, Dmd=<L,1*C1(U)>] :: GHC.Show.ShowS
          [LclId, Arity=1, Str=<L,U>, Unf=OtherCon []] =
              sat-only [ww1_sajDW ww2_sajDX ww3_sajDY] \r [x_sajE1]
                  let {
                    sat_sajEf [Occ=Once] :: [GHC.Types.Char]
                    [LclId] =
                        [ww1_sajDW ww2_sajDX ww3_sajDY x_sajE1] \u []
                            let {
                              sat_sajEe [Occ=Once] :: [GHC.Types.Char]
                              [LclId] =
                                  [ww1_sajDW ww2_sajDX ww3_sajDY x_sajE1] \u []
                                      let {
                                        sat_sajEa [Occ=Once] :: GHC.Base.String
                                        [LclId] =
                                            [ww2_sajDX ww3_sajDY x_sajE1] \u []
                                                let {
                                                  sat_sajE9 [Occ=Once, Dmd=<L,1*U>]
                                                    :: [GHC.Types.Char]
                                                  [LclId] =
                                                      [ww2_sajDX ww3_sajDY x_sajE1] \s []
                                                          let {
                                                            sat_sajE8 [Occ=Once] :: [GHC.Types.Char]
                                                            [LclId] =
                                                                [ww2_sajDX ww3_sajDY x_sajE1] \u []
                                                                    let {
                                                                      sat_sajE7 [Occ=Once]
                                                                        :: GHC.Base.String
                                                                      [LclId] =
                                                                          [ww3_sajDY x_sajE1] \u []
                                                                              let {
                                                                                sat_sajE6 [Occ=Once,
                                                                                           Dmd=<L,1*U>]
                                                                                  :: [GHC.Types.Char]
                                                                                [LclId] =
                                                                                    [ww3_sajDY
                                                                                     x_sajE1] \s []
                                                                                        let {
                                                                                          sat_sajE5 [Occ=Once]
                                                                                            :: [GHC.Types.Char]
                                                                                          [LclId] =
                                                                                              [ww3_sajDY
                                                                                               x_sajE1] \u []
                                                                                                  let {
                                                                                                    sat_sajE4 [Occ=Once]
                                                                                                      :: GHC.Base.String
                                                                                                    [LclId] =
                                                                                                        [x_sajE1] \u []
                                                                                                            GHC.CString.unpackAppendCString#
                                                                                                                GHC.Event.Poll.$fShowPollFd2
                                                                                                                x_sajE1; } in
                                                                                                  let {
                                                                                                    sat_sajE3 [Occ=Once]
                                                                                                      :: GHC.Event.Poll.Event
                                                                                                    [LclId] =
                                                                                                        CCCS GHC.Int.I16#! [ww3_sajDY];
                                                                                                  } in 
                                                                                                    GHC.Event.Poll.$w$cshowsPrec
                                                                                                        0#
                                                                                                        sat_sajE3
                                                                                                        sat_sajE4;
                                                                                        } in 
                                                                                          GHC.CString.unpackAppendCString#
                                                                                              GHC.Event.Poll.$fShowPollFd3
                                                                                              sat_sajE5;
                                                                              } in 
                                                                                GHC.Base.++
                                                                                    GHC.Show.showCommaSpace1
                                                                                    sat_sajE6; } in
                                                                    let {
                                                                      sat_sajE2 [Occ=Once]
                                                                        :: GHC.Event.Poll.Event
                                                                      [LclId] =
                                                                          CCCS GHC.Int.I16#! [ww2_sajDX];
                                                                    } in 
                                                                      GHC.Event.Poll.$w$cshowsPrec
                                                                          0# sat_sajE2 sat_sajE7;
                                                          } in 
                                                            GHC.CString.unpackAppendCString#
                                                                GHC.Event.Poll.$fShowPollFd4
                                                                sat_sajE8;
                                                } in 
                                                  GHC.Base.++ GHC.Show.showCommaSpace1 sat_sajE9;
                                      } in 
                                        case GHC.Show.$wshowSignedInt 0# ww1_sajDW sat_sajEa of {
                                          (#,#) ww5_sajEc [Occ=Once] ww6_sajEd [Occ=Once] ->
                                              : [ww5_sajEc ww6_sajEd];
                                        };
                            } in 
                              GHC.CString.unpackAppendCString#
                                  GHC.Event.Poll.$fShowPollFd5 sat_sajEe;
                  } in 
                    GHC.CString.unpackAppendCString#
                        GHC.Event.Poll.$fShowPollFd6 sat_sajEf;
        } in 
          case >=# [ww_sajDV 11#] of {
            __DEFAULT -> p_sajE0 w_sajDZ;
            1# ->
                let {
                  sat_sajEi [Occ=Once] :: [GHC.Types.Char]
                  [LclId] =
                      [w_sajDZ p_sajE0] \u []
                          let {
                            sat_sajEh [Occ=Once] :: GHC.Base.String
                            [LclId] =
                                CCCS :! [GHC.Show.$fShow(,)2 w_sajDZ];
                          } in  p_sajE0 sat_sajEh;
                } in  : [GHC.Show.$fShow(,)4 sat_sajEi];
          };

GHC.Event.Poll.$fShowPollFd_$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Int -> GHC.Event.Poll.PollFd -> GHC.Show.ShowS
[GblId,
 Arity=3,
 Str=<S(S),1*U(U)><S(SSS),1*U(U,U,U)><L,U>,
 Unf=OtherCon []] =
    [] \r [w_sajEj w1_sajEk w2_sajEl]
        case w_sajEj of {
          GHC.Types.I# ww1_sajEn [Occ=Once] ->
              case w1_sajEk of {
                GHC.Event.Poll.PollFd ww3_sajEp [Occ=Once]
                                      ww4_sajEq [Occ=Once]
                                      ww5_sajEr [Occ=Once] ->
                    GHC.Event.Poll.$w$cshowsPrec1
                        ww1_sajEn ww3_sajEp ww4_sajEq ww5_sajEr w2_sajEl;
              };
        };

GHC.Event.Poll.$fShowPollFd7 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [0#];

GHC.Event.Poll.$fShowPollFd_$cshow
  :: GHC.Event.Poll.PollFd -> GHC.Base.String
[GblId, Arity=1, Str=<S(SSS),1*U(U,U,U)>, Unf=OtherCon []] =
    [] \r [x_sajEs]
        case x_sajEs of {
          GHC.Event.Poll.PollFd ww1_sajEu [Occ=Once]
                                ww2_sajEv [Occ=Once]
                                ww3_sajEw [Occ=Once] ->
              GHC.Event.Poll.$w$cshowsPrec1
                  0# ww1_sajEu ww2_sajEv ww3_sajEw GHC.Types.[];
        };

GHC.Event.Poll.$fShowPollFd1
  :: GHC.Event.Poll.PollFd -> GHC.Show.ShowS
[GblId, Arity=2, Str=<S(SSS),1*U(U,U,U)><L,U>, Unf=OtherCon []] =
    [] \r [w_sajEx w1_sajEy]
        case w_sajEx of {
          GHC.Event.Poll.PollFd ww1_sajEA [Occ=Once]
                                ww2_sajEB [Occ=Once]
                                ww3_sajEC [Occ=Once] ->
              GHC.Event.Poll.$w$cshowsPrec1
                  0# ww1_sajEA ww2_sajEB ww3_sajEC w1_sajEy;
        };

GHC.Event.Poll.$fShowPollFd_$cshowList
  :: [GHC.Event.Poll.PollFd] -> GHC.Show.ShowS
[GblId, Arity=2, Str=<S,1*U><L,U>, Unf=OtherCon []] =
    [] \r [ls_sajED s_sajEE]
        GHC.Show.showList__ GHC.Event.Poll.$fShowPollFd1 ls_sajED s_sajEE;

GHC.Event.Poll.$fShowPollFd [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show GHC.Event.Poll.PollFd
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Event.Poll.$fShowPollFd_$cshowsPrec
                                    GHC.Event.Poll.$fShowPollFd_$cshow
                                    GHC.Event.Poll.$fShowPollFd_$cshowList];

GHC.Event.Poll.$fEqEvent [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq GHC.Event.Poll.Event
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt16 GHC.Int.neInt16];

GHC.Event.Poll.pfdRevents
  :: GHC.Event.Poll.PollFd -> GHC.Event.Poll.Event
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLS),1*U(A,A,U)>m,
 Unf=OtherCon []] =
    [] \r [ds_sajEF]
        case ds_sajEF of {
          GHC.Event.Poll.PollFd _ [Occ=Dead]
                                _ [Occ=Dead]
                                dt2_sajEJ [Occ=Once] ->
              GHC.Int.I16# [dt2_sajEJ];
        };

GHC.Event.Poll.pfdEvents
  :: GHC.Event.Poll.PollFd -> GHC.Event.Poll.Event
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LSL),1*U(A,U,A)>m,
 Unf=OtherCon []] =
    [] \r [ds_sajEK]
        case ds_sajEK of {
          GHC.Event.Poll.PollFd _ [Occ=Dead]
                                dt1_sajEN [Occ=Once]
                                _ [Occ=Dead] ->
              GHC.Int.I16# [dt1_sajEN];
        };

GHC.Event.Poll.pfdFd
  :: GHC.Event.Poll.PollFd -> System.Posix.Types.Fd
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SLL),1*U(U,A,A)>m,
 Unf=OtherCon []] =
    [] \r [ds_sajEP]
        case ds_sajEP of {
          GHC.Event.Poll.PollFd dt_sajER [Occ=Once]
                                _ [Occ=Dead]
                                _ [Occ=Dead] ->
              GHC.Int.I32# [dt_sajER];
        };

GHC.Event.Poll.pollFd
  :: GHC.Event.Poll.Poll
     -> GHC.Event.Array.Array GHC.Event.Poll.PollFd
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LS),1*U(A,U)>m,
 Unf=OtherCon []] =
    [] \r [ds_sajEU]
        case ds_sajEU of {
          GHC.Event.Poll.Poll _ [Occ=Dead] dt1_sajEX [Occ=Once] ->
              GHC.STRef.STRef [dt1_sajEX];
        };

GHC.Event.Poll.pollChanges
  :: GHC.Event.Poll.Poll
     -> GHC.MVar.MVar (GHC.Event.Array.Array GHC.Event.Poll.PollFd)
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,A)>m,
 Unf=OtherCon []] =
    [] \r [ds_sajEY]
        case ds_sajEY of {
          GHC.Event.Poll.Poll dt_sajF0 [Occ=Once] _ [Occ=Dead] ->
              GHC.MVar.MVar [dt_sajF0];
        };

GHC.Event.Poll.available [InlPrag=INLINE (sat-args=0)]
  :: GHC.Types.Bool
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.True! [];

GHC.Event.Poll.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

GHC.Event.Poll.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Poll.$trModule4];

GHC.Event.Poll.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.Event.Poll"#;

GHC.Event.Poll.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Poll.$trModule2];

GHC.Event.Poll.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [GHC.Event.Poll.$trModule3
                                     GHC.Event.Poll.$trModule1];

$krep_rajAW :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCShort
                                              GHC.Types.[]];

$krep1_rajAX :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [System.Posix.Types.$tcFd
                                              GHC.Types.[]];

GHC.Event.Poll.$tcEvent2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Event"#;

GHC.Event.Poll.$tcEvent1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Poll.$tcEvent2];

GHC.Event.Poll.$tcEvent :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [10782964843686049546##
                                    16589058175633483645##
                                    GHC.Event.Poll.$trModule
                                    GHC.Event.Poll.$tcEvent1
                                    0#
                                    GHC.Types.krep$*];

$krep2_rajAY :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.Poll.$tcEvent
                                              GHC.Types.[]];

GHC.Event.Poll.$tc'Event1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_rajAW $krep2_rajAY];

GHC.Event.Poll.$tc'Event3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Event"#;

GHC.Event.Poll.$tc'Event2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Poll.$tc'Event3];

GHC.Event.Poll.$tc'Event :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [14301517435728423362##
                                    8190957594797964970##
                                    GHC.Event.Poll.$trModule
                                    GHC.Event.Poll.$tc'Event2
                                    0#
                                    GHC.Event.Poll.$tc'Event1];

GHC.Event.Poll.$tcPollFd2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "PollFd"#;

GHC.Event.Poll.$tcPollFd1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Poll.$tcPollFd2];

GHC.Event.Poll.$tcPollFd :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [16228031948332168786##
                                    6382085973026785723##
                                    GHC.Event.Poll.$trModule
                                    GHC.Event.Poll.$tcPollFd1
                                    0#
                                    GHC.Types.krep$*];

$krep3_rajAZ :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.Poll.$tcPollFd
                                              GHC.Types.[]];

$krep4_rajB0 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_rajAY $krep3_rajAZ];

$krep5_rajB1 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_rajAY $krep4_rajB0];

GHC.Event.Poll.$tc'PollFd1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep1_rajAX $krep5_rajB1];

GHC.Event.Poll.$tc'PollFd3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'PollFd"#;

GHC.Event.Poll.$tc'PollFd2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Poll.$tc'PollFd3];

GHC.Event.Poll.$tc'PollFd :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [13628496348781941345##
                                    13702663238288085101##
                                    GHC.Event.Poll.$trModule
                                    GHC.Event.Poll.$tc'PollFd2
                                    0#
                                    GHC.Event.Poll.$tc'PollFd1];

$krep6_rajB2 :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep3_rajAZ GHC.Types.[]];

$krep7_rajB3 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.Array.$tcArray
                                              $krep6_rajB2];

$krep8_rajB4 :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep7_rajB3 GHC.Types.[]];

$krep9_rajB5 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.MVar.$tcMVar
                                              $krep8_rajB4];

GHC.Event.Poll.$tcPoll2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Poll"#;

GHC.Event.Poll.$tcPoll1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Poll.$tcPoll2];

GHC.Event.Poll.$tcPoll :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [13451464419968486054##
                                    9195109480934256969##
                                    GHC.Event.Poll.$trModule
                                    GHC.Event.Poll.$tcPoll1
                                    0#
                                    GHC.Types.krep$*];

$krep10_rajB6 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.Poll.$tcPoll
                                              GHC.Types.[]];

$krep11_rajB7 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep7_rajB3 $krep10_rajB6];

GHC.Event.Poll.$tc'Poll1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep9_rajB5 $krep11_rajB7];

GHC.Event.Poll.$tc'Poll3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Poll"#;

GHC.Event.Poll.$tc'Poll2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Poll.$tc'Poll3];

GHC.Event.Poll.$tc'Poll :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [5431567153781643515##
                                    15938353663250731731##
                                    GHC.Event.Poll.$trModule
                                    GHC.Event.Poll.$tc'Poll2
                                    0#
                                    GHC.Event.Poll.$tc'Poll1];

GHC.Event.Poll.$fBitsEvent [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits GHC.Event.Poll.Event
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [GHC.Event.Poll.$fEqEvent
                                     GHC.Int.$fBitsInt16_$c.&.
                                     GHC.Int.$fBitsInt16_$c.|.
                                     GHC.Int.$fBitsInt16_$cxor
                                     GHC.Int.$fBitsInt16_$ccomplement
                                     GHC.Int.$fBitsInt16_$cshift
                                     GHC.Int.$fBitsInt16_$crotate
                                     GHC.Int.$fBitsInt3
                                     GHC.Int.$fBitsInt16_$cbit
                                     GHC.Int.$fBitsInt16_$csetBit
                                     GHC.Int.$fBitsInt16_$cclearBit
                                     GHC.Int.$fBitsInt16_$ccomplementBit
                                     GHC.Int.$fBitsInt16_$ctestBit
                                     GHC.Int.$fBitsInt16_$cbitSizeMaybe
                                     GHC.Int.$fBitsInt16_$cfiniteBitSize
                                     GHC.Int.$fBitsInt16_$cisSigned
                                     GHC.Int.$fBitsInt16_$cshiftL
                                     GHC.Int.$fBitsInt16_$cunsafeShiftL
                                     GHC.Int.$fBitsInt16_$cshiftR
                                     GHC.Int.$fBitsInt16_$cunsafeShiftR
                                     GHC.Int.$fBitsInt16_$crotateL
                                     GHC.Int.$fBitsInt16_$crotateR
                                     GHC.Int.$fBitsInt16_$cpopCount];

GHC.Event.Poll.$fFiniteBitsEvent [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits GHC.Event.Poll.Event
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [GHC.Event.Poll.$fBitsEvent
                                           GHC.Int.$fBitsInt16_$cfiniteBitSize
                                           GHC.Int.$fFiniteBitsInt16_$ccountLeadingZeros
                                           GHC.Int.$fFiniteBitsInt16_$ccountTrailingZeros];

GHC.Event.Poll.$fNumEvent [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num GHC.Event.Poll.Event
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Int.$fNumInt16_$c+
                                  GHC.Int.$fNumInt16_$c-
                                  GHC.Int.$fNumInt16_$c*
                                  GHC.Int.$fNumInt16_$cnegate
                                  GHC.Int.$fNumInt16_$cabs
                                  GHC.Int.$fNumInt16_$csignum
                                  GHC.Int.$fNumInt16_$cfromInteger];

lvl_rajB8 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "modifyFdOnce not supported in Poll backend"#;

GHC.Event.Poll.new3
  :: GHC.Event.Poll.Poll
     -> System.Posix.Types.Fd
     -> GHC.Event.Internal.Event
     -> GHC.Types.IO GHC.Types.Bool
[GblId, Str=x] =
    [] \u []
        case GHC.CString.unpackCString# lvl_rajB8 of sat_sajF2 {
          __DEFAULT -> GHC.Err.errorWithoutStackTrace sat_sajF2;
        };

$wc_pollLoop_rajB9
  :: GHC.Prim.Addr#
     -> GHC.Prim.Word#
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, Foreign.C.Types.CInt #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S,U><S,U><S,U><S,U>,
 Unf=OtherCon []] =
    sat-only [] \r [ww_sajF3 ww1_sajF4 ww2_sajF5 void_0E]
        case <=# [ww2_sajF5 2147483647#] of {
          __DEFAULT ->
              case
                  __pkg_ccall_GC base-4.11.0.0 [ww_sajF3
                                                ww1_sajF4
                                                2147483647#
                                                GHC.Prim.void#]
              of
              { Unit# ds1_sajFb [Occ=Once] ->
                    case narrow32Int# [ds1_sajFb] of wild1_sajFc {
                      __DEFAULT ->
                          let {
                            sat_sajFd [Occ=Once] :: Foreign.C.Types.CInt
                            [LclId] =
                                CCCS GHC.Int.I32#! [wild1_sajFc];
                          } in  Unit# [sat_sajFd];
                      0# ->
                          case -# [ww2_sajF5 2147483647#] of sat_sajFe {
                            __DEFAULT ->
                                $wc_pollLoop_rajB9 ww_sajF3 ww1_sajF4 sat_sajFe GHC.Prim.void#;
                          };
                    };
              };
          1# ->
              case narrow32Int# [ww2_sajF5] of sat_sajFg {
                __DEFAULT ->
                    case
                        __pkg_ccall_GC base-4.11.0.0 [ww_sajF3
                                                      ww1_sajF4
                                                      sat_sajFg
                                                      GHC.Prim.void#]
                    of
                    { Unit# ds1_sajFj [Occ=Once] ->
                          case narrow32Int# [ds1_sajFj] of sat_sajFk {
                            __DEFAULT ->
                                let {
                                  sat_sajFl [Occ=Once] :: GHC.Int.Int32
                                  [LclId] =
                                      CCCS GHC.Int.I32#! [sat_sajFk];
                                } in  Unit# [sat_sajFl];
                          };
                    };
              };
        };

lvl1_rajBa :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [0#];

lvl2_rajBb :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "c_poll"#;

lvl3_rajBc :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl2_rajBb;

lvl4_rajBd :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "reworkFd: event not found"#;

lvl5_rajBe :: GHC.Types.IO ()
[GblId, Str=x] =
    [] \u []
        case GHC.CString.unpackCString# lvl4_rajBd of sat_sajFm {
          __DEFAULT -> GHC.Err.errorWithoutStackTrace sat_sajFm;
        };

lvl6_rajBf
  :: GHC.Event.Array.Array GHC.Event.Poll.PollFd
     -> Foreign.C.Types.CInt
     -> (Foreign.C.Types.CInt
         -> GHC.Event.Poll.PollFd
         -> GHC.Types.IO (Foreign.C.Types.CInt, GHC.Types.Bool))
     -> GHC.Types.IO ()
[GblId] =
    [] \u [] GHC.Event.Array.loop GHC.Event.Poll.$fStorablePollFd;

lvl7_rajBg :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [3#];

lvl8_rajBh :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [1#];

lvl9_rajBi :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [2#];

lvl10_rajBj
  :: GHC.Event.Array.Array GHC.Event.Poll.PollFd
     -> GHC.Types.Int -> GHC.Types.IO ()
[GblId] =
    [] \u [] GHC.Event.Array.removeAt GHC.Event.Poll.$fStorablePollFd;

lvl11_rajBk
  :: (GHC.Event.Poll.PollFd -> GHC.Types.Bool)
     -> GHC.Event.Array.Array GHC.Event.Poll.PollFd
     -> GHC.Types.IO
          (GHC.Base.Maybe (GHC.Types.Int, GHC.Event.Poll.PollFd))
[GblId] =
    [] \u [] GHC.Event.Array.findIndex GHC.Event.Poll.$fStorablePollFd;

GHC.Event.Poll.new5
  :: GHC.Event.Poll.Poll
     -> GHC.Base.Maybe GHC.Event.Internal.Timeout
     -> (System.Posix.Types.Fd
         -> GHC.Event.Internal.Event -> GHC.Types.IO ())
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=4,
 Str=<S(SL),1*U(U,U)><L,U><L,C(C1(C1(U(U,A))))><S,U>,
 Unf=OtherCon []] =
    [] \r [p_sajFn mtout_sajFo f_sajFp void_0E]
        case newMutVar# [GHC.ForeignPtr.NoFinalizers GHC.Prim.void#] of {
          Unit# ipv1_sajFt [Occ=Once] ->
              let {
                sat_sajFu [Occ=Once] :: GHC.ForeignPtr.ForeignPtrContents
                [LclId] =
                    CCCS GHC.ForeignPtr.PlainForeignPtr! [ipv1_sajFt]; } in
              let {
                sat_sajFv [Occ=Once]
                  :: GHC.ForeignPtr.ForeignPtr GHC.Event.Poll.PollFd
                [LclId] =
                    CCCS GHC.ForeignPtr.ForeignPtr! [__NULL sat_sajFu]; } in
              let {
                sat_sajFw [Occ=Once] :: GHC.Event.Array.AC GHC.Event.Poll.PollFd
                [LclId] =
                    CCCS GHC.Event.Array.AC! [sat_sajFv 0# 0#];
              } in 
                case newMutVar# [sat_sajFw GHC.Prim.void#] of {
                  Unit# ipv3_sajFz [Occ=Once*] ->
                      case p_sajFn of {
                        GHC.Event.Poll.Poll dt_sajFB dt1_sajFC ->
                            case getMaskingState# [GHC.Prim.void#] of {
                              Unit# ipv5_sajFF [Occ=Once!] ->
                                  let-no-escape {
                                    $w$j_sajFG [InlPrag=NOUSERINLINE[0],
                                                Occ=Once*!T[2],
                                                Dmd=<C(C(S)),1*C1(C1(U(U,U)))>]
                                      :: GHC.Prim.State# GHC.Prim.RealWorld
                                         -> GHC.Prim.MutVar#
                                              GHC.Prim.RealWorld
                                              (GHC.Event.Array.AC GHC.Event.Poll.PollFd)
                                         -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
                                    [LclId[JoinId(2)], Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
                                        sat-only [mtout_sajFo f_sajFp dt1_sajFC] \r [void_0E
                                                                                     ww_sajFI]
                                            case readMutVar# [ww_sajFI GHC.Prim.void#] of {
                                              Unit# ipv7_sajFL [Occ=Once!] ->
                                                  case ipv7_sajFL of {
                                                    GHC.Event.Array.AC es_sajFN [Occ=Once!]
                                                                       dt2_sajFO [Occ=Once]
                                                                       _ [Occ=Dead] ->
                                                        case es_sajFN of {
                                                          GHC.ForeignPtr.ForeignPtr fo_sajFR [Occ=OnceL]
                                                                                    ds4_sajFS [Occ=Once] ->
                                                              let {
                                                                ary_sajFT
                                                                  :: GHC.STRef.STRef
                                                                       GHC.Prim.RealWorld
                                                                       (GHC.Event.Array.AC
                                                                          GHC.Event.Poll.PollFd)
                                                                [LclId, Unf=OtherCon []] =
                                                                    CCCS GHC.STRef.STRef! [dt1_sajFC];
                                                              } in 
                                                                case
                                                                    *# [dt2_sajFO 8#]
                                                                of
                                                                offset_sajFU [Dmd=<S,U>]
                                                                { __DEFAULT ->
                                                                      let-no-escape {
                                                                        exit_sajFV [Occ=OnceL!T[1],
                                                                                    Dmd=<L,C(U(U,U))>]
                                                                          :: GHC.Prim.State#
                                                                               GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Types.Int #)
                                                                        [LclId[JoinId(1)],
                                                                         Arity=1,
                                                                         Str=<S,U>,
                                                                         Unf=OtherCon []] =
                                                                            sat-only [mtout_sajFo
                                                                                      f_sajFp
                                                                                      dt1_sajFC
                                                                                      ds4_sajFS
                                                                                      ary_sajFT] \r [void_0E]
                                                                                case
                                                                                    touch# [ds4_sajFS
                                                                                            GHC.Prim.void#]
                                                                                of
                                                                                s'_sajFX
                                                                                { (##) ->
                                                                                      case
                                                                                          readMutVar# [dt1_sajFC
                                                                                                       GHC.Prim.void#]
                                                                                      of
                                                                                      { Unit# ipv9_sajG0 [Occ=Once!] ->
                                                                                            case
                                                                                                ipv9_sajG0
                                                                                            of
                                                                                            { GHC.Event.Array.AC es1_sajG2 [Occ=Once!]
                                                                                                                 dt4_sajG3 [Occ=Once*]
                                                                                                                 _ [Occ=Dead] ->
                                                                                                  case
                                                                                                      es1_sajG2
                                                                                                  of
                                                                                                  { GHC.ForeignPtr.ForeignPtr ds6_sajG6 [Occ=Once*]
                                                                                                                              r_sajG7 [Occ=Once] ->
                                                                                                        let-no-escape {
                                                                                                          $w$j1_sajG8 [InlPrag=NOUSERINLINE[0],
                                                                                                                       Occ=Once*!T[3],
                                                                                                                       Dmd=<L,1*C1(C1(C1(U(U,U))))>]
                                                                                                            :: GHC.Prim.State#
                                                                                                                 GHC.Prim.RealWorld
                                                                                                               -> GHC.Prim.Int#
                                                                                                               -> (# GHC.Prim.State#
                                                                                                                       GHC.Prim.RealWorld,
                                                                                                                     Foreign.C.Types.CInt #)
                                                                                                               -> (# GHC.Prim.State#
                                                                                                                       GHC.Prim.RealWorld,
                                                                                                                     GHC.Types.Int #)
                                                                                                          [LclId[JoinId(3)],
                                                                                                           Arity=3,
                                                                                                           Str=<S,U><S,1*U><L,A>,
                                                                                                           Unf=OtherCon []] =
                                                                                                              sat-only [f_sajFp
                                                                                                                        ary_sajFT
                                                                                                                        r_sajG7] \r [void_0E
                                                                                                                                     ww1_sajGa
                                                                                                                                     us_gajK6]
                                                                                                                  let-no-escape {
                                                                                                                    $w$j2_sajGc [InlPrag=NOUSERINLINE[0],
                                                                                                                                 Occ=Once*!T[2],
                                                                                                                                 Dmd=<L,1*C1(C1(U(U,U)))>]
                                                                                                                      :: GHC.Prim.State#
                                                                                                                           GHC.Prim.RealWorld
                                                                                                                         -> GHC.Prim.Int#
                                                                                                                         -> (# GHC.Prim.State#
                                                                                                                                 GHC.Prim.RealWorld,
                                                                                                                               GHC.Types.Int #)
                                                                                                                    [LclId[JoinId(2)],
                                                                                                                     Arity=2,
                                                                                                                     Str=<S,U><S,1*U>,
                                                                                                                     Unf=OtherCon []] =
                                                                                                                        sat-only [f_sajFp
                                                                                                                                  ary_sajFT
                                                                                                                                  r_sajG7] \r [void_0E
                                                                                                                                               ww2_sajGe]
                                                                                                                            case
                                                                                                                                touch# [r_sajG7
                                                                                                                                        GHC.Prim.void#]
                                                                                                                            of
                                                                                                                            s'1_sajGf
                                                                                                                            { (##) ->
                                                                                                                                  case
                                                                                                                                      ww2_sajGe
                                                                                                                                  of
                                                                                                                                  wild6_sajGg
                                                                                                                                  { __DEFAULT ->
                                                                                                                                        let {
                                                                                                                                          sat_sajGO [Occ=Once]
                                                                                                                                            :: Foreign.C.Types.CInt
                                                                                                                                               -> GHC.Event.Poll.PollFd
                                                                                                                                               -> GHC.Types.IO
                                                                                                                                                    (Foreign.C.Types.CInt,
                                                                                                                                                     GHC.Types.Bool)
                                                                                                                                          [LclId] =
                                                                                                                                              [f_sajFp
                                                                                                                                               wild6_sajGg] \r [i_sajGh
                                                                                                                                                                e_sajGi
                                                                                                                                                                void_0E]
                                                                                                                                                  case
                                                                                                                                                      e_sajGi
                                                                                                                                                  of
                                                                                                                                                  { GHC.Event.Poll.PollFd dt6_sajGl [Occ=Once]
                                                                                                                                                                          _ [Occ=Dead]
                                                                                                                                                                          dt8_sajGn [Occ=Once!] ->
                                                                                                                                                        case
                                                                                                                                                            dt8_sajGn
                                                                                                                                                        of
                                                                                                                                                        wild8_sajGo
                                                                                                                                                        { __DEFAULT ->
                                                                                                                                                              let {
                                                                                                                                                                sat_sajGz [Occ=Once]
                                                                                                                                                                  :: GHC.Event.Internal.Event
                                                                                                                                                                [LclId] =
                                                                                                                                                                    [wild8_sajGo] \u []
                                                                                                                                                                        case
                                                                                                                                                                            int2Word# [wild8_sajGo]
                                                                                                                                                                        of
                                                                                                                                                                        sat_sajGq
                                                                                                                                                                        { __DEFAULT ->
                                                                                                                                                                              case
                                                                                                                                                                                  and# [sat_sajGq
                                                                                                                                                                                        25##]
                                                                                                                                                                              of
                                                                                                                                                                              sat_sajGr
                                                                                                                                                                              { __DEFAULT ->
                                                                                                                                                                                    case
                                                                                                                                                                                        word2Int# [sat_sajGr]
                                                                                                                                                                                    of
                                                                                                                                                                                    { __DEFAULT ->
                                                                                                                                                                                          case
                                                                                                                                                                                              int2Word# [wild8_sajGo]
                                                                                                                                                                                          of
                                                                                                                                                                                          sat_sajGt
                                                                                                                                                                                          { __DEFAULT ->
                                                                                                                                                                                                case
                                                                                                                                                                                                    and# [sat_sajGt
                                                                                                                                                                                                          28##]
                                                                                                                                                                                                of
                                                                                                                                                                                                sat_sajGu
                                                                                                                                                                                                { __DEFAULT ->
                                                                                                                                                                                                      case
                                                                                                                                                                                                          word2Int# [sat_sajGu]
                                                                                                                                                                                                      of
                                                                                                                                                                                                      { __DEFAULT ->
                                                                                                                                                                                                            lvl7_rajBg;
                                                                                                                                                                                                        0# ->
                                                                                                                                                                                                            lvl8_rajBh;
                                                                                                                                                                                                      };
                                                                                                                                                                                                };
                                                                                                                                                                                          };
                                                                                                                                                                                      0# ->
                                                                                                                                                                                          case
                                                                                                                                                                                              int2Word# [wild8_sajGo]
                                                                                                                                                                                          of
                                                                                                                                                                                          sat_sajGw
                                                                                                                                                                                          { __DEFAULT ->
                                                                                                                                                                                                case
                                                                                                                                                                                                    and# [sat_sajGw
                                                                                                                                                                                                          28##]
                                                                                                                                                                                                of
                                                                                                                                                                                                sat_sajGx
                                                                                                                                                                                                { __DEFAULT ->
                                                                                                                                                                                                      case
                                                                                                                                                                                                          word2Int# [sat_sajGx]
                                                                                                                                                                                                      of
                                                                                                                                                                                                      { __DEFAULT ->
                                                                                                                                                                                                            lvl9_rajBi;
                                                                                                                                                                                                        0# ->
                                                                                                                                                                                                            GHC.Event.Poll.$fShowPollFd7;
                                                                                                                                                                                                      };
                                                                                                                                                                                                };
                                                                                                                                                                                          };
                                                                                                                                                                                    };
                                                                                                                                                                              };
                                                                                                                                                                        }; } in
                                                                                                                                                              let {
                                                                                                                                                                sat_sajGp [Occ=Once]
                                                                                                                                                                  :: System.Posix.Types.Fd
                                                                                                                                                                [LclId] =
                                                                                                                                                                    CCCS GHC.Int.I32#! [dt6_sajGl];
                                                                                                                                                              } in 
                                                                                                                                                                case
                                                                                                                                                                    f_sajFp
                                                                                                                                                                        sat_sajGp
                                                                                                                                                                        sat_sajGz
                                                                                                                                                                        GHC.Prim.void#
                                                                                                                                                                of
                                                                                                                                                                { Unit# _ [Occ=Dead] ->
                                                                                                                                                                      let {
                                                                                                                                                                        i'_sajGD [Dmd=<L,U(U)>]
                                                                                                                                                                          :: GHC.Int.Int32
                                                                                                                                                                        [LclId] =
                                                                                                                                                                            [i_sajGh] \u []
                                                                                                                                                                                case
                                                                                                                                                                                    i_sajGh
                                                                                                                                                                                of
                                                                                                                                                                                { GHC.Int.I32# x#_sajGF [Occ=Once] ->
                                                                                                                                                                                      case
                                                                                                                                                                                          +# [x#_sajGF
                                                                                                                                                                                              1#]
                                                                                                                                                                                      of
                                                                                                                                                                                      sat_sajGG
                                                                                                                                                                                      { __DEFAULT ->
                                                                                                                                                                                            case
                                                                                                                                                                                                narrow32Int# [sat_sajGG]
                                                                                                                                                                                            of
                                                                                                                                                                                            sat_sajGH
                                                                                                                                                                                            { __DEFAULT ->
                                                                                                                                                                                                  GHC.Int.I32# [sat_sajGH];
                                                                                                                                                                                            };
                                                                                                                                                                                      };
                                                                                                                                                                                }; } in
                                                                                                                                                                      let {
                                                                                                                                                                        sat_sajGL [Occ=Once]
                                                                                                                                                                          :: GHC.Types.Bool
                                                                                                                                                                        [LclId] =
                                                                                                                                                                            [wild6_sajGg
                                                                                                                                                                             i'_sajGD] \u []
                                                                                                                                                                                case
                                                                                                                                                                                    i'_sajGD
                                                                                                                                                                                of
                                                                                                                                                                                { GHC.Int.I32# x_sajGJ [Occ=Once] ->
                                                                                                                                                                                      case
                                                                                                                                                                                          ==# [x_sajGJ
                                                                                                                                                                                               wild6_sajGg]
                                                                                                                                                                                      of
                                                                                                                                                                                      sat_sajGK
                                                                                                                                                                                      { __DEFAULT ->
                                                                                                                                                                                            tagToEnum# [sat_sajGK];
                                                                                                                                                                                      };
                                                                                                                                                                                }; } in
                                                                                                                                                                      let {
                                                                                                                                                                        sat_sajGM [Occ=Once]
                                                                                                                                                                          :: (Foreign.C.Types.CInt,
                                                                                                                                                                              GHC.Types.Bool)
                                                                                                                                                                        [LclId] =
                                                                                                                                                                            CCCS (,)! [i'_sajGD
                                                                                                                                                                                       sat_sajGL];
                                                                                                                                                                      } in 
                                                                                                                                                                        Unit# [sat_sajGM];
                                                                                                                                                                };
                                                                                                                                                          0# ->
                                                                                                                                                              let {
                                                                                                                                                                sat_sajGN [Occ=Once]
                                                                                                                                                                  :: (Foreign.C.Types.CInt,
                                                                                                                                                                      GHC.Types.Bool)
                                                                                                                                                                [LclId] =
                                                                                                                                                                    CCCS (,)! [i_sajGh
                                                                                                                                                                               GHC.Types.True];
                                                                                                                                                              } in 
                                                                                                                                                                Unit# [sat_sajGN];
                                                                                                                                                        };
                                                                                                                                                  };
                                                                                                                                        } in 
                                                                                                                                          case
                                                                                                                                              lvl6_rajBf
                                                                                                                                                  ary_sajFT
                                                                                                                                                  lvl1_rajBa
                                                                                                                                                  sat_sajGO
                                                                                                                                                  GHC.Prim.void#
                                                                                                                                          of
                                                                                                                                          { Unit# _ [Occ=Dead] ->
                                                                                                                                                let {
                                                                                                                                                  sat_sajGS [Occ=Once]
                                                                                                                                                    :: GHC.Types.Int
                                                                                                                                                  [LclId] =
                                                                                                                                                      CCCS GHC.Types.I#! [wild6_sajGg];
                                                                                                                                                } in 
                                                                                                                                                  Unit# [sat_sajGS];
                                                                                                                                          };
                                                                                                                                    0# ->
                                                                                                                                        Unit# [GHC.Event.Poll.$fShowPollFd7];
                                                                                                                                  };
                                                                                                                            };
                                                                                                                  } in 
                                                                                                                    case
                                                                                                                        ww1_sajGa
                                                                                                                    of
                                                                                                                    wild6_sajGT
                                                                                                                    { __DEFAULT ->
                                                                                                                          $w$j2_sajGc
                                                                                                                              GHC.Prim.void#
                                                                                                                              wild6_sajGT;
                                                                                                                      -1# ->
                                                                                                                          case
                                                                                                                              __pkg_ccall base-4.11.0.0 [GHC.Prim.void#]
                                                                                                                          of
                                                                                                                          { Unit# ds8_sajGX [Occ=Once] ->
                                                                                                                                case
                                                                                                                                    narrow32Int# [ds8_sajGX]
                                                                                                                                of
                                                                                                                                { __DEFAULT ->
                                                                                                                                      case
                                                                                                                                          Foreign.C.Error.throwErrno1
                                                                                                                                              lvl3_rajBc
                                                                                                                                              GHC.Prim.void#
                                                                                                                                      of
                                                                                                                                      { Unit# ipv11_sajH1 [Occ=Once] ->
                                                                                                                                            case
                                                                                                                                                ipv11_sajH1
                                                                                                                                            of
                                                                                                                                            { GHC.Int.I32# ww3_sajH3 [Occ=Once] ->
                                                                                                                                                  $w$j2_sajGc
                                                                                                                                                      GHC.Prim.void#
                                                                                                                                                      ww3_sajH3;
                                                                                                                                            };
                                                                                                                                      };
                                                                                                                                  4# ->
                                                                                                                                      $w$j2_sajGc
                                                                                                                                          GHC.Prim.void#
                                                                                                                                          0#;
                                                                                                                                };
                                                                                                                          };
                                                                                                                    };
                                                                                                        } in 
                                                                                                          case
                                                                                                              mtout_sajFo
                                                                                                          of
                                                                                                          { GHC.Base.Nothing ->
                                                                                                                case
                                                                                                                    int2Word# [dt4_sajG3]
                                                                                                                of
                                                                                                                sat_sajH6
                                                                                                                { __DEFAULT ->
                                                                                                                      case
                                                                                                                          __pkg_ccall base-4.11.0.0 [ds6_sajG6
                                                                                                                                                     sat_sajH6
                                                                                                                                                     0#
                                                                                                                                                     GHC.Prim.void#]
                                                                                                                      of
                                                                                                                      { Unit# ds8_sajH9 [Occ=Once] ->
                                                                                                                            case
                                                                                                                                narrow32Int# [ds8_sajH9]
                                                                                                                            of
                                                                                                                            ipv10_sajHa [Dmd=<S,U>]
                                                                                                                            { __DEFAULT ->
                                                                                                                                  let {
                                                                                                                                    sat_sajHb [Occ=Once]
                                                                                                                                      :: Foreign.C.Types.CInt
                                                                                                                                    [LclId] =
                                                                                                                                        CCCS GHC.Int.I32#! [ipv10_sajHa];
                                                                                                                                  } in 
                                                                                                                                    $w$j1_sajG8
                                                                                                                                        GHC.Prim.void#
                                                                                                                                        ipv10_sajHa
                                                                                                                                        sat_sajHb;
                                                                                                                            };
                                                                                                                      };
                                                                                                                };
                                                                                                            GHC.Base.Just tout_sajHd [Occ=Once!] ->
                                                                                                                case
                                                                                                                    tout_sajHd
                                                                                                                of
                                                                                                                { GHC.Event.Internal.Timeout dt6_sajHf [Occ=Once] ->
                                                                                                                      case
                                                                                                                          plusWord# [dt6_sajHf
                                                                                                                                     1000000##]
                                                                                                                      of
                                                                                                                      sat_sajHh
                                                                                                                      { __DEFAULT ->
                                                                                                                            case
                                                                                                                                minusWord# [sat_sajHh
                                                                                                                                            1##]
                                                                                                                            of
                                                                                                                            sat_sajHi
                                                                                                                            { __DEFAULT ->
                                                                                                                                  case
                                                                                                                                      quotWord# [sat_sajHi
                                                                                                                                                 1000000##]
                                                                                                                                  of
                                                                                                                                  sat_sajHj
                                                                                                                                  { __DEFAULT ->
                                                                                                                                        case
                                                                                                                                            word2Int# [sat_sajHj]
                                                                                                                                        of
                                                                                                                                        sat_sajHk
                                                                                                                                        { __DEFAULT ->
                                                                                                                                              case
                                                                                                                                                  int2Word# [dt4_sajG3]
                                                                                                                                              of
                                                                                                                                              sat_sajHg
                                                                                                                                              { __DEFAULT ->
                                                                                                                                                    case
                                                                                                                                                        $wc_pollLoop_rajB9
                                                                                                                                                            ds6_sajG6
                                                                                                                                                            sat_sajHg
                                                                                                                                                            sat_sajHk
                                                                                                                                                            GHC.Prim.void#
                                                                                                                                                    of
                                                                                                                                                    ds7_sajHl
                                                                                                                                                    { Unit# ipv11_sajHn [Occ=Once] ->
                                                                                                                                                          case
                                                                                                                                                              ipv11_sajHn
                                                                                                                                                          of
                                                                                                                                                          { GHC.Int.I32# ww2_sajHp [Occ=Once] ->
                                                                                                                                                                $w$j1_sajG8
                                                                                                                                                                    GHC.Prim.void#
                                                                                                                                                                    ww2_sajHp
                                                                                                                                                                    ipv11_sajHn;
                                                                                                                                                          };
                                                                                                                                                    };
                                                                                                                                              };
                                                                                                                                        };
                                                                                                                                  };
                                                                                                                            };
                                                                                                                      };
                                                                                                                  GHC.Event.Internal.Forever ->
                                                                                                                      case
                                                                                                                          int2Word# [dt4_sajG3]
                                                                                                                      of
                                                                                                                      sat_sajHq
                                                                                                                      { __DEFAULT ->
                                                                                                                            case
                                                                                                                                $wc_pollLoop_rajB9
                                                                                                                                    ds6_sajG6
                                                                                                                                    sat_sajHq
                                                                                                                                    -1#
                                                                                                                                    GHC.Prim.void#
                                                                                                                            of
                                                                                                                            ds7_sajHr
                                                                                                                            { Unit# ipv11_sajHt [Occ=Once] ->
                                                                                                                                  case
                                                                                                                                      ipv11_sajHt
                                                                                                                                  of
                                                                                                                                  { GHC.Int.I32# ww2_sajHv [Occ=Once] ->
                                                                                                                                        $w$j1_sajG8
                                                                                                                                            GHC.Prim.void#
                                                                                                                                            ww2_sajHv
                                                                                                                                            ipv11_sajHt;
                                                                                                                                  };
                                                                                                                            };
                                                                                                                      };
                                                                                                                };
                                                                                                          };
                                                                                                  };
                                                                                            };
                                                                                      };
                                                                                };
                                                                      } in 
                                                                        let-no-escape {
                                                                          $wgo_sajHw [InlPrag=NOUSERINLINE[0],
                                                                                      Occ=LoopBreakerT[2]]
                                                                            :: GHC.Prim.Int#
                                                                               -> GHC.Prim.State#
                                                                                    GHC.Prim.RealWorld
                                                                               -> (# GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld,
                                                                                     GHC.Types.Int #)
                                                                          [LclId[JoinId(2)],
                                                                           Arity=2,
                                                                           Str=<S,U><S,U>,
                                                                           Unf=OtherCon []] =
                                                                              sat-only [dt1_sajFC
                                                                                        fo_sajFR
                                                                                        ary_sajFT
                                                                                        offset_sajFU
                                                                                        exit_sajFV
                                                                                        $wgo_sajHw] \r [ww1_sajHx
                                                                                                        void_0E]
                                                                                  case
                                                                                      >=# [ww1_sajHx
                                                                                           offset_sajFU]
                                                                                  of
                                                                                  { __DEFAULT ->
                                                                                        case
                                                                                            plusAddr# [fo_sajFR
                                                                                                       ww1_sajHx]
                                                                                        of
                                                                                        ptr_sajHA [Dmd=<S,U>]
                                                                                        { __DEFAULT ->
                                                                                              case
                                                                                                  readInt32OffAddr# [ptr_sajHA
                                                                                                                     0#
                                                                                                                     GHC.Prim.void#]
                                                                                              of
                                                                                              { Unit# ipv9_sajHD ->
                                                                                                    case
                                                                                                        plusAddr# [ptr_sajHA
                                                                                                                   4#]
                                                                                                    of
                                                                                                    sat_sajHE
                                                                                                    { __DEFAULT ->
                                                                                                          case
                                                                                                              readInt16OffAddr# [sat_sajHE
                                                                                                                                 0#
                                                                                                                                 GHC.Prim.void#]
                                                                                                          of
                                                                                                          { Unit# ipv11_sajHH [Occ=Once*] ->
                                                                                                                case
                                                                                                                    plusAddr# [ptr_sajHA
                                                                                                                               6#]
                                                                                                                of
                                                                                                                sat_sajHI
                                                                                                                { __DEFAULT ->
                                                                                                                      case
                                                                                                                          readInt16OffAddr# [sat_sajHI
                                                                                                                                             0#
                                                                                                                                             GHC.Prim.void#]
                                                                                                                      of
                                                                                                                      { Unit# ipv13_sajHL [Occ=Once!] ->
                                                                                                                            case
                                                                                                                                ipv13_sajHL
                                                                                                                            of
                                                                                                                            { __DEFAULT ->
                                                                                                                                  let {
                                                                                                                                    sat_sajHT [Occ=Once]
                                                                                                                                      :: GHC.Event.Poll.PollFd
                                                                                                                                         -> GHC.Types.Bool
                                                                                                                                    [LclId] =
                                                                                                                                        [ipv9_sajHD] \r [x_sajHN]
                                                                                                                                            case
                                                                                                                                                x_sajHN
                                                                                                                                            of
                                                                                                                                            { GHC.Event.Poll.PollFd dt4_sajHP [Occ=Once]
                                                                                                                                                                    _ [Occ=Dead]
                                                                                                                                                                    _ [Occ=Dead] ->
                                                                                                                                                  case
                                                                                                                                                      ==# [dt4_sajHP
                                                                                                                                                           ipv9_sajHD]
                                                                                                                                                  of
                                                                                                                                                  sat_sajHS
                                                                                                                                                  { __DEFAULT ->
                                                                                                                                                        tagToEnum# [sat_sajHS];
                                                                                                                                                  };
                                                                                                                                            };
                                                                                                                                  } in 
                                                                                                                                    case
                                                                                                                                        lvl11_rajBk
                                                                                                                                            sat_sajHT
                                                                                                                                            ary_sajFT
                                                                                                                                            GHC.Prim.void#
                                                                                                                                    of
                                                                                                                                    { Unit# ipv15_sajHW [Occ=Once!] ->
                                                                                                                                          case
                                                                                                                                              ipv15_sajHW
                                                                                                                                          of
                                                                                                                                          { GHC.Base.Nothing ->
                                                                                                                                                lvl5_rajBe;
                                                                                                                                            GHC.Base.Just ds9_sajHZ [Occ=Once!] ->
                                                                                                                                                case
                                                                                                                                                    ds9_sajHZ
                                                                                                                                                of
                                                                                                                                                { (,) i_sajI1 [Occ=Once*]
                                                                                                                                                      _ [Occ=Dead] ->
                                                                                                                                                      case
                                                                                                                                                          ipv11_sajHH
                                                                                                                                                      of
                                                                                                                                                      wild7_sajI3
                                                                                                                                                      { __DEFAULT ->
                                                                                                                                                            case
                                                                                                                                                                readMutVar# [dt1_sajFC
                                                                                                                                                                             GHC.Prim.void#]
                                                                                                                                                            of
                                                                                                                                                            { Unit# ipv17_sajI6 [Occ=Once!] ->
                                                                                                                                                                  case
                                                                                                                                                                      ipv17_sajI6
                                                                                                                                                                  of
                                                                                                                                                                  { GHC.Event.Array.AC ww3_sajI8 [Occ=Once!]
                                                                                                                                                                                       _ [Occ=Dead]
                                                                                                                                                                                       ww5_sajIa ->
                                                                                                                                                                        case
                                                                                                                                                                            ww3_sajI8
                                                                                                                                                                        of
                                                                                                                                                                        { GHC.ForeignPtr.ForeignPtr ww7_sajIc [Occ=Once]
                                                                                                                                                                                                    ww8_sajId [Occ=Once] ->
                                                                                                                                                                              case
                                                                                                                                                                                  i_sajI1
                                                                                                                                                                              of
                                                                                                                                                                              { GHC.Types.I# ww10_sajIf ->
                                                                                                                                                                                    case
                                                                                                                                                                                        <# [ww10_sajIf
                                                                                                                                                                                            0#]
                                                                                                                                                                                    of
                                                                                                                                                                                    { __DEFAULT ->
                                                                                                                                                                                          case
                                                                                                                                                                                              >=# [ww10_sajIf
                                                                                                                                                                                                   ww5_sajIa]
                                                                                                                                                                                          of
                                                                                                                                                                                          { __DEFAULT ->
                                                                                                                                                                                                case
                                                                                                                                                                                                    *# [ww10_sajIf
                                                                                                                                                                                                        8#]
                                                                                                                                                                                                of
                                                                                                                                                                                                sat_sajIj
                                                                                                                                                                                                { __DEFAULT ->
                                                                                                                                                                                                      case
                                                                                                                                                                                                          plusAddr# [ww7_sajIc
                                                                                                                                                                                                                     sat_sajIj]
                                                                                                                                                                                                      of
                                                                                                                                                                                                      addr_sajIi [Dmd=<S,U>]
                                                                                                                                                                                                      { __DEFAULT ->
                                                                                                                                                                                                            case
                                                                                                                                                                                                                writeInt32OffAddr# [addr_sajIi
                                                                                                                                                                                                                                    0#
                                                                                                                                                                                                                                    ipv9_sajHD
                                                                                                                                                                                                                                    GHC.Prim.void#]
                                                                                                                                                                                                            of
                                                                                                                                                                                                            s2_sajIk
                                                                                                                                                                                                            { (##) ->
                                                                                                                                                                                                                  case
                                                                                                                                                                                                                      plusAddr# [addr_sajIi
                                                                                                                                                                                                                                 4#]
                                                                                                                                                                                                                  of
                                                                                                                                                                                                                  sat_sajIl
                                                                                                                                                                                                                  { __DEFAULT ->
                                                                                                                                                                                                                        case
                                                                                                                                                                                                                            writeInt16OffAddr# [sat_sajIl
                                                                                                                                                                                                                                                0#
                                                                                                                                                                                                                                                wild7_sajI3
                                                                                                                                                                                                                                                GHC.Prim.void#]
                                                                                                                                                                                                                        of
                                                                                                                                                                                                                        s1_sajIm
                                                                                                                                                                                                                        { (##) ->
                                                                                                                                                                                                                              case
                                                                                                                                                                                                                                  plusAddr# [addr_sajIi
                                                                                                                                                                                                                                             6#]
                                                                                                                                                                                                                              of
                                                                                                                                                                                                                              sat_sajIn
                                                                                                                                                                                                                              { __DEFAULT ->
                                                                                                                                                                                                                                    case
                                                                                                                                                                                                                                        writeInt16OffAddr# [sat_sajIn
                                                                                                                                                                                                                                                            0#
                                                                                                                                                                                                                                                            0#
                                                                                                                                                                                                                                                            GHC.Prim.void#]
                                                                                                                                                                                                                                    of
                                                                                                                                                                                                                                    s3_sajIo
                                                                                                                                                                                                                                    { (##) ->
                                                                                                                                                                                                                                          case
                                                                                                                                                                                                                                              touch# [ww8_sajId
                                                                                                                                                                                                                                                      GHC.Prim.void#]
                                                                                                                                                                                                                                          of
                                                                                                                                                                                                                                          s'_sajIp
                                                                                                                                                                                                                                          { (##) ->
                                                                                                                                                                                                                                                case
                                                                                                                                                                                                                                                    +# [ww1_sajHx
                                                                                                                                                                                                                                                        8#]
                                                                                                                                                                                                                                                of
                                                                                                                                                                                                                                                sat_sajIq
                                                                                                                                                                                                                                                { __DEFAULT ->
                                                                                                                                                                                                                                                      $wgo_sajHw
                                                                                                                                                                                                                                                          sat_sajIq
                                                                                                                                                                                                                                                          GHC.Prim.void#;
                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                          };
                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                              };
                                                                                                                                                                                                                        };
                                                                                                                                                                                                                  };
                                                                                                                                                                                                            };
                                                                                                                                                                                                      };
                                                                                                                                                                                                };
                                                                                                                                                                                            1# ->
                                                                                                                                                                                                GHC.Event.Array.$wlvl
                                                                                                                                                                                                    ww5_sajIa
                                                                                                                                                                                                    ww10_sajIf;
                                                                                                                                                                                          };
                                                                                                                                                                                      1# ->
                                                                                                                                                                                          GHC.Event.Array.$wlvl
                                                                                                                                                                                              ww5_sajIa
                                                                                                                                                                                              ww10_sajIf;
                                                                                                                                                                                    };
                                                                                                                                                                              };
                                                                                                                                                                        };
                                                                                                                                                                  };
                                                                                                                                                            };
                                                                                                                                                        0# ->
                                                                                                                                                            case
                                                                                                                                                                lvl10_rajBj
                                                                                                                                                                    ary_sajFT
                                                                                                                                                                    i_sajI1
                                                                                                                                                                    GHC.Prim.void#
                                                                                                                                                            of
                                                                                                                                                            { Unit# _ [Occ=Dead] ->
                                                                                                                                                                  case
                                                                                                                                                                      +# [ww1_sajHx
                                                                                                                                                                          8#]
                                                                                                                                                                  of
                                                                                                                                                                  sat_sajIw
                                                                                                                                                                  { __DEFAULT ->
                                                                                                                                                                        $wgo_sajHw
                                                                                                                                                                            sat_sajIw
                                                                                                                                                                            GHC.Prim.void#;
                                                                                                                                                                  };
                                                                                                                                                            };
                                                                                                                                                      };
                                                                                                                                                };
                                                                                                                                          };
                                                                                                                                    };
                                                                                                                              0# ->
                                                                                                                                  let {
                                                                                                                                    sat_sajIx [Occ=Once]
                                                                                                                                      :: GHC.Event.Poll.PollFd
                                                                                                                                    [LclId] =
                                                                                                                                        CCCS GHC.Event.Poll.PollFd! [ipv9_sajHD
                                                                                                                                                                     ipv11_sajHH
                                                                                                                                                                     0#];
                                                                                                                                  } in 
                                                                                                                                    case
                                                                                                                                        GHC.Event.Array.$wsnoc
                                                                                                                                            GHC.Event.Poll.$fStorablePollFd
                                                                                                                                            dt1_sajFC
                                                                                                                                            sat_sajIx
                                                                                                                                            GHC.Prim.void#
                                                                                                                                    of
                                                                                                                                    { Unit# _ [Occ=Dead] ->
                                                                                                                                          case
                                                                                                                                              +# [ww1_sajHx
                                                                                                                                                  8#]
                                                                                                                                          of
                                                                                                                                          sat_sajIB
                                                                                                                                          { __DEFAULT ->
                                                                                                                                                $wgo_sajHw
                                                                                                                                                    sat_sajIB
                                                                                                                                                    GHC.Prim.void#;
                                                                                                                                          };
                                                                                                                                    };
                                                                                                                            };
                                                                                                                      };
                                                                                                                };
                                                                                                          };
                                                                                                    };
                                                                                              };
                                                                                        };
                                                                                    1# ->
                                                                                        exit_sajFV
                                                                                            GHC.Prim.void#;
                                                                                  };
                                                                        } in 
                                                                          $wgo_sajHw
                                                                              0# GHC.Prim.void#;
                                                                };
                                                        };
                                                  };
                                            };
                                  } in 
                                    case ipv5_sajFF of {
                                      __DEFAULT ->
                                          case takeMVar# [dt_sajFB GHC.Prim.void#] of {
                                            Unit# ipv7_sajIF [Occ=Once] ->
                                                let {
                                                  sat_sajIG [Occ=Once]
                                                    :: GHC.Event.Array.Array GHC.Event.Poll.PollFd
                                                  [LclId] =
                                                      CCCS GHC.STRef.STRef! [ipv3_sajFz];
                                                } in 
                                                  case
                                                      putMVar# [dt_sajFB sat_sajIG GHC.Prim.void#]
                                                  of
                                                  s2#_sajIH
                                                  { (##) ->
                                                        case ipv7_sajIF of {
                                                          GHC.STRef.STRef ww1_sajIJ [Occ=Once] ->
                                                              $w$j_sajFG GHC.Prim.void# ww1_sajIJ;
                                                        };
                                                  };
                                          };
                                      0# ->
                                          let {
                                            sat_sajIQ [Occ=Once]
                                              :: GHC.Prim.State# GHC.Prim.RealWorld
                                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                       GHC.Event.Array.Array
                                                         GHC.Event.Poll.PollFd #)
                                            [LclId] =
                                                [ipv3_sajFz dt_sajFB] \r [void_0E]
                                                    case takeMVar# [dt_sajFB GHC.Prim.void#] of {
                                                      Unit# ipv7_sajIN [Occ=Once] ->
                                                          let {
                                                            sat_sajIO [Occ=Once]
                                                              :: GHC.Event.Array.Array
                                                                   GHC.Event.Poll.PollFd
                                                            [LclId] =
                                                                CCCS GHC.STRef.STRef! [ipv3_sajFz];
                                                          } in 
                                                            case
                                                                putMVar# [dt_sajFB
                                                                          sat_sajIO
                                                                          GHC.Prim.void#]
                                                            of
                                                            s2#_sajIP
                                                            { (##) -> Unit# [ipv7_sajIN];
                                                            };
                                                    };
                                          } in 
                                            case
                                                maskAsyncExceptions# [sat_sajIQ GHC.Prim.void#]
                                            of
                                            { Unit# ipv7_sajIT [Occ=Once] ->
                                                  case ipv7_sajIT of {
                                                    GHC.STRef.STRef ww1_sajIV [Occ=Once] ->
                                                        $w$j_sajFG GHC.Prim.void# ww1_sajIV;
                                                  };
                                            };
                                    };
                            };
                      };
                };
        };

GHC.Event.Poll.new4
  :: GHC.Event.Poll.Poll
     -> System.Posix.Types.Fd
     -> GHC.Event.Internal.Event
     -> GHC.Event.Internal.Event
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
[GblId,
 Arity=5,
 Str=<S(SL),1*U(U,A)><L,1*U(U)><L,1*U(U)><L,1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [p_sajIW fd_sajIX oevt_sajIY nevt_sajIZ void_0E]
        case p_sajIW of {
          GHC.Event.Poll.Poll dt_sajJ2 [Occ=Once] _ [Occ=Dead] ->
              let {
                sat_sajJD [Occ=Once]
                  :: GHC.Event.Array.Array GHC.Event.Poll.PollFd
                     -> GHC.Types.IO GHC.Types.Bool
                [LclId] =
                    [fd_sajIX oevt_sajIY nevt_sajIZ] \r [ary_sajJ4 void_0E]
                        case ary_sajJ4 of {
                          GHC.STRef.STRef ww1_sajJ7 [Occ=Once] ->
                              let {
                                sat_sajJz [Occ=Once] :: GHC.Event.Poll.PollFd
                                [LclId] =
                                    [fd_sajIX oevt_sajIY nevt_sajIZ] \u []
                                        case fd_sajIX of {
                                          GHC.Int.I32# dt3_sajJ9 [Occ=Once*] ->
                                              case nevt_sajIZ of {
                                                GHC.Types.I# x#_sajJb ->
                                                    case andI# [x#_sajJb 1#] of {
                                                      __DEFAULT ->
                                                          case andI# [x#_sajJb 2#] of {
                                                            __DEFAULT ->
                                                                case oevt_sajIY of {
                                                                  GHC.Types.I# x#1_sajJf ->
                                                                      case andI# [x#1_sajJf 1#] of {
                                                                        __DEFAULT ->
                                                                            case
                                                                                andI# [x#1_sajJf 2#]
                                                                            of
                                                                            { __DEFAULT ->
                                                                                  GHC.Event.Poll.PollFd [dt3_sajJ9
                                                                                                         5#
                                                                                                         5#];
                                                                              0# ->
                                                                                  GHC.Event.Poll.PollFd [dt3_sajJ9
                                                                                                         5#
                                                                                                         1#];
                                                                            };
                                                                        0# ->
                                                                            case
                                                                                andI# [x#1_sajJf 2#]
                                                                            of
                                                                            { __DEFAULT ->
                                                                                  GHC.Event.Poll.PollFd [dt3_sajJ9
                                                                                                         5#
                                                                                                         4#];
                                                                              0# ->
                                                                                  GHC.Event.Poll.PollFd [dt3_sajJ9
                                                                                                         5#
                                                                                                         0#];
                                                                            };
                                                                      };
                                                                };
                                                            0# ->
                                                                case oevt_sajIY of {
                                                                  GHC.Types.I# x#1_sajJk ->
                                                                      case andI# [x#1_sajJk 1#] of {
                                                                        __DEFAULT ->
                                                                            case
                                                                                andI# [x#1_sajJk 2#]
                                                                            of
                                                                            { __DEFAULT ->
                                                                                  GHC.Event.Poll.PollFd [dt3_sajJ9
                                                                                                         1#
                                                                                                         5#];
                                                                              0# ->
                                                                                  GHC.Event.Poll.PollFd [dt3_sajJ9
                                                                                                         1#
                                                                                                         1#];
                                                                            };
                                                                        0# ->
                                                                            case
                                                                                andI# [x#1_sajJk 2#]
                                                                            of
                                                                            { __DEFAULT ->
                                                                                  GHC.Event.Poll.PollFd [dt3_sajJ9
                                                                                                         1#
                                                                                                         4#];
                                                                              0# ->
                                                                                  GHC.Event.Poll.PollFd [dt3_sajJ9
                                                                                                         1#
                                                                                                         0#];
                                                                            };
                                                                      };
                                                                };
                                                          };
                                                      0# ->
                                                          case andI# [x#_sajJb 2#] of {
                                                            __DEFAULT ->
                                                                case oevt_sajIY of {
                                                                  GHC.Types.I# x#1_sajJq ->
                                                                      case andI# [x#1_sajJq 1#] of {
                                                                        __DEFAULT ->
                                                                            case
                                                                                andI# [x#1_sajJq 2#]
                                                                            of
                                                                            { __DEFAULT ->
                                                                                  GHC.Event.Poll.PollFd [dt3_sajJ9
                                                                                                         4#
                                                                                                         5#];
                                                                              0# ->
                                                                                  GHC.Event.Poll.PollFd [dt3_sajJ9
                                                                                                         4#
                                                                                                         1#];
                                                                            };
                                                                        0# ->
                                                                            case
                                                                                andI# [x#1_sajJq 2#]
                                                                            of
                                                                            { __DEFAULT ->
                                                                                  GHC.Event.Poll.PollFd [dt3_sajJ9
                                                                                                         4#
                                                                                                         4#];
                                                                              0# ->
                                                                                  GHC.Event.Poll.PollFd [dt3_sajJ9
                                                                                                         4#
                                                                                                         0#];
                                                                            };
                                                                      };
                                                                };
                                                            0# ->
                                                                case oevt_sajIY of {
                                                                  GHC.Types.I# x#1_sajJv ->
                                                                      case andI# [x#1_sajJv 1#] of {
                                                                        __DEFAULT ->
                                                                            case
                                                                                andI# [x#1_sajJv 2#]
                                                                            of
                                                                            { __DEFAULT ->
                                                                                  GHC.Event.Poll.PollFd [dt3_sajJ9
                                                                                                         0#
                                                                                                         5#];
                                                                              0# ->
                                                                                  GHC.Event.Poll.PollFd [dt3_sajJ9
                                                                                                         0#
                                                                                                         1#];
                                                                            };
                                                                        0# ->
                                                                            case
                                                                                andI# [x#1_sajJv 2#]
                                                                            of
                                                                            { __DEFAULT ->
                                                                                  GHC.Event.Poll.PollFd [dt3_sajJ9
                                                                                                         0#
                                                                                                         4#];
                                                                              0# ->
                                                                                  GHC.Event.Poll.PollFd [dt3_sajJ9
                                                                                                         0#
                                                                                                         0#];
                                                                            };
                                                                      };
                                                                };
                                                          };
                                                    };
                                              };
                                        };
                              } in 
                                case
                                    GHC.Event.Array.$wsnoc
                                        GHC.Event.Poll.$fStorablePollFd
                                        ww1_sajJ7
                                        sat_sajJz
                                        GHC.Prim.void#
                                of
                                { Unit# _ [Occ=Dead] -> Unit# [GHC.Types.True];
                                };
                        };
              } in  GHC.Conc.Sync.$wwithMVar dt_sajJ2 sat_sajJD GHC.Prim.void#;
        };

GHC.Event.Poll.new2
  :: GHC.Event.Poll.Poll
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=2, Caf=NoCafRefs, Str=<L,A><S,U>, Unf=OtherCon []] =
    [] \r [ds_sajJE void_0E] Unit# [GHC.Tuple.()];

GHC.Event.Poll.new1
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Event.Internal.Backend #)
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [void_0E]
        case newMutVar# [GHC.ForeignPtr.NoFinalizers GHC.Prim.void#] of {
          Unit# ipv1_sajJJ [Occ=Once] ->
              let {
                sat_sajJK [Occ=Once] :: GHC.ForeignPtr.ForeignPtrContents
                [LclId] =
                    CCCS GHC.ForeignPtr.PlainForeignPtr! [ipv1_sajJJ]; } in
              let {
                sat_sajJL [Occ=Once]
                  :: GHC.ForeignPtr.ForeignPtr GHC.Event.Poll.PollFd
                [LclId] =
                    CCCS GHC.ForeignPtr.ForeignPtr! [__NULL sat_sajJK]; } in
              let {
                sat_sajJM [Occ=Once] :: GHC.Event.Array.AC GHC.Event.Poll.PollFd
                [LclId] =
                    CCCS GHC.Event.Array.AC! [sat_sajJL 0# 0#];
              } in 
                case newMutVar# [sat_sajJM GHC.Prim.void#] of {
                  Unit# ipv3_sajJP [Occ=Once] ->
                      case newMVar# [GHC.Prim.void#] of {
                        Unit# ipv5_sajJS ->
                            let {
                              sat_sajJT [Occ=Once] :: GHC.Event.Array.Array GHC.Event.Poll.PollFd
                              [LclId] =
                                  CCCS GHC.STRef.STRef! [ipv3_sajJP];
                            } in 
                              case putMVar# [ipv5_sajJS sat_sajJT GHC.Prim.void#] of s2#_sajJU {
                                (##) ->
                                    case
                                        newMutVar# [GHC.ForeignPtr.NoFinalizers GHC.Prim.void#]
                                    of
                                    { Unit# ipv7_sajJX [Occ=Once] ->
                                          let {
                                            sat_sajJY [Occ=Once]
                                              :: GHC.ForeignPtr.ForeignPtrContents
                                            [LclId] =
                                                CCCS GHC.ForeignPtr.PlainForeignPtr! [ipv7_sajJX]; } in
                                          let {
                                            sat_sajJZ [Occ=Once]
                                              :: GHC.ForeignPtr.ForeignPtr GHC.Event.Poll.PollFd
                                            [LclId] =
                                                CCCS GHC.ForeignPtr.ForeignPtr! [__NULL
                                                                                 sat_sajJY]; } in
                                          let {
                                            sat_sajK0 [Occ=Once]
                                              :: GHC.Event.Array.AC GHC.Event.Poll.PollFd
                                            [LclId] =
                                                CCCS GHC.Event.Array.AC! [sat_sajJZ 0# 0#];
                                          } in 
                                            case newMutVar# [sat_sajK0 GHC.Prim.void#] of {
                                              Unit# ipv9_sajK3 [Occ=Once] ->
                                                  let {
                                                    sat_sajK4 [Occ=Once] :: GHC.Event.Poll.Poll
                                                    [LclId] =
                                                        CCCS GHC.Event.Poll.Poll! [ipv5_sajJS
                                                                                   ipv9_sajK3]; } in
                                                  let {
                                                    sat_sajK5 [Occ=Once]
                                                      :: GHC.Event.Internal.Backend
                                                    [LclId] =
                                                        CCCS GHC.Event.Internal.Backend! [sat_sajK4
                                                                                          GHC.Event.Poll.new5
                                                                                          GHC.Event.Poll.new4
                                                                                          GHC.Event.Poll.new3
                                                                                          GHC.Event.Poll.new2];
                                                  } in  Unit# [sat_sajK5];
                                            };
                                    };
                              };
                      };
                };
        };

GHC.Event.Poll.new :: GHC.Types.IO GHC.Event.Internal.Backend
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [void_0E] GHC.Event.Poll.new1 GHC.Prim.void#;

GHC.Event.Poll.PollFd
  :: GHC.Prim.Int#
     -> GHC.Prim.Int# -> GHC.Prim.Int# -> GHC.Event.Poll.PollFd
[GblId[DataCon],
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,U><L,U><L,U>m,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.Event.Poll.PollFd [eta_B3 eta_B2 eta_B1];

GHC.Event.Poll.Poll
  :: GHC.Prim.MVar#
       GHC.Prim.RealWorld (GHC.Event.Array.Array GHC.Event.Poll.PollFd)
     -> GHC.Prim.MutVar#
          GHC.Prim.RealWorld (GHC.Event.Array.AC GHC.Event.Poll.PollFd)
     -> GHC.Event.Poll.Poll
[GblId[DataCon],
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U><L,U>m,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] GHC.Event.Poll.Poll [eta_B2 eta_B1];


==================== Pre unarise: ====================
2018-03-16 16:05:21.925463711 UTC

GHC.Event.Poll.$WPollFd [InlPrag=INLINE[2]]
  :: System.Posix.Types.Fd
     -> GHC.Event.Poll.Event
     -> GHC.Event.Poll.Event
     -> GHC.Event.Poll.PollFd
[GblId[DataConWrapper],
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,U><S,U><S,U>m,
 Unf=OtherCon []] =
    [] \r [dt_sals6 dt_sals7 dt_sals8]
        case dt_sals6 of {
          GHC.Int.I32# dt_salsa [Occ=Once] ->
              case dt_sals7 of {
                GHC.Int.I16# dt_salsc [Occ=Once] ->
                    case dt_sals8 of {
                      GHC.Int.I16# dt_salse [Occ=Once] ->
                          GHC.Event.Poll.PollFd [dt_salsa dt_salsc dt_salse];
                    };
              };
        };

GHC.Event.Poll.$WPoll [InlPrag=INLINE[2]]
  :: GHC.MVar.MVar (GHC.Event.Array.Array GHC.Event.Poll.PollFd)
     -> GHC.Event.Array.Array GHC.Event.Poll.PollFd
     -> GHC.Event.Poll.Poll
[GblId[DataConWrapper],
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,U><S,U>m,
 Unf=OtherCon []] =
    [] \r [dt_salsf dt_salsg]
        case dt_salsf of {
          GHC.MVar.MVar dt_salsi [Occ=Once] ->
              case dt_salsg of {
                GHC.STRef.STRef dt_salsk [Occ=Once] ->
                    GHC.Event.Poll.Poll [dt_salsi dt_salsk];
              };
        };

GHC.Event.Poll.$fStorablePollFd_$calignment
  :: GHC.Event.Poll.PollFd -> GHC.Types.Int
[GblId, Arity=1, Caf=NoCafRefs, Str=<L,A>m, Unf=OtherCon []] =
    [] \r [ds_salsl] Foreign.Storable.$fStorableBool7;

GHC.Event.Poll.$fStorablePollFd7 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [8#];

GHC.Event.Poll.$fStorablePollFd_$csizeOf
  :: GHC.Event.Poll.PollFd -> GHC.Types.Int
[GblId, Arity=1, Caf=NoCafRefs, Str=<L,A>m, Unf=OtherCon []] =
    [] \r [ds_salsm] GHC.Event.Poll.$fStorablePollFd7;

GHC.Event.Poll.$fStorablePollFd2
  :: GHC.Ptr.Ptr GHC.Event.Poll.PollFd
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Event.Poll.PollFd #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ptr_salsn s_salso]
        case ptr_salsn of {
          GHC.Ptr.Ptr addr_salsq ->
              case readInt32OffAddr# [addr_salsq 0# s_salso] of {
                (#,#) ipv_salss [Occ=Once] ipv1_salst [Occ=Once] ->
                    case plusAddr# [addr_salsq 4#] of sat_salsu {
                      __DEFAULT ->
                          case readInt16OffAddr# [sat_salsu 0# ipv_salss] of {
                            (#,#) ipv2_salsw [Occ=Once] ipv3_salsx [Occ=Once] ->
                                case plusAddr# [addr_salsq 6#] of sat_salsy {
                                  __DEFAULT ->
                                      case readInt16OffAddr# [sat_salsy 0# ipv2_salsw] of {
                                        (#,#) ipv4_salsA [Occ=Once] ipv5_salsB [Occ=Once] ->
                                            let {
                                              sat_salsC [Occ=Once] :: GHC.Event.Poll.PollFd
                                              [LclId] =
                                                  CCCS GHC.Event.Poll.PollFd! [ipv1_salst
                                                                               ipv3_salsx
                                                                               ipv5_salsB];
                                            } in  (#,#) [ipv4_salsA sat_salsC];
                                      };
                                };
                          };
                    };
              };
        };

GHC.Event.Poll.$fStorablePollFd6
  :: GHC.Ptr.Ptr GHC.Event.Poll.PollFd
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Event.Poll.PollFd #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ptr_salsD off_salsE eta_salsF]
        case ptr_salsD of {
          GHC.Ptr.Ptr addr_salsH [Occ=Once] ->
              case off_salsE of {
                GHC.Types.I# x_salsJ [Occ=Once] ->
                    case *# [x_salsJ 8#] of sat_salsL {
                      __DEFAULT ->
                          case plusAddr# [addr_salsH sat_salsL] of addr1_salsK [Dmd=<S,U>] {
                            __DEFAULT ->
                                case readInt32OffAddr# [addr1_salsK 0# eta_salsF] of {
                                  (#,#) ipv_salsN [Occ=Once] ipv1_salsO [Occ=Once] ->
                                      case plusAddr# [addr1_salsK 4#] of sat_salsP {
                                        __DEFAULT ->
                                            case readInt16OffAddr# [sat_salsP 0# ipv_salsN] of {
                                              (#,#) ipv2_salsR [Occ=Once] ipv3_salsS [Occ=Once] ->
                                                  case plusAddr# [addr1_salsK 6#] of sat_salsT {
                                                    __DEFAULT ->
                                                        case
                                                            readInt16OffAddr# [sat_salsT
                                                                               0#
                                                                               ipv2_salsR]
                                                        of
                                                        { (#,#) ipv4_salsV [Occ=Once]
                                                                ipv5_salsW [Occ=Once] ->
                                                              let {
                                                                sat_salsX [Occ=Once]
                                                                  :: GHC.Event.Poll.PollFd
                                                                [LclId] =
                                                                    CCCS GHC.Event.Poll.PollFd! [ipv1_salsO
                                                                                                 ipv3_salsS
                                                                                                 ipv5_salsW];
                                                              } in  (#,#) [ipv4_salsV sat_salsX];
                                                        };
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.Event.Poll.$fStorablePollFd4
  :: forall b.
     GHC.Ptr.Ptr b
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Event.Poll.PollFd #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ptr_salsY off_salsZ eta_salt0]
        case ptr_salsY of {
          GHC.Ptr.Ptr addr_salt2 [Occ=Once] ->
              case off_salsZ of {
                GHC.Types.I# d_salt4 [Occ=Once] ->
                    case plusAddr# [addr_salt2 d_salt4] of addr1_salt5 [Dmd=<S,U>] {
                      __DEFAULT ->
                          case readInt32OffAddr# [addr1_salt5 0# eta_salt0] of {
                            (#,#) ipv_salt7 [Occ=Once] ipv1_salt8 [Occ=Once] ->
                                case plusAddr# [addr1_salt5 4#] of sat_salt9 {
                                  __DEFAULT ->
                                      case readInt16OffAddr# [sat_salt9 0# ipv_salt7] of {
                                        (#,#) ipv2_saltb [Occ=Once] ipv3_saltc [Occ=Once] ->
                                            case plusAddr# [addr1_salt5 6#] of sat_saltd {
                                              __DEFAULT ->
                                                  case
                                                      readInt16OffAddr# [sat_saltd 0# ipv2_saltb]
                                                  of
                                                  { (#,#) ipv4_saltf [Occ=Once]
                                                          ipv5_saltg [Occ=Once] ->
                                                        let {
                                                          sat_salth [Occ=Once]
                                                            :: GHC.Event.Poll.PollFd
                                                          [LclId] =
                                                              CCCS GHC.Event.Poll.PollFd! [ipv1_salt8
                                                                                           ipv3_saltc
                                                                                           ipv5_saltg];
                                                        } in  (#,#) [ipv4_saltf sat_salth];
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.Event.Poll.$fStorablePollFd1
  :: GHC.Ptr.Ptr GHC.Event.Poll.PollFd
     -> GHC.Event.Poll.PollFd
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(SSS),1*U(U,U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ptr_salti p_saltj s_saltk]
        case ptr_salti of {
          GHC.Ptr.Ptr addr_saltm ->
              case p_saltj of {
                GHC.Event.Poll.PollFd dt_salto [Occ=Once]
                                      dt1_saltp [Occ=Once]
                                      dt2_saltq [Occ=Once] ->
                    case
                        writeInt32OffAddr# [addr_saltm 0# dt_salto s_saltk]
                    of
                    s2_saltr
                    { __DEFAULT ->
                          case plusAddr# [addr_saltm 4#] of sat_salts {
                            __DEFAULT ->
                                case
                                    writeInt16OffAddr# [sat_salts 0# dt1_saltp s2_saltr]
                                of
                                s1_saltt
                                { __DEFAULT ->
                                      case plusAddr# [addr_saltm 6#] of sat_saltu {
                                        __DEFAULT ->
                                            case
                                                writeInt16OffAddr# [sat_saltu 0# dt2_saltq s1_saltt]
                                            of
                                            s3_saltv
                                            { __DEFAULT -> (#,#) [s3_saltv GHC.Tuple.()];
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.Event.Poll.$fStorablePollFd5
  :: GHC.Ptr.Ptr GHC.Event.Poll.PollFd
     -> GHC.Types.Int
     -> GHC.Event.Poll.PollFd
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(SSS),1*U(U,U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ptr_saltw off_saltx val_salty eta_saltz]
        case ptr_saltw of {
          GHC.Ptr.Ptr addr_saltB [Occ=Once] ->
              case off_saltx of {
                GHC.Types.I# x_saltD [Occ=Once] ->
                    case val_salty of {
                      GHC.Event.Poll.PollFd dt_saltF [Occ=Once]
                                            dt1_saltG [Occ=Once]
                                            dt2_saltH [Occ=Once] ->
                          case *# [x_saltD 8#] of sat_saltJ {
                            __DEFAULT ->
                                case plusAddr# [addr_saltB sat_saltJ] of addr1_saltI [Dmd=<S,U>] {
                                  __DEFAULT ->
                                      case
                                          writeInt32OffAddr# [addr1_saltI 0# dt_saltF eta_saltz]
                                      of
                                      s2_saltK
                                      { __DEFAULT ->
                                            case plusAddr# [addr1_saltI 4#] of sat_saltL {
                                              __DEFAULT ->
                                                  case
                                                      writeInt16OffAddr# [sat_saltL
                                                                          0#
                                                                          dt1_saltG
                                                                          s2_saltK]
                                                  of
                                                  s1_saltM
                                                  { __DEFAULT ->
                                                        case
                                                            plusAddr# [addr1_saltI 6#]
                                                        of
                                                        sat_saltN
                                                        { __DEFAULT ->
                                                              case
                                                                  writeInt16OffAddr# [sat_saltN
                                                                                      0#
                                                                                      dt2_saltH
                                                                                      s1_saltM]
                                                              of
                                                              s3_saltO
                                                              { __DEFAULT ->
                                                                    (#,#) [s3_saltO GHC.Tuple.()];
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.Event.Poll.$fStorablePollFd3
  :: forall b.
     GHC.Ptr.Ptr b
     -> GHC.Types.Int
     -> GHC.Event.Poll.PollFd
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(SSS),1*U(U,U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ptr_saltP off_saltQ eta_saltR eta1_saltS]
        case ptr_saltP of {
          GHC.Ptr.Ptr addr_saltU [Occ=Once] ->
              case off_saltQ of {
                GHC.Types.I# d_saltW [Occ=Once] ->
                    case eta_saltR of {
                      GHC.Event.Poll.PollFd dt_saltY [Occ=Once]
                                            dt1_saltZ [Occ=Once]
                                            dt2_salu0 [Occ=Once] ->
                          case plusAddr# [addr_saltU d_saltW] of addr1_salu1 [Dmd=<S,U>] {
                            __DEFAULT ->
                                case
                                    writeInt32OffAddr# [addr1_salu1 0# dt_saltY eta1_saltS]
                                of
                                s2_salu2
                                { __DEFAULT ->
                                      case plusAddr# [addr1_salu1 4#] of sat_salu3 {
                                        __DEFAULT ->
                                            case
                                                writeInt16OffAddr# [sat_salu3 0# dt1_saltZ s2_salu2]
                                            of
                                            s1_salu4
                                            { __DEFAULT ->
                                                  case plusAddr# [addr1_salu1 6#] of sat_salu5 {
                                                    __DEFAULT ->
                                                        case
                                                            writeInt16OffAddr# [sat_salu5
                                                                                0#
                                                                                dt2_salu0
                                                                                s1_salu4]
                                                        of
                                                        s3_salu6
                                                        { __DEFAULT ->
                                                              (#,#) [s3_salu6 GHC.Tuple.()];
                                                        };
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.Event.Poll.$fStorablePollFd [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable GHC.Event.Poll.PollFd
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [GHC.Event.Poll.$fStorablePollFd_$csizeOf
                                                GHC.Event.Poll.$fStorablePollFd_$calignment
                                                GHC.Event.Poll.$fStorablePollFd6
                                                GHC.Event.Poll.$fStorablePollFd5
                                                GHC.Event.Poll.$fStorablePollFd4
                                                GHC.Event.Poll.$fStorablePollFd3
                                                GHC.Event.Poll.$fStorablePollFd2
                                                GHC.Event.Poll.$fStorablePollFd1];

GHC.Event.Poll.$fStorableEvent [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable GHC.Event.Poll.Event
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableInt16_$calignment
                                                Foreign.Storable.$fStorableInt16_$calignment
                                                GHC.Storable.readInt16OffPtr1
                                                GHC.Storable.writeInt16OffPtr1
                                                Foreign.Storable.$fStorableInt9
                                                Foreign.Storable.$fStorableInt7
                                                Foreign.Storable.$fStorableInt6
                                                Foreign.Storable.$fStorableInt5];

GHC.Event.Poll.$fShowEvent2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Event "#;

GHC.Event.Poll.$w$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Event.Poll.Event -> GHC.Base.String -> GHC.Base.String
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,U><L,1*U(U)><L,U>,
 Unf=OtherCon []] =
    [] \r [ww_salu7 w_salu8 w1_salu9]
        case >=# [ww_salu7 11#] of {
          __DEFAULT ->
              let {
                sat_salug [Occ=Once] :: [GHC.Types.Char]
                [LclId] =
                    [w_salu8 w1_salu9] \u []
                        case w_salu8 of {
                          GHC.Int.I16# x#_saluc [Occ=Once] ->
                              case GHC.Show.$wshowSignedInt 11# x#_saluc w1_salu9 of {
                                (#,#) ww5_salue [Occ=Once] ww6_saluf [Occ=Once] ->
                                    : [ww5_salue ww6_saluf];
                              };
                        };
              } in 
                GHC.CString.unpackAppendCString#
                    GHC.Event.Poll.$fShowEvent2 sat_salug;
          1# ->
              let {
                sat_saluo [Occ=Once] :: [GHC.Types.Char]
                [LclId] =
                    [w_salu8 w1_salu9] \u []
                        let {
                          sat_salun [Occ=Once] :: [GHC.Types.Char]
                          [LclId] =
                              [w_salu8 w1_salu9] \u []
                                  case w_salu8 of {
                                    GHC.Int.I16# x#_salui [Occ=Once] ->
                                        let {
                                          sat_saluj [Occ=Once] :: GHC.Base.String
                                          [LclId] =
                                              CCCS :! [GHC.Show.$fShow(,)2 w1_salu9];
                                        } in 
                                          case GHC.Show.$wshowSignedInt 11# x#_salui sat_saluj of {
                                            (#,#) ww5_salul [Occ=Once] ww6_salum [Occ=Once] ->
                                                : [ww5_salul ww6_salum];
                                          };
                                  };
                        } in 
                          GHC.CString.unpackAppendCString#
                              GHC.Event.Poll.$fShowEvent2 sat_salun;
              } in  : [GHC.Show.$fShow(,)4 sat_saluo];
        };

GHC.Event.Poll.$fShowEvent_$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Int -> GHC.Event.Poll.Event -> GHC.Show.ShowS
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><L,1*U(U)><L,U>,
 Unf=OtherCon []] =
    [] \r [w_salup w1_saluq w2_salur]
        case w_salup of {
          GHC.Types.I# ww1_salut [Occ=Once] ->
              GHC.Event.Poll.$w$cshowsPrec ww1_salut w1_saluq w2_salur;
        };

GHC.Event.Poll.$fShowEvent_$cshow
  :: GHC.Event.Poll.Event -> GHC.Base.String
[GblId, Arity=1, Caf=NoCafRefs, Str=<L,1*U(U)>, Unf=OtherCon []] =
    [] \r [x_saluu]
        let {
          sat_saluA [Occ=Once] :: [GHC.Types.Char]
          [LclId] =
              [x_saluu] \u []
                  case x_saluu of {
                    GHC.Int.I16# x#_saluw [Occ=Once] ->
                        case GHC.Show.$wshowSignedInt 11# x#_saluw GHC.Types.[] of {
                          (#,#) ww5_saluy [Occ=Once] ww6_saluz [Occ=Once] ->
                              : [ww5_saluy ww6_saluz];
                        };
                  };
        } in 
          GHC.CString.unpackAppendCString#
              GHC.Event.Poll.$fShowEvent2 sat_saluA;

GHC.Event.Poll.$fShowEvent1
  :: GHC.Event.Poll.Event -> GHC.Show.ShowS
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,1*U(U)><L,U>,
 Unf=OtherCon []] =
    [] \r [w_saluB w1_saluC]
        GHC.Event.Poll.$w$cshowsPrec 0# w_saluB w1_saluC;

GHC.Event.Poll.$fShowEvent_$cshowList
  :: [GHC.Event.Poll.Event] -> GHC.Show.ShowS
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><L,U>,
 Unf=OtherCon []] =
    [] \r [ls_saluD s_saluE]
        GHC.Show.showList__ GHC.Event.Poll.$fShowEvent1 ls_saluD s_saluE;

GHC.Event.Poll.$fShowEvent [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show GHC.Event.Poll.Event
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Event.Poll.$fShowEvent_$cshowsPrec
                                    GHC.Event.Poll.$fShowEvent_$cshow
                                    GHC.Event.Poll.$fShowEvent_$cshowList];

GHC.Event.Poll.$fShowPollFd6 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "PollFd {"#;

GHC.Event.Poll.$fShowPollFd5 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "pfdFd = "#;

GHC.Event.Poll.$fShowPollFd4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "pfdEvents = "#;

GHC.Event.Poll.$fShowPollFd3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "pfdRevents = "#;

GHC.Event.Poll.$fShowPollFd2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "}"#;

GHC.Event.Poll.$w$cshowsPrec1 [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Base.String
     -> GHC.Base.String
[GblId, Arity=5, Str=<S,U><L,U><L,U><L,U><L,U>, Unf=OtherCon []] =
    [] \r [ww_saluF ww1_saluG ww2_saluH ww3_saluI w_saluJ]
        let {
          p_saluK [Occ=Once*!, Dmd=<L,1*C1(U)>] :: GHC.Show.ShowS
          [LclId, Arity=1, Str=<L,U>, Unf=OtherCon []] =
              sat-only [ww1_saluG ww2_saluH ww3_saluI] \r [x_saluL]
                  let {
                    sat_saluZ [Occ=Once] :: [GHC.Types.Char]
                    [LclId] =
                        [ww1_saluG ww2_saluH ww3_saluI x_saluL] \u []
                            let {
                              sat_saluY [Occ=Once] :: [GHC.Types.Char]
                              [LclId] =
                                  [ww1_saluG ww2_saluH ww3_saluI x_saluL] \u []
                                      let {
                                        sat_saluU [Occ=Once] :: GHC.Base.String
                                        [LclId] =
                                            [ww2_saluH ww3_saluI x_saluL] \u []
                                                let {
                                                  sat_saluT [Occ=Once, Dmd=<L,1*U>]
                                                    :: [GHC.Types.Char]
                                                  [LclId] =
                                                      [ww2_saluH ww3_saluI x_saluL] \s []
                                                          let {
                                                            sat_saluS [Occ=Once] :: [GHC.Types.Char]
                                                            [LclId] =
                                                                [ww2_saluH ww3_saluI x_saluL] \u []
                                                                    let {
                                                                      sat_saluR [Occ=Once]
                                                                        :: GHC.Base.String
                                                                      [LclId] =
                                                                          [ww3_saluI x_saluL] \u []
                                                                              let {
                                                                                sat_saluQ [Occ=Once,
                                                                                           Dmd=<L,1*U>]
                                                                                  :: [GHC.Types.Char]
                                                                                [LclId] =
                                                                                    [ww3_saluI
                                                                                     x_saluL] \s []
                                                                                        let {
                                                                                          sat_saluP [Occ=Once]
                                                                                            :: [GHC.Types.Char]
                                                                                          [LclId] =
                                                                                              [ww3_saluI
                                                                                               x_saluL] \u []
                                                                                                  let {
                                                                                                    sat_saluO [Occ=Once]
                                                                                                      :: GHC.Base.String
                                                                                                    [LclId] =
                                                                                                        [x_saluL] \u []
                                                                                                            GHC.CString.unpackAppendCString#
                                                                                                                GHC.Event.Poll.$fShowPollFd2
                                                                                                                x_saluL; } in
                                                                                                  let {
                                                                                                    sat_saluN [Occ=Once]
                                                                                                      :: GHC.Event.Poll.Event
                                                                                                    [LclId] =
                                                                                                        CCCS GHC.Int.I16#! [ww3_saluI];
                                                                                                  } in 
                                                                                                    GHC.Event.Poll.$w$cshowsPrec
                                                                                                        0#
                                                                                                        sat_saluN
                                                                                                        sat_saluO;
                                                                                        } in 
                                                                                          GHC.CString.unpackAppendCString#
                                                                                              GHC.Event.Poll.$fShowPollFd3
                                                                                              sat_saluP;
                                                                              } in 
                                                                                GHC.Base.++
                                                                                    GHC.Show.showCommaSpace1
                                                                                    sat_saluQ; } in
                                                                    let {
                                                                      sat_saluM [Occ=Once]
                                                                        :: GHC.Event.Poll.Event
                                                                      [LclId] =
                                                                          CCCS GHC.Int.I16#! [ww2_saluH];
                                                                    } in 
                                                                      GHC.Event.Poll.$w$cshowsPrec
                                                                          0# sat_saluM sat_saluR;
                                                          } in 
                                                            GHC.CString.unpackAppendCString#
                                                                GHC.Event.Poll.$fShowPollFd4
                                                                sat_saluS;
                                                } in 
                                                  GHC.Base.++ GHC.Show.showCommaSpace1 sat_saluT;
                                      } in 
                                        case GHC.Show.$wshowSignedInt 0# ww1_saluG sat_saluU of {
                                          (#,#) ww5_saluW [Occ=Once] ww6_saluX [Occ=Once] ->
                                              : [ww5_saluW ww6_saluX];
                                        };
                            } in 
                              GHC.CString.unpackAppendCString#
                                  GHC.Event.Poll.$fShowPollFd5 sat_saluY;
                  } in 
                    GHC.CString.unpackAppendCString#
                        GHC.Event.Poll.$fShowPollFd6 sat_saluZ;
        } in 
          case >=# [ww_saluF 11#] of {
            __DEFAULT -> p_saluK w_saluJ;
            1# ->
                let {
                  sat_salv2 [Occ=Once] :: [GHC.Types.Char]
                  [LclId] =
                      [w_saluJ p_saluK] \u []
                          let {
                            sat_salv1 [Occ=Once] :: GHC.Base.String
                            [LclId] =
                                CCCS :! [GHC.Show.$fShow(,)2 w_saluJ];
                          } in  p_saluK sat_salv1;
                } in  : [GHC.Show.$fShow(,)4 sat_salv2];
          };

GHC.Event.Poll.$fShowPollFd_$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Int -> GHC.Event.Poll.PollFd -> GHC.Show.ShowS
[GblId,
 Arity=3,
 Str=<S(S),1*U(U)><S(SSS),1*U(U,U,U)><L,U>,
 Unf=OtherCon []] =
    [] \r [w_salv3 w1_salv4 w2_salv5]
        case w_salv3 of {
          GHC.Types.I# ww1_salv7 [Occ=Once] ->
              case w1_salv4 of {
                GHC.Event.Poll.PollFd ww3_salv9 [Occ=Once]
                                      ww4_salva [Occ=Once]
                                      ww5_salvb [Occ=Once] ->
                    GHC.Event.Poll.$w$cshowsPrec1
                        ww1_salv7 ww3_salv9 ww4_salva ww5_salvb w2_salv5;
              };
        };

GHC.Event.Poll.$fShowPollFd7 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [0#];

GHC.Event.Poll.$fShowPollFd_$cshow
  :: GHC.Event.Poll.PollFd -> GHC.Base.String
[GblId, Arity=1, Str=<S(SSS),1*U(U,U,U)>, Unf=OtherCon []] =
    [] \r [x_salvc]
        case x_salvc of {
          GHC.Event.Poll.PollFd ww1_salve [Occ=Once]
                                ww2_salvf [Occ=Once]
                                ww3_salvg [Occ=Once] ->
              GHC.Event.Poll.$w$cshowsPrec1
                  0# ww1_salve ww2_salvf ww3_salvg GHC.Types.[];
        };

GHC.Event.Poll.$fShowPollFd1
  :: GHC.Event.Poll.PollFd -> GHC.Show.ShowS
[GblId, Arity=2, Str=<S(SSS),1*U(U,U,U)><L,U>, Unf=OtherCon []] =
    [] \r [w_salvh w1_salvi]
        case w_salvh of {
          GHC.Event.Poll.PollFd ww1_salvk [Occ=Once]
                                ww2_salvl [Occ=Once]
                                ww3_salvm [Occ=Once] ->
              GHC.Event.Poll.$w$cshowsPrec1
                  0# ww1_salvk ww2_salvl ww3_salvm w1_salvi;
        };

GHC.Event.Poll.$fShowPollFd_$cshowList
  :: [GHC.Event.Poll.PollFd] -> GHC.Show.ShowS
[GblId, Arity=2, Str=<S,1*U><L,U>, Unf=OtherCon []] =
    [] \r [ls_salvn s_salvo]
        GHC.Show.showList__ GHC.Event.Poll.$fShowPollFd1 ls_salvn s_salvo;

GHC.Event.Poll.$fShowPollFd [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show GHC.Event.Poll.PollFd
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Event.Poll.$fShowPollFd_$cshowsPrec
                                    GHC.Event.Poll.$fShowPollFd_$cshow
                                    GHC.Event.Poll.$fShowPollFd_$cshowList];

GHC.Event.Poll.$fEqEvent [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq GHC.Event.Poll.Event
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt16 GHC.Int.neInt16];

GHC.Event.Poll.pfdRevents
  :: GHC.Event.Poll.PollFd -> GHC.Event.Poll.Event
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLS),1*U(A,A,U)>m,
 Unf=OtherCon []] =
    [] \r [ds_salvp]
        case ds_salvp of {
          GHC.Event.Poll.PollFd _ [Occ=Dead]
                                _ [Occ=Dead]
                                dt2_salvt [Occ=Once] ->
              GHC.Int.I16# [dt2_salvt];
        };

GHC.Event.Poll.pfdEvents
  :: GHC.Event.Poll.PollFd -> GHC.Event.Poll.Event
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LSL),1*U(A,U,A)>m,
 Unf=OtherCon []] =
    [] \r [ds_salvu]
        case ds_salvu of {
          GHC.Event.Poll.PollFd _ [Occ=Dead]
                                dt1_salvx [Occ=Once]
                                _ [Occ=Dead] ->
              GHC.Int.I16# [dt1_salvx];
        };

GHC.Event.Poll.pfdFd
  :: GHC.Event.Poll.PollFd -> System.Posix.Types.Fd
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SLL),1*U(U,A,A)>m,
 Unf=OtherCon []] =
    [] \r [ds_salvz]
        case ds_salvz of {
          GHC.Event.Poll.PollFd dt_salvB [Occ=Once]
                                _ [Occ=Dead]
                                _ [Occ=Dead] ->
              GHC.Int.I32# [dt_salvB];
        };

GHC.Event.Poll.pollFd
  :: GHC.Event.Poll.Poll
     -> GHC.Event.Array.Array GHC.Event.Poll.PollFd
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LS),1*U(A,U)>m,
 Unf=OtherCon []] =
    [] \r [ds_salvE]
        case ds_salvE of {
          GHC.Event.Poll.Poll _ [Occ=Dead] dt1_salvH [Occ=Once] ->
              GHC.STRef.STRef [dt1_salvH];
        };

GHC.Event.Poll.pollChanges
  :: GHC.Event.Poll.Poll
     -> GHC.MVar.MVar (GHC.Event.Array.Array GHC.Event.Poll.PollFd)
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,A)>m,
 Unf=OtherCon []] =
    [] \r [ds_salvI]
        case ds_salvI of {
          GHC.Event.Poll.Poll dt_salvK [Occ=Once] _ [Occ=Dead] ->
              GHC.MVar.MVar [dt_salvK];
        };

GHC.Event.Poll.available [InlPrag=INLINE (sat-args=0)]
  :: GHC.Types.Bool
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.True! [];

GHC.Event.Poll.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

GHC.Event.Poll.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Poll.$trModule4];

GHC.Event.Poll.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.Event.Poll"#;

GHC.Event.Poll.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Poll.$trModule2];

GHC.Event.Poll.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [GHC.Event.Poll.$trModule3
                                     GHC.Event.Poll.$trModule1];

$krep_rajAW :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCShort
                                              GHC.Types.[]];

$krep1_rajAX :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [System.Posix.Types.$tcFd
                                              GHC.Types.[]];

GHC.Event.Poll.$tcEvent2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Event"#;

GHC.Event.Poll.$tcEvent1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Poll.$tcEvent2];

GHC.Event.Poll.$tcEvent :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [10782964843686049546##
                                    16589058175633483645##
                                    GHC.Event.Poll.$trModule
                                    GHC.Event.Poll.$tcEvent1
                                    0#
                                    GHC.Types.krep$*];

$krep2_rajAY :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.Poll.$tcEvent
                                              GHC.Types.[]];

GHC.Event.Poll.$tc'Event1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_rajAW $krep2_rajAY];

GHC.Event.Poll.$tc'Event3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Event"#;

GHC.Event.Poll.$tc'Event2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Poll.$tc'Event3];

GHC.Event.Poll.$tc'Event :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [14301517435728423362##
                                    8190957594797964970##
                                    GHC.Event.Poll.$trModule
                                    GHC.Event.Poll.$tc'Event2
                                    0#
                                    GHC.Event.Poll.$tc'Event1];

GHC.Event.Poll.$tcPollFd2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "PollFd"#;

GHC.Event.Poll.$tcPollFd1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Poll.$tcPollFd2];

GHC.Event.Poll.$tcPollFd :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [16228031948332168786##
                                    6382085973026785723##
                                    GHC.Event.Poll.$trModule
                                    GHC.Event.Poll.$tcPollFd1
                                    0#
                                    GHC.Types.krep$*];

$krep3_rajAZ :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.Poll.$tcPollFd
                                              GHC.Types.[]];

$krep4_rajB0 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_rajAY $krep3_rajAZ];

$krep5_rajB1 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_rajAY $krep4_rajB0];

GHC.Event.Poll.$tc'PollFd1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep1_rajAX $krep5_rajB1];

GHC.Event.Poll.$tc'PollFd3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'PollFd"#;

GHC.Event.Poll.$tc'PollFd2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Poll.$tc'PollFd3];

GHC.Event.Poll.$tc'PollFd :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [13628496348781941345##
                                    13702663238288085101##
                                    GHC.Event.Poll.$trModule
                                    GHC.Event.Poll.$tc'PollFd2
                                    0#
                                    GHC.Event.Poll.$tc'PollFd1];

$krep6_rajB2 :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep3_rajAZ GHC.Types.[]];

$krep7_rajB3 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.Array.$tcArray
                                              $krep6_rajB2];

$krep8_rajB4 :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep7_rajB3 GHC.Types.[]];

$krep9_rajB5 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.MVar.$tcMVar
                                              $krep8_rajB4];

GHC.Event.Poll.$tcPoll2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Poll"#;

GHC.Event.Poll.$tcPoll1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Poll.$tcPoll2];

GHC.Event.Poll.$tcPoll :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [13451464419968486054##
                                    9195109480934256969##
                                    GHC.Event.Poll.$trModule
                                    GHC.Event.Poll.$tcPoll1
                                    0#
                                    GHC.Types.krep$*];

$krep10_rajB6 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.Poll.$tcPoll
                                              GHC.Types.[]];

$krep11_rajB7 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep7_rajB3 $krep10_rajB6];

GHC.Event.Poll.$tc'Poll1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep9_rajB5 $krep11_rajB7];

GHC.Event.Poll.$tc'Poll3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Poll"#;

GHC.Event.Poll.$tc'Poll2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Poll.$tc'Poll3];

GHC.Event.Poll.$tc'Poll :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [5431567153781643515##
                                    15938353663250731731##
                                    GHC.Event.Poll.$trModule
                                    GHC.Event.Poll.$tc'Poll2
                                    0#
                                    GHC.Event.Poll.$tc'Poll1];

GHC.Event.Poll.$fBitsEvent [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits GHC.Event.Poll.Event
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [GHC.Event.Poll.$fEqEvent
                                     GHC.Int.$fBitsInt16_$c.&.
                                     GHC.Int.$fBitsInt16_$c.|.
                                     GHC.Int.$fBitsInt16_$cxor
                                     GHC.Int.$fBitsInt16_$ccomplement
                                     GHC.Int.$fBitsInt16_$cshift
                                     GHC.Int.$fBitsInt16_$crotate
                                     GHC.Int.$fBitsInt3
                                     GHC.Int.$fBitsInt16_$cbit
                                     GHC.Int.$fBitsInt16_$csetBit
                                     GHC.Int.$fBitsInt16_$cclearBit
                                     GHC.Int.$fBitsInt16_$ccomplementBit
                                     GHC.Int.$fBitsInt16_$ctestBit
                                     GHC.Int.$fBitsInt16_$cbitSizeMaybe
                                     GHC.Int.$fBitsInt16_$cfiniteBitSize
                                     GHC.Int.$fBitsInt16_$cisSigned
                                     GHC.Int.$fBitsInt16_$cshiftL
                                     GHC.Int.$fBitsInt16_$cunsafeShiftL
                                     GHC.Int.$fBitsInt16_$cshiftR
                                     GHC.Int.$fBitsInt16_$cunsafeShiftR
                                     GHC.Int.$fBitsInt16_$crotateL
                                     GHC.Int.$fBitsInt16_$crotateR
                                     GHC.Int.$fBitsInt16_$cpopCount];

GHC.Event.Poll.$fFiniteBitsEvent [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits GHC.Event.Poll.Event
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [GHC.Event.Poll.$fBitsEvent
                                           GHC.Int.$fBitsInt16_$cfiniteBitSize
                                           GHC.Int.$fFiniteBitsInt16_$ccountLeadingZeros
                                           GHC.Int.$fFiniteBitsInt16_$ccountTrailingZeros];

GHC.Event.Poll.$fNumEvent [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num GHC.Event.Poll.Event
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Int.$fNumInt16_$c+
                                  GHC.Int.$fNumInt16_$c-
                                  GHC.Int.$fNumInt16_$c*
                                  GHC.Int.$fNumInt16_$cnegate
                                  GHC.Int.$fNumInt16_$cabs
                                  GHC.Int.$fNumInt16_$csignum
                                  GHC.Int.$fNumInt16_$cfromInteger];

lvl_rajB8 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "modifyFdOnce not supported in Poll backend"#;

GHC.Event.Poll.new3
  :: GHC.Event.Poll.Poll
     -> System.Posix.Types.Fd
     -> GHC.Event.Internal.Event
     -> GHC.Types.IO GHC.Types.Bool
[GblId, Str=x] =
    [] \u []
        case GHC.CString.unpackCString# lvl_rajB8 of sat_salvM {
          __DEFAULT -> GHC.Err.errorWithoutStackTrace sat_salvM;
        };

$wc_pollLoop_rajB9
  :: GHC.Prim.Addr#
     -> GHC.Prim.Word#
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, Foreign.C.Types.CInt #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S,U><S,U><S,U><S,U>,
 Unf=OtherCon []] =
    sat-only [] \r [ww_salvN ww1_salvO ww2_salvP w_salvQ]
        case <=# [ww2_salvP 2147483647#] of {
          __DEFAULT ->
              case
                  __pkg_ccall_GC base-4.11.0.0 [ww_salvN
                                                ww1_salvO
                                                2147483647#
                                                w_salvQ]
              of
              { (#,#) ds_salvU [Occ=Once*] ds1_salvV [Occ=Once] ->
                    case narrow32Int# [ds1_salvV] of wild1_salvW {
                      __DEFAULT ->
                          let {
                            sat_salvX [Occ=Once] :: Foreign.C.Types.CInt
                            [LclId] =
                                CCCS GHC.Int.I32#! [wild1_salvW];
                          } in  (#,#) [ds_salvU sat_salvX];
                      0# ->
                          case -# [ww2_salvP 2147483647#] of sat_salvY {
                            __DEFAULT ->
                                $wc_pollLoop_rajB9 ww_salvN ww1_salvO sat_salvY ds_salvU;
                          };
                    };
              };
          1# ->
              case narrow32Int# [ww2_salvP] of sat_salw0 {
                __DEFAULT ->
                    case
                        __pkg_ccall_GC base-4.11.0.0 [ww_salvN ww1_salvO sat_salw0 w_salvQ]
                    of
                    { (#,#) ds_salw2 [Occ=Once] ds1_salw3 [Occ=Once] ->
                          case narrow32Int# [ds1_salw3] of sat_salw4 {
                            __DEFAULT ->
                                let {
                                  sat_salw5 [Occ=Once] :: GHC.Int.Int32
                                  [LclId] =
                                      CCCS GHC.Int.I32#! [sat_salw4];
                                } in  (#,#) [ds_salw2 sat_salw5];
                          };
                    };
              };
        };

lvl1_rajBa :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [0#];

lvl2_rajBb :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "c_poll"#;

lvl3_rajBc :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl2_rajBb;

lvl4_rajBd :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "reworkFd: event not found"#;

lvl5_rajBe :: GHC.Types.IO ()
[GblId, Str=x] =
    [] \u []
        case GHC.CString.unpackCString# lvl4_rajBd of sat_salw6 {
          __DEFAULT -> GHC.Err.errorWithoutStackTrace sat_salw6;
        };

lvl6_rajBf
  :: GHC.Event.Array.Array GHC.Event.Poll.PollFd
     -> Foreign.C.Types.CInt
     -> (Foreign.C.Types.CInt
         -> GHC.Event.Poll.PollFd
         -> GHC.Types.IO (Foreign.C.Types.CInt, GHC.Types.Bool))
     -> GHC.Types.IO ()
[GblId] =
    [] \u [] GHC.Event.Array.loop GHC.Event.Poll.$fStorablePollFd;

lvl7_rajBg :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [3#];

lvl8_rajBh :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [1#];

lvl9_rajBi :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [2#];

lvl10_rajBj
  :: GHC.Event.Array.Array GHC.Event.Poll.PollFd
     -> GHC.Types.Int -> GHC.Types.IO ()
[GblId] =
    [] \u [] GHC.Event.Array.removeAt GHC.Event.Poll.$fStorablePollFd;

lvl11_rajBk
  :: (GHC.Event.Poll.PollFd -> GHC.Types.Bool)
     -> GHC.Event.Array.Array GHC.Event.Poll.PollFd
     -> GHC.Types.IO
          (GHC.Base.Maybe (GHC.Types.Int, GHC.Event.Poll.PollFd))
[GblId] =
    [] \u [] GHC.Event.Array.findIndex GHC.Event.Poll.$fStorablePollFd;

GHC.Event.Poll.new5
  :: GHC.Event.Poll.Poll
     -> GHC.Base.Maybe GHC.Event.Internal.Timeout
     -> (System.Posix.Types.Fd
         -> GHC.Event.Internal.Event -> GHC.Types.IO ())
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=4,
 Str=<S(SL),1*U(U,U)><L,U><L,C(C1(C1(U(U,A))))><S,U>,
 Unf=OtherCon []] =
    [] \r [p_salw7 mtout_salw8 f_salw9 eta_salwa]
        case newMutVar# [GHC.ForeignPtr.NoFinalizers eta_salwa] of {
          (#,#) ipv_salwc [Occ=Once] ipv1_salwd [Occ=Once] ->
              let {
                sat_salwe [Occ=Once] :: GHC.ForeignPtr.ForeignPtrContents
                [LclId] =
                    CCCS GHC.ForeignPtr.PlainForeignPtr! [ipv1_salwd]; } in
              let {
                sat_salwf [Occ=Once]
                  :: GHC.ForeignPtr.ForeignPtr GHC.Event.Poll.PollFd
                [LclId] =
                    CCCS GHC.ForeignPtr.ForeignPtr! [__NULL sat_salwe]; } in
              let {
                sat_salwg [Occ=Once] :: GHC.Event.Array.AC GHC.Event.Poll.PollFd
                [LclId] =
                    CCCS GHC.Event.Array.AC! [sat_salwf 0# 0#];
              } in 
                case newMutVar# [sat_salwg ipv_salwc] of {
                  (#,#) ipv2_salwi [Occ=Once] ipv3_salwj [Occ=Once*] ->
                      case p_salw7 of {
                        GHC.Event.Poll.Poll dt_salwl dt1_salwm ->
                            case getMaskingState# [ipv2_salwi] of {
                              (#,#) ipv4_salwo [Occ=Once*] ipv5_salwp [Occ=Once!] ->
                                  let-no-escape {
                                    $w$j_salwq [InlPrag=NOUSERINLINE[0],
                                                Occ=Once*!T[2],
                                                Dmd=<C(C(S)),1*C1(C1(U(U,U)))>]
                                      :: GHC.Prim.State# GHC.Prim.RealWorld
                                         -> GHC.Prim.MutVar#
                                              GHC.Prim.RealWorld
                                              (GHC.Event.Array.AC GHC.Event.Poll.PollFd)
                                         -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
                                    [LclId[JoinId(2)], Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
                                        sat-only [mtout_salw8 f_salw9 dt1_salwm] \r [w_salwr
                                                                                     ww_salws]
                                            case readMutVar# [ww_salws w_salwr] of {
                                              (#,#) ipv6_salwu [Occ=Once] ipv7_salwv [Occ=Once!] ->
                                                  case ipv7_salwv of {
                                                    GHC.Event.Array.AC es_salwx [Occ=Once!]
                                                                       dt2_salwy [Occ=Once]
                                                                       _ [Occ=Dead] ->
                                                        case es_salwx of {
                                                          GHC.ForeignPtr.ForeignPtr fo_salwB [Occ=OnceL]
                                                                                    ds4_salwC [Occ=Once] ->
                                                              let {
                                                                ary_salwD
                                                                  :: GHC.STRef.STRef
                                                                       GHC.Prim.RealWorld
                                                                       (GHC.Event.Array.AC
                                                                          GHC.Event.Poll.PollFd)
                                                                [LclId, Unf=OtherCon []] =
                                                                    CCCS GHC.STRef.STRef! [dt1_salwm];
                                                              } in 
                                                                case
                                                                    *# [dt2_salwy 8#]
                                                                of
                                                                offset_salwE [Dmd=<S,U>]
                                                                { __DEFAULT ->
                                                                      let-no-escape {
                                                                        exit_salwF [Occ=OnceL!T[1],
                                                                                    Dmd=<L,C(U(U,U))>]
                                                                          :: GHC.Prim.State#
                                                                               GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Types.Int #)
                                                                        [LclId[JoinId(1)],
                                                                         Arity=1,
                                                                         Str=<S,U>,
                                                                         Unf=OtherCon []] =
                                                                            sat-only [mtout_salw8
                                                                                      f_salw9
                                                                                      dt1_salwm
                                                                                      ds4_salwC
                                                                                      ary_salwD] \r [w1_salwG]
                                                                                case
                                                                                    touch# [ds4_salwC
                                                                                            w1_salwG]
                                                                                of
                                                                                s'_salwH
                                                                                { __DEFAULT ->
                                                                                      case
                                                                                          readMutVar# [dt1_salwm
                                                                                                       s'_salwH]
                                                                                      of
                                                                                      { (#,#) ipv8_salwJ [Occ=Once*]
                                                                                              ipv9_salwK [Occ=Once!] ->
                                                                                            case
                                                                                                ipv9_salwK
                                                                                            of
                                                                                            { GHC.Event.Array.AC es1_salwM [Occ=Once!]
                                                                                                                 dt4_salwN [Occ=Once*]
                                                                                                                 _ [Occ=Dead] ->
                                                                                                  case
                                                                                                      es1_salwM
                                                                                                  of
                                                                                                  { GHC.ForeignPtr.ForeignPtr ds6_salwQ [Occ=Once*]
                                                                                                                              r_salwR [Occ=Once] ->
                                                                                                        let-no-escape {
                                                                                                          $w$j1_salwS [InlPrag=NOUSERINLINE[0],
                                                                                                                       Occ=Once*!T[3],
                                                                                                                       Dmd=<L,1*C1(C1(C1(U(U,U))))>]
                                                                                                            :: GHC.Prim.State#
                                                                                                                 GHC.Prim.RealWorld
                                                                                                               -> GHC.Prim.Int#
                                                                                                               -> (# GHC.Prim.State#
                                                                                                                       GHC.Prim.RealWorld,
                                                                                                                     Foreign.C.Types.CInt #)
                                                                                                               -> (# GHC.Prim.State#
                                                                                                                       GHC.Prim.RealWorld,
                                                                                                                     GHC.Types.Int #)
                                                                                                          [LclId[JoinId(3)],
                                                                                                           Arity=3,
                                                                                                           Str=<S,U><S,1*U><L,A>,
                                                                                                           Unf=OtherCon []] =
                                                                                                              sat-only [f_salw9
                                                                                                                        ary_salwD
                                                                                                                        r_salwR] \r [w2_salwT
                                                                                                                                     ww1_salwU
                                                                                                                                     w3_salwV]
                                                                                                                  let-no-escape {
                                                                                                                    $w$j2_salwW [InlPrag=NOUSERINLINE[0],
                                                                                                                                 Occ=Once*!T[2],
                                                                                                                                 Dmd=<L,1*C1(C1(U(U,U)))>]
                                                                                                                      :: GHC.Prim.State#
                                                                                                                           GHC.Prim.RealWorld
                                                                                                                         -> GHC.Prim.Int#
                                                                                                                         -> (# GHC.Prim.State#
                                                                                                                                 GHC.Prim.RealWorld,
                                                                                                                               GHC.Types.Int #)
                                                                                                                    [LclId[JoinId(2)],
                                                                                                                     Arity=2,
                                                                                                                     Str=<S,U><S,1*U>,
                                                                                                                     Unf=OtherCon []] =
                                                                                                                        sat-only [f_salw9
                                                                                                                                  ary_salwD
                                                                                                                                  r_salwR] \r [w4_salwX
                                                                                                                                               ww2_salwY]
                                                                                                                            case
                                                                                                                                touch# [r_salwR
                                                                                                                                        w4_salwX]
                                                                                                                            of
                                                                                                                            s'1_salwZ
                                                                                                                            { __DEFAULT ->
                                                                                                                                  case
                                                                                                                                      ww2_salwY
                                                                                                                                  of
                                                                                                                                  wild6_salx0
                                                                                                                                  { __DEFAULT ->
                                                                                                                                        let {
                                                                                                                                          sat_salxy [Occ=Once]
                                                                                                                                            :: Foreign.C.Types.CInt
                                                                                                                                               -> GHC.Event.Poll.PollFd
                                                                                                                                               -> GHC.Types.IO
                                                                                                                                                    (Foreign.C.Types.CInt,
                                                                                                                                                     GHC.Types.Bool)
                                                                                                                                          [LclId] =
                                                                                                                                              [f_salw9
                                                                                                                                               wild6_salx0] \r [i_salx1
                                                                                                                                                                e_salx2
                                                                                                                                                                eta1_salx3]
                                                                                                                                                  case
                                                                                                                                                      e_salx2
                                                                                                                                                  of
                                                                                                                                                  { GHC.Event.Poll.PollFd dt6_salx5 [Occ=Once]
                                                                                                                                                                          _ [Occ=Dead]
                                                                                                                                                                          dt8_salx7 [Occ=Once!] ->
                                                                                                                                                        case
                                                                                                                                                            dt8_salx7
                                                                                                                                                        of
                                                                                                                                                        wild8_salx8
                                                                                                                                                        { __DEFAULT ->
                                                                                                                                                              let {
                                                                                                                                                                sat_salxj [Occ=Once]
                                                                                                                                                                  :: GHC.Event.Internal.Event
                                                                                                                                                                [LclId] =
                                                                                                                                                                    [wild8_salx8] \u []
                                                                                                                                                                        case
                                                                                                                                                                            int2Word# [wild8_salx8]
                                                                                                                                                                        of
                                                                                                                                                                        sat_salxa
                                                                                                                                                                        { __DEFAULT ->
                                                                                                                                                                              case
                                                                                                                                                                                  and# [sat_salxa
                                                                                                                                                                                        25##]
                                                                                                                                                                              of
                                                                                                                                                                              sat_salxb
                                                                                                                                                                              { __DEFAULT ->
                                                                                                                                                                                    case
                                                                                                                                                                                        word2Int# [sat_salxb]
                                                                                                                                                                                    of
                                                                                                                                                                                    { __DEFAULT ->
                                                                                                                                                                                          case
                                                                                                                                                                                              int2Word# [wild8_salx8]
                                                                                                                                                                                          of
                                                                                                                                                                                          sat_salxd
                                                                                                                                                                                          { __DEFAULT ->
                                                                                                                                                                                                case
                                                                                                                                                                                                    and# [sat_salxd
                                                                                                                                                                                                          28##]
                                                                                                                                                                                                of
                                                                                                                                                                                                sat_salxe
                                                                                                                                                                                                { __DEFAULT ->
                                                                                                                                                                                                      case
                                                                                                                                                                                                          word2Int# [sat_salxe]
                                                                                                                                                                                                      of
                                                                                                                                                                                                      { __DEFAULT ->
                                                                                                                                                                                                            lvl7_rajBg;
                                                                                                                                                                                                        0# ->
                                                                                                                                                                                                            lvl8_rajBh;
                                                                                                                                                                                                      };
                                                                                                                                                                                                };
                                                                                                                                                                                          };
                                                                                                                                                                                      0# ->
                                                                                                                                                                                          case
                                                                                                                                                                                              int2Word# [wild8_salx8]
                                                                                                                                                                                          of
                                                                                                                                                                                          sat_salxg
                                                                                                                                                                                          { __DEFAULT ->
                                                                                                                                                                                                case
                                                                                                                                                                                                    and# [sat_salxg
                                                                                                                                                                                                          28##]
                                                                                                                                                                                                of
                                                                                                                                                                                                sat_salxh
                                                                                                                                                                                                { __DEFAULT ->
                                                                                                                                                                                                      case
                                                                                                                                                                                                          word2Int# [sat_salxh]
                                                                                                                                                                                                      of
                                                                                                                                                                                                      { __DEFAULT ->
                                                                                                                                                                                                            lvl9_rajBi;
                                                                                                                                                                                                        0# ->
                                                                                                                                                                                                            GHC.Event.Poll.$fShowPollFd7;
                                                                                                                                                                                                      };
                                                                                                                                                                                                };
                                                                                                                                                                                          };
                                                                                                                                                                                    };
                                                                                                                                                                              };
                                                                                                                                                                        }; } in
                                                                                                                                                              let {
                                                                                                                                                                sat_salx9 [Occ=Once]
                                                                                                                                                                  :: System.Posix.Types.Fd
                                                                                                                                                                [LclId] =
                                                                                                                                                                    CCCS GHC.Int.I32#! [dt6_salx5];
                                                                                                                                                              } in 
                                                                                                                                                                case
                                                                                                                                                                    f_salw9
                                                                                                                                                                        sat_salx9
                                                                                                                                                                        sat_salxj
                                                                                                                                                                        eta1_salx3
                                                                                                                                                                of
                                                                                                                                                                { (#,#) ipv10_salxl [Occ=Once]
                                                                                                                                                                        _ [Occ=Dead] ->
                                                                                                                                                                      let {
                                                                                                                                                                        i'_salxn [Dmd=<L,U(U)>]
                                                                                                                                                                          :: GHC.Int.Int32
                                                                                                                                                                        [LclId] =
                                                                                                                                                                            [i_salx1] \u []
                                                                                                                                                                                case
                                                                                                                                                                                    i_salx1
                                                                                                                                                                                of
                                                                                                                                                                                { GHC.Int.I32# x#_salxp [Occ=Once] ->
                                                                                                                                                                                      case
                                                                                                                                                                                          +# [x#_salxp
                                                                                                                                                                                              1#]
                                                                                                                                                                                      of
                                                                                                                                                                                      sat_salxq
                                                                                                                                                                                      { __DEFAULT ->
                                                                                                                                                                                            case
                                                                                                                                                                                                narrow32Int# [sat_salxq]
                                                                                                                                                                                            of
                                                                                                                                                                                            sat_salxr
                                                                                                                                                                                            { __DEFAULT ->
                                                                                                                                                                                                  GHC.Int.I32# [sat_salxr];
                                                                                                                                                                                            };
                                                                                                                                                                                      };
                                                                                                                                                                                }; } in
                                                                                                                                                                      let {
                                                                                                                                                                        sat_salxv [Occ=Once]
                                                                                                                                                                          :: GHC.Types.Bool
                                                                                                                                                                        [LclId] =
                                                                                                                                                                            [wild6_salx0
                                                                                                                                                                             i'_salxn] \u []
                                                                                                                                                                                case
                                                                                                                                                                                    i'_salxn
                                                                                                                                                                                of
                                                                                                                                                                                { GHC.Int.I32# x_salxt [Occ=Once] ->
                                                                                                                                                                                      case
                                                                                                                                                                                          ==# [x_salxt
                                                                                                                                                                                               wild6_salx0]
                                                                                                                                                                                      of
                                                                                                                                                                                      sat_salxu
                                                                                                                                                                                      { __DEFAULT ->
                                                                                                                                                                                            tagToEnum# [sat_salxu];
                                                                                                                                                                                      };
                                                                                                                                                                                }; } in
                                                                                                                                                                      let {
                                                                                                                                                                        sat_salxw [Occ=Once]
                                                                                                                                                                          :: (Foreign.C.Types.CInt,
                                                                                                                                                                              GHC.Types.Bool)
                                                                                                                                                                        [LclId] =
                                                                                                                                                                            CCCS (,)! [i'_salxn
                                                                                                                                                                                       sat_salxv];
                                                                                                                                                                      } in 
                                                                                                                                                                        (#,#) [ipv10_salxl
                                                                                                                                                                               sat_salxw];
                                                                                                                                                                };
                                                                                                                                                          0# ->
                                                                                                                                                              let {
                                                                                                                                                                sat_salxx [Occ=Once]
                                                                                                                                                                  :: (Foreign.C.Types.CInt,
                                                                                                                                                                      GHC.Types.Bool)
                                                                                                                                                                [LclId] =
                                                                                                                                                                    CCCS (,)! [i_salx1
                                                                                                                                                                               GHC.Types.True];
                                                                                                                                                              } in 
                                                                                                                                                                (#,#) [eta1_salx3
                                                                                                                                                                       sat_salxx];
                                                                                                                                                        };
                                                                                                                                                  };
                                                                                                                                        } in 
                                                                                                                                          case
                                                                                                                                              lvl6_rajBf
                                                                                                                                                  ary_salwD
                                                                                                                                                  lvl1_rajBa
                                                                                                                                                  sat_salxy
                                                                                                                                                  s'1_salwZ
                                                                                                                                          of
                                                                                                                                          { (#,#) ipv10_salxA [Occ=Once]
                                                                                                                                                  _ [Occ=Dead] ->
                                                                                                                                                let {
                                                                                                                                                  sat_salxC [Occ=Once]
                                                                                                                                                    :: GHC.Types.Int
                                                                                                                                                  [LclId] =
                                                                                                                                                      CCCS GHC.Types.I#! [wild6_salx0];
                                                                                                                                                } in 
                                                                                                                                                  (#,#) [ipv10_salxA
                                                                                                                                                         sat_salxC];
                                                                                                                                          };
                                                                                                                                    0# ->
                                                                                                                                        (#,#) [s'1_salwZ
                                                                                                                                               GHC.Event.Poll.$fShowPollFd7];
                                                                                                                                  };
                                                                                                                            };
                                                                                                                  } in 
                                                                                                                    case
                                                                                                                        ww1_salwU
                                                                                                                    of
                                                                                                                    wild6_salxD
                                                                                                                    { __DEFAULT ->
                                                                                                                          $w$j2_salwW
                                                                                                                              w2_salwT
                                                                                                                              wild6_salxD;
                                                                                                                      -1# ->
                                                                                                                          case
                                                                                                                              __pkg_ccall base-4.11.0.0 [w2_salwT]
                                                                                                                          of
                                                                                                                          { (#,#) ds7_salxG [Occ=Once*]
                                                                                                                                  ds8_salxH [Occ=Once] ->
                                                                                                                                case
                                                                                                                                    narrow32Int# [ds8_salxH]
                                                                                                                                of
                                                                                                                                { __DEFAULT ->
                                                                                                                                      case
                                                                                                                                          Foreign.C.Error.throwErrno1
                                                                                                                                              lvl3_rajBc
                                                                                                                                              ds7_salxG
                                                                                                                                      of
                                                                                                                                      { (#,#) ipv10_salxK [Occ=Once]
                                                                                                                                              ipv11_salxL [Occ=Once] ->
                                                                                                                                            case
                                                                                                                                                ipv11_salxL
                                                                                                                                            of
                                                                                                                                            { GHC.Int.I32# ww3_salxN [Occ=Once] ->
                                                                                                                                                  $w$j2_salwW
                                                                                                                                                      ipv10_salxK
                                                                                                                                                      ww3_salxN;
                                                                                                                                            };
                                                                                                                                      };
                                                                                                                                  4# ->
                                                                                                                                      $w$j2_salwW
                                                                                                                                          ds7_salxG
                                                                                                                                          0#;
                                                                                                                                };
                                                                                                                          };
                                                                                                                    };
                                                                                                        } in 
                                                                                                          case
                                                                                                              mtout_salw8
                                                                                                          of
                                                                                                          { GHC.Base.Nothing ->
                                                                                                                case
                                                                                                                    int2Word# [dt4_salwN]
                                                                                                                of
                                                                                                                sat_salxQ
                                                                                                                { __DEFAULT ->
                                                                                                                      case
                                                                                                                          __pkg_ccall base-4.11.0.0 [ds6_salwQ
                                                                                                                                                     sat_salxQ
                                                                                                                                                     0#
                                                                                                                                                     ipv8_salwJ]
                                                                                                                      of
                                                                                                                      { (#,#) ds7_salxS
                                                                                                                              ds8_salxT [Occ=Once] ->
                                                                                                                            case
                                                                                                                                narrow32Int# [ds8_salxT]
                                                                                                                            of
                                                                                                                            ipv10_salxU [Dmd=<S,U>]
                                                                                                                            { __DEFAULT ->
                                                                                                                                  let {
                                                                                                                                    sat_salxV [Occ=Once]
                                                                                                                                      :: Foreign.C.Types.CInt
                                                                                                                                    [LclId] =
                                                                                                                                        CCCS GHC.Int.I32#! [ipv10_salxU];
                                                                                                                                  } in 
                                                                                                                                    case
                                                                                                                                        (#,#) [ds7_salxS
                                                                                                                                               sat_salxV]
                                                                                                                                    of
                                                                                                                                    sat_salxW
                                                                                                                                    { __DEFAULT ->
                                                                                                                                          $w$j1_salwS
                                                                                                                                              ds7_salxS
                                                                                                                                              ipv10_salxU
                                                                                                                                              sat_salxW;
                                                                                                                                    };
                                                                                                                            };
                                                                                                                      };
                                                                                                                };
                                                                                                            GHC.Base.Just tout_salxX [Occ=Once!] ->
                                                                                                                case
                                                                                                                    tout_salxX
                                                                                                                of
                                                                                                                { GHC.Event.Internal.Timeout dt6_salxZ [Occ=Once] ->
                                                                                                                      case
                                                                                                                          plusWord# [dt6_salxZ
                                                                                                                                     1000000##]
                                                                                                                      of
                                                                                                                      sat_saly1
                                                                                                                      { __DEFAULT ->
                                                                                                                            case
                                                                                                                                minusWord# [sat_saly1
                                                                                                                                            1##]
                                                                                                                            of
                                                                                                                            sat_saly2
                                                                                                                            { __DEFAULT ->
                                                                                                                                  case
                                                                                                                                      quotWord# [sat_saly2
                                                                                                                                                 1000000##]
                                                                                                                                  of
                                                                                                                                  sat_saly3
                                                                                                                                  { __DEFAULT ->
                                                                                                                                        case
                                                                                                                                            word2Int# [sat_saly3]
                                                                                                                                        of
                                                                                                                                        sat_saly4
                                                                                                                                        { __DEFAULT ->
                                                                                                                                              case
                                                                                                                                                  int2Word# [dt4_salwN]
                                                                                                                                              of
                                                                                                                                              sat_saly0
                                                                                                                                              { __DEFAULT ->
                                                                                                                                                    case
                                                                                                                                                        $wc_pollLoop_rajB9
                                                                                                                                                            ds6_salwQ
                                                                                                                                                            sat_saly0
                                                                                                                                                            sat_saly4
                                                                                                                                                            ipv8_salwJ
                                                                                                                                                    of
                                                                                                                                                    ds7_saly5
                                                                                                                                                    { (#,#) ipv10_saly6 [Occ=Once]
                                                                                                                                                            ipv11_saly7 [Occ=Once] ->
                                                                                                                                                          case
                                                                                                                                                              ipv11_saly7
                                                                                                                                                          of
                                                                                                                                                          { GHC.Int.I32# ww2_saly9 [Occ=Once] ->
                                                                                                                                                                $w$j1_salwS
                                                                                                                                                                    ipv10_saly6
                                                                                                                                                                    ww2_saly9
                                                                                                                                                                    ds7_saly5;
                                                                                                                                                          };
                                                                                                                                                    };
                                                                                                                                              };
                                                                                                                                        };
                                                                                                                                  };
                                                                                                                            };
                                                                                                                      };
                                                                                                                  GHC.Event.Internal.Forever ->
                                                                                                                      case
                                                                                                                          int2Word# [dt4_salwN]
                                                                                                                      of
                                                                                                                      sat_salya
                                                                                                                      { __DEFAULT ->
                                                                                                                            case
                                                                                                                                $wc_pollLoop_rajB9
                                                                                                                                    ds6_salwQ
                                                                                                                                    sat_salya
                                                                                                                                    -1#
                                                                                                                                    ipv8_salwJ
                                                                                                                            of
                                                                                                                            ds7_salyb
                                                                                                                            { (#,#) ipv10_salyc [Occ=Once]
                                                                                                                                    ipv11_salyd [Occ=Once] ->
                                                                                                                                  case
                                                                                                                                      ipv11_salyd
                                                                                                                                  of
                                                                                                                                  { GHC.Int.I32# ww2_salyf [Occ=Once] ->
                                                                                                                                        $w$j1_salwS
                                                                                                                                            ipv10_salyc
                                                                                                                                            ww2_salyf
                                                                                                                                            ds7_salyb;
                                                                                                                                  };
                                                                                                                            };
                                                                                                                      };
                                                                                                                };
                                                                                                          };
                                                                                                  };
                                                                                            };
                                                                                      };
                                                                                };
                                                                      } in 
                                                                        let-no-escape {
                                                                          $wgo_salyg [InlPrag=NOUSERINLINE[0],
                                                                                      Occ=LoopBreakerT[2]]
                                                                            :: GHC.Prim.Int#
                                                                               -> GHC.Prim.State#
                                                                                    GHC.Prim.RealWorld
                                                                               -> (# GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld,
                                                                                     GHC.Types.Int #)
                                                                          [LclId[JoinId(2)],
                                                                           Arity=2,
                                                                           Str=<S,U><S,U>,
                                                                           Unf=OtherCon []] =
                                                                              sat-only [dt1_salwm
                                                                                        fo_salwB
                                                                                        ary_salwD
                                                                                        offset_salwE
                                                                                        exit_salwF
                                                                                        $wgo_salyg] \r [ww1_salyh
                                                                                                        w1_salyi]
                                                                                  case
                                                                                      >=# [ww1_salyh
                                                                                           offset_salwE]
                                                                                  of
                                                                                  { __DEFAULT ->
                                                                                        case
                                                                                            plusAddr# [fo_salwB
                                                                                                       ww1_salyh]
                                                                                        of
                                                                                        ptr_salyk [Dmd=<S,U>]
                                                                                        { __DEFAULT ->
                                                                                              case
                                                                                                  readInt32OffAddr# [ptr_salyk
                                                                                                                     0#
                                                                                                                     w1_salyi]
                                                                                              of
                                                                                              { (#,#) ipv8_salym [Occ=Once]
                                                                                                      ipv9_salyn ->
                                                                                                    case
                                                                                                        plusAddr# [ptr_salyk
                                                                                                                   4#]
                                                                                                    of
                                                                                                    sat_salyo
                                                                                                    { __DEFAULT ->
                                                                                                          case
                                                                                                              readInt16OffAddr# [sat_salyo
                                                                                                                                 0#
                                                                                                                                 ipv8_salym]
                                                                                                          of
                                                                                                          { (#,#) ipv10_salyq [Occ=Once]
                                                                                                                  ipv11_salyr [Occ=Once*] ->
                                                                                                                case
                                                                                                                    plusAddr# [ptr_salyk
                                                                                                                               6#]
                                                                                                                of
                                                                                                                sat_salys
                                                                                                                { __DEFAULT ->
                                                                                                                      case
                                                                                                                          readInt16OffAddr# [sat_salys
                                                                                                                                             0#
                                                                                                                                             ipv10_salyq]
                                                                                                                      of
                                                                                                                      { (#,#) ipv12_salyu [Occ=Once*]
                                                                                                                              ipv13_salyv [Occ=Once!] ->
                                                                                                                            case
                                                                                                                                ipv13_salyv
                                                                                                                            of
                                                                                                                            { __DEFAULT ->
                                                                                                                                  let {
                                                                                                                                    sat_salyD [Occ=Once]
                                                                                                                                      :: GHC.Event.Poll.PollFd
                                                                                                                                         -> GHC.Types.Bool
                                                                                                                                    [LclId] =
                                                                                                                                        [ipv9_salyn] \r [x_salyx]
                                                                                                                                            case
                                                                                                                                                x_salyx
                                                                                                                                            of
                                                                                                                                            { GHC.Event.Poll.PollFd dt4_salyz [Occ=Once]
                                                                                                                                                                    _ [Occ=Dead]
                                                                                                                                                                    _ [Occ=Dead] ->
                                                                                                                                                  case
                                                                                                                                                      ==# [dt4_salyz
                                                                                                                                                           ipv9_salyn]
                                                                                                                                                  of
                                                                                                                                                  sat_salyC
                                                                                                                                                  { __DEFAULT ->
                                                                                                                                                        tagToEnum# [sat_salyC];
                                                                                                                                                  };
                                                                                                                                            };
                                                                                                                                  } in 
                                                                                                                                    case
                                                                                                                                        lvl11_rajBk
                                                                                                                                            sat_salyD
                                                                                                                                            ary_salwD
                                                                                                                                            ipv12_salyu
                                                                                                                                    of
                                                                                                                                    { (#,#) ipv14_salyF [Occ=Once*]
                                                                                                                                            ipv15_salyG [Occ=Once!] ->
                                                                                                                                          case
                                                                                                                                              ipv15_salyG
                                                                                                                                          of
                                                                                                                                          { GHC.Base.Nothing ->
                                                                                                                                                lvl5_rajBe;
                                                                                                                                            GHC.Base.Just ds9_salyJ [Occ=Once!] ->
                                                                                                                                                case
                                                                                                                                                    ds9_salyJ
                                                                                                                                                of
                                                                                                                                                { (,) i_salyL [Occ=Once*]
                                                                                                                                                      _ [Occ=Dead] ->
                                                                                                                                                      case
                                                                                                                                                          ipv11_salyr
                                                                                                                                                      of
                                                                                                                                                      wild7_salyN
                                                                                                                                                      { __DEFAULT ->
                                                                                                                                                            case
                                                                                                                                                                readMutVar# [dt1_salwm
                                                                                                                                                                             ipv14_salyF]
                                                                                                                                                            of
                                                                                                                                                            { (#,#) ipv16_salyP [Occ=Once]
                                                                                                                                                                    ipv17_salyQ [Occ=Once!] ->
                                                                                                                                                                  case
                                                                                                                                                                      ipv17_salyQ
                                                                                                                                                                  of
                                                                                                                                                                  { GHC.Event.Array.AC ww3_salyS [Occ=Once!]
                                                                                                                                                                                       _ [Occ=Dead]
                                                                                                                                                                                       ww5_salyU ->
                                                                                                                                                                        case
                                                                                                                                                                            ww3_salyS
                                                                                                                                                                        of
                                                                                                                                                                        { GHC.ForeignPtr.ForeignPtr ww7_salyW [Occ=Once]
                                                                                                                                                                                                    ww8_salyX [Occ=Once] ->
                                                                                                                                                                              case
                                                                                                                                                                                  i_salyL
                                                                                                                                                                              of
                                                                                                                                                                              { GHC.Types.I# ww10_salyZ ->
                                                                                                                                                                                    case
                                                                                                                                                                                        <# [ww10_salyZ
                                                                                                                                                                                            0#]
                                                                                                                                                                                    of
                                                                                                                                                                                    { __DEFAULT ->
                                                                                                                                                                                          case
                                                                                                                                                                                              >=# [ww10_salyZ
                                                                                                                                                                                                   ww5_salyU]
                                                                                                                                                                                          of
                                                                                                                                                                                          { __DEFAULT ->
                                                                                                                                                                                                case
                                                                                                                                                                                                    *# [ww10_salyZ
                                                                                                                                                                                                        8#]
                                                                                                                                                                                                of
                                                                                                                                                                                                sat_salz3
                                                                                                                                                                                                { __DEFAULT ->
                                                                                                                                                                                                      case
                                                                                                                                                                                                          plusAddr# [ww7_salyW
                                                                                                                                                                                                                     sat_salz3]
                                                                                                                                                                                                      of
                                                                                                                                                                                                      addr_salz2 [Dmd=<S,U>]
                                                                                                                                                                                                      { __DEFAULT ->
                                                                                                                                                                                                            case
                                                                                                                                                                                                                writeInt32OffAddr# [addr_salz2
                                                                                                                                                                                                                                    0#
                                                                                                                                                                                                                                    ipv9_salyn
                                                                                                                                                                                                                                    ipv16_salyP]
                                                                                                                                                                                                            of
                                                                                                                                                                                                            s2_salz4
                                                                                                                                                                                                            { __DEFAULT ->
                                                                                                                                                                                                                  case
                                                                                                                                                                                                                      plusAddr# [addr_salz2
                                                                                                                                                                                                                                 4#]
                                                                                                                                                                                                                  of
                                                                                                                                                                                                                  sat_salz5
                                                                                                                                                                                                                  { __DEFAULT ->
                                                                                                                                                                                                                        case
                                                                                                                                                                                                                            writeInt16OffAddr# [sat_salz5
                                                                                                                                                                                                                                                0#
                                                                                                                                                                                                                                                wild7_salyN
                                                                                                                                                                                                                                                s2_salz4]
                                                                                                                                                                                                                        of
                                                                                                                                                                                                                        s1_salz6
                                                                                                                                                                                                                        { __DEFAULT ->
                                                                                                                                                                                                                              case
                                                                                                                                                                                                                                  plusAddr# [addr_salz2
                                                                                                                                                                                                                                             6#]
                                                                                                                                                                                                                              of
                                                                                                                                                                                                                              sat_salz7
                                                                                                                                                                                                                              { __DEFAULT ->
                                                                                                                                                                                                                                    case
                                                                                                                                                                                                                                        writeInt16OffAddr# [sat_salz7
                                                                                                                                                                                                                                                            0#
                                                                                                                                                                                                                                                            0#
                                                                                                                                                                                                                                                            s1_salz6]
                                                                                                                                                                                                                                    of
                                                                                                                                                                                                                                    s3_salz8
                                                                                                                                                                                                                                    { __DEFAULT ->
                                                                                                                                                                                                                                          case
                                                                                                                                                                                                                                              touch# [ww8_salyX
                                                                                                                                                                                                                                                      s3_salz8]
                                                                                                                                                                                                                                          of
                                                                                                                                                                                                                                          s'_salz9
                                                                                                                                                                                                                                          { __DEFAULT ->
                                                                                                                                                                                                                                                case
                                                                                                                                                                                                                                                    +# [ww1_salyh
                                                                                                                                                                                                                                                        8#]
                                                                                                                                                                                                                                                of
                                                                                                                                                                                                                                                sat_salza
                                                                                                                                                                                                                                                { __DEFAULT ->
                                                                                                                                                                                                                                                      $wgo_salyg
                                                                                                                                                                                                                                                          sat_salza
                                                                                                                                                                                                                                                          s'_salz9;
                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                          };
                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                              };
                                                                                                                                                                                                                        };
                                                                                                                                                                                                                  };
                                                                                                                                                                                                            };
                                                                                                                                                                                                      };
                                                                                                                                                                                                };
                                                                                                                                                                                            1# ->
                                                                                                                                                                                                GHC.Event.Array.$wlvl
                                                                                                                                                                                                    ww5_salyU
                                                                                                                                                                                                    ww10_salyZ;
                                                                                                                                                                                          };
                                                                                                                                                                                      1# ->
                                                                                                                                                                                          GHC.Event.Array.$wlvl
                                                                                                                                                                                              ww5_salyU
                                                                                                                                                                                              ww10_salyZ;
                                                                                                                                                                                    };
                                                                                                                                                                              };
                                                                                                                                                                        };
                                                                                                                                                                  };
                                                                                                                                                            };
                                                                                                                                                        0# ->
                                                                                                                                                            case
                                                                                                                                                                lvl10_rajBj
                                                                                                                                                                    ary_salwD
                                                                                                                                                                    i_salyL
                                                                                                                                                                    ipv14_salyF
                                                                                                                                                            of
                                                                                                                                                            { (#,#) ipv16_salze [Occ=Once]
                                                                                                                                                                    _ [Occ=Dead] ->
                                                                                                                                                                  case
                                                                                                                                                                      +# [ww1_salyh
                                                                                                                                                                          8#]
                                                                                                                                                                  of
                                                                                                                                                                  sat_salzg
                                                                                                                                                                  { __DEFAULT ->
                                                                                                                                                                        $wgo_salyg
                                                                                                                                                                            sat_salzg
                                                                                                                                                                            ipv16_salze;
                                                                                                                                                                  };
                                                                                                                                                            };
                                                                                                                                                      };
                                                                                                                                                };
                                                                                                                                          };
                                                                                                                                    };
                                                                                                                              0# ->
                                                                                                                                  let {
                                                                                                                                    sat_salzh [Occ=Once]
                                                                                                                                      :: GHC.Event.Poll.PollFd
                                                                                                                                    [LclId] =
                                                                                                                                        CCCS GHC.Event.Poll.PollFd! [ipv9_salyn
                                                                                                                                                                     ipv11_salyr
                                                                                                                                                                     0#];
                                                                                                                                  } in 
                                                                                                                                    case
                                                                                                                                        GHC.Event.Array.$wsnoc
                                                                                                                                            GHC.Event.Poll.$fStorablePollFd
                                                                                                                                            dt1_salwm
                                                                                                                                            sat_salzh
                                                                                                                                            ipv12_salyu
                                                                                                                                    of
                                                                                                                                    { (#,#) ipv14_salzj [Occ=Once]
                                                                                                                                            _ [Occ=Dead] ->
                                                                                                                                          case
                                                                                                                                              +# [ww1_salyh
                                                                                                                                                  8#]
                                                                                                                                          of
                                                                                                                                          sat_salzl
                                                                                                                                          { __DEFAULT ->
                                                                                                                                                $wgo_salyg
                                                                                                                                                    sat_salzl
                                                                                                                                                    ipv14_salzj;
                                                                                                                                          };
                                                                                                                                    };
                                                                                                                            };
                                                                                                                      };
                                                                                                                };
                                                                                                          };
                                                                                                    };
                                                                                              };
                                                                                        };
                                                                                    1# ->
                                                                                        exit_salwF
                                                                                            w1_salyi;
                                                                                  };
                                                                        } in 
                                                                          $wgo_salyg 0# ipv6_salwu;
                                                                };
                                                        };
                                                  };
                                            };
                                  } in 
                                    case ipv5_salwp of {
                                      __DEFAULT ->
                                          case takeMVar# [dt_salwl ipv4_salwo] of {
                                            (#,#) ipv6_salzo [Occ=Once] ipv7_salzp [Occ=Once] ->
                                                let {
                                                  sat_salzq [Occ=Once]
                                                    :: GHC.Event.Array.Array GHC.Event.Poll.PollFd
                                                  [LclId] =
                                                      CCCS GHC.STRef.STRef! [ipv3_salwj];
                                                } in 
                                                  case
                                                      putMVar# [dt_salwl sat_salzq ipv6_salzo]
                                                  of
                                                  s2#_salzr
                                                  { __DEFAULT ->
                                                        case ipv7_salzp of {
                                                          GHC.STRef.STRef ww1_salzt [Occ=Once] ->
                                                              $w$j_salwq s2#_salzr ww1_salzt;
                                                        };
                                                  };
                                          };
                                      0# ->
                                          let {
                                            sat_salzA [Occ=Once]
                                              :: GHC.Prim.State# GHC.Prim.RealWorld
                                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                       GHC.Event.Array.Array
                                                         GHC.Event.Poll.PollFd #)
                                            [LclId] =
                                                [ipv3_salwj dt_salwl] \r [s_salzu]
                                                    case takeMVar# [dt_salwl s_salzu] of {
                                                      (#,#) ipv6_salzw [Occ=Once]
                                                            ipv7_salzx [Occ=Once] ->
                                                          let {
                                                            sat_salzy [Occ=Once]
                                                              :: GHC.Event.Array.Array
                                                                   GHC.Event.Poll.PollFd
                                                            [LclId] =
                                                                CCCS GHC.STRef.STRef! [ipv3_salwj];
                                                          } in 
                                                            case
                                                                putMVar# [dt_salwl
                                                                          sat_salzy
                                                                          ipv6_salzw]
                                                            of
                                                            s2#_salzz
                                                            { __DEFAULT ->
                                                                  (#,#) [s2#_salzz ipv7_salzx];
                                                            };
                                                    };
                                          } in 
                                            case maskAsyncExceptions# [sat_salzA ipv4_salwo] of {
                                              (#,#) ipv6_salzC [Occ=Once] ipv7_salzD [Occ=Once] ->
                                                  case ipv7_salzD of {
                                                    GHC.STRef.STRef ww1_salzF [Occ=Once] ->
                                                        $w$j_salwq ipv6_salzC ww1_salzF;
                                                  };
                                            };
                                    };
                            };
                      };
                };
        };

GHC.Event.Poll.new4
  :: GHC.Event.Poll.Poll
     -> System.Posix.Types.Fd
     -> GHC.Event.Internal.Event
     -> GHC.Event.Internal.Event
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
[GblId,
 Arity=5,
 Str=<S(SL),1*U(U,A)><L,1*U(U)><L,1*U(U)><L,1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [p_salzG fd_salzH oevt_salzI nevt_salzJ eta_salzK]
        case p_salzG of {
          GHC.Event.Poll.Poll dt_salzM [Occ=Once] _ [Occ=Dead] ->
              let {
                sat_salAn [Occ=Once]
                  :: GHC.Event.Array.Array GHC.Event.Poll.PollFd
                     -> GHC.Types.IO GHC.Types.Bool
                [LclId] =
                    [fd_salzH oevt_salzI nevt_salzJ] \r [ary_salzO s_salzP]
                        case ary_salzO of {
                          GHC.STRef.STRef ww1_salzR [Occ=Once] ->
                              let {
                                sat_salAj [Occ=Once] :: GHC.Event.Poll.PollFd
                                [LclId] =
                                    [fd_salzH oevt_salzI nevt_salzJ] \u []
                                        case fd_salzH of {
                                          GHC.Int.I32# dt3_salzT [Occ=Once*] ->
                                              case nevt_salzJ of {
                                                GHC.Types.I# x#_salzV ->
                                                    case andI# [x#_salzV 1#] of {
                                                      __DEFAULT ->
                                                          case andI# [x#_salzV 2#] of {
                                                            __DEFAULT ->
                                                                case oevt_salzI of {
                                                                  GHC.Types.I# x#1_salzZ ->
                                                                      case andI# [x#1_salzZ 1#] of {
                                                                        __DEFAULT ->
                                                                            case
                                                                                andI# [x#1_salzZ 2#]
                                                                            of
                                                                            { __DEFAULT ->
                                                                                  GHC.Event.Poll.PollFd [dt3_salzT
                                                                                                         5#
                                                                                                         5#];
                                                                              0# ->
                                                                                  GHC.Event.Poll.PollFd [dt3_salzT
                                                                                                         5#
                                                                                                         1#];
                                                                            };
                                                                        0# ->
                                                                            case
                                                                                andI# [x#1_salzZ 2#]
                                                                            of
                                                                            { __DEFAULT ->
                                                                                  GHC.Event.Poll.PollFd [dt3_salzT
                                                                                                         5#
                                                                                                         4#];
                                                                              0# ->
                                                                                  GHC.Event.Poll.PollFd [dt3_salzT
                                                                                                         5#
                                                                                                         0#];
                                                                            };
                                                                      };
                                                                };
                                                            0# ->
                                                                case oevt_salzI of {
                                                                  GHC.Types.I# x#1_salA4 ->
                                                                      case andI# [x#1_salA4 1#] of {
                                                                        __DEFAULT ->
                                                                            case
                                                                                andI# [x#1_salA4 2#]
                                                                            of
                                                                            { __DEFAULT ->
                                                                                  GHC.Event.Poll.PollFd [dt3_salzT
                                                                                                         1#
                                                                                                         5#];
                                                                              0# ->
                                                                                  GHC.Event.Poll.PollFd [dt3_salzT
                                                                                                         1#
                                                                                                         1#];
                                                                            };
                                                                        0# ->
                                                                            case
                                                                                andI# [x#1_salA4 2#]
                                                                            of
                                                                            { __DEFAULT ->
                                                                                  GHC.Event.Poll.PollFd [dt3_salzT
                                                                                                         1#
                                                                                                         4#];
                                                                              0# ->
                                                                                  GHC.Event.Poll.PollFd [dt3_salzT
                                                                                                         1#
                                                                                                         0#];
                                                                            };
                                                                      };
                                                                };
                                                          };
                                                      0# ->
                                                          case andI# [x#_salzV 2#] of {
                                                            __DEFAULT ->
                                                                case oevt_salzI of {
                                                                  GHC.Types.I# x#1_salAa ->
                                                                      case andI# [x#1_salAa 1#] of {
                                                                        __DEFAULT ->
                                                                            case
                                                                                andI# [x#1_salAa 2#]
                                                                            of
                                                                            { __DEFAULT ->
                                                                                  GHC.Event.Poll.PollFd [dt3_salzT
                                                                                                         4#
                                                                                                         5#];
                                                                              0# ->
                                                                                  GHC.Event.Poll.PollFd [dt3_salzT
                                                                                                         4#
                                                                                                         1#];
                                                                            };
                                                                        0# ->
                                                                            case
                                                                                andI# [x#1_salAa 2#]
                                                                            of
                                                                            { __DEFAULT ->
                                                                                  GHC.Event.Poll.PollFd [dt3_salzT
                                                                                                         4#
                                                                                                         4#];
                                                                              0# ->
                                                                                  GHC.Event.Poll.PollFd [dt3_salzT
                                                                                                         4#
                                                                                                         0#];
                                                                            };
                                                                      };
                                                                };
                                                            0# ->
                                                                case oevt_salzI of {
                                                                  GHC.Types.I# x#1_salAf ->
                                                                      case andI# [x#1_salAf 1#] of {
                                                                        __DEFAULT ->
                                                                            case
                                                                                andI# [x#1_salAf 2#]
                                                                            of
                                                                            { __DEFAULT ->
                                                                                  GHC.Event.Poll.PollFd [dt3_salzT
                                                                                                         0#
                                                                                                         5#];
                                                                              0# ->
                                                                                  GHC.Event.Poll.PollFd [dt3_salzT
                                                                                                         0#
                                                                                                         1#];
                                                                            };
                                                                        0# ->
                                                                            case
                                                                                andI# [x#1_salAf 2#]
                                                                            of
                                                                            { __DEFAULT ->
                                                                                  GHC.Event.Poll.PollFd [dt3_salzT
                                                                                                         0#
                                                                                                         4#];
                                                                              0# ->
                                                                                  GHC.Event.Poll.PollFd [dt3_salzT
                                                                                                         0#
                                                                                                         0#];
                                                                            };
                                                                      };
                                                                };
                                                          };
                                                    };
                                              };
                                        };
                              } in 
                                case
                                    GHC.Event.Array.$wsnoc
                                        GHC.Event.Poll.$fStorablePollFd ww1_salzR sat_salAj s_salzP
                                of
                                { (#,#) ipv_salAl [Occ=Once] _ [Occ=Dead] ->
                                      (#,#) [ipv_salAl GHC.Types.True];
                                };
                        };
              } in  GHC.Conc.Sync.$wwithMVar dt_salzM sat_salAn eta_salzK;
        };

GHC.Event.Poll.new2
  :: GHC.Event.Poll.Poll
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=2, Caf=NoCafRefs, Str=<L,A><S,U>, Unf=OtherCon []] =
    [] \r [ds_salAo s_salAp] (#,#) [s_salAp GHC.Tuple.()];

GHC.Event.Poll.new1
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Event.Internal.Backend #)
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [s_salAq]
        case newMutVar# [GHC.ForeignPtr.NoFinalizers s_salAq] of {
          (#,#) ipv_salAs [Occ=Once] ipv1_salAt [Occ=Once] ->
              let {
                sat_salAu [Occ=Once] :: GHC.ForeignPtr.ForeignPtrContents
                [LclId] =
                    CCCS GHC.ForeignPtr.PlainForeignPtr! [ipv1_salAt]; } in
              let {
                sat_salAv [Occ=Once]
                  :: GHC.ForeignPtr.ForeignPtr GHC.Event.Poll.PollFd
                [LclId] =
                    CCCS GHC.ForeignPtr.ForeignPtr! [__NULL sat_salAu]; } in
              let {
                sat_salAw [Occ=Once] :: GHC.Event.Array.AC GHC.Event.Poll.PollFd
                [LclId] =
                    CCCS GHC.Event.Array.AC! [sat_salAv 0# 0#];
              } in 
                case newMutVar# [sat_salAw ipv_salAs] of {
                  (#,#) ipv2_salAy [Occ=Once] ipv3_salAz [Occ=Once] ->
                      case newMVar# [ipv2_salAy] of {
                        (#,#) ipv4_salAB [Occ=Once] ipv5_salAC ->
                            let {
                              sat_salAD [Occ=Once] :: GHC.Event.Array.Array GHC.Event.Poll.PollFd
                              [LclId] =
                                  CCCS GHC.STRef.STRef! [ipv3_salAz];
                            } in 
                              case putMVar# [ipv5_salAC sat_salAD ipv4_salAB] of s2#_salAE {
                                __DEFAULT ->
                                    case newMutVar# [GHC.ForeignPtr.NoFinalizers s2#_salAE] of {
                                      (#,#) ipv6_salAG [Occ=Once] ipv7_salAH [Occ=Once] ->
                                          let {
                                            sat_salAI [Occ=Once]
                                              :: GHC.ForeignPtr.ForeignPtrContents
                                            [LclId] =
                                                CCCS GHC.ForeignPtr.PlainForeignPtr! [ipv7_salAH]; } in
                                          let {
                                            sat_salAJ [Occ=Once]
                                              :: GHC.ForeignPtr.ForeignPtr GHC.Event.Poll.PollFd
                                            [LclId] =
                                                CCCS GHC.ForeignPtr.ForeignPtr! [__NULL
                                                                                 sat_salAI]; } in
                                          let {
                                            sat_salAK [Occ=Once]
                                              :: GHC.Event.Array.AC GHC.Event.Poll.PollFd
                                            [LclId] =
                                                CCCS GHC.Event.Array.AC! [sat_salAJ 0# 0#];
                                          } in 
                                            case newMutVar# [sat_salAK ipv6_salAG] of {
                                              (#,#) ipv8_salAM [Occ=Once] ipv9_salAN [Occ=Once] ->
                                                  let {
                                                    sat_salAO [Occ=Once] :: GHC.Event.Poll.Poll
                                                    [LclId] =
                                                        CCCS GHC.Event.Poll.Poll! [ipv5_salAC
                                                                                   ipv9_salAN]; } in
                                                  let {
                                                    sat_salAP [Occ=Once]
                                                      :: GHC.Event.Internal.Backend
                                                    [LclId] =
                                                        CCCS GHC.Event.Internal.Backend! [sat_salAO
                                                                                          GHC.Event.Poll.new5
                                                                                          GHC.Event.Poll.new4
                                                                                          GHC.Event.Poll.new3
                                                                                          GHC.Event.Poll.new2];
                                                  } in  (#,#) [ipv8_salAM sat_salAP];
                                            };
                                    };
                              };
                      };
                };
        };

GHC.Event.Poll.new :: GHC.Types.IO GHC.Event.Internal.Backend
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [eta_B1] GHC.Event.Poll.new1 eta_B1;

GHC.Event.Poll.PollFd
  :: GHC.Prim.Int#
     -> GHC.Prim.Int# -> GHC.Prim.Int# -> GHC.Event.Poll.PollFd
[GblId[DataCon],
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,U><L,U><L,U>m,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.Event.Poll.PollFd [eta_B3 eta_B2 eta_B1];

GHC.Event.Poll.Poll
  :: GHC.Prim.MVar#
       GHC.Prim.RealWorld (GHC.Event.Array.Array GHC.Event.Poll.PollFd)
     -> GHC.Prim.MutVar#
          GHC.Prim.RealWorld (GHC.Event.Array.AC GHC.Event.Poll.PollFd)
     -> GHC.Event.Poll.Poll
[GblId[DataCon],
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U><L,U>m,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] GHC.Event.Poll.Poll [eta_B2 eta_B1];


==================== STG syntax: ====================
2018-03-16 16:05:21.975292163 UTC

GHC.Event.Poll.$WPollFd [InlPrag=INLINE[2]]
  :: System.Posix.Types.Fd
     -> GHC.Event.Poll.Event
     -> GHC.Event.Poll.Event
     -> GHC.Event.Poll.PollFd
[GblId[DataConWrapper],
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,U><S,U><S,U>m,
 Unf=OtherCon []] =
    [] \r [dt_sals6 dt_sals7 dt_sals8]
        case dt_sals6 of {
          GHC.Int.I32# dt_salsa [Occ=Once] ->
              case dt_sals7 of {
                GHC.Int.I16# dt_salsc [Occ=Once] ->
                    case dt_sals8 of {
                      GHC.Int.I16# dt_salse [Occ=Once] ->
                          GHC.Event.Poll.PollFd [dt_salsa dt_salsc dt_salse];
                    };
              };
        };

GHC.Event.Poll.$WPoll [InlPrag=INLINE[2]]
  :: GHC.MVar.MVar (GHC.Event.Array.Array GHC.Event.Poll.PollFd)
     -> GHC.Event.Array.Array GHC.Event.Poll.PollFd
     -> GHC.Event.Poll.Poll
[GblId[DataConWrapper],
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,U><S,U>m,
 Unf=OtherCon []] =
    [] \r [dt_salsf dt_salsg]
        case dt_salsf of {
          GHC.MVar.MVar dt_salsi [Occ=Once] ->
              case dt_salsg of {
                GHC.STRef.STRef dt_salsk [Occ=Once] ->
                    GHC.Event.Poll.Poll [dt_salsi dt_salsk];
              };
        };

GHC.Event.Poll.$fStorablePollFd_$calignment
  :: GHC.Event.Poll.PollFd -> GHC.Types.Int
[GblId, Arity=1, Caf=NoCafRefs, Str=<L,A>m, Unf=OtherCon []] =
    [] \r [ds_salsl] Foreign.Storable.$fStorableBool7;

GHC.Event.Poll.$fStorablePollFd7 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [8#];

GHC.Event.Poll.$fStorablePollFd_$csizeOf
  :: GHC.Event.Poll.PollFd -> GHC.Types.Int
[GblId, Arity=1, Caf=NoCafRefs, Str=<L,A>m, Unf=OtherCon []] =
    [] \r [ds_salsm] GHC.Event.Poll.$fStorablePollFd7;

GHC.Event.Poll.$fStorablePollFd2
  :: GHC.Ptr.Ptr GHC.Event.Poll.PollFd
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Event.Poll.PollFd #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ptr_salsn void_0E]
        case ptr_salsn of {
          GHC.Ptr.Ptr addr_salsq ->
              case readInt32OffAddr# [addr_salsq 0# GHC.Prim.void#] of {
                Unit# ipv1_salst [Occ=Once] ->
                    case plusAddr# [addr_salsq 4#] of sat_salsu {
                      __DEFAULT ->
                          case readInt16OffAddr# [sat_salsu 0# GHC.Prim.void#] of {
                            Unit# ipv3_salsx [Occ=Once] ->
                                case plusAddr# [addr_salsq 6#] of sat_salsy {
                                  __DEFAULT ->
                                      case readInt16OffAddr# [sat_salsy 0# GHC.Prim.void#] of {
                                        Unit# ipv5_salsB [Occ=Once] ->
                                            let {
                                              sat_salsC [Occ=Once] :: GHC.Event.Poll.PollFd
                                              [LclId] =
                                                  CCCS GHC.Event.Poll.PollFd! [ipv1_salst
                                                                               ipv3_salsx
                                                                               ipv5_salsB];
                                            } in  Unit# [sat_salsC];
                                      };
                                };
                          };
                    };
              };
        };

GHC.Event.Poll.$fStorablePollFd6
  :: GHC.Ptr.Ptr GHC.Event.Poll.PollFd
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Event.Poll.PollFd #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ptr_salsD off_salsE void_0E]
        case ptr_salsD of {
          GHC.Ptr.Ptr addr_salsH [Occ=Once] ->
              case off_salsE of {
                GHC.Types.I# x_salsJ [Occ=Once] ->
                    case *# [x_salsJ 8#] of sat_salsL {
                      __DEFAULT ->
                          case plusAddr# [addr_salsH sat_salsL] of addr1_salsK [Dmd=<S,U>] {
                            __DEFAULT ->
                                case readInt32OffAddr# [addr1_salsK 0# GHC.Prim.void#] of {
                                  Unit# ipv1_salsO [Occ=Once] ->
                                      case plusAddr# [addr1_salsK 4#] of sat_salsP {
                                        __DEFAULT ->
                                            case
                                                readInt16OffAddr# [sat_salsP 0# GHC.Prim.void#]
                                            of
                                            { Unit# ipv3_salsS [Occ=Once] ->
                                                  case plusAddr# [addr1_salsK 6#] of sat_salsT {
                                                    __DEFAULT ->
                                                        case
                                                            readInt16OffAddr# [sat_salsT
                                                                               0#
                                                                               GHC.Prim.void#]
                                                        of
                                                        { Unit# ipv5_salsW [Occ=Once] ->
                                                              let {
                                                                sat_salsX [Occ=Once]
                                                                  :: GHC.Event.Poll.PollFd
                                                                [LclId] =
                                                                    CCCS GHC.Event.Poll.PollFd! [ipv1_salsO
                                                                                                 ipv3_salsS
                                                                                                 ipv5_salsW];
                                                              } in  Unit# [sat_salsX];
                                                        };
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.Event.Poll.$fStorablePollFd4
  :: forall b.
     GHC.Ptr.Ptr b
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Event.Poll.PollFd #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ptr_salsY off_salsZ void_0E]
        case ptr_salsY of {
          GHC.Ptr.Ptr addr_salt2 [Occ=Once] ->
              case off_salsZ of {
                GHC.Types.I# d_salt4 [Occ=Once] ->
                    case plusAddr# [addr_salt2 d_salt4] of addr1_salt5 [Dmd=<S,U>] {
                      __DEFAULT ->
                          case readInt32OffAddr# [addr1_salt5 0# GHC.Prim.void#] of {
                            Unit# ipv1_salt8 [Occ=Once] ->
                                case plusAddr# [addr1_salt5 4#] of sat_salt9 {
                                  __DEFAULT ->
                                      case readInt16OffAddr# [sat_salt9 0# GHC.Prim.void#] of {
                                        Unit# ipv3_saltc [Occ=Once] ->
                                            case plusAddr# [addr1_salt5 6#] of sat_saltd {
                                              __DEFAULT ->
                                                  case
                                                      readInt16OffAddr# [sat_saltd
                                                                         0#
                                                                         GHC.Prim.void#]
                                                  of
                                                  { Unit# ipv5_saltg [Occ=Once] ->
                                                        let {
                                                          sat_salth [Occ=Once]
                                                            :: GHC.Event.Poll.PollFd
                                                          [LclId] =
                                                              CCCS GHC.Event.Poll.PollFd! [ipv1_salt8
                                                                                           ipv3_saltc
                                                                                           ipv5_saltg];
                                                        } in  Unit# [sat_salth];
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.Event.Poll.$fStorablePollFd1
  :: GHC.Ptr.Ptr GHC.Event.Poll.PollFd
     -> GHC.Event.Poll.PollFd
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(SSS),1*U(U,U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ptr_salti p_saltj void_0E]
        case ptr_salti of {
          GHC.Ptr.Ptr addr_saltm ->
              case p_saltj of {
                GHC.Event.Poll.PollFd dt_salto [Occ=Once]
                                      dt1_saltp [Occ=Once]
                                      dt2_saltq [Occ=Once] ->
                    case
                        writeInt32OffAddr# [addr_saltm 0# dt_salto GHC.Prim.void#]
                    of
                    s2_saltr
                    { (##) ->
                          case plusAddr# [addr_saltm 4#] of sat_salts {
                            __DEFAULT ->
                                case
                                    writeInt16OffAddr# [sat_salts 0# dt1_saltp GHC.Prim.void#]
                                of
                                s1_saltt
                                { (##) ->
                                      case plusAddr# [addr_saltm 6#] of sat_saltu {
                                        __DEFAULT ->
                                            case
                                                writeInt16OffAddr# [sat_saltu
                                                                    0#
                                                                    dt2_saltq
                                                                    GHC.Prim.void#]
                                            of
                                            s3_saltv
                                            { (##) -> Unit# [GHC.Tuple.()];
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.Event.Poll.$fStorablePollFd5
  :: GHC.Ptr.Ptr GHC.Event.Poll.PollFd
     -> GHC.Types.Int
     -> GHC.Event.Poll.PollFd
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(SSS),1*U(U,U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ptr_saltw off_saltx val_salty void_0E]
        case ptr_saltw of {
          GHC.Ptr.Ptr addr_saltB [Occ=Once] ->
              case off_saltx of {
                GHC.Types.I# x_saltD [Occ=Once] ->
                    case val_salty of {
                      GHC.Event.Poll.PollFd dt_saltF [Occ=Once]
                                            dt1_saltG [Occ=Once]
                                            dt2_saltH [Occ=Once] ->
                          case *# [x_saltD 8#] of sat_saltJ {
                            __DEFAULT ->
                                case plusAddr# [addr_saltB sat_saltJ] of addr1_saltI [Dmd=<S,U>] {
                                  __DEFAULT ->
                                      case
                                          writeInt32OffAddr# [addr1_saltI
                                                              0#
                                                              dt_saltF
                                                              GHC.Prim.void#]
                                      of
                                      s2_saltK
                                      { (##) ->
                                            case plusAddr# [addr1_saltI 4#] of sat_saltL {
                                              __DEFAULT ->
                                                  case
                                                      writeInt16OffAddr# [sat_saltL
                                                                          0#
                                                                          dt1_saltG
                                                                          GHC.Prim.void#]
                                                  of
                                                  s1_saltM
                                                  { (##) ->
                                                        case
                                                            plusAddr# [addr1_saltI 6#]
                                                        of
                                                        sat_saltN
                                                        { __DEFAULT ->
                                                              case
                                                                  writeInt16OffAddr# [sat_saltN
                                                                                      0#
                                                                                      dt2_saltH
                                                                                      GHC.Prim.void#]
                                                              of
                                                              s3_saltO
                                                              { (##) -> Unit# [GHC.Tuple.()];
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.Event.Poll.$fStorablePollFd3
  :: forall b.
     GHC.Ptr.Ptr b
     -> GHC.Types.Int
     -> GHC.Event.Poll.PollFd
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(SSS),1*U(U,U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ptr_saltP off_saltQ eta_saltR void_0E]
        case ptr_saltP of {
          GHC.Ptr.Ptr addr_saltU [Occ=Once] ->
              case off_saltQ of {
                GHC.Types.I# d_saltW [Occ=Once] ->
                    case eta_saltR of {
                      GHC.Event.Poll.PollFd dt_saltY [Occ=Once]
                                            dt1_saltZ [Occ=Once]
                                            dt2_salu0 [Occ=Once] ->
                          case plusAddr# [addr_saltU d_saltW] of addr1_salu1 [Dmd=<S,U>] {
                            __DEFAULT ->
                                case
                                    writeInt32OffAddr# [addr1_salu1 0# dt_saltY GHC.Prim.void#]
                                of
                                s2_salu2
                                { (##) ->
                                      case plusAddr# [addr1_salu1 4#] of sat_salu3 {
                                        __DEFAULT ->
                                            case
                                                writeInt16OffAddr# [sat_salu3
                                                                    0#
                                                                    dt1_saltZ
                                                                    GHC.Prim.void#]
                                            of
                                            s1_salu4
                                            { (##) ->
                                                  case plusAddr# [addr1_salu1 6#] of sat_salu5 {
                                                    __DEFAULT ->
                                                        case
                                                            writeInt16OffAddr# [sat_salu5
                                                                                0#
                                                                                dt2_salu0
                                                                                GHC.Prim.void#]
                                                        of
                                                        s3_salu6
                                                        { (##) -> Unit# [GHC.Tuple.()];
                                                        };
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.Event.Poll.$fStorablePollFd [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable GHC.Event.Poll.PollFd
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [GHC.Event.Poll.$fStorablePollFd_$csizeOf
                                                GHC.Event.Poll.$fStorablePollFd_$calignment
                                                GHC.Event.Poll.$fStorablePollFd6
                                                GHC.Event.Poll.$fStorablePollFd5
                                                GHC.Event.Poll.$fStorablePollFd4
                                                GHC.Event.Poll.$fStorablePollFd3
                                                GHC.Event.Poll.$fStorablePollFd2
                                                GHC.Event.Poll.$fStorablePollFd1];

GHC.Event.Poll.$fStorableEvent [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable GHC.Event.Poll.Event
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [Foreign.Storable.$fStorableInt16_$calignment
                                                Foreign.Storable.$fStorableInt16_$calignment
                                                GHC.Storable.readInt16OffPtr1
                                                GHC.Storable.writeInt16OffPtr1
                                                Foreign.Storable.$fStorableInt9
                                                Foreign.Storable.$fStorableInt7
                                                Foreign.Storable.$fStorableInt6
                                                Foreign.Storable.$fStorableInt5];

GHC.Event.Poll.$fShowEvent2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Event "#;

GHC.Event.Poll.$w$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Event.Poll.Event -> GHC.Base.String -> GHC.Base.String
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,U><L,1*U(U)><L,U>,
 Unf=OtherCon []] =
    [] \r [ww_salu7 w_salu8 w1_salu9]
        case >=# [ww_salu7 11#] of {
          __DEFAULT ->
              let {
                sat_salug [Occ=Once] :: [GHC.Types.Char]
                [LclId] =
                    [w_salu8 w1_salu9] \u []
                        case w_salu8 of {
                          GHC.Int.I16# x#_saluc [Occ=Once] ->
                              case GHC.Show.$wshowSignedInt 11# x#_saluc w1_salu9 of {
                                (#,#) ww5_salue [Occ=Once] ww6_saluf [Occ=Once] ->
                                    : [ww5_salue ww6_saluf];
                              };
                        };
              } in 
                GHC.CString.unpackAppendCString#
                    GHC.Event.Poll.$fShowEvent2 sat_salug;
          1# ->
              let {
                sat_saluo [Occ=Once] :: [GHC.Types.Char]
                [LclId] =
                    [w_salu8 w1_salu9] \u []
                        let {
                          sat_salun [Occ=Once] :: [GHC.Types.Char]
                          [LclId] =
                              [w_salu8 w1_salu9] \u []
                                  case w_salu8 of {
                                    GHC.Int.I16# x#_salui [Occ=Once] ->
                                        let {
                                          sat_saluj [Occ=Once] :: GHC.Base.String
                                          [LclId] =
                                              CCCS :! [GHC.Show.$fShow(,)2 w1_salu9];
                                        } in 
                                          case GHC.Show.$wshowSignedInt 11# x#_salui sat_saluj of {
                                            (#,#) ww5_salul [Occ=Once] ww6_salum [Occ=Once] ->
                                                : [ww5_salul ww6_salum];
                                          };
                                  };
                        } in 
                          GHC.CString.unpackAppendCString#
                              GHC.Event.Poll.$fShowEvent2 sat_salun;
              } in  : [GHC.Show.$fShow(,)4 sat_saluo];
        };

GHC.Event.Poll.$fShowEvent_$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Int -> GHC.Event.Poll.Event -> GHC.Show.ShowS
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><L,1*U(U)><L,U>,
 Unf=OtherCon []] =
    [] \r [w_salup w1_saluq w2_salur]
        case w_salup of {
          GHC.Types.I# ww1_salut [Occ=Once] ->
              GHC.Event.Poll.$w$cshowsPrec ww1_salut w1_saluq w2_salur;
        };

GHC.Event.Poll.$fShowEvent_$cshow
  :: GHC.Event.Poll.Event -> GHC.Base.String
[GblId, Arity=1, Caf=NoCafRefs, Str=<L,1*U(U)>, Unf=OtherCon []] =
    [] \r [x_saluu]
        let {
          sat_saluA [Occ=Once] :: [GHC.Types.Char]
          [LclId] =
              [x_saluu] \u []
                  case x_saluu of {
                    GHC.Int.I16# x#_saluw [Occ=Once] ->
                        case GHC.Show.$wshowSignedInt 11# x#_saluw GHC.Types.[] of {
                          (#,#) ww5_saluy [Occ=Once] ww6_saluz [Occ=Once] ->
                              : [ww5_saluy ww6_saluz];
                        };
                  };
        } in 
          GHC.CString.unpackAppendCString#
              GHC.Event.Poll.$fShowEvent2 sat_saluA;

GHC.Event.Poll.$fShowEvent1
  :: GHC.Event.Poll.Event -> GHC.Show.ShowS
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,1*U(U)><L,U>,
 Unf=OtherCon []] =
    [] \r [w_saluB w1_saluC]
        GHC.Event.Poll.$w$cshowsPrec 0# w_saluB w1_saluC;

GHC.Event.Poll.$fShowEvent_$cshowList
  :: [GHC.Event.Poll.Event] -> GHC.Show.ShowS
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><L,U>,
 Unf=OtherCon []] =
    [] \r [ls_saluD s_saluE]
        GHC.Show.showList__ GHC.Event.Poll.$fShowEvent1 ls_saluD s_saluE;

GHC.Event.Poll.$fShowEvent [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show GHC.Event.Poll.Event
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Event.Poll.$fShowEvent_$cshowsPrec
                                    GHC.Event.Poll.$fShowEvent_$cshow
                                    GHC.Event.Poll.$fShowEvent_$cshowList];

GHC.Event.Poll.$fShowPollFd6 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "PollFd {"#;

GHC.Event.Poll.$fShowPollFd5 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "pfdFd = "#;

GHC.Event.Poll.$fShowPollFd4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "pfdEvents = "#;

GHC.Event.Poll.$fShowPollFd3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "pfdRevents = "#;

GHC.Event.Poll.$fShowPollFd2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "}"#;

GHC.Event.Poll.$w$cshowsPrec1 [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Base.String
     -> GHC.Base.String
[GblId, Arity=5, Str=<S,U><L,U><L,U><L,U><L,U>, Unf=OtherCon []] =
    [] \r [ww_saluF ww1_saluG ww2_saluH ww3_saluI w_saluJ]
        let {
          p_saluK [Occ=Once*!, Dmd=<L,1*C1(U)>] :: GHC.Show.ShowS
          [LclId, Arity=1, Str=<L,U>, Unf=OtherCon []] =
              sat-only [ww1_saluG ww2_saluH ww3_saluI] \r [x_saluL]
                  let {
                    sat_saluZ [Occ=Once] :: [GHC.Types.Char]
                    [LclId] =
                        [ww1_saluG ww2_saluH ww3_saluI x_saluL] \u []
                            let {
                              sat_saluY [Occ=Once] :: [GHC.Types.Char]
                              [LclId] =
                                  [ww1_saluG ww2_saluH ww3_saluI x_saluL] \u []
                                      let {
                                        sat_saluU [Occ=Once] :: GHC.Base.String
                                        [LclId] =
                                            [ww2_saluH ww3_saluI x_saluL] \u []
                                                let {
                                                  sat_saluT [Occ=Once, Dmd=<L,1*U>]
                                                    :: [GHC.Types.Char]
                                                  [LclId] =
                                                      [ww2_saluH ww3_saluI x_saluL] \s []
                                                          let {
                                                            sat_saluS [Occ=Once] :: [GHC.Types.Char]
                                                            [LclId] =
                                                                [ww2_saluH ww3_saluI x_saluL] \u []
                                                                    let {
                                                                      sat_saluR [Occ=Once]
                                                                        :: GHC.Base.String
                                                                      [LclId] =
                                                                          [ww3_saluI x_saluL] \u []
                                                                              let {
                                                                                sat_saluQ [Occ=Once,
                                                                                           Dmd=<L,1*U>]
                                                                                  :: [GHC.Types.Char]
                                                                                [LclId] =
                                                                                    [ww3_saluI
                                                                                     x_saluL] \s []
                                                                                        let {
                                                                                          sat_saluP [Occ=Once]
                                                                                            :: [GHC.Types.Char]
                                                                                          [LclId] =
                                                                                              [ww3_saluI
                                                                                               x_saluL] \u []
                                                                                                  let {
                                                                                                    sat_saluO [Occ=Once]
                                                                                                      :: GHC.Base.String
                                                                                                    [LclId] =
                                                                                                        [x_saluL] \u []
                                                                                                            GHC.CString.unpackAppendCString#
                                                                                                                GHC.Event.Poll.$fShowPollFd2
                                                                                                                x_saluL; } in
                                                                                                  let {
                                                                                                    sat_saluN [Occ=Once]
                                                                                                      :: GHC.Event.Poll.Event
                                                                                                    [LclId] =
                                                                                                        CCCS GHC.Int.I16#! [ww3_saluI];
                                                                                                  } in 
                                                                                                    GHC.Event.Poll.$w$cshowsPrec
                                                                                                        0#
                                                                                                        sat_saluN
                                                                                                        sat_saluO;
                                                                                        } in 
                                                                                          GHC.CString.unpackAppendCString#
                                                                                              GHC.Event.Poll.$fShowPollFd3
                                                                                              sat_saluP;
                                                                              } in 
                                                                                GHC.Base.++
                                                                                    GHC.Show.showCommaSpace1
                                                                                    sat_saluQ; } in
                                                                    let {
                                                                      sat_saluM [Occ=Once]
                                                                        :: GHC.Event.Poll.Event
                                                                      [LclId] =
                                                                          CCCS GHC.Int.I16#! [ww2_saluH];
                                                                    } in 
                                                                      GHC.Event.Poll.$w$cshowsPrec
                                                                          0# sat_saluM sat_saluR;
                                                          } in 
                                                            GHC.CString.unpackAppendCString#
                                                                GHC.Event.Poll.$fShowPollFd4
                                                                sat_saluS;
                                                } in 
                                                  GHC.Base.++ GHC.Show.showCommaSpace1 sat_saluT;
                                      } in 
                                        case GHC.Show.$wshowSignedInt 0# ww1_saluG sat_saluU of {
                                          (#,#) ww5_saluW [Occ=Once] ww6_saluX [Occ=Once] ->
                                              : [ww5_saluW ww6_saluX];
                                        };
                            } in 
                              GHC.CString.unpackAppendCString#
                                  GHC.Event.Poll.$fShowPollFd5 sat_saluY;
                  } in 
                    GHC.CString.unpackAppendCString#
                        GHC.Event.Poll.$fShowPollFd6 sat_saluZ;
        } in 
          case >=# [ww_saluF 11#] of {
            __DEFAULT -> p_saluK w_saluJ;
            1# ->
                let {
                  sat_salv2 [Occ=Once] :: [GHC.Types.Char]
                  [LclId] =
                      [w_saluJ p_saluK] \u []
                          let {
                            sat_salv1 [Occ=Once] :: GHC.Base.String
                            [LclId] =
                                CCCS :! [GHC.Show.$fShow(,)2 w_saluJ];
                          } in  p_saluK sat_salv1;
                } in  : [GHC.Show.$fShow(,)4 sat_salv2];
          };

GHC.Event.Poll.$fShowPollFd_$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Int -> GHC.Event.Poll.PollFd -> GHC.Show.ShowS
[GblId,
 Arity=3,
 Str=<S(S),1*U(U)><S(SSS),1*U(U,U,U)><L,U>,
 Unf=OtherCon []] =
    [] \r [w_salv3 w1_salv4 w2_salv5]
        case w_salv3 of {
          GHC.Types.I# ww1_salv7 [Occ=Once] ->
              case w1_salv4 of {
                GHC.Event.Poll.PollFd ww3_salv9 [Occ=Once]
                                      ww4_salva [Occ=Once]
                                      ww5_salvb [Occ=Once] ->
                    GHC.Event.Poll.$w$cshowsPrec1
                        ww1_salv7 ww3_salv9 ww4_salva ww5_salvb w2_salv5;
              };
        };

GHC.Event.Poll.$fShowPollFd7 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [0#];

GHC.Event.Poll.$fShowPollFd_$cshow
  :: GHC.Event.Poll.PollFd -> GHC.Base.String
[GblId, Arity=1, Str=<S(SSS),1*U(U,U,U)>, Unf=OtherCon []] =
    [] \r [x_salvc]
        case x_salvc of {
          GHC.Event.Poll.PollFd ww1_salve [Occ=Once]
                                ww2_salvf [Occ=Once]
                                ww3_salvg [Occ=Once] ->
              GHC.Event.Poll.$w$cshowsPrec1
                  0# ww1_salve ww2_salvf ww3_salvg GHC.Types.[];
        };

GHC.Event.Poll.$fShowPollFd1
  :: GHC.Event.Poll.PollFd -> GHC.Show.ShowS
[GblId, Arity=2, Str=<S(SSS),1*U(U,U,U)><L,U>, Unf=OtherCon []] =
    [] \r [w_salvh w1_salvi]
        case w_salvh of {
          GHC.Event.Poll.PollFd ww1_salvk [Occ=Once]
                                ww2_salvl [Occ=Once]
                                ww3_salvm [Occ=Once] ->
              GHC.Event.Poll.$w$cshowsPrec1
                  0# ww1_salvk ww2_salvl ww3_salvm w1_salvi;
        };

GHC.Event.Poll.$fShowPollFd_$cshowList
  :: [GHC.Event.Poll.PollFd] -> GHC.Show.ShowS
[GblId, Arity=2, Str=<S,1*U><L,U>, Unf=OtherCon []] =
    [] \r [ls_salvn s_salvo]
        GHC.Show.showList__ GHC.Event.Poll.$fShowPollFd1 ls_salvn s_salvo;

GHC.Event.Poll.$fShowPollFd [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show GHC.Event.Poll.PollFd
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Event.Poll.$fShowPollFd_$cshowsPrec
                                    GHC.Event.Poll.$fShowPollFd_$cshow
                                    GHC.Event.Poll.$fShowPollFd_$cshowList];

GHC.Event.Poll.$fEqEvent [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq GHC.Event.Poll.Event
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt16 GHC.Int.neInt16];

GHC.Event.Poll.pfdRevents
  :: GHC.Event.Poll.PollFd -> GHC.Event.Poll.Event
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLS),1*U(A,A,U)>m,
 Unf=OtherCon []] =
    [] \r [ds_salvp]
        case ds_salvp of {
          GHC.Event.Poll.PollFd _ [Occ=Dead]
                                _ [Occ=Dead]
                                dt2_salvt [Occ=Once] ->
              GHC.Int.I16# [dt2_salvt];
        };

GHC.Event.Poll.pfdEvents
  :: GHC.Event.Poll.PollFd -> GHC.Event.Poll.Event
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LSL),1*U(A,U,A)>m,
 Unf=OtherCon []] =
    [] \r [ds_salvu]
        case ds_salvu of {
          GHC.Event.Poll.PollFd _ [Occ=Dead]
                                dt1_salvx [Occ=Once]
                                _ [Occ=Dead] ->
              GHC.Int.I16# [dt1_salvx];
        };

GHC.Event.Poll.pfdFd
  :: GHC.Event.Poll.PollFd -> System.Posix.Types.Fd
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SLL),1*U(U,A,A)>m,
 Unf=OtherCon []] =
    [] \r [ds_salvz]
        case ds_salvz of {
          GHC.Event.Poll.PollFd dt_salvB [Occ=Once]
                                _ [Occ=Dead]
                                _ [Occ=Dead] ->
              GHC.Int.I32# [dt_salvB];
        };

GHC.Event.Poll.pollFd
  :: GHC.Event.Poll.Poll
     -> GHC.Event.Array.Array GHC.Event.Poll.PollFd
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LS),1*U(A,U)>m,
 Unf=OtherCon []] =
    [] \r [ds_salvE]
        case ds_salvE of {
          GHC.Event.Poll.Poll _ [Occ=Dead] dt1_salvH [Occ=Once] ->
              GHC.STRef.STRef [dt1_salvH];
        };

GHC.Event.Poll.pollChanges
  :: GHC.Event.Poll.Poll
     -> GHC.MVar.MVar (GHC.Event.Array.Array GHC.Event.Poll.PollFd)
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,A)>m,
 Unf=OtherCon []] =
    [] \r [ds_salvI]
        case ds_salvI of {
          GHC.Event.Poll.Poll dt_salvK [Occ=Once] _ [Occ=Dead] ->
              GHC.MVar.MVar [dt_salvK];
        };

GHC.Event.Poll.available [InlPrag=INLINE (sat-args=0)]
  :: GHC.Types.Bool
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.True! [];

GHC.Event.Poll.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

GHC.Event.Poll.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Poll.$trModule4];

GHC.Event.Poll.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.Event.Poll"#;

GHC.Event.Poll.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Poll.$trModule2];

GHC.Event.Poll.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [GHC.Event.Poll.$trModule3
                                     GHC.Event.Poll.$trModule1];

$krep_rajAW :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCShort
                                              GHC.Types.[]];

$krep1_rajAX :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [System.Posix.Types.$tcFd
                                              GHC.Types.[]];

GHC.Event.Poll.$tcEvent2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Event"#;

GHC.Event.Poll.$tcEvent1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Poll.$tcEvent2];

GHC.Event.Poll.$tcEvent :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [10782964843686049546##
                                    16589058175633483645##
                                    GHC.Event.Poll.$trModule
                                    GHC.Event.Poll.$tcEvent1
                                    0#
                                    GHC.Types.krep$*];

$krep2_rajAY :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.Poll.$tcEvent
                                              GHC.Types.[]];

GHC.Event.Poll.$tc'Event1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_rajAW $krep2_rajAY];

GHC.Event.Poll.$tc'Event3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Event"#;

GHC.Event.Poll.$tc'Event2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Poll.$tc'Event3];

GHC.Event.Poll.$tc'Event :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [14301517435728423362##
                                    8190957594797964970##
                                    GHC.Event.Poll.$trModule
                                    GHC.Event.Poll.$tc'Event2
                                    0#
                                    GHC.Event.Poll.$tc'Event1];

GHC.Event.Poll.$tcPollFd2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "PollFd"#;

GHC.Event.Poll.$tcPollFd1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Poll.$tcPollFd2];

GHC.Event.Poll.$tcPollFd :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [16228031948332168786##
                                    6382085973026785723##
                                    GHC.Event.Poll.$trModule
                                    GHC.Event.Poll.$tcPollFd1
                                    0#
                                    GHC.Types.krep$*];

$krep3_rajAZ :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.Poll.$tcPollFd
                                              GHC.Types.[]];

$krep4_rajB0 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_rajAY $krep3_rajAZ];

$krep5_rajB1 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_rajAY $krep4_rajB0];

GHC.Event.Poll.$tc'PollFd1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep1_rajAX $krep5_rajB1];

GHC.Event.Poll.$tc'PollFd3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'PollFd"#;

GHC.Event.Poll.$tc'PollFd2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Poll.$tc'PollFd3];

GHC.Event.Poll.$tc'PollFd :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [13628496348781941345##
                                    13702663238288085101##
                                    GHC.Event.Poll.$trModule
                                    GHC.Event.Poll.$tc'PollFd2
                                    0#
                                    GHC.Event.Poll.$tc'PollFd1];

$krep6_rajB2 :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep3_rajAZ GHC.Types.[]];

$krep7_rajB3 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.Array.$tcArray
                                              $krep6_rajB2];

$krep8_rajB4 :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep7_rajB3 GHC.Types.[]];

$krep9_rajB5 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.MVar.$tcMVar
                                              $krep8_rajB4];

GHC.Event.Poll.$tcPoll2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Poll"#;

GHC.Event.Poll.$tcPoll1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Poll.$tcPoll2];

GHC.Event.Poll.$tcPoll :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [13451464419968486054##
                                    9195109480934256969##
                                    GHC.Event.Poll.$trModule
                                    GHC.Event.Poll.$tcPoll1
                                    0#
                                    GHC.Types.krep$*];

$krep10_rajB6 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.Poll.$tcPoll
                                              GHC.Types.[]];

$krep11_rajB7 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep7_rajB3 $krep10_rajB6];

GHC.Event.Poll.$tc'Poll1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep9_rajB5 $krep11_rajB7];

GHC.Event.Poll.$tc'Poll3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Poll"#;

GHC.Event.Poll.$tc'Poll2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Poll.$tc'Poll3];

GHC.Event.Poll.$tc'Poll :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [5431567153781643515##
                                    15938353663250731731##
                                    GHC.Event.Poll.$trModule
                                    GHC.Event.Poll.$tc'Poll2
                                    0#
                                    GHC.Event.Poll.$tc'Poll1];

GHC.Event.Poll.$fBitsEvent [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits GHC.Event.Poll.Event
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [GHC.Event.Poll.$fEqEvent
                                     GHC.Int.$fBitsInt16_$c.&.
                                     GHC.Int.$fBitsInt16_$c.|.
                                     GHC.Int.$fBitsInt16_$cxor
                                     GHC.Int.$fBitsInt16_$ccomplement
                                     GHC.Int.$fBitsInt16_$cshift
                                     GHC.Int.$fBitsInt16_$crotate
                                     GHC.Int.$fBitsInt3
                                     GHC.Int.$fBitsInt16_$cbit
                                     GHC.Int.$fBitsInt16_$csetBit
                                     GHC.Int.$fBitsInt16_$cclearBit
                                     GHC.Int.$fBitsInt16_$ccomplementBit
                                     GHC.Int.$fBitsInt16_$ctestBit
                                     GHC.Int.$fBitsInt16_$cbitSizeMaybe
                                     GHC.Int.$fBitsInt16_$cfiniteBitSize
                                     GHC.Int.$fBitsInt16_$cisSigned
                                     GHC.Int.$fBitsInt16_$cshiftL
                                     GHC.Int.$fBitsInt16_$cunsafeShiftL
                                     GHC.Int.$fBitsInt16_$cshiftR
                                     GHC.Int.$fBitsInt16_$cunsafeShiftR
                                     GHC.Int.$fBitsInt16_$crotateL
                                     GHC.Int.$fBitsInt16_$crotateR
                                     GHC.Int.$fBitsInt16_$cpopCount];

GHC.Event.Poll.$fFiniteBitsEvent [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits GHC.Event.Poll.Event
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [GHC.Event.Poll.$fBitsEvent
                                           GHC.Int.$fBitsInt16_$cfiniteBitSize
                                           GHC.Int.$fFiniteBitsInt16_$ccountLeadingZeros
                                           GHC.Int.$fFiniteBitsInt16_$ccountTrailingZeros];

GHC.Event.Poll.$fNumEvent [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num GHC.Event.Poll.Event
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Int.$fNumInt16_$c+
                                  GHC.Int.$fNumInt16_$c-
                                  GHC.Int.$fNumInt16_$c*
                                  GHC.Int.$fNumInt16_$cnegate
                                  GHC.Int.$fNumInt16_$cabs
                                  GHC.Int.$fNumInt16_$csignum
                                  GHC.Int.$fNumInt16_$cfromInteger];

lvl_rajB8 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "modifyFdOnce not supported in Poll backend"#;

GHC.Event.Poll.new3
  :: GHC.Event.Poll.Poll
     -> System.Posix.Types.Fd
     -> GHC.Event.Internal.Event
     -> GHC.Types.IO GHC.Types.Bool
[GblId, Str=x] =
    [] \u []
        case GHC.CString.unpackCString# lvl_rajB8 of sat_salvM {
          __DEFAULT -> GHC.Err.errorWithoutStackTrace sat_salvM;
        };

$wc_pollLoop_rajB9
  :: GHC.Prim.Addr#
     -> GHC.Prim.Word#
     -> GHC.Prim.Int#
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, Foreign.C.Types.CInt #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S,U><S,U><S,U><S,U>,
 Unf=OtherCon []] =
    sat-only [] \r [ww_salvN ww1_salvO ww2_salvP void_0E]
        case <=# [ww2_salvP 2147483647#] of {
          __DEFAULT ->
              case
                  __pkg_ccall_GC base-4.11.0.0 [ww_salvN
                                                ww1_salvO
                                                2147483647#
                                                GHC.Prim.void#]
              of
              { Unit# ds1_salvV [Occ=Once] ->
                    case narrow32Int# [ds1_salvV] of wild1_salvW {
                      __DEFAULT ->
                          let {
                            sat_salvX [Occ=Once] :: Foreign.C.Types.CInt
                            [LclId] =
                                CCCS GHC.Int.I32#! [wild1_salvW];
                          } in  Unit# [sat_salvX];
                      0# ->
                          case -# [ww2_salvP 2147483647#] of sat_salvY {
                            __DEFAULT ->
                                $wc_pollLoop_rajB9 ww_salvN ww1_salvO sat_salvY GHC.Prim.void#;
                          };
                    };
              };
          1# ->
              case narrow32Int# [ww2_salvP] of sat_salw0 {
                __DEFAULT ->
                    case
                        __pkg_ccall_GC base-4.11.0.0 [ww_salvN
                                                      ww1_salvO
                                                      sat_salw0
                                                      GHC.Prim.void#]
                    of
                    { Unit# ds1_salw3 [Occ=Once] ->
                          case narrow32Int# [ds1_salw3] of sat_salw4 {
                            __DEFAULT ->
                                let {
                                  sat_salw5 [Occ=Once] :: GHC.Int.Int32
                                  [LclId] =
                                      CCCS GHC.Int.I32#! [sat_salw4];
                                } in  Unit# [sat_salw5];
                          };
                    };
              };
        };

lvl1_rajBa :: GHC.Int.Int32
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Int.I32#! [0#];

lvl2_rajBb :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "c_poll"#;

lvl3_rajBc :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl2_rajBb;

lvl4_rajBd :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "reworkFd: event not found"#;

lvl5_rajBe :: GHC.Types.IO ()
[GblId, Str=x] =
    [] \u []
        case GHC.CString.unpackCString# lvl4_rajBd of sat_salw6 {
          __DEFAULT -> GHC.Err.errorWithoutStackTrace sat_salw6;
        };

lvl6_rajBf
  :: GHC.Event.Array.Array GHC.Event.Poll.PollFd
     -> Foreign.C.Types.CInt
     -> (Foreign.C.Types.CInt
         -> GHC.Event.Poll.PollFd
         -> GHC.Types.IO (Foreign.C.Types.CInt, GHC.Types.Bool))
     -> GHC.Types.IO ()
[GblId] =
    [] \u [] GHC.Event.Array.loop GHC.Event.Poll.$fStorablePollFd;

lvl7_rajBg :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [3#];

lvl8_rajBh :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [1#];

lvl9_rajBi :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [2#];

lvl10_rajBj
  :: GHC.Event.Array.Array GHC.Event.Poll.PollFd
     -> GHC.Types.Int -> GHC.Types.IO ()
[GblId] =
    [] \u [] GHC.Event.Array.removeAt GHC.Event.Poll.$fStorablePollFd;

lvl11_rajBk
  :: (GHC.Event.Poll.PollFd -> GHC.Types.Bool)
     -> GHC.Event.Array.Array GHC.Event.Poll.PollFd
     -> GHC.Types.IO
          (GHC.Base.Maybe (GHC.Types.Int, GHC.Event.Poll.PollFd))
[GblId] =
    [] \u [] GHC.Event.Array.findIndex GHC.Event.Poll.$fStorablePollFd;

GHC.Event.Poll.new5
  :: GHC.Event.Poll.Poll
     -> GHC.Base.Maybe GHC.Event.Internal.Timeout
     -> (System.Posix.Types.Fd
         -> GHC.Event.Internal.Event -> GHC.Types.IO ())
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=4,
 Str=<S(SL),1*U(U,U)><L,U><L,C(C1(C1(U(U,A))))><S,U>,
 Unf=OtherCon []] =
    [] \r [p_salw7 mtout_salw8 f_salw9 void_0E]
        case newMutVar# [GHC.ForeignPtr.NoFinalizers GHC.Prim.void#] of {
          Unit# ipv1_salwd [Occ=Once] ->
              let {
                sat_salwe [Occ=Once] :: GHC.ForeignPtr.ForeignPtrContents
                [LclId] =
                    CCCS GHC.ForeignPtr.PlainForeignPtr! [ipv1_salwd]; } in
              let {
                sat_salwf [Occ=Once]
                  :: GHC.ForeignPtr.ForeignPtr GHC.Event.Poll.PollFd
                [LclId] =
                    CCCS GHC.ForeignPtr.ForeignPtr! [__NULL sat_salwe]; } in
              let {
                sat_salwg [Occ=Once] :: GHC.Event.Array.AC GHC.Event.Poll.PollFd
                [LclId] =
                    CCCS GHC.Event.Array.AC! [sat_salwf 0# 0#];
              } in 
                case newMutVar# [sat_salwg GHC.Prim.void#] of {
                  Unit# ipv3_salwj [Occ=Once*] ->
                      case p_salw7 of {
                        GHC.Event.Poll.Poll dt_salwl dt1_salwm ->
                            case getMaskingState# [GHC.Prim.void#] of {
                              Unit# ipv5_salwp [Occ=Once!] ->
                                  let-no-escape {
                                    $w$j_salwq [InlPrag=NOUSERINLINE[0],
                                                Occ=Once*!T[2],
                                                Dmd=<C(C(S)),1*C1(C1(U(U,U)))>]
                                      :: GHC.Prim.State# GHC.Prim.RealWorld
                                         -> GHC.Prim.MutVar#
                                              GHC.Prim.RealWorld
                                              (GHC.Event.Array.AC GHC.Event.Poll.PollFd)
                                         -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
                                    [LclId[JoinId(2)], Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
                                        sat-only [mtout_salw8 f_salw9 dt1_salwm] \r [void_0E
                                                                                     ww_salws]
                                            case readMutVar# [ww_salws GHC.Prim.void#] of {
                                              Unit# ipv7_salwv [Occ=Once!] ->
                                                  case ipv7_salwv of {
                                                    GHC.Event.Array.AC es_salwx [Occ=Once!]
                                                                       dt2_salwy [Occ=Once]
                                                                       _ [Occ=Dead] ->
                                                        case es_salwx of {
                                                          GHC.ForeignPtr.ForeignPtr fo_salwB [Occ=OnceL]
                                                                                    ds4_salwC [Occ=Once] ->
                                                              let {
                                                                ary_salwD
                                                                  :: GHC.STRef.STRef
                                                                       GHC.Prim.RealWorld
                                                                       (GHC.Event.Array.AC
                                                                          GHC.Event.Poll.PollFd)
                                                                [LclId, Unf=OtherCon []] =
                                                                    CCCS GHC.STRef.STRef! [dt1_salwm];
                                                              } in 
                                                                case
                                                                    *# [dt2_salwy 8#]
                                                                of
                                                                offset_salwE [Dmd=<S,U>]
                                                                { __DEFAULT ->
                                                                      let-no-escape {
                                                                        exit_salwF [Occ=OnceL!T[1],
                                                                                    Dmd=<L,C(U(U,U))>]
                                                                          :: GHC.Prim.State#
                                                                               GHC.Prim.RealWorld
                                                                             -> (# GHC.Prim.State#
                                                                                     GHC.Prim.RealWorld,
                                                                                   GHC.Types.Int #)
                                                                        [LclId[JoinId(1)],
                                                                         Arity=1,
                                                                         Str=<S,U>,
                                                                         Unf=OtherCon []] =
                                                                            sat-only [mtout_salw8
                                                                                      f_salw9
                                                                                      dt1_salwm
                                                                                      ds4_salwC
                                                                                      ary_salwD] \r [void_0E]
                                                                                case
                                                                                    touch# [ds4_salwC
                                                                                            GHC.Prim.void#]
                                                                                of
                                                                                s'_salwH
                                                                                { (##) ->
                                                                                      case
                                                                                          readMutVar# [dt1_salwm
                                                                                                       GHC.Prim.void#]
                                                                                      of
                                                                                      { Unit# ipv9_salwK [Occ=Once!] ->
                                                                                            case
                                                                                                ipv9_salwK
                                                                                            of
                                                                                            { GHC.Event.Array.AC es1_salwM [Occ=Once!]
                                                                                                                 dt4_salwN [Occ=Once*]
                                                                                                                 _ [Occ=Dead] ->
                                                                                                  case
                                                                                                      es1_salwM
                                                                                                  of
                                                                                                  { GHC.ForeignPtr.ForeignPtr ds6_salwQ [Occ=Once*]
                                                                                                                              r_salwR [Occ=Once] ->
                                                                                                        let-no-escape {
                                                                                                          $w$j1_salwS [InlPrag=NOUSERINLINE[0],
                                                                                                                       Occ=Once*!T[3],
                                                                                                                       Dmd=<L,1*C1(C1(C1(U(U,U))))>]
                                                                                                            :: GHC.Prim.State#
                                                                                                                 GHC.Prim.RealWorld
                                                                                                               -> GHC.Prim.Int#
                                                                                                               -> (# GHC.Prim.State#
                                                                                                                       GHC.Prim.RealWorld,
                                                                                                                     Foreign.C.Types.CInt #)
                                                                                                               -> (# GHC.Prim.State#
                                                                                                                       GHC.Prim.RealWorld,
                                                                                                                     GHC.Types.Int #)
                                                                                                          [LclId[JoinId(3)],
                                                                                                           Arity=3,
                                                                                                           Str=<S,U><S,1*U><L,A>,
                                                                                                           Unf=OtherCon []] =
                                                                                                              sat-only [f_salw9
                                                                                                                        ary_salwD
                                                                                                                        r_salwR] \r [void_0E
                                                                                                                                     ww1_salwU
                                                                                                                                     us_galAQ]
                                                                                                                  let-no-escape {
                                                                                                                    $w$j2_salwW [InlPrag=NOUSERINLINE[0],
                                                                                                                                 Occ=Once*!T[2],
                                                                                                                                 Dmd=<L,1*C1(C1(U(U,U)))>]
                                                                                                                      :: GHC.Prim.State#
                                                                                                                           GHC.Prim.RealWorld
                                                                                                                         -> GHC.Prim.Int#
                                                                                                                         -> (# GHC.Prim.State#
                                                                                                                                 GHC.Prim.RealWorld,
                                                                                                                               GHC.Types.Int #)
                                                                                                                    [LclId[JoinId(2)],
                                                                                                                     Arity=2,
                                                                                                                     Str=<S,U><S,1*U>,
                                                                                                                     Unf=OtherCon []] =
                                                                                                                        sat-only [f_salw9
                                                                                                                                  ary_salwD
                                                                                                                                  r_salwR] \r [void_0E
                                                                                                                                               ww2_salwY]
                                                                                                                            case
                                                                                                                                touch# [r_salwR
                                                                                                                                        GHC.Prim.void#]
                                                                                                                            of
                                                                                                                            s'1_salwZ
                                                                                                                            { (##) ->
                                                                                                                                  case
                                                                                                                                      ww2_salwY
                                                                                                                                  of
                                                                                                                                  wild6_salx0
                                                                                                                                  { __DEFAULT ->
                                                                                                                                        let {
                                                                                                                                          sat_salxy [Occ=Once]
                                                                                                                                            :: Foreign.C.Types.CInt
                                                                                                                                               -> GHC.Event.Poll.PollFd
                                                                                                                                               -> GHC.Types.IO
                                                                                                                                                    (Foreign.C.Types.CInt,
                                                                                                                                                     GHC.Types.Bool)
                                                                                                                                          [LclId] =
                                                                                                                                              [f_salw9
                                                                                                                                               wild6_salx0] \r [i_salx1
                                                                                                                                                                e_salx2
                                                                                                                                                                void_0E]
                                                                                                                                                  case
                                                                                                                                                      e_salx2
                                                                                                                                                  of
                                                                                                                                                  { GHC.Event.Poll.PollFd dt6_salx5 [Occ=Once]
                                                                                                                                                                          _ [Occ=Dead]
                                                                                                                                                                          dt8_salx7 [Occ=Once!] ->
                                                                                                                                                        case
                                                                                                                                                            dt8_salx7
                                                                                                                                                        of
                                                                                                                                                        wild8_salx8
                                                                                                                                                        { __DEFAULT ->
                                                                                                                                                              let {
                                                                                                                                                                sat_salxj [Occ=Once]
                                                                                                                                                                  :: GHC.Event.Internal.Event
                                                                                                                                                                [LclId] =
                                                                                                                                                                    [wild8_salx8] \u []
                                                                                                                                                                        case
                                                                                                                                                                            int2Word# [wild8_salx8]
                                                                                                                                                                        of
                                                                                                                                                                        sat_salxa
                                                                                                                                                                        { __DEFAULT ->
                                                                                                                                                                              case
                                                                                                                                                                                  and# [sat_salxa
                                                                                                                                                                                        25##]
                                                                                                                                                                              of
                                                                                                                                                                              sat_salxb
                                                                                                                                                                              { __DEFAULT ->
                                                                                                                                                                                    case
                                                                                                                                                                                        word2Int# [sat_salxb]
                                                                                                                                                                                    of
                                                                                                                                                                                    { __DEFAULT ->
                                                                                                                                                                                          case
                                                                                                                                                                                              int2Word# [wild8_salx8]
                                                                                                                                                                                          of
                                                                                                                                                                                          sat_salxd
                                                                                                                                                                                          { __DEFAULT ->
                                                                                                                                                                                                case
                                                                                                                                                                                                    and# [sat_salxd
                                                                                                                                                                                                          28##]
                                                                                                                                                                                                of
                                                                                                                                                                                                sat_salxe
                                                                                                                                                                                                { __DEFAULT ->
                                                                                                                                                                                                      case
                                                                                                                                                                                                          word2Int# [sat_salxe]
                                                                                                                                                                                                      of
                                                                                                                                                                                                      { __DEFAULT ->
                                                                                                                                                                                                            lvl7_rajBg;
                                                                                                                                                                                                        0# ->
                                                                                                                                                                                                            lvl8_rajBh;
                                                                                                                                                                                                      };
                                                                                                                                                                                                };
                                                                                                                                                                                          };
                                                                                                                                                                                      0# ->
                                                                                                                                                                                          case
                                                                                                                                                                                              int2Word# [wild8_salx8]
                                                                                                                                                                                          of
                                                                                                                                                                                          sat_salxg
                                                                                                                                                                                          { __DEFAULT ->
                                                                                                                                                                                                case
                                                                                                                                                                                                    and# [sat_salxg
                                                                                                                                                                                                          28##]
                                                                                                                                                                                                of
                                                                                                                                                                                                sat_salxh
                                                                                                                                                                                                { __DEFAULT ->
                                                                                                                                                                                                      case
                                                                                                                                                                                                          word2Int# [sat_salxh]
                                                                                                                                                                                                      of
                                                                                                                                                                                                      { __DEFAULT ->
                                                                                                                                                                                                            lvl9_rajBi;
                                                                                                                                                                                                        0# ->
                                                                                                                                                                                                            GHC.Event.Poll.$fShowPollFd7;
                                                                                                                                                                                                      };
                                                                                                                                                                                                };
                                                                                                                                                                                          };
                                                                                                                                                                                    };
                                                                                                                                                                              };
                                                                                                                                                                        }; } in
                                                                                                                                                              let {
                                                                                                                                                                sat_salx9 [Occ=Once]
                                                                                                                                                                  :: System.Posix.Types.Fd
                                                                                                                                                                [LclId] =
                                                                                                                                                                    CCCS GHC.Int.I32#! [dt6_salx5];
                                                                                                                                                              } in 
                                                                                                                                                                case
                                                                                                                                                                    f_salw9
                                                                                                                                                                        sat_salx9
                                                                                                                                                                        sat_salxj
                                                                                                                                                                        GHC.Prim.void#
                                                                                                                                                                of
                                                                                                                                                                { Unit# _ [Occ=Dead] ->
                                                                                                                                                                      let {
                                                                                                                                                                        i'_salxn [Dmd=<L,U(U)>]
                                                                                                                                                                          :: GHC.Int.Int32
                                                                                                                                                                        [LclId] =
                                                                                                                                                                            [i_salx1] \u []
                                                                                                                                                                                case
                                                                                                                                                                                    i_salx1
                                                                                                                                                                                of
                                                                                                                                                                                { GHC.Int.I32# x#_salxp [Occ=Once] ->
                                                                                                                                                                                      case
                                                                                                                                                                                          +# [x#_salxp
                                                                                                                                                                                              1#]
                                                                                                                                                                                      of
                                                                                                                                                                                      sat_salxq
                                                                                                                                                                                      { __DEFAULT ->
                                                                                                                                                                                            case
                                                                                                                                                                                                narrow32Int# [sat_salxq]
                                                                                                                                                                                            of
                                                                                                                                                                                            sat_salxr
                                                                                                                                                                                            { __DEFAULT ->
                                                                                                                                                                                                  GHC.Int.I32# [sat_salxr];
                                                                                                                                                                                            };
                                                                                                                                                                                      };
                                                                                                                                                                                }; } in
                                                                                                                                                                      let {
                                                                                                                                                                        sat_salxv [Occ=Once]
                                                                                                                                                                          :: GHC.Types.Bool
                                                                                                                                                                        [LclId] =
                                                                                                                                                                            [wild6_salx0
                                                                                                                                                                             i'_salxn] \u []
                                                                                                                                                                                case
                                                                                                                                                                                    i'_salxn
                                                                                                                                                                                of
                                                                                                                                                                                { GHC.Int.I32# x_salxt [Occ=Once] ->
                                                                                                                                                                                      case
                                                                                                                                                                                          ==# [x_salxt
                                                                                                                                                                                               wild6_salx0]
                                                                                                                                                                                      of
                                                                                                                                                                                      sat_salxu
                                                                                                                                                                                      { __DEFAULT ->
                                                                                                                                                                                            tagToEnum# [sat_salxu];
                                                                                                                                                                                      };
                                                                                                                                                                                }; } in
                                                                                                                                                                      let {
                                                                                                                                                                        sat_salxw [Occ=Once]
                                                                                                                                                                          :: (Foreign.C.Types.CInt,
                                                                                                                                                                              GHC.Types.Bool)
                                                                                                                                                                        [LclId] =
                                                                                                                                                                            CCCS (,)! [i'_salxn
                                                                                                                                                                                       sat_salxv];
                                                                                                                                                                      } in 
                                                                                                                                                                        Unit# [sat_salxw];
                                                                                                                                                                };
                                                                                                                                                          0# ->
                                                                                                                                                              let {
                                                                                                                                                                sat_salxx [Occ=Once]
                                                                                                                                                                  :: (Foreign.C.Types.CInt,
                                                                                                                                                                      GHC.Types.Bool)
                                                                                                                                                                [LclId] =
                                                                                                                                                                    CCCS (,)! [i_salx1
                                                                                                                                                                               GHC.Types.True];
                                                                                                                                                              } in 
                                                                                                                                                                Unit# [sat_salxx];
                                                                                                                                                        };
                                                                                                                                                  };
                                                                                                                                        } in 
                                                                                                                                          case
                                                                                                                                              lvl6_rajBf
                                                                                                                                                  ary_salwD
                                                                                                                                                  lvl1_rajBa
                                                                                                                                                  sat_salxy
                                                                                                                                                  GHC.Prim.void#
                                                                                                                                          of
                                                                                                                                          { Unit# _ [Occ=Dead] ->
                                                                                                                                                let {
                                                                                                                                                  sat_salxC [Occ=Once]
                                                                                                                                                    :: GHC.Types.Int
                                                                                                                                                  [LclId] =
                                                                                                                                                      CCCS GHC.Types.I#! [wild6_salx0];
                                                                                                                                                } in 
                                                                                                                                                  Unit# [sat_salxC];
                                                                                                                                          };
                                                                                                                                    0# ->
                                                                                                                                        Unit# [GHC.Event.Poll.$fShowPollFd7];
                                                                                                                                  };
                                                                                                                            };
                                                                                                                  } in 
                                                                                                                    case
                                                                                                                        ww1_salwU
                                                                                                                    of
                                                                                                                    wild6_salxD
                                                                                                                    { __DEFAULT ->
                                                                                                                          $w$j2_salwW
                                                                                                                              GHC.Prim.void#
                                                                                                                              wild6_salxD;
                                                                                                                      -1# ->
                                                                                                                          case
                                                                                                                              __pkg_ccall base-4.11.0.0 [GHC.Prim.void#]
                                                                                                                          of
                                                                                                                          { Unit# ds8_salxH [Occ=Once] ->
                                                                                                                                case
                                                                                                                                    narrow32Int# [ds8_salxH]
                                                                                                                                of
                                                                                                                                { __DEFAULT ->
                                                                                                                                      case
                                                                                                                                          Foreign.C.Error.throwErrno1
                                                                                                                                              lvl3_rajBc
                                                                                                                                              GHC.Prim.void#
                                                                                                                                      of
                                                                                                                                      { Unit# ipv11_salxL [Occ=Once] ->
                                                                                                                                            case
                                                                                                                                                ipv11_salxL
                                                                                                                                            of
                                                                                                                                            { GHC.Int.I32# ww3_salxN [Occ=Once] ->
                                                                                                                                                  $w$j2_salwW
                                                                                                                                                      GHC.Prim.void#
                                                                                                                                                      ww3_salxN;
                                                                                                                                            };
                                                                                                                                      };
                                                                                                                                  4# ->
                                                                                                                                      $w$j2_salwW
                                                                                                                                          GHC.Prim.void#
                                                                                                                                          0#;
                                                                                                                                };
                                                                                                                          };
                                                                                                                    };
                                                                                                        } in 
                                                                                                          case
                                                                                                              mtout_salw8
                                                                                                          of
                                                                                                          { GHC.Base.Nothing ->
                                                                                                                case
                                                                                                                    int2Word# [dt4_salwN]
                                                                                                                of
                                                                                                                sat_salxQ
                                                                                                                { __DEFAULT ->
                                                                                                                      case
                                                                                                                          __pkg_ccall base-4.11.0.0 [ds6_salwQ
                                                                                                                                                     sat_salxQ
                                                                                                                                                     0#
                                                                                                                                                     GHC.Prim.void#]
                                                                                                                      of
                                                                                                                      { Unit# ds8_salxT [Occ=Once] ->
                                                                                                                            case
                                                                                                                                narrow32Int# [ds8_salxT]
                                                                                                                            of
                                                                                                                            ipv10_salxU [Dmd=<S,U>]
                                                                                                                            { __DEFAULT ->
                                                                                                                                  let {
                                                                                                                                    sat_salxV [Occ=Once]
                                                                                                                                      :: Foreign.C.Types.CInt
                                                                                                                                    [LclId] =
                                                                                                                                        CCCS GHC.Int.I32#! [ipv10_salxU];
                                                                                                                                  } in 
                                                                                                                                    $w$j1_salwS
                                                                                                                                        GHC.Prim.void#
                                                                                                                                        ipv10_salxU
                                                                                                                                        sat_salxV;
                                                                                                                            };
                                                                                                                      };
                                                                                                                };
                                                                                                            GHC.Base.Just tout_salxX [Occ=Once!] ->
                                                                                                                case
                                                                                                                    tout_salxX
                                                                                                                of
                                                                                                                { GHC.Event.Internal.Timeout dt6_salxZ [Occ=Once] ->
                                                                                                                      case
                                                                                                                          plusWord# [dt6_salxZ
                                                                                                                                     1000000##]
                                                                                                                      of
                                                                                                                      sat_saly1
                                                                                                                      { __DEFAULT ->
                                                                                                                            case
                                                                                                                                minusWord# [sat_saly1
                                                                                                                                            1##]
                                                                                                                            of
                                                                                                                            sat_saly2
                                                                                                                            { __DEFAULT ->
                                                                                                                                  case
                                                                                                                                      quotWord# [sat_saly2
                                                                                                                                                 1000000##]
                                                                                                                                  of
                                                                                                                                  sat_saly3
                                                                                                                                  { __DEFAULT ->
                                                                                                                                        case
                                                                                                                                            word2Int# [sat_saly3]
                                                                                                                                        of
                                                                                                                                        sat_saly4
                                                                                                                                        { __DEFAULT ->
                                                                                                                                              case
                                                                                                                                                  int2Word# [dt4_salwN]
                                                                                                                                              of
                                                                                                                                              sat_saly0
                                                                                                                                              { __DEFAULT ->
                                                                                                                                                    case
                                                                                                                                                        $wc_pollLoop_rajB9
                                                                                                                                                            ds6_salwQ
                                                                                                                                                            sat_saly0
                                                                                                                                                            sat_saly4
                                                                                                                                                            GHC.Prim.void#
                                                                                                                                                    of
                                                                                                                                                    ds7_saly5
                                                                                                                                                    { Unit# ipv11_saly7 [Occ=Once] ->
                                                                                                                                                          case
                                                                                                                                                              ipv11_saly7
                                                                                                                                                          of
                                                                                                                                                          { GHC.Int.I32# ww2_saly9 [Occ=Once] ->
                                                                                                                                                                $w$j1_salwS
                                                                                                                                                                    GHC.Prim.void#
                                                                                                                                                                    ww2_saly9
                                                                                                                                                                    ipv11_saly7;
                                                                                                                                                          };
                                                                                                                                                    };
                                                                                                                                              };
                                                                                                                                        };
                                                                                                                                  };
                                                                                                                            };
                                                                                                                      };
                                                                                                                  GHC.Event.Internal.Forever ->
                                                                                                                      case
                                                                                                                          int2Word# [dt4_salwN]
                                                                                                                      of
                                                                                                                      sat_salya
                                                                                                                      { __DEFAULT ->
                                                                                                                            case
                                                                                                                                $wc_pollLoop_rajB9
                                                                                                                                    ds6_salwQ
                                                                                                                                    sat_salya
                                                                                                                                    -1#
                                                                                                                                    GHC.Prim.void#
                                                                                                                            of
                                                                                                                            ds7_salyb
                                                                                                                            { Unit# ipv11_salyd [Occ=Once] ->
                                                                                                                                  case
                                                                                                                                      ipv11_salyd
                                                                                                                                  of
                                                                                                                                  { GHC.Int.I32# ww2_salyf [Occ=Once] ->
                                                                                                                                        $w$j1_salwS
                                                                                                                                            GHC.Prim.void#
                                                                                                                                            ww2_salyf
                                                                                                                                            ipv11_salyd;
                                                                                                                                  };
                                                                                                                            };
                                                                                                                      };
                                                                                                                };
                                                                                                          };
                                                                                                  };
                                                                                            };
                                                                                      };
                                                                                };
                                                                      } in 
                                                                        let-no-escape {
                                                                          $wgo_salyg [InlPrag=NOUSERINLINE[0],
                                                                                      Occ=LoopBreakerT[2]]
                                                                            :: GHC.Prim.Int#
                                                                               -> GHC.Prim.State#
                                                                                    GHC.Prim.RealWorld
                                                                               -> (# GHC.Prim.State#
                                                                                       GHC.Prim.RealWorld,
                                                                                     GHC.Types.Int #)
                                                                          [LclId[JoinId(2)],
                                                                           Arity=2,
                                                                           Str=<S,U><S,U>,
                                                                           Unf=OtherCon []] =
                                                                              sat-only [dt1_salwm
                                                                                        fo_salwB
                                                                                        ary_salwD
                                                                                        offset_salwE
                                                                                        exit_salwF
                                                                                        $wgo_salyg] \r [ww1_salyh
                                                                                                        void_0E]
                                                                                  case
                                                                                      >=# [ww1_salyh
                                                                                           offset_salwE]
                                                                                  of
                                                                                  { __DEFAULT ->
                                                                                        case
                                                                                            plusAddr# [fo_salwB
                                                                                                       ww1_salyh]
                                                                                        of
                                                                                        ptr_salyk [Dmd=<S,U>]
                                                                                        { __DEFAULT ->
                                                                                              case
                                                                                                  readInt32OffAddr# [ptr_salyk
                                                                                                                     0#
                                                                                                                     GHC.Prim.void#]
                                                                                              of
                                                                                              { Unit# ipv9_salyn ->
                                                                                                    case
                                                                                                        plusAddr# [ptr_salyk
                                                                                                                   4#]
                                                                                                    of
                                                                                                    sat_salyo
                                                                                                    { __DEFAULT ->
                                                                                                          case
                                                                                                              readInt16OffAddr# [sat_salyo
                                                                                                                                 0#
                                                                                                                                 GHC.Prim.void#]
                                                                                                          of
                                                                                                          { Unit# ipv11_salyr [Occ=Once*] ->
                                                                                                                case
                                                                                                                    plusAddr# [ptr_salyk
                                                                                                                               6#]
                                                                                                                of
                                                                                                                sat_salys
                                                                                                                { __DEFAULT ->
                                                                                                                      case
                                                                                                                          readInt16OffAddr# [sat_salys
                                                                                                                                             0#
                                                                                                                                             GHC.Prim.void#]
                                                                                                                      of
                                                                                                                      { Unit# ipv13_salyv [Occ=Once!] ->
                                                                                                                            case
                                                                                                                                ipv13_salyv
                                                                                                                            of
                                                                                                                            { __DEFAULT ->
                                                                                                                                  let {
                                                                                                                                    sat_salyD [Occ=Once]
                                                                                                                                      :: GHC.Event.Poll.PollFd
                                                                                                                                         -> GHC.Types.Bool
                                                                                                                                    [LclId] =
                                                                                                                                        [ipv9_salyn] \r [x_salyx]
                                                                                                                                            case
                                                                                                                                                x_salyx
                                                                                                                                            of
                                                                                                                                            { GHC.Event.Poll.PollFd dt4_salyz [Occ=Once]
                                                                                                                                                                    _ [Occ=Dead]
                                                                                                                                                                    _ [Occ=Dead] ->
                                                                                                                                                  case
                                                                                                                                                      ==# [dt4_salyz
                                                                                                                                                           ipv9_salyn]
                                                                                                                                                  of
                                                                                                                                                  sat_salyC
                                                                                                                                                  { __DEFAULT ->
                                                                                                                                                        tagToEnum# [sat_salyC];
                                                                                                                                                  };
                                                                                                                                            };
                                                                                                                                  } in 
                                                                                                                                    case
                                                                                                                                        lvl11_rajBk
                                                                                                                                            sat_salyD
                                                                                                                                            ary_salwD
                                                                                                                                            GHC.Prim.void#
                                                                                                                                    of
                                                                                                                                    { Unit# ipv15_salyG [Occ=Once!] ->
                                                                                                                                          case
                                                                                                                                              ipv15_salyG
                                                                                                                                          of
                                                                                                                                          { GHC.Base.Nothing ->
                                                                                                                                                lvl5_rajBe;
                                                                                                                                            GHC.Base.Just ds9_salyJ [Occ=Once!] ->
                                                                                                                                                case
                                                                                                                                                    ds9_salyJ
                                                                                                                                                of
                                                                                                                                                { (,) i_salyL [Occ=Once*]
                                                                                                                                                      _ [Occ=Dead] ->
                                                                                                                                                      case
                                                                                                                                                          ipv11_salyr
                                                                                                                                                      of
                                                                                                                                                      wild7_salyN
                                                                                                                                                      { __DEFAULT ->
                                                                                                                                                            case
                                                                                                                                                                readMutVar# [dt1_salwm
                                                                                                                                                                             GHC.Prim.void#]
                                                                                                                                                            of
                                                                                                                                                            { Unit# ipv17_salyQ [Occ=Once!] ->
                                                                                                                                                                  case
                                                                                                                                                                      ipv17_salyQ
                                                                                                                                                                  of
                                                                                                                                                                  { GHC.Event.Array.AC ww3_salyS [Occ=Once!]
                                                                                                                                                                                       _ [Occ=Dead]
                                                                                                                                                                                       ww5_salyU ->
                                                                                                                                                                        case
                                                                                                                                                                            ww3_salyS
                                                                                                                                                                        of
                                                                                                                                                                        { GHC.ForeignPtr.ForeignPtr ww7_salyW [Occ=Once]
                                                                                                                                                                                                    ww8_salyX [Occ=Once] ->
                                                                                                                                                                              case
                                                                                                                                                                                  i_salyL
                                                                                                                                                                              of
                                                                                                                                                                              { GHC.Types.I# ww10_salyZ ->
                                                                                                                                                                                    case
                                                                                                                                                                                        <# [ww10_salyZ
                                                                                                                                                                                            0#]
                                                                                                                                                                                    of
                                                                                                                                                                                    { __DEFAULT ->
                                                                                                                                                                                          case
                                                                                                                                                                                              >=# [ww10_salyZ
                                                                                                                                                                                                   ww5_salyU]
                                                                                                                                                                                          of
                                                                                                                                                                                          { __DEFAULT ->
                                                                                                                                                                                                case
                                                                                                                                                                                                    *# [ww10_salyZ
                                                                                                                                                                                                        8#]
                                                                                                                                                                                                of
                                                                                                                                                                                                sat_salz3
                                                                                                                                                                                                { __DEFAULT ->
                                                                                                                                                                                                      case
                                                                                                                                                                                                          plusAddr# [ww7_salyW
                                                                                                                                                                                                                     sat_salz3]
                                                                                                                                                                                                      of
                                                                                                                                                                                                      addr_salz2 [Dmd=<S,U>]
                                                                                                                                                                                                      { __DEFAULT ->
                                                                                                                                                                                                            case
                                                                                                                                                                                                                writeInt32OffAddr# [addr_salz2
                                                                                                                                                                                                                                    0#
                                                                                                                                                                                                                                    ipv9_salyn
                                                                                                                                                                                                                                    GHC.Prim.void#]
                                                                                                                                                                                                            of
                                                                                                                                                                                                            s2_salz4
                                                                                                                                                                                                            { (##) ->
                                                                                                                                                                                                                  case
                                                                                                                                                                                                                      plusAddr# [addr_salz2
                                                                                                                                                                                                                                 4#]
                                                                                                                                                                                                                  of
                                                                                                                                                                                                                  sat_salz5
                                                                                                                                                                                                                  { __DEFAULT ->
                                                                                                                                                                                                                        case
                                                                                                                                                                                                                            writeInt16OffAddr# [sat_salz5
                                                                                                                                                                                                                                                0#
                                                                                                                                                                                                                                                wild7_salyN
                                                                                                                                                                                                                                                GHC.Prim.void#]
                                                                                                                                                                                                                        of
                                                                                                                                                                                                                        s1_salz6
                                                                                                                                                                                                                        { (##) ->
                                                                                                                                                                                                                              case
                                                                                                                                                                                                                                  plusAddr# [addr_salz2
                                                                                                                                                                                                                                             6#]
                                                                                                                                                                                                                              of
                                                                                                                                                                                                                              sat_salz7
                                                                                                                                                                                                                              { __DEFAULT ->
                                                                                                                                                                                                                                    case
                                                                                                                                                                                                                                        writeInt16OffAddr# [sat_salz7
                                                                                                                                                                                                                                                            0#
                                                                                                                                                                                                                                                            0#
                                                                                                                                                                                                                                                            GHC.Prim.void#]
                                                                                                                                                                                                                                    of
                                                                                                                                                                                                                                    s3_salz8
                                                                                                                                                                                                                                    { (##) ->
                                                                                                                                                                                                                                          case
                                                                                                                                                                                                                                              touch# [ww8_salyX
                                                                                                                                                                                                                                                      GHC.Prim.void#]
                                                                                                                                                                                                                                          of
                                                                                                                                                                                                                                          s'_salz9
                                                                                                                                                                                                                                          { (##) ->
                                                                                                                                                                                                                                                case
                                                                                                                                                                                                                                                    +# [ww1_salyh
                                                                                                                                                                                                                                                        8#]
                                                                                                                                                                                                                                                of
                                                                                                                                                                                                                                                sat_salza
                                                                                                                                                                                                                                                { __DEFAULT ->
                                                                                                                                                                                                                                                      $wgo_salyg
                                                                                                                                                                                                                                                          sat_salza
                                                                                                                                                                                                                                                          GHC.Prim.void#;
                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                          };
                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                              };
                                                                                                                                                                                                                        };
                                                                                                                                                                                                                  };
                                                                                                                                                                                                            };
                                                                                                                                                                                                      };
                                                                                                                                                                                                };
                                                                                                                                                                                            1# ->
                                                                                                                                                                                                GHC.Event.Array.$wlvl
                                                                                                                                                                                                    ww5_salyU
                                                                                                                                                                                                    ww10_salyZ;
                                                                                                                                                                                          };
                                                                                                                                                                                      1# ->
                                                                                                                                                                                          GHC.Event.Array.$wlvl
                                                                                                                                                                                              ww5_salyU
                                                                                                                                                                                              ww10_salyZ;
                                                                                                                                                                                    };
                                                                                                                                                                              };
                                                                                                                                                                        };
                                                                                                                                                                  };
                                                                                                                                                            };
                                                                                                                                                        0# ->
                                                                                                                                                            case
                                                                                                                                                                lvl10_rajBj
                                                                                                                                                                    ary_salwD
                                                                                                                                                                    i_salyL
                                                                                                                                                                    GHC.Prim.void#
                                                                                                                                                            of
                                                                                                                                                            { Unit# _ [Occ=Dead] ->
                                                                                                                                                                  case
                                                                                                                                                                      +# [ww1_salyh
                                                                                                                                                                          8#]
                                                                                                                                                                  of
                                                                                                                                                                  sat_salzg
                                                                                                                                                                  { __DEFAULT ->
                                                                                                                                                                        $wgo_salyg
                                                                                                                                                                            sat_salzg
                                                                                                                                                                            GHC.Prim.void#;
                                                                                                                                                                  };
                                                                                                                                                            };
                                                                                                                                                      };
                                                                                                                                                };
                                                                                                                                          };
                                                                                                                                    };
                                                                                                                              0# ->
                                                                                                                                  let {
                                                                                                                                    sat_salzh [Occ=Once]
                                                                                                                                      :: GHC.Event.Poll.PollFd
                                                                                                                                    [LclId] =
                                                                                                                                        CCCS GHC.Event.Poll.PollFd! [ipv9_salyn
                                                                                                                                                                     ipv11_salyr
                                                                                                                                                                     0#];
                                                                                                                                  } in 
                                                                                                                                    case
                                                                                                                                        GHC.Event.Array.$wsnoc
                                                                                                                                            GHC.Event.Poll.$fStorablePollFd
                                                                                                                                            dt1_salwm
                                                                                                                                            sat_salzh
                                                                                                                                            GHC.Prim.void#
                                                                                                                                    of
                                                                                                                                    { Unit# _ [Occ=Dead] ->
                                                                                                                                          case
                                                                                                                                              +# [ww1_salyh
                                                                                                                                                  8#]
                                                                                                                                          of
                                                                                                                                          sat_salzl
                                                                                                                                          { __DEFAULT ->
                                                                                                                                                $wgo_salyg
                                                                                                                                                    sat_salzl
                                                                                                                                                    GHC.Prim.void#;
                                                                                                                                          };
                                                                                                                                    };
                                                                                                                            };
                                                                                                                      };
                                                                                                                };
                                                                                                          };
                                                                                                    };
                                                                                              };
                                                                                        };
                                                                                    1# ->
                                                                                        exit_salwF
                                                                                            GHC.Prim.void#;
                                                                                  };
                                                                        } in 
                                                                          $wgo_salyg
                                                                              0# GHC.Prim.void#;
                                                                };
                                                        };
                                                  };
                                            };
                                  } in 
                                    case ipv5_salwp of {
                                      __DEFAULT ->
                                          case takeMVar# [dt_salwl GHC.Prim.void#] of {
                                            Unit# ipv7_salzp [Occ=Once] ->
                                                let {
                                                  sat_salzq [Occ=Once]
                                                    :: GHC.Event.Array.Array GHC.Event.Poll.PollFd
                                                  [LclId] =
                                                      CCCS GHC.STRef.STRef! [ipv3_salwj];
                                                } in 
                                                  case
                                                      putMVar# [dt_salwl sat_salzq GHC.Prim.void#]
                                                  of
                                                  s2#_salzr
                                                  { (##) ->
                                                        case ipv7_salzp of {
                                                          GHC.STRef.STRef ww1_salzt [Occ=Once] ->
                                                              $w$j_salwq GHC.Prim.void# ww1_salzt;
                                                        };
                                                  };
                                          };
                                      0# ->
                                          let {
                                            sat_salzA [Occ=Once]
                                              :: GHC.Prim.State# GHC.Prim.RealWorld
                                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                       GHC.Event.Array.Array
                                                         GHC.Event.Poll.PollFd #)
                                            [LclId] =
                                                [ipv3_salwj dt_salwl] \r [void_0E]
                                                    case takeMVar# [dt_salwl GHC.Prim.void#] of {
                                                      Unit# ipv7_salzx [Occ=Once] ->
                                                          let {
                                                            sat_salzy [Occ=Once]
                                                              :: GHC.Event.Array.Array
                                                                   GHC.Event.Poll.PollFd
                                                            [LclId] =
                                                                CCCS GHC.STRef.STRef! [ipv3_salwj];
                                                          } in 
                                                            case
                                                                putMVar# [dt_salwl
                                                                          sat_salzy
                                                                          GHC.Prim.void#]
                                                            of
                                                            s2#_salzz
                                                            { (##) -> Unit# [ipv7_salzx];
                                                            };
                                                    };
                                          } in 
                                            case
                                                maskAsyncExceptions# [sat_salzA GHC.Prim.void#]
                                            of
                                            { Unit# ipv7_salzD [Occ=Once] ->
                                                  case ipv7_salzD of {
                                                    GHC.STRef.STRef ww1_salzF [Occ=Once] ->
                                                        $w$j_salwq GHC.Prim.void# ww1_salzF;
                                                  };
                                            };
                                    };
                            };
                      };
                };
        };

GHC.Event.Poll.new4
  :: GHC.Event.Poll.Poll
     -> System.Posix.Types.Fd
     -> GHC.Event.Internal.Event
     -> GHC.Event.Internal.Event
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
[GblId,
 Arity=5,
 Str=<S(SL),1*U(U,A)><L,1*U(U)><L,1*U(U)><L,1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [p_salzG fd_salzH oevt_salzI nevt_salzJ void_0E]
        case p_salzG of {
          GHC.Event.Poll.Poll dt_salzM [Occ=Once] _ [Occ=Dead] ->
              let {
                sat_salAn [Occ=Once]
                  :: GHC.Event.Array.Array GHC.Event.Poll.PollFd
                     -> GHC.Types.IO GHC.Types.Bool
                [LclId] =
                    [fd_salzH oevt_salzI nevt_salzJ] \r [ary_salzO void_0E]
                        case ary_salzO of {
                          GHC.STRef.STRef ww1_salzR [Occ=Once] ->
                              let {
                                sat_salAj [Occ=Once] :: GHC.Event.Poll.PollFd
                                [LclId] =
                                    [fd_salzH oevt_salzI nevt_salzJ] \u []
                                        case fd_salzH of {
                                          GHC.Int.I32# dt3_salzT [Occ=Once*] ->
                                              case nevt_salzJ of {
                                                GHC.Types.I# x#_salzV ->
                                                    case andI# [x#_salzV 1#] of {
                                                      __DEFAULT ->
                                                          case andI# [x#_salzV 2#] of {
                                                            __DEFAULT ->
                                                                case oevt_salzI of {
                                                                  GHC.Types.I# x#1_salzZ ->
                                                                      case andI# [x#1_salzZ 1#] of {
                                                                        __DEFAULT ->
                                                                            case
                                                                                andI# [x#1_salzZ 2#]
                                                                            of
                                                                            { __DEFAULT ->
                                                                                  GHC.Event.Poll.PollFd [dt3_salzT
                                                                                                         5#
                                                                                                         5#];
                                                                              0# ->
                                                                                  GHC.Event.Poll.PollFd [dt3_salzT
                                                                                                         5#
                                                                                                         1#];
                                                                            };
                                                                        0# ->
                                                                            case
                                                                                andI# [x#1_salzZ 2#]
                                                                            of
                                                                            { __DEFAULT ->
                                                                                  GHC.Event.Poll.PollFd [dt3_salzT
                                                                                                         5#
                                                                                                         4#];
                                                                              0# ->
                                                                                  GHC.Event.Poll.PollFd [dt3_salzT
                                                                                                         5#
                                                                                                         0#];
                                                                            };
                                                                      };
                                                                };
                                                            0# ->
                                                                case oevt_salzI of {
                                                                  GHC.Types.I# x#1_salA4 ->
                                                                      case andI# [x#1_salA4 1#] of {
                                                                        __DEFAULT ->
                                                                            case
                                                                                andI# [x#1_salA4 2#]
                                                                            of
                                                                            { __DEFAULT ->
                                                                                  GHC.Event.Poll.PollFd [dt3_salzT
                                                                                                         1#
                                                                                                         5#];
                                                                              0# ->
                                                                                  GHC.Event.Poll.PollFd [dt3_salzT
                                                                                                         1#
                                                                                                         1#];
                                                                            };
                                                                        0# ->
                                                                            case
                                                                                andI# [x#1_salA4 2#]
                                                                            of
                                                                            { __DEFAULT ->
                                                                                  GHC.Event.Poll.PollFd [dt3_salzT
                                                                                                         1#
                                                                                                         4#];
                                                                              0# ->
                                                                                  GHC.Event.Poll.PollFd [dt3_salzT
                                                                                                         1#
                                                                                                         0#];
                                                                            };
                                                                      };
                                                                };
                                                          };
                                                      0# ->
                                                          case andI# [x#_salzV 2#] of {
                                                            __DEFAULT ->
                                                                case oevt_salzI of {
                                                                  GHC.Types.I# x#1_salAa ->
                                                                      case andI# [x#1_salAa 1#] of {
                                                                        __DEFAULT ->
                                                                            case
                                                                                andI# [x#1_salAa 2#]
                                                                            of
                                                                            { __DEFAULT ->
                                                                                  GHC.Event.Poll.PollFd [dt3_salzT
                                                                                                         4#
                                                                                                         5#];
                                                                              0# ->
                                                                                  GHC.Event.Poll.PollFd [dt3_salzT
                                                                                                         4#
                                                                                                         1#];
                                                                            };
                                                                        0# ->
                                                                            case
                                                                                andI# [x#1_salAa 2#]
                                                                            of
                                                                            { __DEFAULT ->
                                                                                  GHC.Event.Poll.PollFd [dt3_salzT
                                                                                                         4#
                                                                                                         4#];
                                                                              0# ->
                                                                                  GHC.Event.Poll.PollFd [dt3_salzT
                                                                                                         4#
                                                                                                         0#];
                                                                            };
                                                                      };
                                                                };
                                                            0# ->
                                                                case oevt_salzI of {
                                                                  GHC.Types.I# x#1_salAf ->
                                                                      case andI# [x#1_salAf 1#] of {
                                                                        __DEFAULT ->
                                                                            case
                                                                                andI# [x#1_salAf 2#]
                                                                            of
                                                                            { __DEFAULT ->
                                                                                  GHC.Event.Poll.PollFd [dt3_salzT
                                                                                                         0#
                                                                                                         5#];
                                                                              0# ->
                                                                                  GHC.Event.Poll.PollFd [dt3_salzT
                                                                                                         0#
                                                                                                         1#];
                                                                            };
                                                                        0# ->
                                                                            case
                                                                                andI# [x#1_salAf 2#]
                                                                            of
                                                                            { __DEFAULT ->
                                                                                  GHC.Event.Poll.PollFd [dt3_salzT
                                                                                                         0#
                                                                                                         4#];
                                                                              0# ->
                                                                                  GHC.Event.Poll.PollFd [dt3_salzT
                                                                                                         0#
                                                                                                         0#];
                                                                            };
                                                                      };
                                                                };
                                                          };
                                                    };
                                              };
                                        };
                              } in 
                                case
                                    GHC.Event.Array.$wsnoc
                                        GHC.Event.Poll.$fStorablePollFd
                                        ww1_salzR
                                        sat_salAj
                                        GHC.Prim.void#
                                of
                                { Unit# _ [Occ=Dead] -> Unit# [GHC.Types.True];
                                };
                        };
              } in  GHC.Conc.Sync.$wwithMVar dt_salzM sat_salAn GHC.Prim.void#;
        };

GHC.Event.Poll.new2
  :: GHC.Event.Poll.Poll
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId, Arity=2, Caf=NoCafRefs, Str=<L,A><S,U>, Unf=OtherCon []] =
    [] \r [ds_salAo void_0E] Unit# [GHC.Tuple.()];

GHC.Event.Poll.new1
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Event.Internal.Backend #)
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [void_0E]
        case newMutVar# [GHC.ForeignPtr.NoFinalizers GHC.Prim.void#] of {
          Unit# ipv1_salAt [Occ=Once] ->
              let {
                sat_salAu [Occ=Once] :: GHC.ForeignPtr.ForeignPtrContents
                [LclId] =
                    CCCS GHC.ForeignPtr.PlainForeignPtr! [ipv1_salAt]; } in
              let {
                sat_salAv [Occ=Once]
                  :: GHC.ForeignPtr.ForeignPtr GHC.Event.Poll.PollFd
                [LclId] =
                    CCCS GHC.ForeignPtr.ForeignPtr! [__NULL sat_salAu]; } in
              let {
                sat_salAw [Occ=Once] :: GHC.Event.Array.AC GHC.Event.Poll.PollFd
                [LclId] =
                    CCCS GHC.Event.Array.AC! [sat_salAv 0# 0#];
              } in 
                case newMutVar# [sat_salAw GHC.Prim.void#] of {
                  Unit# ipv3_salAz [Occ=Once] ->
                      case newMVar# [GHC.Prim.void#] of {
                        Unit# ipv5_salAC ->
                            let {
                              sat_salAD [Occ=Once] :: GHC.Event.Array.Array GHC.Event.Poll.PollFd
                              [LclId] =
                                  CCCS GHC.STRef.STRef! [ipv3_salAz];
                            } in 
                              case putMVar# [ipv5_salAC sat_salAD GHC.Prim.void#] of s2#_salAE {
                                (##) ->
                                    case
                                        newMutVar# [GHC.ForeignPtr.NoFinalizers GHC.Prim.void#]
                                    of
                                    { Unit# ipv7_salAH [Occ=Once] ->
                                          let {
                                            sat_salAI [Occ=Once]
                                              :: GHC.ForeignPtr.ForeignPtrContents
                                            [LclId] =
                                                CCCS GHC.ForeignPtr.PlainForeignPtr! [ipv7_salAH]; } in
                                          let {
                                            sat_salAJ [Occ=Once]
                                              :: GHC.ForeignPtr.ForeignPtr GHC.Event.Poll.PollFd
                                            [LclId] =
                                                CCCS GHC.ForeignPtr.ForeignPtr! [__NULL
                                                                                 sat_salAI]; } in
                                          let {
                                            sat_salAK [Occ=Once]
                                              :: GHC.Event.Array.AC GHC.Event.Poll.PollFd
                                            [LclId] =
                                                CCCS GHC.Event.Array.AC! [sat_salAJ 0# 0#];
                                          } in 
                                            case newMutVar# [sat_salAK GHC.Prim.void#] of {
                                              Unit# ipv9_salAN [Occ=Once] ->
                                                  let {
                                                    sat_salAO [Occ=Once] :: GHC.Event.Poll.Poll
                                                    [LclId] =
                                                        CCCS GHC.Event.Poll.Poll! [ipv5_salAC
                                                                                   ipv9_salAN]; } in
                                                  let {
                                                    sat_salAP [Occ=Once]
                                                      :: GHC.Event.Internal.Backend
                                                    [LclId] =
                                                        CCCS GHC.Event.Internal.Backend! [sat_salAO
                                                                                          GHC.Event.Poll.new5
                                                                                          GHC.Event.Poll.new4
                                                                                          GHC.Event.Poll.new3
                                                                                          GHC.Event.Poll.new2];
                                                  } in  Unit# [sat_salAP];
                                            };
                                    };
                              };
                      };
                };
        };

GHC.Event.Poll.new :: GHC.Types.IO GHC.Event.Internal.Backend
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [void_0E] GHC.Event.Poll.new1 GHC.Prim.void#;

GHC.Event.Poll.PollFd
  :: GHC.Prim.Int#
     -> GHC.Prim.Int# -> GHC.Prim.Int# -> GHC.Event.Poll.PollFd
[GblId[DataCon],
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,U><L,U><L,U>m,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.Event.Poll.PollFd [eta_B3 eta_B2 eta_B1];

GHC.Event.Poll.Poll
  :: GHC.Prim.MVar#
       GHC.Prim.RealWorld (GHC.Event.Array.Array GHC.Event.Poll.PollFd)
     -> GHC.Prim.MutVar#
          GHC.Prim.RealWorld (GHC.Event.Array.AC GHC.Event.Poll.PollFd)
     -> GHC.Event.Poll.Poll
[GblId[DataCon],
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U><L,U>m,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] GHC.Event.Poll.Poll [eta_B2 eta_B1];

