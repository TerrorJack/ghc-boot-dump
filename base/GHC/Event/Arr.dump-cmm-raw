
==================== Raw Cmm ====================
2018-03-16 15:55:04.408724332 UTC

[]


==================== Raw Cmm ====================
2018-03-16 15:55:04.411068246 UTC

[section ""data" . GHC.Event.Arr.new1_closure" {
     GHC.Event.Arr.new1_closure:
         const GHC.Event.Arr.new1_info;
 },
 GHC.Event.Arr.new1_entry() //  [R2, R3]
         { []
         }
     {offset
       cqUg: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cqUm; else goto cqUn;
       cqUm: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Arr.new1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cqUn: // global
           I64[Sp - 16] = block_cqUd_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto uqUs; else goto cqUe;
       uqUs: // global
           call _cqUd(R1) args: 0, res: 0, upd: 0;
       cqUe: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Arr.new1_info" {
     GHC.Event.Arr.new1_info:
         const GHC.Event.Arr.new1_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _cqUd() //  [R1]
         { []
         }
     {offset
       cqUd: // global
           _sqPW::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_cqUj_info;
           R2 = _sqPW::P64;
           R1 = I64[R1 + 7];
           Sp = Sp + 8;
           call stg_newArray#(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_cqUd_info" {
     block_cqUd_info:
         const _cqUd;
         const 1;
         const 30;
 },
 _cqUj() //  [R1]
         { []
         }
     {offset
       cqUj: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto cqUr; else goto cqUq;
       cqUr: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cqUq: // global
           I64[Hp - 8] = GHC.Event.Arr.Arr_con_info;
           P64[Hp] = R1;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cqUj_info" {
     block_cqUj_info:
         const _cqUj;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.418446678 UTC

[section ""data" . GHC.Event.Arr.new_closure" {
     GHC.Event.Arr.new_closure:
         const GHC.Event.Arr.new_info;
 },
 GHC.Event.Arr.new_entry() //  [R2, R3]
         { []
         }
     {offset
       cqUK: // global
           R3 = R3;
           R2 = R2;
           call GHC.Event.Arr.new1_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Arr.new_info" {
     GHC.Event.Arr.new_info:
         const GHC.Event.Arr.new_entry;
         const 0;
         const 14;
         const 12884901903;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.422498858 UTC

[section ""data" . GHC.Event.Arr.size_closure" {
     GHC.Event.Arr.size_closure:
         const GHC.Event.Arr.size_info;
 },
 GHC.Event.Arr.size_entry() //  [R2]
         { []
         }
     {offset
       cqUY: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cqV5; else goto cqV6;
       cqV5: // global
           R2 = R2;
           R1 = GHC.Event.Arr.size_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cqV6: // global
           I64[Sp - 8] = block_cqUV_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto uqVa; else goto cqUW;
       uqVa: // global
           call _cqUV(R1) args: 0, res: 0, upd: 0;
       cqUW: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Arr.size_info" {
     GHC.Event.Arr.size_info:
         const GHC.Event.Arr.size_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cqUV() //  [R1]
         { []
         }
     {offset
       cqUV: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto cqV9; else goto cqV8;
       cqV9: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cqV8: // global
           _sqQ8::I64 = I64[P64[R1 + 7] + 8];
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = _sqQ8::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cqUV_info" {
     block_cqUV_info:
         const _cqUV;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.428938209 UTC

[section ""data" . GHC.Event.Arr.read1_closure" {
     GHC.Event.Arr.read1_closure:
         const GHC.Event.Arr.read1_info;
 },
 GHC.Event.Arr.read1_entry() //  [R2, R3]
         { []
         }
     {offset
       cqVt: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cqVC; else goto cqVD;
       cqVC: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Arr.read1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cqVD: // global
           I64[Sp - 16] = block_cqVq_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto uqVH; else goto cqVr;
       uqVH: // global
           call _cqVq(R1) args: 0, res: 0, upd: 0;
       cqVr: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Arr.read1_info" {
     GHC.Event.Arr.read1_info:
         const GHC.Event.Arr.read1_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _cqVq() //  [R1]
         { []
         }
     {offset
       cqVq: // global
           I64[Sp] = block_cqVw_info;
           _sqQd::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _sqQd::P64;
           if (R1 & 7 != 0) goto uqVG; else goto cqVx;
       uqVG: // global
           call _cqVw(R1) args: 0, res: 0, upd: 0;
       cqVx: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_cqVq_info" {
     block_cqVq_info:
         const _cqVq;
         const 1;
         const 30;
 },
 _cqVw() //  [R1]
         { []
         }
     {offset
       cqVw: // global
           R1 = P64[P64[Sp + 8] + ((I64[R1 + 7] << 3) + 24)];
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cqVw_info" {
     block_cqVw_info:
         const _cqVw;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.436089746 UTC

[section ""data" . GHC.Event.Arr.read_closure" {
     GHC.Event.Arr.read_closure:
         const GHC.Event.Arr.read_info;
 },
 GHC.Event.Arr.read_entry() //  [R2, R3]
         { []
         }
     {offset
       cqW2: // global
           R3 = R3;
           R2 = R2;
           call GHC.Event.Arr.read1_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Arr.read_info" {
     GHC.Event.Arr.read_info:
         const GHC.Event.Arr.read_entry;
         const 0;
         const 14;
         const 12884901903;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.440337167 UTC

[section ""data" . GHC.Event.Arr.write1_closure" {
     GHC.Event.Arr.write1_closure:
         const GHC.Event.Arr.write1_info;
 },
 GHC.Event.Arr.write1_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cqWg: // global
           if ((Sp + -24) < SpLim) (likely: False) goto cqWk; else goto cqWl;
       cqWk: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Arr.write1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cqWl: // global
           I64[Sp - 24] = block_cqWd_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto uqWt; else goto cqWe;
       uqWt: // global
           call _cqWd(R1) args: 0, res: 0, upd: 0;
       cqWe: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Arr.write1_info" {
     GHC.Event.Arr.write1_info:
         const GHC.Event.Arr.write1_entry;
         const 0;
         const 14;
         const 17179869207;
 },
 _cqWd() //  [R1]
         { []
         }
     {offset
       cqWd: // global
           I64[Sp] = block_cqWj_info;
           _sqQl::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _sqQl::P64;
           if (R1 & 7 != 0) goto uqWs; else goto cqWn;
       uqWs: // global
           call _cqWj(R1) args: 0, res: 0, upd: 0;
       cqWn: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_cqWd_info" {
     block_cqWd_info:
         const _cqWd;
         const 2;
         const 30;
 },
 _cqWj() //  [R1]
         { []
         }
     {offset
       cqWj: // global
           _sqQi::P64 = P64[Sp + 16];
           _sqQl::P64 = P64[Sp + 8];
           _sqQn::I64 = I64[R1 + 7];
           call MO_WriteBarrier();
           P64[(_sqQl::P64 + 24) + (_sqQn::I64 << 3)] = _sqQi::P64;
           I64[_sqQl::P64] = stg_MUT_ARR_PTRS_DIRTY_info;
           I8[(_sqQl::P64 + 24) + ((I64[_sqQl::P64 + 8] << 3) + (_sqQn::I64 >> 7))] = 1 :: W8;
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cqWj_info" {
     block_cqWj_info:
         const _cqWj;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.447700488 UTC

[section ""data" . GHC.Event.Arr.write_closure" {
     GHC.Event.Arr.write_closure:
         const GHC.Event.Arr.write_info;
 },
 GHC.Event.Arr.write_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cqWQ: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call GHC.Event.Arr.write1_entry(R4,
                                           R3,
                                           R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Arr.write_info" {
     GHC.Event.Arr.write_info:
         const GHC.Event.Arr.write_entry;
         const 0;
         const 14;
         const 17179869207;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.450732668 UTC

[section ""cstring" . GHC.Event.Arr.$trModule4_bytes" {
     GHC.Event.Arr.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.452413843 UTC

[section ""data" . GHC.Event.Arr.$trModule3_closure" {
     GHC.Event.Arr.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Arr.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.454103546 UTC

[section ""cstring" . GHC.Event.Arr.$trModule2_bytes" {
     GHC.Event.Arr.$trModule2_bytes:
         I8[] [71,72,67,46,69,118,101,110,116,46,65,114,114]
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.455779794 UTC

[section ""data" . GHC.Event.Arr.$trModule1_closure" {
     GHC.Event.Arr.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Arr.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.457830132 UTC

[section ""data" . GHC.Event.Arr.$trModule_closure" {
     GHC.Event.Arr.$trModule_closure:
         const GHC.Types.Module_con_info;
         const GHC.Event.Arr.$trModule3_closure+1;
         const GHC.Event.Arr.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.459517485 UTC

[section ""data" . $krep_rqPP_closure" {
     $krep_rqPP_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcRealWorld_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.461325442 UTC

[section ""data" . $krep1_rqPQ_closure" {
     $krep1_rqPQ_closure:
         const GHC.Types.KindRepVar_con_info;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.462985005 UTC

[section ""data" . $krep2_rqPR_closure" {
     $krep2_rqPR_closure:
         const :_con_info;
         const $krep1_rqPQ_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.46468549 UTC

[section ""data" . $krep3_rqPS_closure" {
     $krep3_rqPS_closure:
         const :_con_info;
         const $krep_rqPP_closure+1;
         const $krep2_rqPR_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.466961663 UTC

[section ""data" . $krep4_rqPT_closure" {
     $krep4_rqPT_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcMutableArray#_closure;
         const $krep3_rqPS_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.468608465 UTC

[section ""cstring" . GHC.Event.Arr.$tcArr2_bytes" {
     GHC.Event.Arr.$tcArr2_bytes:
         I8[] [65,114,114]
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.470331678 UTC

[section ""data" . GHC.Event.Arr.$tcArr1_closure" {
     GHC.Event.Arr.$tcArr1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Arr.$tcArr2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.472170167 UTC

[section ""data" . GHC.Event.Arr.$tcArr_closure" {
     GHC.Event.Arr.$tcArr_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Arr.$trModule_closure+1;
         const GHC.Event.Arr.$tcArr1_closure+1;
         const GHC.Types.krep$*Arr*_closure;
         const 7773062135567581215;
         const 417034436732562294;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.475251075 UTC

[section ""data" . $krep5_rqPU_closure" {
     $krep5_rqPU_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Event.Arr.$tcArr_closure+1;
         const $krep2_rqPR_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.476916586 UTC

[section ""data" . GHC.Event.Arr.$tc'Arr1_closure" {
     GHC.Event.Arr.$tc'Arr1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep4_rqPT_closure+1;
         const $krep5_rqPU_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.479216481 UTC

[section ""cstring" . GHC.Event.Arr.$tc'Arr3_bytes" {
     GHC.Event.Arr.$tc'Arr3_bytes:
         I8[] [39,65,114,114]
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.481020341 UTC

[section ""data" . GHC.Event.Arr.$tc'Arr2_closure" {
     GHC.Event.Arr.$tc'Arr2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Arr.$tc'Arr3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.48295553 UTC

[section ""data" . GHC.Event.Arr.$tc'Arr_closure" {
     GHC.Event.Arr.$tc'Arr_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Arr.$trModule_closure+1;
         const GHC.Event.Arr.$tc'Arr2_closure+1;
         const GHC.Event.Arr.$tc'Arr1_closure+4;
         const 2259010253002565214;
         const 11584643395998142804;
         const 1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.485640696 UTC

[section ""data" . GHC.Event.Arr.Arr_closure" {
     GHC.Event.Arr.Arr_closure:
         const GHC.Event.Arr.Arr_info;
 },
 GHC.Event.Arr.Arr_entry() //  [R2]
         { []
         }
     {offset
       cqXk: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto cqXo; else goto cqXn;
       cqXo: // global
           HpAlloc = 16;
           R2 = R2;
           R1 = GHC.Event.Arr.Arr_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cqXn: // global
           I64[Hp - 8] = GHC.Event.Arr.Arr_con_info;
           P64[Hp] = R2;
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Arr.Arr_info" {
     GHC.Event.Arr.Arr_info:
         const GHC.Event.Arr.Arr_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.489743468 UTC

[section ""cstring" . iqU8_str" {
     iqU8_str:
         I8[] [98,97,115,101,58,71,72,67,46,69,118,101,110,116,46,65,114,114,46,65,114,114]
 },
 GHC.Event.Arr.Arr_con_entry() //  [R1]
         { []
         }
     {offset
       cqXu: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Arr.Arr_con_info" {
     GHC.Event.Arr.Arr_con_info:
         const GHC.Event.Arr.Arr_con_entry;
         const 1;
         const 2;
         const iqU8_str;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.493725832 UTC

[section ""relreadonly" . SqSg_srt" { SqSg_srt:
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.606637358 UTC

[]


==================== Raw Cmm ====================
2018-03-16 15:55:04.610032469 UTC

[section ""data" . GHC.Event.Arr.new1_closure" {
     GHC.Event.Arr.new1_closure:
         const GHC.Event.Arr.new1_info;
 },
 GHC.Event.Arr.new1_entry() //  [R2, R3]
         { []
         }
     {offset
       cqYb: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cqYh; else goto cqYi;
       cqYh: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Arr.new1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cqYi: // global
           I64[Sp - 16] = block_cqY8_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto uqYn; else goto cqY9;
       uqYn: // global
           call _cqY8(R1) args: 0, res: 0, upd: 0;
       cqY9: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Arr.new1_info" {
     GHC.Event.Arr.new1_info:
         const GHC.Event.Arr.new1_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _cqY8() //  [R1]
         { []
         }
     {offset
       cqY8: // global
           _sqXB::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_cqYe_info;
           R2 = _sqXB::P64;
           R1 = I64[R1 + 7];
           Sp = Sp + 8;
           call stg_newArray#(R2, R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_cqY8_info" {
     block_cqY8_info:
         const _cqY8;
         const 1;
         const 30;
 },
 _cqYe() //  [R1]
         { []
         }
     {offset
       cqYe: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto cqYm; else goto cqYl;
       cqYm: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cqYl: // global
           I64[Hp - 8] = GHC.Event.Arr.Arr_con_info;
           P64[Hp] = R1;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cqYe_info" {
     block_cqYe_info:
         const _cqYe;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.618321183 UTC

[section ""data" . GHC.Event.Arr.new_closure" {
     GHC.Event.Arr.new_closure:
         const GHC.Event.Arr.new_info;
 },
 GHC.Event.Arr.new_entry() //  [R2, R3]
         { []
         }
     {offset
       cqYI: // global
           R3 = R3;
           R2 = R2;
           call GHC.Event.Arr.new1_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Arr.new_info" {
     GHC.Event.Arr.new_info:
         const GHC.Event.Arr.new_entry;
         const 0;
         const 14;
         const 12884901903;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.622702702 UTC

[section ""data" . GHC.Event.Arr.size_closure" {
     GHC.Event.Arr.size_closure:
         const GHC.Event.Arr.size_info;
 },
 GHC.Event.Arr.size_entry() //  [R2]
         { []
         }
     {offset
       cqYW: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cqZ3; else goto cqZ4;
       cqZ3: // global
           R2 = R2;
           R1 = GHC.Event.Arr.size_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cqZ4: // global
           I64[Sp - 8] = block_cqYT_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto uqZ8; else goto cqYU;
       uqZ8: // global
           call _cqYT(R1) args: 0, res: 0, upd: 0;
       cqYU: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Arr.size_info" {
     GHC.Event.Arr.size_info:
         const GHC.Event.Arr.size_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _cqYT() //  [R1]
         { []
         }
     {offset
       cqYT: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto cqZ7; else goto cqZ6;
       cqZ7: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cqZ6: // global
           _sqXN::I64 = I64[P64[R1 + 7] + 8];
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = _sqXN::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cqYT_info" {
     block_cqYT_info:
         const _cqYT;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.629593867 UTC

[section ""data" . GHC.Event.Arr.read1_closure" {
     GHC.Event.Arr.read1_closure:
         const GHC.Event.Arr.read1_info;
 },
 GHC.Event.Arr.read1_entry() //  [R2, R3]
         { []
         }
     {offset
       cqZt: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cqZC; else goto cqZD;
       cqZC: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Arr.read1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cqZD: // global
           I64[Sp - 16] = block_cqZq_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto uqZH; else goto cqZr;
       uqZH: // global
           call _cqZq(R1) args: 0, res: 0, upd: 0;
       cqZr: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Arr.read1_info" {
     GHC.Event.Arr.read1_info:
         const GHC.Event.Arr.read1_entry;
         const 0;
         const 14;
         const 12884901903;
 },
 _cqZq() //  [R1]
         { []
         }
     {offset
       cqZq: // global
           I64[Sp] = block_cqZw_info;
           _sqXS::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _sqXS::P64;
           if (R1 & 7 != 0) goto uqZG; else goto cqZx;
       uqZG: // global
           call _cqZw(R1) args: 0, res: 0, upd: 0;
       cqZx: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_cqZq_info" {
     block_cqZq_info:
         const _cqZq;
         const 1;
         const 30;
 },
 _cqZw() //  [R1]
         { []
         }
     {offset
       cqZw: // global
           R1 = P64[P64[Sp + 8] + ((I64[R1 + 7] << 3) + 24)];
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cqZw_info" {
     block_cqZw_info:
         const _cqZw;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.637622242 UTC

[section ""data" . GHC.Event.Arr.read_closure" {
     GHC.Event.Arr.read_closure:
         const GHC.Event.Arr.read_info;
 },
 GHC.Event.Arr.read_entry() //  [R2, R3]
         { []
         }
     {offset
       cr04: // global
           R3 = R3;
           R2 = R2;
           call GHC.Event.Arr.read1_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Arr.read_info" {
     GHC.Event.Arr.read_info:
         const GHC.Event.Arr.read_entry;
         const 0;
         const 14;
         const 12884901903;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.642261103 UTC

[section ""data" . GHC.Event.Arr.write1_closure" {
     GHC.Event.Arr.write1_closure:
         const GHC.Event.Arr.write1_info;
 },
 GHC.Event.Arr.write1_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cr0i: // global
           if ((Sp + -24) < SpLim) (likely: False) goto cr0m; else goto cr0n;
       cr0m: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Arr.write1_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cr0n: // global
           I64[Sp - 24] = block_cr0f_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto ur0v; else goto cr0g;
       ur0v: // global
           call _cr0f(R1) args: 0, res: 0, upd: 0;
       cr0g: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Arr.write1_info" {
     GHC.Event.Arr.write1_info:
         const GHC.Event.Arr.write1_entry;
         const 0;
         const 14;
         const 17179869207;
 },
 _cr0f() //  [R1]
         { []
         }
     {offset
       cr0f: // global
           I64[Sp] = block_cr0l_info;
           _sqY0::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _sqY0::P64;
           if (R1 & 7 != 0) goto ur0u; else goto cr0p;
       ur0u: // global
           call _cr0l(R1) args: 0, res: 0, upd: 0;
       cr0p: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_cr0f_info" {
     block_cr0f_info:
         const _cr0f;
         const 2;
         const 30;
 },
 _cr0l() //  [R1]
         { []
         }
     {offset
       cr0l: // global
           _sqXX::P64 = P64[Sp + 16];
           _sqY0::P64 = P64[Sp + 8];
           _sqY2::I64 = I64[R1 + 7];
           call MO_WriteBarrier();
           P64[(_sqY0::P64 + 24) + (_sqY2::I64 << 3)] = _sqXX::P64;
           I64[_sqY0::P64] = stg_MUT_ARR_PTRS_DIRTY_info;
           I8[(_sqY0::P64 + 24) + ((I64[_sqY0::P64 + 8] << 3) + (_sqY2::I64 >> 7))] = 1 :: W8;
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_cr0l_info" {
     block_cr0l_info:
         const _cr0l;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.649786747 UTC

[section ""data" . GHC.Event.Arr.write_closure" {
     GHC.Event.Arr.write_closure:
         const GHC.Event.Arr.write_info;
 },
 GHC.Event.Arr.write_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       cr0W: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call GHC.Event.Arr.write1_entry(R4,
                                           R3,
                                           R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Arr.write_info" {
     GHC.Event.Arr.write_info:
         const GHC.Event.Arr.write_entry;
         const 0;
         const 14;
         const 17179869207;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.653089245 UTC

[section ""cstring" . GHC.Event.Arr.$trModule4_bytes" {
     GHC.Event.Arr.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.654645298 UTC

[section ""data" . GHC.Event.Arr.$trModule3_closure" {
     GHC.Event.Arr.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Arr.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.656308313 UTC

[section ""cstring" . GHC.Event.Arr.$trModule2_bytes" {
     GHC.Event.Arr.$trModule2_bytes:
         I8[] [71,72,67,46,69,118,101,110,116,46,65,114,114]
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.658457338 UTC

[section ""data" . GHC.Event.Arr.$trModule1_closure" {
     GHC.Event.Arr.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Arr.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.660115721 UTC

[section ""data" . GHC.Event.Arr.$trModule_closure" {
     GHC.Event.Arr.$trModule_closure:
         const GHC.Types.Module_con_info;
         const GHC.Event.Arr.$trModule3_closure+1;
         const GHC.Event.Arr.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.661854138 UTC

[section ""data" . $krep_rqPP_closure" {
     $krep_rqPP_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcRealWorld_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.663543784 UTC

[section ""data" . $krep1_rqPQ_closure" {
     $krep1_rqPQ_closure:
         const GHC.Types.KindRepVar_con_info;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.665179329 UTC

[section ""data" . $krep2_rqPR_closure" {
     $krep2_rqPR_closure:
         const :_con_info;
         const $krep1_rqPQ_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.667084599 UTC

[section ""data" . $krep3_rqPS_closure" {
     $krep3_rqPS_closure:
         const :_con_info;
         const $krep_rqPP_closure+1;
         const $krep2_rqPR_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.668694576 UTC

[section ""data" . $krep4_rqPT_closure" {
     $krep4_rqPT_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcMutableArray#_closure;
         const $krep3_rqPS_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.670338203 UTC

[section ""cstring" . GHC.Event.Arr.$tcArr2_bytes" {
     GHC.Event.Arr.$tcArr2_bytes:
         I8[] [65,114,114]
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.671925874 UTC

[section ""data" . GHC.Event.Arr.$tcArr1_closure" {
     GHC.Event.Arr.$tcArr1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Arr.$tcArr2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.673952184 UTC

[section ""data" . GHC.Event.Arr.$tcArr_closure" {
     GHC.Event.Arr.$tcArr_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Arr.$trModule_closure+1;
         const GHC.Event.Arr.$tcArr1_closure+1;
         const GHC.Types.krep$*Arr*_closure;
         const 7773062135567581215;
         const 417034436732562294;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.675609191 UTC

[section ""data" . $krep5_rqPU_closure" {
     $krep5_rqPU_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Event.Arr.$tcArr_closure+1;
         const $krep2_rqPR_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.677281047 UTC

[section ""data" . GHC.Event.Arr.$tc'Arr1_closure" {
     GHC.Event.Arr.$tc'Arr1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep4_rqPT_closure+1;
         const $krep5_rqPU_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.67897287 UTC

[section ""cstring" . GHC.Event.Arr.$tc'Arr3_bytes" {
     GHC.Event.Arr.$tc'Arr3_bytes:
         I8[] [39,65,114,114]
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.680893804 UTC

[section ""data" . GHC.Event.Arr.$tc'Arr2_closure" {
     GHC.Event.Arr.$tc'Arr2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Arr.$tc'Arr3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.682593902 UTC

[section ""data" . GHC.Event.Arr.$tc'Arr_closure" {
     GHC.Event.Arr.$tc'Arr_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Arr.$trModule_closure+1;
         const GHC.Event.Arr.$tc'Arr2_closure+1;
         const GHC.Event.Arr.$tc'Arr1_closure+4;
         const 2259010253002565214;
         const 11584643395998142804;
         const 1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.684905644 UTC

[section ""data" . GHC.Event.Arr.Arr_closure" {
     GHC.Event.Arr.Arr_closure:
         const GHC.Event.Arr.Arr_info;
 },
 GHC.Event.Arr.Arr_entry() //  [R2]
         { []
         }
     {offset
       cr1q: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto cr1u; else goto cr1t;
       cr1u: // global
           HpAlloc = 16;
           R2 = R2;
           R1 = GHC.Event.Arr.Arr_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cr1t: // global
           I64[Hp - 8] = GHC.Event.Arr.Arr_con_info;
           P64[Hp] = R2;
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Arr.Arr_info" {
     GHC.Event.Arr.Arr_info:
         const GHC.Event.Arr.Arr_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.688385426 UTC

[section ""cstring" . ir1C_str" {
     ir1C_str:
         I8[] [98,97,115,101,58,71,72,67,46,69,118,101,110,116,46,65,114,114,46,65,114,114]
 },
 GHC.Event.Arr.Arr_con_entry() //  [R1]
         { []
         }
     {offset
       cr1B: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Event.Arr.Arr_con_info" {
     GHC.Event.Arr.Arr_con_info:
         const GHC.Event.Arr.Arr_con_entry;
         const 1;
         const 2;
         const ir1C_str;
 }]


==================== Raw Cmm ====================
2018-03-16 15:55:04.691678016 UTC

[section ""relreadonly" . Sr1I_srt" { Sr1I_srt:
 }]

