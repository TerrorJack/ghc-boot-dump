
==================== Pre unarise: ====================
2018-03-16 16:04:38.858503466 UTC

GHC.Event.EPoll.$WEPoll [InlPrag=INLINE[2]]
  :: GHC.Event.EPoll.EPollFd
     -> GHC.Event.Array.Array GHC.Event.EPoll.Event
     -> GHC.Event.EPoll.EPoll
[GblId[DataConWrapper],
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,U><S,U>m,
 Unf=OtherCon []] =
    [] \r [dt_s9y0b dt_s9y0c]
        case dt_s9y0b of {
          GHC.Int.I32# dt_s9y0e [Occ=Once] ->
              case dt_s9y0c of {
                GHC.STRef.STRef dt_s9y0g [Occ=Once] ->
                    GHC.Event.EPoll.EPoll [dt_s9y0e dt_s9y0g];
              };
        };

GHC.Event.EPoll.$fStorableEvent_$calignment
  :: GHC.Event.EPoll.Event -> GHC.Types.Int
[GblId, Arity=1, Caf=NoCafRefs, Str=<L,A>m, Unf=OtherCon []] =
    [] \r [ds_s9y0h] Foreign.Storable.$fStorableBool7;

GHC.Event.EPoll.$fStorableEvent7 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [12#];

GHC.Event.EPoll.$fStorableEvent_$csizeOf
  :: GHC.Event.EPoll.Event -> GHC.Types.Int
[GblId, Arity=1, Caf=NoCafRefs, Str=<L,A>m, Unf=OtherCon []] =
    [] \r [ds_s9y0i] GHC.Event.EPoll.$fStorableEvent7;

GHC.Event.EPoll.$fStorableEvent2
  :: GHC.Ptr.Ptr GHC.Event.EPoll.Event
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Event.EPoll.Event #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ptr_s9y0j s_s9y0k]
        case ptr_s9y0j of {
          GHC.Ptr.Ptr addr_s9y0m ->
              case readWord32OffAddr# [addr_s9y0m 0# s_s9y0k] of {
                (#,#) ipv_s9y0o [Occ=Once] ipv1_s9y0p [Occ=Once] ->
                    case plusAddr# [addr_s9y0m 4#] of sat_s9y0q {
                      __DEFAULT ->
                          case readInt32OffAddr# [sat_s9y0q 0# ipv_s9y0o] of {
                            (#,#) ipv2_s9y0s [Occ=Once] ipv3_s9y0t [Occ=Once] ->
                                let {
                                  sat_s9y0v [Occ=Once] :: System.Posix.Types.Fd
                                  [LclId] =
                                      CCCS GHC.Int.I32#! [ipv3_s9y0t]; } in
                                let {
                                  sat_s9y0u [Occ=Once] :: GHC.Event.EPoll.EventType
                                  [LclId] =
                                      CCCS GHC.Word.W32#! [ipv1_s9y0p]; } in
                                let {
                                  sat_s9y0w [Occ=Once] :: GHC.Event.EPoll.Event
                                  [LclId] =
                                      CCCS GHC.Event.EPoll.Event! [sat_s9y0u sat_s9y0v];
                                } in  (#,#) [ipv2_s9y0s sat_s9y0w];
                          };
                    };
              };
        };

GHC.Event.EPoll.$fStorableEvent1
  :: GHC.Ptr.Ptr GHC.Event.EPoll.Event
     -> GHC.Event.EPoll.Event
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S(S)S(S)),1*U(1*U(U),1*U(U))><S,U>,
 Unf=OtherCon []] =
    [] \r [ptr_s9y0x e_s9y0y s_s9y0z]
        case ptr_s9y0x of {
          GHC.Ptr.Ptr addr_s9y0B ->
              case e_s9y0y of {
                GHC.Event.EPoll.Event ds_s9y0D [Occ=Once] ds1_s9y0E [Occ=Once] ->
                    case ds_s9y0D of {
                      GHC.Word.W32# x_s9y0G [Occ=Once] ->
                          case
                              writeWord32OffAddr# [addr_s9y0B 0# x_s9y0G s_s9y0z]
                          of
                          s2_s9y0H
                          { __DEFAULT ->
                                case ds1_s9y0E of {
                                  GHC.Int.I32# x1_s9y0J [Occ=Once] ->
                                      case plusAddr# [addr_s9y0B 4#] of sat_s9y0K {
                                        __DEFAULT ->
                                            case
                                                writeInt32OffAddr# [sat_s9y0K 0# x1_s9y0J s2_s9y0H]
                                            of
                                            s1_s9y0L
                                            { __DEFAULT -> (#,#) [s1_s9y0L GHC.Tuple.()];
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.Event.EPoll.$fStorableEvent4
  :: forall b.
     GHC.Ptr.Ptr b
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Event.EPoll.Event #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ptr_s9y0M off_s9y0N eta_s9y0O]
        case ptr_s9y0M of {
          GHC.Ptr.Ptr addr_s9y0Q [Occ=Once] ->
              case off_s9y0N of {
                GHC.Types.I# d_s9y0S [Occ=Once] ->
                    case plusAddr# [addr_s9y0Q d_s9y0S] of addr1_s9y0T [Dmd=<S,U>] {
                      __DEFAULT ->
                          case readWord32OffAddr# [addr1_s9y0T 0# eta_s9y0O] of {
                            (#,#) ipv_s9y0V [Occ=Once] ipv1_s9y0W [Occ=Once] ->
                                case plusAddr# [addr1_s9y0T 4#] of sat_s9y0X {
                                  __DEFAULT ->
                                      case readInt32OffAddr# [sat_s9y0X 0# ipv_s9y0V] of {
                                        (#,#) ipv2_s9y0Z [Occ=Once] ipv3_s9y10 [Occ=Once] ->
                                            let {
                                              sat_s9y12 [Occ=Once] :: System.Posix.Types.Fd
                                              [LclId] =
                                                  CCCS GHC.Int.I32#! [ipv3_s9y10]; } in
                                            let {
                                              sat_s9y11 [Occ=Once] :: GHC.Event.EPoll.EventType
                                              [LclId] =
                                                  CCCS GHC.Word.W32#! [ipv1_s9y0W]; } in
                                            let {
                                              sat_s9y13 [Occ=Once] :: GHC.Event.EPoll.Event
                                              [LclId] =
                                                  CCCS GHC.Event.EPoll.Event! [sat_s9y11 sat_s9y12];
                                            } in  (#,#) [ipv2_s9y0Z sat_s9y13];
                                      };
                                };
                          };
                    };
              };
        };

GHC.Event.EPoll.$fStorableEvent6
  :: GHC.Ptr.Ptr GHC.Event.EPoll.Event
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Event.EPoll.Event #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ptr_s9y14 off_s9y15 eta_s9y16]
        case ptr_s9y14 of {
          GHC.Ptr.Ptr addr_s9y18 [Occ=Once] ->
              case off_s9y15 of {
                GHC.Types.I# x_s9y1a [Occ=Once] ->
                    case *# [x_s9y1a 12#] of sat_s9y1c {
                      __DEFAULT ->
                          case plusAddr# [addr_s9y18 sat_s9y1c] of addr1_s9y1b [Dmd=<S,U>] {
                            __DEFAULT ->
                                case readWord32OffAddr# [addr1_s9y1b 0# eta_s9y16] of {
                                  (#,#) ipv_s9y1e [Occ=Once] ipv1_s9y1f [Occ=Once] ->
                                      case plusAddr# [addr1_s9y1b 4#] of sat_s9y1g {
                                        __DEFAULT ->
                                            case readInt32OffAddr# [sat_s9y1g 0# ipv_s9y1e] of {
                                              (#,#) ipv2_s9y1i [Occ=Once] ipv3_s9y1j [Occ=Once] ->
                                                  let {
                                                    sat_s9y1l [Occ=Once] :: System.Posix.Types.Fd
                                                    [LclId] =
                                                        CCCS GHC.Int.I32#! [ipv3_s9y1j]; } in
                                                  let {
                                                    sat_s9y1k [Occ=Once]
                                                      :: GHC.Event.EPoll.EventType
                                                    [LclId] =
                                                        CCCS GHC.Word.W32#! [ipv1_s9y1f]; } in
                                                  let {
                                                    sat_s9y1m [Occ=Once] :: GHC.Event.EPoll.Event
                                                    [LclId] =
                                                        CCCS GHC.Event.EPoll.Event! [sat_s9y1k
                                                                                     sat_s9y1l];
                                                  } in  (#,#) [ipv2_s9y1i sat_s9y1m];
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.Event.EPoll.$fStorableEvent3
  :: forall b.
     GHC.Ptr.Ptr b
     -> GHC.Types.Int
     -> GHC.Event.EPoll.Event
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S(S)S(S)),1*U(1*U(U),1*U(U))><S,U>,
 Unf=OtherCon []] =
    [] \r [ptr_s9y1n off_s9y1o eta_s9y1p eta1_s9y1q]
        case ptr_s9y1n of {
          GHC.Ptr.Ptr addr_s9y1s [Occ=Once] ->
              case off_s9y1o of {
                GHC.Types.I# d_s9y1u [Occ=Once] ->
                    case eta_s9y1p of {
                      GHC.Event.EPoll.Event ds_s9y1w [Occ=Once] ds1_s9y1x [Occ=Once] ->
                          case ds_s9y1w of {
                            GHC.Word.W32# x_s9y1z [Occ=Once] ->
                                case plusAddr# [addr_s9y1s d_s9y1u] of addr1_s9y1A [Dmd=<S,U>] {
                                  __DEFAULT ->
                                      case
                                          writeWord32OffAddr# [addr1_s9y1A 0# x_s9y1z eta1_s9y1q]
                                      of
                                      s2_s9y1B
                                      { __DEFAULT ->
                                            case ds1_s9y1x of {
                                              GHC.Int.I32# x1_s9y1D [Occ=Once] ->
                                                  case plusAddr# [addr1_s9y1A 4#] of sat_s9y1E {
                                                    __DEFAULT ->
                                                        case
                                                            writeInt32OffAddr# [sat_s9y1E
                                                                                0#
                                                                                x1_s9y1D
                                                                                s2_s9y1B]
                                                        of
                                                        s1_s9y1F
                                                        { __DEFAULT ->
                                                              (#,#) [s1_s9y1F GHC.Tuple.()];
                                                        };
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.Event.EPoll.$fStorableEvent5
  :: GHC.Ptr.Ptr GHC.Event.EPoll.Event
     -> GHC.Types.Int
     -> GHC.Event.EPoll.Event
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S(S)S(S)),1*U(1*U(U),1*U(U))><S,U>,
 Unf=OtherCon []] =
    [] \r [ptr_s9y1G off_s9y1H val_s9y1I eta_s9y1J]
        case ptr_s9y1G of {
          GHC.Ptr.Ptr addr_s9y1L [Occ=Once] ->
              case off_s9y1H of {
                GHC.Types.I# x_s9y1N [Occ=Once] ->
                    case val_s9y1I of {
                      GHC.Event.EPoll.Event ds_s9y1P [Occ=Once] ds1_s9y1Q [Occ=Once] ->
                          case ds_s9y1P of {
                            GHC.Word.W32# x1_s9y1S [Occ=Once] ->
                                case *# [x_s9y1N 12#] of sat_s9y1U {
                                  __DEFAULT ->
                                      case
                                          plusAddr# [addr_s9y1L sat_s9y1U]
                                      of
                                      addr1_s9y1T [Dmd=<S,U>]
                                      { __DEFAULT ->
                                            case
                                                writeWord32OffAddr# [addr1_s9y1T
                                                                     0#
                                                                     x1_s9y1S
                                                                     eta_s9y1J]
                                            of
                                            s2_s9y1V
                                            { __DEFAULT ->
                                                  case ds1_s9y1Q of {
                                                    GHC.Int.I32# x2_s9y1X [Occ=Once] ->
                                                        case
                                                            plusAddr# [addr1_s9y1T 4#]
                                                        of
                                                        sat_s9y1Y
                                                        { __DEFAULT ->
                                                              case
                                                                  writeInt32OffAddr# [sat_s9y1Y
                                                                                      0#
                                                                                      x2_s9y1X
                                                                                      s2_s9y1V]
                                                              of
                                                              s1_s9y1Z
                                                              { __DEFAULT ->
                                                                    (#,#) [s1_s9y1Z GHC.Tuple.()];
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.Event.EPoll.$fStorableEvent [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable GHC.Event.EPoll.Event
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [GHC.Event.EPoll.$fStorableEvent_$csizeOf
                                                GHC.Event.EPoll.$fStorableEvent_$calignment
                                                GHC.Event.EPoll.$fStorableEvent6
                                                GHC.Event.EPoll.$fStorableEvent5
                                                GHC.Event.EPoll.$fStorableEvent4
                                                GHC.Event.EPoll.$fStorableEvent3
                                                GHC.Event.EPoll.$fStorableEvent2
                                                GHC.Event.EPoll.$fStorableEvent1];

GHC.Event.EPoll.$fEqEventType [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq GHC.Event.EPoll.EventType
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Word.eqWord32
                                     GHC.Word.neWord32];

GHC.Event.EPoll.$fBitsEventType [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits GHC.Event.EPoll.EventType
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [GHC.Event.EPoll.$fEqEventType
                                     GHC.Word.$fBitsWord32_$c.&.
                                     GHC.Word.$fBitsWord32_$c.|.
                                     GHC.Word.$fBitsWord32_$cxor
                                     GHC.Word.$fBitsWord32_$ccomplement
                                     GHC.Word.$fBitsWord32_$cshift
                                     GHC.Word.$fBitsWord32_$crotate
                                     GHC.Word.$fBitsWord32_$cminBound
                                     GHC.Word.$fBitsWord32_$cbit
                                     GHC.Word.$fBitsWord32_$csetBit
                                     GHC.Word.$fBitsWord32_$cclearBit
                                     GHC.Word.$fBitsWord32_$ccomplementBit
                                     GHC.Word.$fBitsWord32_$ctestBit
                                     GHC.Word.$fBitsWord32_$cbitSizeMaybe
                                     GHC.Word.$fBitsWord32_$cfiniteBitSize
                                     GHC.Word.$fBitsWord32_$cisSigned
                                     GHC.Word.$fBitsWord32_$cshiftL
                                     GHC.Word.$fBitsWord32_$cunsafeShiftL
                                     GHC.Word.$fBitsWord32_$cshiftR
                                     GHC.Word.$fBitsWord32_$cunsafeShiftR
                                     GHC.Word.$fBitsWord32_$crotateL
                                     GHC.Word.$fBitsWord32_$crotateR
                                     GHC.Word.$fBitsWord32_$cpopCount];

GHC.Event.EPoll.fromEPollFd1
  :: GHC.Event.EPoll.EPollFd -> GHC.Event.EPoll.EPollFd
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U(U)>m, Unf=OtherCon []] =
    [] \r [ds_s9y20] ds_s9y20;

GHC.Event.EPoll.fromEPollFd
  :: GHC.Event.EPoll.EPollFd -> Foreign.C.Types.CInt
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S,1*U(U)>m,
 Unf=OtherCon []] =
    [] \r [eta_B1] GHC.Event.EPoll.fromEPollFd1 eta_B1;

GHC.Event.EPoll.unEventType1
  :: GHC.Event.EPoll.EventType -> GHC.Event.EPoll.EventType
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U(U)>m, Unf=OtherCon []] =
    [] \r [ds_s9y21] ds_s9y21;

GHC.Event.EPoll.unEventType
  :: GHC.Event.EPoll.EventType -> GHC.Word.Word32
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S,1*U(U)>m,
 Unf=OtherCon []] =
    [] \r [eta_B1] GHC.Event.EPoll.unEventType1 eta_B1;

GHC.Event.EPoll.eventFd
  :: GHC.Event.EPoll.Event -> System.Posix.Types.Fd
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LS),1*U(A,1*U(U))>m,
 Unf=OtherCon []] =
    [] \r [ds_s9y22]
        case ds_s9y22 of {
          GHC.Event.EPoll.Event _ [Occ=Dead] ds2_s9y25 [Occ=Once] ->
              ds2_s9y25;
        };

GHC.Event.EPoll.eventTypes
  :: GHC.Event.EPoll.Event -> GHC.Event.EPoll.EventType
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(1*U(U),A)>m,
 Unf=OtherCon []] =
    [] \r [ds_s9y26]
        case ds_s9y26 of {
          GHC.Event.EPoll.Event ds1_s9y28 [Occ=Once] _ [Occ=Dead] ->
              ds1_s9y28;
        };

GHC.Event.EPoll.epollEvents
  :: GHC.Event.EPoll.EPoll
     -> GHC.Event.Array.Array GHC.Event.EPoll.Event
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LS),1*U(A,U)>m,
 Unf=OtherCon []] =
    [] \r [ds_s9y2a]
        case ds_s9y2a of {
          GHC.Event.EPoll.EPoll _ [Occ=Dead] dt1_s9y2d [Occ=Once] ->
              GHC.STRef.STRef [dt1_s9y2d];
        };

GHC.Event.EPoll.epollFd
  :: GHC.Event.EPoll.EPoll -> GHC.Event.EPoll.EPollFd
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,A)>m,
 Unf=OtherCon []] =
    [] \r [ds_s9y2e]
        case ds_s9y2e of {
          GHC.Event.EPoll.EPoll dt_s9y2g [Occ=Once] _ [Occ=Dead] ->
              GHC.Int.I32# [dt_s9y2g];
        };

GHC.Event.EPoll.available [InlPrag=INLINE (sat-args=0)]
  :: GHC.Types.Bool
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.True! [];

GHC.Event.EPoll.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

GHC.Event.EPoll.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.EPoll.$trModule4];

GHC.Event.EPoll.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.Event.EPoll"#;

GHC.Event.EPoll.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.EPoll.$trModule2];

GHC.Event.EPoll.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [GHC.Event.EPoll.$trModule3
                                     GHC.Event.EPoll.$trModule1];

$krep_r9xZP :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCInt
                                              GHC.Types.[]];

$krep1_r9xZQ :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Word.$tcWord32
                                              GHC.Types.[]];

$krep2_r9xZR :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [System.Posix.Types.$tcFd
                                              GHC.Types.[]];

GHC.Event.EPoll.$tcEPollFd2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "EPollFd"#;

GHC.Event.EPoll.$tcEPollFd1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.EPoll.$tcEPollFd2];

GHC.Event.EPoll.$tcEPollFd :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [11408974392712426853##
                                    10860743297622841984##
                                    GHC.Event.EPoll.$trModule
                                    GHC.Event.EPoll.$tcEPollFd1
                                    0#
                                    GHC.Types.krep$*];

$krep3_r9xZS :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.EPoll.$tcEPollFd
                                              GHC.Types.[]];

GHC.Event.EPoll.$tc'EPollFd1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_r9xZP $krep3_r9xZS];

GHC.Event.EPoll.$tc'EPollFd3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'EPollFd"#;

GHC.Event.EPoll.$tc'EPollFd2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.EPoll.$tc'EPollFd3];

GHC.Event.EPoll.$tc'EPollFd :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [13859366844265277896##
                                    3104986725924328114##
                                    GHC.Event.EPoll.$trModule
                                    GHC.Event.EPoll.$tc'EPollFd2
                                    0#
                                    GHC.Event.EPoll.$tc'EPollFd1];

GHC.Event.EPoll.$tcControlOp2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "ControlOp"#;

GHC.Event.EPoll.$tcControlOp1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.EPoll.$tcControlOp2];

GHC.Event.EPoll.$tcControlOp :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [16670684287779227039##
                                    7079239768931473179##
                                    GHC.Event.EPoll.$trModule
                                    GHC.Event.EPoll.$tcControlOp1
                                    0#
                                    GHC.Types.krep$*];

$krep4_r9xZT :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.EPoll.$tcControlOp
                                              GHC.Types.[]];

GHC.Event.EPoll.$tc'ControlOp1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_r9xZP $krep4_r9xZT];

GHC.Event.EPoll.$tc'ControlOp3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'ControlOp"#;

GHC.Event.EPoll.$tc'ControlOp2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.EPoll.$tc'ControlOp3];

GHC.Event.EPoll.$tc'ControlOp :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [17423659744934710370##
                                    14737300415055323322##
                                    GHC.Event.EPoll.$trModule
                                    GHC.Event.EPoll.$tc'ControlOp2
                                    0#
                                    GHC.Event.EPoll.$tc'ControlOp1];

GHC.Event.EPoll.$tcEventType2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "EventType"#;

GHC.Event.EPoll.$tcEventType1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.EPoll.$tcEventType2];

GHC.Event.EPoll.$tcEventType :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [6882131545153803920##
                                    11603224301892798833##
                                    GHC.Event.EPoll.$trModule
                                    GHC.Event.EPoll.$tcEventType1
                                    0#
                                    GHC.Types.krep$*];

$krep5_r9xZU :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.EPoll.$tcEventType
                                              GHC.Types.[]];

GHC.Event.EPoll.$tc'EventType1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep1_r9xZQ $krep5_r9xZU];

GHC.Event.EPoll.$tc'EventType3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'EventType"#;

GHC.Event.EPoll.$tc'EventType2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.EPoll.$tc'EventType3];

GHC.Event.EPoll.$tc'EventType :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [6895099112894632230##
                                    10353865251933672677##
                                    GHC.Event.EPoll.$trModule
                                    GHC.Event.EPoll.$tc'EventType2
                                    0#
                                    GHC.Event.EPoll.$tc'EventType1];

GHC.Event.EPoll.$tcEvent2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Event"#;

GHC.Event.EPoll.$tcEvent1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.EPoll.$tcEvent2];

GHC.Event.EPoll.$tcEvent :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [9768726503562184735##
                                    14932995848660065219##
                                    GHC.Event.EPoll.$trModule
                                    GHC.Event.EPoll.$tcEvent1
                                    0#
                                    GHC.Types.krep$*];

$krep6_r9xZV :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.EPoll.$tcEvent
                                              GHC.Types.[]];

$krep7_r9xZW :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_r9xZR $krep6_r9xZV];

GHC.Event.EPoll.$tc'Event1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep5_r9xZU $krep7_r9xZW];

GHC.Event.EPoll.$tc'Event3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Event"#;

GHC.Event.EPoll.$tc'Event2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.EPoll.$tc'Event3];

GHC.Event.EPoll.$tc'Event :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [13898227050457859187##
                                    12870286929163337655##
                                    GHC.Event.EPoll.$trModule
                                    GHC.Event.EPoll.$tc'Event2
                                    0#
                                    GHC.Event.EPoll.$tc'Event1];

$krep8_r9xZX :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep6_r9xZV GHC.Types.[]];

$krep9_r9xZY :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.Array.$tcArray
                                              $krep8_r9xZX];

GHC.Event.EPoll.$tcEPoll2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "EPoll"#;

GHC.Event.EPoll.$tcEPoll1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.EPoll.$tcEPoll2];

GHC.Event.EPoll.$tcEPoll :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [16362945812962510240##
                                    15183678187331181316##
                                    GHC.Event.EPoll.$trModule
                                    GHC.Event.EPoll.$tcEPoll1
                                    0#
                                    GHC.Types.krep$*];

$krep10_r9xZZ :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.EPoll.$tcEPoll
                                              GHC.Types.[]];

$krep11_r9y00 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep9_r9xZY $krep10_r9xZZ];

GHC.Event.EPoll.$tc'EPoll1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep3_r9xZS $krep11_r9y00];

GHC.Event.EPoll.$tc'EPoll3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'EPoll"#;

GHC.Event.EPoll.$tc'EPoll2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.EPoll.$tc'EPoll3];

GHC.Event.EPoll.$tc'EPoll :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [11640704659469356468##
                                    11164042648060985378##
                                    GHC.Event.EPoll.$trModule
                                    GHC.Event.EPoll.$tc'EPoll2
                                    0#
                                    GHC.Event.EPoll.$tc'EPoll1];

GHC.Event.EPoll.$fShowEPollFd4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "EPollFd {"#;

GHC.Event.EPoll.$fShowEPollFd3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "fromEPollFd = "#;

GHC.Event.EPoll.$fShowEPollFd2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "}"#;

GHC.Event.EPoll.$w$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Event.EPoll.EPollFd -> GHC.Base.String -> GHC.Base.String
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,U><L,1*U(U)><L,U>,
 Unf=OtherCon []] =
    [] \r [ww_s9y2i w_s9y2j w1_s9y2k]
        case >=# [ww_s9y2i 11#] of {
          __DEFAULT ->
              let {
                sat_s9y2t [Occ=Once] :: [GHC.Types.Char]
                [LclId] =
                    [w_s9y2j w1_s9y2k] \u []
                        let {
                          sat_s9y2s [Occ=Once] :: [GHC.Types.Char]
                          [LclId] =
                              [w_s9y2j w1_s9y2k] \u []
                                  case w_s9y2j of {
                                    GHC.Int.I32# x#_s9y2n [Occ=Once] ->
                                        let {
                                          sat_s9y2o [Occ=Once] :: GHC.Base.String
                                          [LclId] =
                                              [w1_s9y2k] \u []
                                                  GHC.CString.unpackAppendCString#
                                                      GHC.Event.EPoll.$fShowEPollFd2 w1_s9y2k;
                                        } in 
                                          case GHC.Show.$wshowSignedInt 0# x#_s9y2n sat_s9y2o of {
                                            (#,#) ww5_s9y2q [Occ=Once] ww6_s9y2r [Occ=Once] ->
                                                : [ww5_s9y2q ww6_s9y2r];
                                          };
                                  };
                        } in 
                          GHC.CString.unpackAppendCString#
                              GHC.Event.EPoll.$fShowEPollFd3 sat_s9y2s;
              } in 
                GHC.CString.unpackAppendCString#
                    GHC.Event.EPoll.$fShowEPollFd4 sat_s9y2t;
          1# ->
              let {
                sat_s9y2D [Occ=Once] :: [GHC.Types.Char]
                [LclId] =
                    [w_s9y2j w1_s9y2k] \u []
                        let {
                          sat_s9y2C [Occ=Once] :: [GHC.Types.Char]
                          [LclId] =
                              [w_s9y2j w1_s9y2k] \u []
                                  let {
                                    sat_s9y2B [Occ=Once] :: [GHC.Types.Char]
                                    [LclId] =
                                        [w_s9y2j w1_s9y2k] \u []
                                            case w_s9y2j of {
                                              GHC.Int.I32# x#_s9y2v [Occ=Once] ->
                                                  let {
                                                    sat_s9y2x [Occ=Once] :: GHC.Base.String
                                                    [LclId] =
                                                        [w1_s9y2k] \u []
                                                            let {
                                                              sat_s9y2w [Occ=Once]
                                                                :: [GHC.Types.Char]
                                                              [LclId] =
                                                                  CCCS :! [GHC.Show.$fShow(,)2
                                                                           w1_s9y2k];
                                                            } in 
                                                              GHC.CString.unpackAppendCString#
                                                                  GHC.Event.EPoll.$fShowEPollFd2
                                                                  sat_s9y2w;
                                                  } in 
                                                    case
                                                        GHC.Show.$wshowSignedInt
                                                            0# x#_s9y2v sat_s9y2x
                                                    of
                                                    { (#,#) ww5_s9y2z [Occ=Once]
                                                            ww6_s9y2A [Occ=Once] ->
                                                          : [ww5_s9y2z ww6_s9y2A];
                                                    };
                                            };
                                  } in 
                                    GHC.CString.unpackAppendCString#
                                        GHC.Event.EPoll.$fShowEPollFd3 sat_s9y2B;
                        } in 
                          GHC.CString.unpackAppendCString#
                              GHC.Event.EPoll.$fShowEPollFd4 sat_s9y2C;
              } in  : [GHC.Show.$fShow(,)4 sat_s9y2D];
        };

GHC.Event.EPoll.$fShowEPollFd_$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Int -> GHC.Event.EPoll.EPollFd -> GHC.Show.ShowS
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><L,1*U(U)><L,U>,
 Unf=OtherCon []] =
    [] \r [w_s9y2E w1_s9y2F w2_s9y2G]
        case w_s9y2E of {
          GHC.Types.I# ww1_s9y2I [Occ=Once] ->
              GHC.Event.EPoll.$w$cshowsPrec ww1_s9y2I w1_s9y2F w2_s9y2G;
        };

GHC.Event.EPoll.$fShowEPollFd5 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.Event.EPoll.$fShowEPollFd2;

GHC.Event.EPoll.$fShowEPollFd_$cshow
  :: GHC.Event.EPoll.EPollFd -> GHC.Base.String
[GblId, Arity=1, Str=<L,1*U(U)>, Unf=OtherCon []] =
    [] \r [x_s9y2J]
        let {
          sat_s9y2Q [Occ=Once] :: [GHC.Types.Char]
          [LclId] =
              [x_s9y2J] \u []
                  let {
                    sat_s9y2P [Occ=Once] :: [GHC.Types.Char]
                    [LclId] =
                        [x_s9y2J] \u []
                            case x_s9y2J of {
                              GHC.Int.I32# x#_s9y2L [Occ=Once] ->
                                  case
                                      GHC.Show.$wshowSignedInt
                                          0# x#_s9y2L GHC.Event.EPoll.$fShowEPollFd5
                                  of
                                  { (#,#) ww5_s9y2N [Occ=Once] ww6_s9y2O [Occ=Once] ->
                                        : [ww5_s9y2N ww6_s9y2O];
                                  };
                            };
                  } in 
                    GHC.CString.unpackAppendCString#
                        GHC.Event.EPoll.$fShowEPollFd3 sat_s9y2P;
        } in 
          GHC.CString.unpackAppendCString#
              GHC.Event.EPoll.$fShowEPollFd4 sat_s9y2Q;

GHC.Event.EPoll.$fShowEPollFd1
  :: GHC.Event.EPoll.EPollFd -> GHC.Show.ShowS
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,1*U(U)><L,U>,
 Unf=OtherCon []] =
    [] \r [w_s9y2R w1_s9y2S]
        GHC.Event.EPoll.$w$cshowsPrec 0# w_s9y2R w1_s9y2S;

GHC.Event.EPoll.$fShowEPollFd_$cshowList
  :: [GHC.Event.EPoll.EPollFd] -> GHC.Show.ShowS
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><L,U>,
 Unf=OtherCon []] =
    [] \r [ls_s9y2T s_s9y2U]
        GHC.Show.showList__
            GHC.Event.EPoll.$fShowEPollFd1 ls_s9y2T s_s9y2U;

GHC.Event.EPoll.$fShowEPollFd [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show GHC.Event.EPoll.EPollFd
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Event.EPoll.$fShowEPollFd_$cshowsPrec
                                    GHC.Event.EPoll.$fShowEPollFd_$cshow
                                    GHC.Event.EPoll.$fShowEPollFd_$cshowList];

GHC.Event.EPoll.$fShowEvent4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "EventType {"#;

GHC.Event.EPoll.$fShowEvent3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "unEventType = "#;

GHC.Event.EPoll.$w$cshowsPrec2 [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Event.EPoll.EventType -> GHC.Base.String -> GHC.Base.String
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,U><L,1*U(U)><L,U>,
 Unf=OtherCon []] =
    [] \r [ww_s9y2V w_s9y2W w1_s9y2X]
        case >=# [ww_s9y2V 11#] of {
          __DEFAULT ->
              let {
                sat_s9y37 [Occ=Once] :: [GHC.Types.Char]
                [LclId] =
                    [w_s9y2W w1_s9y2X] \u []
                        let {
                          sat_s9y36 [Occ=Once] :: [GHC.Types.Char]
                          [LclId] =
                              [w_s9y2W w1_s9y2X] \u []
                                  case w_s9y2W of {
                                    GHC.Word.W32# x#_s9y30 [Occ=Once] ->
                                        let {
                                          sat_s9y32 [Occ=Once] :: GHC.Base.String
                                          [LclId] =
                                              [w1_s9y2X] \u []
                                                  GHC.CString.unpackAppendCString#
                                                      GHC.Event.EPoll.$fShowEPollFd2 w1_s9y2X;
                                        } in 
                                          case word2Int# [x#_s9y30] of sat_s9y31 {
                                            __DEFAULT ->
                                                case GHC.Show.$witos sat_s9y31 sat_s9y32 of {
                                                  (#,#) ww5_s9y34 [Occ=Once] ww6_s9y35 [Occ=Once] ->
                                                      : [ww5_s9y34 ww6_s9y35];
                                                };
                                          };
                                  };
                        } in 
                          GHC.CString.unpackAppendCString#
                              GHC.Event.EPoll.$fShowEvent3 sat_s9y36;
              } in 
                GHC.CString.unpackAppendCString#
                    GHC.Event.EPoll.$fShowEvent4 sat_s9y37;
          1# ->
              let {
                sat_s9y3i [Occ=Once] :: [GHC.Types.Char]
                [LclId] =
                    [w_s9y2W w1_s9y2X] \u []
                        let {
                          sat_s9y3h [Occ=Once] :: [GHC.Types.Char]
                          [LclId] =
                              [w_s9y2W w1_s9y2X] \u []
                                  let {
                                    sat_s9y3g [Occ=Once] :: [GHC.Types.Char]
                                    [LclId] =
                                        [w_s9y2W w1_s9y2X] \u []
                                            case w_s9y2W of {
                                              GHC.Word.W32# x#_s9y39 [Occ=Once] ->
                                                  let {
                                                    sat_s9y3c [Occ=Once] :: GHC.Base.String
                                                    [LclId] =
                                                        [w1_s9y2X] \u []
                                                            let {
                                                              sat_s9y3b [Occ=Once]
                                                                :: [GHC.Types.Char]
                                                              [LclId] =
                                                                  CCCS :! [GHC.Show.$fShow(,)2
                                                                           w1_s9y2X];
                                                            } in 
                                                              GHC.CString.unpackAppendCString#
                                                                  GHC.Event.EPoll.$fShowEPollFd2
                                                                  sat_s9y3b;
                                                  } in 
                                                    case word2Int# [x#_s9y39] of sat_s9y3a {
                                                      __DEFAULT ->
                                                          case
                                                              GHC.Show.$witos sat_s9y3a sat_s9y3c
                                                          of
                                                          { (#,#) ww5_s9y3e [Occ=Once]
                                                                  ww6_s9y3f [Occ=Once] ->
                                                                : [ww5_s9y3e ww6_s9y3f];
                                                          };
                                                    };
                                            };
                                  } in 
                                    GHC.CString.unpackAppendCString#
                                        GHC.Event.EPoll.$fShowEvent3 sat_s9y3g;
                        } in 
                          GHC.CString.unpackAppendCString#
                              GHC.Event.EPoll.$fShowEvent4 sat_s9y3h;
              } in  : [GHC.Show.$fShow(,)4 sat_s9y3i];
        };

GHC.Event.EPoll.$fShowEventType_$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Int -> GHC.Event.EPoll.EventType -> GHC.Show.ShowS
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><L,1*U(U)><L,U>,
 Unf=OtherCon []] =
    [] \r [w_s9y3j w1_s9y3k w2_s9y3l]
        case w_s9y3j of {
          GHC.Types.I# ww1_s9y3n [Occ=Once] ->
              GHC.Event.EPoll.$w$cshowsPrec2 ww1_s9y3n w1_s9y3k w2_s9y3l;
        };

GHC.Event.EPoll.$fShowEventType_$cshow
  :: GHC.Event.EPoll.EventType -> GHC.Base.String
[GblId, Arity=1, Str=<L,1*U(U)>, Unf=OtherCon []] =
    [] \r [x_s9y3o]
        let {
          sat_s9y3w [Occ=Once] :: [GHC.Types.Char]
          [LclId] =
              [x_s9y3o] \u []
                  let {
                    sat_s9y3v [Occ=Once] :: [GHC.Types.Char]
                    [LclId] =
                        [x_s9y3o] \u []
                            case x_s9y3o of {
                              GHC.Word.W32# x#_s9y3q [Occ=Once] ->
                                  case word2Int# [x#_s9y3q] of sat_s9y3r {
                                    __DEFAULT ->
                                        case
                                            GHC.Show.$wshowSignedInt
                                                0# sat_s9y3r GHC.Event.EPoll.$fShowEPollFd5
                                        of
                                        { (#,#) ww5_s9y3t [Occ=Once] ww6_s9y3u [Occ=Once] ->
                                              : [ww5_s9y3t ww6_s9y3u];
                                        };
                                  };
                            };
                  } in 
                    GHC.CString.unpackAppendCString#
                        GHC.Event.EPoll.$fShowEvent3 sat_s9y3v;
        } in 
          GHC.CString.unpackAppendCString#
              GHC.Event.EPoll.$fShowEvent4 sat_s9y3w;

GHC.Event.EPoll.$fShowEventType1
  :: GHC.Event.EPoll.EventType -> GHC.Show.ShowS
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,1*U(U)><L,U>,
 Unf=OtherCon []] =
    [] \r [w_s9y3x w1_s9y3y]
        GHC.Event.EPoll.$w$cshowsPrec2 0# w_s9y3x w1_s9y3y;

GHC.Event.EPoll.$fShowEventType_$cshowList
  :: [GHC.Event.EPoll.EventType] -> GHC.Show.ShowS
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><L,U>,
 Unf=OtherCon []] =
    [] \r [ls_s9y3z s_s9y3A]
        GHC.Show.showList__
            GHC.Event.EPoll.$fShowEventType1 ls_s9y3z s_s9y3A;

GHC.Event.EPoll.$fShowEventType [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show GHC.Event.EPoll.EventType
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Event.EPoll.$fShowEventType_$cshowsPrec
                                    GHC.Event.EPoll.$fShowEventType_$cshow
                                    GHC.Event.EPoll.$fShowEventType_$cshowList];

GHC.Event.EPoll.$fShowEvent7 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Event {"#;

GHC.Event.EPoll.$fShowEvent6 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.Event.EPoll.$fShowEvent7;

GHC.Event.EPoll.$fShowEvent5 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "eventTypes = "#;

GHC.Event.EPoll.$fShowEvent2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "eventFd = "#;

GHC.Event.EPoll.$w$cshowsPrec1 [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Event.EPoll.EventType
     -> System.Posix.Types.Fd
     -> GHC.Base.String
     -> GHC.Base.String
[GblId,
 Arity=4,
 Str=<S,U><L,1*U(U)><L,1*U(U)><L,U>,
 Unf=OtherCon []] =
    [] \r [ww_s9y3B ww1_s9y3C ww2_s9y3D w_s9y3E]
        case >=# [ww_s9y3B 11#] of {
          __DEFAULT ->
              let {
                sat_s9y3Q [Occ=Once, Dmd=<L,1*U>] :: [GHC.Types.Char]
                [LclId] =
                    [ww1_s9y3C ww2_s9y3D w_s9y3E] \s []
                        let {
                          sat_s9y3P [Occ=Once] :: [GHC.Types.Char]
                          [LclId] =
                              [ww1_s9y3C ww2_s9y3D w_s9y3E] \u []
                                  let {
                                    sat_s9y3O [Occ=Once] :: GHC.Base.String
                                    [LclId] =
                                        [ww2_s9y3D w_s9y3E] \u []
                                            let {
                                              sat_s9y3N [Occ=Once, Dmd=<L,1*U>] :: [GHC.Types.Char]
                                              [LclId] =
                                                  [ww2_s9y3D w_s9y3E] \s []
                                                      let {
                                                        sat_s9y3M [Occ=Once] :: [GHC.Types.Char]
                                                        [LclId] =
                                                            [ww2_s9y3D w_s9y3E] \u []
                                                                case ww2_s9y3D of {
                                                                  GHC.Int.I32# x#_s9y3H [Occ=Once] ->
                                                                      let {
                                                                        sat_s9y3I [Occ=Once]
                                                                          :: GHC.Base.String
                                                                        [LclId] =
                                                                            [w_s9y3E] \u []
                                                                                GHC.CString.unpackAppendCString#
                                                                                    GHC.Event.EPoll.$fShowEPollFd2
                                                                                    w_s9y3E;
                                                                      } in 
                                                                        case
                                                                            GHC.Show.$wshowSignedInt
                                                                                0#
                                                                                x#_s9y3H
                                                                                sat_s9y3I
                                                                        of
                                                                        { (#,#) ww5_s9y3K [Occ=Once]
                                                                                ww6_s9y3L [Occ=Once] ->
                                                                              : [ww5_s9y3K
                                                                                 ww6_s9y3L];
                                                                        };
                                                                };
                                                      } in 
                                                        GHC.CString.unpackAppendCString#
                                                            GHC.Event.EPoll.$fShowEvent2 sat_s9y3M;
                                            } in  GHC.Base.++ GHC.Show.showCommaSpace1 sat_s9y3N;
                                  } in  GHC.Event.EPoll.$w$cshowsPrec2 0# ww1_s9y3C sat_s9y3O;
                        } in 
                          GHC.CString.unpackAppendCString#
                              GHC.Event.EPoll.$fShowEvent5 sat_s9y3P;
              } in  GHC.Base.++ GHC.Event.EPoll.$fShowEvent6 sat_s9y3Q;
          1# ->
              let {
                sat_s9y43 [Occ=Once] :: [GHC.Types.Char]
                [LclId] =
                    [ww1_s9y3C ww2_s9y3D w_s9y3E] \u []
                        let {
                          sat_s9y42 [Occ=Once, Dmd=<L,1*U>] :: [GHC.Types.Char]
                          [LclId] =
                              [ww1_s9y3C ww2_s9y3D w_s9y3E] \s []
                                  let {
                                    sat_s9y41 [Occ=Once] :: [GHC.Types.Char]
                                    [LclId] =
                                        [ww1_s9y3C ww2_s9y3D w_s9y3E] \u []
                                            let {
                                              sat_s9y40 [Occ=Once] :: GHC.Base.String
                                              [LclId] =
                                                  [ww2_s9y3D w_s9y3E] \u []
                                                      let {
                                                        sat_s9y3Z [Occ=Once, Dmd=<L,1*U>]
                                                          :: [GHC.Types.Char]
                                                        [LclId] =
                                                            [ww2_s9y3D w_s9y3E] \s []
                                                                let {
                                                                  sat_s9y3Y [Occ=Once]
                                                                    :: [GHC.Types.Char]
                                                                  [LclId] =
                                                                      [ww2_s9y3D w_s9y3E] \u []
                                                                          case ww2_s9y3D of {
                                                                            GHC.Int.I32# x#_s9y3S [Occ=Once] ->
                                                                                let {
                                                                                  sat_s9y3U [Occ=Once]
                                                                                    :: GHC.Base.String
                                                                                  [LclId] =
                                                                                      [w_s9y3E] \u []
                                                                                          let {
                                                                                            sat_s9y3T [Occ=Once]
                                                                                              :: [GHC.Types.Char]
                                                                                            [LclId] =
                                                                                                CCCS :! [GHC.Show.$fShow(,)2
                                                                                                         w_s9y3E];
                                                                                          } in 
                                                                                            GHC.CString.unpackAppendCString#
                                                                                                GHC.Event.EPoll.$fShowEPollFd2
                                                                                                sat_s9y3T;
                                                                                } in 
                                                                                  case
                                                                                      GHC.Show.$wshowSignedInt
                                                                                          0#
                                                                                          x#_s9y3S
                                                                                          sat_s9y3U
                                                                                  of
                                                                                  { (#,#) ww5_s9y3W [Occ=Once]
                                                                                          ww6_s9y3X [Occ=Once] ->
                                                                                        : [ww5_s9y3W
                                                                                           ww6_s9y3X];
                                                                                  };
                                                                          };
                                                                } in 
                                                                  GHC.CString.unpackAppendCString#
                                                                      GHC.Event.EPoll.$fShowEvent2
                                                                      sat_s9y3Y;
                                                      } in 
                                                        GHC.Base.++
                                                            GHC.Show.showCommaSpace1 sat_s9y3Z;
                                            } in 
                                              GHC.Event.EPoll.$w$cshowsPrec2 0# ww1_s9y3C sat_s9y40;
                                  } in 
                                    GHC.CString.unpackAppendCString#
                                        GHC.Event.EPoll.$fShowEvent5 sat_s9y41;
                        } in  GHC.Base.++ GHC.Event.EPoll.$fShowEvent6 sat_s9y42;
              } in  : [GHC.Show.$fShow(,)4 sat_s9y43];
        };

GHC.Event.EPoll.$fShowEvent_$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Int -> GHC.Event.EPoll.Event -> GHC.Show.ShowS
[GblId,
 Arity=3,
 Str=<S(S),1*U(U)><S,1*U(1*U(U),1*U(U))><L,U>,
 Unf=OtherCon []] =
    [] \r [w_s9y44 w1_s9y45 w2_s9y46]
        case w_s9y44 of {
          GHC.Types.I# ww1_s9y48 [Occ=Once] ->
              case w1_s9y45 of {
                GHC.Event.EPoll.Event ww3_s9y4a [Occ=Once] ww4_s9y4b [Occ=Once] ->
                    GHC.Event.EPoll.$w$cshowsPrec1
                        ww1_s9y48 ww3_s9y4a ww4_s9y4b w2_s9y46;
              };
        };

GHC.Event.EPoll.$fShowEvent8 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [0#];

GHC.Event.EPoll.$fShowEvent_$cshow
  :: GHC.Event.EPoll.Event -> GHC.Base.String
[GblId, Arity=1, Str=<S,1*U(1*U(U),1*U(U))>, Unf=OtherCon []] =
    [] \r [x_s9y4c]
        case x_s9y4c of {
          GHC.Event.EPoll.Event ww1_s9y4e [Occ=Once] ww2_s9y4f [Occ=Once] ->
              GHC.Event.EPoll.$w$cshowsPrec1 0# ww1_s9y4e ww2_s9y4f GHC.Types.[];
        };

GHC.Event.EPoll.$fShowEvent1
  :: GHC.Event.EPoll.Event -> GHC.Show.ShowS
[GblId,
 Arity=2,
 Str=<S,1*U(1*U(U),1*U(U))><L,U>,
 Unf=OtherCon []] =
    [] \r [w_s9y4g w1_s9y4h]
        case w_s9y4g of {
          GHC.Event.EPoll.Event ww1_s9y4j [Occ=Once] ww2_s9y4k [Occ=Once] ->
              GHC.Event.EPoll.$w$cshowsPrec1 0# ww1_s9y4j ww2_s9y4k w1_s9y4h;
        };

GHC.Event.EPoll.$fShowEvent_$cshowList
  :: [GHC.Event.EPoll.Event] -> GHC.Show.ShowS
[GblId, Arity=2, Str=<S,1*U><L,U>, Unf=OtherCon []] =
    [] \r [ls_s9y4l s_s9y4m]
        GHC.Show.showList__ GHC.Event.EPoll.$fShowEvent1 ls_s9y4l s_s9y4m;

GHC.Event.EPoll.$fShowEvent [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show GHC.Event.EPoll.Event
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Event.EPoll.$fShowEvent_$cshowsPrec
                                    GHC.Event.EPoll.$fShowEvent_$cshow
                                    GHC.Event.EPoll.$fShowEvent_$cshowList];

GHC.Event.EPoll.$fFiniteBitsEventType [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits GHC.Event.EPoll.EventType
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [GHC.Event.EPoll.$fBitsEventType
                                           GHC.Word.$fBitsWord32_$cfiniteBitSize
                                           GHC.Word.$fFiniteBitsWord32_$ccountLeadingZeros
                                           GHC.Word.$fFiniteBitsWord32_$ccountTrailingZeros];

GHC.Event.EPoll.$fNumEventType [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num GHC.Event.EPoll.EventType
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Word.$fNumWord32_$c+
                                  GHC.Word.$fNumWord32_$c-
                                  GHC.Word.$fNumWord32_$c*
                                  GHC.Word.$fNumWord32_$cnegate
                                  GHC.Word.$fNumWord32_$cabs
                                  GHC.Word.$fNumWord32_$csignum
                                  GHC.Word.$fNumWord32_$cfromInteger];

GHC.Event.EPoll.$fEqEPollFd [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq GHC.Event.EPoll.EPollFd
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt32 GHC.Int.neInt32];

lvl_r9y01 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "epollControl"#;

lvl1_r9y02 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl_r9y01;

GHC.Event.EPoll.new6
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> GHC.Prim.Int#
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, Foreign.C.Types.CInt #)
[GblId, Arity=2, Str=<B,U><B,U>x, Unf=OtherCon []] =
    [] \r [ds2_s9y4n ds3_s9y4o]
        case narrow32Int# [ds3_s9y4o] of sat_s9y4p {
          __DEFAULT -> Foreign.C.Error.$wlvl lvl1_r9y02 sat_s9y4p ds2_s9y4n;
        };

lvl2_r9y03 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "epollWaitNonBlock"#;

lvl3_r9y04 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl2_r9y03;

lvl4_r9y05 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "epollWait"#;

lvl5_r9y06 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl4_r9y05;

GHC.Event.EPoll.new8 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "modifyFdOnce"#;

GHC.Event.EPoll.new7 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.Event.EPoll.new8;

lvl6_r9y07 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [3#];

lvl7_r9y08 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [1#];

lvl8_r9y09 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [2#];

GHC.Event.EPoll.new10
  :: GHC.Event.EPoll.EPoll
     -> GHC.Base.Maybe GHC.Event.Internal.Timeout
     -> (System.Posix.Types.Fd
         -> GHC.Event.Internal.Event -> GHC.Types.IO ())
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=4,
 Str=<S(SS),1*U(U,U)><S,1*U><L,C(C1(C1(U(U,A))))><S,U>,
 Unf=OtherCon []] =
    [] \r [ep_s9y4q mtimeout_s9y4r f_s9y4s eta_s9y4t]
        case ep_s9y4q of {
          GHC.Event.EPoll.EPoll dt_s9y4v [Occ=Once*] dt1_s9y4w ->
              case readMutVar# [dt1_s9y4w eta_s9y4t] of {
                (#,#) ipv_s9y4y [Occ=Once*] ipv1_s9y4z [Occ=Once!] ->
                    case ipv1_s9y4z of {
                      GHC.Event.Array.AC es_s9y4B [Occ=Once!] _ [Occ=Dead] dt3_s9y4D ->
                          case es_s9y4B of wild2_s9y4E {
                            GHC.ForeignPtr.ForeignPtr ds2_s9y4F [Occ=Once*]
                                                      r_s9y4G [Occ=Once] ->
                                let-no-escape {
                                  $w$j1_s9y4H [InlPrag=NOUSERINLINE[0],
                                               Occ=Once*!T[2],
                                               Dmd=<L,1*C1(C1(U(U,U)))>]
                                    :: GHC.Prim.State# GHC.Prim.RealWorld
                                       -> GHC.Prim.Int#
                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
                                  [LclId[JoinId(2)], Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
                                      sat-only [f_s9y4s
                                                dt1_s9y4w
                                                dt3_s9y4D
                                                wild2_s9y4E
                                                r_s9y4G] \r [w_s9y4I ww_s9y4J]
                                          case touch# [r_s9y4G w_s9y4I] of s'_s9y4K {
                                            __DEFAULT ->
                                                let {
                                                  sat_s9y4L [Occ=Once]
                                                    :: GHC.Event.Array.AC GHC.Event.EPoll.Event
                                                  [LclId] =
                                                      CCCS GHC.Event.Array.AC! [wild2_s9y4E
                                                                                ww_s9y4J
                                                                                dt3_s9y4D];
                                                } in 
                                                  case
                                                      writeMutVar# [dt1_s9y4w sat_s9y4L s'_s9y4K]
                                                  of
                                                  s2#_s9y4M
                                                  { __DEFAULT ->
                                                        case ># [ww_s9y4J 0#] of {
                                                          __DEFAULT ->
                                                              let {
                                                                sat_s9y4O [Occ=Once]
                                                                  :: GHC.Types.Int
                                                                [LclId] =
                                                                    CCCS GHC.Types.I#! [ww_s9y4J];
                                                              } in  (#,#) [s2#_s9y4M sat_s9y4O];
                                                          1# ->
                                                              case
                                                                  readMutVar# [dt1_s9y4w s2#_s9y4M]
                                                              of
                                                              { (#,#) ipv2_s9y4Q [Occ=Once]
                                                                      ipv3_s9y4R [Occ=Once!] ->
                                                                    case ipv3_s9y4R of {
                                                                      GHC.Event.Array.AC es1_s9y4T [Occ=Once!]
                                                                                         dt4_s9y4U [Occ=Once]
                                                                                         _ [Occ=Dead] ->
                                                                          case es1_s9y4T of {
                                                                            GHC.ForeignPtr.ForeignPtr fo_s9y4X [Occ=OnceL]
                                                                                                      ds5_s9y4Y [Occ=Once] ->
                                                                                case
                                                                                    *# [dt4_s9y4U
                                                                                        12#]
                                                                                of
                                                                                offset_s9y4Z [Dmd=<S,U>]
                                                                                { __DEFAULT ->
                                                                                      let-no-escape {
                                                                                        exit_s9y50 [Occ=OnceL!T[1],
                                                                                                    Dmd=<L,C(U(U,U))>]
                                                                                          :: GHC.Prim.State#
                                                                                               GHC.Prim.RealWorld
                                                                                             -> (# GHC.Prim.State#
                                                                                                     GHC.Prim.RealWorld,
                                                                                                   GHC.Types.Int #)
                                                                                        [LclId[JoinId(1)],
                                                                                         Arity=1,
                                                                                         Str=<S,U>,
                                                                                         Unf=OtherCon []] =
                                                                                            sat-only [dt1_s9y4w
                                                                                                      ww_s9y4J
                                                                                                      ds5_s9y4Y] \r [w1_s9y51]
                                                                                                case
                                                                                                    touch# [ds5_s9y4Y
                                                                                                            w1_s9y51]
                                                                                                of
                                                                                                s'1_s9y52
                                                                                                { __DEFAULT ->
                                                                                                      case
                                                                                                          readMutVar# [dt1_s9y4w
                                                                                                                       s'1_s9y52]
                                                                                                      of
                                                                                                      { (#,#) ipv4_s9y54 [Occ=Once*]
                                                                                                              ipv5_s9y55 [Occ=Once!] ->
                                                                                                            case
                                                                                                                ipv5_s9y55
                                                                                                            of
                                                                                                            { GHC.Event.Array.AC _ [Occ=Dead]
                                                                                                                                 _ [Occ=Dead]
                                                                                                                                 dt7_s9y59 ->
                                                                                                                  case
                                                                                                                      ==# [dt7_s9y59
                                                                                                                           ww_s9y4J]
                                                                                                                  of
                                                                                                                  { __DEFAULT ->
                                                                                                                        let {
                                                                                                                          sat_s9y5b [Occ=Once]
                                                                                                                            :: GHC.Types.Int
                                                                                                                          [LclId] =
                                                                                                                              CCCS GHC.Types.I#! [ww_s9y4J];
                                                                                                                        } in 
                                                                                                                          (#,#) [ipv4_s9y54
                                                                                                                                 sat_s9y5b];
                                                                                                                    1# ->
                                                                                                                        case
                                                                                                                            readMutVar# [dt1_s9y4w
                                                                                                                                         ipv4_s9y54]
                                                                                                                        of
                                                                                                                        { (#,#) ipv6_s9y5d [Occ=Once*]
                                                                                                                                ipv7_s9y5e [Occ=Once!] ->
                                                                                                                              case
                                                                                                                                  ipv7_s9y5e
                                                                                                                              of
                                                                                                                              { GHC.Event.Array.AC ds_s9y5g [Occ=Once!]
                                                                                                                                                   dt8_s9y5h [Occ=Once*]
                                                                                                                                                   dt9_s9y5i ->
                                                                                                                                    case
                                                                                                                                        ds_s9y5g
                                                                                                                                    of
                                                                                                                                    { GHC.ForeignPtr.ForeignPtr fo1_s9y5k
                                                                                                                                                                ds9_s9y5l [Occ=Once*] ->
                                                                                                                                          case
                                                                                                                                              *# [2#
                                                                                                                                                  dt7_s9y59]
                                                                                                                                          of
                                                                                                                                          ww1_s9y5m [Dmd=<S,U>]
                                                                                                                                          { __DEFAULT ->
                                                                                                                                                case
                                                                                                                                                    ># [ww1_s9y5m
                                                                                                                                                        dt9_s9y5i]
                                                                                                                                                of
                                                                                                                                                { __DEFAULT ->
                                                                                                                                                      let {
                                                                                                                                                        sat_s9y5o [Occ=Once]
                                                                                                                                                          :: GHC.Types.Int
                                                                                                                                                        [LclId] =
                                                                                                                                                            CCCS GHC.Types.I#! [ww_s9y4J];
                                                                                                                                                      } in 
                                                                                                                                                        (#,#) [ipv6_s9y5d
                                                                                                                                                               sat_s9y5o];
                                                                                                                                                  1# ->
                                                                                                                                                      case
                                                                                                                                                          -# [ww1_s9y5m
                                                                                                                                                              1#]
                                                                                                                                                      of
                                                                                                                                                      n1_s9y5p [Dmd=<S,U>]
                                                                                                                                                      { __DEFAULT ->
                                                                                                                                                            case
                                                                                                                                                                uncheckedIShiftRA# [n1_s9y5p
                                                                                                                                                                                    1#]
                                                                                                                                                            of
                                                                                                                                                            sat_s9y5r
                                                                                                                                                            { __DEFAULT ->
                                                                                                                                                                  case
                                                                                                                                                                      orI# [n1_s9y5p
                                                                                                                                                                            sat_s9y5r]
                                                                                                                                                                  of
                                                                                                                                                                  ipv8_s9y5q [Dmd=<S,U>]
                                                                                                                                                                  { __DEFAULT ->
                                                                                                                                                                        case
                                                                                                                                                                            uncheckedIShiftRA# [ipv8_s9y5q
                                                                                                                                                                                                2#]
                                                                                                                                                                        of
                                                                                                                                                                        sat_s9y5t
                                                                                                                                                                        { __DEFAULT ->
                                                                                                                                                                              case
                                                                                                                                                                                  orI# [ipv8_s9y5q
                                                                                                                                                                                        sat_s9y5t]
                                                                                                                                                                              of
                                                                                                                                                                              ipv9_s9y5s [Dmd=<S,U>]
                                                                                                                                                                              { __DEFAULT ->
                                                                                                                                                                                    case
                                                                                                                                                                                        uncheckedIShiftRA# [ipv9_s9y5s
                                                                                                                                                                                                            4#]
                                                                                                                                                                                    of
                                                                                                                                                                                    sat_s9y5v
                                                                                                                                                                                    { __DEFAULT ->
                                                                                                                                                                                          case
                                                                                                                                                                                              orI# [ipv9_s9y5s
                                                                                                                                                                                                    sat_s9y5v]
                                                                                                                                                                                          of
                                                                                                                                                                                          ipv10_s9y5u [Dmd=<S,U>]
                                                                                                                                                                                          { __DEFAULT ->
                                                                                                                                                                                                case
                                                                                                                                                                                                    uncheckedIShiftRA# [ipv10_s9y5u
                                                                                                                                                                                                                        8#]
                                                                                                                                                                                                of
                                                                                                                                                                                                sat_s9y5x
                                                                                                                                                                                                { __DEFAULT ->
                                                                                                                                                                                                      case
                                                                                                                                                                                                          orI# [ipv10_s9y5u
                                                                                                                                                                                                                sat_s9y5x]
                                                                                                                                                                                                      of
                                                                                                                                                                                                      ipv11_s9y5w [Dmd=<S,U>]
                                                                                                                                                                                                      { __DEFAULT ->
                                                                                                                                                                                                            case
                                                                                                                                                                                                                uncheckedIShiftRA# [ipv11_s9y5w
                                                                                                                                                                                                                                    16#]
                                                                                                                                                                                                            of
                                                                                                                                                                                                            sat_s9y5z
                                                                                                                                                                                                            { __DEFAULT ->
                                                                                                                                                                                                                  case
                                                                                                                                                                                                                      orI# [ipv11_s9y5w
                                                                                                                                                                                                                            sat_s9y5z]
                                                                                                                                                                                                                  of
                                                                                                                                                                                                                  ipv12_s9y5y [Dmd=<S,U>]
                                                                                                                                                                                                                  { __DEFAULT ->
                                                                                                                                                                                                                        case
                                                                                                                                                                                                                            uncheckedIShiftRA# [ipv12_s9y5y
                                                                                                                                                                                                                                                32#]
                                                                                                                                                                                                                        of
                                                                                                                                                                                                                        sat_s9y5B
                                                                                                                                                                                                                        { __DEFAULT ->
                                                                                                                                                                                                                              case
                                                                                                                                                                                                                                  orI# [ipv12_s9y5y
                                                                                                                                                                                                                                        sat_s9y5B]
                                                                                                                                                                                                                              of
                                                                                                                                                                                                                              sat_s9y5C
                                                                                                                                                                                                                              { __DEFAULT ->
                                                                                                                                                                                                                                    case
                                                                                                                                                                                                                                        +# [sat_s9y5C
                                                                                                                                                                                                                                            1#]
                                                                                                                                                                                                                                    of
                                                                                                                                                                                                                                    x_s9y5A [Dmd=<S,U>]
                                                                                                                                                                                                                                    { __DEFAULT ->
                                                                                                                                                                                                                                          case
                                                                                                                                                                                                                                              *# [x_s9y5A
                                                                                                                                                                                                                                                  12#]
                                                                                                                                                                                                                                          of
                                                                                                                                                                                                                                          x1_s9y5D [Dmd=<S,U>]
                                                                                                                                                                                                                                          { __DEFAULT ->
                                                                                                                                                                                                                                                case
                                                                                                                                                                                                                                                    <# [x1_s9y5D
                                                                                                                                                                                                                                                        0#]
                                                                                                                                                                                                                                                of
                                                                                                                                                                                                                                                { __DEFAULT ->
                                                                                                                                                                                                                                                      case
                                                                                                                                                                                                                                                          newPinnedByteArray# [x1_s9y5D
                                                                                                                                                                                                                                                                               ipv6_s9y5d]
                                                                                                                                                                                                                                                      of
                                                                                                                                                                                                                                                      { (#,#) ipv13_s9y5G [Occ=Once*]
                                                                                                                                                                                                                                                              ipv14_s9y5H ->
                                                                                                                                                                                                                                                            case
                                                                                                                                                                                                                                                                byteArrayContents# [ipv14_s9y5H]
                                                                                                                                                                                                                                                            of
                                                                                                                                                                                                                                                            ipv15_s9y5I
                                                                                                                                                                                                                                                            { __DEFAULT ->
                                                                                                                                                                                                                                                                  let {
                                                                                                                                                                                                                                                                    ipv16_s9y5J
                                                                                                                                                                                                                                                                      :: GHC.ForeignPtr.ForeignPtrContents
                                                                                                                                                                                                                                                                    [LclId,
                                                                                                                                                                                                                                                                     Unf=OtherCon []] =
                                                                                                                                                                                                                                                                        CCCS GHC.ForeignPtr.PlainPtr! [ipv14_s9y5H];
                                                                                                                                                                                                                                                                  } in 
                                                                                                                                                                                                                                                                    case
                                                                                                                                                                                                                                                                        eqAddr# [fo1_s9y5k
                                                                                                                                                                                                                                                                                 __NULL]
                                                                                                                                                                                                                                                                    of
                                                                                                                                                                                                                                                                    { __DEFAULT ->
                                                                                                                                                                                                                                                                          case
                                                                                                                                                                                                                                                                              ># [dt9_s9y5i
                                                                                                                                                                                                                                                                                  0#]
                                                                                                                                                                                                                                                                          of
                                                                                                                                                                                                                                                                          { __DEFAULT ->
                                                                                                                                                                                                                                                                                case
                                                                                                                                                                                                                                                                                    touch# [ds9_s9y5l
                                                                                                                                                                                                                                                                                            ipv13_s9y5G]
                                                                                                                                                                                                                                                                                of
                                                                                                                                                                                                                                                                                s'2_s9y5M
                                                                                                                                                                                                                                                                                { __DEFAULT ->
                                                                                                                                                                                                                                                                                      case
                                                                                                                                                                                                                                                                                          /=# [x_s9y5A
                                                                                                                                                                                                                                                                                               dt9_s9y5i]
                                                                                                                                                                                                                                                                                      of
                                                                                                                                                                                                                                                                                      { __DEFAULT ->
                                                                                                                                                                                                                                                                                            let {
                                                                                                                                                                                                                                                                                              sat_s9y5O [Occ=Once]
                                                                                                                                                                                                                                                                                                :: GHC.Types.Int
                                                                                                                                                                                                                                                                                              [LclId] =
                                                                                                                                                                                                                                                                                                  CCCS GHC.Types.I#! [ww_s9y4J];
                                                                                                                                                                                                                                                                                            } in 
                                                                                                                                                                                                                                                                                              (#,#) [s'2_s9y5M
                                                                                                                                                                                                                                                                                                     sat_s9y5O];
                                                                                                                                                                                                                                                                                        1# ->
                                                                                                                                                                                                                                                                                            let {
                                                                                                                                                                                                                                                                                              sat_s9y5P [Occ=Once]
                                                                                                                                                                                                                                                                                                :: GHC.ForeignPtr.ForeignPtr
                                                                                                                                                                                                                                                                                                     GHC.Event.EPoll.Event
                                                                                                                                                                                                                                                                                              [LclId] =
                                                                                                                                                                                                                                                                                                  CCCS GHC.ForeignPtr.ForeignPtr! [ipv15_s9y5I
                                                                                                                                                                                                                                                                                                                                   ipv16_s9y5J]; } in
                                                                                                                                                                                                                                                                                            let {
                                                                                                                                                                                                                                                                                              sat_s9y5Q [Occ=Once]
                                                                                                                                                                                                                                                                                                :: GHC.Event.Array.AC
                                                                                                                                                                                                                                                                                                     GHC.Event.EPoll.Event
                                                                                                                                                                                                                                                                                              [LclId] =
                                                                                                                                                                                                                                                                                                  CCCS GHC.Event.Array.AC! [sat_s9y5P
                                                                                                                                                                                                                                                                                                                            dt8_s9y5h
                                                                                                                                                                                                                                                                                                                            x_s9y5A];
                                                                                                                                                                                                                                                                                            } in 
                                                                                                                                                                                                                                                                                              case
                                                                                                                                                                                                                                                                                                  writeMutVar# [dt1_s9y4w
                                                                                                                                                                                                                                                                                                                sat_s9y5Q
                                                                                                                                                                                                                                                                                                                s'2_s9y5M]
                                                                                                                                                                                                                                                                                              of
                                                                                                                                                                                                                                                                                              s2#1_s9y5R
                                                                                                                                                                                                                                                                                              { __DEFAULT ->
                                                                                                                                                                                                                                                                                                    let {
                                                                                                                                                                                                                                                                                                      sat_s9y5S [Occ=Once]
                                                                                                                                                                                                                                                                                                        :: GHC.Types.Int
                                                                                                                                                                                                                                                                                                      [LclId] =
                                                                                                                                                                                                                                                                                                          CCCS GHC.Types.I#! [ww_s9y4J];
                                                                                                                                                                                                                                                                                                    } in 
                                                                                                                                                                                                                                                                                                      (#,#) [s2#1_s9y5R
                                                                                                                                                                                                                                                                                                             sat_s9y5S];
                                                                                                                                                                                                                                                                                              };
                                                                                                                                                                                                                                                                                      };
                                                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                                            1# ->
                                                                                                                                                                                                                                                                                case
                                                                                                                                                                                                                                                                                    *# [dt9_s9y5i
                                                                                                                                                                                                                                                                                        12#]
                                                                                                                                                                                                                                                                                of
                                                                                                                                                                                                                                                                                sat_s9y5U
                                                                                                                                                                                                                                                                                { __DEFAULT ->
                                                                                                                                                                                                                                                                                      case
                                                                                                                                                                                                                                                                                          int2Word# [sat_s9y5U]
                                                                                                                                                                                                                                                                                      of
                                                                                                                                                                                                                                                                                      sat_s9y5V
                                                                                                                                                                                                                                                                                      { __DEFAULT ->
                                                                                                                                                                                                                                                                                            case
                                                                                                                                                                                                                                                                                                __pkg_ccall base-4.11.0.0 [ipv15_s9y5I
                                                                                                                                                                                                                                                                                                                           fo1_s9y5k
                                                                                                                                                                                                                                                                                                                           sat_s9y5V
                                                                                                                                                                                                                                                                                                                           ipv13_s9y5G]
                                                                                                                                                                                                                                                                                            of
                                                                                                                                                                                                                                                                                            { (#,#) ds10_s9y5X [Occ=Once]
                                                                                                                                                                                                                                                                                                    _ [Occ=Dead] ->
                                                                                                                                                                                                                                                                                                  case
                                                                                                                                                                                                                                                                                                      touch# [ipv16_s9y5J
                                                                                                                                                                                                                                                                                                              ds10_s9y5X]
                                                                                                                                                                                                                                                                                                  of
                                                                                                                                                                                                                                                                                                  s'2_s9y5Z
                                                                                                                                                                                                                                                                                                  { __DEFAULT ->
                                                                                                                                                                                                                                                                                                        case
                                                                                                                                                                                                                                                                                                            touch# [ds9_s9y5l
                                                                                                                                                                                                                                                                                                                    s'2_s9y5Z]
                                                                                                                                                                                                                                                                                                        of
                                                                                                                                                                                                                                                                                                        s'3_s9y60
                                                                                                                                                                                                                                                                                                        { __DEFAULT ->
                                                                                                                                                                                                                                                                                                              case
                                                                                                                                                                                                                                                                                                                  /=# [x_s9y5A
                                                                                                                                                                                                                                                                                                                       dt9_s9y5i]
                                                                                                                                                                                                                                                                                                              of
                                                                                                                                                                                                                                                                                                              { __DEFAULT ->
                                                                                                                                                                                                                                                                                                                    let {
                                                                                                                                                                                                                                                                                                                      sat_s9y62 [Occ=Once]
                                                                                                                                                                                                                                                                                                                        :: GHC.Types.Int
                                                                                                                                                                                                                                                                                                                      [LclId] =
                                                                                                                                                                                                                                                                                                                          CCCS GHC.Types.I#! [ww_s9y4J];
                                                                                                                                                                                                                                                                                                                    } in 
                                                                                                                                                                                                                                                                                                                      (#,#) [s'3_s9y60
                                                                                                                                                                                                                                                                                                                             sat_s9y62];
                                                                                                                                                                                                                                                                                                                1# ->
                                                                                                                                                                                                                                                                                                                    let {
                                                                                                                                                                                                                                                                                                                      sat_s9y63 [Occ=Once]
                                                                                                                                                                                                                                                                                                                        :: GHC.ForeignPtr.ForeignPtr
                                                                                                                                                                                                                                                                                                                             GHC.Event.EPoll.Event
                                                                                                                                                                                                                                                                                                                      [LclId] =
                                                                                                                                                                                                                                                                                                                          CCCS GHC.ForeignPtr.ForeignPtr! [ipv15_s9y5I
                                                                                                                                                                                                                                                                                                                                                           ipv16_s9y5J]; } in
                                                                                                                                                                                                                                                                                                                    let {
                                                                                                                                                                                                                                                                                                                      sat_s9y64 [Occ=Once]
                                                                                                                                                                                                                                                                                                                        :: GHC.Event.Array.AC
                                                                                                                                                                                                                                                                                                                             GHC.Event.EPoll.Event
                                                                                                                                                                                                                                                                                                                      [LclId] =
                                                                                                                                                                                                                                                                                                                          CCCS GHC.Event.Array.AC! [sat_s9y63
                                                                                                                                                                                                                                                                                                                                                    dt8_s9y5h
                                                                                                                                                                                                                                                                                                                                                    x_s9y5A];
                                                                                                                                                                                                                                                                                                                    } in 
                                                                                                                                                                                                                                                                                                                      case
                                                                                                                                                                                                                                                                                                                          writeMutVar# [dt1_s9y4w
                                                                                                                                                                                                                                                                                                                                        sat_s9y64
                                                                                                                                                                                                                                                                                                                                        s'3_s9y60]
                                                                                                                                                                                                                                                                                                                      of
                                                                                                                                                                                                                                                                                                                      s2#1_s9y65
                                                                                                                                                                                                                                                                                                                      { __DEFAULT ->
                                                                                                                                                                                                                                                                                                                            let {
                                                                                                                                                                                                                                                                                                                              sat_s9y66 [Occ=Once]
                                                                                                                                                                                                                                                                                                                                :: GHC.Types.Int
                                                                                                                                                                                                                                                                                                                              [LclId] =
                                                                                                                                                                                                                                                                                                                                  CCCS GHC.Types.I#! [ww_s9y4J];
                                                                                                                                                                                                                                                                                                                            } in 
                                                                                                                                                                                                                                                                                                                              (#,#) [s2#1_s9y65
                                                                                                                                                                                                                                                                                                                                     sat_s9y66];
                                                                                                                                                                                                                                                                                                                      };
                                                                                                                                                                                                                                                                                                              };
                                                                                                                                                                                                                                                                                                        };
                                                                                                                                                                                                                                                                                                  };
                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                      };
                                                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                                          };
                                                                                                                                                                                                                                                                      1# ->
                                                                                                                                                                                                                                                                          case
                                                                                                                                                                                                                                                                              touch# [ds9_s9y5l
                                                                                                                                                                                                                                                                                      ipv13_s9y5G]
                                                                                                                                                                                                                                                                          of
                                                                                                                                                                                                                                                                          s'2_s9y67
                                                                                                                                                                                                                                                                          { __DEFAULT ->
                                                                                                                                                                                                                                                                                case
                                                                                                                                                                                                                                                                                    /=# [x_s9y5A
                                                                                                                                                                                                                                                                                         dt9_s9y5i]
                                                                                                                                                                                                                                                                                of
                                                                                                                                                                                                                                                                                { __DEFAULT ->
                                                                                                                                                                                                                                                                                      let {
                                                                                                                                                                                                                                                                                        sat_s9y69 [Occ=Once]
                                                                                                                                                                                                                                                                                          :: GHC.Types.Int
                                                                                                                                                                                                                                                                                        [LclId] =
                                                                                                                                                                                                                                                                                            CCCS GHC.Types.I#! [ww_s9y4J];
                                                                                                                                                                                                                                                                                      } in 
                                                                                                                                                                                                                                                                                        (#,#) [s'2_s9y67
                                                                                                                                                                                                                                                                                               sat_s9y69];
                                                                                                                                                                                                                                                                                  1# ->
                                                                                                                                                                                                                                                                                      let {
                                                                                                                                                                                                                                                                                        sat_s9y6a [Occ=Once]
                                                                                                                                                                                                                                                                                          :: GHC.ForeignPtr.ForeignPtr
                                                                                                                                                                                                                                                                                               GHC.Event.EPoll.Event
                                                                                                                                                                                                                                                                                        [LclId] =
                                                                                                                                                                                                                                                                                            CCCS GHC.ForeignPtr.ForeignPtr! [ipv15_s9y5I
                                                                                                                                                                                                                                                                                                                             ipv16_s9y5J]; } in
                                                                                                                                                                                                                                                                                      let {
                                                                                                                                                                                                                                                                                        sat_s9y6b [Occ=Once]
                                                                                                                                                                                                                                                                                          :: GHC.Event.Array.AC
                                                                                                                                                                                                                                                                                               GHC.Event.EPoll.Event
                                                                                                                                                                                                                                                                                        [LclId] =
                                                                                                                                                                                                                                                                                            CCCS GHC.Event.Array.AC! [sat_s9y6a
                                                                                                                                                                                                                                                                                                                      dt8_s9y5h
                                                                                                                                                                                                                                                                                                                      x_s9y5A];
                                                                                                                                                                                                                                                                                      } in 
                                                                                                                                                                                                                                                                                        case
                                                                                                                                                                                                                                                                                            writeMutVar# [dt1_s9y4w
                                                                                                                                                                                                                                                                                                          sat_s9y6b
                                                                                                                                                                                                                                                                                                          s'2_s9y67]
                                                                                                                                                                                                                                                                                        of
                                                                                                                                                                                                                                                                                        s2#1_s9y6c
                                                                                                                                                                                                                                                                                        { __DEFAULT ->
                                                                                                                                                                                                                                                                                              let {
                                                                                                                                                                                                                                                                                                sat_s9y6d [Occ=Once]
                                                                                                                                                                                                                                                                                                  :: GHC.Types.Int
                                                                                                                                                                                                                                                                                                [LclId] =
                                                                                                                                                                                                                                                                                                    CCCS GHC.Types.I#! [ww_s9y4J];
                                                                                                                                                                                                                                                                                              } in 
                                                                                                                                                                                                                                                                                                (#,#) [s2#1_s9y6c
                                                                                                                                                                                                                                                                                                       sat_s9y6d];
                                                                                                                                                                                                                                                                                        };
                                                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                                          };
                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                      };
                                                                                                                                                                                                                                                  1# ->
                                                                                                                                                                                                                                                      GHC.ForeignPtr.mallocPlainForeignPtrBytes2;
                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                          };
                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                              };
                                                                                                                                                                                                                        };
                                                                                                                                                                                                                  };
                                                                                                                                                                                                            };
                                                                                                                                                                                                      };
                                                                                                                                                                                                };
                                                                                                                                                                                          };
                                                                                                                                                                                    };
                                                                                                                                                                              };
                                                                                                                                                                        };
                                                                                                                                                                  };
                                                                                                                                                            };
                                                                                                                                                      };
                                                                                                                                                };
                                                                                                                                          };
                                                                                                                                    };
                                                                                                                              };
                                                                                                                        };
                                                                                                                  };
                                                                                                            };
                                                                                                      };
                                                                                                };
                                                                                      } in 
                                                                                        let-no-escape {
                                                                                          $wgo_s9y6f [InlPrag=NOUSERINLINE[0],
                                                                                                      Occ=LoopBreakerT[2]]
                                                                                            :: GHC.Prim.Int#
                                                                                               -> GHC.Prim.State#
                                                                                                    GHC.Prim.RealWorld
                                                                                               -> (# GHC.Prim.State#
                                                                                                       GHC.Prim.RealWorld,
                                                                                                     GHC.Types.Int #)
                                                                                          [LclId[JoinId(2)],
                                                                                           Arity=2,
                                                                                           Str=<S,U><S,U>,
                                                                                           Unf=OtherCon []] =
                                                                                              sat-only [f_s9y4s
                                                                                                        fo_s9y4X
                                                                                                        offset_s9y4Z
                                                                                                        exit_s9y50
                                                                                                        $wgo_s9y6f] \r [ww1_s9y6g
                                                                                                                        w1_s9y6h]
                                                                                                  case
                                                                                                      >=# [ww1_s9y6g
                                                                                                           offset_s9y4Z]
                                                                                                  of
                                                                                                  { __DEFAULT ->
                                                                                                        case
                                                                                                            plusAddr# [fo_s9y4X
                                                                                                                       ww1_s9y6g]
                                                                                                        of
                                                                                                        ptr_s9y6j [Dmd=<S,U>]
                                                                                                        { __DEFAULT ->
                                                                                                              case
                                                                                                                  readWord32OffAddr# [ptr_s9y6j
                                                                                                                                      0#
                                                                                                                                      w1_s9y6h]
                                                                                                              of
                                                                                                              { (#,#) ipv4_s9y6l [Occ=Once]
                                                                                                                      ipv5_s9y6m ->
                                                                                                                    case
                                                                                                                        plusAddr# [ptr_s9y6j
                                                                                                                                   4#]
                                                                                                                    of
                                                                                                                    sat_s9y6n
                                                                                                                    { __DEFAULT ->
                                                                                                                          case
                                                                                                                              readInt32OffAddr# [sat_s9y6n
                                                                                                                                                 0#
                                                                                                                                                 ipv4_s9y6l]
                                                                                                                          of
                                                                                                                          { (#,#) ipv6_s9y6p [Occ=Once]
                                                                                                                                  ipv7_s9y6q [Occ=Once] ->
                                                                                                                                let {
                                                                                                                                  sat_s9y6v [Occ=Once]
                                                                                                                                    :: GHC.Event.Internal.Event
                                                                                                                                  [LclId] =
                                                                                                                                      [ipv5_s9y6m] \u []
                                                                                                                                          case
                                                                                                                                              and# [ipv5_s9y6m
                                                                                                                                                    25##]
                                                                                                                                          of
                                                                                                                                          { __DEFAULT ->
                                                                                                                                                case
                                                                                                                                                    and# [ipv5_s9y6m
                                                                                                                                                          28##]
                                                                                                                                                of
                                                                                                                                                { __DEFAULT ->
                                                                                                                                                      lvl6_r9y07;
                                                                                                                                                  0## ->
                                                                                                                                                      lvl7_r9y08;
                                                                                                                                                };
                                                                                                                                            0## ->
                                                                                                                                                case
                                                                                                                                                    and# [ipv5_s9y6m
                                                                                                                                                          28##]
                                                                                                                                                of
                                                                                                                                                { __DEFAULT ->
                                                                                                                                                      lvl8_r9y09;
                                                                                                                                                  0## ->
                                                                                                                                                      GHC.Event.EPoll.$fShowEvent8;
                                                                                                                                                };
                                                                                                                                          }; } in
                                                                                                                                let {
                                                                                                                                  sat_s9y6r [Occ=Once]
                                                                                                                                    :: System.Posix.Types.Fd
                                                                                                                                  [LclId] =
                                                                                                                                      CCCS GHC.Int.I32#! [ipv7_s9y6q];
                                                                                                                                } in 
                                                                                                                                  case
                                                                                                                                      f_s9y4s
                                                                                                                                          sat_s9y6r
                                                                                                                                          sat_s9y6v
                                                                                                                                          ipv6_s9y6p
                                                                                                                                  of
                                                                                                                                  { (#,#) ipv8_s9y6x [Occ=Once]
                                                                                                                                          _ [Occ=Dead] ->
                                                                                                                                        case
                                                                                                                                            +# [ww1_s9y6g
                                                                                                                                                12#]
                                                                                                                                        of
                                                                                                                                        sat_s9y6z
                                                                                                                                        { __DEFAULT ->
                                                                                                                                              $wgo_s9y6f
                                                                                                                                                  sat_s9y6z
                                                                                                                                                  ipv8_s9y6x;
                                                                                                                                        };
                                                                                                                                  };
                                                                                                                          };
                                                                                                                    };
                                                                                                              };
                                                                                                        };
                                                                                                    1# ->
                                                                                                        exit_s9y50
                                                                                                            w1_s9y6h;
                                                                                                  };
                                                                                        } in 
                                                                                          $wgo_s9y6f
                                                                                              0#
                                                                                              ipv2_s9y4Q;
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                          };
                                } in 
                                  case mtimeout_s9y4r of {
                                    GHC.Base.Nothing ->
                                        case narrow32Int# [dt3_s9y4D] of sat_s9y6C {
                                          __DEFAULT ->
                                              case
                                                  __pkg_ccall base-4.11.0.0 [dt_s9y4v
                                                                             ds2_s9y4F
                                                                             sat_s9y6C
                                                                             0#
                                                                             ipv_s9y4y]
                                              of
                                              { (#,#) ds_s9y6E [Occ=Once*] ds4_s9y6F [Occ=Once] ->
                                                    case narrow32Int# [ds4_s9y6F] of wild5_s9y6G {
                                                      __DEFAULT -> $w$j1_s9y4H ds_s9y6E wild5_s9y6G;
                                                      -1# ->
                                                          case
                                                              __pkg_ccall base-4.11.0.0 [ds_s9y6E]
                                                          of
                                                          { (#,#) ds5_s9y6J [Occ=Once*]
                                                                  ds6_s9y6K [Occ=Once] ->
                                                                case narrow32Int# [ds6_s9y6K] of {
                                                                  __DEFAULT ->
                                                                      case
                                                                          Foreign.C.Error.throwErrno1
                                                                              lvl3_r9y04 ds5_s9y6J
                                                                      of
                                                                      { (#,#) ipv2_s9y6N [Occ=Once]
                                                                              ipv3_s9y6O [Occ=Once] ->
                                                                            case ipv3_s9y6O of {
                                                                              GHC.Int.I32# x#_s9y6Q [Occ=Once] ->
                                                                                  $w$j1_s9y4H
                                                                                      ipv2_s9y6N
                                                                                      x#_s9y6Q;
                                                                            };
                                                                      };
                                                                  4# -> $w$j1_s9y4H ds5_s9y6J 0#;
                                                                };
                                                          };
                                                    };
                                              };
                                        };
                                    GHC.Base.Just timeout_s9y6R [Occ=Once!] ->
                                        let-no-escape {
                                          $j_s9y6S [Occ=Once*!T[1], Dmd=<C(S),1*C1(U(U,U))>]
                                            :: GHC.Prim.Int#
                                               -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                     GHC.Types.Int #)
                                          [LclId[JoinId(1)], Arity=1, Str=<S,U>, Unf=OtherCon []] =
                                              sat-only [dt_s9y4v
                                                        ipv_s9y4y
                                                        dt3_s9y4D
                                                        ds2_s9y4F
                                                        $w$j1_s9y4H] \r [x#_s9y6T]
                                                  case narrow32Int# [x#_s9y6T] of sat_s9y6W {
                                                    __DEFAULT ->
                                                        case narrow32Int# [dt3_s9y4D] of sat_s9y6V {
                                                          __DEFAULT ->
                                                              case
                                                                  __pkg_ccall_GC base-4.11.0.0 [dt_s9y4v
                                                                                                ds2_s9y4F
                                                                                                sat_s9y6V
                                                                                                sat_s9y6W
                                                                                                ipv_s9y4y]
                                                              of
                                                              { (#,#) ds_s9y6Y [Occ=Once*]
                                                                      ds4_s9y6Z [Occ=Once] ->
                                                                    case
                                                                        narrow32Int# [ds4_s9y6Z]
                                                                    of
                                                                    wild5_s9y70
                                                                    { __DEFAULT ->
                                                                          $w$j1_s9y4H
                                                                              ds_s9y6Y wild5_s9y70;
                                                                      -1# ->
                                                                          case
                                                                              __pkg_ccall base-4.11.0.0 [ds_s9y6Y]
                                                                          of
                                                                          { (#,#) ds5_s9y73 [Occ=Once*]
                                                                                  ds6_s9y74 [Occ=Once] ->
                                                                                case
                                                                                    narrow32Int# [ds6_s9y74]
                                                                                of
                                                                                { __DEFAULT ->
                                                                                      case
                                                                                          Foreign.C.Error.throwErrno1
                                                                                              lvl5_r9y06
                                                                                              ds5_s9y73
                                                                                      of
                                                                                      { (#,#) ipv2_s9y77 [Occ=Once]
                                                                                              ipv3_s9y78 [Occ=Once] ->
                                                                                            case
                                                                                                ipv3_s9y78
                                                                                            of
                                                                                            { GHC.Int.I32# x#1_s9y7a [Occ=Once] ->
                                                                                                  $w$j1_s9y4H
                                                                                                      ipv2_s9y77
                                                                                                      x#1_s9y7a;
                                                                                            };
                                                                                      };
                                                                                  4# ->
                                                                                      $w$j1_s9y4H
                                                                                          ds5_s9y73
                                                                                          0#;
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                        } in 
                                          case timeout_s9y6R of {
                                            GHC.Event.Internal.Timeout dt4_s9y7c [Occ=Once] ->
                                                case plusWord# [dt4_s9y7c 1000000##] of sat_s9y7d {
                                                  __DEFAULT ->
                                                      case minusWord# [sat_s9y7d 1##] of sat_s9y7e {
                                                        __DEFAULT ->
                                                            case
                                                                quotWord# [sat_s9y7e 1000000##]
                                                            of
                                                            sat_s9y7f
                                                            { __DEFAULT ->
                                                                  case
                                                                      word2Int# [sat_s9y7f]
                                                                  of
                                                                  sat_s9y7g
                                                                  { __DEFAULT -> $j_s9y6S sat_s9y7g;
                                                                  };
                                                            };
                                                      };
                                                };
                                            GHC.Event.Internal.Forever -> $j_s9y6S -1#;
                                          };
                                  };
                          };
                    };
              };
        };

GHC.Event.EPoll.new9
  :: GHC.Event.EPoll.EPoll
     -> System.Posix.Types.Fd
     -> GHC.Event.Internal.Event
     -> GHC.Event.Internal.Event
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
[GblId,
 Arity=5,
 Str=<S(SL),1*U(U,A)><S(S),1*U(U)><S(S),1*U(1*U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ep_s9y7h fd_s9y7i oevt_s9y7j nevt_s9y7k eta_s9y7l]
        case newAlignedPinnedByteArray# [12# 4# eta_s9y7l] of {
          (#,#) ipv_s9y7n [Occ=Once] ipv1_s9y7o [Occ=Once] ->
              case unsafeFreezeByteArray# [ipv1_s9y7o ipv_s9y7n] of {
                (#,#) ipv2_s9y7q [Occ=Once] ipv3_s9y7r ->
                    case nevt_s9y7k of {
                      GHC.Types.I# x#_s9y7t ->
                          let-no-escape {
                            $j_s9y7u [Occ=Once*!T[1], Dmd=<C(S),1*C1(U(U,U))>]
                              :: GHC.Prim.Word#
                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
                            [LclId[JoinId(1)], Arity=1, Str=<S,U>, Unf=OtherCon []] =
                                sat-only [ep_s9y7h
                                          fd_s9y7i
                                          oevt_s9y7j
                                          ipv2_s9y7q
                                          ipv3_s9y7r
                                          x#_s9y7t] \r [x_s9y7v]
                                    case byteArrayContents# [ipv3_s9y7r] of ptr_s9y7w [Dmd=<S,U>] {
                                      __DEFAULT ->
                                          case
                                              writeWord32OffAddr# [ptr_s9y7w 0# x_s9y7v ipv2_s9y7q]
                                          of
                                          s2_s9y7x
                                          { __DEFAULT ->
                                                case fd_s9y7i of {
                                                  GHC.Int.I32# x1_s9y7z ->
                                                      case plusAddr# [ptr_s9y7w 4#] of sat_s9y7A {
                                                        __DEFAULT ->
                                                            case
                                                                writeInt32OffAddr# [sat_s9y7A
                                                                                    0#
                                                                                    x1_s9y7z
                                                                                    s2_s9y7x]
                                                            of
                                                            s1_s9y7B
                                                            { __DEFAULT ->
                                                                  case ep_s9y7h of {
                                                                    GHC.Event.EPoll.EPoll dt_s9y7D [Occ=Once]
                                                                                          _ [Occ=Dead] ->
                                                                        case oevt_s9y7j of {
                                                                          GHC.Types.I# x2_s9y7G [Occ=Once!] ->
                                                                              let-no-escape {
                                                                                $j1_s9y7H [Occ=Once*!T[1],
                                                                                           Dmd=<C(S),1*C1(U(U,U))>]
                                                                                  :: GHC.Prim.Int#
                                                                                     -> (# GHC.Prim.State#
                                                                                             GHC.Prim.RealWorld,
                                                                                           GHC.Types.Bool #)
                                                                                [LclId[JoinId(1)],
                                                                                 Arity=1,
                                                                                 Str=<S,U>,
                                                                                 Unf=OtherCon []] =
                                                                                    sat-only [ipv3_s9y7r
                                                                                              ptr_s9y7w
                                                                                              x1_s9y7z
                                                                                              s1_s9y7B
                                                                                              dt_s9y7D] \r [ds_s9y7I]
                                                                                        case
                                                                                            __pkg_ccall base-4.11.0.0 [dt_s9y7D
                                                                                                                       ds_s9y7I
                                                                                                                       x1_s9y7z
                                                                                                                       ptr_s9y7w
                                                                                                                       s1_s9y7B]
                                                                                        of
                                                                                        { (#,#) ds1_s9y7L [Occ=Once*]
                                                                                                ds5_s9y7M [Occ=Once] ->
                                                                                              case
                                                                                                  narrow32Int# [ds5_s9y7M]
                                                                                              of
                                                                                              { __DEFAULT ->
                                                                                                    case
                                                                                                        touch# [ipv3_s9y7r
                                                                                                                ds1_s9y7L]
                                                                                                    of
                                                                                                    s4_s9y7O
                                                                                                    { __DEFAULT ->
                                                                                                          (#,#) [s4_s9y7O
                                                                                                                 GHC.Types.True];
                                                                                                    };
                                                                                                -1# ->
                                                                                                    case
                                                                                                        __pkg_ccall base-4.11.0.0 [ds1_s9y7L]
                                                                                                    of
                                                                                                    { (#,#) ds6_s9y7R [Occ=Once]
                                                                                                            ds7_s9y7S [Occ=Once] ->
                                                                                                          GHC.Event.EPoll.new6
                                                                                                              ds6_s9y7R
                                                                                                              ds7_s9y7S;
                                                                                                    };
                                                                                              };
                                                                                        };
                                                                              } in 
                                                                                case x2_s9y7G of {
                                                                                  __DEFAULT ->
                                                                                      case
                                                                                          x#_s9y7t
                                                                                      of
                                                                                      { __DEFAULT ->
                                                                                            $j1_s9y7H
                                                                                                3#;
                                                                                        0# ->
                                                                                            $j1_s9y7H
                                                                                                2#;
                                                                                      };
                                                                                  0# ->
                                                                                      $j1_s9y7H 1#;
                                                                                };
                                                                        };
                                                                  };
                                                            };
                                                      };
                                                };
                                          };
                                    };
                          } in 
                            case andI# [x#_s9y7t 1#] of {
                              __DEFAULT ->
                                  case andI# [x#_s9y7t 2#] of {
                                    __DEFAULT -> $j_s9y7u 5##;
                                    0# -> $j_s9y7u 1##;
                                  };
                              0# ->
                                  case andI# [x#_s9y7t 2#] of {
                                    __DEFAULT -> $j_s9y7u 4##;
                                    0# -> $j_s9y7u 0##;
                                  };
                            };
                    };
              };
        };

GHC.Event.EPoll.new5
  :: GHC.Event.EPoll.EPoll
     -> System.Posix.Types.Fd
     -> GHC.Event.Internal.Event
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
[GblId,
 Arity=4,
 Str=<S(SL),1*U(U,A)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ep_s9y7Z fd_s9y80 evt_s9y81 eta_s9y82]
        case evt_s9y81 of {
          GHC.Types.I# x#_s9y84 ->
              let-no-escape {
                $j_s9y85 [Occ=Once*!T[1], Dmd=<C(S),1*C1(U(U,U))>]
                  :: GHC.Prim.Word#
                     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
                [LclId[JoinId(1)], Arity=1, Str=<S,U>, Unf=OtherCon []] =
                    sat-only [ep_s9y7Z fd_s9y80 eta_s9y82] \r [x#1_s9y86]
                        case newAlignedPinnedByteArray# [12# 4# eta_s9y82] of {
                          (#,#) ipv_s9y88 [Occ=Once] ipv1_s9y89 [Occ=Once] ->
                              case unsafeFreezeByteArray# [ipv1_s9y89 ipv_s9y88] of {
                                (#,#) ipv2_s9y8b [Occ=Once] ipv3_s9y8c ->
                                    case or# [x#1_s9y86 1073741824##] of ipv4_s9y8d [Dmd=<S,U>] {
                                      __DEFAULT ->
                                          case
                                              byteArrayContents# [ipv3_s9y8c]
                                          of
                                          ptr_s9y8e [Dmd=<S,U>]
                                          { __DEFAULT ->
                                                case
                                                    writeWord32OffAddr# [ptr_s9y8e
                                                                         0#
                                                                         ipv4_s9y8d
                                                                         ipv2_s9y8b]
                                                of
                                                s2_s9y8f
                                                { __DEFAULT ->
                                                      case fd_s9y80 of {
                                                        GHC.Int.I32# x_s9y8h ->
                                                            case
                                                                plusAddr# [ptr_s9y8e 4#]
                                                            of
                                                            sat_s9y8i
                                                            { __DEFAULT ->
                                                                  case
                                                                      writeInt32OffAddr# [sat_s9y8i
                                                                                          0#
                                                                                          x_s9y8h
                                                                                          s2_s9y8f]
                                                                  of
                                                                  s1_s9y8j
                                                                  { __DEFAULT ->
                                                                        case ep_s9y7Z of {
                                                                          GHC.Event.EPoll.EPoll dt_s9y8l
                                                                                                _ [Occ=Dead] ->
                                                                              case
                                                                                  __pkg_ccall base-4.11.0.0 [dt_s9y8l
                                                                                                             3#
                                                                                                             x_s9y8h
                                                                                                             ptr_s9y8e
                                                                                                             s1_s9y8j]
                                                                              of
                                                                              { (#,#) ds_s9y8p [Occ=Once]
                                                                                      ds1_s9y8q [Occ=Once] ->
                                                                                    case
                                                                                        touch# [ipv3_s9y8c
                                                                                                ds_s9y8p]
                                                                                    of
                                                                                    s4_s9y8r
                                                                                    { __DEFAULT ->
                                                                                          case
                                                                                              narrow32Int# [ds1_s9y8q]
                                                                                          of
                                                                                          { __DEFAULT ->
                                                                                                case
                                                                                                    __pkg_ccall base-4.11.0.0 [s4_s9y8r]
                                                                                                of
                                                                                                { (#,#) ds5_s9y8v [Occ=Once*]
                                                                                                        ds6_s9y8w [Occ=Once] ->
                                                                                                      case
                                                                                                          narrow32Int# [ds6_s9y8w]
                                                                                                      of
                                                                                                      { __DEFAULT ->
                                                                                                            Foreign.C.Error.throwErrno1
                                                                                                                GHC.Event.EPoll.new7
                                                                                                                ds5_s9y8v;
                                                                                                        2# ->
                                                                                                            case
                                                                                                                newAlignedPinnedByteArray# [12#
                                                                                                                                            4#
                                                                                                                                            ds5_s9y8v]
                                                                                                            of
                                                                                                            { (#,#) ipv5_s9y8z [Occ=Once]
                                                                                                                    ipv6_s9y8A [Occ=Once] ->
                                                                                                                  case
                                                                                                                      unsafeFreezeByteArray# [ipv6_s9y8A
                                                                                                                                              ipv5_s9y8z]
                                                                                                                  of
                                                                                                                  { (#,#) ipv7_s9y8C [Occ=Once]
                                                                                                                          ipv8_s9y8D ->
                                                                                                                        case
                                                                                                                            byteArrayContents# [ipv8_s9y8D]
                                                                                                                        of
                                                                                                                        ptr1_s9y8E [Dmd=<S,U>]
                                                                                                                        { __DEFAULT ->
                                                                                                                              case
                                                                                                                                  writeWord32OffAddr# [ptr1_s9y8E
                                                                                                                                                       0#
                                                                                                                                                       ipv4_s9y8d
                                                                                                                                                       ipv7_s9y8C]
                                                                                                                              of
                                                                                                                              s3_s9y8F
                                                                                                                              { __DEFAULT ->
                                                                                                                                    case
                                                                                                                                        plusAddr# [ptr1_s9y8E
                                                                                                                                                   4#]
                                                                                                                                    of
                                                                                                                                    sat_s9y8G
                                                                                                                                    { __DEFAULT ->
                                                                                                                                          case
                                                                                                                                              writeInt32OffAddr# [sat_s9y8G
                                                                                                                                                                  0#
                                                                                                                                                                  x_s9y8h
                                                                                                                                                                  s3_s9y8F]
                                                                                                                                          of
                                                                                                                                          s5_s9y8H
                                                                                                                                          { __DEFAULT ->
                                                                                                                                                case
                                                                                                                                                    __pkg_ccall base-4.11.0.0 [dt_s9y8l
                                                                                                                                                                               1#
                                                                                                                                                                               x_s9y8h
                                                                                                                                                                               ptr1_s9y8E
                                                                                                                                                                               s5_s9y8H]
                                                                                                                                                of
                                                                                                                                                { (#,#) ds9_s9y8K [Occ=Once*]
                                                                                                                                                        ds10_s9y8L [Occ=Once] ->
                                                                                                                                                      case
                                                                                                                                                          narrow32Int# [ds10_s9y8L]
                                                                                                                                                      of
                                                                                                                                                      { __DEFAULT ->
                                                                                                                                                            case
                                                                                                                                                                touch# [ipv8_s9y8D
                                                                                                                                                                        ds9_s9y8K]
                                                                                                                                                            of
                                                                                                                                                            s6_s9y8N
                                                                                                                                                            { __DEFAULT ->
                                                                                                                                                                  (#,#) [s6_s9y8N
                                                                                                                                                                         GHC.Types.True];
                                                                                                                                                            };
                                                                                                                                                        -1# ->
                                                                                                                                                            case
                                                                                                                                                                __pkg_ccall base-4.11.0.0 [ds9_s9y8K]
                                                                                                                                                            of
                                                                                                                                                            { (#,#) ds11_s9y8Q [Occ=Once]
                                                                                                                                                                    ds12_s9y8R [Occ=Once] ->
                                                                                                                                                                  GHC.Event.EPoll.new6
                                                                                                                                                                      ds11_s9y8Q
                                                                                                                                                                      ds12_s9y8R;
                                                                                                                                                            };
                                                                                                                                                      };
                                                                                                                                                };
                                                                                                                                          };
                                                                                                                                    };
                                                                                                                              };
                                                                                                                        };
                                                                                                                  };
                                                                                                            };
                                                                                                      };
                                                                                                };
                                                                                            0# ->
                                                                                                (#,#) [s4_s9y8r
                                                                                                       GHC.Types.True];
                                                                                          };
                                                                                    };
                                                                              };
                                                                        };
                                                                  };
                                                            };
                                                      };
                                                };
                                          };
                                    };
                              };
                        };
              } in 
                case andI# [x#_s9y84 1#] of {
                  __DEFAULT ->
                      case andI# [x#_s9y84 2#] of {
                        __DEFAULT -> $j_s9y85 5##;
                        0# -> $j_s9y85 1##;
                      };
                  0# ->
                      case andI# [x#_s9y84 2#] of {
                        __DEFAULT -> $j_s9y85 4##;
                        0# -> $j_s9y85 0##;
                      };
                };
        };

GHC.Event.EPoll.new4
  :: GHC.Event.EPoll.EPoll
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,A)><S,U>,
 Unf=OtherCon []] =
    [] \r [be_s9y8W s_s9y8X]
        case be_s9y8W of {
          GHC.Event.EPoll.EPoll dt_s9y8Z [Occ=Once] _ [Occ=Dead] ->
              case __pkg_ccall base-4.11.0.0 [dt_s9y8Z s_s9y8X] of {
                (#,#) ds4_s9y93 [Occ=Once] _ [Occ=Dead] ->
                    (#,#) [ds4_s9y93 GHC.Tuple.()];
              };
        };

GHC.Event.EPoll.$w$j [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> GHC.Prim.Int#
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Event.Internal.Backend #)
[GblId, Arity=2, Str=<L,U><L,U>, Unf=OtherCon []] =
    [] \r [w_s9y95 ww_s9y96]
        case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
          (#,#) _ [Occ=Dead] ds1_s9y9a [Occ=Once] ->
              case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                (#,#) _ [Occ=Dead] ds3_s9y9e [Occ=Once] ->
                    case narrow32Int# [ds1_s9y9a] of sat_s9y9g {
                      __DEFAULT ->
                          case
                              __pkg_ccall base-4.11.0.0 [ww_s9y96 sat_s9y9g ds3_s9y9e w_s9y95]
                          of
                          { (#,#) ds4_s9y9i [Occ=Once*] ds5_s9y9j [Occ=Once] ->
                                case narrow32Int# [ds5_s9y9j] of {
                                  __DEFAULT ->
                                      case newPinnedByteArray# [768# ds4_s9y9i] of {
                                        (#,#) ipv5_s9y9m [Occ=Once] ipv6_s9y9n ->
                                            let {
                                              sat_s9y9p [Occ=Once]
                                                :: GHC.ForeignPtr.ForeignPtrContents
                                              [LclId] =
                                                  CCCS GHC.ForeignPtr.PlainPtr! [ipv6_s9y9n];
                                            } in 
                                              case byteArrayContents# [ipv6_s9y9n] of sat_s9y9o {
                                                __DEFAULT ->
                                                    let {
                                                      sat_s9y9q [Occ=Once]
                                                        :: GHC.ForeignPtr.ForeignPtr
                                                             GHC.Event.EPoll.Event
                                                      [LclId] =
                                                          CCCS GHC.ForeignPtr.ForeignPtr! [sat_s9y9o
                                                                                           sat_s9y9p]; } in
                                                    let {
                                                      sat_s9y9r [Occ=Once]
                                                        :: GHC.Event.Array.AC GHC.Event.EPoll.Event
                                                      [LclId] =
                                                          CCCS GHC.Event.Array.AC! [sat_s9y9q
                                                                                    0#
                                                                                    64#];
                                                    } in 
                                                      case newMutVar# [sat_s9y9r ipv5_s9y9m] of {
                                                        (#,#) ipv7_s9y9t [Occ=Once]
                                                              ipv8_s9y9u [Occ=Once] ->
                                                            let {
                                                              sat_s9y9v [Occ=Once]
                                                                :: GHC.Event.EPoll.EPoll
                                                              [LclId] =
                                                                  CCCS GHC.Event.EPoll.EPoll! [ww_s9y96
                                                                                               ipv8_s9y9u]; } in
                                                            let {
                                                              sat_s9y9w [Occ=Once]
                                                                :: GHC.Event.Internal.Backend
                                                              [LclId] =
                                                                  CCCS GHC.Event.Internal.Backend! [sat_s9y9v
                                                                                                    GHC.Event.EPoll.new10
                                                                                                    GHC.Event.EPoll.new9
                                                                                                    GHC.Event.EPoll.new5
                                                                                                    GHC.Event.EPoll.new4];
                                                            } in  (#,#) [ipv7_s9y9t sat_s9y9w];
                                                      };
                                              };
                                      };
                                  -1# ->
                                      case __pkg_ccall base-4.11.0.0 [ds4_s9y9i] of {
                                        (#,#) ds6_s9y9z [Occ=Once] ds7_s9y9A [Occ=Once] ->
                                            System.Posix.Internals.setCloseOnExec2
                                                ds6_s9y9z ds7_s9y9A;
                                      };
                                };
                          };
                    };
              };
        };

GHC.Event.EPoll.new3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "epollCreate"#;

GHC.Event.EPoll.new2 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.Event.EPoll.new3;

GHC.Event.EPoll.new1
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Event.Internal.Backend #)
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [s_s9y9C]
        case __pkg_ccall base-4.11.0.0 [256# s_s9y9C] of {
          (#,#) ds_s9y9F [Occ=Once*] ds1_s9y9G [Occ=Once] ->
              case narrow32Int# [ds1_s9y9G] of wild1_s9y9H {
                __DEFAULT -> GHC.Event.EPoll.$w$j ds_s9y9F wild1_s9y9H;
                -1# ->
                    case Foreign.C.Error.throwErrno1 GHC.Event.EPoll.new2 ds_s9y9F of {
                      (#,#) ipv_s9y9J [Occ=Once] ipv1_s9y9K [Occ=Once] ->
                          case ipv1_s9y9K of {
                            GHC.Int.I32# ww1_s9y9M [Occ=Once] ->
                                GHC.Event.EPoll.$w$j ipv_s9y9J ww1_s9y9M;
                          };
                    };
              };
        };

GHC.Event.EPoll.new :: GHC.Types.IO GHC.Event.Internal.Backend
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [eta_B1] GHC.Event.EPoll.new1 eta_B1;

GHC.Event.EPoll.Event
  :: GHC.Event.EPoll.EventType
     -> System.Posix.Types.Fd -> GHC.Event.EPoll.Event
[GblId[DataCon],
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U><L,U>m,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] GHC.Event.EPoll.Event [eta_B2 eta_B1];

GHC.Event.EPoll.EPoll
  :: GHC.Prim.Int#
     -> GHC.Prim.MutVar#
          GHC.Prim.RealWorld (GHC.Event.Array.AC GHC.Event.EPoll.Event)
     -> GHC.Event.EPoll.EPoll
[GblId[DataCon],
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U><L,U>m,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] GHC.Event.EPoll.EPoll [eta_B2 eta_B1];


==================== STG syntax: ====================
2018-03-16 16:04:39.145844719 UTC

GHC.Event.EPoll.$WEPoll [InlPrag=INLINE[2]]
  :: GHC.Event.EPoll.EPollFd
     -> GHC.Event.Array.Array GHC.Event.EPoll.Event
     -> GHC.Event.EPoll.EPoll
[GblId[DataConWrapper],
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,U><S,U>m,
 Unf=OtherCon []] =
    [] \r [dt_s9y0b dt_s9y0c]
        case dt_s9y0b of {
          GHC.Int.I32# dt_s9y0e [Occ=Once] ->
              case dt_s9y0c of {
                GHC.STRef.STRef dt_s9y0g [Occ=Once] ->
                    GHC.Event.EPoll.EPoll [dt_s9y0e dt_s9y0g];
              };
        };

GHC.Event.EPoll.$fStorableEvent_$calignment
  :: GHC.Event.EPoll.Event -> GHC.Types.Int
[GblId, Arity=1, Caf=NoCafRefs, Str=<L,A>m, Unf=OtherCon []] =
    [] \r [ds_s9y0h] Foreign.Storable.$fStorableBool7;

GHC.Event.EPoll.$fStorableEvent7 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [12#];

GHC.Event.EPoll.$fStorableEvent_$csizeOf
  :: GHC.Event.EPoll.Event -> GHC.Types.Int
[GblId, Arity=1, Caf=NoCafRefs, Str=<L,A>m, Unf=OtherCon []] =
    [] \r [ds_s9y0i] GHC.Event.EPoll.$fStorableEvent7;

GHC.Event.EPoll.$fStorableEvent2
  :: GHC.Ptr.Ptr GHC.Event.EPoll.Event
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Event.EPoll.Event #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ptr_s9y0j void_0E]
        case ptr_s9y0j of {
          GHC.Ptr.Ptr addr_s9y0m ->
              case readWord32OffAddr# [addr_s9y0m 0# GHC.Prim.void#] of {
                Unit# ipv1_s9y0p [Occ=Once] ->
                    case plusAddr# [addr_s9y0m 4#] of sat_s9y0q {
                      __DEFAULT ->
                          case readInt32OffAddr# [sat_s9y0q 0# GHC.Prim.void#] of {
                            Unit# ipv3_s9y0t [Occ=Once] ->
                                let {
                                  sat_s9y0v [Occ=Once] :: System.Posix.Types.Fd
                                  [LclId] =
                                      CCCS GHC.Int.I32#! [ipv3_s9y0t]; } in
                                let {
                                  sat_s9y0u [Occ=Once] :: GHC.Event.EPoll.EventType
                                  [LclId] =
                                      CCCS GHC.Word.W32#! [ipv1_s9y0p]; } in
                                let {
                                  sat_s9y0w [Occ=Once] :: GHC.Event.EPoll.Event
                                  [LclId] =
                                      CCCS GHC.Event.EPoll.Event! [sat_s9y0u sat_s9y0v];
                                } in  Unit# [sat_s9y0w];
                          };
                    };
              };
        };

GHC.Event.EPoll.$fStorableEvent1
  :: GHC.Ptr.Ptr GHC.Event.EPoll.Event
     -> GHC.Event.EPoll.Event
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S(S)S(S)),1*U(1*U(U),1*U(U))><S,U>,
 Unf=OtherCon []] =
    [] \r [ptr_s9y0x e_s9y0y void_0E]
        case ptr_s9y0x of {
          GHC.Ptr.Ptr addr_s9y0B ->
              case e_s9y0y of {
                GHC.Event.EPoll.Event ds_s9y0D [Occ=Once] ds1_s9y0E [Occ=Once] ->
                    case ds_s9y0D of {
                      GHC.Word.W32# x_s9y0G [Occ=Once] ->
                          case
                              writeWord32OffAddr# [addr_s9y0B 0# x_s9y0G GHC.Prim.void#]
                          of
                          s2_s9y0H
                          { (##) ->
                                case ds1_s9y0E of {
                                  GHC.Int.I32# x1_s9y0J [Occ=Once] ->
                                      case plusAddr# [addr_s9y0B 4#] of sat_s9y0K {
                                        __DEFAULT ->
                                            case
                                                writeInt32OffAddr# [sat_s9y0K
                                                                    0#
                                                                    x1_s9y0J
                                                                    GHC.Prim.void#]
                                            of
                                            s1_s9y0L
                                            { (##) -> Unit# [GHC.Tuple.()];
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.Event.EPoll.$fStorableEvent4
  :: forall b.
     GHC.Ptr.Ptr b
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Event.EPoll.Event #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ptr_s9y0M off_s9y0N void_0E]
        case ptr_s9y0M of {
          GHC.Ptr.Ptr addr_s9y0Q [Occ=Once] ->
              case off_s9y0N of {
                GHC.Types.I# d_s9y0S [Occ=Once] ->
                    case plusAddr# [addr_s9y0Q d_s9y0S] of addr1_s9y0T [Dmd=<S,U>] {
                      __DEFAULT ->
                          case readWord32OffAddr# [addr1_s9y0T 0# GHC.Prim.void#] of {
                            Unit# ipv1_s9y0W [Occ=Once] ->
                                case plusAddr# [addr1_s9y0T 4#] of sat_s9y0X {
                                  __DEFAULT ->
                                      case readInt32OffAddr# [sat_s9y0X 0# GHC.Prim.void#] of {
                                        Unit# ipv3_s9y10 [Occ=Once] ->
                                            let {
                                              sat_s9y12 [Occ=Once] :: System.Posix.Types.Fd
                                              [LclId] =
                                                  CCCS GHC.Int.I32#! [ipv3_s9y10]; } in
                                            let {
                                              sat_s9y11 [Occ=Once] :: GHC.Event.EPoll.EventType
                                              [LclId] =
                                                  CCCS GHC.Word.W32#! [ipv1_s9y0W]; } in
                                            let {
                                              sat_s9y13 [Occ=Once] :: GHC.Event.EPoll.Event
                                              [LclId] =
                                                  CCCS GHC.Event.EPoll.Event! [sat_s9y11 sat_s9y12];
                                            } in  Unit# [sat_s9y13];
                                      };
                                };
                          };
                    };
              };
        };

GHC.Event.EPoll.$fStorableEvent6
  :: GHC.Ptr.Ptr GHC.Event.EPoll.Event
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Event.EPoll.Event #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ptr_s9y14 off_s9y15 void_0E]
        case ptr_s9y14 of {
          GHC.Ptr.Ptr addr_s9y18 [Occ=Once] ->
              case off_s9y15 of {
                GHC.Types.I# x_s9y1a [Occ=Once] ->
                    case *# [x_s9y1a 12#] of sat_s9y1c {
                      __DEFAULT ->
                          case plusAddr# [addr_s9y18 sat_s9y1c] of addr1_s9y1b [Dmd=<S,U>] {
                            __DEFAULT ->
                                case readWord32OffAddr# [addr1_s9y1b 0# GHC.Prim.void#] of {
                                  Unit# ipv1_s9y1f [Occ=Once] ->
                                      case plusAddr# [addr1_s9y1b 4#] of sat_s9y1g {
                                        __DEFAULT ->
                                            case
                                                readInt32OffAddr# [sat_s9y1g 0# GHC.Prim.void#]
                                            of
                                            { Unit# ipv3_s9y1j [Occ=Once] ->
                                                  let {
                                                    sat_s9y1l [Occ=Once] :: System.Posix.Types.Fd
                                                    [LclId] =
                                                        CCCS GHC.Int.I32#! [ipv3_s9y1j]; } in
                                                  let {
                                                    sat_s9y1k [Occ=Once]
                                                      :: GHC.Event.EPoll.EventType
                                                    [LclId] =
                                                        CCCS GHC.Word.W32#! [ipv1_s9y1f]; } in
                                                  let {
                                                    sat_s9y1m [Occ=Once] :: GHC.Event.EPoll.Event
                                                    [LclId] =
                                                        CCCS GHC.Event.EPoll.Event! [sat_s9y1k
                                                                                     sat_s9y1l];
                                                  } in  Unit# [sat_s9y1m];
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.Event.EPoll.$fStorableEvent3
  :: forall b.
     GHC.Ptr.Ptr b
     -> GHC.Types.Int
     -> GHC.Event.EPoll.Event
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S(S)S(S)),1*U(1*U(U),1*U(U))><S,U>,
 Unf=OtherCon []] =
    [] \r [ptr_s9y1n off_s9y1o eta_s9y1p void_0E]
        case ptr_s9y1n of {
          GHC.Ptr.Ptr addr_s9y1s [Occ=Once] ->
              case off_s9y1o of {
                GHC.Types.I# d_s9y1u [Occ=Once] ->
                    case eta_s9y1p of {
                      GHC.Event.EPoll.Event ds_s9y1w [Occ=Once] ds1_s9y1x [Occ=Once] ->
                          case ds_s9y1w of {
                            GHC.Word.W32# x_s9y1z [Occ=Once] ->
                                case plusAddr# [addr_s9y1s d_s9y1u] of addr1_s9y1A [Dmd=<S,U>] {
                                  __DEFAULT ->
                                      case
                                          writeWord32OffAddr# [addr1_s9y1A
                                                               0#
                                                               x_s9y1z
                                                               GHC.Prim.void#]
                                      of
                                      s2_s9y1B
                                      { (##) ->
                                            case ds1_s9y1x of {
                                              GHC.Int.I32# x1_s9y1D [Occ=Once] ->
                                                  case plusAddr# [addr1_s9y1A 4#] of sat_s9y1E {
                                                    __DEFAULT ->
                                                        case
                                                            writeInt32OffAddr# [sat_s9y1E
                                                                                0#
                                                                                x1_s9y1D
                                                                                GHC.Prim.void#]
                                                        of
                                                        s1_s9y1F
                                                        { (##) -> Unit# [GHC.Tuple.()];
                                                        };
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.Event.EPoll.$fStorableEvent5
  :: GHC.Ptr.Ptr GHC.Event.EPoll.Event
     -> GHC.Types.Int
     -> GHC.Event.EPoll.Event
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S(S)S(S)),1*U(1*U(U),1*U(U))><S,U>,
 Unf=OtherCon []] =
    [] \r [ptr_s9y1G off_s9y1H val_s9y1I void_0E]
        case ptr_s9y1G of {
          GHC.Ptr.Ptr addr_s9y1L [Occ=Once] ->
              case off_s9y1H of {
                GHC.Types.I# x_s9y1N [Occ=Once] ->
                    case val_s9y1I of {
                      GHC.Event.EPoll.Event ds_s9y1P [Occ=Once] ds1_s9y1Q [Occ=Once] ->
                          case ds_s9y1P of {
                            GHC.Word.W32# x1_s9y1S [Occ=Once] ->
                                case *# [x_s9y1N 12#] of sat_s9y1U {
                                  __DEFAULT ->
                                      case
                                          plusAddr# [addr_s9y1L sat_s9y1U]
                                      of
                                      addr1_s9y1T [Dmd=<S,U>]
                                      { __DEFAULT ->
                                            case
                                                writeWord32OffAddr# [addr1_s9y1T
                                                                     0#
                                                                     x1_s9y1S
                                                                     GHC.Prim.void#]
                                            of
                                            s2_s9y1V
                                            { (##) ->
                                                  case ds1_s9y1Q of {
                                                    GHC.Int.I32# x2_s9y1X [Occ=Once] ->
                                                        case
                                                            plusAddr# [addr1_s9y1T 4#]
                                                        of
                                                        sat_s9y1Y
                                                        { __DEFAULT ->
                                                              case
                                                                  writeInt32OffAddr# [sat_s9y1Y
                                                                                      0#
                                                                                      x2_s9y1X
                                                                                      GHC.Prim.void#]
                                                              of
                                                              s1_s9y1Z
                                                              { (##) -> Unit# [GHC.Tuple.()];
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.Event.EPoll.$fStorableEvent [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable GHC.Event.EPoll.Event
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [GHC.Event.EPoll.$fStorableEvent_$csizeOf
                                                GHC.Event.EPoll.$fStorableEvent_$calignment
                                                GHC.Event.EPoll.$fStorableEvent6
                                                GHC.Event.EPoll.$fStorableEvent5
                                                GHC.Event.EPoll.$fStorableEvent4
                                                GHC.Event.EPoll.$fStorableEvent3
                                                GHC.Event.EPoll.$fStorableEvent2
                                                GHC.Event.EPoll.$fStorableEvent1];

GHC.Event.EPoll.$fEqEventType [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq GHC.Event.EPoll.EventType
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Word.eqWord32
                                     GHC.Word.neWord32];

GHC.Event.EPoll.$fBitsEventType [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits GHC.Event.EPoll.EventType
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [GHC.Event.EPoll.$fEqEventType
                                     GHC.Word.$fBitsWord32_$c.&.
                                     GHC.Word.$fBitsWord32_$c.|.
                                     GHC.Word.$fBitsWord32_$cxor
                                     GHC.Word.$fBitsWord32_$ccomplement
                                     GHC.Word.$fBitsWord32_$cshift
                                     GHC.Word.$fBitsWord32_$crotate
                                     GHC.Word.$fBitsWord32_$cminBound
                                     GHC.Word.$fBitsWord32_$cbit
                                     GHC.Word.$fBitsWord32_$csetBit
                                     GHC.Word.$fBitsWord32_$cclearBit
                                     GHC.Word.$fBitsWord32_$ccomplementBit
                                     GHC.Word.$fBitsWord32_$ctestBit
                                     GHC.Word.$fBitsWord32_$cbitSizeMaybe
                                     GHC.Word.$fBitsWord32_$cfiniteBitSize
                                     GHC.Word.$fBitsWord32_$cisSigned
                                     GHC.Word.$fBitsWord32_$cshiftL
                                     GHC.Word.$fBitsWord32_$cunsafeShiftL
                                     GHC.Word.$fBitsWord32_$cshiftR
                                     GHC.Word.$fBitsWord32_$cunsafeShiftR
                                     GHC.Word.$fBitsWord32_$crotateL
                                     GHC.Word.$fBitsWord32_$crotateR
                                     GHC.Word.$fBitsWord32_$cpopCount];

GHC.Event.EPoll.fromEPollFd1
  :: GHC.Event.EPoll.EPollFd -> GHC.Event.EPoll.EPollFd
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U(U)>m, Unf=OtherCon []] =
    [] \r [ds_s9y20] ds_s9y20;

GHC.Event.EPoll.fromEPollFd
  :: GHC.Event.EPoll.EPollFd -> Foreign.C.Types.CInt
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S,1*U(U)>m,
 Unf=OtherCon []] =
    [] \r [eta_B1] GHC.Event.EPoll.fromEPollFd1 eta_B1;

GHC.Event.EPoll.unEventType1
  :: GHC.Event.EPoll.EventType -> GHC.Event.EPoll.EventType
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U(U)>m, Unf=OtherCon []] =
    [] \r [ds_s9y21] ds_s9y21;

GHC.Event.EPoll.unEventType
  :: GHC.Event.EPoll.EventType -> GHC.Word.Word32
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S,1*U(U)>m,
 Unf=OtherCon []] =
    [] \r [eta_B1] GHC.Event.EPoll.unEventType1 eta_B1;

GHC.Event.EPoll.eventFd
  :: GHC.Event.EPoll.Event -> System.Posix.Types.Fd
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LS),1*U(A,1*U(U))>m,
 Unf=OtherCon []] =
    [] \r [ds_s9y22]
        case ds_s9y22 of {
          GHC.Event.EPoll.Event _ [Occ=Dead] ds2_s9y25 [Occ=Once] ->
              ds2_s9y25;
        };

GHC.Event.EPoll.eventTypes
  :: GHC.Event.EPoll.Event -> GHC.Event.EPoll.EventType
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(1*U(U),A)>m,
 Unf=OtherCon []] =
    [] \r [ds_s9y26]
        case ds_s9y26 of {
          GHC.Event.EPoll.Event ds1_s9y28 [Occ=Once] _ [Occ=Dead] ->
              ds1_s9y28;
        };

GHC.Event.EPoll.epollEvents
  :: GHC.Event.EPoll.EPoll
     -> GHC.Event.Array.Array GHC.Event.EPoll.Event
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LS),1*U(A,U)>m,
 Unf=OtherCon []] =
    [] \r [ds_s9y2a]
        case ds_s9y2a of {
          GHC.Event.EPoll.EPoll _ [Occ=Dead] dt1_s9y2d [Occ=Once] ->
              GHC.STRef.STRef [dt1_s9y2d];
        };

GHC.Event.EPoll.epollFd
  :: GHC.Event.EPoll.EPoll -> GHC.Event.EPoll.EPollFd
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,A)>m,
 Unf=OtherCon []] =
    [] \r [ds_s9y2e]
        case ds_s9y2e of {
          GHC.Event.EPoll.EPoll dt_s9y2g [Occ=Once] _ [Occ=Dead] ->
              GHC.Int.I32# [dt_s9y2g];
        };

GHC.Event.EPoll.available [InlPrag=INLINE (sat-args=0)]
  :: GHC.Types.Bool
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.True! [];

GHC.Event.EPoll.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

GHC.Event.EPoll.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.EPoll.$trModule4];

GHC.Event.EPoll.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.Event.EPoll"#;

GHC.Event.EPoll.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.EPoll.$trModule2];

GHC.Event.EPoll.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [GHC.Event.EPoll.$trModule3
                                     GHC.Event.EPoll.$trModule1];

$krep_r9xZP :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCInt
                                              GHC.Types.[]];

$krep1_r9xZQ :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Word.$tcWord32
                                              GHC.Types.[]];

$krep2_r9xZR :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [System.Posix.Types.$tcFd
                                              GHC.Types.[]];

GHC.Event.EPoll.$tcEPollFd2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "EPollFd"#;

GHC.Event.EPoll.$tcEPollFd1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.EPoll.$tcEPollFd2];

GHC.Event.EPoll.$tcEPollFd :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [11408974392712426853##
                                    10860743297622841984##
                                    GHC.Event.EPoll.$trModule
                                    GHC.Event.EPoll.$tcEPollFd1
                                    0#
                                    GHC.Types.krep$*];

$krep3_r9xZS :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.EPoll.$tcEPollFd
                                              GHC.Types.[]];

GHC.Event.EPoll.$tc'EPollFd1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_r9xZP $krep3_r9xZS];

GHC.Event.EPoll.$tc'EPollFd3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'EPollFd"#;

GHC.Event.EPoll.$tc'EPollFd2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.EPoll.$tc'EPollFd3];

GHC.Event.EPoll.$tc'EPollFd :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [13859366844265277896##
                                    3104986725924328114##
                                    GHC.Event.EPoll.$trModule
                                    GHC.Event.EPoll.$tc'EPollFd2
                                    0#
                                    GHC.Event.EPoll.$tc'EPollFd1];

GHC.Event.EPoll.$tcControlOp2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "ControlOp"#;

GHC.Event.EPoll.$tcControlOp1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.EPoll.$tcControlOp2];

GHC.Event.EPoll.$tcControlOp :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [16670684287779227039##
                                    7079239768931473179##
                                    GHC.Event.EPoll.$trModule
                                    GHC.Event.EPoll.$tcControlOp1
                                    0#
                                    GHC.Types.krep$*];

$krep4_r9xZT :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.EPoll.$tcControlOp
                                              GHC.Types.[]];

GHC.Event.EPoll.$tc'ControlOp1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_r9xZP $krep4_r9xZT];

GHC.Event.EPoll.$tc'ControlOp3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'ControlOp"#;

GHC.Event.EPoll.$tc'ControlOp2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.EPoll.$tc'ControlOp3];

GHC.Event.EPoll.$tc'ControlOp :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [17423659744934710370##
                                    14737300415055323322##
                                    GHC.Event.EPoll.$trModule
                                    GHC.Event.EPoll.$tc'ControlOp2
                                    0#
                                    GHC.Event.EPoll.$tc'ControlOp1];

GHC.Event.EPoll.$tcEventType2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "EventType"#;

GHC.Event.EPoll.$tcEventType1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.EPoll.$tcEventType2];

GHC.Event.EPoll.$tcEventType :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [6882131545153803920##
                                    11603224301892798833##
                                    GHC.Event.EPoll.$trModule
                                    GHC.Event.EPoll.$tcEventType1
                                    0#
                                    GHC.Types.krep$*];

$krep5_r9xZU :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.EPoll.$tcEventType
                                              GHC.Types.[]];

GHC.Event.EPoll.$tc'EventType1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep1_r9xZQ $krep5_r9xZU];

GHC.Event.EPoll.$tc'EventType3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'EventType"#;

GHC.Event.EPoll.$tc'EventType2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.EPoll.$tc'EventType3];

GHC.Event.EPoll.$tc'EventType :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [6895099112894632230##
                                    10353865251933672677##
                                    GHC.Event.EPoll.$trModule
                                    GHC.Event.EPoll.$tc'EventType2
                                    0#
                                    GHC.Event.EPoll.$tc'EventType1];

GHC.Event.EPoll.$tcEvent2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Event"#;

GHC.Event.EPoll.$tcEvent1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.EPoll.$tcEvent2];

GHC.Event.EPoll.$tcEvent :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [9768726503562184735##
                                    14932995848660065219##
                                    GHC.Event.EPoll.$trModule
                                    GHC.Event.EPoll.$tcEvent1
                                    0#
                                    GHC.Types.krep$*];

$krep6_r9xZV :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.EPoll.$tcEvent
                                              GHC.Types.[]];

$krep7_r9xZW :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_r9xZR $krep6_r9xZV];

GHC.Event.EPoll.$tc'Event1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep5_r9xZU $krep7_r9xZW];

GHC.Event.EPoll.$tc'Event3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Event"#;

GHC.Event.EPoll.$tc'Event2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.EPoll.$tc'Event3];

GHC.Event.EPoll.$tc'Event :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [13898227050457859187##
                                    12870286929163337655##
                                    GHC.Event.EPoll.$trModule
                                    GHC.Event.EPoll.$tc'Event2
                                    0#
                                    GHC.Event.EPoll.$tc'Event1];

$krep8_r9xZX :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep6_r9xZV GHC.Types.[]];

$krep9_r9xZY :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.Array.$tcArray
                                              $krep8_r9xZX];

GHC.Event.EPoll.$tcEPoll2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "EPoll"#;

GHC.Event.EPoll.$tcEPoll1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.EPoll.$tcEPoll2];

GHC.Event.EPoll.$tcEPoll :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [16362945812962510240##
                                    15183678187331181316##
                                    GHC.Event.EPoll.$trModule
                                    GHC.Event.EPoll.$tcEPoll1
                                    0#
                                    GHC.Types.krep$*];

$krep10_r9xZZ :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.EPoll.$tcEPoll
                                              GHC.Types.[]];

$krep11_r9y00 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep9_r9xZY $krep10_r9xZZ];

GHC.Event.EPoll.$tc'EPoll1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep3_r9xZS $krep11_r9y00];

GHC.Event.EPoll.$tc'EPoll3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'EPoll"#;

GHC.Event.EPoll.$tc'EPoll2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.EPoll.$tc'EPoll3];

GHC.Event.EPoll.$tc'EPoll :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [11640704659469356468##
                                    11164042648060985378##
                                    GHC.Event.EPoll.$trModule
                                    GHC.Event.EPoll.$tc'EPoll2
                                    0#
                                    GHC.Event.EPoll.$tc'EPoll1];

GHC.Event.EPoll.$fShowEPollFd4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "EPollFd {"#;

GHC.Event.EPoll.$fShowEPollFd3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "fromEPollFd = "#;

GHC.Event.EPoll.$fShowEPollFd2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "}"#;

GHC.Event.EPoll.$w$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Event.EPoll.EPollFd -> GHC.Base.String -> GHC.Base.String
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,U><L,1*U(U)><L,U>,
 Unf=OtherCon []] =
    [] \r [ww_s9y2i w_s9y2j w1_s9y2k]
        case >=# [ww_s9y2i 11#] of {
          __DEFAULT ->
              let {
                sat_s9y2t [Occ=Once] :: [GHC.Types.Char]
                [LclId] =
                    [w_s9y2j w1_s9y2k] \u []
                        let {
                          sat_s9y2s [Occ=Once] :: [GHC.Types.Char]
                          [LclId] =
                              [w_s9y2j w1_s9y2k] \u []
                                  case w_s9y2j of {
                                    GHC.Int.I32# x#_s9y2n [Occ=Once] ->
                                        let {
                                          sat_s9y2o [Occ=Once] :: GHC.Base.String
                                          [LclId] =
                                              [w1_s9y2k] \u []
                                                  GHC.CString.unpackAppendCString#
                                                      GHC.Event.EPoll.$fShowEPollFd2 w1_s9y2k;
                                        } in 
                                          case GHC.Show.$wshowSignedInt 0# x#_s9y2n sat_s9y2o of {
                                            (#,#) ww5_s9y2q [Occ=Once] ww6_s9y2r [Occ=Once] ->
                                                : [ww5_s9y2q ww6_s9y2r];
                                          };
                                  };
                        } in 
                          GHC.CString.unpackAppendCString#
                              GHC.Event.EPoll.$fShowEPollFd3 sat_s9y2s;
              } in 
                GHC.CString.unpackAppendCString#
                    GHC.Event.EPoll.$fShowEPollFd4 sat_s9y2t;
          1# ->
              let {
                sat_s9y2D [Occ=Once] :: [GHC.Types.Char]
                [LclId] =
                    [w_s9y2j w1_s9y2k] \u []
                        let {
                          sat_s9y2C [Occ=Once] :: [GHC.Types.Char]
                          [LclId] =
                              [w_s9y2j w1_s9y2k] \u []
                                  let {
                                    sat_s9y2B [Occ=Once] :: [GHC.Types.Char]
                                    [LclId] =
                                        [w_s9y2j w1_s9y2k] \u []
                                            case w_s9y2j of {
                                              GHC.Int.I32# x#_s9y2v [Occ=Once] ->
                                                  let {
                                                    sat_s9y2x [Occ=Once] :: GHC.Base.String
                                                    [LclId] =
                                                        [w1_s9y2k] \u []
                                                            let {
                                                              sat_s9y2w [Occ=Once]
                                                                :: [GHC.Types.Char]
                                                              [LclId] =
                                                                  CCCS :! [GHC.Show.$fShow(,)2
                                                                           w1_s9y2k];
                                                            } in 
                                                              GHC.CString.unpackAppendCString#
                                                                  GHC.Event.EPoll.$fShowEPollFd2
                                                                  sat_s9y2w;
                                                  } in 
                                                    case
                                                        GHC.Show.$wshowSignedInt
                                                            0# x#_s9y2v sat_s9y2x
                                                    of
                                                    { (#,#) ww5_s9y2z [Occ=Once]
                                                            ww6_s9y2A [Occ=Once] ->
                                                          : [ww5_s9y2z ww6_s9y2A];
                                                    };
                                            };
                                  } in 
                                    GHC.CString.unpackAppendCString#
                                        GHC.Event.EPoll.$fShowEPollFd3 sat_s9y2B;
                        } in 
                          GHC.CString.unpackAppendCString#
                              GHC.Event.EPoll.$fShowEPollFd4 sat_s9y2C;
              } in  : [GHC.Show.$fShow(,)4 sat_s9y2D];
        };

GHC.Event.EPoll.$fShowEPollFd_$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Int -> GHC.Event.EPoll.EPollFd -> GHC.Show.ShowS
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><L,1*U(U)><L,U>,
 Unf=OtherCon []] =
    [] \r [w_s9y2E w1_s9y2F w2_s9y2G]
        case w_s9y2E of {
          GHC.Types.I# ww1_s9y2I [Occ=Once] ->
              GHC.Event.EPoll.$w$cshowsPrec ww1_s9y2I w1_s9y2F w2_s9y2G;
        };

GHC.Event.EPoll.$fShowEPollFd5 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.Event.EPoll.$fShowEPollFd2;

GHC.Event.EPoll.$fShowEPollFd_$cshow
  :: GHC.Event.EPoll.EPollFd -> GHC.Base.String
[GblId, Arity=1, Str=<L,1*U(U)>, Unf=OtherCon []] =
    [] \r [x_s9y2J]
        let {
          sat_s9y2Q [Occ=Once] :: [GHC.Types.Char]
          [LclId] =
              [x_s9y2J] \u []
                  let {
                    sat_s9y2P [Occ=Once] :: [GHC.Types.Char]
                    [LclId] =
                        [x_s9y2J] \u []
                            case x_s9y2J of {
                              GHC.Int.I32# x#_s9y2L [Occ=Once] ->
                                  case
                                      GHC.Show.$wshowSignedInt
                                          0# x#_s9y2L GHC.Event.EPoll.$fShowEPollFd5
                                  of
                                  { (#,#) ww5_s9y2N [Occ=Once] ww6_s9y2O [Occ=Once] ->
                                        : [ww5_s9y2N ww6_s9y2O];
                                  };
                            };
                  } in 
                    GHC.CString.unpackAppendCString#
                        GHC.Event.EPoll.$fShowEPollFd3 sat_s9y2P;
        } in 
          GHC.CString.unpackAppendCString#
              GHC.Event.EPoll.$fShowEPollFd4 sat_s9y2Q;

GHC.Event.EPoll.$fShowEPollFd1
  :: GHC.Event.EPoll.EPollFd -> GHC.Show.ShowS
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,1*U(U)><L,U>,
 Unf=OtherCon []] =
    [] \r [w_s9y2R w1_s9y2S]
        GHC.Event.EPoll.$w$cshowsPrec 0# w_s9y2R w1_s9y2S;

GHC.Event.EPoll.$fShowEPollFd_$cshowList
  :: [GHC.Event.EPoll.EPollFd] -> GHC.Show.ShowS
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><L,U>,
 Unf=OtherCon []] =
    [] \r [ls_s9y2T s_s9y2U]
        GHC.Show.showList__
            GHC.Event.EPoll.$fShowEPollFd1 ls_s9y2T s_s9y2U;

GHC.Event.EPoll.$fShowEPollFd [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show GHC.Event.EPoll.EPollFd
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Event.EPoll.$fShowEPollFd_$cshowsPrec
                                    GHC.Event.EPoll.$fShowEPollFd_$cshow
                                    GHC.Event.EPoll.$fShowEPollFd_$cshowList];

GHC.Event.EPoll.$fShowEvent4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "EventType {"#;

GHC.Event.EPoll.$fShowEvent3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "unEventType = "#;

GHC.Event.EPoll.$w$cshowsPrec2 [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Event.EPoll.EventType -> GHC.Base.String -> GHC.Base.String
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,U><L,1*U(U)><L,U>,
 Unf=OtherCon []] =
    [] \r [ww_s9y2V w_s9y2W w1_s9y2X]
        case >=# [ww_s9y2V 11#] of {
          __DEFAULT ->
              let {
                sat_s9y37 [Occ=Once] :: [GHC.Types.Char]
                [LclId] =
                    [w_s9y2W w1_s9y2X] \u []
                        let {
                          sat_s9y36 [Occ=Once] :: [GHC.Types.Char]
                          [LclId] =
                              [w_s9y2W w1_s9y2X] \u []
                                  case w_s9y2W of {
                                    GHC.Word.W32# x#_s9y30 [Occ=Once] ->
                                        let {
                                          sat_s9y32 [Occ=Once] :: GHC.Base.String
                                          [LclId] =
                                              [w1_s9y2X] \u []
                                                  GHC.CString.unpackAppendCString#
                                                      GHC.Event.EPoll.$fShowEPollFd2 w1_s9y2X;
                                        } in 
                                          case word2Int# [x#_s9y30] of sat_s9y31 {
                                            __DEFAULT ->
                                                case GHC.Show.$witos sat_s9y31 sat_s9y32 of {
                                                  (#,#) ww5_s9y34 [Occ=Once] ww6_s9y35 [Occ=Once] ->
                                                      : [ww5_s9y34 ww6_s9y35];
                                                };
                                          };
                                  };
                        } in 
                          GHC.CString.unpackAppendCString#
                              GHC.Event.EPoll.$fShowEvent3 sat_s9y36;
              } in 
                GHC.CString.unpackAppendCString#
                    GHC.Event.EPoll.$fShowEvent4 sat_s9y37;
          1# ->
              let {
                sat_s9y3i [Occ=Once] :: [GHC.Types.Char]
                [LclId] =
                    [w_s9y2W w1_s9y2X] \u []
                        let {
                          sat_s9y3h [Occ=Once] :: [GHC.Types.Char]
                          [LclId] =
                              [w_s9y2W w1_s9y2X] \u []
                                  let {
                                    sat_s9y3g [Occ=Once] :: [GHC.Types.Char]
                                    [LclId] =
                                        [w_s9y2W w1_s9y2X] \u []
                                            case w_s9y2W of {
                                              GHC.Word.W32# x#_s9y39 [Occ=Once] ->
                                                  let {
                                                    sat_s9y3c [Occ=Once] :: GHC.Base.String
                                                    [LclId] =
                                                        [w1_s9y2X] \u []
                                                            let {
                                                              sat_s9y3b [Occ=Once]
                                                                :: [GHC.Types.Char]
                                                              [LclId] =
                                                                  CCCS :! [GHC.Show.$fShow(,)2
                                                                           w1_s9y2X];
                                                            } in 
                                                              GHC.CString.unpackAppendCString#
                                                                  GHC.Event.EPoll.$fShowEPollFd2
                                                                  sat_s9y3b;
                                                  } in 
                                                    case word2Int# [x#_s9y39] of sat_s9y3a {
                                                      __DEFAULT ->
                                                          case
                                                              GHC.Show.$witos sat_s9y3a sat_s9y3c
                                                          of
                                                          { (#,#) ww5_s9y3e [Occ=Once]
                                                                  ww6_s9y3f [Occ=Once] ->
                                                                : [ww5_s9y3e ww6_s9y3f];
                                                          };
                                                    };
                                            };
                                  } in 
                                    GHC.CString.unpackAppendCString#
                                        GHC.Event.EPoll.$fShowEvent3 sat_s9y3g;
                        } in 
                          GHC.CString.unpackAppendCString#
                              GHC.Event.EPoll.$fShowEvent4 sat_s9y3h;
              } in  : [GHC.Show.$fShow(,)4 sat_s9y3i];
        };

GHC.Event.EPoll.$fShowEventType_$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Int -> GHC.Event.EPoll.EventType -> GHC.Show.ShowS
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><L,1*U(U)><L,U>,
 Unf=OtherCon []] =
    [] \r [w_s9y3j w1_s9y3k w2_s9y3l]
        case w_s9y3j of {
          GHC.Types.I# ww1_s9y3n [Occ=Once] ->
              GHC.Event.EPoll.$w$cshowsPrec2 ww1_s9y3n w1_s9y3k w2_s9y3l;
        };

GHC.Event.EPoll.$fShowEventType_$cshow
  :: GHC.Event.EPoll.EventType -> GHC.Base.String
[GblId, Arity=1, Str=<L,1*U(U)>, Unf=OtherCon []] =
    [] \r [x_s9y3o]
        let {
          sat_s9y3w [Occ=Once] :: [GHC.Types.Char]
          [LclId] =
              [x_s9y3o] \u []
                  let {
                    sat_s9y3v [Occ=Once] :: [GHC.Types.Char]
                    [LclId] =
                        [x_s9y3o] \u []
                            case x_s9y3o of {
                              GHC.Word.W32# x#_s9y3q [Occ=Once] ->
                                  case word2Int# [x#_s9y3q] of sat_s9y3r {
                                    __DEFAULT ->
                                        case
                                            GHC.Show.$wshowSignedInt
                                                0# sat_s9y3r GHC.Event.EPoll.$fShowEPollFd5
                                        of
                                        { (#,#) ww5_s9y3t [Occ=Once] ww6_s9y3u [Occ=Once] ->
                                              : [ww5_s9y3t ww6_s9y3u];
                                        };
                                  };
                            };
                  } in 
                    GHC.CString.unpackAppendCString#
                        GHC.Event.EPoll.$fShowEvent3 sat_s9y3v;
        } in 
          GHC.CString.unpackAppendCString#
              GHC.Event.EPoll.$fShowEvent4 sat_s9y3w;

GHC.Event.EPoll.$fShowEventType1
  :: GHC.Event.EPoll.EventType -> GHC.Show.ShowS
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,1*U(U)><L,U>,
 Unf=OtherCon []] =
    [] \r [w_s9y3x w1_s9y3y]
        GHC.Event.EPoll.$w$cshowsPrec2 0# w_s9y3x w1_s9y3y;

GHC.Event.EPoll.$fShowEventType_$cshowList
  :: [GHC.Event.EPoll.EventType] -> GHC.Show.ShowS
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><L,U>,
 Unf=OtherCon []] =
    [] \r [ls_s9y3z s_s9y3A]
        GHC.Show.showList__
            GHC.Event.EPoll.$fShowEventType1 ls_s9y3z s_s9y3A;

GHC.Event.EPoll.$fShowEventType [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show GHC.Event.EPoll.EventType
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Event.EPoll.$fShowEventType_$cshowsPrec
                                    GHC.Event.EPoll.$fShowEventType_$cshow
                                    GHC.Event.EPoll.$fShowEventType_$cshowList];

GHC.Event.EPoll.$fShowEvent7 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Event {"#;

GHC.Event.EPoll.$fShowEvent6 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.Event.EPoll.$fShowEvent7;

GHC.Event.EPoll.$fShowEvent5 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "eventTypes = "#;

GHC.Event.EPoll.$fShowEvent2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "eventFd = "#;

GHC.Event.EPoll.$w$cshowsPrec1 [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Event.EPoll.EventType
     -> System.Posix.Types.Fd
     -> GHC.Base.String
     -> GHC.Base.String
[GblId,
 Arity=4,
 Str=<S,U><L,1*U(U)><L,1*U(U)><L,U>,
 Unf=OtherCon []] =
    [] \r [ww_s9y3B ww1_s9y3C ww2_s9y3D w_s9y3E]
        case >=# [ww_s9y3B 11#] of {
          __DEFAULT ->
              let {
                sat_s9y3Q [Occ=Once, Dmd=<L,1*U>] :: [GHC.Types.Char]
                [LclId] =
                    [ww1_s9y3C ww2_s9y3D w_s9y3E] \s []
                        let {
                          sat_s9y3P [Occ=Once] :: [GHC.Types.Char]
                          [LclId] =
                              [ww1_s9y3C ww2_s9y3D w_s9y3E] \u []
                                  let {
                                    sat_s9y3O [Occ=Once] :: GHC.Base.String
                                    [LclId] =
                                        [ww2_s9y3D w_s9y3E] \u []
                                            let {
                                              sat_s9y3N [Occ=Once, Dmd=<L,1*U>] :: [GHC.Types.Char]
                                              [LclId] =
                                                  [ww2_s9y3D w_s9y3E] \s []
                                                      let {
                                                        sat_s9y3M [Occ=Once] :: [GHC.Types.Char]
                                                        [LclId] =
                                                            [ww2_s9y3D w_s9y3E] \u []
                                                                case ww2_s9y3D of {
                                                                  GHC.Int.I32# x#_s9y3H [Occ=Once] ->
                                                                      let {
                                                                        sat_s9y3I [Occ=Once]
                                                                          :: GHC.Base.String
                                                                        [LclId] =
                                                                            [w_s9y3E] \u []
                                                                                GHC.CString.unpackAppendCString#
                                                                                    GHC.Event.EPoll.$fShowEPollFd2
                                                                                    w_s9y3E;
                                                                      } in 
                                                                        case
                                                                            GHC.Show.$wshowSignedInt
                                                                                0#
                                                                                x#_s9y3H
                                                                                sat_s9y3I
                                                                        of
                                                                        { (#,#) ww5_s9y3K [Occ=Once]
                                                                                ww6_s9y3L [Occ=Once] ->
                                                                              : [ww5_s9y3K
                                                                                 ww6_s9y3L];
                                                                        };
                                                                };
                                                      } in 
                                                        GHC.CString.unpackAppendCString#
                                                            GHC.Event.EPoll.$fShowEvent2 sat_s9y3M;
                                            } in  GHC.Base.++ GHC.Show.showCommaSpace1 sat_s9y3N;
                                  } in  GHC.Event.EPoll.$w$cshowsPrec2 0# ww1_s9y3C sat_s9y3O;
                        } in 
                          GHC.CString.unpackAppendCString#
                              GHC.Event.EPoll.$fShowEvent5 sat_s9y3P;
              } in  GHC.Base.++ GHC.Event.EPoll.$fShowEvent6 sat_s9y3Q;
          1# ->
              let {
                sat_s9y43 [Occ=Once] :: [GHC.Types.Char]
                [LclId] =
                    [ww1_s9y3C ww2_s9y3D w_s9y3E] \u []
                        let {
                          sat_s9y42 [Occ=Once, Dmd=<L,1*U>] :: [GHC.Types.Char]
                          [LclId] =
                              [ww1_s9y3C ww2_s9y3D w_s9y3E] \s []
                                  let {
                                    sat_s9y41 [Occ=Once] :: [GHC.Types.Char]
                                    [LclId] =
                                        [ww1_s9y3C ww2_s9y3D w_s9y3E] \u []
                                            let {
                                              sat_s9y40 [Occ=Once] :: GHC.Base.String
                                              [LclId] =
                                                  [ww2_s9y3D w_s9y3E] \u []
                                                      let {
                                                        sat_s9y3Z [Occ=Once, Dmd=<L,1*U>]
                                                          :: [GHC.Types.Char]
                                                        [LclId] =
                                                            [ww2_s9y3D w_s9y3E] \s []
                                                                let {
                                                                  sat_s9y3Y [Occ=Once]
                                                                    :: [GHC.Types.Char]
                                                                  [LclId] =
                                                                      [ww2_s9y3D w_s9y3E] \u []
                                                                          case ww2_s9y3D of {
                                                                            GHC.Int.I32# x#_s9y3S [Occ=Once] ->
                                                                                let {
                                                                                  sat_s9y3U [Occ=Once]
                                                                                    :: GHC.Base.String
                                                                                  [LclId] =
                                                                                      [w_s9y3E] \u []
                                                                                          let {
                                                                                            sat_s9y3T [Occ=Once]
                                                                                              :: [GHC.Types.Char]
                                                                                            [LclId] =
                                                                                                CCCS :! [GHC.Show.$fShow(,)2
                                                                                                         w_s9y3E];
                                                                                          } in 
                                                                                            GHC.CString.unpackAppendCString#
                                                                                                GHC.Event.EPoll.$fShowEPollFd2
                                                                                                sat_s9y3T;
                                                                                } in 
                                                                                  case
                                                                                      GHC.Show.$wshowSignedInt
                                                                                          0#
                                                                                          x#_s9y3S
                                                                                          sat_s9y3U
                                                                                  of
                                                                                  { (#,#) ww5_s9y3W [Occ=Once]
                                                                                          ww6_s9y3X [Occ=Once] ->
                                                                                        : [ww5_s9y3W
                                                                                           ww6_s9y3X];
                                                                                  };
                                                                          };
                                                                } in 
                                                                  GHC.CString.unpackAppendCString#
                                                                      GHC.Event.EPoll.$fShowEvent2
                                                                      sat_s9y3Y;
                                                      } in 
                                                        GHC.Base.++
                                                            GHC.Show.showCommaSpace1 sat_s9y3Z;
                                            } in 
                                              GHC.Event.EPoll.$w$cshowsPrec2 0# ww1_s9y3C sat_s9y40;
                                  } in 
                                    GHC.CString.unpackAppendCString#
                                        GHC.Event.EPoll.$fShowEvent5 sat_s9y41;
                        } in  GHC.Base.++ GHC.Event.EPoll.$fShowEvent6 sat_s9y42;
              } in  : [GHC.Show.$fShow(,)4 sat_s9y43];
        };

GHC.Event.EPoll.$fShowEvent_$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Int -> GHC.Event.EPoll.Event -> GHC.Show.ShowS
[GblId,
 Arity=3,
 Str=<S(S),1*U(U)><S,1*U(1*U(U),1*U(U))><L,U>,
 Unf=OtherCon []] =
    [] \r [w_s9y44 w1_s9y45 w2_s9y46]
        case w_s9y44 of {
          GHC.Types.I# ww1_s9y48 [Occ=Once] ->
              case w1_s9y45 of {
                GHC.Event.EPoll.Event ww3_s9y4a [Occ=Once] ww4_s9y4b [Occ=Once] ->
                    GHC.Event.EPoll.$w$cshowsPrec1
                        ww1_s9y48 ww3_s9y4a ww4_s9y4b w2_s9y46;
              };
        };

GHC.Event.EPoll.$fShowEvent8 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [0#];

GHC.Event.EPoll.$fShowEvent_$cshow
  :: GHC.Event.EPoll.Event -> GHC.Base.String
[GblId, Arity=1, Str=<S,1*U(1*U(U),1*U(U))>, Unf=OtherCon []] =
    [] \r [x_s9y4c]
        case x_s9y4c of {
          GHC.Event.EPoll.Event ww1_s9y4e [Occ=Once] ww2_s9y4f [Occ=Once] ->
              GHC.Event.EPoll.$w$cshowsPrec1 0# ww1_s9y4e ww2_s9y4f GHC.Types.[];
        };

GHC.Event.EPoll.$fShowEvent1
  :: GHC.Event.EPoll.Event -> GHC.Show.ShowS
[GblId,
 Arity=2,
 Str=<S,1*U(1*U(U),1*U(U))><L,U>,
 Unf=OtherCon []] =
    [] \r [w_s9y4g w1_s9y4h]
        case w_s9y4g of {
          GHC.Event.EPoll.Event ww1_s9y4j [Occ=Once] ww2_s9y4k [Occ=Once] ->
              GHC.Event.EPoll.$w$cshowsPrec1 0# ww1_s9y4j ww2_s9y4k w1_s9y4h;
        };

GHC.Event.EPoll.$fShowEvent_$cshowList
  :: [GHC.Event.EPoll.Event] -> GHC.Show.ShowS
[GblId, Arity=2, Str=<S,1*U><L,U>, Unf=OtherCon []] =
    [] \r [ls_s9y4l s_s9y4m]
        GHC.Show.showList__ GHC.Event.EPoll.$fShowEvent1 ls_s9y4l s_s9y4m;

GHC.Event.EPoll.$fShowEvent [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show GHC.Event.EPoll.Event
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Event.EPoll.$fShowEvent_$cshowsPrec
                                    GHC.Event.EPoll.$fShowEvent_$cshow
                                    GHC.Event.EPoll.$fShowEvent_$cshowList];

GHC.Event.EPoll.$fFiniteBitsEventType [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits GHC.Event.EPoll.EventType
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [GHC.Event.EPoll.$fBitsEventType
                                           GHC.Word.$fBitsWord32_$cfiniteBitSize
                                           GHC.Word.$fFiniteBitsWord32_$ccountLeadingZeros
                                           GHC.Word.$fFiniteBitsWord32_$ccountTrailingZeros];

GHC.Event.EPoll.$fNumEventType [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num GHC.Event.EPoll.EventType
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Word.$fNumWord32_$c+
                                  GHC.Word.$fNumWord32_$c-
                                  GHC.Word.$fNumWord32_$c*
                                  GHC.Word.$fNumWord32_$cnegate
                                  GHC.Word.$fNumWord32_$cabs
                                  GHC.Word.$fNumWord32_$csignum
                                  GHC.Word.$fNumWord32_$cfromInteger];

GHC.Event.EPoll.$fEqEPollFd [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq GHC.Event.EPoll.EPollFd
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt32 GHC.Int.neInt32];

lvl_r9y01 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "epollControl"#;

lvl1_r9y02 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl_r9y01;

GHC.Event.EPoll.new6
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> GHC.Prim.Int#
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, Foreign.C.Types.CInt #)
[GblId, Arity=2, Str=<B,U><B,U>x, Unf=OtherCon []] =
    [] \r [void_0E ds3_s9y4o]
        case narrow32Int# [ds3_s9y4o] of sat_s9y4p {
          __DEFAULT ->
              Foreign.C.Error.$wlvl lvl1_r9y02 sat_s9y4p GHC.Prim.void#;
        };

lvl2_r9y03 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "epollWaitNonBlock"#;

lvl3_r9y04 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl2_r9y03;

lvl4_r9y05 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "epollWait"#;

lvl5_r9y06 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl4_r9y05;

GHC.Event.EPoll.new8 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "modifyFdOnce"#;

GHC.Event.EPoll.new7 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.Event.EPoll.new8;

lvl6_r9y07 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [3#];

lvl7_r9y08 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [1#];

lvl8_r9y09 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [2#];

GHC.Event.EPoll.new10
  :: GHC.Event.EPoll.EPoll
     -> GHC.Base.Maybe GHC.Event.Internal.Timeout
     -> (System.Posix.Types.Fd
         -> GHC.Event.Internal.Event -> GHC.Types.IO ())
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=4,
 Str=<S(SS),1*U(U,U)><S,1*U><L,C(C1(C1(U(U,A))))><S,U>,
 Unf=OtherCon []] =
    [] \r [ep_s9y4q mtimeout_s9y4r f_s9y4s void_0E]
        case ep_s9y4q of {
          GHC.Event.EPoll.EPoll dt_s9y4v [Occ=Once*] dt1_s9y4w ->
              case readMutVar# [dt1_s9y4w GHC.Prim.void#] of {
                Unit# ipv1_s9y4z [Occ=Once!] ->
                    case ipv1_s9y4z of {
                      GHC.Event.Array.AC es_s9y4B [Occ=Once!] _ [Occ=Dead] dt3_s9y4D ->
                          case es_s9y4B of wild2_s9y4E {
                            GHC.ForeignPtr.ForeignPtr ds2_s9y4F [Occ=Once*]
                                                      r_s9y4G [Occ=Once] ->
                                let-no-escape {
                                  $w$j1_s9y4H [InlPrag=NOUSERINLINE[0],
                                               Occ=Once*!T[2],
                                               Dmd=<L,1*C1(C1(U(U,U)))>]
                                    :: GHC.Prim.State# GHC.Prim.RealWorld
                                       -> GHC.Prim.Int#
                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
                                  [LclId[JoinId(2)], Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
                                      sat-only [f_s9y4s
                                                dt1_s9y4w
                                                dt3_s9y4D
                                                wild2_s9y4E
                                                r_s9y4G] \r [void_0E ww_s9y4J]
                                          case touch# [r_s9y4G GHC.Prim.void#] of s'_s9y4K {
                                            (##) ->
                                                let {
                                                  sat_s9y4L [Occ=Once]
                                                    :: GHC.Event.Array.AC GHC.Event.EPoll.Event
                                                  [LclId] =
                                                      CCCS GHC.Event.Array.AC! [wild2_s9y4E
                                                                                ww_s9y4J
                                                                                dt3_s9y4D];
                                                } in 
                                                  case
                                                      writeMutVar# [dt1_s9y4w
                                                                    sat_s9y4L
                                                                    GHC.Prim.void#]
                                                  of
                                                  s2#_s9y4M
                                                  { (##) ->
                                                        case ># [ww_s9y4J 0#] of {
                                                          __DEFAULT ->
                                                              let {
                                                                sat_s9y4O [Occ=Once]
                                                                  :: GHC.Types.Int
                                                                [LclId] =
                                                                    CCCS GHC.Types.I#! [ww_s9y4J];
                                                              } in  Unit# [sat_s9y4O];
                                                          1# ->
                                                              case
                                                                  readMutVar# [dt1_s9y4w
                                                                               GHC.Prim.void#]
                                                              of
                                                              { Unit# ipv3_s9y4R [Occ=Once!] ->
                                                                    case ipv3_s9y4R of {
                                                                      GHC.Event.Array.AC es1_s9y4T [Occ=Once!]
                                                                                         dt4_s9y4U [Occ=Once]
                                                                                         _ [Occ=Dead] ->
                                                                          case es1_s9y4T of {
                                                                            GHC.ForeignPtr.ForeignPtr fo_s9y4X [Occ=OnceL]
                                                                                                      ds5_s9y4Y [Occ=Once] ->
                                                                                case
                                                                                    *# [dt4_s9y4U
                                                                                        12#]
                                                                                of
                                                                                offset_s9y4Z [Dmd=<S,U>]
                                                                                { __DEFAULT ->
                                                                                      let-no-escape {
                                                                                        exit_s9y50 [Occ=OnceL!T[1],
                                                                                                    Dmd=<L,C(U(U,U))>]
                                                                                          :: GHC.Prim.State#
                                                                                               GHC.Prim.RealWorld
                                                                                             -> (# GHC.Prim.State#
                                                                                                     GHC.Prim.RealWorld,
                                                                                                   GHC.Types.Int #)
                                                                                        [LclId[JoinId(1)],
                                                                                         Arity=1,
                                                                                         Str=<S,U>,
                                                                                         Unf=OtherCon []] =
                                                                                            sat-only [dt1_s9y4w
                                                                                                      ww_s9y4J
                                                                                                      ds5_s9y4Y] \r [void_0E]
                                                                                                case
                                                                                                    touch# [ds5_s9y4Y
                                                                                                            GHC.Prim.void#]
                                                                                                of
                                                                                                s'1_s9y52
                                                                                                { (##) ->
                                                                                                      case
                                                                                                          readMutVar# [dt1_s9y4w
                                                                                                                       GHC.Prim.void#]
                                                                                                      of
                                                                                                      { Unit# ipv5_s9y55 [Occ=Once!] ->
                                                                                                            case
                                                                                                                ipv5_s9y55
                                                                                                            of
                                                                                                            { GHC.Event.Array.AC _ [Occ=Dead]
                                                                                                                                 _ [Occ=Dead]
                                                                                                                                 dt7_s9y59 ->
                                                                                                                  case
                                                                                                                      ==# [dt7_s9y59
                                                                                                                           ww_s9y4J]
                                                                                                                  of
                                                                                                                  { __DEFAULT ->
                                                                                                                        let {
                                                                                                                          sat_s9y5b [Occ=Once]
                                                                                                                            :: GHC.Types.Int
                                                                                                                          [LclId] =
                                                                                                                              CCCS GHC.Types.I#! [ww_s9y4J];
                                                                                                                        } in 
                                                                                                                          Unit# [sat_s9y5b];
                                                                                                                    1# ->
                                                                                                                        case
                                                                                                                            readMutVar# [dt1_s9y4w
                                                                                                                                         GHC.Prim.void#]
                                                                                                                        of
                                                                                                                        { Unit# ipv7_s9y5e [Occ=Once!] ->
                                                                                                                              case
                                                                                                                                  ipv7_s9y5e
                                                                                                                              of
                                                                                                                              { GHC.Event.Array.AC ds_s9y5g [Occ=Once!]
                                                                                                                                                   dt8_s9y5h [Occ=Once*]
                                                                                                                                                   dt9_s9y5i ->
                                                                                                                                    case
                                                                                                                                        ds_s9y5g
                                                                                                                                    of
                                                                                                                                    { GHC.ForeignPtr.ForeignPtr fo1_s9y5k
                                                                                                                                                                ds9_s9y5l [Occ=Once*] ->
                                                                                                                                          case
                                                                                                                                              *# [2#
                                                                                                                                                  dt7_s9y59]
                                                                                                                                          of
                                                                                                                                          ww1_s9y5m [Dmd=<S,U>]
                                                                                                                                          { __DEFAULT ->
                                                                                                                                                case
                                                                                                                                                    ># [ww1_s9y5m
                                                                                                                                                        dt9_s9y5i]
                                                                                                                                                of
                                                                                                                                                { __DEFAULT ->
                                                                                                                                                      let {
                                                                                                                                                        sat_s9y5o [Occ=Once]
                                                                                                                                                          :: GHC.Types.Int
                                                                                                                                                        [LclId] =
                                                                                                                                                            CCCS GHC.Types.I#! [ww_s9y4J];
                                                                                                                                                      } in 
                                                                                                                                                        Unit# [sat_s9y5o];
                                                                                                                                                  1# ->
                                                                                                                                                      case
                                                                                                                                                          -# [ww1_s9y5m
                                                                                                                                                              1#]
                                                                                                                                                      of
                                                                                                                                                      n1_s9y5p [Dmd=<S,U>]
                                                                                                                                                      { __DEFAULT ->
                                                                                                                                                            case
                                                                                                                                                                uncheckedIShiftRA# [n1_s9y5p
                                                                                                                                                                                    1#]
                                                                                                                                                            of
                                                                                                                                                            sat_s9y5r
                                                                                                                                                            { __DEFAULT ->
                                                                                                                                                                  case
                                                                                                                                                                      orI# [n1_s9y5p
                                                                                                                                                                            sat_s9y5r]
                                                                                                                                                                  of
                                                                                                                                                                  ipv8_s9y5q [Dmd=<S,U>]
                                                                                                                                                                  { __DEFAULT ->
                                                                                                                                                                        case
                                                                                                                                                                            uncheckedIShiftRA# [ipv8_s9y5q
                                                                                                                                                                                                2#]
                                                                                                                                                                        of
                                                                                                                                                                        sat_s9y5t
                                                                                                                                                                        { __DEFAULT ->
                                                                                                                                                                              case
                                                                                                                                                                                  orI# [ipv8_s9y5q
                                                                                                                                                                                        sat_s9y5t]
                                                                                                                                                                              of
                                                                                                                                                                              ipv9_s9y5s [Dmd=<S,U>]
                                                                                                                                                                              { __DEFAULT ->
                                                                                                                                                                                    case
                                                                                                                                                                                        uncheckedIShiftRA# [ipv9_s9y5s
                                                                                                                                                                                                            4#]
                                                                                                                                                                                    of
                                                                                                                                                                                    sat_s9y5v
                                                                                                                                                                                    { __DEFAULT ->
                                                                                                                                                                                          case
                                                                                                                                                                                              orI# [ipv9_s9y5s
                                                                                                                                                                                                    sat_s9y5v]
                                                                                                                                                                                          of
                                                                                                                                                                                          ipv10_s9y5u [Dmd=<S,U>]
                                                                                                                                                                                          { __DEFAULT ->
                                                                                                                                                                                                case
                                                                                                                                                                                                    uncheckedIShiftRA# [ipv10_s9y5u
                                                                                                                                                                                                                        8#]
                                                                                                                                                                                                of
                                                                                                                                                                                                sat_s9y5x
                                                                                                                                                                                                { __DEFAULT ->
                                                                                                                                                                                                      case
                                                                                                                                                                                                          orI# [ipv10_s9y5u
                                                                                                                                                                                                                sat_s9y5x]
                                                                                                                                                                                                      of
                                                                                                                                                                                                      ipv11_s9y5w [Dmd=<S,U>]
                                                                                                                                                                                                      { __DEFAULT ->
                                                                                                                                                                                                            case
                                                                                                                                                                                                                uncheckedIShiftRA# [ipv11_s9y5w
                                                                                                                                                                                                                                    16#]
                                                                                                                                                                                                            of
                                                                                                                                                                                                            sat_s9y5z
                                                                                                                                                                                                            { __DEFAULT ->
                                                                                                                                                                                                                  case
                                                                                                                                                                                                                      orI# [ipv11_s9y5w
                                                                                                                                                                                                                            sat_s9y5z]
                                                                                                                                                                                                                  of
                                                                                                                                                                                                                  ipv12_s9y5y [Dmd=<S,U>]
                                                                                                                                                                                                                  { __DEFAULT ->
                                                                                                                                                                                                                        case
                                                                                                                                                                                                                            uncheckedIShiftRA# [ipv12_s9y5y
                                                                                                                                                                                                                                                32#]
                                                                                                                                                                                                                        of
                                                                                                                                                                                                                        sat_s9y5B
                                                                                                                                                                                                                        { __DEFAULT ->
                                                                                                                                                                                                                              case
                                                                                                                                                                                                                                  orI# [ipv12_s9y5y
                                                                                                                                                                                                                                        sat_s9y5B]
                                                                                                                                                                                                                              of
                                                                                                                                                                                                                              sat_s9y5C
                                                                                                                                                                                                                              { __DEFAULT ->
                                                                                                                                                                                                                                    case
                                                                                                                                                                                                                                        +# [sat_s9y5C
                                                                                                                                                                                                                                            1#]
                                                                                                                                                                                                                                    of
                                                                                                                                                                                                                                    x_s9y5A [Dmd=<S,U>]
                                                                                                                                                                                                                                    { __DEFAULT ->
                                                                                                                                                                                                                                          case
                                                                                                                                                                                                                                              *# [x_s9y5A
                                                                                                                                                                                                                                                  12#]
                                                                                                                                                                                                                                          of
                                                                                                                                                                                                                                          x1_s9y5D [Dmd=<S,U>]
                                                                                                                                                                                                                                          { __DEFAULT ->
                                                                                                                                                                                                                                                case
                                                                                                                                                                                                                                                    <# [x1_s9y5D
                                                                                                                                                                                                                                                        0#]
                                                                                                                                                                                                                                                of
                                                                                                                                                                                                                                                { __DEFAULT ->
                                                                                                                                                                                                                                                      case
                                                                                                                                                                                                                                                          newPinnedByteArray# [x1_s9y5D
                                                                                                                                                                                                                                                                               GHC.Prim.void#]
                                                                                                                                                                                                                                                      of
                                                                                                                                                                                                                                                      { Unit# ipv14_s9y5H ->
                                                                                                                                                                                                                                                            case
                                                                                                                                                                                                                                                                byteArrayContents# [ipv14_s9y5H]
                                                                                                                                                                                                                                                            of
                                                                                                                                                                                                                                                            ipv15_s9y5I
                                                                                                                                                                                                                                                            { __DEFAULT ->
                                                                                                                                                                                                                                                                  let {
                                                                                                                                                                                                                                                                    ipv16_s9y5J
                                                                                                                                                                                                                                                                      :: GHC.ForeignPtr.ForeignPtrContents
                                                                                                                                                                                                                                                                    [LclId,
                                                                                                                                                                                                                                                                     Unf=OtherCon []] =
                                                                                                                                                                                                                                                                        CCCS GHC.ForeignPtr.PlainPtr! [ipv14_s9y5H];
                                                                                                                                                                                                                                                                  } in 
                                                                                                                                                                                                                                                                    case
                                                                                                                                                                                                                                                                        eqAddr# [fo1_s9y5k
                                                                                                                                                                                                                                                                                 __NULL]
                                                                                                                                                                                                                                                                    of
                                                                                                                                                                                                                                                                    { __DEFAULT ->
                                                                                                                                                                                                                                                                          case
                                                                                                                                                                                                                                                                              ># [dt9_s9y5i
                                                                                                                                                                                                                                                                                  0#]
                                                                                                                                                                                                                                                                          of
                                                                                                                                                                                                                                                                          { __DEFAULT ->
                                                                                                                                                                                                                                                                                case
                                                                                                                                                                                                                                                                                    touch# [ds9_s9y5l
                                                                                                                                                                                                                                                                                            GHC.Prim.void#]
                                                                                                                                                                                                                                                                                of
                                                                                                                                                                                                                                                                                s'2_s9y5M
                                                                                                                                                                                                                                                                                { (##) ->
                                                                                                                                                                                                                                                                                      case
                                                                                                                                                                                                                                                                                          /=# [x_s9y5A
                                                                                                                                                                                                                                                                                               dt9_s9y5i]
                                                                                                                                                                                                                                                                                      of
                                                                                                                                                                                                                                                                                      { __DEFAULT ->
                                                                                                                                                                                                                                                                                            let {
                                                                                                                                                                                                                                                                                              sat_s9y5O [Occ=Once]
                                                                                                                                                                                                                                                                                                :: GHC.Types.Int
                                                                                                                                                                                                                                                                                              [LclId] =
                                                                                                                                                                                                                                                                                                  CCCS GHC.Types.I#! [ww_s9y4J];
                                                                                                                                                                                                                                                                                            } in 
                                                                                                                                                                                                                                                                                              Unit# [sat_s9y5O];
                                                                                                                                                                                                                                                                                        1# ->
                                                                                                                                                                                                                                                                                            let {
                                                                                                                                                                                                                                                                                              sat_s9y5P [Occ=Once]
                                                                                                                                                                                                                                                                                                :: GHC.ForeignPtr.ForeignPtr
                                                                                                                                                                                                                                                                                                     GHC.Event.EPoll.Event
                                                                                                                                                                                                                                                                                              [LclId] =
                                                                                                                                                                                                                                                                                                  CCCS GHC.ForeignPtr.ForeignPtr! [ipv15_s9y5I
                                                                                                                                                                                                                                                                                                                                   ipv16_s9y5J]; } in
                                                                                                                                                                                                                                                                                            let {
                                                                                                                                                                                                                                                                                              sat_s9y5Q [Occ=Once]
                                                                                                                                                                                                                                                                                                :: GHC.Event.Array.AC
                                                                                                                                                                                                                                                                                                     GHC.Event.EPoll.Event
                                                                                                                                                                                                                                                                                              [LclId] =
                                                                                                                                                                                                                                                                                                  CCCS GHC.Event.Array.AC! [sat_s9y5P
                                                                                                                                                                                                                                                                                                                            dt8_s9y5h
                                                                                                                                                                                                                                                                                                                            x_s9y5A];
                                                                                                                                                                                                                                                                                            } in 
                                                                                                                                                                                                                                                                                              case
                                                                                                                                                                                                                                                                                                  writeMutVar# [dt1_s9y4w
                                                                                                                                                                                                                                                                                                                sat_s9y5Q
                                                                                                                                                                                                                                                                                                                GHC.Prim.void#]
                                                                                                                                                                                                                                                                                              of
                                                                                                                                                                                                                                                                                              s2#1_s9y5R
                                                                                                                                                                                                                                                                                              { (##) ->
                                                                                                                                                                                                                                                                                                    let {
                                                                                                                                                                                                                                                                                                      sat_s9y5S [Occ=Once]
                                                                                                                                                                                                                                                                                                        :: GHC.Types.Int
                                                                                                                                                                                                                                                                                                      [LclId] =
                                                                                                                                                                                                                                                                                                          CCCS GHC.Types.I#! [ww_s9y4J];
                                                                                                                                                                                                                                                                                                    } in 
                                                                                                                                                                                                                                                                                                      Unit# [sat_s9y5S];
                                                                                                                                                                                                                                                                                              };
                                                                                                                                                                                                                                                                                      };
                                                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                                            1# ->
                                                                                                                                                                                                                                                                                case
                                                                                                                                                                                                                                                                                    *# [dt9_s9y5i
                                                                                                                                                                                                                                                                                        12#]
                                                                                                                                                                                                                                                                                of
                                                                                                                                                                                                                                                                                sat_s9y5U
                                                                                                                                                                                                                                                                                { __DEFAULT ->
                                                                                                                                                                                                                                                                                      case
                                                                                                                                                                                                                                                                                          int2Word# [sat_s9y5U]
                                                                                                                                                                                                                                                                                      of
                                                                                                                                                                                                                                                                                      sat_s9y5V
                                                                                                                                                                                                                                                                                      { __DEFAULT ->
                                                                                                                                                                                                                                                                                            case
                                                                                                                                                                                                                                                                                                __pkg_ccall base-4.11.0.0 [ipv15_s9y5I
                                                                                                                                                                                                                                                                                                                           fo1_s9y5k
                                                                                                                                                                                                                                                                                                                           sat_s9y5V
                                                                                                                                                                                                                                                                                                                           GHC.Prim.void#]
                                                                                                                                                                                                                                                                                            of
                                                                                                                                                                                                                                                                                            { Unit# _ [Occ=Dead] ->
                                                                                                                                                                                                                                                                                                  case
                                                                                                                                                                                                                                                                                                      touch# [ipv16_s9y5J
                                                                                                                                                                                                                                                                                                              GHC.Prim.void#]
                                                                                                                                                                                                                                                                                                  of
                                                                                                                                                                                                                                                                                                  s'2_s9y5Z
                                                                                                                                                                                                                                                                                                  { (##) ->
                                                                                                                                                                                                                                                                                                        case
                                                                                                                                                                                                                                                                                                            touch# [ds9_s9y5l
                                                                                                                                                                                                                                                                                                                    GHC.Prim.void#]
                                                                                                                                                                                                                                                                                                        of
                                                                                                                                                                                                                                                                                                        s'3_s9y60
                                                                                                                                                                                                                                                                                                        { (##) ->
                                                                                                                                                                                                                                                                                                              case
                                                                                                                                                                                                                                                                                                                  /=# [x_s9y5A
                                                                                                                                                                                                                                                                                                                       dt9_s9y5i]
                                                                                                                                                                                                                                                                                                              of
                                                                                                                                                                                                                                                                                                              { __DEFAULT ->
                                                                                                                                                                                                                                                                                                                    let {
                                                                                                                                                                                                                                                                                                                      sat_s9y62 [Occ=Once]
                                                                                                                                                                                                                                                                                                                        :: GHC.Types.Int
                                                                                                                                                                                                                                                                                                                      [LclId] =
                                                                                                                                                                                                                                                                                                                          CCCS GHC.Types.I#! [ww_s9y4J];
                                                                                                                                                                                                                                                                                                                    } in 
                                                                                                                                                                                                                                                                                                                      Unit# [sat_s9y62];
                                                                                                                                                                                                                                                                                                                1# ->
                                                                                                                                                                                                                                                                                                                    let {
                                                                                                                                                                                                                                                                                                                      sat_s9y63 [Occ=Once]
                                                                                                                                                                                                                                                                                                                        :: GHC.ForeignPtr.ForeignPtr
                                                                                                                                                                                                                                                                                                                             GHC.Event.EPoll.Event
                                                                                                                                                                                                                                                                                                                      [LclId] =
                                                                                                                                                                                                                                                                                                                          CCCS GHC.ForeignPtr.ForeignPtr! [ipv15_s9y5I
                                                                                                                                                                                                                                                                                                                                                           ipv16_s9y5J]; } in
                                                                                                                                                                                                                                                                                                                    let {
                                                                                                                                                                                                                                                                                                                      sat_s9y64 [Occ=Once]
                                                                                                                                                                                                                                                                                                                        :: GHC.Event.Array.AC
                                                                                                                                                                                                                                                                                                                             GHC.Event.EPoll.Event
                                                                                                                                                                                                                                                                                                                      [LclId] =
                                                                                                                                                                                                                                                                                                                          CCCS GHC.Event.Array.AC! [sat_s9y63
                                                                                                                                                                                                                                                                                                                                                    dt8_s9y5h
                                                                                                                                                                                                                                                                                                                                                    x_s9y5A];
                                                                                                                                                                                                                                                                                                                    } in 
                                                                                                                                                                                                                                                                                                                      case
                                                                                                                                                                                                                                                                                                                          writeMutVar# [dt1_s9y4w
                                                                                                                                                                                                                                                                                                                                        sat_s9y64
                                                                                                                                                                                                                                                                                                                                        GHC.Prim.void#]
                                                                                                                                                                                                                                                                                                                      of
                                                                                                                                                                                                                                                                                                                      s2#1_s9y65
                                                                                                                                                                                                                                                                                                                      { (##) ->
                                                                                                                                                                                                                                                                                                                            let {
                                                                                                                                                                                                                                                                                                                              sat_s9y66 [Occ=Once]
                                                                                                                                                                                                                                                                                                                                :: GHC.Types.Int
                                                                                                                                                                                                                                                                                                                              [LclId] =
                                                                                                                                                                                                                                                                                                                                  CCCS GHC.Types.I#! [ww_s9y4J];
                                                                                                                                                                                                                                                                                                                            } in 
                                                                                                                                                                                                                                                                                                                              Unit# [sat_s9y66];
                                                                                                                                                                                                                                                                                                                      };
                                                                                                                                                                                                                                                                                                              };
                                                                                                                                                                                                                                                                                                        };
                                                                                                                                                                                                                                                                                                  };
                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                      };
                                                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                                          };
                                                                                                                                                                                                                                                                      1# ->
                                                                                                                                                                                                                                                                          case
                                                                                                                                                                                                                                                                              touch# [ds9_s9y5l
                                                                                                                                                                                                                                                                                      GHC.Prim.void#]
                                                                                                                                                                                                                                                                          of
                                                                                                                                                                                                                                                                          s'2_s9y67
                                                                                                                                                                                                                                                                          { (##) ->
                                                                                                                                                                                                                                                                                case
                                                                                                                                                                                                                                                                                    /=# [x_s9y5A
                                                                                                                                                                                                                                                                                         dt9_s9y5i]
                                                                                                                                                                                                                                                                                of
                                                                                                                                                                                                                                                                                { __DEFAULT ->
                                                                                                                                                                                                                                                                                      let {
                                                                                                                                                                                                                                                                                        sat_s9y69 [Occ=Once]
                                                                                                                                                                                                                                                                                          :: GHC.Types.Int
                                                                                                                                                                                                                                                                                        [LclId] =
                                                                                                                                                                                                                                                                                            CCCS GHC.Types.I#! [ww_s9y4J];
                                                                                                                                                                                                                                                                                      } in 
                                                                                                                                                                                                                                                                                        Unit# [sat_s9y69];
                                                                                                                                                                                                                                                                                  1# ->
                                                                                                                                                                                                                                                                                      let {
                                                                                                                                                                                                                                                                                        sat_s9y6a [Occ=Once]
                                                                                                                                                                                                                                                                                          :: GHC.ForeignPtr.ForeignPtr
                                                                                                                                                                                                                                                                                               GHC.Event.EPoll.Event
                                                                                                                                                                                                                                                                                        [LclId] =
                                                                                                                                                                                                                                                                                            CCCS GHC.ForeignPtr.ForeignPtr! [ipv15_s9y5I
                                                                                                                                                                                                                                                                                                                             ipv16_s9y5J]; } in
                                                                                                                                                                                                                                                                                      let {
                                                                                                                                                                                                                                                                                        sat_s9y6b [Occ=Once]
                                                                                                                                                                                                                                                                                          :: GHC.Event.Array.AC
                                                                                                                                                                                                                                                                                               GHC.Event.EPoll.Event
                                                                                                                                                                                                                                                                                        [LclId] =
                                                                                                                                                                                                                                                                                            CCCS GHC.Event.Array.AC! [sat_s9y6a
                                                                                                                                                                                                                                                                                                                      dt8_s9y5h
                                                                                                                                                                                                                                                                                                                      x_s9y5A];
                                                                                                                                                                                                                                                                                      } in 
                                                                                                                                                                                                                                                                                        case
                                                                                                                                                                                                                                                                                            writeMutVar# [dt1_s9y4w
                                                                                                                                                                                                                                                                                                          sat_s9y6b
                                                                                                                                                                                                                                                                                                          GHC.Prim.void#]
                                                                                                                                                                                                                                                                                        of
                                                                                                                                                                                                                                                                                        s2#1_s9y6c
                                                                                                                                                                                                                                                                                        { (##) ->
                                                                                                                                                                                                                                                                                              let {
                                                                                                                                                                                                                                                                                                sat_s9y6d [Occ=Once]
                                                                                                                                                                                                                                                                                                  :: GHC.Types.Int
                                                                                                                                                                                                                                                                                                [LclId] =
                                                                                                                                                                                                                                                                                                    CCCS GHC.Types.I#! [ww_s9y4J];
                                                                                                                                                                                                                                                                                              } in 
                                                                                                                                                                                                                                                                                                Unit# [sat_s9y6d];
                                                                                                                                                                                                                                                                                        };
                                                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                                          };
                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                      };
                                                                                                                                                                                                                                                  1# ->
                                                                                                                                                                                                                                                      GHC.ForeignPtr.mallocPlainForeignPtrBytes2;
                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                          };
                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                              };
                                                                                                                                                                                                                        };
                                                                                                                                                                                                                  };
                                                                                                                                                                                                            };
                                                                                                                                                                                                      };
                                                                                                                                                                                                };
                                                                                                                                                                                          };
                                                                                                                                                                                    };
                                                                                                                                                                              };
                                                                                                                                                                        };
                                                                                                                                                                  };
                                                                                                                                                            };
                                                                                                                                                      };
                                                                                                                                                };
                                                                                                                                          };
                                                                                                                                    };
                                                                                                                              };
                                                                                                                        };
                                                                                                                  };
                                                                                                            };
                                                                                                      };
                                                                                                };
                                                                                      } in 
                                                                                        let-no-escape {
                                                                                          $wgo_s9y6f [InlPrag=NOUSERINLINE[0],
                                                                                                      Occ=LoopBreakerT[2]]
                                                                                            :: GHC.Prim.Int#
                                                                                               -> GHC.Prim.State#
                                                                                                    GHC.Prim.RealWorld
                                                                                               -> (# GHC.Prim.State#
                                                                                                       GHC.Prim.RealWorld,
                                                                                                     GHC.Types.Int #)
                                                                                          [LclId[JoinId(2)],
                                                                                           Arity=2,
                                                                                           Str=<S,U><S,U>,
                                                                                           Unf=OtherCon []] =
                                                                                              sat-only [f_s9y4s
                                                                                                        fo_s9y4X
                                                                                                        offset_s9y4Z
                                                                                                        exit_s9y50
                                                                                                        $wgo_s9y6f] \r [ww1_s9y6g
                                                                                                                        void_0E]
                                                                                                  case
                                                                                                      >=# [ww1_s9y6g
                                                                                                           offset_s9y4Z]
                                                                                                  of
                                                                                                  { __DEFAULT ->
                                                                                                        case
                                                                                                            plusAddr# [fo_s9y4X
                                                                                                                       ww1_s9y6g]
                                                                                                        of
                                                                                                        ptr_s9y6j [Dmd=<S,U>]
                                                                                                        { __DEFAULT ->
                                                                                                              case
                                                                                                                  readWord32OffAddr# [ptr_s9y6j
                                                                                                                                      0#
                                                                                                                                      GHC.Prim.void#]
                                                                                                              of
                                                                                                              { Unit# ipv5_s9y6m ->
                                                                                                                    case
                                                                                                                        plusAddr# [ptr_s9y6j
                                                                                                                                   4#]
                                                                                                                    of
                                                                                                                    sat_s9y6n
                                                                                                                    { __DEFAULT ->
                                                                                                                          case
                                                                                                                              readInt32OffAddr# [sat_s9y6n
                                                                                                                                                 0#
                                                                                                                                                 GHC.Prim.void#]
                                                                                                                          of
                                                                                                                          { Unit# ipv7_s9y6q [Occ=Once] ->
                                                                                                                                let {
                                                                                                                                  sat_s9y6v [Occ=Once]
                                                                                                                                    :: GHC.Event.Internal.Event
                                                                                                                                  [LclId] =
                                                                                                                                      [ipv5_s9y6m] \u []
                                                                                                                                          case
                                                                                                                                              and# [ipv5_s9y6m
                                                                                                                                                    25##]
                                                                                                                                          of
                                                                                                                                          { __DEFAULT ->
                                                                                                                                                case
                                                                                                                                                    and# [ipv5_s9y6m
                                                                                                                                                          28##]
                                                                                                                                                of
                                                                                                                                                { __DEFAULT ->
                                                                                                                                                      lvl6_r9y07;
                                                                                                                                                  0## ->
                                                                                                                                                      lvl7_r9y08;
                                                                                                                                                };
                                                                                                                                            0## ->
                                                                                                                                                case
                                                                                                                                                    and# [ipv5_s9y6m
                                                                                                                                                          28##]
                                                                                                                                                of
                                                                                                                                                { __DEFAULT ->
                                                                                                                                                      lvl8_r9y09;
                                                                                                                                                  0## ->
                                                                                                                                                      GHC.Event.EPoll.$fShowEvent8;
                                                                                                                                                };
                                                                                                                                          }; } in
                                                                                                                                let {
                                                                                                                                  sat_s9y6r [Occ=Once]
                                                                                                                                    :: System.Posix.Types.Fd
                                                                                                                                  [LclId] =
                                                                                                                                      CCCS GHC.Int.I32#! [ipv7_s9y6q];
                                                                                                                                } in 
                                                                                                                                  case
                                                                                                                                      f_s9y4s
                                                                                                                                          sat_s9y6r
                                                                                                                                          sat_s9y6v
                                                                                                                                          GHC.Prim.void#
                                                                                                                                  of
                                                                                                                                  { Unit# _ [Occ=Dead] ->
                                                                                                                                        case
                                                                                                                                            +# [ww1_s9y6g
                                                                                                                                                12#]
                                                                                                                                        of
                                                                                                                                        sat_s9y6z
                                                                                                                                        { __DEFAULT ->
                                                                                                                                              $wgo_s9y6f
                                                                                                                                                  sat_s9y6z
                                                                                                                                                  GHC.Prim.void#;
                                                                                                                                        };
                                                                                                                                  };
                                                                                                                          };
                                                                                                                    };
                                                                                                              };
                                                                                                        };
                                                                                                    1# ->
                                                                                                        exit_s9y50
                                                                                                            GHC.Prim.void#;
                                                                                                  };
                                                                                        } in 
                                                                                          $wgo_s9y6f
                                                                                              0#
                                                                                              GHC.Prim.void#;
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                          };
                                } in 
                                  case mtimeout_s9y4r of {
                                    GHC.Base.Nothing ->
                                        case narrow32Int# [dt3_s9y4D] of sat_s9y6C {
                                          __DEFAULT ->
                                              case
                                                  __pkg_ccall base-4.11.0.0 [dt_s9y4v
                                                                             ds2_s9y4F
                                                                             sat_s9y6C
                                                                             0#
                                                                             GHC.Prim.void#]
                                              of
                                              { Unit# ds4_s9y6F [Occ=Once] ->
                                                    case narrow32Int# [ds4_s9y6F] of wild5_s9y6G {
                                                      __DEFAULT ->
                                                          $w$j1_s9y4H GHC.Prim.void# wild5_s9y6G;
                                                      -1# ->
                                                          case
                                                              __pkg_ccall base-4.11.0.0 [GHC.Prim.void#]
                                                          of
                                                          { Unit# ds6_s9y6K [Occ=Once] ->
                                                                case narrow32Int# [ds6_s9y6K] of {
                                                                  __DEFAULT ->
                                                                      case
                                                                          Foreign.C.Error.throwErrno1
                                                                              lvl3_r9y04
                                                                              GHC.Prim.void#
                                                                      of
                                                                      { Unit# ipv3_s9y6O [Occ=Once] ->
                                                                            case ipv3_s9y6O of {
                                                                              GHC.Int.I32# x#_s9y6Q [Occ=Once] ->
                                                                                  $w$j1_s9y4H
                                                                                      GHC.Prim.void#
                                                                                      x#_s9y6Q;
                                                                            };
                                                                      };
                                                                  4# ->
                                                                      $w$j1_s9y4H GHC.Prim.void# 0#;
                                                                };
                                                          };
                                                    };
                                              };
                                        };
                                    GHC.Base.Just timeout_s9y6R [Occ=Once!] ->
                                        let-no-escape {
                                          $j_s9y6S [Occ=Once*!T[1], Dmd=<C(S),1*C1(U(U,U))>]
                                            :: GHC.Prim.Int#
                                               -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                     GHC.Types.Int #)
                                          [LclId[JoinId(1)], Arity=1, Str=<S,U>, Unf=OtherCon []] =
                                              sat-only [dt_s9y4v
                                                        dt3_s9y4D
                                                        ds2_s9y4F
                                                        $w$j1_s9y4H] \r [x#_s9y6T]
                                                  case narrow32Int# [x#_s9y6T] of sat_s9y6W {
                                                    __DEFAULT ->
                                                        case narrow32Int# [dt3_s9y4D] of sat_s9y6V {
                                                          __DEFAULT ->
                                                              case
                                                                  __pkg_ccall_GC base-4.11.0.0 [dt_s9y4v
                                                                                                ds2_s9y4F
                                                                                                sat_s9y6V
                                                                                                sat_s9y6W
                                                                                                GHC.Prim.void#]
                                                              of
                                                              { Unit# ds4_s9y6Z [Occ=Once] ->
                                                                    case
                                                                        narrow32Int# [ds4_s9y6Z]
                                                                    of
                                                                    wild5_s9y70
                                                                    { __DEFAULT ->
                                                                          $w$j1_s9y4H
                                                                              GHC.Prim.void#
                                                                              wild5_s9y70;
                                                                      -1# ->
                                                                          case
                                                                              __pkg_ccall base-4.11.0.0 [GHC.Prim.void#]
                                                                          of
                                                                          { Unit# ds6_s9y74 [Occ=Once] ->
                                                                                case
                                                                                    narrow32Int# [ds6_s9y74]
                                                                                of
                                                                                { __DEFAULT ->
                                                                                      case
                                                                                          Foreign.C.Error.throwErrno1
                                                                                              lvl5_r9y06
                                                                                              GHC.Prim.void#
                                                                                      of
                                                                                      { Unit# ipv3_s9y78 [Occ=Once] ->
                                                                                            case
                                                                                                ipv3_s9y78
                                                                                            of
                                                                                            { GHC.Int.I32# x#1_s9y7a [Occ=Once] ->
                                                                                                  $w$j1_s9y4H
                                                                                                      GHC.Prim.void#
                                                                                                      x#1_s9y7a;
                                                                                            };
                                                                                      };
                                                                                  4# ->
                                                                                      $w$j1_s9y4H
                                                                                          GHC.Prim.void#
                                                                                          0#;
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                        } in 
                                          case timeout_s9y6R of {
                                            GHC.Event.Internal.Timeout dt4_s9y7c [Occ=Once] ->
                                                case plusWord# [dt4_s9y7c 1000000##] of sat_s9y7d {
                                                  __DEFAULT ->
                                                      case minusWord# [sat_s9y7d 1##] of sat_s9y7e {
                                                        __DEFAULT ->
                                                            case
                                                                quotWord# [sat_s9y7e 1000000##]
                                                            of
                                                            sat_s9y7f
                                                            { __DEFAULT ->
                                                                  case
                                                                      word2Int# [sat_s9y7f]
                                                                  of
                                                                  sat_s9y7g
                                                                  { __DEFAULT -> $j_s9y6S sat_s9y7g;
                                                                  };
                                                            };
                                                      };
                                                };
                                            GHC.Event.Internal.Forever -> $j_s9y6S -1#;
                                          };
                                  };
                          };
                    };
              };
        };

GHC.Event.EPoll.new9
  :: GHC.Event.EPoll.EPoll
     -> System.Posix.Types.Fd
     -> GHC.Event.Internal.Event
     -> GHC.Event.Internal.Event
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
[GblId,
 Arity=5,
 Str=<S(SL),1*U(U,A)><S(S),1*U(U)><S(S),1*U(1*U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ep_s9y7h fd_s9y7i oevt_s9y7j nevt_s9y7k void_0E]
        case newAlignedPinnedByteArray# [12# 4# GHC.Prim.void#] of {
          Unit# ipv1_s9y7o [Occ=Once] ->
              case unsafeFreezeByteArray# [ipv1_s9y7o GHC.Prim.void#] of {
                Unit# ipv3_s9y7r ->
                    case nevt_s9y7k of {
                      GHC.Types.I# x#_s9y7t ->
                          let-no-escape {
                            $j_s9y7u [Occ=Once*!T[1], Dmd=<C(S),1*C1(U(U,U))>]
                              :: GHC.Prim.Word#
                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
                            [LclId[JoinId(1)], Arity=1, Str=<S,U>, Unf=OtherCon []] =
                                sat-only [ep_s9y7h
                                          fd_s9y7i
                                          oevt_s9y7j
                                          ipv3_s9y7r
                                          x#_s9y7t] \r [x_s9y7v]
                                    case byteArrayContents# [ipv3_s9y7r] of ptr_s9y7w [Dmd=<S,U>] {
                                      __DEFAULT ->
                                          case
                                              writeWord32OffAddr# [ptr_s9y7w
                                                                   0#
                                                                   x_s9y7v
                                                                   GHC.Prim.void#]
                                          of
                                          s2_s9y7x
                                          { (##) ->
                                                case fd_s9y7i of {
                                                  GHC.Int.I32# x1_s9y7z ->
                                                      case plusAddr# [ptr_s9y7w 4#] of sat_s9y7A {
                                                        __DEFAULT ->
                                                            case
                                                                writeInt32OffAddr# [sat_s9y7A
                                                                                    0#
                                                                                    x1_s9y7z
                                                                                    GHC.Prim.void#]
                                                            of
                                                            s1_s9y7B
                                                            { (##) ->
                                                                  case ep_s9y7h of {
                                                                    GHC.Event.EPoll.EPoll dt_s9y7D [Occ=Once]
                                                                                          _ [Occ=Dead] ->
                                                                        case oevt_s9y7j of {
                                                                          GHC.Types.I# x2_s9y7G [Occ=Once!] ->
                                                                              let-no-escape {
                                                                                $j1_s9y7H [Occ=Once*!T[1],
                                                                                           Dmd=<C(S),1*C1(U(U,U))>]
                                                                                  :: GHC.Prim.Int#
                                                                                     -> (# GHC.Prim.State#
                                                                                             GHC.Prim.RealWorld,
                                                                                           GHC.Types.Bool #)
                                                                                [LclId[JoinId(1)],
                                                                                 Arity=1,
                                                                                 Str=<S,U>,
                                                                                 Unf=OtherCon []] =
                                                                                    sat-only [ipv3_s9y7r
                                                                                              ptr_s9y7w
                                                                                              x1_s9y7z
                                                                                              dt_s9y7D] \r [ds_s9y7I]
                                                                                        case
                                                                                            __pkg_ccall base-4.11.0.0 [dt_s9y7D
                                                                                                                       ds_s9y7I
                                                                                                                       x1_s9y7z
                                                                                                                       ptr_s9y7w
                                                                                                                       GHC.Prim.void#]
                                                                                        of
                                                                                        { Unit# ds5_s9y7M [Occ=Once] ->
                                                                                              case
                                                                                                  narrow32Int# [ds5_s9y7M]
                                                                                              of
                                                                                              { __DEFAULT ->
                                                                                                    case
                                                                                                        touch# [ipv3_s9y7r
                                                                                                                GHC.Prim.void#]
                                                                                                    of
                                                                                                    s4_s9y7O
                                                                                                    { (##) ->
                                                                                                          Unit# [GHC.Types.True];
                                                                                                    };
                                                                                                -1# ->
                                                                                                    case
                                                                                                        __pkg_ccall base-4.11.0.0 [GHC.Prim.void#]
                                                                                                    of
                                                                                                    { Unit# ds7_s9y7S [Occ=Once] ->
                                                                                                          GHC.Event.EPoll.new6
                                                                                                              GHC.Prim.void#
                                                                                                              ds7_s9y7S;
                                                                                                    };
                                                                                              };
                                                                                        };
                                                                              } in 
                                                                                case x2_s9y7G of {
                                                                                  __DEFAULT ->
                                                                                      case
                                                                                          x#_s9y7t
                                                                                      of
                                                                                      { __DEFAULT ->
                                                                                            $j1_s9y7H
                                                                                                3#;
                                                                                        0# ->
                                                                                            $j1_s9y7H
                                                                                                2#;
                                                                                      };
                                                                                  0# ->
                                                                                      $j1_s9y7H 1#;
                                                                                };
                                                                        };
                                                                  };
                                                            };
                                                      };
                                                };
                                          };
                                    };
                          } in 
                            case andI# [x#_s9y7t 1#] of {
                              __DEFAULT ->
                                  case andI# [x#_s9y7t 2#] of {
                                    __DEFAULT -> $j_s9y7u 5##;
                                    0# -> $j_s9y7u 1##;
                                  };
                              0# ->
                                  case andI# [x#_s9y7t 2#] of {
                                    __DEFAULT -> $j_s9y7u 4##;
                                    0# -> $j_s9y7u 0##;
                                  };
                            };
                    };
              };
        };

GHC.Event.EPoll.new5
  :: GHC.Event.EPoll.EPoll
     -> System.Posix.Types.Fd
     -> GHC.Event.Internal.Event
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
[GblId,
 Arity=4,
 Str=<S(SL),1*U(U,A)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ep_s9y7Z fd_s9y80 evt_s9y81 void_0E]
        case evt_s9y81 of {
          GHC.Types.I# x#_s9y84 ->
              let-no-escape {
                $j_s9y85 [Occ=Once*!T[1], Dmd=<C(S),1*C1(U(U,U))>]
                  :: GHC.Prim.Word#
                     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
                [LclId[JoinId(1)], Arity=1, Str=<S,U>, Unf=OtherCon []] =
                    sat-only [ep_s9y7Z fd_s9y80] \r [x#1_s9y86]
                        case newAlignedPinnedByteArray# [12# 4# GHC.Prim.void#] of {
                          Unit# ipv1_s9y89 [Occ=Once] ->
                              case unsafeFreezeByteArray# [ipv1_s9y89 GHC.Prim.void#] of {
                                Unit# ipv3_s9y8c ->
                                    case or# [x#1_s9y86 1073741824##] of ipv4_s9y8d [Dmd=<S,U>] {
                                      __DEFAULT ->
                                          case
                                              byteArrayContents# [ipv3_s9y8c]
                                          of
                                          ptr_s9y8e [Dmd=<S,U>]
                                          { __DEFAULT ->
                                                case
                                                    writeWord32OffAddr# [ptr_s9y8e
                                                                         0#
                                                                         ipv4_s9y8d
                                                                         GHC.Prim.void#]
                                                of
                                                s2_s9y8f
                                                { (##) ->
                                                      case fd_s9y80 of {
                                                        GHC.Int.I32# x_s9y8h ->
                                                            case
                                                                plusAddr# [ptr_s9y8e 4#]
                                                            of
                                                            sat_s9y8i
                                                            { __DEFAULT ->
                                                                  case
                                                                      writeInt32OffAddr# [sat_s9y8i
                                                                                          0#
                                                                                          x_s9y8h
                                                                                          GHC.Prim.void#]
                                                                  of
                                                                  s1_s9y8j
                                                                  { (##) ->
                                                                        case ep_s9y7Z of {
                                                                          GHC.Event.EPoll.EPoll dt_s9y8l
                                                                                                _ [Occ=Dead] ->
                                                                              case
                                                                                  __pkg_ccall base-4.11.0.0 [dt_s9y8l
                                                                                                             3#
                                                                                                             x_s9y8h
                                                                                                             ptr_s9y8e
                                                                                                             GHC.Prim.void#]
                                                                              of
                                                                              { Unit# ds1_s9y8q [Occ=Once] ->
                                                                                    case
                                                                                        touch# [ipv3_s9y8c
                                                                                                GHC.Prim.void#]
                                                                                    of
                                                                                    s4_s9y8r
                                                                                    { (##) ->
                                                                                          case
                                                                                              narrow32Int# [ds1_s9y8q]
                                                                                          of
                                                                                          { __DEFAULT ->
                                                                                                case
                                                                                                    __pkg_ccall base-4.11.0.0 [GHC.Prim.void#]
                                                                                                of
                                                                                                { Unit# ds6_s9y8w [Occ=Once] ->
                                                                                                      case
                                                                                                          narrow32Int# [ds6_s9y8w]
                                                                                                      of
                                                                                                      { __DEFAULT ->
                                                                                                            Foreign.C.Error.throwErrno1
                                                                                                                GHC.Event.EPoll.new7
                                                                                                                GHC.Prim.void#;
                                                                                                        2# ->
                                                                                                            case
                                                                                                                newAlignedPinnedByteArray# [12#
                                                                                                                                            4#
                                                                                                                                            GHC.Prim.void#]
                                                                                                            of
                                                                                                            { Unit# ipv6_s9y8A [Occ=Once] ->
                                                                                                                  case
                                                                                                                      unsafeFreezeByteArray# [ipv6_s9y8A
                                                                                                                                              GHC.Prim.void#]
                                                                                                                  of
                                                                                                                  { Unit# ipv8_s9y8D ->
                                                                                                                        case
                                                                                                                            byteArrayContents# [ipv8_s9y8D]
                                                                                                                        of
                                                                                                                        ptr1_s9y8E [Dmd=<S,U>]
                                                                                                                        { __DEFAULT ->
                                                                                                                              case
                                                                                                                                  writeWord32OffAddr# [ptr1_s9y8E
                                                                                                                                                       0#
                                                                                                                                                       ipv4_s9y8d
                                                                                                                                                       GHC.Prim.void#]
                                                                                                                              of
                                                                                                                              s3_s9y8F
                                                                                                                              { (##) ->
                                                                                                                                    case
                                                                                                                                        plusAddr# [ptr1_s9y8E
                                                                                                                                                   4#]
                                                                                                                                    of
                                                                                                                                    sat_s9y8G
                                                                                                                                    { __DEFAULT ->
                                                                                                                                          case
                                                                                                                                              writeInt32OffAddr# [sat_s9y8G
                                                                                                                                                                  0#
                                                                                                                                                                  x_s9y8h
                                                                                                                                                                  GHC.Prim.void#]
                                                                                                                                          of
                                                                                                                                          s5_s9y8H
                                                                                                                                          { (##) ->
                                                                                                                                                case
                                                                                                                                                    __pkg_ccall base-4.11.0.0 [dt_s9y8l
                                                                                                                                                                               1#
                                                                                                                                                                               x_s9y8h
                                                                                                                                                                               ptr1_s9y8E
                                                                                                                                                                               GHC.Prim.void#]
                                                                                                                                                of
                                                                                                                                                { Unit# ds10_s9y8L [Occ=Once] ->
                                                                                                                                                      case
                                                                                                                                                          narrow32Int# [ds10_s9y8L]
                                                                                                                                                      of
                                                                                                                                                      { __DEFAULT ->
                                                                                                                                                            case
                                                                                                                                                                touch# [ipv8_s9y8D
                                                                                                                                                                        GHC.Prim.void#]
                                                                                                                                                            of
                                                                                                                                                            s6_s9y8N
                                                                                                                                                            { (##) ->
                                                                                                                                                                  Unit# [GHC.Types.True];
                                                                                                                                                            };
                                                                                                                                                        -1# ->
                                                                                                                                                            case
                                                                                                                                                                __pkg_ccall base-4.11.0.0 [GHC.Prim.void#]
                                                                                                                                                            of
                                                                                                                                                            { Unit# ds12_s9y8R [Occ=Once] ->
                                                                                                                                                                  GHC.Event.EPoll.new6
                                                                                                                                                                      GHC.Prim.void#
                                                                                                                                                                      ds12_s9y8R;
                                                                                                                                                            };
                                                                                                                                                      };
                                                                                                                                                };
                                                                                                                                          };
                                                                                                                                    };
                                                                                                                              };
                                                                                                                        };
                                                                                                                  };
                                                                                                            };
                                                                                                      };
                                                                                                };
                                                                                            0# ->
                                                                                                Unit# [GHC.Types.True];
                                                                                          };
                                                                                    };
                                                                              };
                                                                        };
                                                                  };
                                                            };
                                                      };
                                                };
                                          };
                                    };
                              };
                        };
              } in 
                case andI# [x#_s9y84 1#] of {
                  __DEFAULT ->
                      case andI# [x#_s9y84 2#] of {
                        __DEFAULT -> $j_s9y85 5##;
                        0# -> $j_s9y85 1##;
                      };
                  0# ->
                      case andI# [x#_s9y84 2#] of {
                        __DEFAULT -> $j_s9y85 4##;
                        0# -> $j_s9y85 0##;
                      };
                };
        };

GHC.Event.EPoll.new4
  :: GHC.Event.EPoll.EPoll
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,A)><S,U>,
 Unf=OtherCon []] =
    [] \r [be_s9y8W void_0E]
        case be_s9y8W of {
          GHC.Event.EPoll.EPoll dt_s9y8Z [Occ=Once] _ [Occ=Dead] ->
              case __pkg_ccall base-4.11.0.0 [dt_s9y8Z GHC.Prim.void#] of {
                Unit# _ [Occ=Dead] -> Unit# [GHC.Tuple.()];
              };
        };

GHC.Event.EPoll.$w$j [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> GHC.Prim.Int#
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Event.Internal.Backend #)
[GblId, Arity=2, Str=<L,U><L,U>, Unf=OtherCon []] =
    [] \r [void_0E ww_s9y96]
        case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
          Unit# ds1_s9y9a [Occ=Once] ->
              case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                Unit# ds3_s9y9e [Occ=Once] ->
                    case narrow32Int# [ds1_s9y9a] of sat_s9y9g {
                      __DEFAULT ->
                          case
                              __pkg_ccall base-4.11.0.0 [ww_s9y96
                                                         sat_s9y9g
                                                         ds3_s9y9e
                                                         GHC.Prim.void#]
                          of
                          { Unit# ds5_s9y9j [Occ=Once] ->
                                case narrow32Int# [ds5_s9y9j] of {
                                  __DEFAULT ->
                                      case newPinnedByteArray# [768# GHC.Prim.void#] of {
                                        Unit# ipv6_s9y9n ->
                                            let {
                                              sat_s9y9p [Occ=Once]
                                                :: GHC.ForeignPtr.ForeignPtrContents
                                              [LclId] =
                                                  CCCS GHC.ForeignPtr.PlainPtr! [ipv6_s9y9n];
                                            } in 
                                              case byteArrayContents# [ipv6_s9y9n] of sat_s9y9o {
                                                __DEFAULT ->
                                                    let {
                                                      sat_s9y9q [Occ=Once]
                                                        :: GHC.ForeignPtr.ForeignPtr
                                                             GHC.Event.EPoll.Event
                                                      [LclId] =
                                                          CCCS GHC.ForeignPtr.ForeignPtr! [sat_s9y9o
                                                                                           sat_s9y9p]; } in
                                                    let {
                                                      sat_s9y9r [Occ=Once]
                                                        :: GHC.Event.Array.AC GHC.Event.EPoll.Event
                                                      [LclId] =
                                                          CCCS GHC.Event.Array.AC! [sat_s9y9q
                                                                                    0#
                                                                                    64#];
                                                    } in 
                                                      case
                                                          newMutVar# [sat_s9y9r GHC.Prim.void#]
                                                      of
                                                      { Unit# ipv8_s9y9u [Occ=Once] ->
                                                            let {
                                                              sat_s9y9v [Occ=Once]
                                                                :: GHC.Event.EPoll.EPoll
                                                              [LclId] =
                                                                  CCCS GHC.Event.EPoll.EPoll! [ww_s9y96
                                                                                               ipv8_s9y9u]; } in
                                                            let {
                                                              sat_s9y9w [Occ=Once]
                                                                :: GHC.Event.Internal.Backend
                                                              [LclId] =
                                                                  CCCS GHC.Event.Internal.Backend! [sat_s9y9v
                                                                                                    GHC.Event.EPoll.new10
                                                                                                    GHC.Event.EPoll.new9
                                                                                                    GHC.Event.EPoll.new5
                                                                                                    GHC.Event.EPoll.new4];
                                                            } in  Unit# [sat_s9y9w];
                                                      };
                                              };
                                      };
                                  -1# ->
                                      case __pkg_ccall base-4.11.0.0 [GHC.Prim.void#] of {
                                        Unit# ds7_s9y9A [Occ=Once] ->
                                            System.Posix.Internals.setCloseOnExec2
                                                GHC.Prim.void# ds7_s9y9A;
                                      };
                                };
                          };
                    };
              };
        };

GHC.Event.EPoll.new3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "epollCreate"#;

GHC.Event.EPoll.new2 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.Event.EPoll.new3;

GHC.Event.EPoll.new1
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Event.Internal.Backend #)
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [void_0E]
        case __pkg_ccall base-4.11.0.0 [256# GHC.Prim.void#] of {
          Unit# ds1_s9y9G [Occ=Once] ->
              case narrow32Int# [ds1_s9y9G] of wild1_s9y9H {
                __DEFAULT -> GHC.Event.EPoll.$w$j GHC.Prim.void# wild1_s9y9H;
                -1# ->
                    case
                        Foreign.C.Error.throwErrno1 GHC.Event.EPoll.new2 GHC.Prim.void#
                    of
                    { Unit# ipv1_s9y9K [Occ=Once] ->
                          case ipv1_s9y9K of {
                            GHC.Int.I32# ww1_s9y9M [Occ=Once] ->
                                GHC.Event.EPoll.$w$j GHC.Prim.void# ww1_s9y9M;
                          };
                    };
              };
        };

GHC.Event.EPoll.new :: GHC.Types.IO GHC.Event.Internal.Backend
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [void_0E] GHC.Event.EPoll.new1 GHC.Prim.void#;

GHC.Event.EPoll.Event
  :: GHC.Event.EPoll.EventType
     -> System.Posix.Types.Fd -> GHC.Event.EPoll.Event
[GblId[DataCon],
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U><L,U>m,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] GHC.Event.EPoll.Event [eta_B2 eta_B1];

GHC.Event.EPoll.EPoll
  :: GHC.Prim.Int#
     -> GHC.Prim.MutVar#
          GHC.Prim.RealWorld (GHC.Event.Array.AC GHC.Event.EPoll.Event)
     -> GHC.Event.EPoll.EPoll
[GblId[DataCon],
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U><L,U>m,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] GHC.Event.EPoll.EPoll [eta_B2 eta_B1];


==================== Pre unarise: ====================
2018-03-16 16:04:42.25439344 UTC

GHC.Event.EPoll.$WEPoll [InlPrag=INLINE[2]]
  :: GHC.Event.EPoll.EPollFd
     -> GHC.Event.Array.Array GHC.Event.EPoll.Event
     -> GHC.Event.EPoll.EPoll
[GblId[DataConWrapper],
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,U><S,U>m,
 Unf=OtherCon []] =
    [] \r [dt_s9zTi dt_s9zTj]
        case dt_s9zTi of {
          GHC.Int.I32# dt_s9zTl [Occ=Once] ->
              case dt_s9zTj of {
                GHC.STRef.STRef dt_s9zTn [Occ=Once] ->
                    GHC.Event.EPoll.EPoll [dt_s9zTl dt_s9zTn];
              };
        };

GHC.Event.EPoll.$fStorableEvent_$calignment
  :: GHC.Event.EPoll.Event -> GHC.Types.Int
[GblId, Arity=1, Caf=NoCafRefs, Str=<L,A>m, Unf=OtherCon []] =
    [] \r [ds_s9zTo] Foreign.Storable.$fStorableBool7;

GHC.Event.EPoll.$fStorableEvent7 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [12#];

GHC.Event.EPoll.$fStorableEvent_$csizeOf
  :: GHC.Event.EPoll.Event -> GHC.Types.Int
[GblId, Arity=1, Caf=NoCafRefs, Str=<L,A>m, Unf=OtherCon []] =
    [] \r [ds_s9zTp] GHC.Event.EPoll.$fStorableEvent7;

GHC.Event.EPoll.$fStorableEvent2
  :: GHC.Ptr.Ptr GHC.Event.EPoll.Event
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Event.EPoll.Event #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ptr_s9zTq s_s9zTr]
        case ptr_s9zTq of {
          GHC.Ptr.Ptr addr_s9zTt ->
              case readWord32OffAddr# [addr_s9zTt 0# s_s9zTr] of {
                (#,#) ipv_s9zTv [Occ=Once] ipv1_s9zTw [Occ=Once] ->
                    case plusAddr# [addr_s9zTt 4#] of sat_s9zTx {
                      __DEFAULT ->
                          case readInt32OffAddr# [sat_s9zTx 0# ipv_s9zTv] of {
                            (#,#) ipv2_s9zTz [Occ=Once] ipv3_s9zTA [Occ=Once] ->
                                let {
                                  sat_s9zTC [Occ=Once] :: System.Posix.Types.Fd
                                  [LclId] =
                                      CCCS GHC.Int.I32#! [ipv3_s9zTA]; } in
                                let {
                                  sat_s9zTB [Occ=Once] :: GHC.Event.EPoll.EventType
                                  [LclId] =
                                      CCCS GHC.Word.W32#! [ipv1_s9zTw]; } in
                                let {
                                  sat_s9zTD [Occ=Once] :: GHC.Event.EPoll.Event
                                  [LclId] =
                                      CCCS GHC.Event.EPoll.Event! [sat_s9zTB sat_s9zTC];
                                } in  (#,#) [ipv2_s9zTz sat_s9zTD];
                          };
                    };
              };
        };

GHC.Event.EPoll.$fStorableEvent1
  :: GHC.Ptr.Ptr GHC.Event.EPoll.Event
     -> GHC.Event.EPoll.Event
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S(S)S(S)),1*U(1*U(U),1*U(U))><S,U>,
 Unf=OtherCon []] =
    [] \r [ptr_s9zTE e_s9zTF s_s9zTG]
        case ptr_s9zTE of {
          GHC.Ptr.Ptr addr_s9zTI ->
              case e_s9zTF of {
                GHC.Event.EPoll.Event ds_s9zTK [Occ=Once] ds1_s9zTL [Occ=Once] ->
                    case ds_s9zTK of {
                      GHC.Word.W32# x_s9zTN [Occ=Once] ->
                          case
                              writeWord32OffAddr# [addr_s9zTI 0# x_s9zTN s_s9zTG]
                          of
                          s2_s9zTO
                          { __DEFAULT ->
                                case ds1_s9zTL of {
                                  GHC.Int.I32# x1_s9zTQ [Occ=Once] ->
                                      case plusAddr# [addr_s9zTI 4#] of sat_s9zTR {
                                        __DEFAULT ->
                                            case
                                                writeInt32OffAddr# [sat_s9zTR 0# x1_s9zTQ s2_s9zTO]
                                            of
                                            s1_s9zTS
                                            { __DEFAULT -> (#,#) [s1_s9zTS GHC.Tuple.()];
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.Event.EPoll.$fStorableEvent4
  :: forall b.
     GHC.Ptr.Ptr b
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Event.EPoll.Event #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ptr_s9zTT off_s9zTU eta_s9zTV]
        case ptr_s9zTT of {
          GHC.Ptr.Ptr addr_s9zTX [Occ=Once] ->
              case off_s9zTU of {
                GHC.Types.I# d_s9zTZ [Occ=Once] ->
                    case plusAddr# [addr_s9zTX d_s9zTZ] of addr1_s9zU0 [Dmd=<S,U>] {
                      __DEFAULT ->
                          case readWord32OffAddr# [addr1_s9zU0 0# eta_s9zTV] of {
                            (#,#) ipv_s9zU2 [Occ=Once] ipv1_s9zU3 [Occ=Once] ->
                                case plusAddr# [addr1_s9zU0 4#] of sat_s9zU4 {
                                  __DEFAULT ->
                                      case readInt32OffAddr# [sat_s9zU4 0# ipv_s9zU2] of {
                                        (#,#) ipv2_s9zU6 [Occ=Once] ipv3_s9zU7 [Occ=Once] ->
                                            let {
                                              sat_s9zU9 [Occ=Once] :: System.Posix.Types.Fd
                                              [LclId] =
                                                  CCCS GHC.Int.I32#! [ipv3_s9zU7]; } in
                                            let {
                                              sat_s9zU8 [Occ=Once] :: GHC.Event.EPoll.EventType
                                              [LclId] =
                                                  CCCS GHC.Word.W32#! [ipv1_s9zU3]; } in
                                            let {
                                              sat_s9zUa [Occ=Once] :: GHC.Event.EPoll.Event
                                              [LclId] =
                                                  CCCS GHC.Event.EPoll.Event! [sat_s9zU8 sat_s9zU9];
                                            } in  (#,#) [ipv2_s9zU6 sat_s9zUa];
                                      };
                                };
                          };
                    };
              };
        };

GHC.Event.EPoll.$fStorableEvent6
  :: GHC.Ptr.Ptr GHC.Event.EPoll.Event
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Event.EPoll.Event #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ptr_s9zUb off_s9zUc eta_s9zUd]
        case ptr_s9zUb of {
          GHC.Ptr.Ptr addr_s9zUf [Occ=Once] ->
              case off_s9zUc of {
                GHC.Types.I# x_s9zUh [Occ=Once] ->
                    case *# [x_s9zUh 12#] of sat_s9zUj {
                      __DEFAULT ->
                          case plusAddr# [addr_s9zUf sat_s9zUj] of addr1_s9zUi [Dmd=<S,U>] {
                            __DEFAULT ->
                                case readWord32OffAddr# [addr1_s9zUi 0# eta_s9zUd] of {
                                  (#,#) ipv_s9zUl [Occ=Once] ipv1_s9zUm [Occ=Once] ->
                                      case plusAddr# [addr1_s9zUi 4#] of sat_s9zUn {
                                        __DEFAULT ->
                                            case readInt32OffAddr# [sat_s9zUn 0# ipv_s9zUl] of {
                                              (#,#) ipv2_s9zUp [Occ=Once] ipv3_s9zUq [Occ=Once] ->
                                                  let {
                                                    sat_s9zUs [Occ=Once] :: System.Posix.Types.Fd
                                                    [LclId] =
                                                        CCCS GHC.Int.I32#! [ipv3_s9zUq]; } in
                                                  let {
                                                    sat_s9zUr [Occ=Once]
                                                      :: GHC.Event.EPoll.EventType
                                                    [LclId] =
                                                        CCCS GHC.Word.W32#! [ipv1_s9zUm]; } in
                                                  let {
                                                    sat_s9zUt [Occ=Once] :: GHC.Event.EPoll.Event
                                                    [LclId] =
                                                        CCCS GHC.Event.EPoll.Event! [sat_s9zUr
                                                                                     sat_s9zUs];
                                                  } in  (#,#) [ipv2_s9zUp sat_s9zUt];
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.Event.EPoll.$fStorableEvent3
  :: forall b.
     GHC.Ptr.Ptr b
     -> GHC.Types.Int
     -> GHC.Event.EPoll.Event
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S(S)S(S)),1*U(1*U(U),1*U(U))><S,U>,
 Unf=OtherCon []] =
    [] \r [ptr_s9zUu off_s9zUv eta_s9zUw eta1_s9zUx]
        case ptr_s9zUu of {
          GHC.Ptr.Ptr addr_s9zUz [Occ=Once] ->
              case off_s9zUv of {
                GHC.Types.I# d_s9zUB [Occ=Once] ->
                    case eta_s9zUw of {
                      GHC.Event.EPoll.Event ds_s9zUD [Occ=Once] ds1_s9zUE [Occ=Once] ->
                          case ds_s9zUD of {
                            GHC.Word.W32# x_s9zUG [Occ=Once] ->
                                case plusAddr# [addr_s9zUz d_s9zUB] of addr1_s9zUH [Dmd=<S,U>] {
                                  __DEFAULT ->
                                      case
                                          writeWord32OffAddr# [addr1_s9zUH 0# x_s9zUG eta1_s9zUx]
                                      of
                                      s2_s9zUI
                                      { __DEFAULT ->
                                            case ds1_s9zUE of {
                                              GHC.Int.I32# x1_s9zUK [Occ=Once] ->
                                                  case plusAddr# [addr1_s9zUH 4#] of sat_s9zUL {
                                                    __DEFAULT ->
                                                        case
                                                            writeInt32OffAddr# [sat_s9zUL
                                                                                0#
                                                                                x1_s9zUK
                                                                                s2_s9zUI]
                                                        of
                                                        s1_s9zUM
                                                        { __DEFAULT ->
                                                              (#,#) [s1_s9zUM GHC.Tuple.()];
                                                        };
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.Event.EPoll.$fStorableEvent5
  :: GHC.Ptr.Ptr GHC.Event.EPoll.Event
     -> GHC.Types.Int
     -> GHC.Event.EPoll.Event
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S(S)S(S)),1*U(1*U(U),1*U(U))><S,U>,
 Unf=OtherCon []] =
    [] \r [ptr_s9zUN off_s9zUO val_s9zUP eta_s9zUQ]
        case ptr_s9zUN of {
          GHC.Ptr.Ptr addr_s9zUS [Occ=Once] ->
              case off_s9zUO of {
                GHC.Types.I# x_s9zUU [Occ=Once] ->
                    case val_s9zUP of {
                      GHC.Event.EPoll.Event ds_s9zUW [Occ=Once] ds1_s9zUX [Occ=Once] ->
                          case ds_s9zUW of {
                            GHC.Word.W32# x1_s9zUZ [Occ=Once] ->
                                case *# [x_s9zUU 12#] of sat_s9zV1 {
                                  __DEFAULT ->
                                      case
                                          plusAddr# [addr_s9zUS sat_s9zV1]
                                      of
                                      addr1_s9zV0 [Dmd=<S,U>]
                                      { __DEFAULT ->
                                            case
                                                writeWord32OffAddr# [addr1_s9zV0
                                                                     0#
                                                                     x1_s9zUZ
                                                                     eta_s9zUQ]
                                            of
                                            s2_s9zV2
                                            { __DEFAULT ->
                                                  case ds1_s9zUX of {
                                                    GHC.Int.I32# x2_s9zV4 [Occ=Once] ->
                                                        case
                                                            plusAddr# [addr1_s9zV0 4#]
                                                        of
                                                        sat_s9zV5
                                                        { __DEFAULT ->
                                                              case
                                                                  writeInt32OffAddr# [sat_s9zV5
                                                                                      0#
                                                                                      x2_s9zV4
                                                                                      s2_s9zV2]
                                                              of
                                                              s1_s9zV6
                                                              { __DEFAULT ->
                                                                    (#,#) [s1_s9zV6 GHC.Tuple.()];
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.Event.EPoll.$fStorableEvent [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable GHC.Event.EPoll.Event
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [GHC.Event.EPoll.$fStorableEvent_$csizeOf
                                                GHC.Event.EPoll.$fStorableEvent_$calignment
                                                GHC.Event.EPoll.$fStorableEvent6
                                                GHC.Event.EPoll.$fStorableEvent5
                                                GHC.Event.EPoll.$fStorableEvent4
                                                GHC.Event.EPoll.$fStorableEvent3
                                                GHC.Event.EPoll.$fStorableEvent2
                                                GHC.Event.EPoll.$fStorableEvent1];

GHC.Event.EPoll.$fEqEventType [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq GHC.Event.EPoll.EventType
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Word.eqWord32
                                     GHC.Word.neWord32];

GHC.Event.EPoll.$fBitsEventType [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits GHC.Event.EPoll.EventType
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [GHC.Event.EPoll.$fEqEventType
                                     GHC.Word.$fBitsWord32_$c.&.
                                     GHC.Word.$fBitsWord32_$c.|.
                                     GHC.Word.$fBitsWord32_$cxor
                                     GHC.Word.$fBitsWord32_$ccomplement
                                     GHC.Word.$fBitsWord32_$cshift
                                     GHC.Word.$fBitsWord32_$crotate
                                     GHC.Word.$fBitsWord32_$cminBound
                                     GHC.Word.$fBitsWord32_$cbit
                                     GHC.Word.$fBitsWord32_$csetBit
                                     GHC.Word.$fBitsWord32_$cclearBit
                                     GHC.Word.$fBitsWord32_$ccomplementBit
                                     GHC.Word.$fBitsWord32_$ctestBit
                                     GHC.Word.$fBitsWord32_$cbitSizeMaybe
                                     GHC.Word.$fBitsWord32_$cfiniteBitSize
                                     GHC.Word.$fBitsWord32_$cisSigned
                                     GHC.Word.$fBitsWord32_$cshiftL
                                     GHC.Word.$fBitsWord32_$cunsafeShiftL
                                     GHC.Word.$fBitsWord32_$cshiftR
                                     GHC.Word.$fBitsWord32_$cunsafeShiftR
                                     GHC.Word.$fBitsWord32_$crotateL
                                     GHC.Word.$fBitsWord32_$crotateR
                                     GHC.Word.$fBitsWord32_$cpopCount];

GHC.Event.EPoll.fromEPollFd1
  :: GHC.Event.EPoll.EPollFd -> GHC.Event.EPoll.EPollFd
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U(U)>m, Unf=OtherCon []] =
    [] \r [ds_s9zV7] ds_s9zV7;

GHC.Event.EPoll.fromEPollFd
  :: GHC.Event.EPoll.EPollFd -> Foreign.C.Types.CInt
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S,1*U(U)>m,
 Unf=OtherCon []] =
    [] \r [eta_B1] GHC.Event.EPoll.fromEPollFd1 eta_B1;

GHC.Event.EPoll.unEventType1
  :: GHC.Event.EPoll.EventType -> GHC.Event.EPoll.EventType
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U(U)>m, Unf=OtherCon []] =
    [] \r [ds_s9zV8] ds_s9zV8;

GHC.Event.EPoll.unEventType
  :: GHC.Event.EPoll.EventType -> GHC.Word.Word32
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S,1*U(U)>m,
 Unf=OtherCon []] =
    [] \r [eta_B1] GHC.Event.EPoll.unEventType1 eta_B1;

GHC.Event.EPoll.eventFd
  :: GHC.Event.EPoll.Event -> System.Posix.Types.Fd
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LS),1*U(A,1*U(U))>m,
 Unf=OtherCon []] =
    [] \r [ds_s9zV9]
        case ds_s9zV9 of {
          GHC.Event.EPoll.Event _ [Occ=Dead] ds2_s9zVc [Occ=Once] ->
              ds2_s9zVc;
        };

GHC.Event.EPoll.eventTypes
  :: GHC.Event.EPoll.Event -> GHC.Event.EPoll.EventType
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(1*U(U),A)>m,
 Unf=OtherCon []] =
    [] \r [ds_s9zVd]
        case ds_s9zVd of {
          GHC.Event.EPoll.Event ds1_s9zVf [Occ=Once] _ [Occ=Dead] ->
              ds1_s9zVf;
        };

GHC.Event.EPoll.epollEvents
  :: GHC.Event.EPoll.EPoll
     -> GHC.Event.Array.Array GHC.Event.EPoll.Event
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LS),1*U(A,U)>m,
 Unf=OtherCon []] =
    [] \r [ds_s9zVh]
        case ds_s9zVh of {
          GHC.Event.EPoll.EPoll _ [Occ=Dead] dt1_s9zVk [Occ=Once] ->
              GHC.STRef.STRef [dt1_s9zVk];
        };

GHC.Event.EPoll.epollFd
  :: GHC.Event.EPoll.EPoll -> GHC.Event.EPoll.EPollFd
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,A)>m,
 Unf=OtherCon []] =
    [] \r [ds_s9zVl]
        case ds_s9zVl of {
          GHC.Event.EPoll.EPoll dt_s9zVn [Occ=Once] _ [Occ=Dead] ->
              GHC.Int.I32# [dt_s9zVn];
        };

GHC.Event.EPoll.available [InlPrag=INLINE (sat-args=0)]
  :: GHC.Types.Bool
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.True! [];

GHC.Event.EPoll.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

GHC.Event.EPoll.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.EPoll.$trModule4];

GHC.Event.EPoll.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.Event.EPoll"#;

GHC.Event.EPoll.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.EPoll.$trModule2];

GHC.Event.EPoll.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [GHC.Event.EPoll.$trModule3
                                     GHC.Event.EPoll.$trModule1];

$krep_r9xZP :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCInt
                                              GHC.Types.[]];

$krep1_r9xZQ :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Word.$tcWord32
                                              GHC.Types.[]];

$krep2_r9xZR :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [System.Posix.Types.$tcFd
                                              GHC.Types.[]];

GHC.Event.EPoll.$tcEPollFd2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "EPollFd"#;

GHC.Event.EPoll.$tcEPollFd1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.EPoll.$tcEPollFd2];

GHC.Event.EPoll.$tcEPollFd :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [11408974392712426853##
                                    10860743297622841984##
                                    GHC.Event.EPoll.$trModule
                                    GHC.Event.EPoll.$tcEPollFd1
                                    0#
                                    GHC.Types.krep$*];

$krep3_r9xZS :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.EPoll.$tcEPollFd
                                              GHC.Types.[]];

GHC.Event.EPoll.$tc'EPollFd1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_r9xZP $krep3_r9xZS];

GHC.Event.EPoll.$tc'EPollFd3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'EPollFd"#;

GHC.Event.EPoll.$tc'EPollFd2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.EPoll.$tc'EPollFd3];

GHC.Event.EPoll.$tc'EPollFd :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [13859366844265277896##
                                    3104986725924328114##
                                    GHC.Event.EPoll.$trModule
                                    GHC.Event.EPoll.$tc'EPollFd2
                                    0#
                                    GHC.Event.EPoll.$tc'EPollFd1];

GHC.Event.EPoll.$tcControlOp2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "ControlOp"#;

GHC.Event.EPoll.$tcControlOp1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.EPoll.$tcControlOp2];

GHC.Event.EPoll.$tcControlOp :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [16670684287779227039##
                                    7079239768931473179##
                                    GHC.Event.EPoll.$trModule
                                    GHC.Event.EPoll.$tcControlOp1
                                    0#
                                    GHC.Types.krep$*];

$krep4_r9xZT :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.EPoll.$tcControlOp
                                              GHC.Types.[]];

GHC.Event.EPoll.$tc'ControlOp1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_r9xZP $krep4_r9xZT];

GHC.Event.EPoll.$tc'ControlOp3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'ControlOp"#;

GHC.Event.EPoll.$tc'ControlOp2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.EPoll.$tc'ControlOp3];

GHC.Event.EPoll.$tc'ControlOp :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [17423659744934710370##
                                    14737300415055323322##
                                    GHC.Event.EPoll.$trModule
                                    GHC.Event.EPoll.$tc'ControlOp2
                                    0#
                                    GHC.Event.EPoll.$tc'ControlOp1];

GHC.Event.EPoll.$tcEventType2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "EventType"#;

GHC.Event.EPoll.$tcEventType1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.EPoll.$tcEventType2];

GHC.Event.EPoll.$tcEventType :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [6882131545153803920##
                                    11603224301892798833##
                                    GHC.Event.EPoll.$trModule
                                    GHC.Event.EPoll.$tcEventType1
                                    0#
                                    GHC.Types.krep$*];

$krep5_r9xZU :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.EPoll.$tcEventType
                                              GHC.Types.[]];

GHC.Event.EPoll.$tc'EventType1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep1_r9xZQ $krep5_r9xZU];

GHC.Event.EPoll.$tc'EventType3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'EventType"#;

GHC.Event.EPoll.$tc'EventType2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.EPoll.$tc'EventType3];

GHC.Event.EPoll.$tc'EventType :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [6895099112894632230##
                                    10353865251933672677##
                                    GHC.Event.EPoll.$trModule
                                    GHC.Event.EPoll.$tc'EventType2
                                    0#
                                    GHC.Event.EPoll.$tc'EventType1];

GHC.Event.EPoll.$tcEvent2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Event"#;

GHC.Event.EPoll.$tcEvent1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.EPoll.$tcEvent2];

GHC.Event.EPoll.$tcEvent :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [9768726503562184735##
                                    14932995848660065219##
                                    GHC.Event.EPoll.$trModule
                                    GHC.Event.EPoll.$tcEvent1
                                    0#
                                    GHC.Types.krep$*];

$krep6_r9xZV :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.EPoll.$tcEvent
                                              GHC.Types.[]];

$krep7_r9xZW :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_r9xZR $krep6_r9xZV];

GHC.Event.EPoll.$tc'Event1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep5_r9xZU $krep7_r9xZW];

GHC.Event.EPoll.$tc'Event3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Event"#;

GHC.Event.EPoll.$tc'Event2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.EPoll.$tc'Event3];

GHC.Event.EPoll.$tc'Event :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [13898227050457859187##
                                    12870286929163337655##
                                    GHC.Event.EPoll.$trModule
                                    GHC.Event.EPoll.$tc'Event2
                                    0#
                                    GHC.Event.EPoll.$tc'Event1];

$krep8_r9xZX :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep6_r9xZV GHC.Types.[]];

$krep9_r9xZY :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.Array.$tcArray
                                              $krep8_r9xZX];

GHC.Event.EPoll.$tcEPoll2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "EPoll"#;

GHC.Event.EPoll.$tcEPoll1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.EPoll.$tcEPoll2];

GHC.Event.EPoll.$tcEPoll :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [16362945812962510240##
                                    15183678187331181316##
                                    GHC.Event.EPoll.$trModule
                                    GHC.Event.EPoll.$tcEPoll1
                                    0#
                                    GHC.Types.krep$*];

$krep10_r9xZZ :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.EPoll.$tcEPoll
                                              GHC.Types.[]];

$krep11_r9y00 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep9_r9xZY $krep10_r9xZZ];

GHC.Event.EPoll.$tc'EPoll1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep3_r9xZS $krep11_r9y00];

GHC.Event.EPoll.$tc'EPoll3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'EPoll"#;

GHC.Event.EPoll.$tc'EPoll2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.EPoll.$tc'EPoll3];

GHC.Event.EPoll.$tc'EPoll :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [11640704659469356468##
                                    11164042648060985378##
                                    GHC.Event.EPoll.$trModule
                                    GHC.Event.EPoll.$tc'EPoll2
                                    0#
                                    GHC.Event.EPoll.$tc'EPoll1];

GHC.Event.EPoll.$fShowEPollFd4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "EPollFd {"#;

GHC.Event.EPoll.$fShowEPollFd3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "fromEPollFd = "#;

GHC.Event.EPoll.$fShowEPollFd2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "}"#;

GHC.Event.EPoll.$w$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Event.EPoll.EPollFd -> GHC.Base.String -> GHC.Base.String
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,U><L,1*U(U)><L,U>,
 Unf=OtherCon []] =
    [] \r [ww_s9zVp w_s9zVq w1_s9zVr]
        case >=# [ww_s9zVp 11#] of {
          __DEFAULT ->
              let {
                sat_s9zVA [Occ=Once] :: [GHC.Types.Char]
                [LclId] =
                    [w_s9zVq w1_s9zVr] \u []
                        let {
                          sat_s9zVz [Occ=Once] :: [GHC.Types.Char]
                          [LclId] =
                              [w_s9zVq w1_s9zVr] \u []
                                  case w_s9zVq of {
                                    GHC.Int.I32# x#_s9zVu [Occ=Once] ->
                                        let {
                                          sat_s9zVv [Occ=Once] :: GHC.Base.String
                                          [LclId] =
                                              [w1_s9zVr] \u []
                                                  GHC.CString.unpackAppendCString#
                                                      GHC.Event.EPoll.$fShowEPollFd2 w1_s9zVr;
                                        } in 
                                          case GHC.Show.$wshowSignedInt 0# x#_s9zVu sat_s9zVv of {
                                            (#,#) ww5_s9zVx [Occ=Once] ww6_s9zVy [Occ=Once] ->
                                                : [ww5_s9zVx ww6_s9zVy];
                                          };
                                  };
                        } in 
                          GHC.CString.unpackAppendCString#
                              GHC.Event.EPoll.$fShowEPollFd3 sat_s9zVz;
              } in 
                GHC.CString.unpackAppendCString#
                    GHC.Event.EPoll.$fShowEPollFd4 sat_s9zVA;
          1# ->
              let {
                sat_s9zVK [Occ=Once] :: [GHC.Types.Char]
                [LclId] =
                    [w_s9zVq w1_s9zVr] \u []
                        let {
                          sat_s9zVJ [Occ=Once] :: [GHC.Types.Char]
                          [LclId] =
                              [w_s9zVq w1_s9zVr] \u []
                                  let {
                                    sat_s9zVI [Occ=Once] :: [GHC.Types.Char]
                                    [LclId] =
                                        [w_s9zVq w1_s9zVr] \u []
                                            case w_s9zVq of {
                                              GHC.Int.I32# x#_s9zVC [Occ=Once] ->
                                                  let {
                                                    sat_s9zVE [Occ=Once] :: GHC.Base.String
                                                    [LclId] =
                                                        [w1_s9zVr] \u []
                                                            let {
                                                              sat_s9zVD [Occ=Once]
                                                                :: [GHC.Types.Char]
                                                              [LclId] =
                                                                  CCCS :! [GHC.Show.$fShow(,)2
                                                                           w1_s9zVr];
                                                            } in 
                                                              GHC.CString.unpackAppendCString#
                                                                  GHC.Event.EPoll.$fShowEPollFd2
                                                                  sat_s9zVD;
                                                  } in 
                                                    case
                                                        GHC.Show.$wshowSignedInt
                                                            0# x#_s9zVC sat_s9zVE
                                                    of
                                                    { (#,#) ww5_s9zVG [Occ=Once]
                                                            ww6_s9zVH [Occ=Once] ->
                                                          : [ww5_s9zVG ww6_s9zVH];
                                                    };
                                            };
                                  } in 
                                    GHC.CString.unpackAppendCString#
                                        GHC.Event.EPoll.$fShowEPollFd3 sat_s9zVI;
                        } in 
                          GHC.CString.unpackAppendCString#
                              GHC.Event.EPoll.$fShowEPollFd4 sat_s9zVJ;
              } in  : [GHC.Show.$fShow(,)4 sat_s9zVK];
        };

GHC.Event.EPoll.$fShowEPollFd_$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Int -> GHC.Event.EPoll.EPollFd -> GHC.Show.ShowS
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><L,1*U(U)><L,U>,
 Unf=OtherCon []] =
    [] \r [w_s9zVL w1_s9zVM w2_s9zVN]
        case w_s9zVL of {
          GHC.Types.I# ww1_s9zVP [Occ=Once] ->
              GHC.Event.EPoll.$w$cshowsPrec ww1_s9zVP w1_s9zVM w2_s9zVN;
        };

GHC.Event.EPoll.$fShowEPollFd5 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.Event.EPoll.$fShowEPollFd2;

GHC.Event.EPoll.$fShowEPollFd_$cshow
  :: GHC.Event.EPoll.EPollFd -> GHC.Base.String
[GblId, Arity=1, Str=<L,1*U(U)>, Unf=OtherCon []] =
    [] \r [x_s9zVQ]
        let {
          sat_s9zVX [Occ=Once] :: [GHC.Types.Char]
          [LclId] =
              [x_s9zVQ] \u []
                  let {
                    sat_s9zVW [Occ=Once] :: [GHC.Types.Char]
                    [LclId] =
                        [x_s9zVQ] \u []
                            case x_s9zVQ of {
                              GHC.Int.I32# x#_s9zVS [Occ=Once] ->
                                  case
                                      GHC.Show.$wshowSignedInt
                                          0# x#_s9zVS GHC.Event.EPoll.$fShowEPollFd5
                                  of
                                  { (#,#) ww5_s9zVU [Occ=Once] ww6_s9zVV [Occ=Once] ->
                                        : [ww5_s9zVU ww6_s9zVV];
                                  };
                            };
                  } in 
                    GHC.CString.unpackAppendCString#
                        GHC.Event.EPoll.$fShowEPollFd3 sat_s9zVW;
        } in 
          GHC.CString.unpackAppendCString#
              GHC.Event.EPoll.$fShowEPollFd4 sat_s9zVX;

GHC.Event.EPoll.$fShowEPollFd1
  :: GHC.Event.EPoll.EPollFd -> GHC.Show.ShowS
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,1*U(U)><L,U>,
 Unf=OtherCon []] =
    [] \r [w_s9zVY w1_s9zVZ]
        GHC.Event.EPoll.$w$cshowsPrec 0# w_s9zVY w1_s9zVZ;

GHC.Event.EPoll.$fShowEPollFd_$cshowList
  :: [GHC.Event.EPoll.EPollFd] -> GHC.Show.ShowS
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><L,U>,
 Unf=OtherCon []] =
    [] \r [ls_s9zW0 s_s9zW1]
        GHC.Show.showList__
            GHC.Event.EPoll.$fShowEPollFd1 ls_s9zW0 s_s9zW1;

GHC.Event.EPoll.$fShowEPollFd [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show GHC.Event.EPoll.EPollFd
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Event.EPoll.$fShowEPollFd_$cshowsPrec
                                    GHC.Event.EPoll.$fShowEPollFd_$cshow
                                    GHC.Event.EPoll.$fShowEPollFd_$cshowList];

GHC.Event.EPoll.$fShowEvent4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "EventType {"#;

GHC.Event.EPoll.$fShowEvent3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "unEventType = "#;

GHC.Event.EPoll.$w$cshowsPrec2 [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Event.EPoll.EventType -> GHC.Base.String -> GHC.Base.String
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,U><L,1*U(U)><L,U>,
 Unf=OtherCon []] =
    [] \r [ww_s9zW2 w_s9zW3 w1_s9zW4]
        case >=# [ww_s9zW2 11#] of {
          __DEFAULT ->
              let {
                sat_s9zWe [Occ=Once] :: [GHC.Types.Char]
                [LclId] =
                    [w_s9zW3 w1_s9zW4] \u []
                        let {
                          sat_s9zWd [Occ=Once] :: [GHC.Types.Char]
                          [LclId] =
                              [w_s9zW3 w1_s9zW4] \u []
                                  case w_s9zW3 of {
                                    GHC.Word.W32# x#_s9zW7 [Occ=Once] ->
                                        let {
                                          sat_s9zW9 [Occ=Once] :: GHC.Base.String
                                          [LclId] =
                                              [w1_s9zW4] \u []
                                                  GHC.CString.unpackAppendCString#
                                                      GHC.Event.EPoll.$fShowEPollFd2 w1_s9zW4;
                                        } in 
                                          case word2Int# [x#_s9zW7] of sat_s9zW8 {
                                            __DEFAULT ->
                                                case GHC.Show.$witos sat_s9zW8 sat_s9zW9 of {
                                                  (#,#) ww5_s9zWb [Occ=Once] ww6_s9zWc [Occ=Once] ->
                                                      : [ww5_s9zWb ww6_s9zWc];
                                                };
                                          };
                                  };
                        } in 
                          GHC.CString.unpackAppendCString#
                              GHC.Event.EPoll.$fShowEvent3 sat_s9zWd;
              } in 
                GHC.CString.unpackAppendCString#
                    GHC.Event.EPoll.$fShowEvent4 sat_s9zWe;
          1# ->
              let {
                sat_s9zWp [Occ=Once] :: [GHC.Types.Char]
                [LclId] =
                    [w_s9zW3 w1_s9zW4] \u []
                        let {
                          sat_s9zWo [Occ=Once] :: [GHC.Types.Char]
                          [LclId] =
                              [w_s9zW3 w1_s9zW4] \u []
                                  let {
                                    sat_s9zWn [Occ=Once] :: [GHC.Types.Char]
                                    [LclId] =
                                        [w_s9zW3 w1_s9zW4] \u []
                                            case w_s9zW3 of {
                                              GHC.Word.W32# x#_s9zWg [Occ=Once] ->
                                                  let {
                                                    sat_s9zWj [Occ=Once] :: GHC.Base.String
                                                    [LclId] =
                                                        [w1_s9zW4] \u []
                                                            let {
                                                              sat_s9zWi [Occ=Once]
                                                                :: [GHC.Types.Char]
                                                              [LclId] =
                                                                  CCCS :! [GHC.Show.$fShow(,)2
                                                                           w1_s9zW4];
                                                            } in 
                                                              GHC.CString.unpackAppendCString#
                                                                  GHC.Event.EPoll.$fShowEPollFd2
                                                                  sat_s9zWi;
                                                  } in 
                                                    case word2Int# [x#_s9zWg] of sat_s9zWh {
                                                      __DEFAULT ->
                                                          case
                                                              GHC.Show.$witos sat_s9zWh sat_s9zWj
                                                          of
                                                          { (#,#) ww5_s9zWl [Occ=Once]
                                                                  ww6_s9zWm [Occ=Once] ->
                                                                : [ww5_s9zWl ww6_s9zWm];
                                                          };
                                                    };
                                            };
                                  } in 
                                    GHC.CString.unpackAppendCString#
                                        GHC.Event.EPoll.$fShowEvent3 sat_s9zWn;
                        } in 
                          GHC.CString.unpackAppendCString#
                              GHC.Event.EPoll.$fShowEvent4 sat_s9zWo;
              } in  : [GHC.Show.$fShow(,)4 sat_s9zWp];
        };

GHC.Event.EPoll.$fShowEventType_$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Int -> GHC.Event.EPoll.EventType -> GHC.Show.ShowS
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><L,1*U(U)><L,U>,
 Unf=OtherCon []] =
    [] \r [w_s9zWq w1_s9zWr w2_s9zWs]
        case w_s9zWq of {
          GHC.Types.I# ww1_s9zWu [Occ=Once] ->
              GHC.Event.EPoll.$w$cshowsPrec2 ww1_s9zWu w1_s9zWr w2_s9zWs;
        };

GHC.Event.EPoll.$fShowEventType_$cshow
  :: GHC.Event.EPoll.EventType -> GHC.Base.String
[GblId, Arity=1, Str=<L,1*U(U)>, Unf=OtherCon []] =
    [] \r [x_s9zWv]
        let {
          sat_s9zWD [Occ=Once] :: [GHC.Types.Char]
          [LclId] =
              [x_s9zWv] \u []
                  let {
                    sat_s9zWC [Occ=Once] :: [GHC.Types.Char]
                    [LclId] =
                        [x_s9zWv] \u []
                            case x_s9zWv of {
                              GHC.Word.W32# x#_s9zWx [Occ=Once] ->
                                  case word2Int# [x#_s9zWx] of sat_s9zWy {
                                    __DEFAULT ->
                                        case
                                            GHC.Show.$wshowSignedInt
                                                0# sat_s9zWy GHC.Event.EPoll.$fShowEPollFd5
                                        of
                                        { (#,#) ww5_s9zWA [Occ=Once] ww6_s9zWB [Occ=Once] ->
                                              : [ww5_s9zWA ww6_s9zWB];
                                        };
                                  };
                            };
                  } in 
                    GHC.CString.unpackAppendCString#
                        GHC.Event.EPoll.$fShowEvent3 sat_s9zWC;
        } in 
          GHC.CString.unpackAppendCString#
              GHC.Event.EPoll.$fShowEvent4 sat_s9zWD;

GHC.Event.EPoll.$fShowEventType1
  :: GHC.Event.EPoll.EventType -> GHC.Show.ShowS
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,1*U(U)><L,U>,
 Unf=OtherCon []] =
    [] \r [w_s9zWE w1_s9zWF]
        GHC.Event.EPoll.$w$cshowsPrec2 0# w_s9zWE w1_s9zWF;

GHC.Event.EPoll.$fShowEventType_$cshowList
  :: [GHC.Event.EPoll.EventType] -> GHC.Show.ShowS
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><L,U>,
 Unf=OtherCon []] =
    [] \r [ls_s9zWG s_s9zWH]
        GHC.Show.showList__
            GHC.Event.EPoll.$fShowEventType1 ls_s9zWG s_s9zWH;

GHC.Event.EPoll.$fShowEventType [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show GHC.Event.EPoll.EventType
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Event.EPoll.$fShowEventType_$cshowsPrec
                                    GHC.Event.EPoll.$fShowEventType_$cshow
                                    GHC.Event.EPoll.$fShowEventType_$cshowList];

GHC.Event.EPoll.$fShowEvent7 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Event {"#;

GHC.Event.EPoll.$fShowEvent6 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.Event.EPoll.$fShowEvent7;

GHC.Event.EPoll.$fShowEvent5 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "eventTypes = "#;

GHC.Event.EPoll.$fShowEvent2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "eventFd = "#;

GHC.Event.EPoll.$w$cshowsPrec1 [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Event.EPoll.EventType
     -> System.Posix.Types.Fd
     -> GHC.Base.String
     -> GHC.Base.String
[GblId,
 Arity=4,
 Str=<S,U><L,1*U(U)><L,1*U(U)><L,U>,
 Unf=OtherCon []] =
    [] \r [ww_s9zWI ww1_s9zWJ ww2_s9zWK w_s9zWL]
        case >=# [ww_s9zWI 11#] of {
          __DEFAULT ->
              let {
                sat_s9zWX [Occ=Once, Dmd=<L,1*U>] :: [GHC.Types.Char]
                [LclId] =
                    [ww1_s9zWJ ww2_s9zWK w_s9zWL] \s []
                        let {
                          sat_s9zWW [Occ=Once] :: [GHC.Types.Char]
                          [LclId] =
                              [ww1_s9zWJ ww2_s9zWK w_s9zWL] \u []
                                  let {
                                    sat_s9zWV [Occ=Once] :: GHC.Base.String
                                    [LclId] =
                                        [ww2_s9zWK w_s9zWL] \u []
                                            let {
                                              sat_s9zWU [Occ=Once, Dmd=<L,1*U>] :: [GHC.Types.Char]
                                              [LclId] =
                                                  [ww2_s9zWK w_s9zWL] \s []
                                                      let {
                                                        sat_s9zWT [Occ=Once] :: [GHC.Types.Char]
                                                        [LclId] =
                                                            [ww2_s9zWK w_s9zWL] \u []
                                                                case ww2_s9zWK of {
                                                                  GHC.Int.I32# x#_s9zWO [Occ=Once] ->
                                                                      let {
                                                                        sat_s9zWP [Occ=Once]
                                                                          :: GHC.Base.String
                                                                        [LclId] =
                                                                            [w_s9zWL] \u []
                                                                                GHC.CString.unpackAppendCString#
                                                                                    GHC.Event.EPoll.$fShowEPollFd2
                                                                                    w_s9zWL;
                                                                      } in 
                                                                        case
                                                                            GHC.Show.$wshowSignedInt
                                                                                0#
                                                                                x#_s9zWO
                                                                                sat_s9zWP
                                                                        of
                                                                        { (#,#) ww5_s9zWR [Occ=Once]
                                                                                ww6_s9zWS [Occ=Once] ->
                                                                              : [ww5_s9zWR
                                                                                 ww6_s9zWS];
                                                                        };
                                                                };
                                                      } in 
                                                        GHC.CString.unpackAppendCString#
                                                            GHC.Event.EPoll.$fShowEvent2 sat_s9zWT;
                                            } in  GHC.Base.++ GHC.Show.showCommaSpace1 sat_s9zWU;
                                  } in  GHC.Event.EPoll.$w$cshowsPrec2 0# ww1_s9zWJ sat_s9zWV;
                        } in 
                          GHC.CString.unpackAppendCString#
                              GHC.Event.EPoll.$fShowEvent5 sat_s9zWW;
              } in  GHC.Base.++ GHC.Event.EPoll.$fShowEvent6 sat_s9zWX;
          1# ->
              let {
                sat_s9zXa [Occ=Once] :: [GHC.Types.Char]
                [LclId] =
                    [ww1_s9zWJ ww2_s9zWK w_s9zWL] \u []
                        let {
                          sat_s9zX9 [Occ=Once, Dmd=<L,1*U>] :: [GHC.Types.Char]
                          [LclId] =
                              [ww1_s9zWJ ww2_s9zWK w_s9zWL] \s []
                                  let {
                                    sat_s9zX8 [Occ=Once] :: [GHC.Types.Char]
                                    [LclId] =
                                        [ww1_s9zWJ ww2_s9zWK w_s9zWL] \u []
                                            let {
                                              sat_s9zX7 [Occ=Once] :: GHC.Base.String
                                              [LclId] =
                                                  [ww2_s9zWK w_s9zWL] \u []
                                                      let {
                                                        sat_s9zX6 [Occ=Once, Dmd=<L,1*U>]
                                                          :: [GHC.Types.Char]
                                                        [LclId] =
                                                            [ww2_s9zWK w_s9zWL] \s []
                                                                let {
                                                                  sat_s9zX5 [Occ=Once]
                                                                    :: [GHC.Types.Char]
                                                                  [LclId] =
                                                                      [ww2_s9zWK w_s9zWL] \u []
                                                                          case ww2_s9zWK of {
                                                                            GHC.Int.I32# x#_s9zWZ [Occ=Once] ->
                                                                                let {
                                                                                  sat_s9zX1 [Occ=Once]
                                                                                    :: GHC.Base.String
                                                                                  [LclId] =
                                                                                      [w_s9zWL] \u []
                                                                                          let {
                                                                                            sat_s9zX0 [Occ=Once]
                                                                                              :: [GHC.Types.Char]
                                                                                            [LclId] =
                                                                                                CCCS :! [GHC.Show.$fShow(,)2
                                                                                                         w_s9zWL];
                                                                                          } in 
                                                                                            GHC.CString.unpackAppendCString#
                                                                                                GHC.Event.EPoll.$fShowEPollFd2
                                                                                                sat_s9zX0;
                                                                                } in 
                                                                                  case
                                                                                      GHC.Show.$wshowSignedInt
                                                                                          0#
                                                                                          x#_s9zWZ
                                                                                          sat_s9zX1
                                                                                  of
                                                                                  { (#,#) ww5_s9zX3 [Occ=Once]
                                                                                          ww6_s9zX4 [Occ=Once] ->
                                                                                        : [ww5_s9zX3
                                                                                           ww6_s9zX4];
                                                                                  };
                                                                          };
                                                                } in 
                                                                  GHC.CString.unpackAppendCString#
                                                                      GHC.Event.EPoll.$fShowEvent2
                                                                      sat_s9zX5;
                                                      } in 
                                                        GHC.Base.++
                                                            GHC.Show.showCommaSpace1 sat_s9zX6;
                                            } in 
                                              GHC.Event.EPoll.$w$cshowsPrec2 0# ww1_s9zWJ sat_s9zX7;
                                  } in 
                                    GHC.CString.unpackAppendCString#
                                        GHC.Event.EPoll.$fShowEvent5 sat_s9zX8;
                        } in  GHC.Base.++ GHC.Event.EPoll.$fShowEvent6 sat_s9zX9;
              } in  : [GHC.Show.$fShow(,)4 sat_s9zXa];
        };

GHC.Event.EPoll.$fShowEvent_$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Int -> GHC.Event.EPoll.Event -> GHC.Show.ShowS
[GblId,
 Arity=3,
 Str=<S(S),1*U(U)><S,1*U(1*U(U),1*U(U))><L,U>,
 Unf=OtherCon []] =
    [] \r [w_s9zXb w1_s9zXc w2_s9zXd]
        case w_s9zXb of {
          GHC.Types.I# ww1_s9zXf [Occ=Once] ->
              case w1_s9zXc of {
                GHC.Event.EPoll.Event ww3_s9zXh [Occ=Once] ww4_s9zXi [Occ=Once] ->
                    GHC.Event.EPoll.$w$cshowsPrec1
                        ww1_s9zXf ww3_s9zXh ww4_s9zXi w2_s9zXd;
              };
        };

GHC.Event.EPoll.$fShowEvent8 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [0#];

GHC.Event.EPoll.$fShowEvent_$cshow
  :: GHC.Event.EPoll.Event -> GHC.Base.String
[GblId, Arity=1, Str=<S,1*U(1*U(U),1*U(U))>, Unf=OtherCon []] =
    [] \r [x_s9zXj]
        case x_s9zXj of {
          GHC.Event.EPoll.Event ww1_s9zXl [Occ=Once] ww2_s9zXm [Occ=Once] ->
              GHC.Event.EPoll.$w$cshowsPrec1 0# ww1_s9zXl ww2_s9zXm GHC.Types.[];
        };

GHC.Event.EPoll.$fShowEvent1
  :: GHC.Event.EPoll.Event -> GHC.Show.ShowS
[GblId,
 Arity=2,
 Str=<S,1*U(1*U(U),1*U(U))><L,U>,
 Unf=OtherCon []] =
    [] \r [w_s9zXn w1_s9zXo]
        case w_s9zXn of {
          GHC.Event.EPoll.Event ww1_s9zXq [Occ=Once] ww2_s9zXr [Occ=Once] ->
              GHC.Event.EPoll.$w$cshowsPrec1 0# ww1_s9zXq ww2_s9zXr w1_s9zXo;
        };

GHC.Event.EPoll.$fShowEvent_$cshowList
  :: [GHC.Event.EPoll.Event] -> GHC.Show.ShowS
[GblId, Arity=2, Str=<S,1*U><L,U>, Unf=OtherCon []] =
    [] \r [ls_s9zXs s_s9zXt]
        GHC.Show.showList__ GHC.Event.EPoll.$fShowEvent1 ls_s9zXs s_s9zXt;

GHC.Event.EPoll.$fShowEvent [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show GHC.Event.EPoll.Event
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Event.EPoll.$fShowEvent_$cshowsPrec
                                    GHC.Event.EPoll.$fShowEvent_$cshow
                                    GHC.Event.EPoll.$fShowEvent_$cshowList];

GHC.Event.EPoll.$fFiniteBitsEventType [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits GHC.Event.EPoll.EventType
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [GHC.Event.EPoll.$fBitsEventType
                                           GHC.Word.$fBitsWord32_$cfiniteBitSize
                                           GHC.Word.$fFiniteBitsWord32_$ccountLeadingZeros
                                           GHC.Word.$fFiniteBitsWord32_$ccountTrailingZeros];

GHC.Event.EPoll.$fNumEventType [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num GHC.Event.EPoll.EventType
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Word.$fNumWord32_$c+
                                  GHC.Word.$fNumWord32_$c-
                                  GHC.Word.$fNumWord32_$c*
                                  GHC.Word.$fNumWord32_$cnegate
                                  GHC.Word.$fNumWord32_$cabs
                                  GHC.Word.$fNumWord32_$csignum
                                  GHC.Word.$fNumWord32_$cfromInteger];

GHC.Event.EPoll.$fEqEPollFd [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq GHC.Event.EPoll.EPollFd
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt32 GHC.Int.neInt32];

lvl_r9y01 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "epollControl"#;

lvl1_r9y02 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl_r9y01;

GHC.Event.EPoll.new6
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> GHC.Prim.Int#
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, Foreign.C.Types.CInt #)
[GblId, Arity=2, Str=<B,U><B,U>x, Unf=OtherCon []] =
    [] \r [ds2_s9zXu ds3_s9zXv]
        case narrow32Int# [ds3_s9zXv] of sat_s9zXw {
          __DEFAULT -> Foreign.C.Error.$wlvl lvl1_r9y02 sat_s9zXw ds2_s9zXu;
        };

lvl2_r9y03 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "epollWaitNonBlock"#;

lvl3_r9y04 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl2_r9y03;

lvl4_r9y05 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "epollWait"#;

lvl5_r9y06 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl4_r9y05;

GHC.Event.EPoll.new8 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "modifyFdOnce"#;

GHC.Event.EPoll.new7 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.Event.EPoll.new8;

lvl6_r9y07 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [3#];

lvl7_r9y08 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [1#];

lvl8_r9y09 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [2#];

GHC.Event.EPoll.new10
  :: GHC.Event.EPoll.EPoll
     -> GHC.Base.Maybe GHC.Event.Internal.Timeout
     -> (System.Posix.Types.Fd
         -> GHC.Event.Internal.Event -> GHC.Types.IO ())
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=4,
 Str=<S(SS),1*U(U,U)><S,1*U><L,C(C1(C1(U(U,A))))><S,U>,
 Unf=OtherCon []] =
    [] \r [ep_s9zXx mtimeout_s9zXy f_s9zXz eta_s9zXA]
        case ep_s9zXx of {
          GHC.Event.EPoll.EPoll dt_s9zXC [Occ=Once*] dt1_s9zXD ->
              case readMutVar# [dt1_s9zXD eta_s9zXA] of {
                (#,#) ipv_s9zXF [Occ=Once*] ipv1_s9zXG [Occ=Once!] ->
                    case ipv1_s9zXG of {
                      GHC.Event.Array.AC es_s9zXI [Occ=Once!] _ [Occ=Dead] dt3_s9zXK ->
                          case es_s9zXI of wild2_s9zXL {
                            GHC.ForeignPtr.ForeignPtr ds2_s9zXM [Occ=Once*]
                                                      r_s9zXN [Occ=Once] ->
                                let-no-escape {
                                  $w$j1_s9zXO [InlPrag=NOUSERINLINE[0],
                                               Occ=Once*!T[2],
                                               Dmd=<L,1*C1(C1(U(U,U)))>]
                                    :: GHC.Prim.State# GHC.Prim.RealWorld
                                       -> GHC.Prim.Int#
                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
                                  [LclId[JoinId(2)], Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
                                      sat-only [f_s9zXz
                                                dt1_s9zXD
                                                dt3_s9zXK
                                                wild2_s9zXL
                                                r_s9zXN] \r [w_s9zXP ww_s9zXQ]
                                          case touch# [r_s9zXN w_s9zXP] of s'_s9zXR {
                                            __DEFAULT ->
                                                let {
                                                  sat_s9zXS [Occ=Once]
                                                    :: GHC.Event.Array.AC GHC.Event.EPoll.Event
                                                  [LclId] =
                                                      CCCS GHC.Event.Array.AC! [wild2_s9zXL
                                                                                ww_s9zXQ
                                                                                dt3_s9zXK];
                                                } in 
                                                  case
                                                      writeMutVar# [dt1_s9zXD sat_s9zXS s'_s9zXR]
                                                  of
                                                  s2#_s9zXT
                                                  { __DEFAULT ->
                                                        case ># [ww_s9zXQ 0#] of {
                                                          __DEFAULT ->
                                                              let {
                                                                sat_s9zXV [Occ=Once]
                                                                  :: GHC.Types.Int
                                                                [LclId] =
                                                                    CCCS GHC.Types.I#! [ww_s9zXQ];
                                                              } in  (#,#) [s2#_s9zXT sat_s9zXV];
                                                          1# ->
                                                              case
                                                                  readMutVar# [dt1_s9zXD s2#_s9zXT]
                                                              of
                                                              { (#,#) ipv2_s9zXX [Occ=Once]
                                                                      ipv3_s9zXY [Occ=Once!] ->
                                                                    case ipv3_s9zXY of {
                                                                      GHC.Event.Array.AC es1_s9zY0 [Occ=Once!]
                                                                                         dt4_s9zY1 [Occ=Once]
                                                                                         _ [Occ=Dead] ->
                                                                          case es1_s9zY0 of {
                                                                            GHC.ForeignPtr.ForeignPtr fo_s9zY4 [Occ=OnceL]
                                                                                                      ds5_s9zY5 [Occ=Once] ->
                                                                                case
                                                                                    *# [dt4_s9zY1
                                                                                        12#]
                                                                                of
                                                                                offset_s9zY6 [Dmd=<S,U>]
                                                                                { __DEFAULT ->
                                                                                      let-no-escape {
                                                                                        exit_s9zY7 [Occ=OnceL!T[1],
                                                                                                    Dmd=<L,C(U(U,U))>]
                                                                                          :: GHC.Prim.State#
                                                                                               GHC.Prim.RealWorld
                                                                                             -> (# GHC.Prim.State#
                                                                                                     GHC.Prim.RealWorld,
                                                                                                   GHC.Types.Int #)
                                                                                        [LclId[JoinId(1)],
                                                                                         Arity=1,
                                                                                         Str=<S,U>,
                                                                                         Unf=OtherCon []] =
                                                                                            sat-only [dt1_s9zXD
                                                                                                      ww_s9zXQ
                                                                                                      ds5_s9zY5] \r [w1_s9zY8]
                                                                                                case
                                                                                                    touch# [ds5_s9zY5
                                                                                                            w1_s9zY8]
                                                                                                of
                                                                                                s'1_s9zY9
                                                                                                { __DEFAULT ->
                                                                                                      case
                                                                                                          readMutVar# [dt1_s9zXD
                                                                                                                       s'1_s9zY9]
                                                                                                      of
                                                                                                      { (#,#) ipv4_s9zYb [Occ=Once*]
                                                                                                              ipv5_s9zYc [Occ=Once!] ->
                                                                                                            case
                                                                                                                ipv5_s9zYc
                                                                                                            of
                                                                                                            { GHC.Event.Array.AC _ [Occ=Dead]
                                                                                                                                 _ [Occ=Dead]
                                                                                                                                 dt7_s9zYg ->
                                                                                                                  case
                                                                                                                      ==# [dt7_s9zYg
                                                                                                                           ww_s9zXQ]
                                                                                                                  of
                                                                                                                  { __DEFAULT ->
                                                                                                                        let {
                                                                                                                          sat_s9zYi [Occ=Once]
                                                                                                                            :: GHC.Types.Int
                                                                                                                          [LclId] =
                                                                                                                              CCCS GHC.Types.I#! [ww_s9zXQ];
                                                                                                                        } in 
                                                                                                                          (#,#) [ipv4_s9zYb
                                                                                                                                 sat_s9zYi];
                                                                                                                    1# ->
                                                                                                                        case
                                                                                                                            readMutVar# [dt1_s9zXD
                                                                                                                                         ipv4_s9zYb]
                                                                                                                        of
                                                                                                                        { (#,#) ipv6_s9zYk [Occ=Once*]
                                                                                                                                ipv7_s9zYl [Occ=Once!] ->
                                                                                                                              case
                                                                                                                                  ipv7_s9zYl
                                                                                                                              of
                                                                                                                              { GHC.Event.Array.AC ds_s9zYn [Occ=Once!]
                                                                                                                                                   dt8_s9zYo [Occ=Once*]
                                                                                                                                                   dt9_s9zYp ->
                                                                                                                                    case
                                                                                                                                        ds_s9zYn
                                                                                                                                    of
                                                                                                                                    { GHC.ForeignPtr.ForeignPtr fo1_s9zYr
                                                                                                                                                                ds9_s9zYs [Occ=Once*] ->
                                                                                                                                          case
                                                                                                                                              *# [2#
                                                                                                                                                  dt7_s9zYg]
                                                                                                                                          of
                                                                                                                                          ww1_s9zYt [Dmd=<S,U>]
                                                                                                                                          { __DEFAULT ->
                                                                                                                                                case
                                                                                                                                                    ># [ww1_s9zYt
                                                                                                                                                        dt9_s9zYp]
                                                                                                                                                of
                                                                                                                                                { __DEFAULT ->
                                                                                                                                                      let {
                                                                                                                                                        sat_s9zYv [Occ=Once]
                                                                                                                                                          :: GHC.Types.Int
                                                                                                                                                        [LclId] =
                                                                                                                                                            CCCS GHC.Types.I#! [ww_s9zXQ];
                                                                                                                                                      } in 
                                                                                                                                                        (#,#) [ipv6_s9zYk
                                                                                                                                                               sat_s9zYv];
                                                                                                                                                  1# ->
                                                                                                                                                      case
                                                                                                                                                          -# [ww1_s9zYt
                                                                                                                                                              1#]
                                                                                                                                                      of
                                                                                                                                                      n1_s9zYw [Dmd=<S,U>]
                                                                                                                                                      { __DEFAULT ->
                                                                                                                                                            case
                                                                                                                                                                uncheckedIShiftRA# [n1_s9zYw
                                                                                                                                                                                    1#]
                                                                                                                                                            of
                                                                                                                                                            sat_s9zYy
                                                                                                                                                            { __DEFAULT ->
                                                                                                                                                                  case
                                                                                                                                                                      orI# [n1_s9zYw
                                                                                                                                                                            sat_s9zYy]
                                                                                                                                                                  of
                                                                                                                                                                  ipv8_s9zYx [Dmd=<S,U>]
                                                                                                                                                                  { __DEFAULT ->
                                                                                                                                                                        case
                                                                                                                                                                            uncheckedIShiftRA# [ipv8_s9zYx
                                                                                                                                                                                                2#]
                                                                                                                                                                        of
                                                                                                                                                                        sat_s9zYA
                                                                                                                                                                        { __DEFAULT ->
                                                                                                                                                                              case
                                                                                                                                                                                  orI# [ipv8_s9zYx
                                                                                                                                                                                        sat_s9zYA]
                                                                                                                                                                              of
                                                                                                                                                                              ipv9_s9zYz [Dmd=<S,U>]
                                                                                                                                                                              { __DEFAULT ->
                                                                                                                                                                                    case
                                                                                                                                                                                        uncheckedIShiftRA# [ipv9_s9zYz
                                                                                                                                                                                                            4#]
                                                                                                                                                                                    of
                                                                                                                                                                                    sat_s9zYC
                                                                                                                                                                                    { __DEFAULT ->
                                                                                                                                                                                          case
                                                                                                                                                                                              orI# [ipv9_s9zYz
                                                                                                                                                                                                    sat_s9zYC]
                                                                                                                                                                                          of
                                                                                                                                                                                          ipv10_s9zYB [Dmd=<S,U>]
                                                                                                                                                                                          { __DEFAULT ->
                                                                                                                                                                                                case
                                                                                                                                                                                                    uncheckedIShiftRA# [ipv10_s9zYB
                                                                                                                                                                                                                        8#]
                                                                                                                                                                                                of
                                                                                                                                                                                                sat_s9zYE
                                                                                                                                                                                                { __DEFAULT ->
                                                                                                                                                                                                      case
                                                                                                                                                                                                          orI# [ipv10_s9zYB
                                                                                                                                                                                                                sat_s9zYE]
                                                                                                                                                                                                      of
                                                                                                                                                                                                      ipv11_s9zYD [Dmd=<S,U>]
                                                                                                                                                                                                      { __DEFAULT ->
                                                                                                                                                                                                            case
                                                                                                                                                                                                                uncheckedIShiftRA# [ipv11_s9zYD
                                                                                                                                                                                                                                    16#]
                                                                                                                                                                                                            of
                                                                                                                                                                                                            sat_s9zYG
                                                                                                                                                                                                            { __DEFAULT ->
                                                                                                                                                                                                                  case
                                                                                                                                                                                                                      orI# [ipv11_s9zYD
                                                                                                                                                                                                                            sat_s9zYG]
                                                                                                                                                                                                                  of
                                                                                                                                                                                                                  ipv12_s9zYF [Dmd=<S,U>]
                                                                                                                                                                                                                  { __DEFAULT ->
                                                                                                                                                                                                                        case
                                                                                                                                                                                                                            uncheckedIShiftRA# [ipv12_s9zYF
                                                                                                                                                                                                                                                32#]
                                                                                                                                                                                                                        of
                                                                                                                                                                                                                        sat_s9zYI
                                                                                                                                                                                                                        { __DEFAULT ->
                                                                                                                                                                                                                              case
                                                                                                                                                                                                                                  orI# [ipv12_s9zYF
                                                                                                                                                                                                                                        sat_s9zYI]
                                                                                                                                                                                                                              of
                                                                                                                                                                                                                              sat_s9zYJ
                                                                                                                                                                                                                              { __DEFAULT ->
                                                                                                                                                                                                                                    case
                                                                                                                                                                                                                                        +# [sat_s9zYJ
                                                                                                                                                                                                                                            1#]
                                                                                                                                                                                                                                    of
                                                                                                                                                                                                                                    x_s9zYH [Dmd=<S,U>]
                                                                                                                                                                                                                                    { __DEFAULT ->
                                                                                                                                                                                                                                          case
                                                                                                                                                                                                                                              *# [x_s9zYH
                                                                                                                                                                                                                                                  12#]
                                                                                                                                                                                                                                          of
                                                                                                                                                                                                                                          x1_s9zYK [Dmd=<S,U>]
                                                                                                                                                                                                                                          { __DEFAULT ->
                                                                                                                                                                                                                                                case
                                                                                                                                                                                                                                                    <# [x1_s9zYK
                                                                                                                                                                                                                                                        0#]
                                                                                                                                                                                                                                                of
                                                                                                                                                                                                                                                { __DEFAULT ->
                                                                                                                                                                                                                                                      case
                                                                                                                                                                                                                                                          newPinnedByteArray# [x1_s9zYK
                                                                                                                                                                                                                                                                               ipv6_s9zYk]
                                                                                                                                                                                                                                                      of
                                                                                                                                                                                                                                                      { (#,#) ipv13_s9zYN [Occ=Once*]
                                                                                                                                                                                                                                                              ipv14_s9zYO ->
                                                                                                                                                                                                                                                            case
                                                                                                                                                                                                                                                                byteArrayContents# [ipv14_s9zYO]
                                                                                                                                                                                                                                                            of
                                                                                                                                                                                                                                                            ipv15_s9zYP
                                                                                                                                                                                                                                                            { __DEFAULT ->
                                                                                                                                                                                                                                                                  let {
                                                                                                                                                                                                                                                                    ipv16_s9zYQ
                                                                                                                                                                                                                                                                      :: GHC.ForeignPtr.ForeignPtrContents
                                                                                                                                                                                                                                                                    [LclId,
                                                                                                                                                                                                                                                                     Unf=OtherCon []] =
                                                                                                                                                                                                                                                                        CCCS GHC.ForeignPtr.PlainPtr! [ipv14_s9zYO];
                                                                                                                                                                                                                                                                  } in 
                                                                                                                                                                                                                                                                    case
                                                                                                                                                                                                                                                                        eqAddr# [fo1_s9zYr
                                                                                                                                                                                                                                                                                 __NULL]
                                                                                                                                                                                                                                                                    of
                                                                                                                                                                                                                                                                    { __DEFAULT ->
                                                                                                                                                                                                                                                                          case
                                                                                                                                                                                                                                                                              ># [dt9_s9zYp
                                                                                                                                                                                                                                                                                  0#]
                                                                                                                                                                                                                                                                          of
                                                                                                                                                                                                                                                                          { __DEFAULT ->
                                                                                                                                                                                                                                                                                case
                                                                                                                                                                                                                                                                                    touch# [ds9_s9zYs
                                                                                                                                                                                                                                                                                            ipv13_s9zYN]
                                                                                                                                                                                                                                                                                of
                                                                                                                                                                                                                                                                                s'2_s9zYT
                                                                                                                                                                                                                                                                                { __DEFAULT ->
                                                                                                                                                                                                                                                                                      case
                                                                                                                                                                                                                                                                                          /=# [x_s9zYH
                                                                                                                                                                                                                                                                                               dt9_s9zYp]
                                                                                                                                                                                                                                                                                      of
                                                                                                                                                                                                                                                                                      { __DEFAULT ->
                                                                                                                                                                                                                                                                                            let {
                                                                                                                                                                                                                                                                                              sat_s9zYV [Occ=Once]
                                                                                                                                                                                                                                                                                                :: GHC.Types.Int
                                                                                                                                                                                                                                                                                              [LclId] =
                                                                                                                                                                                                                                                                                                  CCCS GHC.Types.I#! [ww_s9zXQ];
                                                                                                                                                                                                                                                                                            } in 
                                                                                                                                                                                                                                                                                              (#,#) [s'2_s9zYT
                                                                                                                                                                                                                                                                                                     sat_s9zYV];
                                                                                                                                                                                                                                                                                        1# ->
                                                                                                                                                                                                                                                                                            let {
                                                                                                                                                                                                                                                                                              sat_s9zYW [Occ=Once]
                                                                                                                                                                                                                                                                                                :: GHC.ForeignPtr.ForeignPtr
                                                                                                                                                                                                                                                                                                     GHC.Event.EPoll.Event
                                                                                                                                                                                                                                                                                              [LclId] =
                                                                                                                                                                                                                                                                                                  CCCS GHC.ForeignPtr.ForeignPtr! [ipv15_s9zYP
                                                                                                                                                                                                                                                                                                                                   ipv16_s9zYQ]; } in
                                                                                                                                                                                                                                                                                            let {
                                                                                                                                                                                                                                                                                              sat_s9zYX [Occ=Once]
                                                                                                                                                                                                                                                                                                :: GHC.Event.Array.AC
                                                                                                                                                                                                                                                                                                     GHC.Event.EPoll.Event
                                                                                                                                                                                                                                                                                              [LclId] =
                                                                                                                                                                                                                                                                                                  CCCS GHC.Event.Array.AC! [sat_s9zYW
                                                                                                                                                                                                                                                                                                                            dt8_s9zYo
                                                                                                                                                                                                                                                                                                                            x_s9zYH];
                                                                                                                                                                                                                                                                                            } in 
                                                                                                                                                                                                                                                                                              case
                                                                                                                                                                                                                                                                                                  writeMutVar# [dt1_s9zXD
                                                                                                                                                                                                                                                                                                                sat_s9zYX
                                                                                                                                                                                                                                                                                                                s'2_s9zYT]
                                                                                                                                                                                                                                                                                              of
                                                                                                                                                                                                                                                                                              s2#1_s9zYY
                                                                                                                                                                                                                                                                                              { __DEFAULT ->
                                                                                                                                                                                                                                                                                                    let {
                                                                                                                                                                                                                                                                                                      sat_s9zYZ [Occ=Once]
                                                                                                                                                                                                                                                                                                        :: GHC.Types.Int
                                                                                                                                                                                                                                                                                                      [LclId] =
                                                                                                                                                                                                                                                                                                          CCCS GHC.Types.I#! [ww_s9zXQ];
                                                                                                                                                                                                                                                                                                    } in 
                                                                                                                                                                                                                                                                                                      (#,#) [s2#1_s9zYY
                                                                                                                                                                                                                                                                                                             sat_s9zYZ];
                                                                                                                                                                                                                                                                                              };
                                                                                                                                                                                                                                                                                      };
                                                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                                            1# ->
                                                                                                                                                                                                                                                                                case
                                                                                                                                                                                                                                                                                    *# [dt9_s9zYp
                                                                                                                                                                                                                                                                                        12#]
                                                                                                                                                                                                                                                                                of
                                                                                                                                                                                                                                                                                sat_s9zZ1
                                                                                                                                                                                                                                                                                { __DEFAULT ->
                                                                                                                                                                                                                                                                                      case
                                                                                                                                                                                                                                                                                          int2Word# [sat_s9zZ1]
                                                                                                                                                                                                                                                                                      of
                                                                                                                                                                                                                                                                                      sat_s9zZ2
                                                                                                                                                                                                                                                                                      { __DEFAULT ->
                                                                                                                                                                                                                                                                                            case
                                                                                                                                                                                                                                                                                                __pkg_ccall base-4.11.0.0 [ipv15_s9zYP
                                                                                                                                                                                                                                                                                                                           fo1_s9zYr
                                                                                                                                                                                                                                                                                                                           sat_s9zZ2
                                                                                                                                                                                                                                                                                                                           ipv13_s9zYN]
                                                                                                                                                                                                                                                                                            of
                                                                                                                                                                                                                                                                                            { (#,#) ds10_s9zZ4 [Occ=Once]
                                                                                                                                                                                                                                                                                                    _ [Occ=Dead] ->
                                                                                                                                                                                                                                                                                                  case
                                                                                                                                                                                                                                                                                                      touch# [ipv16_s9zYQ
                                                                                                                                                                                                                                                                                                              ds10_s9zZ4]
                                                                                                                                                                                                                                                                                                  of
                                                                                                                                                                                                                                                                                                  s'2_s9zZ6
                                                                                                                                                                                                                                                                                                  { __DEFAULT ->
                                                                                                                                                                                                                                                                                                        case
                                                                                                                                                                                                                                                                                                            touch# [ds9_s9zYs
                                                                                                                                                                                                                                                                                                                    s'2_s9zZ6]
                                                                                                                                                                                                                                                                                                        of
                                                                                                                                                                                                                                                                                                        s'3_s9zZ7
                                                                                                                                                                                                                                                                                                        { __DEFAULT ->
                                                                                                                                                                                                                                                                                                              case
                                                                                                                                                                                                                                                                                                                  /=# [x_s9zYH
                                                                                                                                                                                                                                                                                                                       dt9_s9zYp]
                                                                                                                                                                                                                                                                                                              of
                                                                                                                                                                                                                                                                                                              { __DEFAULT ->
                                                                                                                                                                                                                                                                                                                    let {
                                                                                                                                                                                                                                                                                                                      sat_s9zZ9 [Occ=Once]
                                                                                                                                                                                                                                                                                                                        :: GHC.Types.Int
                                                                                                                                                                                                                                                                                                                      [LclId] =
                                                                                                                                                                                                                                                                                                                          CCCS GHC.Types.I#! [ww_s9zXQ];
                                                                                                                                                                                                                                                                                                                    } in 
                                                                                                                                                                                                                                                                                                                      (#,#) [s'3_s9zZ7
                                                                                                                                                                                                                                                                                                                             sat_s9zZ9];
                                                                                                                                                                                                                                                                                                                1# ->
                                                                                                                                                                                                                                                                                                                    let {
                                                                                                                                                                                                                                                                                                                      sat_s9zZa [Occ=Once]
                                                                                                                                                                                                                                                                                                                        :: GHC.ForeignPtr.ForeignPtr
                                                                                                                                                                                                                                                                                                                             GHC.Event.EPoll.Event
                                                                                                                                                                                                                                                                                                                      [LclId] =
                                                                                                                                                                                                                                                                                                                          CCCS GHC.ForeignPtr.ForeignPtr! [ipv15_s9zYP
                                                                                                                                                                                                                                                                                                                                                           ipv16_s9zYQ]; } in
                                                                                                                                                                                                                                                                                                                    let {
                                                                                                                                                                                                                                                                                                                      sat_s9zZb [Occ=Once]
                                                                                                                                                                                                                                                                                                                        :: GHC.Event.Array.AC
                                                                                                                                                                                                                                                                                                                             GHC.Event.EPoll.Event
                                                                                                                                                                                                                                                                                                                      [LclId] =
                                                                                                                                                                                                                                                                                                                          CCCS GHC.Event.Array.AC! [sat_s9zZa
                                                                                                                                                                                                                                                                                                                                                    dt8_s9zYo
                                                                                                                                                                                                                                                                                                                                                    x_s9zYH];
                                                                                                                                                                                                                                                                                                                    } in 
                                                                                                                                                                                                                                                                                                                      case
                                                                                                                                                                                                                                                                                                                          writeMutVar# [dt1_s9zXD
                                                                                                                                                                                                                                                                                                                                        sat_s9zZb
                                                                                                                                                                                                                                                                                                                                        s'3_s9zZ7]
                                                                                                                                                                                                                                                                                                                      of
                                                                                                                                                                                                                                                                                                                      s2#1_s9zZc
                                                                                                                                                                                                                                                                                                                      { __DEFAULT ->
                                                                                                                                                                                                                                                                                                                            let {
                                                                                                                                                                                                                                                                                                                              sat_s9zZd [Occ=Once]
                                                                                                                                                                                                                                                                                                                                :: GHC.Types.Int
                                                                                                                                                                                                                                                                                                                              [LclId] =
                                                                                                                                                                                                                                                                                                                                  CCCS GHC.Types.I#! [ww_s9zXQ];
                                                                                                                                                                                                                                                                                                                            } in 
                                                                                                                                                                                                                                                                                                                              (#,#) [s2#1_s9zZc
                                                                                                                                                                                                                                                                                                                                     sat_s9zZd];
                                                                                                                                                                                                                                                                                                                      };
                                                                                                                                                                                                                                                                                                              };
                                                                                                                                                                                                                                                                                                        };
                                                                                                                                                                                                                                                                                                  };
                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                      };
                                                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                                          };
                                                                                                                                                                                                                                                                      1# ->
                                                                                                                                                                                                                                                                          case
                                                                                                                                                                                                                                                                              touch# [ds9_s9zYs
                                                                                                                                                                                                                                                                                      ipv13_s9zYN]
                                                                                                                                                                                                                                                                          of
                                                                                                                                                                                                                                                                          s'2_s9zZe
                                                                                                                                                                                                                                                                          { __DEFAULT ->
                                                                                                                                                                                                                                                                                case
                                                                                                                                                                                                                                                                                    /=# [x_s9zYH
                                                                                                                                                                                                                                                                                         dt9_s9zYp]
                                                                                                                                                                                                                                                                                of
                                                                                                                                                                                                                                                                                { __DEFAULT ->
                                                                                                                                                                                                                                                                                      let {
                                                                                                                                                                                                                                                                                        sat_s9zZg [Occ=Once]
                                                                                                                                                                                                                                                                                          :: GHC.Types.Int
                                                                                                                                                                                                                                                                                        [LclId] =
                                                                                                                                                                                                                                                                                            CCCS GHC.Types.I#! [ww_s9zXQ];
                                                                                                                                                                                                                                                                                      } in 
                                                                                                                                                                                                                                                                                        (#,#) [s'2_s9zZe
                                                                                                                                                                                                                                                                                               sat_s9zZg];
                                                                                                                                                                                                                                                                                  1# ->
                                                                                                                                                                                                                                                                                      let {
                                                                                                                                                                                                                                                                                        sat_s9zZh [Occ=Once]
                                                                                                                                                                                                                                                                                          :: GHC.ForeignPtr.ForeignPtr
                                                                                                                                                                                                                                                                                               GHC.Event.EPoll.Event
                                                                                                                                                                                                                                                                                        [LclId] =
                                                                                                                                                                                                                                                                                            CCCS GHC.ForeignPtr.ForeignPtr! [ipv15_s9zYP
                                                                                                                                                                                                                                                                                                                             ipv16_s9zYQ]; } in
                                                                                                                                                                                                                                                                                      let {
                                                                                                                                                                                                                                                                                        sat_s9zZi [Occ=Once]
                                                                                                                                                                                                                                                                                          :: GHC.Event.Array.AC
                                                                                                                                                                                                                                                                                               GHC.Event.EPoll.Event
                                                                                                                                                                                                                                                                                        [LclId] =
                                                                                                                                                                                                                                                                                            CCCS GHC.Event.Array.AC! [sat_s9zZh
                                                                                                                                                                                                                                                                                                                      dt8_s9zYo
                                                                                                                                                                                                                                                                                                                      x_s9zYH];
                                                                                                                                                                                                                                                                                      } in 
                                                                                                                                                                                                                                                                                        case
                                                                                                                                                                                                                                                                                            writeMutVar# [dt1_s9zXD
                                                                                                                                                                                                                                                                                                          sat_s9zZi
                                                                                                                                                                                                                                                                                                          s'2_s9zZe]
                                                                                                                                                                                                                                                                                        of
                                                                                                                                                                                                                                                                                        s2#1_s9zZj
                                                                                                                                                                                                                                                                                        { __DEFAULT ->
                                                                                                                                                                                                                                                                                              let {
                                                                                                                                                                                                                                                                                                sat_s9zZk [Occ=Once]
                                                                                                                                                                                                                                                                                                  :: GHC.Types.Int
                                                                                                                                                                                                                                                                                                [LclId] =
                                                                                                                                                                                                                                                                                                    CCCS GHC.Types.I#! [ww_s9zXQ];
                                                                                                                                                                                                                                                                                              } in 
                                                                                                                                                                                                                                                                                                (#,#) [s2#1_s9zZj
                                                                                                                                                                                                                                                                                                       sat_s9zZk];
                                                                                                                                                                                                                                                                                        };
                                                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                                          };
                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                      };
                                                                                                                                                                                                                                                  1# ->
                                                                                                                                                                                                                                                      GHC.ForeignPtr.mallocPlainForeignPtrBytes2;
                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                          };
                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                              };
                                                                                                                                                                                                                        };
                                                                                                                                                                                                                  };
                                                                                                                                                                                                            };
                                                                                                                                                                                                      };
                                                                                                                                                                                                };
                                                                                                                                                                                          };
                                                                                                                                                                                    };
                                                                                                                                                                              };
                                                                                                                                                                        };
                                                                                                                                                                  };
                                                                                                                                                            };
                                                                                                                                                      };
                                                                                                                                                };
                                                                                                                                          };
                                                                                                                                    };
                                                                                                                              };
                                                                                                                        };
                                                                                                                  };
                                                                                                            };
                                                                                                      };
                                                                                                };
                                                                                      } in 
                                                                                        let-no-escape {
                                                                                          $wgo_s9zZm [InlPrag=NOUSERINLINE[0],
                                                                                                      Occ=LoopBreakerT[2]]
                                                                                            :: GHC.Prim.Int#
                                                                                               -> GHC.Prim.State#
                                                                                                    GHC.Prim.RealWorld
                                                                                               -> (# GHC.Prim.State#
                                                                                                       GHC.Prim.RealWorld,
                                                                                                     GHC.Types.Int #)
                                                                                          [LclId[JoinId(2)],
                                                                                           Arity=2,
                                                                                           Str=<S,U><S,U>,
                                                                                           Unf=OtherCon []] =
                                                                                              sat-only [f_s9zXz
                                                                                                        fo_s9zY4
                                                                                                        offset_s9zY6
                                                                                                        exit_s9zY7
                                                                                                        $wgo_s9zZm] \r [ww1_s9zZn
                                                                                                                        w1_s9zZo]
                                                                                                  case
                                                                                                      >=# [ww1_s9zZn
                                                                                                           offset_s9zY6]
                                                                                                  of
                                                                                                  { __DEFAULT ->
                                                                                                        case
                                                                                                            plusAddr# [fo_s9zY4
                                                                                                                       ww1_s9zZn]
                                                                                                        of
                                                                                                        ptr_s9zZq [Dmd=<S,U>]
                                                                                                        { __DEFAULT ->
                                                                                                              case
                                                                                                                  readWord32OffAddr# [ptr_s9zZq
                                                                                                                                      0#
                                                                                                                                      w1_s9zZo]
                                                                                                              of
                                                                                                              { (#,#) ipv4_s9zZs [Occ=Once]
                                                                                                                      ipv5_s9zZt ->
                                                                                                                    case
                                                                                                                        plusAddr# [ptr_s9zZq
                                                                                                                                   4#]
                                                                                                                    of
                                                                                                                    sat_s9zZu
                                                                                                                    { __DEFAULT ->
                                                                                                                          case
                                                                                                                              readInt32OffAddr# [sat_s9zZu
                                                                                                                                                 0#
                                                                                                                                                 ipv4_s9zZs]
                                                                                                                          of
                                                                                                                          { (#,#) ipv6_s9zZw [Occ=Once]
                                                                                                                                  ipv7_s9zZx [Occ=Once] ->
                                                                                                                                let {
                                                                                                                                  sat_s9zZC [Occ=Once]
                                                                                                                                    :: GHC.Event.Internal.Event
                                                                                                                                  [LclId] =
                                                                                                                                      [ipv5_s9zZt] \u []
                                                                                                                                          case
                                                                                                                                              and# [ipv5_s9zZt
                                                                                                                                                    25##]
                                                                                                                                          of
                                                                                                                                          { __DEFAULT ->
                                                                                                                                                case
                                                                                                                                                    and# [ipv5_s9zZt
                                                                                                                                                          28##]
                                                                                                                                                of
                                                                                                                                                { __DEFAULT ->
                                                                                                                                                      lvl6_r9y07;
                                                                                                                                                  0## ->
                                                                                                                                                      lvl7_r9y08;
                                                                                                                                                };
                                                                                                                                            0## ->
                                                                                                                                                case
                                                                                                                                                    and# [ipv5_s9zZt
                                                                                                                                                          28##]
                                                                                                                                                of
                                                                                                                                                { __DEFAULT ->
                                                                                                                                                      lvl8_r9y09;
                                                                                                                                                  0## ->
                                                                                                                                                      GHC.Event.EPoll.$fShowEvent8;
                                                                                                                                                };
                                                                                                                                          }; } in
                                                                                                                                let {
                                                                                                                                  sat_s9zZy [Occ=Once]
                                                                                                                                    :: System.Posix.Types.Fd
                                                                                                                                  [LclId] =
                                                                                                                                      CCCS GHC.Int.I32#! [ipv7_s9zZx];
                                                                                                                                } in 
                                                                                                                                  case
                                                                                                                                      f_s9zXz
                                                                                                                                          sat_s9zZy
                                                                                                                                          sat_s9zZC
                                                                                                                                          ipv6_s9zZw
                                                                                                                                  of
                                                                                                                                  { (#,#) ipv8_s9zZE [Occ=Once]
                                                                                                                                          _ [Occ=Dead] ->
                                                                                                                                        case
                                                                                                                                            +# [ww1_s9zZn
                                                                                                                                                12#]
                                                                                                                                        of
                                                                                                                                        sat_s9zZG
                                                                                                                                        { __DEFAULT ->
                                                                                                                                              $wgo_s9zZm
                                                                                                                                                  sat_s9zZG
                                                                                                                                                  ipv8_s9zZE;
                                                                                                                                        };
                                                                                                                                  };
                                                                                                                          };
                                                                                                                    };
                                                                                                              };
                                                                                                        };
                                                                                                    1# ->
                                                                                                        exit_s9zY7
                                                                                                            w1_s9zZo;
                                                                                                  };
                                                                                        } in 
                                                                                          $wgo_s9zZm
                                                                                              0#
                                                                                              ipv2_s9zXX;
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                          };
                                } in 
                                  case mtimeout_s9zXy of {
                                    GHC.Base.Nothing ->
                                        case narrow32Int# [dt3_s9zXK] of sat_s9zZJ {
                                          __DEFAULT ->
                                              case
                                                  __pkg_ccall base-4.11.0.0 [dt_s9zXC
                                                                             ds2_s9zXM
                                                                             sat_s9zZJ
                                                                             0#
                                                                             ipv_s9zXF]
                                              of
                                              { (#,#) ds_s9zZL [Occ=Once*] ds4_s9zZM [Occ=Once] ->
                                                    case narrow32Int# [ds4_s9zZM] of wild5_s9zZN {
                                                      __DEFAULT -> $w$j1_s9zXO ds_s9zZL wild5_s9zZN;
                                                      -1# ->
                                                          case
                                                              __pkg_ccall base-4.11.0.0 [ds_s9zZL]
                                                          of
                                                          { (#,#) ds5_s9zZQ [Occ=Once*]
                                                                  ds6_s9zZR [Occ=Once] ->
                                                                case narrow32Int# [ds6_s9zZR] of {
                                                                  __DEFAULT ->
                                                                      case
                                                                          Foreign.C.Error.throwErrno1
                                                                              lvl3_r9y04 ds5_s9zZQ
                                                                      of
                                                                      { (#,#) ipv2_s9zZU [Occ=Once]
                                                                              ipv3_s9zZV [Occ=Once] ->
                                                                            case ipv3_s9zZV of {
                                                                              GHC.Int.I32# x#_s9zZX [Occ=Once] ->
                                                                                  $w$j1_s9zXO
                                                                                      ipv2_s9zZU
                                                                                      x#_s9zZX;
                                                                            };
                                                                      };
                                                                  4# -> $w$j1_s9zXO ds5_s9zZQ 0#;
                                                                };
                                                          };
                                                    };
                                              };
                                        };
                                    GHC.Base.Just timeout_s9zZY [Occ=Once!] ->
                                        let-no-escape {
                                          $j_s9zZZ [Occ=Once*!T[1], Dmd=<C(S),1*C1(U(U,U))>]
                                            :: GHC.Prim.Int#
                                               -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                     GHC.Types.Int #)
                                          [LclId[JoinId(1)], Arity=1, Str=<S,U>, Unf=OtherCon []] =
                                              sat-only [dt_s9zXC
                                                        ipv_s9zXF
                                                        dt3_s9zXK
                                                        ds2_s9zXM
                                                        $w$j1_s9zXO] \r [x#_s9A00]
                                                  case narrow32Int# [x#_s9A00] of sat_s9A03 {
                                                    __DEFAULT ->
                                                        case narrow32Int# [dt3_s9zXK] of sat_s9A02 {
                                                          __DEFAULT ->
                                                              case
                                                                  __pkg_ccall_GC base-4.11.0.0 [dt_s9zXC
                                                                                                ds2_s9zXM
                                                                                                sat_s9A02
                                                                                                sat_s9A03
                                                                                                ipv_s9zXF]
                                                              of
                                                              { (#,#) ds_s9A05 [Occ=Once*]
                                                                      ds4_s9A06 [Occ=Once] ->
                                                                    case
                                                                        narrow32Int# [ds4_s9A06]
                                                                    of
                                                                    wild5_s9A07
                                                                    { __DEFAULT ->
                                                                          $w$j1_s9zXO
                                                                              ds_s9A05 wild5_s9A07;
                                                                      -1# ->
                                                                          case
                                                                              __pkg_ccall base-4.11.0.0 [ds_s9A05]
                                                                          of
                                                                          { (#,#) ds5_s9A0a [Occ=Once*]
                                                                                  ds6_s9A0b [Occ=Once] ->
                                                                                case
                                                                                    narrow32Int# [ds6_s9A0b]
                                                                                of
                                                                                { __DEFAULT ->
                                                                                      case
                                                                                          Foreign.C.Error.throwErrno1
                                                                                              lvl5_r9y06
                                                                                              ds5_s9A0a
                                                                                      of
                                                                                      { (#,#) ipv2_s9A0e [Occ=Once]
                                                                                              ipv3_s9A0f [Occ=Once] ->
                                                                                            case
                                                                                                ipv3_s9A0f
                                                                                            of
                                                                                            { GHC.Int.I32# x#1_s9A0h [Occ=Once] ->
                                                                                                  $w$j1_s9zXO
                                                                                                      ipv2_s9A0e
                                                                                                      x#1_s9A0h;
                                                                                            };
                                                                                      };
                                                                                  4# ->
                                                                                      $w$j1_s9zXO
                                                                                          ds5_s9A0a
                                                                                          0#;
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                        } in 
                                          case timeout_s9zZY of {
                                            GHC.Event.Internal.Timeout dt4_s9A0j [Occ=Once] ->
                                                case plusWord# [dt4_s9A0j 1000000##] of sat_s9A0k {
                                                  __DEFAULT ->
                                                      case minusWord# [sat_s9A0k 1##] of sat_s9A0l {
                                                        __DEFAULT ->
                                                            case
                                                                quotWord# [sat_s9A0l 1000000##]
                                                            of
                                                            sat_s9A0m
                                                            { __DEFAULT ->
                                                                  case
                                                                      word2Int# [sat_s9A0m]
                                                                  of
                                                                  sat_s9A0n
                                                                  { __DEFAULT -> $j_s9zZZ sat_s9A0n;
                                                                  };
                                                            };
                                                      };
                                                };
                                            GHC.Event.Internal.Forever -> $j_s9zZZ -1#;
                                          };
                                  };
                          };
                    };
              };
        };

GHC.Event.EPoll.new9
  :: GHC.Event.EPoll.EPoll
     -> System.Posix.Types.Fd
     -> GHC.Event.Internal.Event
     -> GHC.Event.Internal.Event
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
[GblId,
 Arity=5,
 Str=<S(SL),1*U(U,A)><S(S),1*U(U)><S(S),1*U(1*U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ep_s9A0o fd_s9A0p oevt_s9A0q nevt_s9A0r eta_s9A0s]
        case newAlignedPinnedByteArray# [12# 4# eta_s9A0s] of {
          (#,#) ipv_s9A0u [Occ=Once] ipv1_s9A0v [Occ=Once] ->
              case unsafeFreezeByteArray# [ipv1_s9A0v ipv_s9A0u] of {
                (#,#) ipv2_s9A0x [Occ=Once] ipv3_s9A0y ->
                    case nevt_s9A0r of {
                      GHC.Types.I# x#_s9A0A ->
                          let-no-escape {
                            $j_s9A0B [Occ=Once*!T[1], Dmd=<C(S),1*C1(U(U,U))>]
                              :: GHC.Prim.Word#
                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
                            [LclId[JoinId(1)], Arity=1, Str=<S,U>, Unf=OtherCon []] =
                                sat-only [ep_s9A0o
                                          fd_s9A0p
                                          oevt_s9A0q
                                          ipv2_s9A0x
                                          ipv3_s9A0y
                                          x#_s9A0A] \r [x_s9A0C]
                                    case byteArrayContents# [ipv3_s9A0y] of ptr_s9A0D [Dmd=<S,U>] {
                                      __DEFAULT ->
                                          case
                                              writeWord32OffAddr# [ptr_s9A0D 0# x_s9A0C ipv2_s9A0x]
                                          of
                                          s2_s9A0E
                                          { __DEFAULT ->
                                                case fd_s9A0p of {
                                                  GHC.Int.I32# x1_s9A0G ->
                                                      case plusAddr# [ptr_s9A0D 4#] of sat_s9A0H {
                                                        __DEFAULT ->
                                                            case
                                                                writeInt32OffAddr# [sat_s9A0H
                                                                                    0#
                                                                                    x1_s9A0G
                                                                                    s2_s9A0E]
                                                            of
                                                            s1_s9A0I
                                                            { __DEFAULT ->
                                                                  case ep_s9A0o of {
                                                                    GHC.Event.EPoll.EPoll dt_s9A0K [Occ=Once]
                                                                                          _ [Occ=Dead] ->
                                                                        case oevt_s9A0q of {
                                                                          GHC.Types.I# x2_s9A0N [Occ=Once!] ->
                                                                              let-no-escape {
                                                                                $j1_s9A0O [Occ=Once*!T[1],
                                                                                           Dmd=<C(S),1*C1(U(U,U))>]
                                                                                  :: GHC.Prim.Int#
                                                                                     -> (# GHC.Prim.State#
                                                                                             GHC.Prim.RealWorld,
                                                                                           GHC.Types.Bool #)
                                                                                [LclId[JoinId(1)],
                                                                                 Arity=1,
                                                                                 Str=<S,U>,
                                                                                 Unf=OtherCon []] =
                                                                                    sat-only [ipv3_s9A0y
                                                                                              ptr_s9A0D
                                                                                              x1_s9A0G
                                                                                              s1_s9A0I
                                                                                              dt_s9A0K] \r [ds_s9A0P]
                                                                                        case
                                                                                            __pkg_ccall base-4.11.0.0 [dt_s9A0K
                                                                                                                       ds_s9A0P
                                                                                                                       x1_s9A0G
                                                                                                                       ptr_s9A0D
                                                                                                                       s1_s9A0I]
                                                                                        of
                                                                                        { (#,#) ds1_s9A0S [Occ=Once*]
                                                                                                ds5_s9A0T [Occ=Once] ->
                                                                                              case
                                                                                                  narrow32Int# [ds5_s9A0T]
                                                                                              of
                                                                                              { __DEFAULT ->
                                                                                                    case
                                                                                                        touch# [ipv3_s9A0y
                                                                                                                ds1_s9A0S]
                                                                                                    of
                                                                                                    s4_s9A0V
                                                                                                    { __DEFAULT ->
                                                                                                          (#,#) [s4_s9A0V
                                                                                                                 GHC.Types.True];
                                                                                                    };
                                                                                                -1# ->
                                                                                                    case
                                                                                                        __pkg_ccall base-4.11.0.0 [ds1_s9A0S]
                                                                                                    of
                                                                                                    { (#,#) ds6_s9A0Y [Occ=Once]
                                                                                                            ds7_s9A0Z [Occ=Once] ->
                                                                                                          GHC.Event.EPoll.new6
                                                                                                              ds6_s9A0Y
                                                                                                              ds7_s9A0Z;
                                                                                                    };
                                                                                              };
                                                                                        };
                                                                              } in 
                                                                                case x2_s9A0N of {
                                                                                  __DEFAULT ->
                                                                                      case
                                                                                          x#_s9A0A
                                                                                      of
                                                                                      { __DEFAULT ->
                                                                                            $j1_s9A0O
                                                                                                3#;
                                                                                        0# ->
                                                                                            $j1_s9A0O
                                                                                                2#;
                                                                                      };
                                                                                  0# ->
                                                                                      $j1_s9A0O 1#;
                                                                                };
                                                                        };
                                                                  };
                                                            };
                                                      };
                                                };
                                          };
                                    };
                          } in 
                            case andI# [x#_s9A0A 1#] of {
                              __DEFAULT ->
                                  case andI# [x#_s9A0A 2#] of {
                                    __DEFAULT -> $j_s9A0B 5##;
                                    0# -> $j_s9A0B 1##;
                                  };
                              0# ->
                                  case andI# [x#_s9A0A 2#] of {
                                    __DEFAULT -> $j_s9A0B 4##;
                                    0# -> $j_s9A0B 0##;
                                  };
                            };
                    };
              };
        };

GHC.Event.EPoll.new5
  :: GHC.Event.EPoll.EPoll
     -> System.Posix.Types.Fd
     -> GHC.Event.Internal.Event
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
[GblId,
 Arity=4,
 Str=<S(SL),1*U(U,A)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ep_s9A16 fd_s9A17 evt_s9A18 eta_s9A19]
        case evt_s9A18 of {
          GHC.Types.I# x#_s9A1b ->
              let-no-escape {
                $j_s9A1c [Occ=Once*!T[1], Dmd=<C(S),1*C1(U(U,U))>]
                  :: GHC.Prim.Word#
                     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
                [LclId[JoinId(1)], Arity=1, Str=<S,U>, Unf=OtherCon []] =
                    sat-only [ep_s9A16 fd_s9A17 eta_s9A19] \r [x#1_s9A1d]
                        case newAlignedPinnedByteArray# [12# 4# eta_s9A19] of {
                          (#,#) ipv_s9A1f [Occ=Once] ipv1_s9A1g [Occ=Once] ->
                              case unsafeFreezeByteArray# [ipv1_s9A1g ipv_s9A1f] of {
                                (#,#) ipv2_s9A1i [Occ=Once] ipv3_s9A1j ->
                                    case or# [x#1_s9A1d 1073741824##] of ipv4_s9A1k [Dmd=<S,U>] {
                                      __DEFAULT ->
                                          case
                                              byteArrayContents# [ipv3_s9A1j]
                                          of
                                          ptr_s9A1l [Dmd=<S,U>]
                                          { __DEFAULT ->
                                                case
                                                    writeWord32OffAddr# [ptr_s9A1l
                                                                         0#
                                                                         ipv4_s9A1k
                                                                         ipv2_s9A1i]
                                                of
                                                s2_s9A1m
                                                { __DEFAULT ->
                                                      case fd_s9A17 of {
                                                        GHC.Int.I32# x_s9A1o ->
                                                            case
                                                                plusAddr# [ptr_s9A1l 4#]
                                                            of
                                                            sat_s9A1p
                                                            { __DEFAULT ->
                                                                  case
                                                                      writeInt32OffAddr# [sat_s9A1p
                                                                                          0#
                                                                                          x_s9A1o
                                                                                          s2_s9A1m]
                                                                  of
                                                                  s1_s9A1q
                                                                  { __DEFAULT ->
                                                                        case ep_s9A16 of {
                                                                          GHC.Event.EPoll.EPoll dt_s9A1s
                                                                                                _ [Occ=Dead] ->
                                                                              case
                                                                                  __pkg_ccall base-4.11.0.0 [dt_s9A1s
                                                                                                             3#
                                                                                                             x_s9A1o
                                                                                                             ptr_s9A1l
                                                                                                             s1_s9A1q]
                                                                              of
                                                                              { (#,#) ds_s9A1w [Occ=Once]
                                                                                      ds1_s9A1x [Occ=Once] ->
                                                                                    case
                                                                                        touch# [ipv3_s9A1j
                                                                                                ds_s9A1w]
                                                                                    of
                                                                                    s4_s9A1y
                                                                                    { __DEFAULT ->
                                                                                          case
                                                                                              narrow32Int# [ds1_s9A1x]
                                                                                          of
                                                                                          { __DEFAULT ->
                                                                                                case
                                                                                                    __pkg_ccall base-4.11.0.0 [s4_s9A1y]
                                                                                                of
                                                                                                { (#,#) ds5_s9A1C [Occ=Once*]
                                                                                                        ds6_s9A1D [Occ=Once] ->
                                                                                                      case
                                                                                                          narrow32Int# [ds6_s9A1D]
                                                                                                      of
                                                                                                      { __DEFAULT ->
                                                                                                            Foreign.C.Error.throwErrno1
                                                                                                                GHC.Event.EPoll.new7
                                                                                                                ds5_s9A1C;
                                                                                                        2# ->
                                                                                                            case
                                                                                                                newAlignedPinnedByteArray# [12#
                                                                                                                                            4#
                                                                                                                                            ds5_s9A1C]
                                                                                                            of
                                                                                                            { (#,#) ipv5_s9A1G [Occ=Once]
                                                                                                                    ipv6_s9A1H [Occ=Once] ->
                                                                                                                  case
                                                                                                                      unsafeFreezeByteArray# [ipv6_s9A1H
                                                                                                                                              ipv5_s9A1G]
                                                                                                                  of
                                                                                                                  { (#,#) ipv7_s9A1J [Occ=Once]
                                                                                                                          ipv8_s9A1K ->
                                                                                                                        case
                                                                                                                            byteArrayContents# [ipv8_s9A1K]
                                                                                                                        of
                                                                                                                        ptr1_s9A1L [Dmd=<S,U>]
                                                                                                                        { __DEFAULT ->
                                                                                                                              case
                                                                                                                                  writeWord32OffAddr# [ptr1_s9A1L
                                                                                                                                                       0#
                                                                                                                                                       ipv4_s9A1k
                                                                                                                                                       ipv7_s9A1J]
                                                                                                                              of
                                                                                                                              s3_s9A1M
                                                                                                                              { __DEFAULT ->
                                                                                                                                    case
                                                                                                                                        plusAddr# [ptr1_s9A1L
                                                                                                                                                   4#]
                                                                                                                                    of
                                                                                                                                    sat_s9A1N
                                                                                                                                    { __DEFAULT ->
                                                                                                                                          case
                                                                                                                                              writeInt32OffAddr# [sat_s9A1N
                                                                                                                                                                  0#
                                                                                                                                                                  x_s9A1o
                                                                                                                                                                  s3_s9A1M]
                                                                                                                                          of
                                                                                                                                          s5_s9A1O
                                                                                                                                          { __DEFAULT ->
                                                                                                                                                case
                                                                                                                                                    __pkg_ccall base-4.11.0.0 [dt_s9A1s
                                                                                                                                                                               1#
                                                                                                                                                                               x_s9A1o
                                                                                                                                                                               ptr1_s9A1L
                                                                                                                                                                               s5_s9A1O]
                                                                                                                                                of
                                                                                                                                                { (#,#) ds9_s9A1R [Occ=Once*]
                                                                                                                                                        ds10_s9A1S [Occ=Once] ->
                                                                                                                                                      case
                                                                                                                                                          narrow32Int# [ds10_s9A1S]
                                                                                                                                                      of
                                                                                                                                                      { __DEFAULT ->
                                                                                                                                                            case
                                                                                                                                                                touch# [ipv8_s9A1K
                                                                                                                                                                        ds9_s9A1R]
                                                                                                                                                            of
                                                                                                                                                            s6_s9A1U
                                                                                                                                                            { __DEFAULT ->
                                                                                                                                                                  (#,#) [s6_s9A1U
                                                                                                                                                                         GHC.Types.True];
                                                                                                                                                            };
                                                                                                                                                        -1# ->
                                                                                                                                                            case
                                                                                                                                                                __pkg_ccall base-4.11.0.0 [ds9_s9A1R]
                                                                                                                                                            of
                                                                                                                                                            { (#,#) ds11_s9A1X [Occ=Once]
                                                                                                                                                                    ds12_s9A1Y [Occ=Once] ->
                                                                                                                                                                  GHC.Event.EPoll.new6
                                                                                                                                                                      ds11_s9A1X
                                                                                                                                                                      ds12_s9A1Y;
                                                                                                                                                            };
                                                                                                                                                      };
                                                                                                                                                };
                                                                                                                                          };
                                                                                                                                    };
                                                                                                                              };
                                                                                                                        };
                                                                                                                  };
                                                                                                            };
                                                                                                      };
                                                                                                };
                                                                                            0# ->
                                                                                                (#,#) [s4_s9A1y
                                                                                                       GHC.Types.True];
                                                                                          };
                                                                                    };
                                                                              };
                                                                        };
                                                                  };
                                                            };
                                                      };
                                                };
                                          };
                                    };
                              };
                        };
              } in 
                case andI# [x#_s9A1b 1#] of {
                  __DEFAULT ->
                      case andI# [x#_s9A1b 2#] of {
                        __DEFAULT -> $j_s9A1c 5##;
                        0# -> $j_s9A1c 1##;
                      };
                  0# ->
                      case andI# [x#_s9A1b 2#] of {
                        __DEFAULT -> $j_s9A1c 4##;
                        0# -> $j_s9A1c 0##;
                      };
                };
        };

GHC.Event.EPoll.new4
  :: GHC.Event.EPoll.EPoll
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,A)><S,U>,
 Unf=OtherCon []] =
    [] \r [be_s9A23 s_s9A24]
        case be_s9A23 of {
          GHC.Event.EPoll.EPoll dt_s9A26 [Occ=Once] _ [Occ=Dead] ->
              case __pkg_ccall base-4.11.0.0 [dt_s9A26 s_s9A24] of {
                (#,#) ds4_s9A2a [Occ=Once] _ [Occ=Dead] ->
                    (#,#) [ds4_s9A2a GHC.Tuple.()];
              };
        };

GHC.Event.EPoll.$w$j [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> GHC.Prim.Int#
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Event.Internal.Backend #)
[GblId, Arity=2, Str=<L,U><L,U>, Unf=OtherCon []] =
    [] \r [w_s9A2c ww_s9A2d]
        case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
          (#,#) _ [Occ=Dead] ds1_s9A2h [Occ=Once] ->
              case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                (#,#) _ [Occ=Dead] ds3_s9A2l [Occ=Once] ->
                    case narrow32Int# [ds1_s9A2h] of sat_s9A2n {
                      __DEFAULT ->
                          case
                              __pkg_ccall base-4.11.0.0 [ww_s9A2d sat_s9A2n ds3_s9A2l w_s9A2c]
                          of
                          { (#,#) ds4_s9A2p [Occ=Once*] ds5_s9A2q [Occ=Once] ->
                                case narrow32Int# [ds5_s9A2q] of {
                                  __DEFAULT ->
                                      case newPinnedByteArray# [768# ds4_s9A2p] of {
                                        (#,#) ipv5_s9A2t [Occ=Once] ipv6_s9A2u ->
                                            let {
                                              sat_s9A2w [Occ=Once]
                                                :: GHC.ForeignPtr.ForeignPtrContents
                                              [LclId] =
                                                  CCCS GHC.ForeignPtr.PlainPtr! [ipv6_s9A2u];
                                            } in 
                                              case byteArrayContents# [ipv6_s9A2u] of sat_s9A2v {
                                                __DEFAULT ->
                                                    let {
                                                      sat_s9A2x [Occ=Once]
                                                        :: GHC.ForeignPtr.ForeignPtr
                                                             GHC.Event.EPoll.Event
                                                      [LclId] =
                                                          CCCS GHC.ForeignPtr.ForeignPtr! [sat_s9A2v
                                                                                           sat_s9A2w]; } in
                                                    let {
                                                      sat_s9A2y [Occ=Once]
                                                        :: GHC.Event.Array.AC GHC.Event.EPoll.Event
                                                      [LclId] =
                                                          CCCS GHC.Event.Array.AC! [sat_s9A2x
                                                                                    0#
                                                                                    64#];
                                                    } in 
                                                      case newMutVar# [sat_s9A2y ipv5_s9A2t] of {
                                                        (#,#) ipv7_s9A2A [Occ=Once]
                                                              ipv8_s9A2B [Occ=Once] ->
                                                            let {
                                                              sat_s9A2C [Occ=Once]
                                                                :: GHC.Event.EPoll.EPoll
                                                              [LclId] =
                                                                  CCCS GHC.Event.EPoll.EPoll! [ww_s9A2d
                                                                                               ipv8_s9A2B]; } in
                                                            let {
                                                              sat_s9A2D [Occ=Once]
                                                                :: GHC.Event.Internal.Backend
                                                              [LclId] =
                                                                  CCCS GHC.Event.Internal.Backend! [sat_s9A2C
                                                                                                    GHC.Event.EPoll.new10
                                                                                                    GHC.Event.EPoll.new9
                                                                                                    GHC.Event.EPoll.new5
                                                                                                    GHC.Event.EPoll.new4];
                                                            } in  (#,#) [ipv7_s9A2A sat_s9A2D];
                                                      };
                                              };
                                      };
                                  -1# ->
                                      case __pkg_ccall base-4.11.0.0 [ds4_s9A2p] of {
                                        (#,#) ds6_s9A2G [Occ=Once] ds7_s9A2H [Occ=Once] ->
                                            System.Posix.Internals.setCloseOnExec2
                                                ds6_s9A2G ds7_s9A2H;
                                      };
                                };
                          };
                    };
              };
        };

GHC.Event.EPoll.new3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "epollCreate"#;

GHC.Event.EPoll.new2 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.Event.EPoll.new3;

GHC.Event.EPoll.new1
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Event.Internal.Backend #)
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [s_s9A2J]
        case __pkg_ccall base-4.11.0.0 [256# s_s9A2J] of {
          (#,#) ds_s9A2M [Occ=Once*] ds1_s9A2N [Occ=Once] ->
              case narrow32Int# [ds1_s9A2N] of wild1_s9A2O {
                __DEFAULT -> GHC.Event.EPoll.$w$j ds_s9A2M wild1_s9A2O;
                -1# ->
                    case Foreign.C.Error.throwErrno1 GHC.Event.EPoll.new2 ds_s9A2M of {
                      (#,#) ipv_s9A2Q [Occ=Once] ipv1_s9A2R [Occ=Once] ->
                          case ipv1_s9A2R of {
                            GHC.Int.I32# ww1_s9A2T [Occ=Once] ->
                                GHC.Event.EPoll.$w$j ipv_s9A2Q ww1_s9A2T;
                          };
                    };
              };
        };

GHC.Event.EPoll.new :: GHC.Types.IO GHC.Event.Internal.Backend
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [eta_B1] GHC.Event.EPoll.new1 eta_B1;

GHC.Event.EPoll.Event
  :: GHC.Event.EPoll.EventType
     -> System.Posix.Types.Fd -> GHC.Event.EPoll.Event
[GblId[DataCon],
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U><L,U>m,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] GHC.Event.EPoll.Event [eta_B2 eta_B1];

GHC.Event.EPoll.EPoll
  :: GHC.Prim.Int#
     -> GHC.Prim.MutVar#
          GHC.Prim.RealWorld (GHC.Event.Array.AC GHC.Event.EPoll.Event)
     -> GHC.Event.EPoll.EPoll
[GblId[DataCon],
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U><L,U>m,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] GHC.Event.EPoll.EPoll [eta_B2 eta_B1];


==================== STG syntax: ====================
2018-03-16 16:04:42.301323455 UTC

GHC.Event.EPoll.$WEPoll [InlPrag=INLINE[2]]
  :: GHC.Event.EPoll.EPollFd
     -> GHC.Event.Array.Array GHC.Event.EPoll.Event
     -> GHC.Event.EPoll.EPoll
[GblId[DataConWrapper],
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,U><S,U>m,
 Unf=OtherCon []] =
    [] \r [dt_s9zTi dt_s9zTj]
        case dt_s9zTi of {
          GHC.Int.I32# dt_s9zTl [Occ=Once] ->
              case dt_s9zTj of {
                GHC.STRef.STRef dt_s9zTn [Occ=Once] ->
                    GHC.Event.EPoll.EPoll [dt_s9zTl dt_s9zTn];
              };
        };

GHC.Event.EPoll.$fStorableEvent_$calignment
  :: GHC.Event.EPoll.Event -> GHC.Types.Int
[GblId, Arity=1, Caf=NoCafRefs, Str=<L,A>m, Unf=OtherCon []] =
    [] \r [ds_s9zTo] Foreign.Storable.$fStorableBool7;

GHC.Event.EPoll.$fStorableEvent7 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [12#];

GHC.Event.EPoll.$fStorableEvent_$csizeOf
  :: GHC.Event.EPoll.Event -> GHC.Types.Int
[GblId, Arity=1, Caf=NoCafRefs, Str=<L,A>m, Unf=OtherCon []] =
    [] \r [ds_s9zTp] GHC.Event.EPoll.$fStorableEvent7;

GHC.Event.EPoll.$fStorableEvent2
  :: GHC.Ptr.Ptr GHC.Event.EPoll.Event
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Event.EPoll.Event #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ptr_s9zTq void_0E]
        case ptr_s9zTq of {
          GHC.Ptr.Ptr addr_s9zTt ->
              case readWord32OffAddr# [addr_s9zTt 0# GHC.Prim.void#] of {
                Unit# ipv1_s9zTw [Occ=Once] ->
                    case plusAddr# [addr_s9zTt 4#] of sat_s9zTx {
                      __DEFAULT ->
                          case readInt32OffAddr# [sat_s9zTx 0# GHC.Prim.void#] of {
                            Unit# ipv3_s9zTA [Occ=Once] ->
                                let {
                                  sat_s9zTC [Occ=Once] :: System.Posix.Types.Fd
                                  [LclId] =
                                      CCCS GHC.Int.I32#! [ipv3_s9zTA]; } in
                                let {
                                  sat_s9zTB [Occ=Once] :: GHC.Event.EPoll.EventType
                                  [LclId] =
                                      CCCS GHC.Word.W32#! [ipv1_s9zTw]; } in
                                let {
                                  sat_s9zTD [Occ=Once] :: GHC.Event.EPoll.Event
                                  [LclId] =
                                      CCCS GHC.Event.EPoll.Event! [sat_s9zTB sat_s9zTC];
                                } in  Unit# [sat_s9zTD];
                          };
                    };
              };
        };

GHC.Event.EPoll.$fStorableEvent1
  :: GHC.Ptr.Ptr GHC.Event.EPoll.Event
     -> GHC.Event.EPoll.Event
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S(S)S(S)),1*U(1*U(U),1*U(U))><S,U>,
 Unf=OtherCon []] =
    [] \r [ptr_s9zTE e_s9zTF void_0E]
        case ptr_s9zTE of {
          GHC.Ptr.Ptr addr_s9zTI ->
              case e_s9zTF of {
                GHC.Event.EPoll.Event ds_s9zTK [Occ=Once] ds1_s9zTL [Occ=Once] ->
                    case ds_s9zTK of {
                      GHC.Word.W32# x_s9zTN [Occ=Once] ->
                          case
                              writeWord32OffAddr# [addr_s9zTI 0# x_s9zTN GHC.Prim.void#]
                          of
                          s2_s9zTO
                          { (##) ->
                                case ds1_s9zTL of {
                                  GHC.Int.I32# x1_s9zTQ [Occ=Once] ->
                                      case plusAddr# [addr_s9zTI 4#] of sat_s9zTR {
                                        __DEFAULT ->
                                            case
                                                writeInt32OffAddr# [sat_s9zTR
                                                                    0#
                                                                    x1_s9zTQ
                                                                    GHC.Prim.void#]
                                            of
                                            s1_s9zTS
                                            { (##) -> Unit# [GHC.Tuple.()];
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.Event.EPoll.$fStorableEvent4
  :: forall b.
     GHC.Ptr.Ptr b
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Event.EPoll.Event #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ptr_s9zTT off_s9zTU void_0E]
        case ptr_s9zTT of {
          GHC.Ptr.Ptr addr_s9zTX [Occ=Once] ->
              case off_s9zTU of {
                GHC.Types.I# d_s9zTZ [Occ=Once] ->
                    case plusAddr# [addr_s9zTX d_s9zTZ] of addr1_s9zU0 [Dmd=<S,U>] {
                      __DEFAULT ->
                          case readWord32OffAddr# [addr1_s9zU0 0# GHC.Prim.void#] of {
                            Unit# ipv1_s9zU3 [Occ=Once] ->
                                case plusAddr# [addr1_s9zU0 4#] of sat_s9zU4 {
                                  __DEFAULT ->
                                      case readInt32OffAddr# [sat_s9zU4 0# GHC.Prim.void#] of {
                                        Unit# ipv3_s9zU7 [Occ=Once] ->
                                            let {
                                              sat_s9zU9 [Occ=Once] :: System.Posix.Types.Fd
                                              [LclId] =
                                                  CCCS GHC.Int.I32#! [ipv3_s9zU7]; } in
                                            let {
                                              sat_s9zU8 [Occ=Once] :: GHC.Event.EPoll.EventType
                                              [LclId] =
                                                  CCCS GHC.Word.W32#! [ipv1_s9zU3]; } in
                                            let {
                                              sat_s9zUa [Occ=Once] :: GHC.Event.EPoll.Event
                                              [LclId] =
                                                  CCCS GHC.Event.EPoll.Event! [sat_s9zU8 sat_s9zU9];
                                            } in  Unit# [sat_s9zUa];
                                      };
                                };
                          };
                    };
              };
        };

GHC.Event.EPoll.$fStorableEvent6
  :: GHC.Ptr.Ptr GHC.Event.EPoll.Event
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Event.EPoll.Event #)
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ptr_s9zUb off_s9zUc void_0E]
        case ptr_s9zUb of {
          GHC.Ptr.Ptr addr_s9zUf [Occ=Once] ->
              case off_s9zUc of {
                GHC.Types.I# x_s9zUh [Occ=Once] ->
                    case *# [x_s9zUh 12#] of sat_s9zUj {
                      __DEFAULT ->
                          case plusAddr# [addr_s9zUf sat_s9zUj] of addr1_s9zUi [Dmd=<S,U>] {
                            __DEFAULT ->
                                case readWord32OffAddr# [addr1_s9zUi 0# GHC.Prim.void#] of {
                                  Unit# ipv1_s9zUm [Occ=Once] ->
                                      case plusAddr# [addr1_s9zUi 4#] of sat_s9zUn {
                                        __DEFAULT ->
                                            case
                                                readInt32OffAddr# [sat_s9zUn 0# GHC.Prim.void#]
                                            of
                                            { Unit# ipv3_s9zUq [Occ=Once] ->
                                                  let {
                                                    sat_s9zUs [Occ=Once] :: System.Posix.Types.Fd
                                                    [LclId] =
                                                        CCCS GHC.Int.I32#! [ipv3_s9zUq]; } in
                                                  let {
                                                    sat_s9zUr [Occ=Once]
                                                      :: GHC.Event.EPoll.EventType
                                                    [LclId] =
                                                        CCCS GHC.Word.W32#! [ipv1_s9zUm]; } in
                                                  let {
                                                    sat_s9zUt [Occ=Once] :: GHC.Event.EPoll.Event
                                                    [LclId] =
                                                        CCCS GHC.Event.EPoll.Event! [sat_s9zUr
                                                                                     sat_s9zUs];
                                                  } in  Unit# [sat_s9zUt];
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.Event.EPoll.$fStorableEvent3
  :: forall b.
     GHC.Ptr.Ptr b
     -> GHC.Types.Int
     -> GHC.Event.EPoll.Event
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S(S)S(S)),1*U(1*U(U),1*U(U))><S,U>,
 Unf=OtherCon []] =
    [] \r [ptr_s9zUu off_s9zUv eta_s9zUw void_0E]
        case ptr_s9zUu of {
          GHC.Ptr.Ptr addr_s9zUz [Occ=Once] ->
              case off_s9zUv of {
                GHC.Types.I# d_s9zUB [Occ=Once] ->
                    case eta_s9zUw of {
                      GHC.Event.EPoll.Event ds_s9zUD [Occ=Once] ds1_s9zUE [Occ=Once] ->
                          case ds_s9zUD of {
                            GHC.Word.W32# x_s9zUG [Occ=Once] ->
                                case plusAddr# [addr_s9zUz d_s9zUB] of addr1_s9zUH [Dmd=<S,U>] {
                                  __DEFAULT ->
                                      case
                                          writeWord32OffAddr# [addr1_s9zUH
                                                               0#
                                                               x_s9zUG
                                                               GHC.Prim.void#]
                                      of
                                      s2_s9zUI
                                      { (##) ->
                                            case ds1_s9zUE of {
                                              GHC.Int.I32# x1_s9zUK [Occ=Once] ->
                                                  case plusAddr# [addr1_s9zUH 4#] of sat_s9zUL {
                                                    __DEFAULT ->
                                                        case
                                                            writeInt32OffAddr# [sat_s9zUL
                                                                                0#
                                                                                x1_s9zUK
                                                                                GHC.Prim.void#]
                                                        of
                                                        s1_s9zUM
                                                        { (##) -> Unit# [GHC.Tuple.()];
                                                        };
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.Event.EPoll.$fStorableEvent5
  :: GHC.Ptr.Ptr GHC.Event.EPoll.Event
     -> GHC.Types.Int
     -> GHC.Event.EPoll.Event
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S(S(S)S(S)),1*U(1*U(U),1*U(U))><S,U>,
 Unf=OtherCon []] =
    [] \r [ptr_s9zUN off_s9zUO val_s9zUP void_0E]
        case ptr_s9zUN of {
          GHC.Ptr.Ptr addr_s9zUS [Occ=Once] ->
              case off_s9zUO of {
                GHC.Types.I# x_s9zUU [Occ=Once] ->
                    case val_s9zUP of {
                      GHC.Event.EPoll.Event ds_s9zUW [Occ=Once] ds1_s9zUX [Occ=Once] ->
                          case ds_s9zUW of {
                            GHC.Word.W32# x1_s9zUZ [Occ=Once] ->
                                case *# [x_s9zUU 12#] of sat_s9zV1 {
                                  __DEFAULT ->
                                      case
                                          plusAddr# [addr_s9zUS sat_s9zV1]
                                      of
                                      addr1_s9zV0 [Dmd=<S,U>]
                                      { __DEFAULT ->
                                            case
                                                writeWord32OffAddr# [addr1_s9zV0
                                                                     0#
                                                                     x1_s9zUZ
                                                                     GHC.Prim.void#]
                                            of
                                            s2_s9zV2
                                            { (##) ->
                                                  case ds1_s9zUX of {
                                                    GHC.Int.I32# x2_s9zV4 [Occ=Once] ->
                                                        case
                                                            plusAddr# [addr1_s9zV0 4#]
                                                        of
                                                        sat_s9zV5
                                                        { __DEFAULT ->
                                                              case
                                                                  writeInt32OffAddr# [sat_s9zV5
                                                                                      0#
                                                                                      x2_s9zV4
                                                                                      GHC.Prim.void#]
                                                              of
                                                              s1_s9zV6
                                                              { (##) -> Unit# [GHC.Tuple.()];
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.Event.EPoll.$fStorableEvent [InlPrag=NOUSERINLINE CONLIKE]
  :: Foreign.Storable.Storable GHC.Event.EPoll.Event
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Foreign.Storable.C:Storable! [GHC.Event.EPoll.$fStorableEvent_$csizeOf
                                                GHC.Event.EPoll.$fStorableEvent_$calignment
                                                GHC.Event.EPoll.$fStorableEvent6
                                                GHC.Event.EPoll.$fStorableEvent5
                                                GHC.Event.EPoll.$fStorableEvent4
                                                GHC.Event.EPoll.$fStorableEvent3
                                                GHC.Event.EPoll.$fStorableEvent2
                                                GHC.Event.EPoll.$fStorableEvent1];

GHC.Event.EPoll.$fEqEventType [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq GHC.Event.EPoll.EventType
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Word.eqWord32
                                     GHC.Word.neWord32];

GHC.Event.EPoll.$fBitsEventType [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.Bits GHC.Event.EPoll.EventType
[GblId[DFunId], Caf=NoCafRefs] =
    CCS_DONT_CARE Data.Bits.C:Bits! [GHC.Event.EPoll.$fEqEventType
                                     GHC.Word.$fBitsWord32_$c.&.
                                     GHC.Word.$fBitsWord32_$c.|.
                                     GHC.Word.$fBitsWord32_$cxor
                                     GHC.Word.$fBitsWord32_$ccomplement
                                     GHC.Word.$fBitsWord32_$cshift
                                     GHC.Word.$fBitsWord32_$crotate
                                     GHC.Word.$fBitsWord32_$cminBound
                                     GHC.Word.$fBitsWord32_$cbit
                                     GHC.Word.$fBitsWord32_$csetBit
                                     GHC.Word.$fBitsWord32_$cclearBit
                                     GHC.Word.$fBitsWord32_$ccomplementBit
                                     GHC.Word.$fBitsWord32_$ctestBit
                                     GHC.Word.$fBitsWord32_$cbitSizeMaybe
                                     GHC.Word.$fBitsWord32_$cfiniteBitSize
                                     GHC.Word.$fBitsWord32_$cisSigned
                                     GHC.Word.$fBitsWord32_$cshiftL
                                     GHC.Word.$fBitsWord32_$cunsafeShiftL
                                     GHC.Word.$fBitsWord32_$cshiftR
                                     GHC.Word.$fBitsWord32_$cunsafeShiftR
                                     GHC.Word.$fBitsWord32_$crotateL
                                     GHC.Word.$fBitsWord32_$crotateR
                                     GHC.Word.$fBitsWord32_$cpopCount];

GHC.Event.EPoll.fromEPollFd1
  :: GHC.Event.EPoll.EPollFd -> GHC.Event.EPoll.EPollFd
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U(U)>m, Unf=OtherCon []] =
    [] \r [ds_s9zV7] ds_s9zV7;

GHC.Event.EPoll.fromEPollFd
  :: GHC.Event.EPoll.EPollFd -> Foreign.C.Types.CInt
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S,1*U(U)>m,
 Unf=OtherCon []] =
    [] \r [eta_B1] GHC.Event.EPoll.fromEPollFd1 eta_B1;

GHC.Event.EPoll.unEventType1
  :: GHC.Event.EPoll.EventType -> GHC.Event.EPoll.EventType
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U(U)>m, Unf=OtherCon []] =
    [] \r [ds_s9zV8] ds_s9zV8;

GHC.Event.EPoll.unEventType
  :: GHC.Event.EPoll.EventType -> GHC.Word.Word32
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S,1*U(U)>m,
 Unf=OtherCon []] =
    [] \r [eta_B1] GHC.Event.EPoll.unEventType1 eta_B1;

GHC.Event.EPoll.eventFd
  :: GHC.Event.EPoll.Event -> System.Posix.Types.Fd
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LS),1*U(A,1*U(U))>m,
 Unf=OtherCon []] =
    [] \r [ds_s9zV9]
        case ds_s9zV9 of {
          GHC.Event.EPoll.Event _ [Occ=Dead] ds2_s9zVc [Occ=Once] ->
              ds2_s9zVc;
        };

GHC.Event.EPoll.eventTypes
  :: GHC.Event.EPoll.Event -> GHC.Event.EPoll.EventType
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(1*U(U),A)>m,
 Unf=OtherCon []] =
    [] \r [ds_s9zVd]
        case ds_s9zVd of {
          GHC.Event.EPoll.Event ds1_s9zVf [Occ=Once] _ [Occ=Dead] ->
              ds1_s9zVf;
        };

GHC.Event.EPoll.epollEvents
  :: GHC.Event.EPoll.EPoll
     -> GHC.Event.Array.Array GHC.Event.EPoll.Event
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LS),1*U(A,U)>m,
 Unf=OtherCon []] =
    [] \r [ds_s9zVh]
        case ds_s9zVh of {
          GHC.Event.EPoll.EPoll _ [Occ=Dead] dt1_s9zVk [Occ=Once] ->
              GHC.STRef.STRef [dt1_s9zVk];
        };

GHC.Event.EPoll.epollFd
  :: GHC.Event.EPoll.EPoll -> GHC.Event.EPoll.EPollFd
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,A)>m,
 Unf=OtherCon []] =
    [] \r [ds_s9zVl]
        case ds_s9zVl of {
          GHC.Event.EPoll.EPoll dt_s9zVn [Occ=Once] _ [Occ=Dead] ->
              GHC.Int.I32# [dt_s9zVn];
        };

GHC.Event.EPoll.available [InlPrag=INLINE (sat-args=0)]
  :: GHC.Types.Bool
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.True! [];

GHC.Event.EPoll.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

GHC.Event.EPoll.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.EPoll.$trModule4];

GHC.Event.EPoll.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.Event.EPoll"#;

GHC.Event.EPoll.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.EPoll.$trModule2];

GHC.Event.EPoll.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [GHC.Event.EPoll.$trModule3
                                     GHC.Event.EPoll.$trModule1];

$krep_r9xZP :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [Foreign.C.Types.$tcCInt
                                              GHC.Types.[]];

$krep1_r9xZQ :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Word.$tcWord32
                                              GHC.Types.[]];

$krep2_r9xZR :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [System.Posix.Types.$tcFd
                                              GHC.Types.[]];

GHC.Event.EPoll.$tcEPollFd2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "EPollFd"#;

GHC.Event.EPoll.$tcEPollFd1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.EPoll.$tcEPollFd2];

GHC.Event.EPoll.$tcEPollFd :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [11408974392712426853##
                                    10860743297622841984##
                                    GHC.Event.EPoll.$trModule
                                    GHC.Event.EPoll.$tcEPollFd1
                                    0#
                                    GHC.Types.krep$*];

$krep3_r9xZS :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.EPoll.$tcEPollFd
                                              GHC.Types.[]];

GHC.Event.EPoll.$tc'EPollFd1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_r9xZP $krep3_r9xZS];

GHC.Event.EPoll.$tc'EPollFd3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'EPollFd"#;

GHC.Event.EPoll.$tc'EPollFd2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.EPoll.$tc'EPollFd3];

GHC.Event.EPoll.$tc'EPollFd :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [13859366844265277896##
                                    3104986725924328114##
                                    GHC.Event.EPoll.$trModule
                                    GHC.Event.EPoll.$tc'EPollFd2
                                    0#
                                    GHC.Event.EPoll.$tc'EPollFd1];

GHC.Event.EPoll.$tcControlOp2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "ControlOp"#;

GHC.Event.EPoll.$tcControlOp1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.EPoll.$tcControlOp2];

GHC.Event.EPoll.$tcControlOp :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [16670684287779227039##
                                    7079239768931473179##
                                    GHC.Event.EPoll.$trModule
                                    GHC.Event.EPoll.$tcControlOp1
                                    0#
                                    GHC.Types.krep$*];

$krep4_r9xZT :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.EPoll.$tcControlOp
                                              GHC.Types.[]];

GHC.Event.EPoll.$tc'ControlOp1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_r9xZP $krep4_r9xZT];

GHC.Event.EPoll.$tc'ControlOp3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'ControlOp"#;

GHC.Event.EPoll.$tc'ControlOp2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.EPoll.$tc'ControlOp3];

GHC.Event.EPoll.$tc'ControlOp :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [17423659744934710370##
                                    14737300415055323322##
                                    GHC.Event.EPoll.$trModule
                                    GHC.Event.EPoll.$tc'ControlOp2
                                    0#
                                    GHC.Event.EPoll.$tc'ControlOp1];

GHC.Event.EPoll.$tcEventType2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "EventType"#;

GHC.Event.EPoll.$tcEventType1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.EPoll.$tcEventType2];

GHC.Event.EPoll.$tcEventType :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [6882131545153803920##
                                    11603224301892798833##
                                    GHC.Event.EPoll.$trModule
                                    GHC.Event.EPoll.$tcEventType1
                                    0#
                                    GHC.Types.krep$*];

$krep5_r9xZU :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.EPoll.$tcEventType
                                              GHC.Types.[]];

GHC.Event.EPoll.$tc'EventType1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep1_r9xZQ $krep5_r9xZU];

GHC.Event.EPoll.$tc'EventType3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'EventType"#;

GHC.Event.EPoll.$tc'EventType2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.EPoll.$tc'EventType3];

GHC.Event.EPoll.$tc'EventType :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [6895099112894632230##
                                    10353865251933672677##
                                    GHC.Event.EPoll.$trModule
                                    GHC.Event.EPoll.$tc'EventType2
                                    0#
                                    GHC.Event.EPoll.$tc'EventType1];

GHC.Event.EPoll.$tcEvent2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Event"#;

GHC.Event.EPoll.$tcEvent1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.EPoll.$tcEvent2];

GHC.Event.EPoll.$tcEvent :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [9768726503562184735##
                                    14932995848660065219##
                                    GHC.Event.EPoll.$trModule
                                    GHC.Event.EPoll.$tcEvent1
                                    0#
                                    GHC.Types.krep$*];

$krep6_r9xZV :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.EPoll.$tcEvent
                                              GHC.Types.[]];

$krep7_r9xZW :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_r9xZR $krep6_r9xZV];

GHC.Event.EPoll.$tc'Event1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep5_r9xZU $krep7_r9xZW];

GHC.Event.EPoll.$tc'Event3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Event"#;

GHC.Event.EPoll.$tc'Event2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.EPoll.$tc'Event3];

GHC.Event.EPoll.$tc'Event :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [13898227050457859187##
                                    12870286929163337655##
                                    GHC.Event.EPoll.$trModule
                                    GHC.Event.EPoll.$tc'Event2
                                    0#
                                    GHC.Event.EPoll.$tc'Event1];

$krep8_r9xZX :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep6_r9xZV GHC.Types.[]];

$krep9_r9xZY :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.Array.$tcArray
                                              $krep8_r9xZX];

GHC.Event.EPoll.$tcEPoll2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "EPoll"#;

GHC.Event.EPoll.$tcEPoll1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.EPoll.$tcEPoll2];

GHC.Event.EPoll.$tcEPoll :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [16362945812962510240##
                                    15183678187331181316##
                                    GHC.Event.EPoll.$trModule
                                    GHC.Event.EPoll.$tcEPoll1
                                    0#
                                    GHC.Types.krep$*];

$krep10_r9xZZ :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.EPoll.$tcEPoll
                                              GHC.Types.[]];

$krep11_r9y00 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep9_r9xZY $krep10_r9xZZ];

GHC.Event.EPoll.$tc'EPoll1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep3_r9xZS $krep11_r9y00];

GHC.Event.EPoll.$tc'EPoll3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'EPoll"#;

GHC.Event.EPoll.$tc'EPoll2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.EPoll.$tc'EPoll3];

GHC.Event.EPoll.$tc'EPoll :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [11640704659469356468##
                                    11164042648060985378##
                                    GHC.Event.EPoll.$trModule
                                    GHC.Event.EPoll.$tc'EPoll2
                                    0#
                                    GHC.Event.EPoll.$tc'EPoll1];

GHC.Event.EPoll.$fShowEPollFd4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "EPollFd {"#;

GHC.Event.EPoll.$fShowEPollFd3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "fromEPollFd = "#;

GHC.Event.EPoll.$fShowEPollFd2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "}"#;

GHC.Event.EPoll.$w$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Event.EPoll.EPollFd -> GHC.Base.String -> GHC.Base.String
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,U><L,1*U(U)><L,U>,
 Unf=OtherCon []] =
    [] \r [ww_s9zVp w_s9zVq w1_s9zVr]
        case >=# [ww_s9zVp 11#] of {
          __DEFAULT ->
              let {
                sat_s9zVA [Occ=Once] :: [GHC.Types.Char]
                [LclId] =
                    [w_s9zVq w1_s9zVr] \u []
                        let {
                          sat_s9zVz [Occ=Once] :: [GHC.Types.Char]
                          [LclId] =
                              [w_s9zVq w1_s9zVr] \u []
                                  case w_s9zVq of {
                                    GHC.Int.I32# x#_s9zVu [Occ=Once] ->
                                        let {
                                          sat_s9zVv [Occ=Once] :: GHC.Base.String
                                          [LclId] =
                                              [w1_s9zVr] \u []
                                                  GHC.CString.unpackAppendCString#
                                                      GHC.Event.EPoll.$fShowEPollFd2 w1_s9zVr;
                                        } in 
                                          case GHC.Show.$wshowSignedInt 0# x#_s9zVu sat_s9zVv of {
                                            (#,#) ww5_s9zVx [Occ=Once] ww6_s9zVy [Occ=Once] ->
                                                : [ww5_s9zVx ww6_s9zVy];
                                          };
                                  };
                        } in 
                          GHC.CString.unpackAppendCString#
                              GHC.Event.EPoll.$fShowEPollFd3 sat_s9zVz;
              } in 
                GHC.CString.unpackAppendCString#
                    GHC.Event.EPoll.$fShowEPollFd4 sat_s9zVA;
          1# ->
              let {
                sat_s9zVK [Occ=Once] :: [GHC.Types.Char]
                [LclId] =
                    [w_s9zVq w1_s9zVr] \u []
                        let {
                          sat_s9zVJ [Occ=Once] :: [GHC.Types.Char]
                          [LclId] =
                              [w_s9zVq w1_s9zVr] \u []
                                  let {
                                    sat_s9zVI [Occ=Once] :: [GHC.Types.Char]
                                    [LclId] =
                                        [w_s9zVq w1_s9zVr] \u []
                                            case w_s9zVq of {
                                              GHC.Int.I32# x#_s9zVC [Occ=Once] ->
                                                  let {
                                                    sat_s9zVE [Occ=Once] :: GHC.Base.String
                                                    [LclId] =
                                                        [w1_s9zVr] \u []
                                                            let {
                                                              sat_s9zVD [Occ=Once]
                                                                :: [GHC.Types.Char]
                                                              [LclId] =
                                                                  CCCS :! [GHC.Show.$fShow(,)2
                                                                           w1_s9zVr];
                                                            } in 
                                                              GHC.CString.unpackAppendCString#
                                                                  GHC.Event.EPoll.$fShowEPollFd2
                                                                  sat_s9zVD;
                                                  } in 
                                                    case
                                                        GHC.Show.$wshowSignedInt
                                                            0# x#_s9zVC sat_s9zVE
                                                    of
                                                    { (#,#) ww5_s9zVG [Occ=Once]
                                                            ww6_s9zVH [Occ=Once] ->
                                                          : [ww5_s9zVG ww6_s9zVH];
                                                    };
                                            };
                                  } in 
                                    GHC.CString.unpackAppendCString#
                                        GHC.Event.EPoll.$fShowEPollFd3 sat_s9zVI;
                        } in 
                          GHC.CString.unpackAppendCString#
                              GHC.Event.EPoll.$fShowEPollFd4 sat_s9zVJ;
              } in  : [GHC.Show.$fShow(,)4 sat_s9zVK];
        };

GHC.Event.EPoll.$fShowEPollFd_$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Int -> GHC.Event.EPoll.EPollFd -> GHC.Show.ShowS
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><L,1*U(U)><L,U>,
 Unf=OtherCon []] =
    [] \r [w_s9zVL w1_s9zVM w2_s9zVN]
        case w_s9zVL of {
          GHC.Types.I# ww1_s9zVP [Occ=Once] ->
              GHC.Event.EPoll.$w$cshowsPrec ww1_s9zVP w1_s9zVM w2_s9zVN;
        };

GHC.Event.EPoll.$fShowEPollFd5 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.Event.EPoll.$fShowEPollFd2;

GHC.Event.EPoll.$fShowEPollFd_$cshow
  :: GHC.Event.EPoll.EPollFd -> GHC.Base.String
[GblId, Arity=1, Str=<L,1*U(U)>, Unf=OtherCon []] =
    [] \r [x_s9zVQ]
        let {
          sat_s9zVX [Occ=Once] :: [GHC.Types.Char]
          [LclId] =
              [x_s9zVQ] \u []
                  let {
                    sat_s9zVW [Occ=Once] :: [GHC.Types.Char]
                    [LclId] =
                        [x_s9zVQ] \u []
                            case x_s9zVQ of {
                              GHC.Int.I32# x#_s9zVS [Occ=Once] ->
                                  case
                                      GHC.Show.$wshowSignedInt
                                          0# x#_s9zVS GHC.Event.EPoll.$fShowEPollFd5
                                  of
                                  { (#,#) ww5_s9zVU [Occ=Once] ww6_s9zVV [Occ=Once] ->
                                        : [ww5_s9zVU ww6_s9zVV];
                                  };
                            };
                  } in 
                    GHC.CString.unpackAppendCString#
                        GHC.Event.EPoll.$fShowEPollFd3 sat_s9zVW;
        } in 
          GHC.CString.unpackAppendCString#
              GHC.Event.EPoll.$fShowEPollFd4 sat_s9zVX;

GHC.Event.EPoll.$fShowEPollFd1
  :: GHC.Event.EPoll.EPollFd -> GHC.Show.ShowS
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,1*U(U)><L,U>,
 Unf=OtherCon []] =
    [] \r [w_s9zVY w1_s9zVZ]
        GHC.Event.EPoll.$w$cshowsPrec 0# w_s9zVY w1_s9zVZ;

GHC.Event.EPoll.$fShowEPollFd_$cshowList
  :: [GHC.Event.EPoll.EPollFd] -> GHC.Show.ShowS
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><L,U>,
 Unf=OtherCon []] =
    [] \r [ls_s9zW0 s_s9zW1]
        GHC.Show.showList__
            GHC.Event.EPoll.$fShowEPollFd1 ls_s9zW0 s_s9zW1;

GHC.Event.EPoll.$fShowEPollFd [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show GHC.Event.EPoll.EPollFd
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Event.EPoll.$fShowEPollFd_$cshowsPrec
                                    GHC.Event.EPoll.$fShowEPollFd_$cshow
                                    GHC.Event.EPoll.$fShowEPollFd_$cshowList];

GHC.Event.EPoll.$fShowEvent4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "EventType {"#;

GHC.Event.EPoll.$fShowEvent3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "unEventType = "#;

GHC.Event.EPoll.$w$cshowsPrec2 [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Event.EPoll.EventType -> GHC.Base.String -> GHC.Base.String
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,U><L,1*U(U)><L,U>,
 Unf=OtherCon []] =
    [] \r [ww_s9zW2 w_s9zW3 w1_s9zW4]
        case >=# [ww_s9zW2 11#] of {
          __DEFAULT ->
              let {
                sat_s9zWe [Occ=Once] :: [GHC.Types.Char]
                [LclId] =
                    [w_s9zW3 w1_s9zW4] \u []
                        let {
                          sat_s9zWd [Occ=Once] :: [GHC.Types.Char]
                          [LclId] =
                              [w_s9zW3 w1_s9zW4] \u []
                                  case w_s9zW3 of {
                                    GHC.Word.W32# x#_s9zW7 [Occ=Once] ->
                                        let {
                                          sat_s9zW9 [Occ=Once] :: GHC.Base.String
                                          [LclId] =
                                              [w1_s9zW4] \u []
                                                  GHC.CString.unpackAppendCString#
                                                      GHC.Event.EPoll.$fShowEPollFd2 w1_s9zW4;
                                        } in 
                                          case word2Int# [x#_s9zW7] of sat_s9zW8 {
                                            __DEFAULT ->
                                                case GHC.Show.$witos sat_s9zW8 sat_s9zW9 of {
                                                  (#,#) ww5_s9zWb [Occ=Once] ww6_s9zWc [Occ=Once] ->
                                                      : [ww5_s9zWb ww6_s9zWc];
                                                };
                                          };
                                  };
                        } in 
                          GHC.CString.unpackAppendCString#
                              GHC.Event.EPoll.$fShowEvent3 sat_s9zWd;
              } in 
                GHC.CString.unpackAppendCString#
                    GHC.Event.EPoll.$fShowEvent4 sat_s9zWe;
          1# ->
              let {
                sat_s9zWp [Occ=Once] :: [GHC.Types.Char]
                [LclId] =
                    [w_s9zW3 w1_s9zW4] \u []
                        let {
                          sat_s9zWo [Occ=Once] :: [GHC.Types.Char]
                          [LclId] =
                              [w_s9zW3 w1_s9zW4] \u []
                                  let {
                                    sat_s9zWn [Occ=Once] :: [GHC.Types.Char]
                                    [LclId] =
                                        [w_s9zW3 w1_s9zW4] \u []
                                            case w_s9zW3 of {
                                              GHC.Word.W32# x#_s9zWg [Occ=Once] ->
                                                  let {
                                                    sat_s9zWj [Occ=Once] :: GHC.Base.String
                                                    [LclId] =
                                                        [w1_s9zW4] \u []
                                                            let {
                                                              sat_s9zWi [Occ=Once]
                                                                :: [GHC.Types.Char]
                                                              [LclId] =
                                                                  CCCS :! [GHC.Show.$fShow(,)2
                                                                           w1_s9zW4];
                                                            } in 
                                                              GHC.CString.unpackAppendCString#
                                                                  GHC.Event.EPoll.$fShowEPollFd2
                                                                  sat_s9zWi;
                                                  } in 
                                                    case word2Int# [x#_s9zWg] of sat_s9zWh {
                                                      __DEFAULT ->
                                                          case
                                                              GHC.Show.$witos sat_s9zWh sat_s9zWj
                                                          of
                                                          { (#,#) ww5_s9zWl [Occ=Once]
                                                                  ww6_s9zWm [Occ=Once] ->
                                                                : [ww5_s9zWl ww6_s9zWm];
                                                          };
                                                    };
                                            };
                                  } in 
                                    GHC.CString.unpackAppendCString#
                                        GHC.Event.EPoll.$fShowEvent3 sat_s9zWn;
                        } in 
                          GHC.CString.unpackAppendCString#
                              GHC.Event.EPoll.$fShowEvent4 sat_s9zWo;
              } in  : [GHC.Show.$fShow(,)4 sat_s9zWp];
        };

GHC.Event.EPoll.$fShowEventType_$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Int -> GHC.Event.EPoll.EventType -> GHC.Show.ShowS
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><L,1*U(U)><L,U>,
 Unf=OtherCon []] =
    [] \r [w_s9zWq w1_s9zWr w2_s9zWs]
        case w_s9zWq of {
          GHC.Types.I# ww1_s9zWu [Occ=Once] ->
              GHC.Event.EPoll.$w$cshowsPrec2 ww1_s9zWu w1_s9zWr w2_s9zWs;
        };

GHC.Event.EPoll.$fShowEventType_$cshow
  :: GHC.Event.EPoll.EventType -> GHC.Base.String
[GblId, Arity=1, Str=<L,1*U(U)>, Unf=OtherCon []] =
    [] \r [x_s9zWv]
        let {
          sat_s9zWD [Occ=Once] :: [GHC.Types.Char]
          [LclId] =
              [x_s9zWv] \u []
                  let {
                    sat_s9zWC [Occ=Once] :: [GHC.Types.Char]
                    [LclId] =
                        [x_s9zWv] \u []
                            case x_s9zWv of {
                              GHC.Word.W32# x#_s9zWx [Occ=Once] ->
                                  case word2Int# [x#_s9zWx] of sat_s9zWy {
                                    __DEFAULT ->
                                        case
                                            GHC.Show.$wshowSignedInt
                                                0# sat_s9zWy GHC.Event.EPoll.$fShowEPollFd5
                                        of
                                        { (#,#) ww5_s9zWA [Occ=Once] ww6_s9zWB [Occ=Once] ->
                                              : [ww5_s9zWA ww6_s9zWB];
                                        };
                                  };
                            };
                  } in 
                    GHC.CString.unpackAppendCString#
                        GHC.Event.EPoll.$fShowEvent3 sat_s9zWC;
        } in 
          GHC.CString.unpackAppendCString#
              GHC.Event.EPoll.$fShowEvent4 sat_s9zWD;

GHC.Event.EPoll.$fShowEventType1
  :: GHC.Event.EPoll.EventType -> GHC.Show.ShowS
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,1*U(U)><L,U>,
 Unf=OtherCon []] =
    [] \r [w_s9zWE w1_s9zWF]
        GHC.Event.EPoll.$w$cshowsPrec2 0# w_s9zWE w1_s9zWF;

GHC.Event.EPoll.$fShowEventType_$cshowList
  :: [GHC.Event.EPoll.EventType] -> GHC.Show.ShowS
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><L,U>,
 Unf=OtherCon []] =
    [] \r [ls_s9zWG s_s9zWH]
        GHC.Show.showList__
            GHC.Event.EPoll.$fShowEventType1 ls_s9zWG s_s9zWH;

GHC.Event.EPoll.$fShowEventType [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show GHC.Event.EPoll.EventType
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Event.EPoll.$fShowEventType_$cshowsPrec
                                    GHC.Event.EPoll.$fShowEventType_$cshow
                                    GHC.Event.EPoll.$fShowEventType_$cshowList];

GHC.Event.EPoll.$fShowEvent7 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Event {"#;

GHC.Event.EPoll.$fShowEvent6 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.Event.EPoll.$fShowEvent7;

GHC.Event.EPoll.$fShowEvent5 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "eventTypes = "#;

GHC.Event.EPoll.$fShowEvent2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "eventFd = "#;

GHC.Event.EPoll.$w$cshowsPrec1 [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Event.EPoll.EventType
     -> System.Posix.Types.Fd
     -> GHC.Base.String
     -> GHC.Base.String
[GblId,
 Arity=4,
 Str=<S,U><L,1*U(U)><L,1*U(U)><L,U>,
 Unf=OtherCon []] =
    [] \r [ww_s9zWI ww1_s9zWJ ww2_s9zWK w_s9zWL]
        case >=# [ww_s9zWI 11#] of {
          __DEFAULT ->
              let {
                sat_s9zWX [Occ=Once, Dmd=<L,1*U>] :: [GHC.Types.Char]
                [LclId] =
                    [ww1_s9zWJ ww2_s9zWK w_s9zWL] \s []
                        let {
                          sat_s9zWW [Occ=Once] :: [GHC.Types.Char]
                          [LclId] =
                              [ww1_s9zWJ ww2_s9zWK w_s9zWL] \u []
                                  let {
                                    sat_s9zWV [Occ=Once] :: GHC.Base.String
                                    [LclId] =
                                        [ww2_s9zWK w_s9zWL] \u []
                                            let {
                                              sat_s9zWU [Occ=Once, Dmd=<L,1*U>] :: [GHC.Types.Char]
                                              [LclId] =
                                                  [ww2_s9zWK w_s9zWL] \s []
                                                      let {
                                                        sat_s9zWT [Occ=Once] :: [GHC.Types.Char]
                                                        [LclId] =
                                                            [ww2_s9zWK w_s9zWL] \u []
                                                                case ww2_s9zWK of {
                                                                  GHC.Int.I32# x#_s9zWO [Occ=Once] ->
                                                                      let {
                                                                        sat_s9zWP [Occ=Once]
                                                                          :: GHC.Base.String
                                                                        [LclId] =
                                                                            [w_s9zWL] \u []
                                                                                GHC.CString.unpackAppendCString#
                                                                                    GHC.Event.EPoll.$fShowEPollFd2
                                                                                    w_s9zWL;
                                                                      } in 
                                                                        case
                                                                            GHC.Show.$wshowSignedInt
                                                                                0#
                                                                                x#_s9zWO
                                                                                sat_s9zWP
                                                                        of
                                                                        { (#,#) ww5_s9zWR [Occ=Once]
                                                                                ww6_s9zWS [Occ=Once] ->
                                                                              : [ww5_s9zWR
                                                                                 ww6_s9zWS];
                                                                        };
                                                                };
                                                      } in 
                                                        GHC.CString.unpackAppendCString#
                                                            GHC.Event.EPoll.$fShowEvent2 sat_s9zWT;
                                            } in  GHC.Base.++ GHC.Show.showCommaSpace1 sat_s9zWU;
                                  } in  GHC.Event.EPoll.$w$cshowsPrec2 0# ww1_s9zWJ sat_s9zWV;
                        } in 
                          GHC.CString.unpackAppendCString#
                              GHC.Event.EPoll.$fShowEvent5 sat_s9zWW;
              } in  GHC.Base.++ GHC.Event.EPoll.$fShowEvent6 sat_s9zWX;
          1# ->
              let {
                sat_s9zXa [Occ=Once] :: [GHC.Types.Char]
                [LclId] =
                    [ww1_s9zWJ ww2_s9zWK w_s9zWL] \u []
                        let {
                          sat_s9zX9 [Occ=Once, Dmd=<L,1*U>] :: [GHC.Types.Char]
                          [LclId] =
                              [ww1_s9zWJ ww2_s9zWK w_s9zWL] \s []
                                  let {
                                    sat_s9zX8 [Occ=Once] :: [GHC.Types.Char]
                                    [LclId] =
                                        [ww1_s9zWJ ww2_s9zWK w_s9zWL] \u []
                                            let {
                                              sat_s9zX7 [Occ=Once] :: GHC.Base.String
                                              [LclId] =
                                                  [ww2_s9zWK w_s9zWL] \u []
                                                      let {
                                                        sat_s9zX6 [Occ=Once, Dmd=<L,1*U>]
                                                          :: [GHC.Types.Char]
                                                        [LclId] =
                                                            [ww2_s9zWK w_s9zWL] \s []
                                                                let {
                                                                  sat_s9zX5 [Occ=Once]
                                                                    :: [GHC.Types.Char]
                                                                  [LclId] =
                                                                      [ww2_s9zWK w_s9zWL] \u []
                                                                          case ww2_s9zWK of {
                                                                            GHC.Int.I32# x#_s9zWZ [Occ=Once] ->
                                                                                let {
                                                                                  sat_s9zX1 [Occ=Once]
                                                                                    :: GHC.Base.String
                                                                                  [LclId] =
                                                                                      [w_s9zWL] \u []
                                                                                          let {
                                                                                            sat_s9zX0 [Occ=Once]
                                                                                              :: [GHC.Types.Char]
                                                                                            [LclId] =
                                                                                                CCCS :! [GHC.Show.$fShow(,)2
                                                                                                         w_s9zWL];
                                                                                          } in 
                                                                                            GHC.CString.unpackAppendCString#
                                                                                                GHC.Event.EPoll.$fShowEPollFd2
                                                                                                sat_s9zX0;
                                                                                } in 
                                                                                  case
                                                                                      GHC.Show.$wshowSignedInt
                                                                                          0#
                                                                                          x#_s9zWZ
                                                                                          sat_s9zX1
                                                                                  of
                                                                                  { (#,#) ww5_s9zX3 [Occ=Once]
                                                                                          ww6_s9zX4 [Occ=Once] ->
                                                                                        : [ww5_s9zX3
                                                                                           ww6_s9zX4];
                                                                                  };
                                                                          };
                                                                } in 
                                                                  GHC.CString.unpackAppendCString#
                                                                      GHC.Event.EPoll.$fShowEvent2
                                                                      sat_s9zX5;
                                                      } in 
                                                        GHC.Base.++
                                                            GHC.Show.showCommaSpace1 sat_s9zX6;
                                            } in 
                                              GHC.Event.EPoll.$w$cshowsPrec2 0# ww1_s9zWJ sat_s9zX7;
                                  } in 
                                    GHC.CString.unpackAppendCString#
                                        GHC.Event.EPoll.$fShowEvent5 sat_s9zX8;
                        } in  GHC.Base.++ GHC.Event.EPoll.$fShowEvent6 sat_s9zX9;
              } in  : [GHC.Show.$fShow(,)4 sat_s9zXa];
        };

GHC.Event.EPoll.$fShowEvent_$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Int -> GHC.Event.EPoll.Event -> GHC.Show.ShowS
[GblId,
 Arity=3,
 Str=<S(S),1*U(U)><S,1*U(1*U(U),1*U(U))><L,U>,
 Unf=OtherCon []] =
    [] \r [w_s9zXb w1_s9zXc w2_s9zXd]
        case w_s9zXb of {
          GHC.Types.I# ww1_s9zXf [Occ=Once] ->
              case w1_s9zXc of {
                GHC.Event.EPoll.Event ww3_s9zXh [Occ=Once] ww4_s9zXi [Occ=Once] ->
                    GHC.Event.EPoll.$w$cshowsPrec1
                        ww1_s9zXf ww3_s9zXh ww4_s9zXi w2_s9zXd;
              };
        };

GHC.Event.EPoll.$fShowEvent8 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [0#];

GHC.Event.EPoll.$fShowEvent_$cshow
  :: GHC.Event.EPoll.Event -> GHC.Base.String
[GblId, Arity=1, Str=<S,1*U(1*U(U),1*U(U))>, Unf=OtherCon []] =
    [] \r [x_s9zXj]
        case x_s9zXj of {
          GHC.Event.EPoll.Event ww1_s9zXl [Occ=Once] ww2_s9zXm [Occ=Once] ->
              GHC.Event.EPoll.$w$cshowsPrec1 0# ww1_s9zXl ww2_s9zXm GHC.Types.[];
        };

GHC.Event.EPoll.$fShowEvent1
  :: GHC.Event.EPoll.Event -> GHC.Show.ShowS
[GblId,
 Arity=2,
 Str=<S,1*U(1*U(U),1*U(U))><L,U>,
 Unf=OtherCon []] =
    [] \r [w_s9zXn w1_s9zXo]
        case w_s9zXn of {
          GHC.Event.EPoll.Event ww1_s9zXq [Occ=Once] ww2_s9zXr [Occ=Once] ->
              GHC.Event.EPoll.$w$cshowsPrec1 0# ww1_s9zXq ww2_s9zXr w1_s9zXo;
        };

GHC.Event.EPoll.$fShowEvent_$cshowList
  :: [GHC.Event.EPoll.Event] -> GHC.Show.ShowS
[GblId, Arity=2, Str=<S,1*U><L,U>, Unf=OtherCon []] =
    [] \r [ls_s9zXs s_s9zXt]
        GHC.Show.showList__ GHC.Event.EPoll.$fShowEvent1 ls_s9zXs s_s9zXt;

GHC.Event.EPoll.$fShowEvent [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show GHC.Event.EPoll.Event
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Event.EPoll.$fShowEvent_$cshowsPrec
                                    GHC.Event.EPoll.$fShowEvent_$cshow
                                    GHC.Event.EPoll.$fShowEvent_$cshowList];

GHC.Event.EPoll.$fFiniteBitsEventType [InlPrag=NOUSERINLINE CONLIKE]
  :: Data.Bits.FiniteBits GHC.Event.EPoll.EventType
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE Data.Bits.C:FiniteBits! [GHC.Event.EPoll.$fBitsEventType
                                           GHC.Word.$fBitsWord32_$cfiniteBitSize
                                           GHC.Word.$fFiniteBitsWord32_$ccountLeadingZeros
                                           GHC.Word.$fFiniteBitsWord32_$ccountTrailingZeros];

GHC.Event.EPoll.$fNumEventType [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Num.Num GHC.Event.EPoll.EventType
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Num.C:Num! [GHC.Word.$fNumWord32_$c+
                                  GHC.Word.$fNumWord32_$c-
                                  GHC.Word.$fNumWord32_$c*
                                  GHC.Word.$fNumWord32_$cnegate
                                  GHC.Word.$fNumWord32_$cabs
                                  GHC.Word.$fNumWord32_$csignum
                                  GHC.Word.$fNumWord32_$cfromInteger];

GHC.Event.EPoll.$fEqEPollFd [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq GHC.Event.EPoll.EPollFd
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Int.eqInt32 GHC.Int.neInt32];

lvl_r9y01 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "epollControl"#;

lvl1_r9y02 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl_r9y01;

GHC.Event.EPoll.new6
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> GHC.Prim.Int#
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, Foreign.C.Types.CInt #)
[GblId, Arity=2, Str=<B,U><B,U>x, Unf=OtherCon []] =
    [] \r [void_0E ds3_s9zXv]
        case narrow32Int# [ds3_s9zXv] of sat_s9zXw {
          __DEFAULT ->
              Foreign.C.Error.$wlvl lvl1_r9y02 sat_s9zXw GHC.Prim.void#;
        };

lvl2_r9y03 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "epollWaitNonBlock"#;

lvl3_r9y04 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl2_r9y03;

lvl4_r9y05 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "epollWait"#;

lvl5_r9y06 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# lvl4_r9y05;

GHC.Event.EPoll.new8 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "modifyFdOnce"#;

GHC.Event.EPoll.new7 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.Event.EPoll.new8;

lvl6_r9y07 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [3#];

lvl7_r9y08 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [1#];

lvl8_r9y09 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [2#];

GHC.Event.EPoll.new10
  :: GHC.Event.EPoll.EPoll
     -> GHC.Base.Maybe GHC.Event.Internal.Timeout
     -> (System.Posix.Types.Fd
         -> GHC.Event.Internal.Event -> GHC.Types.IO ())
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
[GblId,
 Arity=4,
 Str=<S(SS),1*U(U,U)><S,1*U><L,C(C1(C1(U(U,A))))><S,U>,
 Unf=OtherCon []] =
    [] \r [ep_s9zXx mtimeout_s9zXy f_s9zXz void_0E]
        case ep_s9zXx of {
          GHC.Event.EPoll.EPoll dt_s9zXC [Occ=Once*] dt1_s9zXD ->
              case readMutVar# [dt1_s9zXD GHC.Prim.void#] of {
                Unit# ipv1_s9zXG [Occ=Once!] ->
                    case ipv1_s9zXG of {
                      GHC.Event.Array.AC es_s9zXI [Occ=Once!] _ [Occ=Dead] dt3_s9zXK ->
                          case es_s9zXI of wild2_s9zXL {
                            GHC.ForeignPtr.ForeignPtr ds2_s9zXM [Occ=Once*]
                                                      r_s9zXN [Occ=Once] ->
                                let-no-escape {
                                  $w$j1_s9zXO [InlPrag=NOUSERINLINE[0],
                                               Occ=Once*!T[2],
                                               Dmd=<L,1*C1(C1(U(U,U)))>]
                                    :: GHC.Prim.State# GHC.Prim.RealWorld
                                       -> GHC.Prim.Int#
                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Int #)
                                  [LclId[JoinId(2)], Arity=2, Str=<S,U><S,U>, Unf=OtherCon []] =
                                      sat-only [f_s9zXz
                                                dt1_s9zXD
                                                dt3_s9zXK
                                                wild2_s9zXL
                                                r_s9zXN] \r [void_0E ww_s9zXQ]
                                          case touch# [r_s9zXN GHC.Prim.void#] of s'_s9zXR {
                                            (##) ->
                                                let {
                                                  sat_s9zXS [Occ=Once]
                                                    :: GHC.Event.Array.AC GHC.Event.EPoll.Event
                                                  [LclId] =
                                                      CCCS GHC.Event.Array.AC! [wild2_s9zXL
                                                                                ww_s9zXQ
                                                                                dt3_s9zXK];
                                                } in 
                                                  case
                                                      writeMutVar# [dt1_s9zXD
                                                                    sat_s9zXS
                                                                    GHC.Prim.void#]
                                                  of
                                                  s2#_s9zXT
                                                  { (##) ->
                                                        case ># [ww_s9zXQ 0#] of {
                                                          __DEFAULT ->
                                                              let {
                                                                sat_s9zXV [Occ=Once]
                                                                  :: GHC.Types.Int
                                                                [LclId] =
                                                                    CCCS GHC.Types.I#! [ww_s9zXQ];
                                                              } in  Unit# [sat_s9zXV];
                                                          1# ->
                                                              case
                                                                  readMutVar# [dt1_s9zXD
                                                                               GHC.Prim.void#]
                                                              of
                                                              { Unit# ipv3_s9zXY [Occ=Once!] ->
                                                                    case ipv3_s9zXY of {
                                                                      GHC.Event.Array.AC es1_s9zY0 [Occ=Once!]
                                                                                         dt4_s9zY1 [Occ=Once]
                                                                                         _ [Occ=Dead] ->
                                                                          case es1_s9zY0 of {
                                                                            GHC.ForeignPtr.ForeignPtr fo_s9zY4 [Occ=OnceL]
                                                                                                      ds5_s9zY5 [Occ=Once] ->
                                                                                case
                                                                                    *# [dt4_s9zY1
                                                                                        12#]
                                                                                of
                                                                                offset_s9zY6 [Dmd=<S,U>]
                                                                                { __DEFAULT ->
                                                                                      let-no-escape {
                                                                                        exit_s9zY7 [Occ=OnceL!T[1],
                                                                                                    Dmd=<L,C(U(U,U))>]
                                                                                          :: GHC.Prim.State#
                                                                                               GHC.Prim.RealWorld
                                                                                             -> (# GHC.Prim.State#
                                                                                                     GHC.Prim.RealWorld,
                                                                                                   GHC.Types.Int #)
                                                                                        [LclId[JoinId(1)],
                                                                                         Arity=1,
                                                                                         Str=<S,U>,
                                                                                         Unf=OtherCon []] =
                                                                                            sat-only [dt1_s9zXD
                                                                                                      ww_s9zXQ
                                                                                                      ds5_s9zY5] \r [void_0E]
                                                                                                case
                                                                                                    touch# [ds5_s9zY5
                                                                                                            GHC.Prim.void#]
                                                                                                of
                                                                                                s'1_s9zY9
                                                                                                { (##) ->
                                                                                                      case
                                                                                                          readMutVar# [dt1_s9zXD
                                                                                                                       GHC.Prim.void#]
                                                                                                      of
                                                                                                      { Unit# ipv5_s9zYc [Occ=Once!] ->
                                                                                                            case
                                                                                                                ipv5_s9zYc
                                                                                                            of
                                                                                                            { GHC.Event.Array.AC _ [Occ=Dead]
                                                                                                                                 _ [Occ=Dead]
                                                                                                                                 dt7_s9zYg ->
                                                                                                                  case
                                                                                                                      ==# [dt7_s9zYg
                                                                                                                           ww_s9zXQ]
                                                                                                                  of
                                                                                                                  { __DEFAULT ->
                                                                                                                        let {
                                                                                                                          sat_s9zYi [Occ=Once]
                                                                                                                            :: GHC.Types.Int
                                                                                                                          [LclId] =
                                                                                                                              CCCS GHC.Types.I#! [ww_s9zXQ];
                                                                                                                        } in 
                                                                                                                          Unit# [sat_s9zYi];
                                                                                                                    1# ->
                                                                                                                        case
                                                                                                                            readMutVar# [dt1_s9zXD
                                                                                                                                         GHC.Prim.void#]
                                                                                                                        of
                                                                                                                        { Unit# ipv7_s9zYl [Occ=Once!] ->
                                                                                                                              case
                                                                                                                                  ipv7_s9zYl
                                                                                                                              of
                                                                                                                              { GHC.Event.Array.AC ds_s9zYn [Occ=Once!]
                                                                                                                                                   dt8_s9zYo [Occ=Once*]
                                                                                                                                                   dt9_s9zYp ->
                                                                                                                                    case
                                                                                                                                        ds_s9zYn
                                                                                                                                    of
                                                                                                                                    { GHC.ForeignPtr.ForeignPtr fo1_s9zYr
                                                                                                                                                                ds9_s9zYs [Occ=Once*] ->
                                                                                                                                          case
                                                                                                                                              *# [2#
                                                                                                                                                  dt7_s9zYg]
                                                                                                                                          of
                                                                                                                                          ww1_s9zYt [Dmd=<S,U>]
                                                                                                                                          { __DEFAULT ->
                                                                                                                                                case
                                                                                                                                                    ># [ww1_s9zYt
                                                                                                                                                        dt9_s9zYp]
                                                                                                                                                of
                                                                                                                                                { __DEFAULT ->
                                                                                                                                                      let {
                                                                                                                                                        sat_s9zYv [Occ=Once]
                                                                                                                                                          :: GHC.Types.Int
                                                                                                                                                        [LclId] =
                                                                                                                                                            CCCS GHC.Types.I#! [ww_s9zXQ];
                                                                                                                                                      } in 
                                                                                                                                                        Unit# [sat_s9zYv];
                                                                                                                                                  1# ->
                                                                                                                                                      case
                                                                                                                                                          -# [ww1_s9zYt
                                                                                                                                                              1#]
                                                                                                                                                      of
                                                                                                                                                      n1_s9zYw [Dmd=<S,U>]
                                                                                                                                                      { __DEFAULT ->
                                                                                                                                                            case
                                                                                                                                                                uncheckedIShiftRA# [n1_s9zYw
                                                                                                                                                                                    1#]
                                                                                                                                                            of
                                                                                                                                                            sat_s9zYy
                                                                                                                                                            { __DEFAULT ->
                                                                                                                                                                  case
                                                                                                                                                                      orI# [n1_s9zYw
                                                                                                                                                                            sat_s9zYy]
                                                                                                                                                                  of
                                                                                                                                                                  ipv8_s9zYx [Dmd=<S,U>]
                                                                                                                                                                  { __DEFAULT ->
                                                                                                                                                                        case
                                                                                                                                                                            uncheckedIShiftRA# [ipv8_s9zYx
                                                                                                                                                                                                2#]
                                                                                                                                                                        of
                                                                                                                                                                        sat_s9zYA
                                                                                                                                                                        { __DEFAULT ->
                                                                                                                                                                              case
                                                                                                                                                                                  orI# [ipv8_s9zYx
                                                                                                                                                                                        sat_s9zYA]
                                                                                                                                                                              of
                                                                                                                                                                              ipv9_s9zYz [Dmd=<S,U>]
                                                                                                                                                                              { __DEFAULT ->
                                                                                                                                                                                    case
                                                                                                                                                                                        uncheckedIShiftRA# [ipv9_s9zYz
                                                                                                                                                                                                            4#]
                                                                                                                                                                                    of
                                                                                                                                                                                    sat_s9zYC
                                                                                                                                                                                    { __DEFAULT ->
                                                                                                                                                                                          case
                                                                                                                                                                                              orI# [ipv9_s9zYz
                                                                                                                                                                                                    sat_s9zYC]
                                                                                                                                                                                          of
                                                                                                                                                                                          ipv10_s9zYB [Dmd=<S,U>]
                                                                                                                                                                                          { __DEFAULT ->
                                                                                                                                                                                                case
                                                                                                                                                                                                    uncheckedIShiftRA# [ipv10_s9zYB
                                                                                                                                                                                                                        8#]
                                                                                                                                                                                                of
                                                                                                                                                                                                sat_s9zYE
                                                                                                                                                                                                { __DEFAULT ->
                                                                                                                                                                                                      case
                                                                                                                                                                                                          orI# [ipv10_s9zYB
                                                                                                                                                                                                                sat_s9zYE]
                                                                                                                                                                                                      of
                                                                                                                                                                                                      ipv11_s9zYD [Dmd=<S,U>]
                                                                                                                                                                                                      { __DEFAULT ->
                                                                                                                                                                                                            case
                                                                                                                                                                                                                uncheckedIShiftRA# [ipv11_s9zYD
                                                                                                                                                                                                                                    16#]
                                                                                                                                                                                                            of
                                                                                                                                                                                                            sat_s9zYG
                                                                                                                                                                                                            { __DEFAULT ->
                                                                                                                                                                                                                  case
                                                                                                                                                                                                                      orI# [ipv11_s9zYD
                                                                                                                                                                                                                            sat_s9zYG]
                                                                                                                                                                                                                  of
                                                                                                                                                                                                                  ipv12_s9zYF [Dmd=<S,U>]
                                                                                                                                                                                                                  { __DEFAULT ->
                                                                                                                                                                                                                        case
                                                                                                                                                                                                                            uncheckedIShiftRA# [ipv12_s9zYF
                                                                                                                                                                                                                                                32#]
                                                                                                                                                                                                                        of
                                                                                                                                                                                                                        sat_s9zYI
                                                                                                                                                                                                                        { __DEFAULT ->
                                                                                                                                                                                                                              case
                                                                                                                                                                                                                                  orI# [ipv12_s9zYF
                                                                                                                                                                                                                                        sat_s9zYI]
                                                                                                                                                                                                                              of
                                                                                                                                                                                                                              sat_s9zYJ
                                                                                                                                                                                                                              { __DEFAULT ->
                                                                                                                                                                                                                                    case
                                                                                                                                                                                                                                        +# [sat_s9zYJ
                                                                                                                                                                                                                                            1#]
                                                                                                                                                                                                                                    of
                                                                                                                                                                                                                                    x_s9zYH [Dmd=<S,U>]
                                                                                                                                                                                                                                    { __DEFAULT ->
                                                                                                                                                                                                                                          case
                                                                                                                                                                                                                                              *# [x_s9zYH
                                                                                                                                                                                                                                                  12#]
                                                                                                                                                                                                                                          of
                                                                                                                                                                                                                                          x1_s9zYK [Dmd=<S,U>]
                                                                                                                                                                                                                                          { __DEFAULT ->
                                                                                                                                                                                                                                                case
                                                                                                                                                                                                                                                    <# [x1_s9zYK
                                                                                                                                                                                                                                                        0#]
                                                                                                                                                                                                                                                of
                                                                                                                                                                                                                                                { __DEFAULT ->
                                                                                                                                                                                                                                                      case
                                                                                                                                                                                                                                                          newPinnedByteArray# [x1_s9zYK
                                                                                                                                                                                                                                                                               GHC.Prim.void#]
                                                                                                                                                                                                                                                      of
                                                                                                                                                                                                                                                      { Unit# ipv14_s9zYO ->
                                                                                                                                                                                                                                                            case
                                                                                                                                                                                                                                                                byteArrayContents# [ipv14_s9zYO]
                                                                                                                                                                                                                                                            of
                                                                                                                                                                                                                                                            ipv15_s9zYP
                                                                                                                                                                                                                                                            { __DEFAULT ->
                                                                                                                                                                                                                                                                  let {
                                                                                                                                                                                                                                                                    ipv16_s9zYQ
                                                                                                                                                                                                                                                                      :: GHC.ForeignPtr.ForeignPtrContents
                                                                                                                                                                                                                                                                    [LclId,
                                                                                                                                                                                                                                                                     Unf=OtherCon []] =
                                                                                                                                                                                                                                                                        CCCS GHC.ForeignPtr.PlainPtr! [ipv14_s9zYO];
                                                                                                                                                                                                                                                                  } in 
                                                                                                                                                                                                                                                                    case
                                                                                                                                                                                                                                                                        eqAddr# [fo1_s9zYr
                                                                                                                                                                                                                                                                                 __NULL]
                                                                                                                                                                                                                                                                    of
                                                                                                                                                                                                                                                                    { __DEFAULT ->
                                                                                                                                                                                                                                                                          case
                                                                                                                                                                                                                                                                              ># [dt9_s9zYp
                                                                                                                                                                                                                                                                                  0#]
                                                                                                                                                                                                                                                                          of
                                                                                                                                                                                                                                                                          { __DEFAULT ->
                                                                                                                                                                                                                                                                                case
                                                                                                                                                                                                                                                                                    touch# [ds9_s9zYs
                                                                                                                                                                                                                                                                                            GHC.Prim.void#]
                                                                                                                                                                                                                                                                                of
                                                                                                                                                                                                                                                                                s'2_s9zYT
                                                                                                                                                                                                                                                                                { (##) ->
                                                                                                                                                                                                                                                                                      case
                                                                                                                                                                                                                                                                                          /=# [x_s9zYH
                                                                                                                                                                                                                                                                                               dt9_s9zYp]
                                                                                                                                                                                                                                                                                      of
                                                                                                                                                                                                                                                                                      { __DEFAULT ->
                                                                                                                                                                                                                                                                                            let {
                                                                                                                                                                                                                                                                                              sat_s9zYV [Occ=Once]
                                                                                                                                                                                                                                                                                                :: GHC.Types.Int
                                                                                                                                                                                                                                                                                              [LclId] =
                                                                                                                                                                                                                                                                                                  CCCS GHC.Types.I#! [ww_s9zXQ];
                                                                                                                                                                                                                                                                                            } in 
                                                                                                                                                                                                                                                                                              Unit# [sat_s9zYV];
                                                                                                                                                                                                                                                                                        1# ->
                                                                                                                                                                                                                                                                                            let {
                                                                                                                                                                                                                                                                                              sat_s9zYW [Occ=Once]
                                                                                                                                                                                                                                                                                                :: GHC.ForeignPtr.ForeignPtr
                                                                                                                                                                                                                                                                                                     GHC.Event.EPoll.Event
                                                                                                                                                                                                                                                                                              [LclId] =
                                                                                                                                                                                                                                                                                                  CCCS GHC.ForeignPtr.ForeignPtr! [ipv15_s9zYP
                                                                                                                                                                                                                                                                                                                                   ipv16_s9zYQ]; } in
                                                                                                                                                                                                                                                                                            let {
                                                                                                                                                                                                                                                                                              sat_s9zYX [Occ=Once]
                                                                                                                                                                                                                                                                                                :: GHC.Event.Array.AC
                                                                                                                                                                                                                                                                                                     GHC.Event.EPoll.Event
                                                                                                                                                                                                                                                                                              [LclId] =
                                                                                                                                                                                                                                                                                                  CCCS GHC.Event.Array.AC! [sat_s9zYW
                                                                                                                                                                                                                                                                                                                            dt8_s9zYo
                                                                                                                                                                                                                                                                                                                            x_s9zYH];
                                                                                                                                                                                                                                                                                            } in 
                                                                                                                                                                                                                                                                                              case
                                                                                                                                                                                                                                                                                                  writeMutVar# [dt1_s9zXD
                                                                                                                                                                                                                                                                                                                sat_s9zYX
                                                                                                                                                                                                                                                                                                                GHC.Prim.void#]
                                                                                                                                                                                                                                                                                              of
                                                                                                                                                                                                                                                                                              s2#1_s9zYY
                                                                                                                                                                                                                                                                                              { (##) ->
                                                                                                                                                                                                                                                                                                    let {
                                                                                                                                                                                                                                                                                                      sat_s9zYZ [Occ=Once]
                                                                                                                                                                                                                                                                                                        :: GHC.Types.Int
                                                                                                                                                                                                                                                                                                      [LclId] =
                                                                                                                                                                                                                                                                                                          CCCS GHC.Types.I#! [ww_s9zXQ];
                                                                                                                                                                                                                                                                                                    } in 
                                                                                                                                                                                                                                                                                                      Unit# [sat_s9zYZ];
                                                                                                                                                                                                                                                                                              };
                                                                                                                                                                                                                                                                                      };
                                                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                                            1# ->
                                                                                                                                                                                                                                                                                case
                                                                                                                                                                                                                                                                                    *# [dt9_s9zYp
                                                                                                                                                                                                                                                                                        12#]
                                                                                                                                                                                                                                                                                of
                                                                                                                                                                                                                                                                                sat_s9zZ1
                                                                                                                                                                                                                                                                                { __DEFAULT ->
                                                                                                                                                                                                                                                                                      case
                                                                                                                                                                                                                                                                                          int2Word# [sat_s9zZ1]
                                                                                                                                                                                                                                                                                      of
                                                                                                                                                                                                                                                                                      sat_s9zZ2
                                                                                                                                                                                                                                                                                      { __DEFAULT ->
                                                                                                                                                                                                                                                                                            case
                                                                                                                                                                                                                                                                                                __pkg_ccall base-4.11.0.0 [ipv15_s9zYP
                                                                                                                                                                                                                                                                                                                           fo1_s9zYr
                                                                                                                                                                                                                                                                                                                           sat_s9zZ2
                                                                                                                                                                                                                                                                                                                           GHC.Prim.void#]
                                                                                                                                                                                                                                                                                            of
                                                                                                                                                                                                                                                                                            { Unit# _ [Occ=Dead] ->
                                                                                                                                                                                                                                                                                                  case
                                                                                                                                                                                                                                                                                                      touch# [ipv16_s9zYQ
                                                                                                                                                                                                                                                                                                              GHC.Prim.void#]
                                                                                                                                                                                                                                                                                                  of
                                                                                                                                                                                                                                                                                                  s'2_s9zZ6
                                                                                                                                                                                                                                                                                                  { (##) ->
                                                                                                                                                                                                                                                                                                        case
                                                                                                                                                                                                                                                                                                            touch# [ds9_s9zYs
                                                                                                                                                                                                                                                                                                                    GHC.Prim.void#]
                                                                                                                                                                                                                                                                                                        of
                                                                                                                                                                                                                                                                                                        s'3_s9zZ7
                                                                                                                                                                                                                                                                                                        { (##) ->
                                                                                                                                                                                                                                                                                                              case
                                                                                                                                                                                                                                                                                                                  /=# [x_s9zYH
                                                                                                                                                                                                                                                                                                                       dt9_s9zYp]
                                                                                                                                                                                                                                                                                                              of
                                                                                                                                                                                                                                                                                                              { __DEFAULT ->
                                                                                                                                                                                                                                                                                                                    let {
                                                                                                                                                                                                                                                                                                                      sat_s9zZ9 [Occ=Once]
                                                                                                                                                                                                                                                                                                                        :: GHC.Types.Int
                                                                                                                                                                                                                                                                                                                      [LclId] =
                                                                                                                                                                                                                                                                                                                          CCCS GHC.Types.I#! [ww_s9zXQ];
                                                                                                                                                                                                                                                                                                                    } in 
                                                                                                                                                                                                                                                                                                                      Unit# [sat_s9zZ9];
                                                                                                                                                                                                                                                                                                                1# ->
                                                                                                                                                                                                                                                                                                                    let {
                                                                                                                                                                                                                                                                                                                      sat_s9zZa [Occ=Once]
                                                                                                                                                                                                                                                                                                                        :: GHC.ForeignPtr.ForeignPtr
                                                                                                                                                                                                                                                                                                                             GHC.Event.EPoll.Event
                                                                                                                                                                                                                                                                                                                      [LclId] =
                                                                                                                                                                                                                                                                                                                          CCCS GHC.ForeignPtr.ForeignPtr! [ipv15_s9zYP
                                                                                                                                                                                                                                                                                                                                                           ipv16_s9zYQ]; } in
                                                                                                                                                                                                                                                                                                                    let {
                                                                                                                                                                                                                                                                                                                      sat_s9zZb [Occ=Once]
                                                                                                                                                                                                                                                                                                                        :: GHC.Event.Array.AC
                                                                                                                                                                                                                                                                                                                             GHC.Event.EPoll.Event
                                                                                                                                                                                                                                                                                                                      [LclId] =
                                                                                                                                                                                                                                                                                                                          CCCS GHC.Event.Array.AC! [sat_s9zZa
                                                                                                                                                                                                                                                                                                                                                    dt8_s9zYo
                                                                                                                                                                                                                                                                                                                                                    x_s9zYH];
                                                                                                                                                                                                                                                                                                                    } in 
                                                                                                                                                                                                                                                                                                                      case
                                                                                                                                                                                                                                                                                                                          writeMutVar# [dt1_s9zXD
                                                                                                                                                                                                                                                                                                                                        sat_s9zZb
                                                                                                                                                                                                                                                                                                                                        GHC.Prim.void#]
                                                                                                                                                                                                                                                                                                                      of
                                                                                                                                                                                                                                                                                                                      s2#1_s9zZc
                                                                                                                                                                                                                                                                                                                      { (##) ->
                                                                                                                                                                                                                                                                                                                            let {
                                                                                                                                                                                                                                                                                                                              sat_s9zZd [Occ=Once]
                                                                                                                                                                                                                                                                                                                                :: GHC.Types.Int
                                                                                                                                                                                                                                                                                                                              [LclId] =
                                                                                                                                                                                                                                                                                                                                  CCCS GHC.Types.I#! [ww_s9zXQ];
                                                                                                                                                                                                                                                                                                                            } in 
                                                                                                                                                                                                                                                                                                                              Unit# [sat_s9zZd];
                                                                                                                                                                                                                                                                                                                      };
                                                                                                                                                                                                                                                                                                              };
                                                                                                                                                                                                                                                                                                        };
                                                                                                                                                                                                                                                                                                  };
                                                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                                                      };
                                                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                                          };
                                                                                                                                                                                                                                                                      1# ->
                                                                                                                                                                                                                                                                          case
                                                                                                                                                                                                                                                                              touch# [ds9_s9zYs
                                                                                                                                                                                                                                                                                      GHC.Prim.void#]
                                                                                                                                                                                                                                                                          of
                                                                                                                                                                                                                                                                          s'2_s9zZe
                                                                                                                                                                                                                                                                          { (##) ->
                                                                                                                                                                                                                                                                                case
                                                                                                                                                                                                                                                                                    /=# [x_s9zYH
                                                                                                                                                                                                                                                                                         dt9_s9zYp]
                                                                                                                                                                                                                                                                                of
                                                                                                                                                                                                                                                                                { __DEFAULT ->
                                                                                                                                                                                                                                                                                      let {
                                                                                                                                                                                                                                                                                        sat_s9zZg [Occ=Once]
                                                                                                                                                                                                                                                                                          :: GHC.Types.Int
                                                                                                                                                                                                                                                                                        [LclId] =
                                                                                                                                                                                                                                                                                            CCCS GHC.Types.I#! [ww_s9zXQ];
                                                                                                                                                                                                                                                                                      } in 
                                                                                                                                                                                                                                                                                        Unit# [sat_s9zZg];
                                                                                                                                                                                                                                                                                  1# ->
                                                                                                                                                                                                                                                                                      let {
                                                                                                                                                                                                                                                                                        sat_s9zZh [Occ=Once]
                                                                                                                                                                                                                                                                                          :: GHC.ForeignPtr.ForeignPtr
                                                                                                                                                                                                                                                                                               GHC.Event.EPoll.Event
                                                                                                                                                                                                                                                                                        [LclId] =
                                                                                                                                                                                                                                                                                            CCCS GHC.ForeignPtr.ForeignPtr! [ipv15_s9zYP
                                                                                                                                                                                                                                                                                                                             ipv16_s9zYQ]; } in
                                                                                                                                                                                                                                                                                      let {
                                                                                                                                                                                                                                                                                        sat_s9zZi [Occ=Once]
                                                                                                                                                                                                                                                                                          :: GHC.Event.Array.AC
                                                                                                                                                                                                                                                                                               GHC.Event.EPoll.Event
                                                                                                                                                                                                                                                                                        [LclId] =
                                                                                                                                                                                                                                                                                            CCCS GHC.Event.Array.AC! [sat_s9zZh
                                                                                                                                                                                                                                                                                                                      dt8_s9zYo
                                                                                                                                                                                                                                                                                                                      x_s9zYH];
                                                                                                                                                                                                                                                                                      } in 
                                                                                                                                                                                                                                                                                        case
                                                                                                                                                                                                                                                                                            writeMutVar# [dt1_s9zXD
                                                                                                                                                                                                                                                                                                          sat_s9zZi
                                                                                                                                                                                                                                                                                                          GHC.Prim.void#]
                                                                                                                                                                                                                                                                                        of
                                                                                                                                                                                                                                                                                        s2#1_s9zZj
                                                                                                                                                                                                                                                                                        { (##) ->
                                                                                                                                                                                                                                                                                              let {
                                                                                                                                                                                                                                                                                                sat_s9zZk [Occ=Once]
                                                                                                                                                                                                                                                                                                  :: GHC.Types.Int
                                                                                                                                                                                                                                                                                                [LclId] =
                                                                                                                                                                                                                                                                                                    CCCS GHC.Types.I#! [ww_s9zXQ];
                                                                                                                                                                                                                                                                                              } in 
                                                                                                                                                                                                                                                                                                Unit# [sat_s9zZk];
                                                                                                                                                                                                                                                                                        };
                                                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                                                          };
                                                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                                                            };
                                                                                                                                                                                                                                                      };
                                                                                                                                                                                                                                                  1# ->
                                                                                                                                                                                                                                                      GHC.ForeignPtr.mallocPlainForeignPtrBytes2;
                                                                                                                                                                                                                                                };
                                                                                                                                                                                                                                          };
                                                                                                                                                                                                                                    };
                                                                                                                                                                                                                              };
                                                                                                                                                                                                                        };
                                                                                                                                                                                                                  };
                                                                                                                                                                                                            };
                                                                                                                                                                                                      };
                                                                                                                                                                                                };
                                                                                                                                                                                          };
                                                                                                                                                                                    };
                                                                                                                                                                              };
                                                                                                                                                                        };
                                                                                                                                                                  };
                                                                                                                                                            };
                                                                                                                                                      };
                                                                                                                                                };
                                                                                                                                          };
                                                                                                                                    };
                                                                                                                              };
                                                                                                                        };
                                                                                                                  };
                                                                                                            };
                                                                                                      };
                                                                                                };
                                                                                      } in 
                                                                                        let-no-escape {
                                                                                          $wgo_s9zZm [InlPrag=NOUSERINLINE[0],
                                                                                                      Occ=LoopBreakerT[2]]
                                                                                            :: GHC.Prim.Int#
                                                                                               -> GHC.Prim.State#
                                                                                                    GHC.Prim.RealWorld
                                                                                               -> (# GHC.Prim.State#
                                                                                                       GHC.Prim.RealWorld,
                                                                                                     GHC.Types.Int #)
                                                                                          [LclId[JoinId(2)],
                                                                                           Arity=2,
                                                                                           Str=<S,U><S,U>,
                                                                                           Unf=OtherCon []] =
                                                                                              sat-only [f_s9zXz
                                                                                                        fo_s9zY4
                                                                                                        offset_s9zY6
                                                                                                        exit_s9zY7
                                                                                                        $wgo_s9zZm] \r [ww1_s9zZn
                                                                                                                        void_0E]
                                                                                                  case
                                                                                                      >=# [ww1_s9zZn
                                                                                                           offset_s9zY6]
                                                                                                  of
                                                                                                  { __DEFAULT ->
                                                                                                        case
                                                                                                            plusAddr# [fo_s9zY4
                                                                                                                       ww1_s9zZn]
                                                                                                        of
                                                                                                        ptr_s9zZq [Dmd=<S,U>]
                                                                                                        { __DEFAULT ->
                                                                                                              case
                                                                                                                  readWord32OffAddr# [ptr_s9zZq
                                                                                                                                      0#
                                                                                                                                      GHC.Prim.void#]
                                                                                                              of
                                                                                                              { Unit# ipv5_s9zZt ->
                                                                                                                    case
                                                                                                                        plusAddr# [ptr_s9zZq
                                                                                                                                   4#]
                                                                                                                    of
                                                                                                                    sat_s9zZu
                                                                                                                    { __DEFAULT ->
                                                                                                                          case
                                                                                                                              readInt32OffAddr# [sat_s9zZu
                                                                                                                                                 0#
                                                                                                                                                 GHC.Prim.void#]
                                                                                                                          of
                                                                                                                          { Unit# ipv7_s9zZx [Occ=Once] ->
                                                                                                                                let {
                                                                                                                                  sat_s9zZC [Occ=Once]
                                                                                                                                    :: GHC.Event.Internal.Event
                                                                                                                                  [LclId] =
                                                                                                                                      [ipv5_s9zZt] \u []
                                                                                                                                          case
                                                                                                                                              and# [ipv5_s9zZt
                                                                                                                                                    25##]
                                                                                                                                          of
                                                                                                                                          { __DEFAULT ->
                                                                                                                                                case
                                                                                                                                                    and# [ipv5_s9zZt
                                                                                                                                                          28##]
                                                                                                                                                of
                                                                                                                                                { __DEFAULT ->
                                                                                                                                                      lvl6_r9y07;
                                                                                                                                                  0## ->
                                                                                                                                                      lvl7_r9y08;
                                                                                                                                                };
                                                                                                                                            0## ->
                                                                                                                                                case
                                                                                                                                                    and# [ipv5_s9zZt
                                                                                                                                                          28##]
                                                                                                                                                of
                                                                                                                                                { __DEFAULT ->
                                                                                                                                                      lvl8_r9y09;
                                                                                                                                                  0## ->
                                                                                                                                                      GHC.Event.EPoll.$fShowEvent8;
                                                                                                                                                };
                                                                                                                                          }; } in
                                                                                                                                let {
                                                                                                                                  sat_s9zZy [Occ=Once]
                                                                                                                                    :: System.Posix.Types.Fd
                                                                                                                                  [LclId] =
                                                                                                                                      CCCS GHC.Int.I32#! [ipv7_s9zZx];
                                                                                                                                } in 
                                                                                                                                  case
                                                                                                                                      f_s9zXz
                                                                                                                                          sat_s9zZy
                                                                                                                                          sat_s9zZC
                                                                                                                                          GHC.Prim.void#
                                                                                                                                  of
                                                                                                                                  { Unit# _ [Occ=Dead] ->
                                                                                                                                        case
                                                                                                                                            +# [ww1_s9zZn
                                                                                                                                                12#]
                                                                                                                                        of
                                                                                                                                        sat_s9zZG
                                                                                                                                        { __DEFAULT ->
                                                                                                                                              $wgo_s9zZm
                                                                                                                                                  sat_s9zZG
                                                                                                                                                  GHC.Prim.void#;
                                                                                                                                        };
                                                                                                                                  };
                                                                                                                          };
                                                                                                                    };
                                                                                                              };
                                                                                                        };
                                                                                                    1# ->
                                                                                                        exit_s9zY7
                                                                                                            GHC.Prim.void#;
                                                                                                  };
                                                                                        } in 
                                                                                          $wgo_s9zZm
                                                                                              0#
                                                                                              GHC.Prim.void#;
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                          };
                                } in 
                                  case mtimeout_s9zXy of {
                                    GHC.Base.Nothing ->
                                        case narrow32Int# [dt3_s9zXK] of sat_s9zZJ {
                                          __DEFAULT ->
                                              case
                                                  __pkg_ccall base-4.11.0.0 [dt_s9zXC
                                                                             ds2_s9zXM
                                                                             sat_s9zZJ
                                                                             0#
                                                                             GHC.Prim.void#]
                                              of
                                              { Unit# ds4_s9zZM [Occ=Once] ->
                                                    case narrow32Int# [ds4_s9zZM] of wild5_s9zZN {
                                                      __DEFAULT ->
                                                          $w$j1_s9zXO GHC.Prim.void# wild5_s9zZN;
                                                      -1# ->
                                                          case
                                                              __pkg_ccall base-4.11.0.0 [GHC.Prim.void#]
                                                          of
                                                          { Unit# ds6_s9zZR [Occ=Once] ->
                                                                case narrow32Int# [ds6_s9zZR] of {
                                                                  __DEFAULT ->
                                                                      case
                                                                          Foreign.C.Error.throwErrno1
                                                                              lvl3_r9y04
                                                                              GHC.Prim.void#
                                                                      of
                                                                      { Unit# ipv3_s9zZV [Occ=Once] ->
                                                                            case ipv3_s9zZV of {
                                                                              GHC.Int.I32# x#_s9zZX [Occ=Once] ->
                                                                                  $w$j1_s9zXO
                                                                                      GHC.Prim.void#
                                                                                      x#_s9zZX;
                                                                            };
                                                                      };
                                                                  4# ->
                                                                      $w$j1_s9zXO GHC.Prim.void# 0#;
                                                                };
                                                          };
                                                    };
                                              };
                                        };
                                    GHC.Base.Just timeout_s9zZY [Occ=Once!] ->
                                        let-no-escape {
                                          $j_s9zZZ [Occ=Once*!T[1], Dmd=<C(S),1*C1(U(U,U))>]
                                            :: GHC.Prim.Int#
                                               -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                     GHC.Types.Int #)
                                          [LclId[JoinId(1)], Arity=1, Str=<S,U>, Unf=OtherCon []] =
                                              sat-only [dt_s9zXC
                                                        dt3_s9zXK
                                                        ds2_s9zXM
                                                        $w$j1_s9zXO] \r [x#_s9A00]
                                                  case narrow32Int# [x#_s9A00] of sat_s9A03 {
                                                    __DEFAULT ->
                                                        case narrow32Int# [dt3_s9zXK] of sat_s9A02 {
                                                          __DEFAULT ->
                                                              case
                                                                  __pkg_ccall_GC base-4.11.0.0 [dt_s9zXC
                                                                                                ds2_s9zXM
                                                                                                sat_s9A02
                                                                                                sat_s9A03
                                                                                                GHC.Prim.void#]
                                                              of
                                                              { Unit# ds4_s9A06 [Occ=Once] ->
                                                                    case
                                                                        narrow32Int# [ds4_s9A06]
                                                                    of
                                                                    wild5_s9A07
                                                                    { __DEFAULT ->
                                                                          $w$j1_s9zXO
                                                                              GHC.Prim.void#
                                                                              wild5_s9A07;
                                                                      -1# ->
                                                                          case
                                                                              __pkg_ccall base-4.11.0.0 [GHC.Prim.void#]
                                                                          of
                                                                          { Unit# ds6_s9A0b [Occ=Once] ->
                                                                                case
                                                                                    narrow32Int# [ds6_s9A0b]
                                                                                of
                                                                                { __DEFAULT ->
                                                                                      case
                                                                                          Foreign.C.Error.throwErrno1
                                                                                              lvl5_r9y06
                                                                                              GHC.Prim.void#
                                                                                      of
                                                                                      { Unit# ipv3_s9A0f [Occ=Once] ->
                                                                                            case
                                                                                                ipv3_s9A0f
                                                                                            of
                                                                                            { GHC.Int.I32# x#1_s9A0h [Occ=Once] ->
                                                                                                  $w$j1_s9zXO
                                                                                                      GHC.Prim.void#
                                                                                                      x#1_s9A0h;
                                                                                            };
                                                                                      };
                                                                                  4# ->
                                                                                      $w$j1_s9zXO
                                                                                          GHC.Prim.void#
                                                                                          0#;
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                        } in 
                                          case timeout_s9zZY of {
                                            GHC.Event.Internal.Timeout dt4_s9A0j [Occ=Once] ->
                                                case plusWord# [dt4_s9A0j 1000000##] of sat_s9A0k {
                                                  __DEFAULT ->
                                                      case minusWord# [sat_s9A0k 1##] of sat_s9A0l {
                                                        __DEFAULT ->
                                                            case
                                                                quotWord# [sat_s9A0l 1000000##]
                                                            of
                                                            sat_s9A0m
                                                            { __DEFAULT ->
                                                                  case
                                                                      word2Int# [sat_s9A0m]
                                                                  of
                                                                  sat_s9A0n
                                                                  { __DEFAULT -> $j_s9zZZ sat_s9A0n;
                                                                  };
                                                            };
                                                      };
                                                };
                                            GHC.Event.Internal.Forever -> $j_s9zZZ -1#;
                                          };
                                  };
                          };
                    };
              };
        };

GHC.Event.EPoll.new9
  :: GHC.Event.EPoll.EPoll
     -> System.Posix.Types.Fd
     -> GHC.Event.Internal.Event
     -> GHC.Event.Internal.Event
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
[GblId,
 Arity=5,
 Str=<S(SL),1*U(U,A)><S(S),1*U(U)><S(S),1*U(1*U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ep_s9A0o fd_s9A0p oevt_s9A0q nevt_s9A0r void_0E]
        case newAlignedPinnedByteArray# [12# 4# GHC.Prim.void#] of {
          Unit# ipv1_s9A0v [Occ=Once] ->
              case unsafeFreezeByteArray# [ipv1_s9A0v GHC.Prim.void#] of {
                Unit# ipv3_s9A0y ->
                    case nevt_s9A0r of {
                      GHC.Types.I# x#_s9A0A ->
                          let-no-escape {
                            $j_s9A0B [Occ=Once*!T[1], Dmd=<C(S),1*C1(U(U,U))>]
                              :: GHC.Prim.Word#
                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
                            [LclId[JoinId(1)], Arity=1, Str=<S,U>, Unf=OtherCon []] =
                                sat-only [ep_s9A0o
                                          fd_s9A0p
                                          oevt_s9A0q
                                          ipv3_s9A0y
                                          x#_s9A0A] \r [x_s9A0C]
                                    case byteArrayContents# [ipv3_s9A0y] of ptr_s9A0D [Dmd=<S,U>] {
                                      __DEFAULT ->
                                          case
                                              writeWord32OffAddr# [ptr_s9A0D
                                                                   0#
                                                                   x_s9A0C
                                                                   GHC.Prim.void#]
                                          of
                                          s2_s9A0E
                                          { (##) ->
                                                case fd_s9A0p of {
                                                  GHC.Int.I32# x1_s9A0G ->
                                                      case plusAddr# [ptr_s9A0D 4#] of sat_s9A0H {
                                                        __DEFAULT ->
                                                            case
                                                                writeInt32OffAddr# [sat_s9A0H
                                                                                    0#
                                                                                    x1_s9A0G
                                                                                    GHC.Prim.void#]
                                                            of
                                                            s1_s9A0I
                                                            { (##) ->
                                                                  case ep_s9A0o of {
                                                                    GHC.Event.EPoll.EPoll dt_s9A0K [Occ=Once]
                                                                                          _ [Occ=Dead] ->
                                                                        case oevt_s9A0q of {
                                                                          GHC.Types.I# x2_s9A0N [Occ=Once!] ->
                                                                              let-no-escape {
                                                                                $j1_s9A0O [Occ=Once*!T[1],
                                                                                           Dmd=<C(S),1*C1(U(U,U))>]
                                                                                  :: GHC.Prim.Int#
                                                                                     -> (# GHC.Prim.State#
                                                                                             GHC.Prim.RealWorld,
                                                                                           GHC.Types.Bool #)
                                                                                [LclId[JoinId(1)],
                                                                                 Arity=1,
                                                                                 Str=<S,U>,
                                                                                 Unf=OtherCon []] =
                                                                                    sat-only [ipv3_s9A0y
                                                                                              ptr_s9A0D
                                                                                              x1_s9A0G
                                                                                              dt_s9A0K] \r [ds_s9A0P]
                                                                                        case
                                                                                            __pkg_ccall base-4.11.0.0 [dt_s9A0K
                                                                                                                       ds_s9A0P
                                                                                                                       x1_s9A0G
                                                                                                                       ptr_s9A0D
                                                                                                                       GHC.Prim.void#]
                                                                                        of
                                                                                        { Unit# ds5_s9A0T [Occ=Once] ->
                                                                                              case
                                                                                                  narrow32Int# [ds5_s9A0T]
                                                                                              of
                                                                                              { __DEFAULT ->
                                                                                                    case
                                                                                                        touch# [ipv3_s9A0y
                                                                                                                GHC.Prim.void#]
                                                                                                    of
                                                                                                    s4_s9A0V
                                                                                                    { (##) ->
                                                                                                          Unit# [GHC.Types.True];
                                                                                                    };
                                                                                                -1# ->
                                                                                                    case
                                                                                                        __pkg_ccall base-4.11.0.0 [GHC.Prim.void#]
                                                                                                    of
                                                                                                    { Unit# ds7_s9A0Z [Occ=Once] ->
                                                                                                          GHC.Event.EPoll.new6
                                                                                                              GHC.Prim.void#
                                                                                                              ds7_s9A0Z;
                                                                                                    };
                                                                                              };
                                                                                        };
                                                                              } in 
                                                                                case x2_s9A0N of {
                                                                                  __DEFAULT ->
                                                                                      case
                                                                                          x#_s9A0A
                                                                                      of
                                                                                      { __DEFAULT ->
                                                                                            $j1_s9A0O
                                                                                                3#;
                                                                                        0# ->
                                                                                            $j1_s9A0O
                                                                                                2#;
                                                                                      };
                                                                                  0# ->
                                                                                      $j1_s9A0O 1#;
                                                                                };
                                                                        };
                                                                  };
                                                            };
                                                      };
                                                };
                                          };
                                    };
                          } in 
                            case andI# [x#_s9A0A 1#] of {
                              __DEFAULT ->
                                  case andI# [x#_s9A0A 2#] of {
                                    __DEFAULT -> $j_s9A0B 5##;
                                    0# -> $j_s9A0B 1##;
                                  };
                              0# ->
                                  case andI# [x#_s9A0A 2#] of {
                                    __DEFAULT -> $j_s9A0B 4##;
                                    0# -> $j_s9A0B 0##;
                                  };
                            };
                    };
              };
        };

GHC.Event.EPoll.new5
  :: GHC.Event.EPoll.EPoll
     -> System.Posix.Types.Fd
     -> GHC.Event.Internal.Event
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
[GblId,
 Arity=4,
 Str=<S(SL),1*U(U,A)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ep_s9A16 fd_s9A17 evt_s9A18 void_0E]
        case evt_s9A18 of {
          GHC.Types.I# x#_s9A1b ->
              let-no-escape {
                $j_s9A1c [Occ=Once*!T[1], Dmd=<C(S),1*C1(U(U,U))>]
                  :: GHC.Prim.Word#
                     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
                [LclId[JoinId(1)], Arity=1, Str=<S,U>, Unf=OtherCon []] =
                    sat-only [ep_s9A16 fd_s9A17] \r [x#1_s9A1d]
                        case newAlignedPinnedByteArray# [12# 4# GHC.Prim.void#] of {
                          Unit# ipv1_s9A1g [Occ=Once] ->
                              case unsafeFreezeByteArray# [ipv1_s9A1g GHC.Prim.void#] of {
                                Unit# ipv3_s9A1j ->
                                    case or# [x#1_s9A1d 1073741824##] of ipv4_s9A1k [Dmd=<S,U>] {
                                      __DEFAULT ->
                                          case
                                              byteArrayContents# [ipv3_s9A1j]
                                          of
                                          ptr_s9A1l [Dmd=<S,U>]
                                          { __DEFAULT ->
                                                case
                                                    writeWord32OffAddr# [ptr_s9A1l
                                                                         0#
                                                                         ipv4_s9A1k
                                                                         GHC.Prim.void#]
                                                of
                                                s2_s9A1m
                                                { (##) ->
                                                      case fd_s9A17 of {
                                                        GHC.Int.I32# x_s9A1o ->
                                                            case
                                                                plusAddr# [ptr_s9A1l 4#]
                                                            of
                                                            sat_s9A1p
                                                            { __DEFAULT ->
                                                                  case
                                                                      writeInt32OffAddr# [sat_s9A1p
                                                                                          0#
                                                                                          x_s9A1o
                                                                                          GHC.Prim.void#]
                                                                  of
                                                                  s1_s9A1q
                                                                  { (##) ->
                                                                        case ep_s9A16 of {
                                                                          GHC.Event.EPoll.EPoll dt_s9A1s
                                                                                                _ [Occ=Dead] ->
                                                                              case
                                                                                  __pkg_ccall base-4.11.0.0 [dt_s9A1s
                                                                                                             3#
                                                                                                             x_s9A1o
                                                                                                             ptr_s9A1l
                                                                                                             GHC.Prim.void#]
                                                                              of
                                                                              { Unit# ds1_s9A1x [Occ=Once] ->
                                                                                    case
                                                                                        touch# [ipv3_s9A1j
                                                                                                GHC.Prim.void#]
                                                                                    of
                                                                                    s4_s9A1y
                                                                                    { (##) ->
                                                                                          case
                                                                                              narrow32Int# [ds1_s9A1x]
                                                                                          of
                                                                                          { __DEFAULT ->
                                                                                                case
                                                                                                    __pkg_ccall base-4.11.0.0 [GHC.Prim.void#]
                                                                                                of
                                                                                                { Unit# ds6_s9A1D [Occ=Once] ->
                                                                                                      case
                                                                                                          narrow32Int# [ds6_s9A1D]
                                                                                                      of
                                                                                                      { __DEFAULT ->
                                                                                                            Foreign.C.Error.throwErrno1
                                                                                                                GHC.Event.EPoll.new7
                                                                                                                GHC.Prim.void#;
                                                                                                        2# ->
                                                                                                            case
                                                                                                                newAlignedPinnedByteArray# [12#
                                                                                                                                            4#
                                                                                                                                            GHC.Prim.void#]
                                                                                                            of
                                                                                                            { Unit# ipv6_s9A1H [Occ=Once] ->
                                                                                                                  case
                                                                                                                      unsafeFreezeByteArray# [ipv6_s9A1H
                                                                                                                                              GHC.Prim.void#]
                                                                                                                  of
                                                                                                                  { Unit# ipv8_s9A1K ->
                                                                                                                        case
                                                                                                                            byteArrayContents# [ipv8_s9A1K]
                                                                                                                        of
                                                                                                                        ptr1_s9A1L [Dmd=<S,U>]
                                                                                                                        { __DEFAULT ->
                                                                                                                              case
                                                                                                                                  writeWord32OffAddr# [ptr1_s9A1L
                                                                                                                                                       0#
                                                                                                                                                       ipv4_s9A1k
                                                                                                                                                       GHC.Prim.void#]
                                                                                                                              of
                                                                                                                              s3_s9A1M
                                                                                                                              { (##) ->
                                                                                                                                    case
                                                                                                                                        plusAddr# [ptr1_s9A1L
                                                                                                                                                   4#]
                                                                                                                                    of
                                                                                                                                    sat_s9A1N
                                                                                                                                    { __DEFAULT ->
                                                                                                                                          case
                                                                                                                                              writeInt32OffAddr# [sat_s9A1N
                                                                                                                                                                  0#
                                                                                                                                                                  x_s9A1o
                                                                                                                                                                  GHC.Prim.void#]
                                                                                                                                          of
                                                                                                                                          s5_s9A1O
                                                                                                                                          { (##) ->
                                                                                                                                                case
                                                                                                                                                    __pkg_ccall base-4.11.0.0 [dt_s9A1s
                                                                                                                                                                               1#
                                                                                                                                                                               x_s9A1o
                                                                                                                                                                               ptr1_s9A1L
                                                                                                                                                                               GHC.Prim.void#]
                                                                                                                                                of
                                                                                                                                                { Unit# ds10_s9A1S [Occ=Once] ->
                                                                                                                                                      case
                                                                                                                                                          narrow32Int# [ds10_s9A1S]
                                                                                                                                                      of
                                                                                                                                                      { __DEFAULT ->
                                                                                                                                                            case
                                                                                                                                                                touch# [ipv8_s9A1K
                                                                                                                                                                        GHC.Prim.void#]
                                                                                                                                                            of
                                                                                                                                                            s6_s9A1U
                                                                                                                                                            { (##) ->
                                                                                                                                                                  Unit# [GHC.Types.True];
                                                                                                                                                            };
                                                                                                                                                        -1# ->
                                                                                                                                                            case
                                                                                                                                                                __pkg_ccall base-4.11.0.0 [GHC.Prim.void#]
                                                                                                                                                            of
                                                                                                                                                            { Unit# ds12_s9A1Y [Occ=Once] ->
                                                                                                                                                                  GHC.Event.EPoll.new6
                                                                                                                                                                      GHC.Prim.void#
                                                                                                                                                                      ds12_s9A1Y;
                                                                                                                                                            };
                                                                                                                                                      };
                                                                                                                                                };
                                                                                                                                          };
                                                                                                                                    };
                                                                                                                              };
                                                                                                                        };
                                                                                                                  };
                                                                                                            };
                                                                                                      };
                                                                                                };
                                                                                            0# ->
                                                                                                Unit# [GHC.Types.True];
                                                                                          };
                                                                                    };
                                                                              };
                                                                        };
                                                                  };
                                                            };
                                                      };
                                                };
                                          };
                                    };
                              };
                        };
              } in 
                case andI# [x#_s9A1b 1#] of {
                  __DEFAULT ->
                      case andI# [x#_s9A1b 2#] of {
                        __DEFAULT -> $j_s9A1c 5##;
                        0# -> $j_s9A1c 1##;
                      };
                  0# ->
                      case andI# [x#_s9A1b 2#] of {
                        __DEFAULT -> $j_s9A1c 4##;
                        0# -> $j_s9A1c 0##;
                      };
                };
        };

GHC.Event.EPoll.new4
  :: GHC.Event.EPoll.EPoll
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,A)><S,U>,
 Unf=OtherCon []] =
    [] \r [be_s9A23 void_0E]
        case be_s9A23 of {
          GHC.Event.EPoll.EPoll dt_s9A26 [Occ=Once] _ [Occ=Dead] ->
              case __pkg_ccall base-4.11.0.0 [dt_s9A26 GHC.Prim.void#] of {
                Unit# _ [Occ=Dead] -> Unit# [GHC.Tuple.()];
              };
        };

GHC.Event.EPoll.$w$j [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> GHC.Prim.Int#
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Event.Internal.Backend #)
[GblId, Arity=2, Str=<L,U><L,U>, Unf=OtherCon []] =
    [] \r [void_0E ww_s9A2d]
        case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
          Unit# ds1_s9A2h [Occ=Once] ->
              case __pkg_ccall base-4.11.0.0 [GHC.Prim.realWorld#] of {
                Unit# ds3_s9A2l [Occ=Once] ->
                    case narrow32Int# [ds1_s9A2h] of sat_s9A2n {
                      __DEFAULT ->
                          case
                              __pkg_ccall base-4.11.0.0 [ww_s9A2d
                                                         sat_s9A2n
                                                         ds3_s9A2l
                                                         GHC.Prim.void#]
                          of
                          { Unit# ds5_s9A2q [Occ=Once] ->
                                case narrow32Int# [ds5_s9A2q] of {
                                  __DEFAULT ->
                                      case newPinnedByteArray# [768# GHC.Prim.void#] of {
                                        Unit# ipv6_s9A2u ->
                                            let {
                                              sat_s9A2w [Occ=Once]
                                                :: GHC.ForeignPtr.ForeignPtrContents
                                              [LclId] =
                                                  CCCS GHC.ForeignPtr.PlainPtr! [ipv6_s9A2u];
                                            } in 
                                              case byteArrayContents# [ipv6_s9A2u] of sat_s9A2v {
                                                __DEFAULT ->
                                                    let {
                                                      sat_s9A2x [Occ=Once]
                                                        :: GHC.ForeignPtr.ForeignPtr
                                                             GHC.Event.EPoll.Event
                                                      [LclId] =
                                                          CCCS GHC.ForeignPtr.ForeignPtr! [sat_s9A2v
                                                                                           sat_s9A2w]; } in
                                                    let {
                                                      sat_s9A2y [Occ=Once]
                                                        :: GHC.Event.Array.AC GHC.Event.EPoll.Event
                                                      [LclId] =
                                                          CCCS GHC.Event.Array.AC! [sat_s9A2x
                                                                                    0#
                                                                                    64#];
                                                    } in 
                                                      case
                                                          newMutVar# [sat_s9A2y GHC.Prim.void#]
                                                      of
                                                      { Unit# ipv8_s9A2B [Occ=Once] ->
                                                            let {
                                                              sat_s9A2C [Occ=Once]
                                                                :: GHC.Event.EPoll.EPoll
                                                              [LclId] =
                                                                  CCCS GHC.Event.EPoll.EPoll! [ww_s9A2d
                                                                                               ipv8_s9A2B]; } in
                                                            let {
                                                              sat_s9A2D [Occ=Once]
                                                                :: GHC.Event.Internal.Backend
                                                              [LclId] =
                                                                  CCCS GHC.Event.Internal.Backend! [sat_s9A2C
                                                                                                    GHC.Event.EPoll.new10
                                                                                                    GHC.Event.EPoll.new9
                                                                                                    GHC.Event.EPoll.new5
                                                                                                    GHC.Event.EPoll.new4];
                                                            } in  Unit# [sat_s9A2D];
                                                      };
                                              };
                                      };
                                  -1# ->
                                      case __pkg_ccall base-4.11.0.0 [GHC.Prim.void#] of {
                                        Unit# ds7_s9A2H [Occ=Once] ->
                                            System.Posix.Internals.setCloseOnExec2
                                                GHC.Prim.void# ds7_s9A2H;
                                      };
                                };
                          };
                    };
              };
        };

GHC.Event.EPoll.new3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "epollCreate"#;

GHC.Event.EPoll.new2 :: [GHC.Types.Char]
[GblId] =
    [] \u [] GHC.CString.unpackCString# GHC.Event.EPoll.new3;

GHC.Event.EPoll.new1
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Event.Internal.Backend #)
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [void_0E]
        case __pkg_ccall base-4.11.0.0 [256# GHC.Prim.void#] of {
          Unit# ds1_s9A2N [Occ=Once] ->
              case narrow32Int# [ds1_s9A2N] of wild1_s9A2O {
                __DEFAULT -> GHC.Event.EPoll.$w$j GHC.Prim.void# wild1_s9A2O;
                -1# ->
                    case
                        Foreign.C.Error.throwErrno1 GHC.Event.EPoll.new2 GHC.Prim.void#
                    of
                    { Unit# ipv1_s9A2R [Occ=Once] ->
                          case ipv1_s9A2R of {
                            GHC.Int.I32# ww1_s9A2T [Occ=Once] ->
                                GHC.Event.EPoll.$w$j GHC.Prim.void# ww1_s9A2T;
                          };
                    };
              };
        };

GHC.Event.EPoll.new :: GHC.Types.IO GHC.Event.Internal.Backend
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [void_0E] GHC.Event.EPoll.new1 GHC.Prim.void#;

GHC.Event.EPoll.Event
  :: GHC.Event.EPoll.EventType
     -> System.Posix.Types.Fd -> GHC.Event.EPoll.Event
[GblId[DataCon],
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U><L,U>m,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] GHC.Event.EPoll.Event [eta_B2 eta_B1];

GHC.Event.EPoll.EPoll
  :: GHC.Prim.Int#
     -> GHC.Prim.MutVar#
          GHC.Prim.RealWorld (GHC.Event.Array.AC GHC.Event.EPoll.Event)
     -> GHC.Event.EPoll.EPoll
[GblId[DataCon],
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U><L,U>m,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] GHC.Event.EPoll.EPoll [eta_B2 eta_B1];

