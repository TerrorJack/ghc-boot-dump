
==================== Pre unarise: ====================
2018-03-16 16:04:26.118406216 UTC

GHC.Event.Internal.$WBackend [InlPrag=INLINE[2]]
  :: forall a.
     a
     -> (a
         -> GHC.Base.Maybe GHC.Event.Internal.Timeout
         -> (System.Posix.Types.Fd
             -> GHC.Event.Internal.Event -> GHC.Types.IO ())
         -> GHC.Types.IO GHC.Types.Int)
     -> (a
         -> System.Posix.Types.Fd
         -> GHC.Event.Internal.Event
         -> GHC.Event.Internal.Event
         -> GHC.Types.IO GHC.Types.Bool)
     -> (a
         -> System.Posix.Types.Fd
         -> GHC.Event.Internal.Event
         -> GHC.Types.IO GHC.Types.Bool)
     -> (a -> GHC.Types.IO ())
     -> GHC.Event.Internal.Backend
[GblId[DataConWrapper],
 Arity=5,
 Caf=NoCafRefs,
 Str=<S,U><L,U><L,U><L,U><L,U>,
 Unf=OtherCon []] =
    [] \r [dt_s9iWX dt_s9iWY dt_s9iWZ dt_s9iX0 dt_s9iX1]
        case dt_s9iWX of dt_s9iX2 {
          __DEFAULT ->
              GHC.Event.Internal.Backend [dt_s9iX2
                                          dt_s9iWY
                                          dt_s9iWZ
                                          dt_s9iX0
                                          dt_s9iX1];
        };

GHC.Event.Internal.$WTimeout [InlPrag=INLINE[2]]
  :: GHC.Word.Word64 -> GHC.Event.Internal.Timeout
[GblId[DataConWrapper],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S,U>m1,
 Unf=OtherCon []] =
    [] \r [dt_s9iX3]
        case dt_s9iX3 of {
          GHC.Word.W64# dt_s9iX5 [Occ=Once] ->
              GHC.Event.Internal.Timeout [dt_s9iX5];
        };

GHC.Event.Internal.$fMonoidEventLifetime1 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [0#];

GHC.Event.Internal.$fShowTimeout4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Forever"#;

GHC.Event.Internal.$fShowTimeout3 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# GHC.Event.Internal.$fShowTimeout4;

GHC.Event.Internal.$fShowTimeout2
  :: [GHC.Types.Char] -> [GHC.Types.Char]
[GblId, Arity=1, Unf=OtherCon []] =
    [] \r [eta_B1]
        GHC.Base.++ GHC.Event.Internal.$fShowTimeout3 eta_B1;

GHC.Event.Internal.$fShowTimeout5 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Timeout "#;

GHC.Event.Internal.$fShowTimeout_$cshowsPrec
  :: GHC.Types.Int -> GHC.Event.Internal.Timeout -> GHC.Show.ShowS
[GblId, Arity=2, Str=<L,1*U(U)><S,1*U>, Unf=OtherCon []] =
    [] \r [a_s9iX6 ds_s9iX7]
        case ds_s9iX7 of {
          GHC.Event.Internal.Timeout dt_s9iX9 ->
              case a_s9iX6 of {
                GHC.Types.I# x_s9iXb [Occ=Once] ->
                    let {
                      w1_s9iXc [Occ=OnceL*] :: GHC.Integer.Type.Integer
                      [LclId] =
                          [dt_s9iX9] \u []
                              case word2Int# [dt_s9iX9] of i#_s9iXd [Dmd=<S,U>] {
                                __DEFAULT ->
                                    case >=# [i#_s9iXd 0#] of {
                                      __DEFAULT -> GHC.Integer.Type.wordToInteger dt_s9iX9;
                                      1# -> GHC.Integer.Type.smallInteger i#_s9iXd;
                                    };
                              };
                    } in 
                      case >=# [x_s9iXb 11#] of {
                        __DEFAULT ->
                            let {
                              sat_s9iXl [Occ=OnceT[0]] :: GHC.Base.String -> [GHC.Types.Char]
                              [LclId] =
                                  [w1_s9iXc] \r [x1_s9iXg]
                                      let {
                                        sat_s9iXk [Occ=Once] :: [GHC.Types.Char]
                                        [LclId] =
                                            [w1_s9iXc x1_s9iXg] \u []
                                                case
                                                    GHC.Show.$w$cshowsPrec4 11# w1_s9iXc x1_s9iXg
                                                of
                                                { (#,#) ww3_s9iXi [Occ=Once] ww4_s9iXj [Occ=Once] ->
                                                      : [ww3_s9iXi ww4_s9iXj];
                                                };
                                      } in 
                                        GHC.CString.unpackAppendCString#
                                            GHC.Event.Internal.$fShowTimeout5 sat_s9iXk;
                            } in  sat_s9iXl;
                        1# ->
                            let {
                              sat_s9iXt [Occ=OnceT[0]] :: GHC.Base.String -> [GHC.Types.Char]
                              [LclId] =
                                  [w1_s9iXc] \r [x1_s9iXm]
                                      let {
                                        sat_s9iXs [Occ=Once] :: [GHC.Types.Char]
                                        [LclId] =
                                            [w1_s9iXc x1_s9iXm] \u []
                                                let {
                                                  sat_s9iXr [Occ=Once] :: [GHC.Types.Char]
                                                  [LclId] =
                                                      [w1_s9iXc x1_s9iXm] \u []
                                                          let {
                                                            sat_s9iXn [Occ=Once] :: GHC.Base.String
                                                            [LclId] =
                                                                CCCS :! [GHC.Show.$fShow(,)2
                                                                         x1_s9iXm];
                                                          } in 
                                                            case
                                                                GHC.Show.$w$cshowsPrec4
                                                                    11# w1_s9iXc sat_s9iXn
                                                            of
                                                            { (#,#) ww3_s9iXp [Occ=Once]
                                                                    ww4_s9iXq [Occ=Once] ->
                                                                  : [ww3_s9iXp ww4_s9iXq];
                                                            };
                                                } in 
                                                  GHC.CString.unpackAppendCString#
                                                      GHC.Event.Internal.$fShowTimeout5 sat_s9iXr;
                                      } in  : [GHC.Show.$fShow(,)4 sat_s9iXs];
                            } in  sat_s9iXt;
                      };
              };
          GHC.Event.Internal.Forever -> GHC.Event.Internal.$fShowTimeout2;
        };

GHC.Event.Internal.$fShowTimeout_$cshow
  :: GHC.Event.Internal.Timeout -> GHC.Base.String
[GblId, Arity=1, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [x_s9iXu]
        case x_s9iXu of {
          GHC.Event.Internal.Timeout dt_s9iXw ->
              let {
                sat_s9iXH [Occ=Once] :: [GHC.Types.Char]
                [LclId] =
                    [dt_s9iXw] \u []
                        case word2Int# [dt_s9iXw] of i#_s9iXx [Dmd=<S,U>] {
                          __DEFAULT ->
                              case >=# [i#_s9iXx 0#] of {
                                __DEFAULT ->
                                    case GHC.Integer.Type.wordToInteger dt_s9iXw of sat_s9iXz {
                                      __DEFAULT ->
                                          case
                                              GHC.Show.$w$cshowsPrec4 11# sat_s9iXz GHC.Types.[]
                                          of
                                          { (#,#) ww3_s9iXB [Occ=Once] ww4_s9iXC [Occ=Once] ->
                                                : [ww3_s9iXB ww4_s9iXC];
                                          };
                                    };
                                1# ->
                                    case GHC.Integer.Type.smallInteger i#_s9iXx of sat_s9iXD {
                                      __DEFAULT ->
                                          case
                                              GHC.Show.$w$cshowsPrec4 11# sat_s9iXD GHC.Types.[]
                                          of
                                          { (#,#) ww3_s9iXF [Occ=Once] ww4_s9iXG [Occ=Once] ->
                                                : [ww3_s9iXF ww4_s9iXG];
                                          };
                                    };
                              };
                        };
              } in 
                GHC.CString.unpackAppendCString#
                    GHC.Event.Internal.$fShowTimeout5 sat_s9iXH;
          GHC.Event.Internal.Forever -> GHC.Event.Internal.$fShowTimeout3;
        };

GHC.Event.Internal.$fShowTimeout1
  :: GHC.Event.Internal.Timeout -> GHC.Show.ShowS
[GblId, Arity=1, Unf=OtherCon []] =
    [] \r [eta_B1]
        GHC.Event.Internal.$fShowTimeout_$cshowsPrec
            GHC.Event.Internal.$fMonoidEventLifetime1 eta_B1;

GHC.Event.Internal.$fShowTimeout_$cshowList
  :: [GHC.Event.Internal.Timeout] -> GHC.Show.ShowS
[GblId, Arity=2, Str=<S,1*U><L,U>, Unf=OtherCon []] =
    [] \r [ls_s9iXI s_s9iXJ]
        GHC.Show.showList__
            GHC.Event.Internal.$fShowTimeout1 ls_s9iXI s_s9iXJ;

GHC.Event.Internal.$fShowTimeout [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show GHC.Event.Internal.Timeout
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Event.Internal.$fShowTimeout_$cshowsPrec
                                    GHC.Event.Internal.$fShowTimeout_$cshow
                                    GHC.Event.Internal.$fShowTimeout_$cshowList];

GHC.Event.Internal.$fShowEventLifetime2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "EL "#;

GHC.Event.Internal.$w$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Event.Internal.EventLifetime
     -> GHC.Base.String
     -> GHC.Base.String
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,U><L,1*U(U)><L,U>,
 Unf=OtherCon []] =
    [] \r [ww_s9iXK w_s9iXL w1_s9iXM]
        case >=# [ww_s9iXK 11#] of {
          __DEFAULT ->
              let {
                sat_s9iXT [Occ=Once] :: [GHC.Types.Char]
                [LclId] =
                    [w_s9iXL w1_s9iXM] \u []
                        case w_s9iXL of {
                          GHC.Types.I# ww3_s9iXP [Occ=Once] ->
                              case GHC.Show.$wshowSignedInt 11# ww3_s9iXP w1_s9iXM of {
                                (#,#) ww5_s9iXR [Occ=Once] ww6_s9iXS [Occ=Once] ->
                                    : [ww5_s9iXR ww6_s9iXS];
                              };
                        };
              } in 
                GHC.CString.unpackAppendCString#
                    GHC.Event.Internal.$fShowEventLifetime2 sat_s9iXT;
          1# ->
              let {
                sat_s9iY1 [Occ=Once] :: [GHC.Types.Char]
                [LclId] =
                    [w_s9iXL w1_s9iXM] \u []
                        let {
                          sat_s9iY0 [Occ=Once] :: [GHC.Types.Char]
                          [LclId] =
                              [w_s9iXL w1_s9iXM] \u []
                                  case w_s9iXL of {
                                    GHC.Types.I# ww3_s9iXV [Occ=Once] ->
                                        let {
                                          sat_s9iXW [Occ=Once] :: GHC.Base.String
                                          [LclId] =
                                              CCCS :! [GHC.Show.$fShow(,)2 w1_s9iXM];
                                        } in 
                                          case GHC.Show.$wshowSignedInt 11# ww3_s9iXV sat_s9iXW of {
                                            (#,#) ww5_s9iXY [Occ=Once] ww6_s9iXZ [Occ=Once] ->
                                                : [ww5_s9iXY ww6_s9iXZ];
                                          };
                                  };
                        } in 
                          GHC.CString.unpackAppendCString#
                              GHC.Event.Internal.$fShowEventLifetime2 sat_s9iY0;
              } in  : [GHC.Show.$fShow(,)4 sat_s9iY1];
        };

GHC.Event.Internal.$fShowEventLifetime_$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Int
     -> GHC.Event.Internal.EventLifetime -> GHC.Show.ShowS
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><L,1*U(U)><L,U>,
 Unf=OtherCon []] =
    [] \r [w_s9iY2 w1_s9iY3 w2_s9iY4]
        case w_s9iY2 of {
          GHC.Types.I# ww1_s9iY6 [Occ=Once] ->
              GHC.Event.Internal.$w$cshowsPrec ww1_s9iY6 w1_s9iY3 w2_s9iY4;
        };

GHC.Event.Internal.$fShowEventLifetime_$cshow
  :: GHC.Event.Internal.EventLifetime -> GHC.Base.String
[GblId, Arity=1, Caf=NoCafRefs, Str=<L,1*U(U)>, Unf=OtherCon []] =
    [] \r [x_s9iY7]
        let {
          sat_s9iYd [Occ=Once] :: [GHC.Types.Char]
          [LclId] =
              [x_s9iY7] \u []
                  case x_s9iY7 of {
                    GHC.Types.I# ww3_s9iY9 [Occ=Once] ->
                        case GHC.Show.$wshowSignedInt 11# ww3_s9iY9 GHC.Types.[] of {
                          (#,#) ww5_s9iYb [Occ=Once] ww6_s9iYc [Occ=Once] ->
                              : [ww5_s9iYb ww6_s9iYc];
                        };
                  };
        } in 
          GHC.CString.unpackAppendCString#
              GHC.Event.Internal.$fShowEventLifetime2 sat_s9iYd;

GHC.Event.Internal.$fShowEventLifetime1
  :: GHC.Event.Internal.EventLifetime -> GHC.Show.ShowS
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,1*U(U)><L,U>,
 Unf=OtherCon []] =
    [] \r [w_s9iYe w1_s9iYf]
        GHC.Event.Internal.$w$cshowsPrec 0# w_s9iYe w1_s9iYf;

GHC.Event.Internal.$fShowEventLifetime_$cshowList
  :: [GHC.Event.Internal.EventLifetime] -> GHC.Show.ShowS
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><L,U>,
 Unf=OtherCon []] =
    [] \r [ls_s9iYg s_s9iYh]
        GHC.Show.showList__
            GHC.Event.Internal.$fShowEventLifetime1 ls_s9iYg s_s9iYh;

GHC.Event.Internal.$fShowEventLifetime [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show GHC.Event.Internal.EventLifetime
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Event.Internal.$fShowEventLifetime_$cshowsPrec
                                    GHC.Event.Internal.$fShowEventLifetime_$cshow
                                    GHC.Event.Internal.$fShowEventLifetime_$cshowList];

GHC.Event.Internal.$fEqLifetime_$c==
  :: GHC.Event.Internal.Lifetime
     -> GHC.Event.Internal.Lifetime -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [ds_s9iYi ds1_s9iYj]
        case ds_s9iYi of {
          GHC.Event.Internal.OneShot ->
              case ds1_s9iYj of {
                GHC.Event.Internal.OneShot -> GHC.Types.True [];
                GHC.Event.Internal.MultiShot -> GHC.Types.False [];
              };
          GHC.Event.Internal.MultiShot ->
              case ds1_s9iYj of {
                GHC.Event.Internal.OneShot -> GHC.Types.False [];
                GHC.Event.Internal.MultiShot -> GHC.Types.True [];
              };
        };

GHC.Event.Internal.$fEqLifetime_$c/= [InlPrag=INLINE (sat-args=2)]
  :: GHC.Event.Internal.Lifetime
     -> GHC.Event.Internal.Lifetime -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [eta_s9iYn eta1_s9iYo]
        case eta_s9iYn of {
          GHC.Event.Internal.OneShot ->
              case eta1_s9iYo of {
                GHC.Event.Internal.OneShot -> GHC.Types.False [];
                GHC.Event.Internal.MultiShot -> GHC.Types.True [];
              };
          GHC.Event.Internal.MultiShot ->
              case eta1_s9iYo of {
                GHC.Event.Internal.OneShot -> GHC.Types.True [];
                GHC.Event.Internal.MultiShot -> GHC.Types.False [];
              };
        };

GHC.Event.Internal.$fEqLifetime [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq GHC.Event.Internal.Lifetime
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Event.Internal.$fEqLifetime_$c==
                                     GHC.Event.Internal.$fEqLifetime_$c/=];

GHC.Event.Internal.$fShowLifetime5 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "OneShot"#;

GHC.Event.Internal.$fShowLifetime4 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# GHC.Event.Internal.$fShowLifetime5;

GHC.Event.Internal.$fShowLifetime3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "MultiShot"#;

GHC.Event.Internal.$fShowLifetime2 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# GHC.Event.Internal.$fShowLifetime3;

GHC.Event.Internal.$fShowLifetime_$cshowsPrec
  :: GHC.Types.Int -> GHC.Event.Internal.Lifetime -> GHC.Show.ShowS
[GblId, Arity=3, Str=<L,A><S,1*U><L,1*U>, Unf=OtherCon []] =
    [] \r [ds_s9iYs ds1_s9iYt eta_s9iYu]
        case ds1_s9iYt of {
          GHC.Event.Internal.OneShot ->
              GHC.Base.++ GHC.Event.Internal.$fShowLifetime4 eta_s9iYu;
          GHC.Event.Internal.MultiShot ->
              GHC.Base.++ GHC.Event.Internal.$fShowLifetime2 eta_s9iYu;
        };

GHC.Event.Internal.$fShowLifetime_$cshow
  :: GHC.Event.Internal.Lifetime -> GHC.Base.String
[GblId, Arity=1, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [x_s9iYw]
        case x_s9iYw of {
          GHC.Event.Internal.OneShot -> GHC.Event.Internal.$fShowLifetime4;
          GHC.Event.Internal.MultiShot -> GHC.Event.Internal.$fShowLifetime2;
        };

GHC.Event.Internal.$fShowLifetime1
  :: GHC.Event.Internal.Lifetime -> GHC.Show.ShowS
[GblId, Arity=2, Str=<S,1*U><L,1*U>, Unf=OtherCon []] =
    [] \r [ds_s9iYy eta_s9iYz]
        case ds_s9iYy of {
          GHC.Event.Internal.OneShot ->
              GHC.Base.++ GHC.Event.Internal.$fShowLifetime4 eta_s9iYz;
          GHC.Event.Internal.MultiShot ->
              GHC.Base.++ GHC.Event.Internal.$fShowLifetime2 eta_s9iYz;
        };

GHC.Event.Internal.$fShowLifetime_$cshowList
  :: [GHC.Event.Internal.Lifetime] -> GHC.Show.ShowS
[GblId, Arity=2, Str=<S,1*U><L,U>, Unf=OtherCon []] =
    [] \r [ls_s9iYB s_s9iYC]
        GHC.Show.showList__
            GHC.Event.Internal.$fShowLifetime1 ls_s9iYB s_s9iYC;

GHC.Event.Internal.$fShowLifetime [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show GHC.Event.Internal.Lifetime
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Event.Internal.$fShowLifetime_$cshowsPrec
                                    GHC.Event.Internal.$fShowLifetime_$cshow
                                    GHC.Event.Internal.$fShowLifetime_$cshowList];

GHC.Event.Internal._beDelete :: ()
[GblId[[RecSel(naughty)]], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE ()! [];

GHC.Event.Internal._beModifyFdOnce :: ()
[GblId[[RecSel(naughty)]], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE ()! [];

GHC.Event.Internal._beModifyFd :: ()
[GblId[[RecSel(naughty)]], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE ()! [];

GHC.Event.Internal._bePoll :: ()
[GblId[[RecSel(naughty)]], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE ()! [];

GHC.Event.Internal._beState :: ()
[GblId[[RecSel(naughty)]], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE ()! [];

GHC.Event.Internal.evtNothing [InlPrag=INLINE (sat-args=0)]
  :: GHC.Event.Internal.Event
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] GHC.Event.Internal.$fMonoidEventLifetime1;

evtRead1_r9iWk :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [1#];

GHC.Event.Internal.evtRead [InlPrag=INLINE (sat-args=0)]
  :: GHC.Event.Internal.Event
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] evtRead1_r9iWk;

evtWrite1_r9iWl :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [2#];

GHC.Event.Internal.evtWrite [InlPrag=INLINE (sat-args=0)]
  :: GHC.Event.Internal.Event
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] evtWrite1_r9iWl;

evtClose1_r9iWm :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [4#];

GHC.Event.Internal.evtClose [InlPrag=INLINE (sat-args=0)]
  :: GHC.Event.Internal.Event
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] evtClose1_r9iWm;

GHC.Event.Internal.elSupremum [InlPrag=INLINE (sat-args=2)]
  :: GHC.Event.Internal.Lifetime
     -> GHC.Event.Internal.Lifetime -> GHC.Event.Internal.Lifetime
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><L,1*U>,
 Unf=OtherCon []] =
    [] \r [ds_s9iYD ds1_s9iYE]
        case ds_s9iYD of {
          GHC.Event.Internal.OneShot -> ds1_s9iYE;
          GHC.Event.Internal.MultiShot -> GHC.Event.Internal.MultiShot [];
        };

GHC.Event.Internal.$fSemigroupLifetime_go [Occ=LoopBreaker]
  :: GHC.Event.Internal.Lifetime
     -> [GHC.Event.Internal.Lifetime] -> GHC.Event.Internal.Lifetime
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [b_s9iYG ds1_s9iYH]
        case ds1_s9iYH of {
          [] -> b_s9iYG;
          : c_s9iYJ [Occ=Once] cs_s9iYK [Occ=Once] ->
              case b_s9iYG of {
                GHC.Event.Internal.OneShot ->
                    GHC.Event.Internal.$fSemigroupLifetime_go c_s9iYJ cs_s9iYK;
                GHC.Event.Internal.MultiShot -> GHC.Event.Internal.MultiShot [];
              };
        };

GHC.Event.Internal.$fSemigroupLifetime_$csconcat
  :: GHC.Base.NonEmpty GHC.Event.Internal.Lifetime
     -> GHC.Event.Internal.Lifetime
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SS),1*U(1*U,1*U)>,
 Unf=OtherCon []] =
    [] \r [ds_s9iYM]
        case ds_s9iYM of {
          GHC.Base.:| a1_s9iYO [Occ=Once] as_s9iYP [Occ=Once] ->
              GHC.Event.Internal.$fSemigroupLifetime_go a1_s9iYO as_s9iYP;
        };

GHC.Event.Internal.$fMonoidLifetime_go [Occ=LoopBreaker]
  :: [GHC.Event.Internal.Lifetime] -> GHC.Event.Internal.Lifetime
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [ds_s9iYQ]
        case ds_s9iYQ of {
          [] -> GHC.Event.Internal.OneShot [];
          : y_s9iYS [Occ=Once!] ys_s9iYT [Occ=Once] ->
              case y_s9iYS of {
                GHC.Event.Internal.OneShot ->
                    GHC.Event.Internal.$fMonoidLifetime_go ys_s9iYT;
                GHC.Event.Internal.MultiShot -> GHC.Event.Internal.MultiShot [];
              };
        };

GHC.Event.Internal.$fSemigroupLifetime [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Base.Semigroup GHC.Event.Internal.Lifetime
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Base.C:Semigroup! [GHC.Event.Internal.elSupremum
                                         GHC.Event.Internal.$fSemigroupLifetime_$csconcat
                                         GHC.Event.Internal.$fSemigroupLifetime_$cstimes];
GHC.Event.Internal.$fMonoidLifetime [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Base.Monoid GHC.Event.Internal.Lifetime
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Base.C:Monoid! [GHC.Event.Internal.$fSemigroupLifetime
                                      GHC.Event.Internal.OneShot
                                      GHC.Event.Internal.elSupremum
                                      GHC.Event.Internal.$fMonoidLifetime_go];
GHC.Event.Internal.$fSemigroupLifetime_$cstimes [Occ=LoopBreaker]
  :: forall b.
     GHC.Real.Integral b =>
     b -> GHC.Event.Internal.Lifetime -> GHC.Event.Internal.Lifetime
[GblId,
 Arity=3,
 Str=<L,U(U(U(A,A,A,A,A,A,C(U)),U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A),A),A,C(C1(U)),C(C1(U)),A,A,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [$dIntegral_s9iYV eta_B2 eta_B1]
        Data.Semigroup.Internal.stimesMonoid
            $dIntegral_s9iYV GHC.Event.Internal.$fMonoidLifetime eta_B2 eta_B1;

GHC.Event.Internal.backend [InlPrag=INLINE (sat-args=5)]
  :: forall a.
     (a
      -> GHC.Base.Maybe GHC.Event.Internal.Timeout
      -> (System.Posix.Types.Fd
          -> GHC.Event.Internal.Event -> GHC.Types.IO ())
      -> GHC.Types.IO GHC.Types.Int)
     -> (a
         -> System.Posix.Types.Fd
         -> GHC.Event.Internal.Event
         -> GHC.Event.Internal.Event
         -> GHC.Types.IO GHC.Types.Bool)
     -> (a
         -> System.Posix.Types.Fd
         -> GHC.Event.Internal.Event
         -> GHC.Types.IO GHC.Types.Bool)
     -> (a -> GHC.Types.IO ())
     -> a
     -> GHC.Event.Internal.Backend
[GblId,
 Arity=5,
 Caf=NoCafRefs,
 Str=<L,U><L,U><L,U><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [bPoll_s9iYW
           bModifyFd_s9iYX
           bModifyFdOnce_s9iYY
           bDelete_s9iYZ
           state_s9iZ0]
        GHC.Event.Internal.$WBackend
            state_s9iZ0
            bPoll_s9iYW
            bModifyFd_s9iYX
            bModifyFdOnce_s9iYY
            bDelete_s9iYZ;

GHC.Event.Internal.poll [InlPrag=INLINE (sat-args=1)]
  :: GHC.Event.Internal.Backend
     -> GHC.Base.Maybe GHC.Event.Internal.Timeout
     -> (System.Posix.Types.Fd
         -> GHC.Event.Internal.Event -> GHC.Types.IO ())
     -> GHC.Types.IO GHC.Types.Int
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [ds_s9iZ1]
        case ds_s9iZ1 of {
          GHC.Event.Internal.Backend bState_s9iZ3 [Occ=Once]
                                     bPoll_s9iZ4 [Occ=Once!]
                                     _ [Occ=Dead]
                                     _ [Occ=Dead]
                                     _ [Occ=Dead] ->
              bPoll_s9iZ4 bState_s9iZ3;
        };

GHC.Event.Internal.modifyFd [InlPrag=INLINE (sat-args=1)]
  :: GHC.Event.Internal.Backend
     -> System.Posix.Types.Fd
     -> GHC.Event.Internal.Event
     -> GHC.Event.Internal.Event
     -> GHC.Types.IO GHC.Types.Bool
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [ds_s9iZ8]
        case ds_s9iZ8 of {
          GHC.Event.Internal.Backend bState_s9iZa [Occ=Once]
                                     _ [Occ=Dead]
                                     bModifyFd_s9iZc [Occ=Once!]
                                     _ [Occ=Dead]
                                     _ [Occ=Dead] ->
              bModifyFd_s9iZc bState_s9iZa;
        };

GHC.Event.Internal.modifyFdOnce [InlPrag=INLINE (sat-args=1)]
  :: GHC.Event.Internal.Backend
     -> System.Posix.Types.Fd
     -> GHC.Event.Internal.Event
     -> GHC.Types.IO GHC.Types.Bool
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [ds_s9iZf]
        case ds_s9iZf of {
          GHC.Event.Internal.Backend bState_s9iZh [Occ=Once]
                                     _ [Occ=Dead]
                                     _ [Occ=Dead]
                                     bModifyFdOnce_s9iZk [Occ=Once!]
                                     _ [Occ=Dead] ->
              bModifyFdOnce_s9iZk bState_s9iZh;
        };

GHC.Event.Internal.delete [InlPrag=INLINE (sat-args=1)]
  :: GHC.Event.Internal.Backend -> GHC.Types.IO ()
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [ds_s9iZm]
        case ds_s9iZm of {
          GHC.Event.Internal.Backend bState_s9iZo [Occ=Once]
                                     _ [Occ=Dead]
                                     _ [Occ=Dead]
                                     _ [Occ=Dead]
                                     bDelete_s9iZs [Occ=Once!] ->
              bDelete_s9iZs bState_s9iZo;
        };

GHC.Event.Internal.throwErrnoIfMinus1NoRetry2
  :: GHC.Integer.Type.Integer
[GblId, Unf=OtherCon []] =
    [] \u [] GHC.Integer.Type.mkInteger GHC.Types.True GHC.Types.[];

sat_s9iZt :: GHC.Types.Int
[LclId] =
    CCS_DONT_CARE GHC.Types.I#! [1#];

sat_s9iZu :: [GHC.Types.Int]
[LclId] =
    CCS_DONT_CARE :! [sat_s9iZt GHC.Types.[]];

GHC.Event.Internal.throwErrnoIfMinus1NoRetry3
  :: GHC.Integer.Type.Integer
[GblId, Unf=OtherCon []] =
    [] \u [] GHC.Integer.Type.mkInteger GHC.Types.True sat_s9iZu;

GHC.Event.Internal.throwErrnoIfMinus1NoRetry1
  :: forall a.
     (GHC.Classes.Eq a, GHC.Num.Num a) =>
     GHC.Base.String
     -> GHC.Types.IO a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId,
 Arity=5,
 Str=<L,1*U(1*C1(C1(U)),A)><L,U(A,A,A,1*C1(U),A,A,C(U))><L,U><C(S),1*C1(U(U,U))><S,U>,
 Unf=OtherCon []] =
    [] \r [$dEq_s9iZv $dNum_s9iZw loc_s9iZx f_s9iZy s_s9iZz]
        case f_s9iZy s_s9iZz of ds1_s9iZA {
          (#,#) ipv_s9iZB [Occ=Once] ipv1_s9iZC [Occ=Once] ->
              let {
                sat_s9iZE [Occ=Once] :: a_a9icv
                [LclId] =
                    [$dNum_s9iZw] \u []
                        let {
                          sat_s9iZD [Occ=Once] :: a_a9icv
                          [LclId] =
                              [$dNum_s9iZw] \u []
                                  GHC.Num.fromInteger
                                      $dNum_s9iZw GHC.Event.Internal.throwErrnoIfMinus1NoRetry3;
                        } in  GHC.Num.negate $dNum_s9iZw sat_s9iZD;
              } in 
                case GHC.Classes.== $dEq_s9iZv ipv1_s9iZC sat_s9iZE of {
                  GHC.Types.False -> ds1_s9iZA;
                  GHC.Types.True ->
                      case __pkg_ccall base-4.11.0.0 [ipv_s9iZB] of {
                        (#,#) ds_s9iZI [Occ=Once*] ds2_s9iZJ [Occ=Once] ->
                            case narrow32Int# [ds2_s9iZJ] of {
                              __DEFAULT -> Foreign.C.Error.throwErrno1 loc_s9iZx ds_s9iZI;
                              4# ->
                                  let {
                                    sat_s9iZL [Occ=Once] :: a_a9icv
                                    [LclId] =
                                        [$dNum_s9iZw] \u []
                                            GHC.Num.fromInteger
                                                $dNum_s9iZw
                                                GHC.Event.Internal.throwErrnoIfMinus1NoRetry2;
                                  } in  (#,#) [ds_s9iZI sat_s9iZL];
                            };
                      };
                };
        };

GHC.Event.Internal.throwErrnoIfMinus1NoRetry
  :: forall a.
     (GHC.Classes.Eq a, GHC.Num.Num a) =>
     GHC.Base.String -> GHC.Types.IO a -> GHC.Types.IO a
[GblId,
 Arity=5,
 Str=<L,1*U(1*C1(C1(U)),A)><L,U(A,A,A,1*C1(U),A,A,C(U))><L,U><C(S),1*C1(U(U,U))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B5 eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.Event.Internal.throwErrnoIfMinus1NoRetry1
            eta_B5 eta_B4 eta_B3 eta_B2 eta_B1;

GHC.Event.Internal.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

GHC.Event.Internal.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Internal.$trModule4];

GHC.Event.Internal.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.Event.Internal"#;

GHC.Event.Internal.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Internal.$trModule2];

GHC.Event.Internal.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [GHC.Event.Internal.$trModule3
                                     GHC.Event.Internal.$trModule1];

$krep_r9iWn :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Word.$tcWord64
                                              GHC.Types.[]];

$krep1_r9iWo :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcBool
                                              GHC.Types.[]];

$krep2_r9iWp :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcInt
                                              GHC.Types.[]];

$krep3_r9iWq :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Tuple.$tc()
                                              GHC.Types.[]];

$krep4_r9iWr :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [System.Posix.Types.$tcFd
                                              GHC.Types.[]];

$krep5_r9iWs :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep1_r9iWo GHC.Types.[]];

$krep6_r9iWt :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcIO
                                              $krep5_r9iWs];

$krep7_r9iWu :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep2_r9iWp GHC.Types.[]];

$krep8_r9iWv :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcIO
                                              $krep7_r9iWu];

$krep9_r9iWw :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep3_r9iWq GHC.Types.[]];

$krep10_r9iWx :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcIO
                                              $krep9_r9iWw];

$krep11_r9iWy :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepVar! [0#];

$krep12_r9iWz :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep11_r9iWy $krep10_r9iWx];

GHC.Event.Internal.$tcEvent2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Event"#;

GHC.Event.Internal.$tcEvent1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Internal.$tcEvent2];

GHC.Event.Internal.$tcEvent :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [6453162546660085965##
                                    4509047211634842293##
                                    GHC.Event.Internal.$trModule
                                    GHC.Event.Internal.$tcEvent1
                                    0#
                                    GHC.Types.krep$*];

$krep13_r9iWA :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.Internal.$tcEvent
                                              GHC.Types.[]];

$krep14_r9iWB :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep13_r9iWA $krep10_r9iWx];

$krep15_r9iWC :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep4_r9iWr $krep14_r9iWB];

$krep16_r9iWD :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep15_r9iWC $krep8_r9iWv];

$krep17_r9iWE :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep13_r9iWA $krep6_r9iWt];

$krep18_r9iWF :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep13_r9iWA $krep17_r9iWE];

$krep19_r9iWG :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep4_r9iWr $krep18_r9iWF];

$krep20_r9iWH :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep11_r9iWy $krep19_r9iWG];

$krep21_r9iWI :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep4_r9iWr $krep17_r9iWE];

$krep22_r9iWJ :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep11_r9iWy $krep21_r9iWI];

GHC.Event.Internal.$tc'Event1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_r9iWp $krep13_r9iWA];

GHC.Event.Internal.$tc'Event3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Event"#;

GHC.Event.Internal.$tc'Event2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Internal.$tc'Event3];

GHC.Event.Internal.$tc'Event :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [3843507504600839845##
                                    12172955723408562945##
                                    GHC.Event.Internal.$trModule
                                    GHC.Event.Internal.$tc'Event2
                                    0#
                                    GHC.Event.Internal.$tc'Event1];

GHC.Event.Internal.$tcLifetime2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Lifetime"#;

GHC.Event.Internal.$tcLifetime1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Internal.$tcLifetime2];

GHC.Event.Internal.$tcLifetime :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [16879554565198773712##
                                    8198822807138459060##
                                    GHC.Event.Internal.$trModule
                                    GHC.Event.Internal.$tcLifetime1
                                    0#
                                    GHC.Types.krep$*];

GHC.Event.Internal.$tc'MultiShot1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.Internal.$tcLifetime
                                              GHC.Types.[]];

GHC.Event.Internal.$tc'OneShot2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'OneShot"#;

GHC.Event.Internal.$tc'OneShot1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Internal.$tc'OneShot2];

GHC.Event.Internal.$tc'OneShot :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [4428239562170783460##
                                    11248279118174204528##
                                    GHC.Event.Internal.$trModule
                                    GHC.Event.Internal.$tc'OneShot1
                                    0#
                                    GHC.Event.Internal.$tc'MultiShot1];

GHC.Event.Internal.$tc'MultiShot3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'MultiShot"#;

GHC.Event.Internal.$tc'MultiShot2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Internal.$tc'MultiShot3];

GHC.Event.Internal.$tc'MultiShot :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [963080519453727549##
                                    5499435804578671723##
                                    GHC.Event.Internal.$trModule
                                    GHC.Event.Internal.$tc'MultiShot2
                                    0#
                                    GHC.Event.Internal.$tc'MultiShot1];

GHC.Event.Internal.$tcEventLifetime2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "EventLifetime"#;

GHC.Event.Internal.$tcEventLifetime1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Internal.$tcEventLifetime2];

GHC.Event.Internal.$tcEventLifetime :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [11472987326402547198##
                                    14676184191233842558##
                                    GHC.Event.Internal.$trModule
                                    GHC.Event.Internal.$tcEventLifetime1
                                    0#
                                    GHC.Types.krep$*];

$krep23_r9iWK :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.Internal.$tcEventLifetime
                                              GHC.Types.[]];

GHC.Event.Internal.$tc'EL1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_r9iWp $krep23_r9iWK];

GHC.Event.Internal.$tc'EL3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'EL"#;

GHC.Event.Internal.$tc'EL2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Internal.$tc'EL3];

GHC.Event.Internal.$tc'EL :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [13328424765260461560##
                                    17004947518967325218##
                                    GHC.Event.Internal.$trModule
                                    GHC.Event.Internal.$tc'EL2
                                    0#
                                    GHC.Event.Internal.$tc'EL1];

GHC.Event.Internal.$tcTimeout2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Timeout"#;

GHC.Event.Internal.$tcTimeout1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Internal.$tcTimeout2];

GHC.Event.Internal.$tcTimeout :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [3071157695468345159##
                                    2371669836431867052##
                                    GHC.Event.Internal.$trModule
                                    GHC.Event.Internal.$tcTimeout1
                                    0#
                                    GHC.Types.krep$*];

GHC.Event.Internal.$tc'Forever1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.Internal.$tcTimeout
                                              GHC.Types.[]];

GHC.Event.Internal.$tc'Forever3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Forever"#;

GHC.Event.Internal.$tc'Forever2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Internal.$tc'Forever3];

GHC.Event.Internal.$tc'Forever :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [15890326801882711521##
                                    6940845280791152844##
                                    GHC.Event.Internal.$trModule
                                    GHC.Event.Internal.$tc'Forever2
                                    0#
                                    GHC.Event.Internal.$tc'Forever1];

GHC.Event.Internal.$tc'Timeout1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_r9iWn
                                         GHC.Event.Internal.$tc'Forever1];

GHC.Event.Internal.$tc'Timeout3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Timeout"#;

GHC.Event.Internal.$tc'Timeout2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Internal.$tc'Timeout3];

GHC.Event.Internal.$tc'Timeout :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [11507111740173521793##
                                    14582130137848061687##
                                    GHC.Event.Internal.$trModule
                                    GHC.Event.Internal.$tc'Timeout2
                                    0#
                                    GHC.Event.Internal.$tc'Timeout1];

$krep24_r9iWL :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [GHC.Event.Internal.$tc'Forever1 GHC.Types.[]];

$krep25_r9iWM :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Base.$tcMaybe
                                              $krep24_r9iWL];

$krep26_r9iWN :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep25_r9iWM $krep16_r9iWD];

$krep27_r9iWO :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep11_r9iWy $krep26_r9iWN];

GHC.Event.Internal.$tcBackend2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Backend"#;

GHC.Event.Internal.$tcBackend1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Internal.$tcBackend2];

GHC.Event.Internal.$tcBackend :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [5241936179624485302##
                                    3407160178235461245##
                                    GHC.Event.Internal.$trModule
                                    GHC.Event.Internal.$tcBackend1
                                    0#
                                    GHC.Types.krep$*];

$krep28_r9iWP :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.Internal.$tcBackend
                                              GHC.Types.[]];

$krep29_r9iWQ :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep12_r9iWz $krep28_r9iWP];

$krep30_r9iWR :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep22_r9iWJ $krep29_r9iWQ];

$krep31_r9iWS :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep20_r9iWH $krep30_r9iWR];

$krep32_r9iWT :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep27_r9iWO $krep31_r9iWS];

GHC.Event.Internal.$tc'Backend1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep11_r9iWy $krep32_r9iWT];

GHC.Event.Internal.$tc'Backend3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Backend"#;

GHC.Event.Internal.$tc'Backend2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Internal.$tc'Backend3];

GHC.Event.Internal.$tc'Backend :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [2097061961478251755##
                                    1358985482759746540##
                                    GHC.Event.Internal.$trModule
                                    GHC.Event.Internal.$tc'Backend2
                                    1#
                                    GHC.Event.Internal.$tc'Backend1];

GHC.Event.Internal.$fEqEvent [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq GHC.Event.Internal.Event
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Classes.eqInt
                                     GHC.Classes.neInt];

GHC.Event.Internal.$fEqEventLifetime [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq GHC.Event.Internal.EventLifetime
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Classes.eqInt
                                     GHC.Classes.neInt];

elEvent1_r9iWU :: GHC.Event.Internal.EventLifetime -> GHC.Types.Int
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>m,
 Unf=OtherCon []] =
    sat-only [] \r [ds_s9iZM]
        case ds_s9iZM of {
          GHC.Types.I# x#_s9iZO [Occ=Once] ->
              case andI# [x#_s9iZO 7#] of sat_s9iZP {
                __DEFAULT -> GHC.Types.I# [sat_s9iZP];
              };
        };

GHC.Event.Internal.elEvent [InlPrag=INLINE (sat-args=1)]
  :: GHC.Event.Internal.EventLifetime -> GHC.Event.Internal.Event
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>m,
 Unf=OtherCon []] =
    [] \r [eta_B1] elEvent1_r9iWU eta_B1;

GHC.Event.Internal.$wgo2 [InlPrag=NOUSERINLINE[0], Occ=LoopBreaker]
  :: GHC.Prim.Int#
     -> [GHC.Event.Internal.EventLifetime] -> GHC.Prim.Int#
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [ww_s9iZQ w_s9iZR]
        case w_s9iZR of {
          [] -> ww_s9iZQ;
          : c_s9iZT [Occ=Once] cs_s9iZU [Occ=Once] ->
              case c_s9iZT of {
                GHC.Types.I# ww2_s9iZW [Occ=Once] ->
                    case GHC.Event.Internal.$wgo2 ww2_s9iZW cs_s9iZU of ww3_s9iZX {
                      __DEFAULT -> orI# [ww_s9iZQ ww3_s9iZX];
                    };
              };
        };

GHC.Event.Internal.$fSemigroupEventLifetime_go [InlPrag=NOUSERINLINE[0]]
  :: GHC.Event.Internal.EventLifetime
     -> [GHC.Event.Internal.EventLifetime]
     -> GHC.Event.Internal.EventLifetime
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S,1*U>m,
 Unf=OtherCon []] =
    [] \r [w_s9iZY w1_s9iZZ]
        case w_s9iZY of {
          GHC.Types.I# ww1_s9j01 [Occ=Once] ->
              case GHC.Event.Internal.$wgo2 ww1_s9j01 w1_s9iZZ of ww2_s9j02 {
                __DEFAULT -> GHC.Types.I# [ww2_s9j02];
              };
        };

GHC.Event.Internal.$fSemigroupEventLifetime_$csconcat
  :: GHC.Base.NonEmpty GHC.Event.Internal.EventLifetime
     -> GHC.Event.Internal.EventLifetime
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S(S)S),1*U(1*U(U),1*U)>m,
 Unf=OtherCon []] =
    [] \r [ds_s9j03]
        case ds_s9j03 of {
          GHC.Base.:| a1_s9j05 [Occ=Once] as_s9j06 [Occ=Once] ->
              GHC.Event.Internal.$fSemigroupEventLifetime_go a1_s9j05 as_s9j06;
        };

GHC.Event.Internal.$fSemigroupEventLifetime [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Base.Semigroup GHC.Event.Internal.EventLifetime
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Base.C:Semigroup! [Data.Bits.$fBitsInt_$c.|.
                                         GHC.Event.Internal.$fSemigroupEventLifetime_$csconcat
                                         GHC.Event.Internal.$fSemigroupEventLifetime_$cstimes];
GHC.Event.Internal.$fSemigroupEventLifetime_$cstimes [Occ=LoopBreaker]
  :: forall b.
     GHC.Real.Integral b =>
     b
     -> GHC.Event.Internal.EventLifetime
     -> GHC.Event.Internal.EventLifetime
[GblId, Arity=1, Str=<L,U>, Unf=OtherCon []] =
    [] \r [$dIntegral_s9j07]
        Data.Semigroup.Internal.stimesDefault
            $dIntegral_s9j07 GHC.Event.Internal.$fSemigroupEventLifetime;

GHC.Event.Internal.$wgo1 [InlPrag=NOUSERINLINE[0], Occ=LoopBreaker]
  :: [GHC.Event.Internal.EventLifetime] -> GHC.Prim.Int#
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [w_s9j08]
        case w_s9j08 of {
          [] -> 0#;
          : y_s9j0a [Occ=Once] ys_s9j0b [Occ=Once] ->
              case y_s9j0a of {
                GHC.Types.I# x#_s9j0d [Occ=Once] ->
                    case GHC.Event.Internal.$wgo1 ys_s9j0b of ww_s9j0e {
                      __DEFAULT -> orI# [x#_s9j0d ww_s9j0e];
                    };
              };
        };

GHC.Event.Internal.$fMonoidEventLifetime_go [InlPrag=NOUSERINLINE[0]]
  :: [GHC.Event.Internal.EventLifetime]
     -> GHC.Event.Internal.EventLifetime
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>m, Unf=OtherCon []] =
    [] \r [w_s9j0f]
        case GHC.Event.Internal.$wgo1 w_s9j0f of ww_s9j0g {
          __DEFAULT -> GHC.Types.I# [ww_s9j0g];
        };

GHC.Event.Internal.$fMonoidEventLifetime [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Base.Monoid GHC.Event.Internal.EventLifetime
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Base.C:Monoid! [GHC.Event.Internal.$fSemigroupEventLifetime
                                      GHC.Event.Internal.$fMonoidEventLifetime1
                                      Data.Bits.$fBitsInt_$c.|.
                                      GHC.Event.Internal.$fMonoidEventLifetime_go];

GHC.Event.Internal.elLifetime [InlPrag=INLINE (sat-args=1)]
  :: GHC.Event.Internal.EventLifetime -> GHC.Event.Internal.Lifetime
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [ds_s9j0h]
        case ds_s9j0h of {
          GHC.Types.I# x#_s9j0j [Occ=Once] ->
              case andI# [x#_s9j0j 8#] of {
                __DEFAULT -> GHC.Event.Internal.MultiShot [];
                0# -> GHC.Event.Internal.OneShot [];
              };
        };

eventLifetime1_r9iWV
  :: GHC.Event.Internal.Event
     -> GHC.Event.Internal.Lifetime -> GHC.Types.Int
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U(U)><S,1*U>m,
 Unf=OtherCon []] =
    sat-only [] \r [ds_s9j0l l_s9j0m]
        case ds_s9j0l of wild_s9j0n {
          GHC.Types.I# x#_s9j0o [Occ=Once] ->
              case l_s9j0m of {
                GHC.Event.Internal.OneShot -> wild_s9j0n;
                GHC.Event.Internal.MultiShot ->
                    case orI# [x#_s9j0o 8#] of sat_s9j0q {
                      __DEFAULT -> GHC.Types.I# [sat_s9j0q];
                    };
              };
        };

GHC.Event.Internal.eventLifetime [InlPrag=INLINE (sat-args=2)]
  :: GHC.Event.Internal.Event
     -> GHC.Event.Internal.Lifetime -> GHC.Event.Internal.EventLifetime
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U(U)><S,1*U>m,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] eventLifetime1_r9iWV eta_B2 eta_B1;

GHC.Event.Internal.evtCombine [InlPrag=INLINE (sat-args=2)]
  :: GHC.Event.Internal.Event
     -> GHC.Event.Internal.Event -> GHC.Event.Internal.Event
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)>m,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] Data.Bits.$fBitsInt_$c.|. eta_B2 eta_B1;

GHC.Event.Internal.evtConcat [InlPrag=INLINE (sat-args=0)]
  :: [GHC.Event.Internal.Event] -> GHC.Event.Internal.Event
[GblId, Arity=1, Unf=OtherCon []] =
    [] \r [eta_B1]
        GHC.List.foldl'
            GHC.Event.Internal.evtCombine GHC.Event.Internal.evtNothing eta_B1;

GHC.Event.Internal.$wgo [InlPrag=NOUSERINLINE[0], Occ=LoopBreaker]
  :: GHC.Prim.Int# -> [GHC.Event.Internal.Event] -> GHC.Prim.Int#
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [ww_s9j0r w_s9j0s]
        case w_s9j0s of {
          [] -> ww_s9j0r;
          : c_s9j0u [Occ=Once] cs_s9j0v [Occ=Once] ->
              case c_s9j0u of {
                GHC.Types.I# ww2_s9j0x [Occ=Once] ->
                    case GHC.Event.Internal.$wgo ww2_s9j0x cs_s9j0v of ww3_s9j0y {
                      __DEFAULT -> orI# [ww_s9j0r ww3_s9j0y];
                    };
              };
        };

GHC.Event.Internal.$fSemigroupEvent_go [InlPrag=NOUSERINLINE[0]]
  :: GHC.Event.Internal.Event
     -> [GHC.Event.Internal.Event] -> GHC.Event.Internal.Event
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S,1*U>m,
 Unf=OtherCon []] =
    [] \r [w_s9j0z w1_s9j0A]
        case w_s9j0z of {
          GHC.Types.I# ww1_s9j0C [Occ=Once] ->
              case GHC.Event.Internal.$wgo ww1_s9j0C w1_s9j0A of ww2_s9j0D {
                __DEFAULT -> GHC.Types.I# [ww2_s9j0D];
              };
        };

GHC.Event.Internal.$fSemigroupEvent_$csconcat
  :: GHC.Base.NonEmpty GHC.Event.Internal.Event
     -> GHC.Event.Internal.Event
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S(S)S),1*U(1*U(U),1*U)>m,
 Unf=OtherCon []] =
    [] \r [ds_s9j0E]
        case ds_s9j0E of {
          GHC.Base.:| a1_s9j0G [Occ=Once] as_s9j0H [Occ=Once] ->
              GHC.Event.Internal.$fSemigroupEvent_go a1_s9j0G as_s9j0H;
        };

GHC.Event.Internal.$fSemigroupEvent [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Base.Semigroup GHC.Event.Internal.Event
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Base.C:Semigroup! [GHC.Event.Internal.evtCombine
                                         GHC.Event.Internal.$fSemigroupEvent_$csconcat
                                         GHC.Event.Internal.$fSemigroupEvent_$cstimes];
GHC.Event.Internal.$fMonoidEvent [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Base.Monoid GHC.Event.Internal.Event
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Base.C:Monoid! [GHC.Event.Internal.$fSemigroupEvent
                                      GHC.Event.Internal.evtNothing
                                      GHC.Event.Internal.evtCombine
                                      GHC.Event.Internal.evtConcat];
GHC.Event.Internal.$fSemigroupEvent_$cstimes [Occ=LoopBreaker]
  :: forall b.
     GHC.Real.Integral b =>
     b -> GHC.Event.Internal.Event -> GHC.Event.Internal.Event
[GblId,
 Arity=3,
 Str=<L,U(U(U(A,A,A,A,A,A,C(U)),U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A),A),A,C(C1(U)),C(C1(U)),A,A,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [$dIntegral_s9j0I eta_B2 eta_B1]
        Data.Semigroup.Internal.stimesMonoid
            $dIntegral_s9j0I GHC.Event.Internal.$fMonoidEvent eta_B2 eta_B1;

GHC.Event.Internal.eventIs
  :: GHC.Event.Internal.Event
     -> GHC.Event.Internal.Event -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [ds_s9j0J ds1_s9j0K]
        case ds_s9j0J of {
          GHC.Types.I# x#_s9j0M [Occ=Once] ->
              case ds1_s9j0K of {
                GHC.Types.I# y#_s9j0O [Occ=Once] ->
                    case andI# [x#_s9j0M y#_s9j0O] of {
                      __DEFAULT -> GHC.Types.True [];
                      0# -> GHC.Types.False [];
                    };
              };
        };

GHC.Event.Internal.$fShowEvent13 :: GHC.Types.Char
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.C#! ['['#];

GHC.Event.Internal.$fShowEvent5 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "]"#;

GHC.Event.Internal.$fShowEvent10 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    ","#;

GHC.Event.Internal.$fShowEvent9 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# GHC.Event.Internal.$fShowEvent10;

GHC.Event.Internal.$fShowEvent12 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "evtRead"#;

GHC.Event.Internal.$fShowEvent11 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# GHC.Event.Internal.$fShowEvent12;

GHC.Event.Internal.$fShowEvent8 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "evtWrite"#;

GHC.Event.Internal.$fShowEvent7 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# GHC.Event.Internal.$fShowEvent8;

GHC.Event.Internal.$fShowEvent3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "evtClose"#;

GHC.Event.Internal.$fShowEvent2 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# GHC.Event.Internal.$fShowEvent3;

GHC.Event.Internal.$fShowEvent4 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# GHC.Event.Internal.$fShowEvent5;

GHC.Event.Internal.$fShowEvent6 :: [[GHC.Types.Char]]
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [GHC.Event.Internal.$fShowEvent2 GHC.Types.[]];

GHC.Event.Internal.$w$cshow [InlPrag=NOUSERINLINE[0]]
  :: GHC.Event.Internal.Event
     -> (# GHC.Types.Char, [GHC.Types.Char] #)
[GblId, Arity=1, Str=<L,1*U(U)>, Unf=OtherCon []] =
    [] \r [w_s9j0Q]
        let {
          sat_s9j1b [Occ=Once] :: [GHC.Types.Char]
          [LclId] =
              [w_s9j0Q] \u []
                  case w_s9j0Q of {
                    GHC.Types.I# x#_s9j0S ->
                        case andI# [x#_s9j0S 1#] of {
                          __DEFAULT ->
                              let {
                                sat_s9j0Z [Occ=Once] :: [[GHC.Types.Char]]
                                [LclId] =
                                    [x#_s9j0S] \u []
                                        case andI# [x#_s9j0S 2#] of {
                                          __DEFAULT ->
                                              let {
                                                sat_s9j0W [Occ=Once] :: [[GHC.Types.Char]]
                                                [LclId] =
                                                    [x#_s9j0S] \u []
                                                        case andI# [x#_s9j0S 4#] of {
                                                          __DEFAULT ->
                                                              GHC.Event.Internal.$fShowEvent6;
                                                          0# -> [] [];
                                                        }; } in
                                              let {
                                                sat_s9j0X [Occ=Once] :: [[GHC.Types.Char]]
                                                [LclId] =
                                                    CCCS :! [GHC.Event.Internal.$fShowEvent7
                                                             sat_s9j0W];
                                              } in 
                                                Data.OldList.prependToAll
                                                    GHC.Event.Internal.$fShowEvent9 sat_s9j0X;
                                          0# ->
                                              case andI# [x#_s9j0S 4#] of {
                                                __DEFAULT ->
                                                    Data.OldList.prependToAll
                                                        GHC.Event.Internal.$fShowEvent9
                                                        GHC.Event.Internal.$fShowEvent6;
                                                0# ->
                                                    Data.OldList.prependToAll
                                                        GHC.Event.Internal.$fShowEvent9
                                                        GHC.Types.[];
                                              };
                                        }; } in
                              let {
                                sat_s9j10 [Occ=Once] :: [[GHC.Types.Char]]
                                [LclId] =
                                    CCCS :! [GHC.Event.Internal.$fShowEvent11 sat_s9j0Z];
                              } in 
                                case Data.OldList.intercalate1 sat_s9j10 of sat_s9j11 {
                                  __DEFAULT ->
                                      GHC.Base.++ sat_s9j11 GHC.Event.Internal.$fShowEvent4;
                                };
                          0# ->
                              case andI# [x#_s9j0S 2#] of {
                                __DEFAULT ->
                                    let {
                                      sat_s9j14 [Occ=Once] :: [[GHC.Types.Char]]
                                      [LclId] =
                                          [x#_s9j0S] \u []
                                              case andI# [x#_s9j0S 4#] of {
                                                __DEFAULT ->
                                                    Data.OldList.prependToAll
                                                        GHC.Event.Internal.$fShowEvent9
                                                        GHC.Event.Internal.$fShowEvent6;
                                                0# ->
                                                    Data.OldList.prependToAll
                                                        GHC.Event.Internal.$fShowEvent9
                                                        GHC.Types.[];
                                              }; } in
                                    let {
                                      sat_s9j15 [Occ=Once] :: [[GHC.Types.Char]]
                                      [LclId] =
                                          CCCS :! [GHC.Event.Internal.$fShowEvent7 sat_s9j14];
                                    } in 
                                      case Data.OldList.intercalate1 sat_s9j15 of sat_s9j16 {
                                        __DEFAULT ->
                                            GHC.Base.++ sat_s9j16 GHC.Event.Internal.$fShowEvent4;
                                      };
                                0# ->
                                    case andI# [x#_s9j0S 4#] of {
                                      __DEFAULT ->
                                          let {
                                            sat_s9j18 [Occ=Once] :: [[GHC.Types.Char]]
                                            [LclId] =
                                                [] \u []
                                                    Data.OldList.prependToAll
                                                        GHC.Event.Internal.$fShowEvent9
                                                        GHC.Types.[]; } in
                                          let {
                                            sat_s9j19 [Occ=Once] :: [[GHC.Types.Char]]
                                            [LclId] =
                                                CCCS :! [GHC.Event.Internal.$fShowEvent2 sat_s9j18];
                                          } in 
                                            case Data.OldList.intercalate1 sat_s9j19 of sat_s9j1a {
                                              __DEFAULT ->
                                                  GHC.Base.++
                                                      sat_s9j1a GHC.Event.Internal.$fShowEvent4;
                                            };
                                      0# -> GHC.Event.Internal.$fShowEvent4;
                                    };
                              };
                        };
                  };
        } in  (#,#) [GHC.Event.Internal.$fShowEvent13 sat_s9j1b];

GHC.Event.Internal.$fShowEvent_$cshow [InlPrag=NOUSERINLINE[0]]
  :: GHC.Event.Internal.Event -> GHC.Base.String
[GblId, Arity=1, Str=<L,1*U(U)>m2, Unf=OtherCon []] =
    [] \r [w_s9j1c]
        case GHC.Event.Internal.$w$cshow w_s9j1c of {
          (#,#) ww1_s9j1e [Occ=Once] ww2_s9j1f [Occ=Once] ->
              : [ww1_s9j1e ww2_s9j1f];
        };

GHC.Event.Internal.$fShowEvent_$cshowsPrec
  :: GHC.Types.Int -> GHC.Event.Internal.Event -> GHC.Show.ShowS
[GblId, Arity=3, Str=<L,A><L,1*U(U)><L,1*U>, Unf=OtherCon []] =
    [] \r [ds_s9j1g x_s9j1h s_s9j1i]
        case GHC.Event.Internal.$w$cshow x_s9j1h of {
          (#,#) ww1_s9j1k [Occ=Once] ww2_s9j1l [Occ=Once] ->
              let {
                sat_s9j1m [Occ=Once] :: [GHC.Types.Char]
                [LclId] =
                    CCCS :! [ww1_s9j1k ww2_s9j1l];
              } in  GHC.Base.++ sat_s9j1m s_s9j1i;
        };

GHC.Event.Internal.$fShowEvent1
  :: GHC.Event.Internal.Event -> GHC.Base.String -> [GHC.Types.Char]
[GblId, Arity=2, Str=<L,1*U(U)><L,1*U>, Unf=OtherCon []] =
    [] \r [x_s9j1n s_s9j1o]
        case GHC.Event.Internal.$w$cshow x_s9j1n of {
          (#,#) ww1_s9j1q [Occ=Once] ww2_s9j1r [Occ=Once] ->
              let {
                sat_s9j1s [Occ=Once] :: [GHC.Types.Char]
                [LclId] =
                    CCCS :! [ww1_s9j1q ww2_s9j1r];
              } in  GHC.Base.++ sat_s9j1s s_s9j1o;
        };

GHC.Event.Internal.$fShowEvent_$cshowList
  :: [GHC.Event.Internal.Event] -> GHC.Show.ShowS
[GblId, Arity=2, Str=<S,1*U><L,U>, Unf=OtherCon []] =
    [] \r [ls_s9j1t s_s9j1u]
        GHC.Show.showList__
            GHC.Event.Internal.$fShowEvent1 ls_s9j1t s_s9j1u;

GHC.Event.Internal.$fShowEvent [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show GHC.Event.Internal.Event
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Event.Internal.$fShowEvent_$cshowsPrec
                                    GHC.Event.Internal.$fShowEvent_$cshow
                                    GHC.Event.Internal.$fShowEvent_$cshowList];

GHC.Event.Internal.Backend
  :: forall a.
     a
     -> (a
         -> GHC.Base.Maybe GHC.Event.Internal.Timeout
         -> (System.Posix.Types.Fd
             -> GHC.Event.Internal.Event -> GHC.Types.IO ())
         -> GHC.Types.IO GHC.Types.Int)
     -> (a
         -> System.Posix.Types.Fd
         -> GHC.Event.Internal.Event
         -> GHC.Event.Internal.Event
         -> GHC.Types.IO GHC.Types.Bool)
     -> (a
         -> System.Posix.Types.Fd
         -> GHC.Event.Internal.Event
         -> GHC.Types.IO GHC.Types.Bool)
     -> (a -> GHC.Types.IO ())
     -> GHC.Event.Internal.Backend
[GblId[DataCon],
 Arity=5,
 Caf=NoCafRefs,
 Str=<L,U><L,U><L,U><L,U><L,U>,
 Unf=OtherCon []] =
    [] \r [eta_B5 eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.Event.Internal.Backend [eta_B5 eta_B4 eta_B3 eta_B2 eta_B1];

GHC.Event.Internal.Timeout
  :: GHC.Prim.Word# -> GHC.Event.Internal.Timeout
[GblId[DataCon],
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U>m1,
 Unf=OtherCon []] =
    [] \r [eta_B1] GHC.Event.Internal.Timeout [eta_B1];

GHC.Event.Internal.Forever :: GHC.Event.Internal.Timeout
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Event.Internal.Forever! [];

GHC.Event.Internal.OneShot :: GHC.Event.Internal.Lifetime
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Event.Internal.OneShot! [];

GHC.Event.Internal.MultiShot :: GHC.Event.Internal.Lifetime
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Event.Internal.MultiShot! [];


==================== STG syntax: ====================
2018-03-16 16:04:26.139490612 UTC

GHC.Event.Internal.$WBackend [InlPrag=INLINE[2]]
  :: forall a.
     a
     -> (a
         -> GHC.Base.Maybe GHC.Event.Internal.Timeout
         -> (System.Posix.Types.Fd
             -> GHC.Event.Internal.Event -> GHC.Types.IO ())
         -> GHC.Types.IO GHC.Types.Int)
     -> (a
         -> System.Posix.Types.Fd
         -> GHC.Event.Internal.Event
         -> GHC.Event.Internal.Event
         -> GHC.Types.IO GHC.Types.Bool)
     -> (a
         -> System.Posix.Types.Fd
         -> GHC.Event.Internal.Event
         -> GHC.Types.IO GHC.Types.Bool)
     -> (a -> GHC.Types.IO ())
     -> GHC.Event.Internal.Backend
[GblId[DataConWrapper],
 Arity=5,
 Caf=NoCafRefs,
 Str=<S,U><L,U><L,U><L,U><L,U>,
 Unf=OtherCon []] =
    [] \r [dt_s9iWX dt_s9iWY dt_s9iWZ dt_s9iX0 dt_s9iX1]
        case dt_s9iWX of dt_s9iX2 {
          __DEFAULT ->
              GHC.Event.Internal.Backend [dt_s9iX2
                                          dt_s9iWY
                                          dt_s9iWZ
                                          dt_s9iX0
                                          dt_s9iX1];
        };

GHC.Event.Internal.$WTimeout [InlPrag=INLINE[2]]
  :: GHC.Word.Word64 -> GHC.Event.Internal.Timeout
[GblId[DataConWrapper],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S,U>m1,
 Unf=OtherCon []] =
    [] \r [dt_s9iX3]
        case dt_s9iX3 of {
          GHC.Word.W64# dt_s9iX5 [Occ=Once] ->
              GHC.Event.Internal.Timeout [dt_s9iX5];
        };

GHC.Event.Internal.$fMonoidEventLifetime1 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [0#];

GHC.Event.Internal.$fShowTimeout4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Forever"#;

GHC.Event.Internal.$fShowTimeout3 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# GHC.Event.Internal.$fShowTimeout4;

GHC.Event.Internal.$fShowTimeout2
  :: [GHC.Types.Char] -> [GHC.Types.Char]
[GblId, Arity=1, Unf=OtherCon []] =
    [] \r [eta_B1]
        GHC.Base.++ GHC.Event.Internal.$fShowTimeout3 eta_B1;

GHC.Event.Internal.$fShowTimeout5 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Timeout "#;

GHC.Event.Internal.$fShowTimeout_$cshowsPrec
  :: GHC.Types.Int -> GHC.Event.Internal.Timeout -> GHC.Show.ShowS
[GblId, Arity=2, Str=<L,1*U(U)><S,1*U>, Unf=OtherCon []] =
    [] \r [a_s9iX6 ds_s9iX7]
        case ds_s9iX7 of {
          GHC.Event.Internal.Timeout dt_s9iX9 ->
              case a_s9iX6 of {
                GHC.Types.I# x_s9iXb [Occ=Once] ->
                    let {
                      w1_s9iXc [Occ=OnceL*] :: GHC.Integer.Type.Integer
                      [LclId] =
                          [dt_s9iX9] \u []
                              case word2Int# [dt_s9iX9] of i#_s9iXd [Dmd=<S,U>] {
                                __DEFAULT ->
                                    case >=# [i#_s9iXd 0#] of {
                                      __DEFAULT -> GHC.Integer.Type.wordToInteger dt_s9iX9;
                                      1# -> GHC.Integer.Type.smallInteger i#_s9iXd;
                                    };
                              };
                    } in 
                      case >=# [x_s9iXb 11#] of {
                        __DEFAULT ->
                            let {
                              sat_s9iXl [Occ=OnceT[0]] :: GHC.Base.String -> [GHC.Types.Char]
                              [LclId] =
                                  [w1_s9iXc] \r [x1_s9iXg]
                                      let {
                                        sat_s9iXk [Occ=Once] :: [GHC.Types.Char]
                                        [LclId] =
                                            [w1_s9iXc x1_s9iXg] \u []
                                                case
                                                    GHC.Show.$w$cshowsPrec4 11# w1_s9iXc x1_s9iXg
                                                of
                                                { (#,#) ww3_s9iXi [Occ=Once] ww4_s9iXj [Occ=Once] ->
                                                      : [ww3_s9iXi ww4_s9iXj];
                                                };
                                      } in 
                                        GHC.CString.unpackAppendCString#
                                            GHC.Event.Internal.$fShowTimeout5 sat_s9iXk;
                            } in  sat_s9iXl;
                        1# ->
                            let {
                              sat_s9iXt [Occ=OnceT[0]] :: GHC.Base.String -> [GHC.Types.Char]
                              [LclId] =
                                  [w1_s9iXc] \r [x1_s9iXm]
                                      let {
                                        sat_s9iXs [Occ=Once] :: [GHC.Types.Char]
                                        [LclId] =
                                            [w1_s9iXc x1_s9iXm] \u []
                                                let {
                                                  sat_s9iXr [Occ=Once] :: [GHC.Types.Char]
                                                  [LclId] =
                                                      [w1_s9iXc x1_s9iXm] \u []
                                                          let {
                                                            sat_s9iXn [Occ=Once] :: GHC.Base.String
                                                            [LclId] =
                                                                CCCS :! [GHC.Show.$fShow(,)2
                                                                         x1_s9iXm];
                                                          } in 
                                                            case
                                                                GHC.Show.$w$cshowsPrec4
                                                                    11# w1_s9iXc sat_s9iXn
                                                            of
                                                            { (#,#) ww3_s9iXp [Occ=Once]
                                                                    ww4_s9iXq [Occ=Once] ->
                                                                  : [ww3_s9iXp ww4_s9iXq];
                                                            };
                                                } in 
                                                  GHC.CString.unpackAppendCString#
                                                      GHC.Event.Internal.$fShowTimeout5 sat_s9iXr;
                                      } in  : [GHC.Show.$fShow(,)4 sat_s9iXs];
                            } in  sat_s9iXt;
                      };
              };
          GHC.Event.Internal.Forever -> GHC.Event.Internal.$fShowTimeout2;
        };

GHC.Event.Internal.$fShowTimeout_$cshow
  :: GHC.Event.Internal.Timeout -> GHC.Base.String
[GblId, Arity=1, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [x_s9iXu]
        case x_s9iXu of {
          GHC.Event.Internal.Timeout dt_s9iXw ->
              let {
                sat_s9iXH [Occ=Once] :: [GHC.Types.Char]
                [LclId] =
                    [dt_s9iXw] \u []
                        case word2Int# [dt_s9iXw] of i#_s9iXx [Dmd=<S,U>] {
                          __DEFAULT ->
                              case >=# [i#_s9iXx 0#] of {
                                __DEFAULT ->
                                    case GHC.Integer.Type.wordToInteger dt_s9iXw of sat_s9iXz {
                                      __DEFAULT ->
                                          case
                                              GHC.Show.$w$cshowsPrec4 11# sat_s9iXz GHC.Types.[]
                                          of
                                          { (#,#) ww3_s9iXB [Occ=Once] ww4_s9iXC [Occ=Once] ->
                                                : [ww3_s9iXB ww4_s9iXC];
                                          };
                                    };
                                1# ->
                                    case GHC.Integer.Type.smallInteger i#_s9iXx of sat_s9iXD {
                                      __DEFAULT ->
                                          case
                                              GHC.Show.$w$cshowsPrec4 11# sat_s9iXD GHC.Types.[]
                                          of
                                          { (#,#) ww3_s9iXF [Occ=Once] ww4_s9iXG [Occ=Once] ->
                                                : [ww3_s9iXF ww4_s9iXG];
                                          };
                                    };
                              };
                        };
              } in 
                GHC.CString.unpackAppendCString#
                    GHC.Event.Internal.$fShowTimeout5 sat_s9iXH;
          GHC.Event.Internal.Forever -> GHC.Event.Internal.$fShowTimeout3;
        };

GHC.Event.Internal.$fShowTimeout1
  :: GHC.Event.Internal.Timeout -> GHC.Show.ShowS
[GblId, Arity=1, Unf=OtherCon []] =
    [] \r [eta_B1]
        GHC.Event.Internal.$fShowTimeout_$cshowsPrec
            GHC.Event.Internal.$fMonoidEventLifetime1 eta_B1;

GHC.Event.Internal.$fShowTimeout_$cshowList
  :: [GHC.Event.Internal.Timeout] -> GHC.Show.ShowS
[GblId, Arity=2, Str=<S,1*U><L,U>, Unf=OtherCon []] =
    [] \r [ls_s9iXI s_s9iXJ]
        GHC.Show.showList__
            GHC.Event.Internal.$fShowTimeout1 ls_s9iXI s_s9iXJ;

GHC.Event.Internal.$fShowTimeout [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show GHC.Event.Internal.Timeout
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Event.Internal.$fShowTimeout_$cshowsPrec
                                    GHC.Event.Internal.$fShowTimeout_$cshow
                                    GHC.Event.Internal.$fShowTimeout_$cshowList];

GHC.Event.Internal.$fShowEventLifetime2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "EL "#;

GHC.Event.Internal.$w$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Event.Internal.EventLifetime
     -> GHC.Base.String
     -> GHC.Base.String
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,U><L,1*U(U)><L,U>,
 Unf=OtherCon []] =
    [] \r [ww_s9iXK w_s9iXL w1_s9iXM]
        case >=# [ww_s9iXK 11#] of {
          __DEFAULT ->
              let {
                sat_s9iXT [Occ=Once] :: [GHC.Types.Char]
                [LclId] =
                    [w_s9iXL w1_s9iXM] \u []
                        case w_s9iXL of {
                          GHC.Types.I# ww3_s9iXP [Occ=Once] ->
                              case GHC.Show.$wshowSignedInt 11# ww3_s9iXP w1_s9iXM of {
                                (#,#) ww5_s9iXR [Occ=Once] ww6_s9iXS [Occ=Once] ->
                                    : [ww5_s9iXR ww6_s9iXS];
                              };
                        };
              } in 
                GHC.CString.unpackAppendCString#
                    GHC.Event.Internal.$fShowEventLifetime2 sat_s9iXT;
          1# ->
              let {
                sat_s9iY1 [Occ=Once] :: [GHC.Types.Char]
                [LclId] =
                    [w_s9iXL w1_s9iXM] \u []
                        let {
                          sat_s9iY0 [Occ=Once] :: [GHC.Types.Char]
                          [LclId] =
                              [w_s9iXL w1_s9iXM] \u []
                                  case w_s9iXL of {
                                    GHC.Types.I# ww3_s9iXV [Occ=Once] ->
                                        let {
                                          sat_s9iXW [Occ=Once] :: GHC.Base.String
                                          [LclId] =
                                              CCCS :! [GHC.Show.$fShow(,)2 w1_s9iXM];
                                        } in 
                                          case GHC.Show.$wshowSignedInt 11# ww3_s9iXV sat_s9iXW of {
                                            (#,#) ww5_s9iXY [Occ=Once] ww6_s9iXZ [Occ=Once] ->
                                                : [ww5_s9iXY ww6_s9iXZ];
                                          };
                                  };
                        } in 
                          GHC.CString.unpackAppendCString#
                              GHC.Event.Internal.$fShowEventLifetime2 sat_s9iY0;
              } in  : [GHC.Show.$fShow(,)4 sat_s9iY1];
        };

GHC.Event.Internal.$fShowEventLifetime_$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Int
     -> GHC.Event.Internal.EventLifetime -> GHC.Show.ShowS
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><L,1*U(U)><L,U>,
 Unf=OtherCon []] =
    [] \r [w_s9iY2 w1_s9iY3 w2_s9iY4]
        case w_s9iY2 of {
          GHC.Types.I# ww1_s9iY6 [Occ=Once] ->
              GHC.Event.Internal.$w$cshowsPrec ww1_s9iY6 w1_s9iY3 w2_s9iY4;
        };

GHC.Event.Internal.$fShowEventLifetime_$cshow
  :: GHC.Event.Internal.EventLifetime -> GHC.Base.String
[GblId, Arity=1, Caf=NoCafRefs, Str=<L,1*U(U)>, Unf=OtherCon []] =
    [] \r [x_s9iY7]
        let {
          sat_s9iYd [Occ=Once] :: [GHC.Types.Char]
          [LclId] =
              [x_s9iY7] \u []
                  case x_s9iY7 of {
                    GHC.Types.I# ww3_s9iY9 [Occ=Once] ->
                        case GHC.Show.$wshowSignedInt 11# ww3_s9iY9 GHC.Types.[] of {
                          (#,#) ww5_s9iYb [Occ=Once] ww6_s9iYc [Occ=Once] ->
                              : [ww5_s9iYb ww6_s9iYc];
                        };
                  };
        } in 
          GHC.CString.unpackAppendCString#
              GHC.Event.Internal.$fShowEventLifetime2 sat_s9iYd;

GHC.Event.Internal.$fShowEventLifetime1
  :: GHC.Event.Internal.EventLifetime -> GHC.Show.ShowS
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,1*U(U)><L,U>,
 Unf=OtherCon []] =
    [] \r [w_s9iYe w1_s9iYf]
        GHC.Event.Internal.$w$cshowsPrec 0# w_s9iYe w1_s9iYf;

GHC.Event.Internal.$fShowEventLifetime_$cshowList
  :: [GHC.Event.Internal.EventLifetime] -> GHC.Show.ShowS
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><L,U>,
 Unf=OtherCon []] =
    [] \r [ls_s9iYg s_s9iYh]
        GHC.Show.showList__
            GHC.Event.Internal.$fShowEventLifetime1 ls_s9iYg s_s9iYh;

GHC.Event.Internal.$fShowEventLifetime [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show GHC.Event.Internal.EventLifetime
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Event.Internal.$fShowEventLifetime_$cshowsPrec
                                    GHC.Event.Internal.$fShowEventLifetime_$cshow
                                    GHC.Event.Internal.$fShowEventLifetime_$cshowList];

GHC.Event.Internal.$fEqLifetime_$c==
  :: GHC.Event.Internal.Lifetime
     -> GHC.Event.Internal.Lifetime -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [ds_s9iYi ds1_s9iYj]
        case ds_s9iYi of {
          GHC.Event.Internal.OneShot ->
              case ds1_s9iYj of {
                GHC.Event.Internal.OneShot -> GHC.Types.True [];
                GHC.Event.Internal.MultiShot -> GHC.Types.False [];
              };
          GHC.Event.Internal.MultiShot ->
              case ds1_s9iYj of {
                GHC.Event.Internal.OneShot -> GHC.Types.False [];
                GHC.Event.Internal.MultiShot -> GHC.Types.True [];
              };
        };

GHC.Event.Internal.$fEqLifetime_$c/= [InlPrag=INLINE (sat-args=2)]
  :: GHC.Event.Internal.Lifetime
     -> GHC.Event.Internal.Lifetime -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [eta_s9iYn eta1_s9iYo]
        case eta_s9iYn of {
          GHC.Event.Internal.OneShot ->
              case eta1_s9iYo of {
                GHC.Event.Internal.OneShot -> GHC.Types.False [];
                GHC.Event.Internal.MultiShot -> GHC.Types.True [];
              };
          GHC.Event.Internal.MultiShot ->
              case eta1_s9iYo of {
                GHC.Event.Internal.OneShot -> GHC.Types.True [];
                GHC.Event.Internal.MultiShot -> GHC.Types.False [];
              };
        };

GHC.Event.Internal.$fEqLifetime [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq GHC.Event.Internal.Lifetime
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Event.Internal.$fEqLifetime_$c==
                                     GHC.Event.Internal.$fEqLifetime_$c/=];

GHC.Event.Internal.$fShowLifetime5 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "OneShot"#;

GHC.Event.Internal.$fShowLifetime4 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# GHC.Event.Internal.$fShowLifetime5;

GHC.Event.Internal.$fShowLifetime3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "MultiShot"#;

GHC.Event.Internal.$fShowLifetime2 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# GHC.Event.Internal.$fShowLifetime3;

GHC.Event.Internal.$fShowLifetime_$cshowsPrec
  :: GHC.Types.Int -> GHC.Event.Internal.Lifetime -> GHC.Show.ShowS
[GblId, Arity=3, Str=<L,A><S,1*U><L,1*U>, Unf=OtherCon []] =
    [] \r [ds_s9iYs ds1_s9iYt eta_s9iYu]
        case ds1_s9iYt of {
          GHC.Event.Internal.OneShot ->
              GHC.Base.++ GHC.Event.Internal.$fShowLifetime4 eta_s9iYu;
          GHC.Event.Internal.MultiShot ->
              GHC.Base.++ GHC.Event.Internal.$fShowLifetime2 eta_s9iYu;
        };

GHC.Event.Internal.$fShowLifetime_$cshow
  :: GHC.Event.Internal.Lifetime -> GHC.Base.String
[GblId, Arity=1, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [x_s9iYw]
        case x_s9iYw of {
          GHC.Event.Internal.OneShot -> GHC.Event.Internal.$fShowLifetime4;
          GHC.Event.Internal.MultiShot -> GHC.Event.Internal.$fShowLifetime2;
        };

GHC.Event.Internal.$fShowLifetime1
  :: GHC.Event.Internal.Lifetime -> GHC.Show.ShowS
[GblId, Arity=2, Str=<S,1*U><L,1*U>, Unf=OtherCon []] =
    [] \r [ds_s9iYy eta_s9iYz]
        case ds_s9iYy of {
          GHC.Event.Internal.OneShot ->
              GHC.Base.++ GHC.Event.Internal.$fShowLifetime4 eta_s9iYz;
          GHC.Event.Internal.MultiShot ->
              GHC.Base.++ GHC.Event.Internal.$fShowLifetime2 eta_s9iYz;
        };

GHC.Event.Internal.$fShowLifetime_$cshowList
  :: [GHC.Event.Internal.Lifetime] -> GHC.Show.ShowS
[GblId, Arity=2, Str=<S,1*U><L,U>, Unf=OtherCon []] =
    [] \r [ls_s9iYB s_s9iYC]
        GHC.Show.showList__
            GHC.Event.Internal.$fShowLifetime1 ls_s9iYB s_s9iYC;

GHC.Event.Internal.$fShowLifetime [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show GHC.Event.Internal.Lifetime
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Event.Internal.$fShowLifetime_$cshowsPrec
                                    GHC.Event.Internal.$fShowLifetime_$cshow
                                    GHC.Event.Internal.$fShowLifetime_$cshowList];

GHC.Event.Internal._beDelete :: ()
[GblId[[RecSel(naughty)]], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE ()! [];

GHC.Event.Internal._beModifyFdOnce :: ()
[GblId[[RecSel(naughty)]], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE ()! [];

GHC.Event.Internal._beModifyFd :: ()
[GblId[[RecSel(naughty)]], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE ()! [];

GHC.Event.Internal._bePoll :: ()
[GblId[[RecSel(naughty)]], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE ()! [];

GHC.Event.Internal._beState :: ()
[GblId[[RecSel(naughty)]], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE ()! [];

GHC.Event.Internal.evtNothing [InlPrag=INLINE (sat-args=0)]
  :: GHC.Event.Internal.Event
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] GHC.Event.Internal.$fMonoidEventLifetime1;

evtRead1_r9iWk :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [1#];

GHC.Event.Internal.evtRead [InlPrag=INLINE (sat-args=0)]
  :: GHC.Event.Internal.Event
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] evtRead1_r9iWk;

evtWrite1_r9iWl :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [2#];

GHC.Event.Internal.evtWrite [InlPrag=INLINE (sat-args=0)]
  :: GHC.Event.Internal.Event
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] evtWrite1_r9iWl;

evtClose1_r9iWm :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [4#];

GHC.Event.Internal.evtClose [InlPrag=INLINE (sat-args=0)]
  :: GHC.Event.Internal.Event
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] evtClose1_r9iWm;

GHC.Event.Internal.elSupremum [InlPrag=INLINE (sat-args=2)]
  :: GHC.Event.Internal.Lifetime
     -> GHC.Event.Internal.Lifetime -> GHC.Event.Internal.Lifetime
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><L,1*U>,
 Unf=OtherCon []] =
    [] \r [ds_s9iYD ds1_s9iYE]
        case ds_s9iYD of {
          GHC.Event.Internal.OneShot -> ds1_s9iYE;
          GHC.Event.Internal.MultiShot -> GHC.Event.Internal.MultiShot [];
        };

GHC.Event.Internal.$fSemigroupLifetime_go [Occ=LoopBreaker]
  :: GHC.Event.Internal.Lifetime
     -> [GHC.Event.Internal.Lifetime] -> GHC.Event.Internal.Lifetime
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [b_s9iYG ds1_s9iYH]
        case ds1_s9iYH of {
          [] -> b_s9iYG;
          : c_s9iYJ [Occ=Once] cs_s9iYK [Occ=Once] ->
              case b_s9iYG of {
                GHC.Event.Internal.OneShot ->
                    GHC.Event.Internal.$fSemigroupLifetime_go c_s9iYJ cs_s9iYK;
                GHC.Event.Internal.MultiShot -> GHC.Event.Internal.MultiShot [];
              };
        };

GHC.Event.Internal.$fSemigroupLifetime_$csconcat
  :: GHC.Base.NonEmpty GHC.Event.Internal.Lifetime
     -> GHC.Event.Internal.Lifetime
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SS),1*U(1*U,1*U)>,
 Unf=OtherCon []] =
    [] \r [ds_s9iYM]
        case ds_s9iYM of {
          GHC.Base.:| a1_s9iYO [Occ=Once] as_s9iYP [Occ=Once] ->
              GHC.Event.Internal.$fSemigroupLifetime_go a1_s9iYO as_s9iYP;
        };

GHC.Event.Internal.$fMonoidLifetime_go [Occ=LoopBreaker]
  :: [GHC.Event.Internal.Lifetime] -> GHC.Event.Internal.Lifetime
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [ds_s9iYQ]
        case ds_s9iYQ of {
          [] -> GHC.Event.Internal.OneShot [];
          : y_s9iYS [Occ=Once!] ys_s9iYT [Occ=Once] ->
              case y_s9iYS of {
                GHC.Event.Internal.OneShot ->
                    GHC.Event.Internal.$fMonoidLifetime_go ys_s9iYT;
                GHC.Event.Internal.MultiShot -> GHC.Event.Internal.MultiShot [];
              };
        };

GHC.Event.Internal.$fSemigroupLifetime [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Base.Semigroup GHC.Event.Internal.Lifetime
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Base.C:Semigroup! [GHC.Event.Internal.elSupremum
                                         GHC.Event.Internal.$fSemigroupLifetime_$csconcat
                                         GHC.Event.Internal.$fSemigroupLifetime_$cstimes];
GHC.Event.Internal.$fMonoidLifetime [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Base.Monoid GHC.Event.Internal.Lifetime
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Base.C:Monoid! [GHC.Event.Internal.$fSemigroupLifetime
                                      GHC.Event.Internal.OneShot
                                      GHC.Event.Internal.elSupremum
                                      GHC.Event.Internal.$fMonoidLifetime_go];
GHC.Event.Internal.$fSemigroupLifetime_$cstimes [Occ=LoopBreaker]
  :: forall b.
     GHC.Real.Integral b =>
     b -> GHC.Event.Internal.Lifetime -> GHC.Event.Internal.Lifetime
[GblId,
 Arity=3,
 Str=<L,U(U(U(A,A,A,A,A,A,C(U)),U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A),A),A,C(C1(U)),C(C1(U)),A,A,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [$dIntegral_s9iYV eta_B2 eta_B1]
        Data.Semigroup.Internal.stimesMonoid
            $dIntegral_s9iYV GHC.Event.Internal.$fMonoidLifetime eta_B2 eta_B1;

GHC.Event.Internal.backend [InlPrag=INLINE (sat-args=5)]
  :: forall a.
     (a
      -> GHC.Base.Maybe GHC.Event.Internal.Timeout
      -> (System.Posix.Types.Fd
          -> GHC.Event.Internal.Event -> GHC.Types.IO ())
      -> GHC.Types.IO GHC.Types.Int)
     -> (a
         -> System.Posix.Types.Fd
         -> GHC.Event.Internal.Event
         -> GHC.Event.Internal.Event
         -> GHC.Types.IO GHC.Types.Bool)
     -> (a
         -> System.Posix.Types.Fd
         -> GHC.Event.Internal.Event
         -> GHC.Types.IO GHC.Types.Bool)
     -> (a -> GHC.Types.IO ())
     -> a
     -> GHC.Event.Internal.Backend
[GblId,
 Arity=5,
 Caf=NoCafRefs,
 Str=<L,U><L,U><L,U><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [bPoll_s9iYW
           bModifyFd_s9iYX
           bModifyFdOnce_s9iYY
           bDelete_s9iYZ
           state_s9iZ0]
        GHC.Event.Internal.$WBackend
            state_s9iZ0
            bPoll_s9iYW
            bModifyFd_s9iYX
            bModifyFdOnce_s9iYY
            bDelete_s9iYZ;

GHC.Event.Internal.poll [InlPrag=INLINE (sat-args=1)]
  :: GHC.Event.Internal.Backend
     -> GHC.Base.Maybe GHC.Event.Internal.Timeout
     -> (System.Posix.Types.Fd
         -> GHC.Event.Internal.Event -> GHC.Types.IO ())
     -> GHC.Types.IO GHC.Types.Int
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [ds_s9iZ1]
        case ds_s9iZ1 of {
          GHC.Event.Internal.Backend bState_s9iZ3 [Occ=Once]
                                     bPoll_s9iZ4 [Occ=Once!]
                                     _ [Occ=Dead]
                                     _ [Occ=Dead]
                                     _ [Occ=Dead] ->
              bPoll_s9iZ4 bState_s9iZ3;
        };

GHC.Event.Internal.modifyFd [InlPrag=INLINE (sat-args=1)]
  :: GHC.Event.Internal.Backend
     -> System.Posix.Types.Fd
     -> GHC.Event.Internal.Event
     -> GHC.Event.Internal.Event
     -> GHC.Types.IO GHC.Types.Bool
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [ds_s9iZ8]
        case ds_s9iZ8 of {
          GHC.Event.Internal.Backend bState_s9iZa [Occ=Once]
                                     _ [Occ=Dead]
                                     bModifyFd_s9iZc [Occ=Once!]
                                     _ [Occ=Dead]
                                     _ [Occ=Dead] ->
              bModifyFd_s9iZc bState_s9iZa;
        };

GHC.Event.Internal.modifyFdOnce [InlPrag=INLINE (sat-args=1)]
  :: GHC.Event.Internal.Backend
     -> System.Posix.Types.Fd
     -> GHC.Event.Internal.Event
     -> GHC.Types.IO GHC.Types.Bool
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [ds_s9iZf]
        case ds_s9iZf of {
          GHC.Event.Internal.Backend bState_s9iZh [Occ=Once]
                                     _ [Occ=Dead]
                                     _ [Occ=Dead]
                                     bModifyFdOnce_s9iZk [Occ=Once!]
                                     _ [Occ=Dead] ->
              bModifyFdOnce_s9iZk bState_s9iZh;
        };

GHC.Event.Internal.delete [InlPrag=INLINE (sat-args=1)]
  :: GHC.Event.Internal.Backend -> GHC.Types.IO ()
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [ds_s9iZm]
        case ds_s9iZm of {
          GHC.Event.Internal.Backend bState_s9iZo [Occ=Once]
                                     _ [Occ=Dead]
                                     _ [Occ=Dead]
                                     _ [Occ=Dead]
                                     bDelete_s9iZs [Occ=Once!] ->
              bDelete_s9iZs bState_s9iZo;
        };

GHC.Event.Internal.throwErrnoIfMinus1NoRetry2
  :: GHC.Integer.Type.Integer
[GblId, Unf=OtherCon []] =
    [] \u [] GHC.Integer.Type.mkInteger GHC.Types.True GHC.Types.[];

sat_s9iZt :: GHC.Types.Int
[LclId] =
    CCS_DONT_CARE GHC.Types.I#! [1#];

sat_s9iZu :: [GHC.Types.Int]
[LclId] =
    CCS_DONT_CARE :! [sat_s9iZt GHC.Types.[]];

GHC.Event.Internal.throwErrnoIfMinus1NoRetry3
  :: GHC.Integer.Type.Integer
[GblId, Unf=OtherCon []] =
    [] \u [] GHC.Integer.Type.mkInteger GHC.Types.True sat_s9iZu;

GHC.Event.Internal.throwErrnoIfMinus1NoRetry1
  :: forall a.
     (GHC.Classes.Eq a, GHC.Num.Num a) =>
     GHC.Base.String
     -> GHC.Types.IO a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId,
 Arity=5,
 Str=<L,1*U(1*C1(C1(U)),A)><L,U(A,A,A,1*C1(U),A,A,C(U))><L,U><C(S),1*C1(U(U,U))><S,U>,
 Unf=OtherCon []] =
    [] \r [$dEq_s9iZv $dNum_s9iZw loc_s9iZx f_s9iZy void_0E]
        case f_s9iZy GHC.Prim.void# of ds1_s9iZA {
          Unit# ipv1_s9iZC [Occ=Once] ->
              let {
                sat_s9iZE [Occ=Once] :: a_a9icv
                [LclId] =
                    [$dNum_s9iZw] \u []
                        let {
                          sat_s9iZD [Occ=Once] :: a_a9icv
                          [LclId] =
                              [$dNum_s9iZw] \u []
                                  GHC.Num.fromInteger
                                      $dNum_s9iZw GHC.Event.Internal.throwErrnoIfMinus1NoRetry3;
                        } in  GHC.Num.negate $dNum_s9iZw sat_s9iZD;
              } in 
                case GHC.Classes.== $dEq_s9iZv ipv1_s9iZC sat_s9iZE of {
                  GHC.Types.False -> Unit# [ipv1_s9iZC];
                  GHC.Types.True ->
                      case __pkg_ccall base-4.11.0.0 [GHC.Prim.void#] of {
                        Unit# ds2_s9iZJ [Occ=Once] ->
                            case narrow32Int# [ds2_s9iZJ] of {
                              __DEFAULT -> Foreign.C.Error.throwErrno1 loc_s9iZx GHC.Prim.void#;
                              4# ->
                                  let {
                                    sat_s9iZL [Occ=Once] :: a_a9icv
                                    [LclId] =
                                        [$dNum_s9iZw] \u []
                                            GHC.Num.fromInteger
                                                $dNum_s9iZw
                                                GHC.Event.Internal.throwErrnoIfMinus1NoRetry2;
                                  } in  Unit# [sat_s9iZL];
                            };
                      };
                };
        };

GHC.Event.Internal.throwErrnoIfMinus1NoRetry
  :: forall a.
     (GHC.Classes.Eq a, GHC.Num.Num a) =>
     GHC.Base.String -> GHC.Types.IO a -> GHC.Types.IO a
[GblId,
 Arity=5,
 Str=<L,1*U(1*C1(C1(U)),A)><L,U(A,A,A,1*C1(U),A,A,C(U))><L,U><C(S),1*C1(U(U,U))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B5 eta_B4 eta_B3 eta_B2 void_0E]
        GHC.Event.Internal.throwErrnoIfMinus1NoRetry1
            eta_B5 eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Event.Internal.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

GHC.Event.Internal.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Internal.$trModule4];

GHC.Event.Internal.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.Event.Internal"#;

GHC.Event.Internal.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Internal.$trModule2];

GHC.Event.Internal.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [GHC.Event.Internal.$trModule3
                                     GHC.Event.Internal.$trModule1];

$krep_r9iWn :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Word.$tcWord64
                                              GHC.Types.[]];

$krep1_r9iWo :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcBool
                                              GHC.Types.[]];

$krep2_r9iWp :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcInt
                                              GHC.Types.[]];

$krep3_r9iWq :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Tuple.$tc()
                                              GHC.Types.[]];

$krep4_r9iWr :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [System.Posix.Types.$tcFd
                                              GHC.Types.[]];

$krep5_r9iWs :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep1_r9iWo GHC.Types.[]];

$krep6_r9iWt :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcIO
                                              $krep5_r9iWs];

$krep7_r9iWu :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep2_r9iWp GHC.Types.[]];

$krep8_r9iWv :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcIO
                                              $krep7_r9iWu];

$krep9_r9iWw :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep3_r9iWq GHC.Types.[]];

$krep10_r9iWx :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcIO
                                              $krep9_r9iWw];

$krep11_r9iWy :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepVar! [0#];

$krep12_r9iWz :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep11_r9iWy $krep10_r9iWx];

GHC.Event.Internal.$tcEvent2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Event"#;

GHC.Event.Internal.$tcEvent1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Internal.$tcEvent2];

GHC.Event.Internal.$tcEvent :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [6453162546660085965##
                                    4509047211634842293##
                                    GHC.Event.Internal.$trModule
                                    GHC.Event.Internal.$tcEvent1
                                    0#
                                    GHC.Types.krep$*];

$krep13_r9iWA :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.Internal.$tcEvent
                                              GHC.Types.[]];

$krep14_r9iWB :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep13_r9iWA $krep10_r9iWx];

$krep15_r9iWC :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep4_r9iWr $krep14_r9iWB];

$krep16_r9iWD :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep15_r9iWC $krep8_r9iWv];

$krep17_r9iWE :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep13_r9iWA $krep6_r9iWt];

$krep18_r9iWF :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep13_r9iWA $krep17_r9iWE];

$krep19_r9iWG :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep4_r9iWr $krep18_r9iWF];

$krep20_r9iWH :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep11_r9iWy $krep19_r9iWG];

$krep21_r9iWI :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep4_r9iWr $krep17_r9iWE];

$krep22_r9iWJ :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep11_r9iWy $krep21_r9iWI];

GHC.Event.Internal.$tc'Event1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_r9iWp $krep13_r9iWA];

GHC.Event.Internal.$tc'Event3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Event"#;

GHC.Event.Internal.$tc'Event2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Internal.$tc'Event3];

GHC.Event.Internal.$tc'Event :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [3843507504600839845##
                                    12172955723408562945##
                                    GHC.Event.Internal.$trModule
                                    GHC.Event.Internal.$tc'Event2
                                    0#
                                    GHC.Event.Internal.$tc'Event1];

GHC.Event.Internal.$tcLifetime2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Lifetime"#;

GHC.Event.Internal.$tcLifetime1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Internal.$tcLifetime2];

GHC.Event.Internal.$tcLifetime :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [16879554565198773712##
                                    8198822807138459060##
                                    GHC.Event.Internal.$trModule
                                    GHC.Event.Internal.$tcLifetime1
                                    0#
                                    GHC.Types.krep$*];

GHC.Event.Internal.$tc'MultiShot1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.Internal.$tcLifetime
                                              GHC.Types.[]];

GHC.Event.Internal.$tc'OneShot2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'OneShot"#;

GHC.Event.Internal.$tc'OneShot1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Internal.$tc'OneShot2];

GHC.Event.Internal.$tc'OneShot :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [4428239562170783460##
                                    11248279118174204528##
                                    GHC.Event.Internal.$trModule
                                    GHC.Event.Internal.$tc'OneShot1
                                    0#
                                    GHC.Event.Internal.$tc'MultiShot1];

GHC.Event.Internal.$tc'MultiShot3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'MultiShot"#;

GHC.Event.Internal.$tc'MultiShot2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Internal.$tc'MultiShot3];

GHC.Event.Internal.$tc'MultiShot :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [963080519453727549##
                                    5499435804578671723##
                                    GHC.Event.Internal.$trModule
                                    GHC.Event.Internal.$tc'MultiShot2
                                    0#
                                    GHC.Event.Internal.$tc'MultiShot1];

GHC.Event.Internal.$tcEventLifetime2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "EventLifetime"#;

GHC.Event.Internal.$tcEventLifetime1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Internal.$tcEventLifetime2];

GHC.Event.Internal.$tcEventLifetime :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [11472987326402547198##
                                    14676184191233842558##
                                    GHC.Event.Internal.$trModule
                                    GHC.Event.Internal.$tcEventLifetime1
                                    0#
                                    GHC.Types.krep$*];

$krep23_r9iWK :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.Internal.$tcEventLifetime
                                              GHC.Types.[]];

GHC.Event.Internal.$tc'EL1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_r9iWp $krep23_r9iWK];

GHC.Event.Internal.$tc'EL3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'EL"#;

GHC.Event.Internal.$tc'EL2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Internal.$tc'EL3];

GHC.Event.Internal.$tc'EL :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [13328424765260461560##
                                    17004947518967325218##
                                    GHC.Event.Internal.$trModule
                                    GHC.Event.Internal.$tc'EL2
                                    0#
                                    GHC.Event.Internal.$tc'EL1];

GHC.Event.Internal.$tcTimeout2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Timeout"#;

GHC.Event.Internal.$tcTimeout1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Internal.$tcTimeout2];

GHC.Event.Internal.$tcTimeout :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [3071157695468345159##
                                    2371669836431867052##
                                    GHC.Event.Internal.$trModule
                                    GHC.Event.Internal.$tcTimeout1
                                    0#
                                    GHC.Types.krep$*];

GHC.Event.Internal.$tc'Forever1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.Internal.$tcTimeout
                                              GHC.Types.[]];

GHC.Event.Internal.$tc'Forever3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Forever"#;

GHC.Event.Internal.$tc'Forever2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Internal.$tc'Forever3];

GHC.Event.Internal.$tc'Forever :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [15890326801882711521##
                                    6940845280791152844##
                                    GHC.Event.Internal.$trModule
                                    GHC.Event.Internal.$tc'Forever2
                                    0#
                                    GHC.Event.Internal.$tc'Forever1];

GHC.Event.Internal.$tc'Timeout1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_r9iWn
                                         GHC.Event.Internal.$tc'Forever1];

GHC.Event.Internal.$tc'Timeout3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Timeout"#;

GHC.Event.Internal.$tc'Timeout2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Internal.$tc'Timeout3];

GHC.Event.Internal.$tc'Timeout :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [11507111740173521793##
                                    14582130137848061687##
                                    GHC.Event.Internal.$trModule
                                    GHC.Event.Internal.$tc'Timeout2
                                    0#
                                    GHC.Event.Internal.$tc'Timeout1];

$krep24_r9iWL :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [GHC.Event.Internal.$tc'Forever1 GHC.Types.[]];

$krep25_r9iWM :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Base.$tcMaybe
                                              $krep24_r9iWL];

$krep26_r9iWN :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep25_r9iWM $krep16_r9iWD];

$krep27_r9iWO :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep11_r9iWy $krep26_r9iWN];

GHC.Event.Internal.$tcBackend2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Backend"#;

GHC.Event.Internal.$tcBackend1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Internal.$tcBackend2];

GHC.Event.Internal.$tcBackend :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [5241936179624485302##
                                    3407160178235461245##
                                    GHC.Event.Internal.$trModule
                                    GHC.Event.Internal.$tcBackend1
                                    0#
                                    GHC.Types.krep$*];

$krep28_r9iWP :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.Internal.$tcBackend
                                              GHC.Types.[]];

$krep29_r9iWQ :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep12_r9iWz $krep28_r9iWP];

$krep30_r9iWR :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep22_r9iWJ $krep29_r9iWQ];

$krep31_r9iWS :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep20_r9iWH $krep30_r9iWR];

$krep32_r9iWT :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep27_r9iWO $krep31_r9iWS];

GHC.Event.Internal.$tc'Backend1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep11_r9iWy $krep32_r9iWT];

GHC.Event.Internal.$tc'Backend3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Backend"#;

GHC.Event.Internal.$tc'Backend2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Internal.$tc'Backend3];

GHC.Event.Internal.$tc'Backend :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [2097061961478251755##
                                    1358985482759746540##
                                    GHC.Event.Internal.$trModule
                                    GHC.Event.Internal.$tc'Backend2
                                    1#
                                    GHC.Event.Internal.$tc'Backend1];

GHC.Event.Internal.$fEqEvent [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq GHC.Event.Internal.Event
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Classes.eqInt
                                     GHC.Classes.neInt];

GHC.Event.Internal.$fEqEventLifetime [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq GHC.Event.Internal.EventLifetime
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Classes.eqInt
                                     GHC.Classes.neInt];

elEvent1_r9iWU :: GHC.Event.Internal.EventLifetime -> GHC.Types.Int
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>m,
 Unf=OtherCon []] =
    sat-only [] \r [ds_s9iZM]
        case ds_s9iZM of {
          GHC.Types.I# x#_s9iZO [Occ=Once] ->
              case andI# [x#_s9iZO 7#] of sat_s9iZP {
                __DEFAULT -> GHC.Types.I# [sat_s9iZP];
              };
        };

GHC.Event.Internal.elEvent [InlPrag=INLINE (sat-args=1)]
  :: GHC.Event.Internal.EventLifetime -> GHC.Event.Internal.Event
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>m,
 Unf=OtherCon []] =
    [] \r [eta_B1] elEvent1_r9iWU eta_B1;

GHC.Event.Internal.$wgo2 [InlPrag=NOUSERINLINE[0], Occ=LoopBreaker]
  :: GHC.Prim.Int#
     -> [GHC.Event.Internal.EventLifetime] -> GHC.Prim.Int#
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [ww_s9iZQ w_s9iZR]
        case w_s9iZR of {
          [] -> ww_s9iZQ;
          : c_s9iZT [Occ=Once] cs_s9iZU [Occ=Once] ->
              case c_s9iZT of {
                GHC.Types.I# ww2_s9iZW [Occ=Once] ->
                    case GHC.Event.Internal.$wgo2 ww2_s9iZW cs_s9iZU of ww3_s9iZX {
                      __DEFAULT -> orI# [ww_s9iZQ ww3_s9iZX];
                    };
              };
        };

GHC.Event.Internal.$fSemigroupEventLifetime_go [InlPrag=NOUSERINLINE[0]]
  :: GHC.Event.Internal.EventLifetime
     -> [GHC.Event.Internal.EventLifetime]
     -> GHC.Event.Internal.EventLifetime
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S,1*U>m,
 Unf=OtherCon []] =
    [] \r [w_s9iZY w1_s9iZZ]
        case w_s9iZY of {
          GHC.Types.I# ww1_s9j01 [Occ=Once] ->
              case GHC.Event.Internal.$wgo2 ww1_s9j01 w1_s9iZZ of ww2_s9j02 {
                __DEFAULT -> GHC.Types.I# [ww2_s9j02];
              };
        };

GHC.Event.Internal.$fSemigroupEventLifetime_$csconcat
  :: GHC.Base.NonEmpty GHC.Event.Internal.EventLifetime
     -> GHC.Event.Internal.EventLifetime
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S(S)S),1*U(1*U(U),1*U)>m,
 Unf=OtherCon []] =
    [] \r [ds_s9j03]
        case ds_s9j03 of {
          GHC.Base.:| a1_s9j05 [Occ=Once] as_s9j06 [Occ=Once] ->
              GHC.Event.Internal.$fSemigroupEventLifetime_go a1_s9j05 as_s9j06;
        };

GHC.Event.Internal.$fSemigroupEventLifetime [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Base.Semigroup GHC.Event.Internal.EventLifetime
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Base.C:Semigroup! [Data.Bits.$fBitsInt_$c.|.
                                         GHC.Event.Internal.$fSemigroupEventLifetime_$csconcat
                                         GHC.Event.Internal.$fSemigroupEventLifetime_$cstimes];
GHC.Event.Internal.$fSemigroupEventLifetime_$cstimes [Occ=LoopBreaker]
  :: forall b.
     GHC.Real.Integral b =>
     b
     -> GHC.Event.Internal.EventLifetime
     -> GHC.Event.Internal.EventLifetime
[GblId, Arity=1, Str=<L,U>, Unf=OtherCon []] =
    [] \r [$dIntegral_s9j07]
        Data.Semigroup.Internal.stimesDefault
            $dIntegral_s9j07 GHC.Event.Internal.$fSemigroupEventLifetime;

GHC.Event.Internal.$wgo1 [InlPrag=NOUSERINLINE[0], Occ=LoopBreaker]
  :: [GHC.Event.Internal.EventLifetime] -> GHC.Prim.Int#
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [w_s9j08]
        case w_s9j08 of {
          [] -> 0#;
          : y_s9j0a [Occ=Once] ys_s9j0b [Occ=Once] ->
              case y_s9j0a of {
                GHC.Types.I# x#_s9j0d [Occ=Once] ->
                    case GHC.Event.Internal.$wgo1 ys_s9j0b of ww_s9j0e {
                      __DEFAULT -> orI# [x#_s9j0d ww_s9j0e];
                    };
              };
        };

GHC.Event.Internal.$fMonoidEventLifetime_go [InlPrag=NOUSERINLINE[0]]
  :: [GHC.Event.Internal.EventLifetime]
     -> GHC.Event.Internal.EventLifetime
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>m, Unf=OtherCon []] =
    [] \r [w_s9j0f]
        case GHC.Event.Internal.$wgo1 w_s9j0f of ww_s9j0g {
          __DEFAULT -> GHC.Types.I# [ww_s9j0g];
        };

GHC.Event.Internal.$fMonoidEventLifetime [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Base.Monoid GHC.Event.Internal.EventLifetime
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Base.C:Monoid! [GHC.Event.Internal.$fSemigroupEventLifetime
                                      GHC.Event.Internal.$fMonoidEventLifetime1
                                      Data.Bits.$fBitsInt_$c.|.
                                      GHC.Event.Internal.$fMonoidEventLifetime_go];

GHC.Event.Internal.elLifetime [InlPrag=INLINE (sat-args=1)]
  :: GHC.Event.Internal.EventLifetime -> GHC.Event.Internal.Lifetime
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [ds_s9j0h]
        case ds_s9j0h of {
          GHC.Types.I# x#_s9j0j [Occ=Once] ->
              case andI# [x#_s9j0j 8#] of {
                __DEFAULT -> GHC.Event.Internal.MultiShot [];
                0# -> GHC.Event.Internal.OneShot [];
              };
        };

eventLifetime1_r9iWV
  :: GHC.Event.Internal.Event
     -> GHC.Event.Internal.Lifetime -> GHC.Types.Int
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U(U)><S,1*U>m,
 Unf=OtherCon []] =
    sat-only [] \r [ds_s9j0l l_s9j0m]
        case ds_s9j0l of wild_s9j0n {
          GHC.Types.I# x#_s9j0o [Occ=Once] ->
              case l_s9j0m of {
                GHC.Event.Internal.OneShot -> wild_s9j0n;
                GHC.Event.Internal.MultiShot ->
                    case orI# [x#_s9j0o 8#] of sat_s9j0q {
                      __DEFAULT -> GHC.Types.I# [sat_s9j0q];
                    };
              };
        };

GHC.Event.Internal.eventLifetime [InlPrag=INLINE (sat-args=2)]
  :: GHC.Event.Internal.Event
     -> GHC.Event.Internal.Lifetime -> GHC.Event.Internal.EventLifetime
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U(U)><S,1*U>m,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] eventLifetime1_r9iWV eta_B2 eta_B1;

GHC.Event.Internal.evtCombine [InlPrag=INLINE (sat-args=2)]
  :: GHC.Event.Internal.Event
     -> GHC.Event.Internal.Event -> GHC.Event.Internal.Event
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)>m,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] Data.Bits.$fBitsInt_$c.|. eta_B2 eta_B1;

GHC.Event.Internal.evtConcat [InlPrag=INLINE (sat-args=0)]
  :: [GHC.Event.Internal.Event] -> GHC.Event.Internal.Event
[GblId, Arity=1, Unf=OtherCon []] =
    [] \r [eta_B1]
        GHC.List.foldl'
            GHC.Event.Internal.evtCombine GHC.Event.Internal.evtNothing eta_B1;

GHC.Event.Internal.$wgo [InlPrag=NOUSERINLINE[0], Occ=LoopBreaker]
  :: GHC.Prim.Int# -> [GHC.Event.Internal.Event] -> GHC.Prim.Int#
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [ww_s9j0r w_s9j0s]
        case w_s9j0s of {
          [] -> ww_s9j0r;
          : c_s9j0u [Occ=Once] cs_s9j0v [Occ=Once] ->
              case c_s9j0u of {
                GHC.Types.I# ww2_s9j0x [Occ=Once] ->
                    case GHC.Event.Internal.$wgo ww2_s9j0x cs_s9j0v of ww3_s9j0y {
                      __DEFAULT -> orI# [ww_s9j0r ww3_s9j0y];
                    };
              };
        };

GHC.Event.Internal.$fSemigroupEvent_go [InlPrag=NOUSERINLINE[0]]
  :: GHC.Event.Internal.Event
     -> [GHC.Event.Internal.Event] -> GHC.Event.Internal.Event
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S,1*U>m,
 Unf=OtherCon []] =
    [] \r [w_s9j0z w1_s9j0A]
        case w_s9j0z of {
          GHC.Types.I# ww1_s9j0C [Occ=Once] ->
              case GHC.Event.Internal.$wgo ww1_s9j0C w1_s9j0A of ww2_s9j0D {
                __DEFAULT -> GHC.Types.I# [ww2_s9j0D];
              };
        };

GHC.Event.Internal.$fSemigroupEvent_$csconcat
  :: GHC.Base.NonEmpty GHC.Event.Internal.Event
     -> GHC.Event.Internal.Event
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S(S)S),1*U(1*U(U),1*U)>m,
 Unf=OtherCon []] =
    [] \r [ds_s9j0E]
        case ds_s9j0E of {
          GHC.Base.:| a1_s9j0G [Occ=Once] as_s9j0H [Occ=Once] ->
              GHC.Event.Internal.$fSemigroupEvent_go a1_s9j0G as_s9j0H;
        };

GHC.Event.Internal.$fSemigroupEvent [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Base.Semigroup GHC.Event.Internal.Event
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Base.C:Semigroup! [GHC.Event.Internal.evtCombine
                                         GHC.Event.Internal.$fSemigroupEvent_$csconcat
                                         GHC.Event.Internal.$fSemigroupEvent_$cstimes];
GHC.Event.Internal.$fMonoidEvent [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Base.Monoid GHC.Event.Internal.Event
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Base.C:Monoid! [GHC.Event.Internal.$fSemigroupEvent
                                      GHC.Event.Internal.evtNothing
                                      GHC.Event.Internal.evtCombine
                                      GHC.Event.Internal.evtConcat];
GHC.Event.Internal.$fSemigroupEvent_$cstimes [Occ=LoopBreaker]
  :: forall b.
     GHC.Real.Integral b =>
     b -> GHC.Event.Internal.Event -> GHC.Event.Internal.Event
[GblId,
 Arity=3,
 Str=<L,U(U(U(A,A,A,A,A,A,C(U)),U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A),A),A,C(C1(U)),C(C1(U)),A,A,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [$dIntegral_s9j0I eta_B2 eta_B1]
        Data.Semigroup.Internal.stimesMonoid
            $dIntegral_s9j0I GHC.Event.Internal.$fMonoidEvent eta_B2 eta_B1;

GHC.Event.Internal.eventIs
  :: GHC.Event.Internal.Event
     -> GHC.Event.Internal.Event -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [ds_s9j0J ds1_s9j0K]
        case ds_s9j0J of {
          GHC.Types.I# x#_s9j0M [Occ=Once] ->
              case ds1_s9j0K of {
                GHC.Types.I# y#_s9j0O [Occ=Once] ->
                    case andI# [x#_s9j0M y#_s9j0O] of {
                      __DEFAULT -> GHC.Types.True [];
                      0# -> GHC.Types.False [];
                    };
              };
        };

GHC.Event.Internal.$fShowEvent13 :: GHC.Types.Char
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.C#! ['['#];

GHC.Event.Internal.$fShowEvent5 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "]"#;

GHC.Event.Internal.$fShowEvent10 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    ","#;

GHC.Event.Internal.$fShowEvent9 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# GHC.Event.Internal.$fShowEvent10;

GHC.Event.Internal.$fShowEvent12 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "evtRead"#;

GHC.Event.Internal.$fShowEvent11 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# GHC.Event.Internal.$fShowEvent12;

GHC.Event.Internal.$fShowEvent8 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "evtWrite"#;

GHC.Event.Internal.$fShowEvent7 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# GHC.Event.Internal.$fShowEvent8;

GHC.Event.Internal.$fShowEvent3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "evtClose"#;

GHC.Event.Internal.$fShowEvent2 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# GHC.Event.Internal.$fShowEvent3;

GHC.Event.Internal.$fShowEvent4 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# GHC.Event.Internal.$fShowEvent5;

GHC.Event.Internal.$fShowEvent6 :: [[GHC.Types.Char]]
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [GHC.Event.Internal.$fShowEvent2 GHC.Types.[]];

GHC.Event.Internal.$w$cshow [InlPrag=NOUSERINLINE[0]]
  :: GHC.Event.Internal.Event
     -> (# GHC.Types.Char, [GHC.Types.Char] #)
[GblId, Arity=1, Str=<L,1*U(U)>, Unf=OtherCon []] =
    [] \r [w_s9j0Q]
        let {
          sat_s9j1b [Occ=Once] :: [GHC.Types.Char]
          [LclId] =
              [w_s9j0Q] \u []
                  case w_s9j0Q of {
                    GHC.Types.I# x#_s9j0S ->
                        case andI# [x#_s9j0S 1#] of {
                          __DEFAULT ->
                              let {
                                sat_s9j0Z [Occ=Once] :: [[GHC.Types.Char]]
                                [LclId] =
                                    [x#_s9j0S] \u []
                                        case andI# [x#_s9j0S 2#] of {
                                          __DEFAULT ->
                                              let {
                                                sat_s9j0W [Occ=Once] :: [[GHC.Types.Char]]
                                                [LclId] =
                                                    [x#_s9j0S] \u []
                                                        case andI# [x#_s9j0S 4#] of {
                                                          __DEFAULT ->
                                                              GHC.Event.Internal.$fShowEvent6;
                                                          0# -> [] [];
                                                        }; } in
                                              let {
                                                sat_s9j0X [Occ=Once] :: [[GHC.Types.Char]]
                                                [LclId] =
                                                    CCCS :! [GHC.Event.Internal.$fShowEvent7
                                                             sat_s9j0W];
                                              } in 
                                                Data.OldList.prependToAll
                                                    GHC.Event.Internal.$fShowEvent9 sat_s9j0X;
                                          0# ->
                                              case andI# [x#_s9j0S 4#] of {
                                                __DEFAULT ->
                                                    Data.OldList.prependToAll
                                                        GHC.Event.Internal.$fShowEvent9
                                                        GHC.Event.Internal.$fShowEvent6;
                                                0# ->
                                                    Data.OldList.prependToAll
                                                        GHC.Event.Internal.$fShowEvent9
                                                        GHC.Types.[];
                                              };
                                        }; } in
                              let {
                                sat_s9j10 [Occ=Once] :: [[GHC.Types.Char]]
                                [LclId] =
                                    CCCS :! [GHC.Event.Internal.$fShowEvent11 sat_s9j0Z];
                              } in 
                                case Data.OldList.intercalate1 sat_s9j10 of sat_s9j11 {
                                  __DEFAULT ->
                                      GHC.Base.++ sat_s9j11 GHC.Event.Internal.$fShowEvent4;
                                };
                          0# ->
                              case andI# [x#_s9j0S 2#] of {
                                __DEFAULT ->
                                    let {
                                      sat_s9j14 [Occ=Once] :: [[GHC.Types.Char]]
                                      [LclId] =
                                          [x#_s9j0S] \u []
                                              case andI# [x#_s9j0S 4#] of {
                                                __DEFAULT ->
                                                    Data.OldList.prependToAll
                                                        GHC.Event.Internal.$fShowEvent9
                                                        GHC.Event.Internal.$fShowEvent6;
                                                0# ->
                                                    Data.OldList.prependToAll
                                                        GHC.Event.Internal.$fShowEvent9
                                                        GHC.Types.[];
                                              }; } in
                                    let {
                                      sat_s9j15 [Occ=Once] :: [[GHC.Types.Char]]
                                      [LclId] =
                                          CCCS :! [GHC.Event.Internal.$fShowEvent7 sat_s9j14];
                                    } in 
                                      case Data.OldList.intercalate1 sat_s9j15 of sat_s9j16 {
                                        __DEFAULT ->
                                            GHC.Base.++ sat_s9j16 GHC.Event.Internal.$fShowEvent4;
                                      };
                                0# ->
                                    case andI# [x#_s9j0S 4#] of {
                                      __DEFAULT ->
                                          let {
                                            sat_s9j18 [Occ=Once] :: [[GHC.Types.Char]]
                                            [LclId] =
                                                [] \u []
                                                    Data.OldList.prependToAll
                                                        GHC.Event.Internal.$fShowEvent9
                                                        GHC.Types.[]; } in
                                          let {
                                            sat_s9j19 [Occ=Once] :: [[GHC.Types.Char]]
                                            [LclId] =
                                                CCCS :! [GHC.Event.Internal.$fShowEvent2 sat_s9j18];
                                          } in 
                                            case Data.OldList.intercalate1 sat_s9j19 of sat_s9j1a {
                                              __DEFAULT ->
                                                  GHC.Base.++
                                                      sat_s9j1a GHC.Event.Internal.$fShowEvent4;
                                            };
                                      0# -> GHC.Event.Internal.$fShowEvent4;
                                    };
                              };
                        };
                  };
        } in  (#,#) [GHC.Event.Internal.$fShowEvent13 sat_s9j1b];

GHC.Event.Internal.$fShowEvent_$cshow [InlPrag=NOUSERINLINE[0]]
  :: GHC.Event.Internal.Event -> GHC.Base.String
[GblId, Arity=1, Str=<L,1*U(U)>m2, Unf=OtherCon []] =
    [] \r [w_s9j1c]
        case GHC.Event.Internal.$w$cshow w_s9j1c of {
          (#,#) ww1_s9j1e [Occ=Once] ww2_s9j1f [Occ=Once] ->
              : [ww1_s9j1e ww2_s9j1f];
        };

GHC.Event.Internal.$fShowEvent_$cshowsPrec
  :: GHC.Types.Int -> GHC.Event.Internal.Event -> GHC.Show.ShowS
[GblId, Arity=3, Str=<L,A><L,1*U(U)><L,1*U>, Unf=OtherCon []] =
    [] \r [ds_s9j1g x_s9j1h s_s9j1i]
        case GHC.Event.Internal.$w$cshow x_s9j1h of {
          (#,#) ww1_s9j1k [Occ=Once] ww2_s9j1l [Occ=Once] ->
              let {
                sat_s9j1m [Occ=Once] :: [GHC.Types.Char]
                [LclId] =
                    CCCS :! [ww1_s9j1k ww2_s9j1l];
              } in  GHC.Base.++ sat_s9j1m s_s9j1i;
        };

GHC.Event.Internal.$fShowEvent1
  :: GHC.Event.Internal.Event -> GHC.Base.String -> [GHC.Types.Char]
[GblId, Arity=2, Str=<L,1*U(U)><L,1*U>, Unf=OtherCon []] =
    [] \r [x_s9j1n s_s9j1o]
        case GHC.Event.Internal.$w$cshow x_s9j1n of {
          (#,#) ww1_s9j1q [Occ=Once] ww2_s9j1r [Occ=Once] ->
              let {
                sat_s9j1s [Occ=Once] :: [GHC.Types.Char]
                [LclId] =
                    CCCS :! [ww1_s9j1q ww2_s9j1r];
              } in  GHC.Base.++ sat_s9j1s s_s9j1o;
        };

GHC.Event.Internal.$fShowEvent_$cshowList
  :: [GHC.Event.Internal.Event] -> GHC.Show.ShowS
[GblId, Arity=2, Str=<S,1*U><L,U>, Unf=OtherCon []] =
    [] \r [ls_s9j1t s_s9j1u]
        GHC.Show.showList__
            GHC.Event.Internal.$fShowEvent1 ls_s9j1t s_s9j1u;

GHC.Event.Internal.$fShowEvent [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show GHC.Event.Internal.Event
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Event.Internal.$fShowEvent_$cshowsPrec
                                    GHC.Event.Internal.$fShowEvent_$cshow
                                    GHC.Event.Internal.$fShowEvent_$cshowList];

GHC.Event.Internal.Backend
  :: forall a.
     a
     -> (a
         -> GHC.Base.Maybe GHC.Event.Internal.Timeout
         -> (System.Posix.Types.Fd
             -> GHC.Event.Internal.Event -> GHC.Types.IO ())
         -> GHC.Types.IO GHC.Types.Int)
     -> (a
         -> System.Posix.Types.Fd
         -> GHC.Event.Internal.Event
         -> GHC.Event.Internal.Event
         -> GHC.Types.IO GHC.Types.Bool)
     -> (a
         -> System.Posix.Types.Fd
         -> GHC.Event.Internal.Event
         -> GHC.Types.IO GHC.Types.Bool)
     -> (a -> GHC.Types.IO ())
     -> GHC.Event.Internal.Backend
[GblId[DataCon],
 Arity=5,
 Caf=NoCafRefs,
 Str=<L,U><L,U><L,U><L,U><L,U>,
 Unf=OtherCon []] =
    [] \r [eta_B5 eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.Event.Internal.Backend [eta_B5 eta_B4 eta_B3 eta_B2 eta_B1];

GHC.Event.Internal.Timeout
  :: GHC.Prim.Word# -> GHC.Event.Internal.Timeout
[GblId[DataCon],
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U>m1,
 Unf=OtherCon []] =
    [] \r [eta_B1] GHC.Event.Internal.Timeout [eta_B1];

GHC.Event.Internal.Forever :: GHC.Event.Internal.Timeout
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Event.Internal.Forever! [];

GHC.Event.Internal.OneShot :: GHC.Event.Internal.Lifetime
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Event.Internal.OneShot! [];

GHC.Event.Internal.MultiShot :: GHC.Event.Internal.Lifetime
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Event.Internal.MultiShot! [];


==================== Pre unarise: ====================
2018-03-16 16:04:28.23496878 UTC

GHC.Event.Internal.$WBackend [InlPrag=INLINE[2]]
  :: forall a.
     a
     -> (a
         -> GHC.Base.Maybe GHC.Event.Internal.Timeout
         -> (System.Posix.Types.Fd
             -> GHC.Event.Internal.Event -> GHC.Types.IO ())
         -> GHC.Types.IO GHC.Types.Int)
     -> (a
         -> System.Posix.Types.Fd
         -> GHC.Event.Internal.Event
         -> GHC.Event.Internal.Event
         -> GHC.Types.IO GHC.Types.Bool)
     -> (a
         -> System.Posix.Types.Fd
         -> GHC.Event.Internal.Event
         -> GHC.Types.IO GHC.Types.Bool)
     -> (a -> GHC.Types.IO ())
     -> GHC.Event.Internal.Backend
[GblId[DataConWrapper],
 Arity=5,
 Caf=NoCafRefs,
 Str=<S,U><L,U><L,U><L,U><L,U>,
 Unf=OtherCon []] =
    [] \r [dt_s9krW dt_s9krX dt_s9krY dt_s9krZ dt_s9ks0]
        case dt_s9krW of dt_s9ks1 {
          __DEFAULT ->
              GHC.Event.Internal.Backend [dt_s9ks1
                                          dt_s9krX
                                          dt_s9krY
                                          dt_s9krZ
                                          dt_s9ks0];
        };

GHC.Event.Internal.$WTimeout [InlPrag=INLINE[2]]
  :: GHC.Word.Word64 -> GHC.Event.Internal.Timeout
[GblId[DataConWrapper],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S,U>m1,
 Unf=OtherCon []] =
    [] \r [dt_s9ks2]
        case dt_s9ks2 of {
          GHC.Word.W64# dt_s9ks4 [Occ=Once] ->
              GHC.Event.Internal.Timeout [dt_s9ks4];
        };

GHC.Event.Internal.$fMonoidEventLifetime1 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [0#];

GHC.Event.Internal.$fShowTimeout4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Forever"#;

GHC.Event.Internal.$fShowTimeout3 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# GHC.Event.Internal.$fShowTimeout4;

GHC.Event.Internal.$fShowTimeout2
  :: [GHC.Types.Char] -> [GHC.Types.Char]
[GblId, Arity=1, Unf=OtherCon []] =
    [] \r [eta_B1]
        GHC.Base.++ GHC.Event.Internal.$fShowTimeout3 eta_B1;

GHC.Event.Internal.$fShowTimeout5 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Timeout "#;

GHC.Event.Internal.$fShowTimeout_$cshowsPrec
  :: GHC.Types.Int -> GHC.Event.Internal.Timeout -> GHC.Show.ShowS
[GblId, Arity=2, Str=<L,1*U(U)><S,1*U>, Unf=OtherCon []] =
    [] \r [a_s9ks5 ds_s9ks6]
        case ds_s9ks6 of {
          GHC.Event.Internal.Timeout dt_s9ks8 ->
              case a_s9ks5 of {
                GHC.Types.I# x_s9ksa [Occ=Once] ->
                    let {
                      w1_s9ksb [Occ=OnceL*] :: GHC.Integer.Type.Integer
                      [LclId] =
                          [dt_s9ks8] \u []
                              case word2Int# [dt_s9ks8] of i#_s9ksc [Dmd=<S,U>] {
                                __DEFAULT ->
                                    case >=# [i#_s9ksc 0#] of {
                                      __DEFAULT -> GHC.Integer.Type.wordToInteger dt_s9ks8;
                                      1# -> GHC.Integer.Type.smallInteger i#_s9ksc;
                                    };
                              };
                    } in 
                      case >=# [x_s9ksa 11#] of {
                        __DEFAULT ->
                            let {
                              sat_s9ksk [Occ=OnceT[0]] :: GHC.Base.String -> [GHC.Types.Char]
                              [LclId] =
                                  [w1_s9ksb] \r [x1_s9ksf]
                                      let {
                                        sat_s9ksj [Occ=Once] :: [GHC.Types.Char]
                                        [LclId] =
                                            [w1_s9ksb x1_s9ksf] \u []
                                                case
                                                    GHC.Show.$w$cshowsPrec4 11# w1_s9ksb x1_s9ksf
                                                of
                                                { (#,#) ww3_s9ksh [Occ=Once] ww4_s9ksi [Occ=Once] ->
                                                      : [ww3_s9ksh ww4_s9ksi];
                                                };
                                      } in 
                                        GHC.CString.unpackAppendCString#
                                            GHC.Event.Internal.$fShowTimeout5 sat_s9ksj;
                            } in  sat_s9ksk;
                        1# ->
                            let {
                              sat_s9kss [Occ=OnceT[0]] :: GHC.Base.String -> [GHC.Types.Char]
                              [LclId] =
                                  [w1_s9ksb] \r [x1_s9ksl]
                                      let {
                                        sat_s9ksr [Occ=Once] :: [GHC.Types.Char]
                                        [LclId] =
                                            [w1_s9ksb x1_s9ksl] \u []
                                                let {
                                                  sat_s9ksq [Occ=Once] :: [GHC.Types.Char]
                                                  [LclId] =
                                                      [w1_s9ksb x1_s9ksl] \u []
                                                          let {
                                                            sat_s9ksm [Occ=Once] :: GHC.Base.String
                                                            [LclId] =
                                                                CCCS :! [GHC.Show.$fShow(,)2
                                                                         x1_s9ksl];
                                                          } in 
                                                            case
                                                                GHC.Show.$w$cshowsPrec4
                                                                    11# w1_s9ksb sat_s9ksm
                                                            of
                                                            { (#,#) ww3_s9kso [Occ=Once]
                                                                    ww4_s9ksp [Occ=Once] ->
                                                                  : [ww3_s9kso ww4_s9ksp];
                                                            };
                                                } in 
                                                  GHC.CString.unpackAppendCString#
                                                      GHC.Event.Internal.$fShowTimeout5 sat_s9ksq;
                                      } in  : [GHC.Show.$fShow(,)4 sat_s9ksr];
                            } in  sat_s9kss;
                      };
              };
          GHC.Event.Internal.Forever -> GHC.Event.Internal.$fShowTimeout2;
        };

GHC.Event.Internal.$fShowTimeout_$cshow
  :: GHC.Event.Internal.Timeout -> GHC.Base.String
[GblId, Arity=1, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [x_s9kst]
        case x_s9kst of {
          GHC.Event.Internal.Timeout dt_s9ksv ->
              let {
                sat_s9ksG [Occ=Once] :: [GHC.Types.Char]
                [LclId] =
                    [dt_s9ksv] \u []
                        case word2Int# [dt_s9ksv] of i#_s9ksw [Dmd=<S,U>] {
                          __DEFAULT ->
                              case >=# [i#_s9ksw 0#] of {
                                __DEFAULT ->
                                    case GHC.Integer.Type.wordToInteger dt_s9ksv of sat_s9ksy {
                                      __DEFAULT ->
                                          case
                                              GHC.Show.$w$cshowsPrec4 11# sat_s9ksy GHC.Types.[]
                                          of
                                          { (#,#) ww3_s9ksA [Occ=Once] ww4_s9ksB [Occ=Once] ->
                                                : [ww3_s9ksA ww4_s9ksB];
                                          };
                                    };
                                1# ->
                                    case GHC.Integer.Type.smallInteger i#_s9ksw of sat_s9ksC {
                                      __DEFAULT ->
                                          case
                                              GHC.Show.$w$cshowsPrec4 11# sat_s9ksC GHC.Types.[]
                                          of
                                          { (#,#) ww3_s9ksE [Occ=Once] ww4_s9ksF [Occ=Once] ->
                                                : [ww3_s9ksE ww4_s9ksF];
                                          };
                                    };
                              };
                        };
              } in 
                GHC.CString.unpackAppendCString#
                    GHC.Event.Internal.$fShowTimeout5 sat_s9ksG;
          GHC.Event.Internal.Forever -> GHC.Event.Internal.$fShowTimeout3;
        };

GHC.Event.Internal.$fShowTimeout1
  :: GHC.Event.Internal.Timeout -> GHC.Show.ShowS
[GblId, Arity=1, Unf=OtherCon []] =
    [] \r [eta_B1]
        GHC.Event.Internal.$fShowTimeout_$cshowsPrec
            GHC.Event.Internal.$fMonoidEventLifetime1 eta_B1;

GHC.Event.Internal.$fShowTimeout_$cshowList
  :: [GHC.Event.Internal.Timeout] -> GHC.Show.ShowS
[GblId, Arity=2, Str=<S,1*U><L,U>, Unf=OtherCon []] =
    [] \r [ls_s9ksH s_s9ksI]
        GHC.Show.showList__
            GHC.Event.Internal.$fShowTimeout1 ls_s9ksH s_s9ksI;

GHC.Event.Internal.$fShowTimeout [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show GHC.Event.Internal.Timeout
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Event.Internal.$fShowTimeout_$cshowsPrec
                                    GHC.Event.Internal.$fShowTimeout_$cshow
                                    GHC.Event.Internal.$fShowTimeout_$cshowList];

GHC.Event.Internal.$fShowEventLifetime2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "EL "#;

GHC.Event.Internal.$w$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Event.Internal.EventLifetime
     -> GHC.Base.String
     -> GHC.Base.String
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,U><L,1*U(U)><L,U>,
 Unf=OtherCon []] =
    [] \r [ww_s9ksJ w_s9ksK w1_s9ksL]
        case >=# [ww_s9ksJ 11#] of {
          __DEFAULT ->
              let {
                sat_s9ksS [Occ=Once] :: [GHC.Types.Char]
                [LclId] =
                    [w_s9ksK w1_s9ksL] \u []
                        case w_s9ksK of {
                          GHC.Types.I# ww3_s9ksO [Occ=Once] ->
                              case GHC.Show.$wshowSignedInt 11# ww3_s9ksO w1_s9ksL of {
                                (#,#) ww5_s9ksQ [Occ=Once] ww6_s9ksR [Occ=Once] ->
                                    : [ww5_s9ksQ ww6_s9ksR];
                              };
                        };
              } in 
                GHC.CString.unpackAppendCString#
                    GHC.Event.Internal.$fShowEventLifetime2 sat_s9ksS;
          1# ->
              let {
                sat_s9kt0 [Occ=Once] :: [GHC.Types.Char]
                [LclId] =
                    [w_s9ksK w1_s9ksL] \u []
                        let {
                          sat_s9ksZ [Occ=Once] :: [GHC.Types.Char]
                          [LclId] =
                              [w_s9ksK w1_s9ksL] \u []
                                  case w_s9ksK of {
                                    GHC.Types.I# ww3_s9ksU [Occ=Once] ->
                                        let {
                                          sat_s9ksV [Occ=Once] :: GHC.Base.String
                                          [LclId] =
                                              CCCS :! [GHC.Show.$fShow(,)2 w1_s9ksL];
                                        } in 
                                          case GHC.Show.$wshowSignedInt 11# ww3_s9ksU sat_s9ksV of {
                                            (#,#) ww5_s9ksX [Occ=Once] ww6_s9ksY [Occ=Once] ->
                                                : [ww5_s9ksX ww6_s9ksY];
                                          };
                                  };
                        } in 
                          GHC.CString.unpackAppendCString#
                              GHC.Event.Internal.$fShowEventLifetime2 sat_s9ksZ;
              } in  : [GHC.Show.$fShow(,)4 sat_s9kt0];
        };

GHC.Event.Internal.$fShowEventLifetime_$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Int
     -> GHC.Event.Internal.EventLifetime -> GHC.Show.ShowS
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><L,1*U(U)><L,U>,
 Unf=OtherCon []] =
    [] \r [w_s9kt1 w1_s9kt2 w2_s9kt3]
        case w_s9kt1 of {
          GHC.Types.I# ww1_s9kt5 [Occ=Once] ->
              GHC.Event.Internal.$w$cshowsPrec ww1_s9kt5 w1_s9kt2 w2_s9kt3;
        };

GHC.Event.Internal.$fShowEventLifetime_$cshow
  :: GHC.Event.Internal.EventLifetime -> GHC.Base.String
[GblId, Arity=1, Caf=NoCafRefs, Str=<L,1*U(U)>, Unf=OtherCon []] =
    [] \r [x_s9kt6]
        let {
          sat_s9ktc [Occ=Once] :: [GHC.Types.Char]
          [LclId] =
              [x_s9kt6] \u []
                  case x_s9kt6 of {
                    GHC.Types.I# ww3_s9kt8 [Occ=Once] ->
                        case GHC.Show.$wshowSignedInt 11# ww3_s9kt8 GHC.Types.[] of {
                          (#,#) ww5_s9kta [Occ=Once] ww6_s9ktb [Occ=Once] ->
                              : [ww5_s9kta ww6_s9ktb];
                        };
                  };
        } in 
          GHC.CString.unpackAppendCString#
              GHC.Event.Internal.$fShowEventLifetime2 sat_s9ktc;

GHC.Event.Internal.$fShowEventLifetime1
  :: GHC.Event.Internal.EventLifetime -> GHC.Show.ShowS
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,1*U(U)><L,U>,
 Unf=OtherCon []] =
    [] \r [w_s9ktd w1_s9kte]
        GHC.Event.Internal.$w$cshowsPrec 0# w_s9ktd w1_s9kte;

GHC.Event.Internal.$fShowEventLifetime_$cshowList
  :: [GHC.Event.Internal.EventLifetime] -> GHC.Show.ShowS
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><L,U>,
 Unf=OtherCon []] =
    [] \r [ls_s9ktf s_s9ktg]
        GHC.Show.showList__
            GHC.Event.Internal.$fShowEventLifetime1 ls_s9ktf s_s9ktg;

GHC.Event.Internal.$fShowEventLifetime [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show GHC.Event.Internal.EventLifetime
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Event.Internal.$fShowEventLifetime_$cshowsPrec
                                    GHC.Event.Internal.$fShowEventLifetime_$cshow
                                    GHC.Event.Internal.$fShowEventLifetime_$cshowList];

GHC.Event.Internal.$fEqLifetime_$c==
  :: GHC.Event.Internal.Lifetime
     -> GHC.Event.Internal.Lifetime -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [ds_s9kth ds1_s9kti]
        case ds_s9kth of {
          GHC.Event.Internal.OneShot ->
              case ds1_s9kti of {
                GHC.Event.Internal.OneShot -> GHC.Types.True [];
                GHC.Event.Internal.MultiShot -> GHC.Types.False [];
              };
          GHC.Event.Internal.MultiShot ->
              case ds1_s9kti of {
                GHC.Event.Internal.OneShot -> GHC.Types.False [];
                GHC.Event.Internal.MultiShot -> GHC.Types.True [];
              };
        };

GHC.Event.Internal.$fEqLifetime_$c/= [InlPrag=INLINE (sat-args=2)]
  :: GHC.Event.Internal.Lifetime
     -> GHC.Event.Internal.Lifetime -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [eta_s9ktm eta1_s9ktn]
        case eta_s9ktm of {
          GHC.Event.Internal.OneShot ->
              case eta1_s9ktn of {
                GHC.Event.Internal.OneShot -> GHC.Types.False [];
                GHC.Event.Internal.MultiShot -> GHC.Types.True [];
              };
          GHC.Event.Internal.MultiShot ->
              case eta1_s9ktn of {
                GHC.Event.Internal.OneShot -> GHC.Types.True [];
                GHC.Event.Internal.MultiShot -> GHC.Types.False [];
              };
        };

GHC.Event.Internal.$fEqLifetime [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq GHC.Event.Internal.Lifetime
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Event.Internal.$fEqLifetime_$c==
                                     GHC.Event.Internal.$fEqLifetime_$c/=];

GHC.Event.Internal.$fShowLifetime5 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "OneShot"#;

GHC.Event.Internal.$fShowLifetime4 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# GHC.Event.Internal.$fShowLifetime5;

GHC.Event.Internal.$fShowLifetime3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "MultiShot"#;

GHC.Event.Internal.$fShowLifetime2 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# GHC.Event.Internal.$fShowLifetime3;

GHC.Event.Internal.$fShowLifetime_$cshowsPrec
  :: GHC.Types.Int -> GHC.Event.Internal.Lifetime -> GHC.Show.ShowS
[GblId, Arity=3, Str=<L,A><S,1*U><L,1*U>, Unf=OtherCon []] =
    [] \r [ds_s9ktr ds1_s9kts eta_s9ktt]
        case ds1_s9kts of {
          GHC.Event.Internal.OneShot ->
              GHC.Base.++ GHC.Event.Internal.$fShowLifetime4 eta_s9ktt;
          GHC.Event.Internal.MultiShot ->
              GHC.Base.++ GHC.Event.Internal.$fShowLifetime2 eta_s9ktt;
        };

GHC.Event.Internal.$fShowLifetime_$cshow
  :: GHC.Event.Internal.Lifetime -> GHC.Base.String
[GblId, Arity=1, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [x_s9ktv]
        case x_s9ktv of {
          GHC.Event.Internal.OneShot -> GHC.Event.Internal.$fShowLifetime4;
          GHC.Event.Internal.MultiShot -> GHC.Event.Internal.$fShowLifetime2;
        };

GHC.Event.Internal.$fShowLifetime1
  :: GHC.Event.Internal.Lifetime -> GHC.Show.ShowS
[GblId, Arity=2, Str=<S,1*U><L,1*U>, Unf=OtherCon []] =
    [] \r [ds_s9ktx eta_s9kty]
        case ds_s9ktx of {
          GHC.Event.Internal.OneShot ->
              GHC.Base.++ GHC.Event.Internal.$fShowLifetime4 eta_s9kty;
          GHC.Event.Internal.MultiShot ->
              GHC.Base.++ GHC.Event.Internal.$fShowLifetime2 eta_s9kty;
        };

GHC.Event.Internal.$fShowLifetime_$cshowList
  :: [GHC.Event.Internal.Lifetime] -> GHC.Show.ShowS
[GblId, Arity=2, Str=<S,1*U><L,U>, Unf=OtherCon []] =
    [] \r [ls_s9ktA s_s9ktB]
        GHC.Show.showList__
            GHC.Event.Internal.$fShowLifetime1 ls_s9ktA s_s9ktB;

GHC.Event.Internal.$fShowLifetime [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show GHC.Event.Internal.Lifetime
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Event.Internal.$fShowLifetime_$cshowsPrec
                                    GHC.Event.Internal.$fShowLifetime_$cshow
                                    GHC.Event.Internal.$fShowLifetime_$cshowList];

GHC.Event.Internal._beDelete :: ()
[GblId[[RecSel(naughty)]], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE ()! [];

GHC.Event.Internal._beModifyFdOnce :: ()
[GblId[[RecSel(naughty)]], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE ()! [];

GHC.Event.Internal._beModifyFd :: ()
[GblId[[RecSel(naughty)]], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE ()! [];

GHC.Event.Internal._bePoll :: ()
[GblId[[RecSel(naughty)]], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE ()! [];

GHC.Event.Internal._beState :: ()
[GblId[[RecSel(naughty)]], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE ()! [];

GHC.Event.Internal.evtNothing [InlPrag=INLINE (sat-args=0)]
  :: GHC.Event.Internal.Event
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] GHC.Event.Internal.$fMonoidEventLifetime1;

evtRead1_r9iWk :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [1#];

GHC.Event.Internal.evtRead [InlPrag=INLINE (sat-args=0)]
  :: GHC.Event.Internal.Event
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] evtRead1_r9iWk;

evtWrite1_r9iWl :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [2#];

GHC.Event.Internal.evtWrite [InlPrag=INLINE (sat-args=0)]
  :: GHC.Event.Internal.Event
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] evtWrite1_r9iWl;

evtClose1_r9iWm :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [4#];

GHC.Event.Internal.evtClose [InlPrag=INLINE (sat-args=0)]
  :: GHC.Event.Internal.Event
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] evtClose1_r9iWm;

GHC.Event.Internal.elSupremum [InlPrag=INLINE (sat-args=2)]
  :: GHC.Event.Internal.Lifetime
     -> GHC.Event.Internal.Lifetime -> GHC.Event.Internal.Lifetime
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><L,1*U>,
 Unf=OtherCon []] =
    [] \r [ds_s9ktC ds1_s9ktD]
        case ds_s9ktC of {
          GHC.Event.Internal.OneShot -> ds1_s9ktD;
          GHC.Event.Internal.MultiShot -> GHC.Event.Internal.MultiShot [];
        };

GHC.Event.Internal.$fSemigroupLifetime_go [Occ=LoopBreaker]
  :: GHC.Event.Internal.Lifetime
     -> [GHC.Event.Internal.Lifetime] -> GHC.Event.Internal.Lifetime
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [b_s9ktF ds1_s9ktG]
        case ds1_s9ktG of {
          [] -> b_s9ktF;
          : c_s9ktI [Occ=Once] cs_s9ktJ [Occ=Once] ->
              case b_s9ktF of {
                GHC.Event.Internal.OneShot ->
                    GHC.Event.Internal.$fSemigroupLifetime_go c_s9ktI cs_s9ktJ;
                GHC.Event.Internal.MultiShot -> GHC.Event.Internal.MultiShot [];
              };
        };

GHC.Event.Internal.$fSemigroupLifetime_$csconcat
  :: GHC.Base.NonEmpty GHC.Event.Internal.Lifetime
     -> GHC.Event.Internal.Lifetime
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SS),1*U(1*U,1*U)>,
 Unf=OtherCon []] =
    [] \r [ds_s9ktL]
        case ds_s9ktL of {
          GHC.Base.:| a1_s9ktN [Occ=Once] as_s9ktO [Occ=Once] ->
              GHC.Event.Internal.$fSemigroupLifetime_go a1_s9ktN as_s9ktO;
        };

GHC.Event.Internal.$fMonoidLifetime_go [Occ=LoopBreaker]
  :: [GHC.Event.Internal.Lifetime] -> GHC.Event.Internal.Lifetime
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [ds_s9ktP]
        case ds_s9ktP of {
          [] -> GHC.Event.Internal.OneShot [];
          : y_s9ktR [Occ=Once!] ys_s9ktS [Occ=Once] ->
              case y_s9ktR of {
                GHC.Event.Internal.OneShot ->
                    GHC.Event.Internal.$fMonoidLifetime_go ys_s9ktS;
                GHC.Event.Internal.MultiShot -> GHC.Event.Internal.MultiShot [];
              };
        };

GHC.Event.Internal.$fSemigroupLifetime [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Base.Semigroup GHC.Event.Internal.Lifetime
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Base.C:Semigroup! [GHC.Event.Internal.elSupremum
                                         GHC.Event.Internal.$fSemigroupLifetime_$csconcat
                                         GHC.Event.Internal.$fSemigroupLifetime_$cstimes];
GHC.Event.Internal.$fMonoidLifetime [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Base.Monoid GHC.Event.Internal.Lifetime
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Base.C:Monoid! [GHC.Event.Internal.$fSemigroupLifetime
                                      GHC.Event.Internal.OneShot
                                      GHC.Event.Internal.elSupremum
                                      GHC.Event.Internal.$fMonoidLifetime_go];
GHC.Event.Internal.$fSemigroupLifetime_$cstimes [Occ=LoopBreaker]
  :: forall b.
     GHC.Real.Integral b =>
     b -> GHC.Event.Internal.Lifetime -> GHC.Event.Internal.Lifetime
[GblId,
 Arity=3,
 Str=<L,U(U(U(A,A,A,A,A,A,C(U)),U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A),A),A,C(C1(U)),C(C1(U)),A,A,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [$dIntegral_s9ktU eta_B2 eta_B1]
        Data.Semigroup.Internal.stimesMonoid
            $dIntegral_s9ktU GHC.Event.Internal.$fMonoidLifetime eta_B2 eta_B1;

GHC.Event.Internal.backend [InlPrag=INLINE (sat-args=5)]
  :: forall a.
     (a
      -> GHC.Base.Maybe GHC.Event.Internal.Timeout
      -> (System.Posix.Types.Fd
          -> GHC.Event.Internal.Event -> GHC.Types.IO ())
      -> GHC.Types.IO GHC.Types.Int)
     -> (a
         -> System.Posix.Types.Fd
         -> GHC.Event.Internal.Event
         -> GHC.Event.Internal.Event
         -> GHC.Types.IO GHC.Types.Bool)
     -> (a
         -> System.Posix.Types.Fd
         -> GHC.Event.Internal.Event
         -> GHC.Types.IO GHC.Types.Bool)
     -> (a -> GHC.Types.IO ())
     -> a
     -> GHC.Event.Internal.Backend
[GblId,
 Arity=5,
 Caf=NoCafRefs,
 Str=<L,U><L,U><L,U><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [bPoll_s9ktV
           bModifyFd_s9ktW
           bModifyFdOnce_s9ktX
           bDelete_s9ktY
           state_s9ktZ]
        GHC.Event.Internal.$WBackend
            state_s9ktZ
            bPoll_s9ktV
            bModifyFd_s9ktW
            bModifyFdOnce_s9ktX
            bDelete_s9ktY;

GHC.Event.Internal.poll [InlPrag=INLINE (sat-args=1)]
  :: GHC.Event.Internal.Backend
     -> GHC.Base.Maybe GHC.Event.Internal.Timeout
     -> (System.Posix.Types.Fd
         -> GHC.Event.Internal.Event -> GHC.Types.IO ())
     -> GHC.Types.IO GHC.Types.Int
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [ds_s9ku0]
        case ds_s9ku0 of {
          GHC.Event.Internal.Backend bState_s9ku2 [Occ=Once]
                                     bPoll_s9ku3 [Occ=Once!]
                                     _ [Occ=Dead]
                                     _ [Occ=Dead]
                                     _ [Occ=Dead] ->
              bPoll_s9ku3 bState_s9ku2;
        };

GHC.Event.Internal.modifyFd [InlPrag=INLINE (sat-args=1)]
  :: GHC.Event.Internal.Backend
     -> System.Posix.Types.Fd
     -> GHC.Event.Internal.Event
     -> GHC.Event.Internal.Event
     -> GHC.Types.IO GHC.Types.Bool
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [ds_s9ku7]
        case ds_s9ku7 of {
          GHC.Event.Internal.Backend bState_s9ku9 [Occ=Once]
                                     _ [Occ=Dead]
                                     bModifyFd_s9kub [Occ=Once!]
                                     _ [Occ=Dead]
                                     _ [Occ=Dead] ->
              bModifyFd_s9kub bState_s9ku9;
        };

GHC.Event.Internal.modifyFdOnce [InlPrag=INLINE (sat-args=1)]
  :: GHC.Event.Internal.Backend
     -> System.Posix.Types.Fd
     -> GHC.Event.Internal.Event
     -> GHC.Types.IO GHC.Types.Bool
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [ds_s9kue]
        case ds_s9kue of {
          GHC.Event.Internal.Backend bState_s9kug [Occ=Once]
                                     _ [Occ=Dead]
                                     _ [Occ=Dead]
                                     bModifyFdOnce_s9kuj [Occ=Once!]
                                     _ [Occ=Dead] ->
              bModifyFdOnce_s9kuj bState_s9kug;
        };

GHC.Event.Internal.delete [InlPrag=INLINE (sat-args=1)]
  :: GHC.Event.Internal.Backend -> GHC.Types.IO ()
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [ds_s9kul]
        case ds_s9kul of {
          GHC.Event.Internal.Backend bState_s9kun [Occ=Once]
                                     _ [Occ=Dead]
                                     _ [Occ=Dead]
                                     _ [Occ=Dead]
                                     bDelete_s9kur [Occ=Once!] ->
              bDelete_s9kur bState_s9kun;
        };

GHC.Event.Internal.throwErrnoIfMinus1NoRetry2
  :: GHC.Integer.Type.Integer
[GblId, Unf=OtherCon []] =
    [] \u [] GHC.Integer.Type.mkInteger GHC.Types.True GHC.Types.[];

sat_s9kus :: GHC.Types.Int
[LclId] =
    CCS_DONT_CARE GHC.Types.I#! [1#];

sat_s9kut :: [GHC.Types.Int]
[LclId] =
    CCS_DONT_CARE :! [sat_s9kus GHC.Types.[]];

GHC.Event.Internal.throwErrnoIfMinus1NoRetry3
  :: GHC.Integer.Type.Integer
[GblId, Unf=OtherCon []] =
    [] \u [] GHC.Integer.Type.mkInteger GHC.Types.True sat_s9kut;

GHC.Event.Internal.throwErrnoIfMinus1NoRetry1
  :: forall a.
     (GHC.Classes.Eq a, GHC.Num.Num a) =>
     GHC.Base.String
     -> GHC.Types.IO a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId,
 Arity=5,
 Str=<L,1*U(1*C1(C1(U)),A)><L,U(A,A,A,1*C1(U),A,A,C(U))><L,U><C(S),1*C1(U(U,U))><S,U>,
 Unf=OtherCon []] =
    [] \r [$dEq_s9kuu $dNum_s9kuv loc_s9kuw f_s9kux s_s9kuy]
        case f_s9kux s_s9kuy of ds1_s9kuz {
          (#,#) ipv_s9kuA [Occ=Once] ipv1_s9kuB [Occ=Once] ->
              let {
                sat_s9kuD [Occ=Once] :: a_a9icv
                [LclId] =
                    [$dNum_s9kuv] \u []
                        let {
                          sat_s9kuC [Occ=Once] :: a_a9icv
                          [LclId] =
                              [$dNum_s9kuv] \u []
                                  GHC.Num.fromInteger
                                      $dNum_s9kuv GHC.Event.Internal.throwErrnoIfMinus1NoRetry3;
                        } in  GHC.Num.negate $dNum_s9kuv sat_s9kuC;
              } in 
                case GHC.Classes.== $dEq_s9kuu ipv1_s9kuB sat_s9kuD of {
                  GHC.Types.False -> ds1_s9kuz;
                  GHC.Types.True ->
                      case __pkg_ccall base-4.11.0.0 [ipv_s9kuA] of {
                        (#,#) ds_s9kuH [Occ=Once*] ds2_s9kuI [Occ=Once] ->
                            case narrow32Int# [ds2_s9kuI] of {
                              __DEFAULT -> Foreign.C.Error.throwErrno1 loc_s9kuw ds_s9kuH;
                              4# ->
                                  let {
                                    sat_s9kuK [Occ=Once] :: a_a9icv
                                    [LclId] =
                                        [$dNum_s9kuv] \u []
                                            GHC.Num.fromInteger
                                                $dNum_s9kuv
                                                GHC.Event.Internal.throwErrnoIfMinus1NoRetry2;
                                  } in  (#,#) [ds_s9kuH sat_s9kuK];
                            };
                      };
                };
        };

GHC.Event.Internal.throwErrnoIfMinus1NoRetry
  :: forall a.
     (GHC.Classes.Eq a, GHC.Num.Num a) =>
     GHC.Base.String -> GHC.Types.IO a -> GHC.Types.IO a
[GblId,
 Arity=5,
 Str=<L,1*U(1*C1(C1(U)),A)><L,U(A,A,A,1*C1(U),A,A,C(U))><L,U><C(S),1*C1(U(U,U))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B5 eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.Event.Internal.throwErrnoIfMinus1NoRetry1
            eta_B5 eta_B4 eta_B3 eta_B2 eta_B1;

GHC.Event.Internal.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

GHC.Event.Internal.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Internal.$trModule4];

GHC.Event.Internal.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.Event.Internal"#;

GHC.Event.Internal.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Internal.$trModule2];

GHC.Event.Internal.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [GHC.Event.Internal.$trModule3
                                     GHC.Event.Internal.$trModule1];

$krep_r9iWn :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Word.$tcWord64
                                              GHC.Types.[]];

$krep1_r9iWo :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcBool
                                              GHC.Types.[]];

$krep2_r9iWp :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcInt
                                              GHC.Types.[]];

$krep3_r9iWq :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Tuple.$tc()
                                              GHC.Types.[]];

$krep4_r9iWr :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [System.Posix.Types.$tcFd
                                              GHC.Types.[]];

$krep5_r9iWs :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep1_r9iWo GHC.Types.[]];

$krep6_r9iWt :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcIO
                                              $krep5_r9iWs];

$krep7_r9iWu :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep2_r9iWp GHC.Types.[]];

$krep8_r9iWv :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcIO
                                              $krep7_r9iWu];

$krep9_r9iWw :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep3_r9iWq GHC.Types.[]];

$krep10_r9iWx :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcIO
                                              $krep9_r9iWw];

$krep11_r9iWy :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepVar! [0#];

$krep12_r9iWz :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep11_r9iWy $krep10_r9iWx];

GHC.Event.Internal.$tcEvent2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Event"#;

GHC.Event.Internal.$tcEvent1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Internal.$tcEvent2];

GHC.Event.Internal.$tcEvent :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [6453162546660085965##
                                    4509047211634842293##
                                    GHC.Event.Internal.$trModule
                                    GHC.Event.Internal.$tcEvent1
                                    0#
                                    GHC.Types.krep$*];

$krep13_r9iWA :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.Internal.$tcEvent
                                              GHC.Types.[]];

$krep14_r9iWB :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep13_r9iWA $krep10_r9iWx];

$krep15_r9iWC :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep4_r9iWr $krep14_r9iWB];

$krep16_r9iWD :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep15_r9iWC $krep8_r9iWv];

$krep17_r9iWE :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep13_r9iWA $krep6_r9iWt];

$krep18_r9iWF :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep13_r9iWA $krep17_r9iWE];

$krep19_r9iWG :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep4_r9iWr $krep18_r9iWF];

$krep20_r9iWH :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep11_r9iWy $krep19_r9iWG];

$krep21_r9iWI :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep4_r9iWr $krep17_r9iWE];

$krep22_r9iWJ :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep11_r9iWy $krep21_r9iWI];

GHC.Event.Internal.$tc'Event1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_r9iWp $krep13_r9iWA];

GHC.Event.Internal.$tc'Event3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Event"#;

GHC.Event.Internal.$tc'Event2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Internal.$tc'Event3];

GHC.Event.Internal.$tc'Event :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [3843507504600839845##
                                    12172955723408562945##
                                    GHC.Event.Internal.$trModule
                                    GHC.Event.Internal.$tc'Event2
                                    0#
                                    GHC.Event.Internal.$tc'Event1];

GHC.Event.Internal.$tcLifetime2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Lifetime"#;

GHC.Event.Internal.$tcLifetime1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Internal.$tcLifetime2];

GHC.Event.Internal.$tcLifetime :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [16879554565198773712##
                                    8198822807138459060##
                                    GHC.Event.Internal.$trModule
                                    GHC.Event.Internal.$tcLifetime1
                                    0#
                                    GHC.Types.krep$*];

GHC.Event.Internal.$tc'MultiShot1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.Internal.$tcLifetime
                                              GHC.Types.[]];

GHC.Event.Internal.$tc'OneShot2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'OneShot"#;

GHC.Event.Internal.$tc'OneShot1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Internal.$tc'OneShot2];

GHC.Event.Internal.$tc'OneShot :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [4428239562170783460##
                                    11248279118174204528##
                                    GHC.Event.Internal.$trModule
                                    GHC.Event.Internal.$tc'OneShot1
                                    0#
                                    GHC.Event.Internal.$tc'MultiShot1];

GHC.Event.Internal.$tc'MultiShot3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'MultiShot"#;

GHC.Event.Internal.$tc'MultiShot2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Internal.$tc'MultiShot3];

GHC.Event.Internal.$tc'MultiShot :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [963080519453727549##
                                    5499435804578671723##
                                    GHC.Event.Internal.$trModule
                                    GHC.Event.Internal.$tc'MultiShot2
                                    0#
                                    GHC.Event.Internal.$tc'MultiShot1];

GHC.Event.Internal.$tcEventLifetime2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "EventLifetime"#;

GHC.Event.Internal.$tcEventLifetime1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Internal.$tcEventLifetime2];

GHC.Event.Internal.$tcEventLifetime :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [11472987326402547198##
                                    14676184191233842558##
                                    GHC.Event.Internal.$trModule
                                    GHC.Event.Internal.$tcEventLifetime1
                                    0#
                                    GHC.Types.krep$*];

$krep23_r9iWK :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.Internal.$tcEventLifetime
                                              GHC.Types.[]];

GHC.Event.Internal.$tc'EL1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_r9iWp $krep23_r9iWK];

GHC.Event.Internal.$tc'EL3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'EL"#;

GHC.Event.Internal.$tc'EL2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Internal.$tc'EL3];

GHC.Event.Internal.$tc'EL :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [13328424765260461560##
                                    17004947518967325218##
                                    GHC.Event.Internal.$trModule
                                    GHC.Event.Internal.$tc'EL2
                                    0#
                                    GHC.Event.Internal.$tc'EL1];

GHC.Event.Internal.$tcTimeout2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Timeout"#;

GHC.Event.Internal.$tcTimeout1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Internal.$tcTimeout2];

GHC.Event.Internal.$tcTimeout :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [3071157695468345159##
                                    2371669836431867052##
                                    GHC.Event.Internal.$trModule
                                    GHC.Event.Internal.$tcTimeout1
                                    0#
                                    GHC.Types.krep$*];

GHC.Event.Internal.$tc'Forever1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.Internal.$tcTimeout
                                              GHC.Types.[]];

GHC.Event.Internal.$tc'Forever3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Forever"#;

GHC.Event.Internal.$tc'Forever2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Internal.$tc'Forever3];

GHC.Event.Internal.$tc'Forever :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [15890326801882711521##
                                    6940845280791152844##
                                    GHC.Event.Internal.$trModule
                                    GHC.Event.Internal.$tc'Forever2
                                    0#
                                    GHC.Event.Internal.$tc'Forever1];

GHC.Event.Internal.$tc'Timeout1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_r9iWn
                                         GHC.Event.Internal.$tc'Forever1];

GHC.Event.Internal.$tc'Timeout3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Timeout"#;

GHC.Event.Internal.$tc'Timeout2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Internal.$tc'Timeout3];

GHC.Event.Internal.$tc'Timeout :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [11507111740173521793##
                                    14582130137848061687##
                                    GHC.Event.Internal.$trModule
                                    GHC.Event.Internal.$tc'Timeout2
                                    0#
                                    GHC.Event.Internal.$tc'Timeout1];

$krep24_r9iWL :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [GHC.Event.Internal.$tc'Forever1 GHC.Types.[]];

$krep25_r9iWM :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Base.$tcMaybe
                                              $krep24_r9iWL];

$krep26_r9iWN :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep25_r9iWM $krep16_r9iWD];

$krep27_r9iWO :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep11_r9iWy $krep26_r9iWN];

GHC.Event.Internal.$tcBackend2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Backend"#;

GHC.Event.Internal.$tcBackend1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Internal.$tcBackend2];

GHC.Event.Internal.$tcBackend :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [5241936179624485302##
                                    3407160178235461245##
                                    GHC.Event.Internal.$trModule
                                    GHC.Event.Internal.$tcBackend1
                                    0#
                                    GHC.Types.krep$*];

$krep28_r9iWP :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.Internal.$tcBackend
                                              GHC.Types.[]];

$krep29_r9iWQ :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep12_r9iWz $krep28_r9iWP];

$krep30_r9iWR :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep22_r9iWJ $krep29_r9iWQ];

$krep31_r9iWS :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep20_r9iWH $krep30_r9iWR];

$krep32_r9iWT :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep27_r9iWO $krep31_r9iWS];

GHC.Event.Internal.$tc'Backend1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep11_r9iWy $krep32_r9iWT];

GHC.Event.Internal.$tc'Backend3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Backend"#;

GHC.Event.Internal.$tc'Backend2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Internal.$tc'Backend3];

GHC.Event.Internal.$tc'Backend :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [2097061961478251755##
                                    1358985482759746540##
                                    GHC.Event.Internal.$trModule
                                    GHC.Event.Internal.$tc'Backend2
                                    1#
                                    GHC.Event.Internal.$tc'Backend1];

GHC.Event.Internal.$fEqEvent [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq GHC.Event.Internal.Event
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Classes.eqInt
                                     GHC.Classes.neInt];

GHC.Event.Internal.$fEqEventLifetime [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq GHC.Event.Internal.EventLifetime
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Classes.eqInt
                                     GHC.Classes.neInt];

elEvent1_r9iWU :: GHC.Event.Internal.EventLifetime -> GHC.Types.Int
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>m,
 Unf=OtherCon []] =
    sat-only [] \r [ds_s9kuL]
        case ds_s9kuL of {
          GHC.Types.I# x#_s9kuN [Occ=Once] ->
              case andI# [x#_s9kuN 7#] of sat_s9kuO {
                __DEFAULT -> GHC.Types.I# [sat_s9kuO];
              };
        };

GHC.Event.Internal.elEvent [InlPrag=INLINE (sat-args=1)]
  :: GHC.Event.Internal.EventLifetime -> GHC.Event.Internal.Event
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>m,
 Unf=OtherCon []] =
    [] \r [eta_B1] elEvent1_r9iWU eta_B1;

GHC.Event.Internal.$wgo2 [InlPrag=NOUSERINLINE[0], Occ=LoopBreaker]
  :: GHC.Prim.Int#
     -> [GHC.Event.Internal.EventLifetime] -> GHC.Prim.Int#
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [ww_s9kuP w_s9kuQ]
        case w_s9kuQ of {
          [] -> ww_s9kuP;
          : c_s9kuS [Occ=Once] cs_s9kuT [Occ=Once] ->
              case c_s9kuS of {
                GHC.Types.I# ww2_s9kuV [Occ=Once] ->
                    case GHC.Event.Internal.$wgo2 ww2_s9kuV cs_s9kuT of ww3_s9kuW {
                      __DEFAULT -> orI# [ww_s9kuP ww3_s9kuW];
                    };
              };
        };

GHC.Event.Internal.$fSemigroupEventLifetime_go [InlPrag=NOUSERINLINE[0]]
  :: GHC.Event.Internal.EventLifetime
     -> [GHC.Event.Internal.EventLifetime]
     -> GHC.Event.Internal.EventLifetime
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S,1*U>m,
 Unf=OtherCon []] =
    [] \r [w_s9kuX w1_s9kuY]
        case w_s9kuX of {
          GHC.Types.I# ww1_s9kv0 [Occ=Once] ->
              case GHC.Event.Internal.$wgo2 ww1_s9kv0 w1_s9kuY of ww2_s9kv1 {
                __DEFAULT -> GHC.Types.I# [ww2_s9kv1];
              };
        };

GHC.Event.Internal.$fSemigroupEventLifetime_$csconcat
  :: GHC.Base.NonEmpty GHC.Event.Internal.EventLifetime
     -> GHC.Event.Internal.EventLifetime
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S(S)S),1*U(1*U(U),1*U)>m,
 Unf=OtherCon []] =
    [] \r [ds_s9kv2]
        case ds_s9kv2 of {
          GHC.Base.:| a1_s9kv4 [Occ=Once] as_s9kv5 [Occ=Once] ->
              GHC.Event.Internal.$fSemigroupEventLifetime_go a1_s9kv4 as_s9kv5;
        };

GHC.Event.Internal.$fSemigroupEventLifetime [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Base.Semigroup GHC.Event.Internal.EventLifetime
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Base.C:Semigroup! [Data.Bits.$fBitsInt_$c.|.
                                         GHC.Event.Internal.$fSemigroupEventLifetime_$csconcat
                                         GHC.Event.Internal.$fSemigroupEventLifetime_$cstimes];
GHC.Event.Internal.$fSemigroupEventLifetime_$cstimes [Occ=LoopBreaker]
  :: forall b.
     GHC.Real.Integral b =>
     b
     -> GHC.Event.Internal.EventLifetime
     -> GHC.Event.Internal.EventLifetime
[GblId, Arity=1, Str=<L,U>, Unf=OtherCon []] =
    [] \r [$dIntegral_s9kv6]
        Data.Semigroup.Internal.stimesDefault
            $dIntegral_s9kv6 GHC.Event.Internal.$fSemigroupEventLifetime;

GHC.Event.Internal.$wgo1 [InlPrag=NOUSERINLINE[0], Occ=LoopBreaker]
  :: [GHC.Event.Internal.EventLifetime] -> GHC.Prim.Int#
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [w_s9kv7]
        case w_s9kv7 of {
          [] -> 0#;
          : y_s9kv9 [Occ=Once] ys_s9kva [Occ=Once] ->
              case y_s9kv9 of {
                GHC.Types.I# x#_s9kvc [Occ=Once] ->
                    case GHC.Event.Internal.$wgo1 ys_s9kva of ww_s9kvd {
                      __DEFAULT -> orI# [x#_s9kvc ww_s9kvd];
                    };
              };
        };

GHC.Event.Internal.$fMonoidEventLifetime_go [InlPrag=NOUSERINLINE[0]]
  :: [GHC.Event.Internal.EventLifetime]
     -> GHC.Event.Internal.EventLifetime
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>m, Unf=OtherCon []] =
    [] \r [w_s9kve]
        case GHC.Event.Internal.$wgo1 w_s9kve of ww_s9kvf {
          __DEFAULT -> GHC.Types.I# [ww_s9kvf];
        };

GHC.Event.Internal.$fMonoidEventLifetime [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Base.Monoid GHC.Event.Internal.EventLifetime
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Base.C:Monoid! [GHC.Event.Internal.$fSemigroupEventLifetime
                                      GHC.Event.Internal.$fMonoidEventLifetime1
                                      Data.Bits.$fBitsInt_$c.|.
                                      GHC.Event.Internal.$fMonoidEventLifetime_go];

GHC.Event.Internal.elLifetime [InlPrag=INLINE (sat-args=1)]
  :: GHC.Event.Internal.EventLifetime -> GHC.Event.Internal.Lifetime
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [ds_s9kvg]
        case ds_s9kvg of {
          GHC.Types.I# x#_s9kvi [Occ=Once] ->
              case andI# [x#_s9kvi 8#] of {
                __DEFAULT -> GHC.Event.Internal.MultiShot [];
                0# -> GHC.Event.Internal.OneShot [];
              };
        };

eventLifetime1_r9iWV
  :: GHC.Event.Internal.Event
     -> GHC.Event.Internal.Lifetime -> GHC.Types.Int
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U(U)><S,1*U>m,
 Unf=OtherCon []] =
    sat-only [] \r [ds_s9kvk l_s9kvl]
        case ds_s9kvk of wild_s9kvm {
          GHC.Types.I# x#_s9kvn [Occ=Once] ->
              case l_s9kvl of {
                GHC.Event.Internal.OneShot -> wild_s9kvm;
                GHC.Event.Internal.MultiShot ->
                    case orI# [x#_s9kvn 8#] of sat_s9kvp {
                      __DEFAULT -> GHC.Types.I# [sat_s9kvp];
                    };
              };
        };

GHC.Event.Internal.eventLifetime [InlPrag=INLINE (sat-args=2)]
  :: GHC.Event.Internal.Event
     -> GHC.Event.Internal.Lifetime -> GHC.Event.Internal.EventLifetime
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U(U)><S,1*U>m,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] eventLifetime1_r9iWV eta_B2 eta_B1;

GHC.Event.Internal.evtCombine [InlPrag=INLINE (sat-args=2)]
  :: GHC.Event.Internal.Event
     -> GHC.Event.Internal.Event -> GHC.Event.Internal.Event
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)>m,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] Data.Bits.$fBitsInt_$c.|. eta_B2 eta_B1;

GHC.Event.Internal.evtConcat [InlPrag=INLINE (sat-args=0)]
  :: [GHC.Event.Internal.Event] -> GHC.Event.Internal.Event
[GblId, Arity=1, Unf=OtherCon []] =
    [] \r [eta_B1]
        GHC.List.foldl'
            GHC.Event.Internal.evtCombine GHC.Event.Internal.evtNothing eta_B1;

GHC.Event.Internal.$wgo [InlPrag=NOUSERINLINE[0], Occ=LoopBreaker]
  :: GHC.Prim.Int# -> [GHC.Event.Internal.Event] -> GHC.Prim.Int#
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [ww_s9kvq w_s9kvr]
        case w_s9kvr of {
          [] -> ww_s9kvq;
          : c_s9kvt [Occ=Once] cs_s9kvu [Occ=Once] ->
              case c_s9kvt of {
                GHC.Types.I# ww2_s9kvw [Occ=Once] ->
                    case GHC.Event.Internal.$wgo ww2_s9kvw cs_s9kvu of ww3_s9kvx {
                      __DEFAULT -> orI# [ww_s9kvq ww3_s9kvx];
                    };
              };
        };

GHC.Event.Internal.$fSemigroupEvent_go [InlPrag=NOUSERINLINE[0]]
  :: GHC.Event.Internal.Event
     -> [GHC.Event.Internal.Event] -> GHC.Event.Internal.Event
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S,1*U>m,
 Unf=OtherCon []] =
    [] \r [w_s9kvy w1_s9kvz]
        case w_s9kvy of {
          GHC.Types.I# ww1_s9kvB [Occ=Once] ->
              case GHC.Event.Internal.$wgo ww1_s9kvB w1_s9kvz of ww2_s9kvC {
                __DEFAULT -> GHC.Types.I# [ww2_s9kvC];
              };
        };

GHC.Event.Internal.$fSemigroupEvent_$csconcat
  :: GHC.Base.NonEmpty GHC.Event.Internal.Event
     -> GHC.Event.Internal.Event
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S(S)S),1*U(1*U(U),1*U)>m,
 Unf=OtherCon []] =
    [] \r [ds_s9kvD]
        case ds_s9kvD of {
          GHC.Base.:| a1_s9kvF [Occ=Once] as_s9kvG [Occ=Once] ->
              GHC.Event.Internal.$fSemigroupEvent_go a1_s9kvF as_s9kvG;
        };

GHC.Event.Internal.$fSemigroupEvent [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Base.Semigroup GHC.Event.Internal.Event
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Base.C:Semigroup! [GHC.Event.Internal.evtCombine
                                         GHC.Event.Internal.$fSemigroupEvent_$csconcat
                                         GHC.Event.Internal.$fSemigroupEvent_$cstimes];
GHC.Event.Internal.$fMonoidEvent [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Base.Monoid GHC.Event.Internal.Event
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Base.C:Monoid! [GHC.Event.Internal.$fSemigroupEvent
                                      GHC.Event.Internal.evtNothing
                                      GHC.Event.Internal.evtCombine
                                      GHC.Event.Internal.evtConcat];
GHC.Event.Internal.$fSemigroupEvent_$cstimes [Occ=LoopBreaker]
  :: forall b.
     GHC.Real.Integral b =>
     b -> GHC.Event.Internal.Event -> GHC.Event.Internal.Event
[GblId,
 Arity=3,
 Str=<L,U(U(U(A,A,A,A,A,A,C(U)),U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A),A),A,C(C1(U)),C(C1(U)),A,A,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [$dIntegral_s9kvH eta_B2 eta_B1]
        Data.Semigroup.Internal.stimesMonoid
            $dIntegral_s9kvH GHC.Event.Internal.$fMonoidEvent eta_B2 eta_B1;

GHC.Event.Internal.eventIs
  :: GHC.Event.Internal.Event
     -> GHC.Event.Internal.Event -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [ds_s9kvI ds1_s9kvJ]
        case ds_s9kvI of {
          GHC.Types.I# x#_s9kvL [Occ=Once] ->
              case ds1_s9kvJ of {
                GHC.Types.I# y#_s9kvN [Occ=Once] ->
                    case andI# [x#_s9kvL y#_s9kvN] of {
                      __DEFAULT -> GHC.Types.True [];
                      0# -> GHC.Types.False [];
                    };
              };
        };

GHC.Event.Internal.$fShowEvent13 :: GHC.Types.Char
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.C#! ['['#];

GHC.Event.Internal.$fShowEvent5 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "]"#;

GHC.Event.Internal.$fShowEvent10 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    ","#;

GHC.Event.Internal.$fShowEvent9 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# GHC.Event.Internal.$fShowEvent10;

GHC.Event.Internal.$fShowEvent12 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "evtRead"#;

GHC.Event.Internal.$fShowEvent11 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# GHC.Event.Internal.$fShowEvent12;

GHC.Event.Internal.$fShowEvent8 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "evtWrite"#;

GHC.Event.Internal.$fShowEvent7 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# GHC.Event.Internal.$fShowEvent8;

GHC.Event.Internal.$fShowEvent3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "evtClose"#;

GHC.Event.Internal.$fShowEvent2 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# GHC.Event.Internal.$fShowEvent3;

GHC.Event.Internal.$fShowEvent4 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# GHC.Event.Internal.$fShowEvent5;

GHC.Event.Internal.$fShowEvent6 :: [[GHC.Types.Char]]
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [GHC.Event.Internal.$fShowEvent2 GHC.Types.[]];

GHC.Event.Internal.$w$cshow [InlPrag=NOUSERINLINE[0]]
  :: GHC.Event.Internal.Event
     -> (# GHC.Types.Char, [GHC.Types.Char] #)
[GblId, Arity=1, Str=<L,1*U(U)>, Unf=OtherCon []] =
    [] \r [w_s9kvP]
        let {
          sat_s9kwa [Occ=Once] :: [GHC.Types.Char]
          [LclId] =
              [w_s9kvP] \u []
                  case w_s9kvP of {
                    GHC.Types.I# x#_s9kvR ->
                        case andI# [x#_s9kvR 1#] of {
                          __DEFAULT ->
                              let {
                                sat_s9kvY [Occ=Once] :: [[GHC.Types.Char]]
                                [LclId] =
                                    [x#_s9kvR] \u []
                                        case andI# [x#_s9kvR 2#] of {
                                          __DEFAULT ->
                                              let {
                                                sat_s9kvV [Occ=Once] :: [[GHC.Types.Char]]
                                                [LclId] =
                                                    [x#_s9kvR] \u []
                                                        case andI# [x#_s9kvR 4#] of {
                                                          __DEFAULT ->
                                                              GHC.Event.Internal.$fShowEvent6;
                                                          0# -> [] [];
                                                        }; } in
                                              let {
                                                sat_s9kvW [Occ=Once] :: [[GHC.Types.Char]]
                                                [LclId] =
                                                    CCCS :! [GHC.Event.Internal.$fShowEvent7
                                                             sat_s9kvV];
                                              } in 
                                                Data.OldList.prependToAll
                                                    GHC.Event.Internal.$fShowEvent9 sat_s9kvW;
                                          0# ->
                                              case andI# [x#_s9kvR 4#] of {
                                                __DEFAULT ->
                                                    Data.OldList.prependToAll
                                                        GHC.Event.Internal.$fShowEvent9
                                                        GHC.Event.Internal.$fShowEvent6;
                                                0# ->
                                                    Data.OldList.prependToAll
                                                        GHC.Event.Internal.$fShowEvent9
                                                        GHC.Types.[];
                                              };
                                        }; } in
                              let {
                                sat_s9kvZ [Occ=Once] :: [[GHC.Types.Char]]
                                [LclId] =
                                    CCCS :! [GHC.Event.Internal.$fShowEvent11 sat_s9kvY];
                              } in 
                                case Data.OldList.intercalate1 sat_s9kvZ of sat_s9kw0 {
                                  __DEFAULT ->
                                      GHC.Base.++ sat_s9kw0 GHC.Event.Internal.$fShowEvent4;
                                };
                          0# ->
                              case andI# [x#_s9kvR 2#] of {
                                __DEFAULT ->
                                    let {
                                      sat_s9kw3 [Occ=Once] :: [[GHC.Types.Char]]
                                      [LclId] =
                                          [x#_s9kvR] \u []
                                              case andI# [x#_s9kvR 4#] of {
                                                __DEFAULT ->
                                                    Data.OldList.prependToAll
                                                        GHC.Event.Internal.$fShowEvent9
                                                        GHC.Event.Internal.$fShowEvent6;
                                                0# ->
                                                    Data.OldList.prependToAll
                                                        GHC.Event.Internal.$fShowEvent9
                                                        GHC.Types.[];
                                              }; } in
                                    let {
                                      sat_s9kw4 [Occ=Once] :: [[GHC.Types.Char]]
                                      [LclId] =
                                          CCCS :! [GHC.Event.Internal.$fShowEvent7 sat_s9kw3];
                                    } in 
                                      case Data.OldList.intercalate1 sat_s9kw4 of sat_s9kw5 {
                                        __DEFAULT ->
                                            GHC.Base.++ sat_s9kw5 GHC.Event.Internal.$fShowEvent4;
                                      };
                                0# ->
                                    case andI# [x#_s9kvR 4#] of {
                                      __DEFAULT ->
                                          let {
                                            sat_s9kw7 [Occ=Once] :: [[GHC.Types.Char]]
                                            [LclId] =
                                                [] \u []
                                                    Data.OldList.prependToAll
                                                        GHC.Event.Internal.$fShowEvent9
                                                        GHC.Types.[]; } in
                                          let {
                                            sat_s9kw8 [Occ=Once] :: [[GHC.Types.Char]]
                                            [LclId] =
                                                CCCS :! [GHC.Event.Internal.$fShowEvent2 sat_s9kw7];
                                          } in 
                                            case Data.OldList.intercalate1 sat_s9kw8 of sat_s9kw9 {
                                              __DEFAULT ->
                                                  GHC.Base.++
                                                      sat_s9kw9 GHC.Event.Internal.$fShowEvent4;
                                            };
                                      0# -> GHC.Event.Internal.$fShowEvent4;
                                    };
                              };
                        };
                  };
        } in  (#,#) [GHC.Event.Internal.$fShowEvent13 sat_s9kwa];

GHC.Event.Internal.$fShowEvent_$cshow [InlPrag=NOUSERINLINE[0]]
  :: GHC.Event.Internal.Event -> GHC.Base.String
[GblId, Arity=1, Str=<L,1*U(U)>m2, Unf=OtherCon []] =
    [] \r [w_s9kwb]
        case GHC.Event.Internal.$w$cshow w_s9kwb of {
          (#,#) ww1_s9kwd [Occ=Once] ww2_s9kwe [Occ=Once] ->
              : [ww1_s9kwd ww2_s9kwe];
        };

GHC.Event.Internal.$fShowEvent_$cshowsPrec
  :: GHC.Types.Int -> GHC.Event.Internal.Event -> GHC.Show.ShowS
[GblId, Arity=3, Str=<L,A><L,1*U(U)><L,1*U>, Unf=OtherCon []] =
    [] \r [ds_s9kwf x_s9kwg s_s9kwh]
        case GHC.Event.Internal.$w$cshow x_s9kwg of {
          (#,#) ww1_s9kwj [Occ=Once] ww2_s9kwk [Occ=Once] ->
              let {
                sat_s9kwl [Occ=Once] :: [GHC.Types.Char]
                [LclId] =
                    CCCS :! [ww1_s9kwj ww2_s9kwk];
              } in  GHC.Base.++ sat_s9kwl s_s9kwh;
        };

GHC.Event.Internal.$fShowEvent1
  :: GHC.Event.Internal.Event -> GHC.Base.String -> [GHC.Types.Char]
[GblId, Arity=2, Str=<L,1*U(U)><L,1*U>, Unf=OtherCon []] =
    [] \r [x_s9kwm s_s9kwn]
        case GHC.Event.Internal.$w$cshow x_s9kwm of {
          (#,#) ww1_s9kwp [Occ=Once] ww2_s9kwq [Occ=Once] ->
              let {
                sat_s9kwr [Occ=Once] :: [GHC.Types.Char]
                [LclId] =
                    CCCS :! [ww1_s9kwp ww2_s9kwq];
              } in  GHC.Base.++ sat_s9kwr s_s9kwn;
        };

GHC.Event.Internal.$fShowEvent_$cshowList
  :: [GHC.Event.Internal.Event] -> GHC.Show.ShowS
[GblId, Arity=2, Str=<S,1*U><L,U>, Unf=OtherCon []] =
    [] \r [ls_s9kws s_s9kwt]
        GHC.Show.showList__
            GHC.Event.Internal.$fShowEvent1 ls_s9kws s_s9kwt;

GHC.Event.Internal.$fShowEvent [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show GHC.Event.Internal.Event
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Event.Internal.$fShowEvent_$cshowsPrec
                                    GHC.Event.Internal.$fShowEvent_$cshow
                                    GHC.Event.Internal.$fShowEvent_$cshowList];

GHC.Event.Internal.Backend
  :: forall a.
     a
     -> (a
         -> GHC.Base.Maybe GHC.Event.Internal.Timeout
         -> (System.Posix.Types.Fd
             -> GHC.Event.Internal.Event -> GHC.Types.IO ())
         -> GHC.Types.IO GHC.Types.Int)
     -> (a
         -> System.Posix.Types.Fd
         -> GHC.Event.Internal.Event
         -> GHC.Event.Internal.Event
         -> GHC.Types.IO GHC.Types.Bool)
     -> (a
         -> System.Posix.Types.Fd
         -> GHC.Event.Internal.Event
         -> GHC.Types.IO GHC.Types.Bool)
     -> (a -> GHC.Types.IO ())
     -> GHC.Event.Internal.Backend
[GblId[DataCon],
 Arity=5,
 Caf=NoCafRefs,
 Str=<L,U><L,U><L,U><L,U><L,U>,
 Unf=OtherCon []] =
    [] \r [eta_B5 eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.Event.Internal.Backend [eta_B5 eta_B4 eta_B3 eta_B2 eta_B1];

GHC.Event.Internal.Timeout
  :: GHC.Prim.Word# -> GHC.Event.Internal.Timeout
[GblId[DataCon],
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U>m1,
 Unf=OtherCon []] =
    [] \r [eta_B1] GHC.Event.Internal.Timeout [eta_B1];

GHC.Event.Internal.Forever :: GHC.Event.Internal.Timeout
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Event.Internal.Forever! [];

GHC.Event.Internal.OneShot :: GHC.Event.Internal.Lifetime
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Event.Internal.OneShot! [];

GHC.Event.Internal.MultiShot :: GHC.Event.Internal.Lifetime
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Event.Internal.MultiShot! [];


==================== STG syntax: ====================
2018-03-16 16:04:28.271214525 UTC

GHC.Event.Internal.$WBackend [InlPrag=INLINE[2]]
  :: forall a.
     a
     -> (a
         -> GHC.Base.Maybe GHC.Event.Internal.Timeout
         -> (System.Posix.Types.Fd
             -> GHC.Event.Internal.Event -> GHC.Types.IO ())
         -> GHC.Types.IO GHC.Types.Int)
     -> (a
         -> System.Posix.Types.Fd
         -> GHC.Event.Internal.Event
         -> GHC.Event.Internal.Event
         -> GHC.Types.IO GHC.Types.Bool)
     -> (a
         -> System.Posix.Types.Fd
         -> GHC.Event.Internal.Event
         -> GHC.Types.IO GHC.Types.Bool)
     -> (a -> GHC.Types.IO ())
     -> GHC.Event.Internal.Backend
[GblId[DataConWrapper],
 Arity=5,
 Caf=NoCafRefs,
 Str=<S,U><L,U><L,U><L,U><L,U>,
 Unf=OtherCon []] =
    [] \r [dt_s9krW dt_s9krX dt_s9krY dt_s9krZ dt_s9ks0]
        case dt_s9krW of dt_s9ks1 {
          __DEFAULT ->
              GHC.Event.Internal.Backend [dt_s9ks1
                                          dt_s9krX
                                          dt_s9krY
                                          dt_s9krZ
                                          dt_s9ks0];
        };

GHC.Event.Internal.$WTimeout [InlPrag=INLINE[2]]
  :: GHC.Word.Word64 -> GHC.Event.Internal.Timeout
[GblId[DataConWrapper],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S,U>m1,
 Unf=OtherCon []] =
    [] \r [dt_s9ks2]
        case dt_s9ks2 of {
          GHC.Word.W64# dt_s9ks4 [Occ=Once] ->
              GHC.Event.Internal.Timeout [dt_s9ks4];
        };

GHC.Event.Internal.$fMonoidEventLifetime1 :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [0#];

GHC.Event.Internal.$fShowTimeout4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Forever"#;

GHC.Event.Internal.$fShowTimeout3 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# GHC.Event.Internal.$fShowTimeout4;

GHC.Event.Internal.$fShowTimeout2
  :: [GHC.Types.Char] -> [GHC.Types.Char]
[GblId, Arity=1, Unf=OtherCon []] =
    [] \r [eta_B1]
        GHC.Base.++ GHC.Event.Internal.$fShowTimeout3 eta_B1;

GHC.Event.Internal.$fShowTimeout5 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Timeout "#;

GHC.Event.Internal.$fShowTimeout_$cshowsPrec
  :: GHC.Types.Int -> GHC.Event.Internal.Timeout -> GHC.Show.ShowS
[GblId, Arity=2, Str=<L,1*U(U)><S,1*U>, Unf=OtherCon []] =
    [] \r [a_s9ks5 ds_s9ks6]
        case ds_s9ks6 of {
          GHC.Event.Internal.Timeout dt_s9ks8 ->
              case a_s9ks5 of {
                GHC.Types.I# x_s9ksa [Occ=Once] ->
                    let {
                      w1_s9ksb [Occ=OnceL*] :: GHC.Integer.Type.Integer
                      [LclId] =
                          [dt_s9ks8] \u []
                              case word2Int# [dt_s9ks8] of i#_s9ksc [Dmd=<S,U>] {
                                __DEFAULT ->
                                    case >=# [i#_s9ksc 0#] of {
                                      __DEFAULT -> GHC.Integer.Type.wordToInteger dt_s9ks8;
                                      1# -> GHC.Integer.Type.smallInteger i#_s9ksc;
                                    };
                              };
                    } in 
                      case >=# [x_s9ksa 11#] of {
                        __DEFAULT ->
                            let {
                              sat_s9ksk [Occ=OnceT[0]] :: GHC.Base.String -> [GHC.Types.Char]
                              [LclId] =
                                  [w1_s9ksb] \r [x1_s9ksf]
                                      let {
                                        sat_s9ksj [Occ=Once] :: [GHC.Types.Char]
                                        [LclId] =
                                            [w1_s9ksb x1_s9ksf] \u []
                                                case
                                                    GHC.Show.$w$cshowsPrec4 11# w1_s9ksb x1_s9ksf
                                                of
                                                { (#,#) ww3_s9ksh [Occ=Once] ww4_s9ksi [Occ=Once] ->
                                                      : [ww3_s9ksh ww4_s9ksi];
                                                };
                                      } in 
                                        GHC.CString.unpackAppendCString#
                                            GHC.Event.Internal.$fShowTimeout5 sat_s9ksj;
                            } in  sat_s9ksk;
                        1# ->
                            let {
                              sat_s9kss [Occ=OnceT[0]] :: GHC.Base.String -> [GHC.Types.Char]
                              [LclId] =
                                  [w1_s9ksb] \r [x1_s9ksl]
                                      let {
                                        sat_s9ksr [Occ=Once] :: [GHC.Types.Char]
                                        [LclId] =
                                            [w1_s9ksb x1_s9ksl] \u []
                                                let {
                                                  sat_s9ksq [Occ=Once] :: [GHC.Types.Char]
                                                  [LclId] =
                                                      [w1_s9ksb x1_s9ksl] \u []
                                                          let {
                                                            sat_s9ksm [Occ=Once] :: GHC.Base.String
                                                            [LclId] =
                                                                CCCS :! [GHC.Show.$fShow(,)2
                                                                         x1_s9ksl];
                                                          } in 
                                                            case
                                                                GHC.Show.$w$cshowsPrec4
                                                                    11# w1_s9ksb sat_s9ksm
                                                            of
                                                            { (#,#) ww3_s9kso [Occ=Once]
                                                                    ww4_s9ksp [Occ=Once] ->
                                                                  : [ww3_s9kso ww4_s9ksp];
                                                            };
                                                } in 
                                                  GHC.CString.unpackAppendCString#
                                                      GHC.Event.Internal.$fShowTimeout5 sat_s9ksq;
                                      } in  : [GHC.Show.$fShow(,)4 sat_s9ksr];
                            } in  sat_s9kss;
                      };
              };
          GHC.Event.Internal.Forever -> GHC.Event.Internal.$fShowTimeout2;
        };

GHC.Event.Internal.$fShowTimeout_$cshow
  :: GHC.Event.Internal.Timeout -> GHC.Base.String
[GblId, Arity=1, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [x_s9kst]
        case x_s9kst of {
          GHC.Event.Internal.Timeout dt_s9ksv ->
              let {
                sat_s9ksG [Occ=Once] :: [GHC.Types.Char]
                [LclId] =
                    [dt_s9ksv] \u []
                        case word2Int# [dt_s9ksv] of i#_s9ksw [Dmd=<S,U>] {
                          __DEFAULT ->
                              case >=# [i#_s9ksw 0#] of {
                                __DEFAULT ->
                                    case GHC.Integer.Type.wordToInteger dt_s9ksv of sat_s9ksy {
                                      __DEFAULT ->
                                          case
                                              GHC.Show.$w$cshowsPrec4 11# sat_s9ksy GHC.Types.[]
                                          of
                                          { (#,#) ww3_s9ksA [Occ=Once] ww4_s9ksB [Occ=Once] ->
                                                : [ww3_s9ksA ww4_s9ksB];
                                          };
                                    };
                                1# ->
                                    case GHC.Integer.Type.smallInteger i#_s9ksw of sat_s9ksC {
                                      __DEFAULT ->
                                          case
                                              GHC.Show.$w$cshowsPrec4 11# sat_s9ksC GHC.Types.[]
                                          of
                                          { (#,#) ww3_s9ksE [Occ=Once] ww4_s9ksF [Occ=Once] ->
                                                : [ww3_s9ksE ww4_s9ksF];
                                          };
                                    };
                              };
                        };
              } in 
                GHC.CString.unpackAppendCString#
                    GHC.Event.Internal.$fShowTimeout5 sat_s9ksG;
          GHC.Event.Internal.Forever -> GHC.Event.Internal.$fShowTimeout3;
        };

GHC.Event.Internal.$fShowTimeout1
  :: GHC.Event.Internal.Timeout -> GHC.Show.ShowS
[GblId, Arity=1, Unf=OtherCon []] =
    [] \r [eta_B1]
        GHC.Event.Internal.$fShowTimeout_$cshowsPrec
            GHC.Event.Internal.$fMonoidEventLifetime1 eta_B1;

GHC.Event.Internal.$fShowTimeout_$cshowList
  :: [GHC.Event.Internal.Timeout] -> GHC.Show.ShowS
[GblId, Arity=2, Str=<S,1*U><L,U>, Unf=OtherCon []] =
    [] \r [ls_s9ksH s_s9ksI]
        GHC.Show.showList__
            GHC.Event.Internal.$fShowTimeout1 ls_s9ksH s_s9ksI;

GHC.Event.Internal.$fShowTimeout [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show GHC.Event.Internal.Timeout
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Event.Internal.$fShowTimeout_$cshowsPrec
                                    GHC.Event.Internal.$fShowTimeout_$cshow
                                    GHC.Event.Internal.$fShowTimeout_$cshowList];

GHC.Event.Internal.$fShowEventLifetime2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "EL "#;

GHC.Event.Internal.$w$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.Int#
     -> GHC.Event.Internal.EventLifetime
     -> GHC.Base.String
     -> GHC.Base.String
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,U><L,1*U(U)><L,U>,
 Unf=OtherCon []] =
    [] \r [ww_s9ksJ w_s9ksK w1_s9ksL]
        case >=# [ww_s9ksJ 11#] of {
          __DEFAULT ->
              let {
                sat_s9ksS [Occ=Once] :: [GHC.Types.Char]
                [LclId] =
                    [w_s9ksK w1_s9ksL] \u []
                        case w_s9ksK of {
                          GHC.Types.I# ww3_s9ksO [Occ=Once] ->
                              case GHC.Show.$wshowSignedInt 11# ww3_s9ksO w1_s9ksL of {
                                (#,#) ww5_s9ksQ [Occ=Once] ww6_s9ksR [Occ=Once] ->
                                    : [ww5_s9ksQ ww6_s9ksR];
                              };
                        };
              } in 
                GHC.CString.unpackAppendCString#
                    GHC.Event.Internal.$fShowEventLifetime2 sat_s9ksS;
          1# ->
              let {
                sat_s9kt0 [Occ=Once] :: [GHC.Types.Char]
                [LclId] =
                    [w_s9ksK w1_s9ksL] \u []
                        let {
                          sat_s9ksZ [Occ=Once] :: [GHC.Types.Char]
                          [LclId] =
                              [w_s9ksK w1_s9ksL] \u []
                                  case w_s9ksK of {
                                    GHC.Types.I# ww3_s9ksU [Occ=Once] ->
                                        let {
                                          sat_s9ksV [Occ=Once] :: GHC.Base.String
                                          [LclId] =
                                              CCCS :! [GHC.Show.$fShow(,)2 w1_s9ksL];
                                        } in 
                                          case GHC.Show.$wshowSignedInt 11# ww3_s9ksU sat_s9ksV of {
                                            (#,#) ww5_s9ksX [Occ=Once] ww6_s9ksY [Occ=Once] ->
                                                : [ww5_s9ksX ww6_s9ksY];
                                          };
                                  };
                        } in 
                          GHC.CString.unpackAppendCString#
                              GHC.Event.Internal.$fShowEventLifetime2 sat_s9ksZ;
              } in  : [GHC.Show.$fShow(,)4 sat_s9kt0];
        };

GHC.Event.Internal.$fShowEventLifetime_$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Int
     -> GHC.Event.Internal.EventLifetime -> GHC.Show.ShowS
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><L,1*U(U)><L,U>,
 Unf=OtherCon []] =
    [] \r [w_s9kt1 w1_s9kt2 w2_s9kt3]
        case w_s9kt1 of {
          GHC.Types.I# ww1_s9kt5 [Occ=Once] ->
              GHC.Event.Internal.$w$cshowsPrec ww1_s9kt5 w1_s9kt2 w2_s9kt3;
        };

GHC.Event.Internal.$fShowEventLifetime_$cshow
  :: GHC.Event.Internal.EventLifetime -> GHC.Base.String
[GblId, Arity=1, Caf=NoCafRefs, Str=<L,1*U(U)>, Unf=OtherCon []] =
    [] \r [x_s9kt6]
        let {
          sat_s9ktc [Occ=Once] :: [GHC.Types.Char]
          [LclId] =
              [x_s9kt6] \u []
                  case x_s9kt6 of {
                    GHC.Types.I# ww3_s9kt8 [Occ=Once] ->
                        case GHC.Show.$wshowSignedInt 11# ww3_s9kt8 GHC.Types.[] of {
                          (#,#) ww5_s9kta [Occ=Once] ww6_s9ktb [Occ=Once] ->
                              : [ww5_s9kta ww6_s9ktb];
                        };
                  };
        } in 
          GHC.CString.unpackAppendCString#
              GHC.Event.Internal.$fShowEventLifetime2 sat_s9ktc;

GHC.Event.Internal.$fShowEventLifetime1
  :: GHC.Event.Internal.EventLifetime -> GHC.Show.ShowS
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,1*U(U)><L,U>,
 Unf=OtherCon []] =
    [] \r [w_s9ktd w1_s9kte]
        GHC.Event.Internal.$w$cshowsPrec 0# w_s9ktd w1_s9kte;

GHC.Event.Internal.$fShowEventLifetime_$cshowList
  :: [GHC.Event.Internal.EventLifetime] -> GHC.Show.ShowS
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><L,U>,
 Unf=OtherCon []] =
    [] \r [ls_s9ktf s_s9ktg]
        GHC.Show.showList__
            GHC.Event.Internal.$fShowEventLifetime1 ls_s9ktf s_s9ktg;

GHC.Event.Internal.$fShowEventLifetime [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show GHC.Event.Internal.EventLifetime
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Event.Internal.$fShowEventLifetime_$cshowsPrec
                                    GHC.Event.Internal.$fShowEventLifetime_$cshow
                                    GHC.Event.Internal.$fShowEventLifetime_$cshowList];

GHC.Event.Internal.$fEqLifetime_$c==
  :: GHC.Event.Internal.Lifetime
     -> GHC.Event.Internal.Lifetime -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [ds_s9kth ds1_s9kti]
        case ds_s9kth of {
          GHC.Event.Internal.OneShot ->
              case ds1_s9kti of {
                GHC.Event.Internal.OneShot -> GHC.Types.True [];
                GHC.Event.Internal.MultiShot -> GHC.Types.False [];
              };
          GHC.Event.Internal.MultiShot ->
              case ds1_s9kti of {
                GHC.Event.Internal.OneShot -> GHC.Types.False [];
                GHC.Event.Internal.MultiShot -> GHC.Types.True [];
              };
        };

GHC.Event.Internal.$fEqLifetime_$c/= [InlPrag=INLINE (sat-args=2)]
  :: GHC.Event.Internal.Lifetime
     -> GHC.Event.Internal.Lifetime -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [eta_s9ktm eta1_s9ktn]
        case eta_s9ktm of {
          GHC.Event.Internal.OneShot ->
              case eta1_s9ktn of {
                GHC.Event.Internal.OneShot -> GHC.Types.False [];
                GHC.Event.Internal.MultiShot -> GHC.Types.True [];
              };
          GHC.Event.Internal.MultiShot ->
              case eta1_s9ktn of {
                GHC.Event.Internal.OneShot -> GHC.Types.True [];
                GHC.Event.Internal.MultiShot -> GHC.Types.False [];
              };
        };

GHC.Event.Internal.$fEqLifetime [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq GHC.Event.Internal.Lifetime
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Event.Internal.$fEqLifetime_$c==
                                     GHC.Event.Internal.$fEqLifetime_$c/=];

GHC.Event.Internal.$fShowLifetime5 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "OneShot"#;

GHC.Event.Internal.$fShowLifetime4 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# GHC.Event.Internal.$fShowLifetime5;

GHC.Event.Internal.$fShowLifetime3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "MultiShot"#;

GHC.Event.Internal.$fShowLifetime2 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# GHC.Event.Internal.$fShowLifetime3;

GHC.Event.Internal.$fShowLifetime_$cshowsPrec
  :: GHC.Types.Int -> GHC.Event.Internal.Lifetime -> GHC.Show.ShowS
[GblId, Arity=3, Str=<L,A><S,1*U><L,1*U>, Unf=OtherCon []] =
    [] \r [ds_s9ktr ds1_s9kts eta_s9ktt]
        case ds1_s9kts of {
          GHC.Event.Internal.OneShot ->
              GHC.Base.++ GHC.Event.Internal.$fShowLifetime4 eta_s9ktt;
          GHC.Event.Internal.MultiShot ->
              GHC.Base.++ GHC.Event.Internal.$fShowLifetime2 eta_s9ktt;
        };

GHC.Event.Internal.$fShowLifetime_$cshow
  :: GHC.Event.Internal.Lifetime -> GHC.Base.String
[GblId, Arity=1, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [x_s9ktv]
        case x_s9ktv of {
          GHC.Event.Internal.OneShot -> GHC.Event.Internal.$fShowLifetime4;
          GHC.Event.Internal.MultiShot -> GHC.Event.Internal.$fShowLifetime2;
        };

GHC.Event.Internal.$fShowLifetime1
  :: GHC.Event.Internal.Lifetime -> GHC.Show.ShowS
[GblId, Arity=2, Str=<S,1*U><L,1*U>, Unf=OtherCon []] =
    [] \r [ds_s9ktx eta_s9kty]
        case ds_s9ktx of {
          GHC.Event.Internal.OneShot ->
              GHC.Base.++ GHC.Event.Internal.$fShowLifetime4 eta_s9kty;
          GHC.Event.Internal.MultiShot ->
              GHC.Base.++ GHC.Event.Internal.$fShowLifetime2 eta_s9kty;
        };

GHC.Event.Internal.$fShowLifetime_$cshowList
  :: [GHC.Event.Internal.Lifetime] -> GHC.Show.ShowS
[GblId, Arity=2, Str=<S,1*U><L,U>, Unf=OtherCon []] =
    [] \r [ls_s9ktA s_s9ktB]
        GHC.Show.showList__
            GHC.Event.Internal.$fShowLifetime1 ls_s9ktA s_s9ktB;

GHC.Event.Internal.$fShowLifetime [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show GHC.Event.Internal.Lifetime
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Event.Internal.$fShowLifetime_$cshowsPrec
                                    GHC.Event.Internal.$fShowLifetime_$cshow
                                    GHC.Event.Internal.$fShowLifetime_$cshowList];

GHC.Event.Internal._beDelete :: ()
[GblId[[RecSel(naughty)]], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE ()! [];

GHC.Event.Internal._beModifyFdOnce :: ()
[GblId[[RecSel(naughty)]], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE ()! [];

GHC.Event.Internal._beModifyFd :: ()
[GblId[[RecSel(naughty)]], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE ()! [];

GHC.Event.Internal._bePoll :: ()
[GblId[[RecSel(naughty)]], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE ()! [];

GHC.Event.Internal._beState :: ()
[GblId[[RecSel(naughty)]], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE ()! [];

GHC.Event.Internal.evtNothing [InlPrag=INLINE (sat-args=0)]
  :: GHC.Event.Internal.Event
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] GHC.Event.Internal.$fMonoidEventLifetime1;

evtRead1_r9iWk :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [1#];

GHC.Event.Internal.evtRead [InlPrag=INLINE (sat-args=0)]
  :: GHC.Event.Internal.Event
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] evtRead1_r9iWk;

evtWrite1_r9iWl :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [2#];

GHC.Event.Internal.evtWrite [InlPrag=INLINE (sat-args=0)]
  :: GHC.Event.Internal.Event
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] evtWrite1_r9iWl;

evtClose1_r9iWm :: GHC.Types.Int
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.I#! [4#];

GHC.Event.Internal.evtClose [InlPrag=INLINE (sat-args=0)]
  :: GHC.Event.Internal.Event
[GblId, Str=m, Unf=OtherCon []] =
    [] \u [] evtClose1_r9iWm;

GHC.Event.Internal.elSupremum [InlPrag=INLINE (sat-args=2)]
  :: GHC.Event.Internal.Lifetime
     -> GHC.Event.Internal.Lifetime -> GHC.Event.Internal.Lifetime
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><L,1*U>,
 Unf=OtherCon []] =
    [] \r [ds_s9ktC ds1_s9ktD]
        case ds_s9ktC of {
          GHC.Event.Internal.OneShot -> ds1_s9ktD;
          GHC.Event.Internal.MultiShot -> GHC.Event.Internal.MultiShot [];
        };

GHC.Event.Internal.$fSemigroupLifetime_go [Occ=LoopBreaker]
  :: GHC.Event.Internal.Lifetime
     -> [GHC.Event.Internal.Lifetime] -> GHC.Event.Internal.Lifetime
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [b_s9ktF ds1_s9ktG]
        case ds1_s9ktG of {
          [] -> b_s9ktF;
          : c_s9ktI [Occ=Once] cs_s9ktJ [Occ=Once] ->
              case b_s9ktF of {
                GHC.Event.Internal.OneShot ->
                    GHC.Event.Internal.$fSemigroupLifetime_go c_s9ktI cs_s9ktJ;
                GHC.Event.Internal.MultiShot -> GHC.Event.Internal.MultiShot [];
              };
        };

GHC.Event.Internal.$fSemigroupLifetime_$csconcat
  :: GHC.Base.NonEmpty GHC.Event.Internal.Lifetime
     -> GHC.Event.Internal.Lifetime
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SS),1*U(1*U,1*U)>,
 Unf=OtherCon []] =
    [] \r [ds_s9ktL]
        case ds_s9ktL of {
          GHC.Base.:| a1_s9ktN [Occ=Once] as_s9ktO [Occ=Once] ->
              GHC.Event.Internal.$fSemigroupLifetime_go a1_s9ktN as_s9ktO;
        };

GHC.Event.Internal.$fMonoidLifetime_go [Occ=LoopBreaker]
  :: [GHC.Event.Internal.Lifetime] -> GHC.Event.Internal.Lifetime
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [ds_s9ktP]
        case ds_s9ktP of {
          [] -> GHC.Event.Internal.OneShot [];
          : y_s9ktR [Occ=Once!] ys_s9ktS [Occ=Once] ->
              case y_s9ktR of {
                GHC.Event.Internal.OneShot ->
                    GHC.Event.Internal.$fMonoidLifetime_go ys_s9ktS;
                GHC.Event.Internal.MultiShot -> GHC.Event.Internal.MultiShot [];
              };
        };

GHC.Event.Internal.$fSemigroupLifetime [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Base.Semigroup GHC.Event.Internal.Lifetime
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Base.C:Semigroup! [GHC.Event.Internal.elSupremum
                                         GHC.Event.Internal.$fSemigroupLifetime_$csconcat
                                         GHC.Event.Internal.$fSemigroupLifetime_$cstimes];
GHC.Event.Internal.$fMonoidLifetime [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Base.Monoid GHC.Event.Internal.Lifetime
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Base.C:Monoid! [GHC.Event.Internal.$fSemigroupLifetime
                                      GHC.Event.Internal.OneShot
                                      GHC.Event.Internal.elSupremum
                                      GHC.Event.Internal.$fMonoidLifetime_go];
GHC.Event.Internal.$fSemigroupLifetime_$cstimes [Occ=LoopBreaker]
  :: forall b.
     GHC.Real.Integral b =>
     b -> GHC.Event.Internal.Lifetime -> GHC.Event.Internal.Lifetime
[GblId,
 Arity=3,
 Str=<L,U(U(U(A,A,A,A,A,A,C(U)),U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A),A),A,C(C1(U)),C(C1(U)),A,A,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [$dIntegral_s9ktU eta_B2 eta_B1]
        Data.Semigroup.Internal.stimesMonoid
            $dIntegral_s9ktU GHC.Event.Internal.$fMonoidLifetime eta_B2 eta_B1;

GHC.Event.Internal.backend [InlPrag=INLINE (sat-args=5)]
  :: forall a.
     (a
      -> GHC.Base.Maybe GHC.Event.Internal.Timeout
      -> (System.Posix.Types.Fd
          -> GHC.Event.Internal.Event -> GHC.Types.IO ())
      -> GHC.Types.IO GHC.Types.Int)
     -> (a
         -> System.Posix.Types.Fd
         -> GHC.Event.Internal.Event
         -> GHC.Event.Internal.Event
         -> GHC.Types.IO GHC.Types.Bool)
     -> (a
         -> System.Posix.Types.Fd
         -> GHC.Event.Internal.Event
         -> GHC.Types.IO GHC.Types.Bool)
     -> (a -> GHC.Types.IO ())
     -> a
     -> GHC.Event.Internal.Backend
[GblId,
 Arity=5,
 Caf=NoCafRefs,
 Str=<L,U><L,U><L,U><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [bPoll_s9ktV
           bModifyFd_s9ktW
           bModifyFdOnce_s9ktX
           bDelete_s9ktY
           state_s9ktZ]
        GHC.Event.Internal.$WBackend
            state_s9ktZ
            bPoll_s9ktV
            bModifyFd_s9ktW
            bModifyFdOnce_s9ktX
            bDelete_s9ktY;

GHC.Event.Internal.poll [InlPrag=INLINE (sat-args=1)]
  :: GHC.Event.Internal.Backend
     -> GHC.Base.Maybe GHC.Event.Internal.Timeout
     -> (System.Posix.Types.Fd
         -> GHC.Event.Internal.Event -> GHC.Types.IO ())
     -> GHC.Types.IO GHC.Types.Int
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [ds_s9ku0]
        case ds_s9ku0 of {
          GHC.Event.Internal.Backend bState_s9ku2 [Occ=Once]
                                     bPoll_s9ku3 [Occ=Once!]
                                     _ [Occ=Dead]
                                     _ [Occ=Dead]
                                     _ [Occ=Dead] ->
              bPoll_s9ku3 bState_s9ku2;
        };

GHC.Event.Internal.modifyFd [InlPrag=INLINE (sat-args=1)]
  :: GHC.Event.Internal.Backend
     -> System.Posix.Types.Fd
     -> GHC.Event.Internal.Event
     -> GHC.Event.Internal.Event
     -> GHC.Types.IO GHC.Types.Bool
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [ds_s9ku7]
        case ds_s9ku7 of {
          GHC.Event.Internal.Backend bState_s9ku9 [Occ=Once]
                                     _ [Occ=Dead]
                                     bModifyFd_s9kub [Occ=Once!]
                                     _ [Occ=Dead]
                                     _ [Occ=Dead] ->
              bModifyFd_s9kub bState_s9ku9;
        };

GHC.Event.Internal.modifyFdOnce [InlPrag=INLINE (sat-args=1)]
  :: GHC.Event.Internal.Backend
     -> System.Posix.Types.Fd
     -> GHC.Event.Internal.Event
     -> GHC.Types.IO GHC.Types.Bool
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [ds_s9kue]
        case ds_s9kue of {
          GHC.Event.Internal.Backend bState_s9kug [Occ=Once]
                                     _ [Occ=Dead]
                                     _ [Occ=Dead]
                                     bModifyFdOnce_s9kuj [Occ=Once!]
                                     _ [Occ=Dead] ->
              bModifyFdOnce_s9kuj bState_s9kug;
        };

GHC.Event.Internal.delete [InlPrag=INLINE (sat-args=1)]
  :: GHC.Event.Internal.Backend -> GHC.Types.IO ()
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [ds_s9kul]
        case ds_s9kul of {
          GHC.Event.Internal.Backend bState_s9kun [Occ=Once]
                                     _ [Occ=Dead]
                                     _ [Occ=Dead]
                                     _ [Occ=Dead]
                                     bDelete_s9kur [Occ=Once!] ->
              bDelete_s9kur bState_s9kun;
        };

GHC.Event.Internal.throwErrnoIfMinus1NoRetry2
  :: GHC.Integer.Type.Integer
[GblId, Unf=OtherCon []] =
    [] \u [] GHC.Integer.Type.mkInteger GHC.Types.True GHC.Types.[];

sat_s9kus :: GHC.Types.Int
[LclId] =
    CCS_DONT_CARE GHC.Types.I#! [1#];

sat_s9kut :: [GHC.Types.Int]
[LclId] =
    CCS_DONT_CARE :! [sat_s9kus GHC.Types.[]];

GHC.Event.Internal.throwErrnoIfMinus1NoRetry3
  :: GHC.Integer.Type.Integer
[GblId, Unf=OtherCon []] =
    [] \u [] GHC.Integer.Type.mkInteger GHC.Types.True sat_s9kut;

GHC.Event.Internal.throwErrnoIfMinus1NoRetry1
  :: forall a.
     (GHC.Classes.Eq a, GHC.Num.Num a) =>
     GHC.Base.String
     -> GHC.Types.IO a
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, a #)
[GblId,
 Arity=5,
 Str=<L,1*U(1*C1(C1(U)),A)><L,U(A,A,A,1*C1(U),A,A,C(U))><L,U><C(S),1*C1(U(U,U))><S,U>,
 Unf=OtherCon []] =
    [] \r [$dEq_s9kuu $dNum_s9kuv loc_s9kuw f_s9kux void_0E]
        case f_s9kux GHC.Prim.void# of ds1_s9kuz {
          Unit# ipv1_s9kuB [Occ=Once] ->
              let {
                sat_s9kuD [Occ=Once] :: a_a9icv
                [LclId] =
                    [$dNum_s9kuv] \u []
                        let {
                          sat_s9kuC [Occ=Once] :: a_a9icv
                          [LclId] =
                              [$dNum_s9kuv] \u []
                                  GHC.Num.fromInteger
                                      $dNum_s9kuv GHC.Event.Internal.throwErrnoIfMinus1NoRetry3;
                        } in  GHC.Num.negate $dNum_s9kuv sat_s9kuC;
              } in 
                case GHC.Classes.== $dEq_s9kuu ipv1_s9kuB sat_s9kuD of {
                  GHC.Types.False -> Unit# [ipv1_s9kuB];
                  GHC.Types.True ->
                      case __pkg_ccall base-4.11.0.0 [GHC.Prim.void#] of {
                        Unit# ds2_s9kuI [Occ=Once] ->
                            case narrow32Int# [ds2_s9kuI] of {
                              __DEFAULT -> Foreign.C.Error.throwErrno1 loc_s9kuw GHC.Prim.void#;
                              4# ->
                                  let {
                                    sat_s9kuK [Occ=Once] :: a_a9icv
                                    [LclId] =
                                        [$dNum_s9kuv] \u []
                                            GHC.Num.fromInteger
                                                $dNum_s9kuv
                                                GHC.Event.Internal.throwErrnoIfMinus1NoRetry2;
                                  } in  Unit# [sat_s9kuK];
                            };
                      };
                };
        };

GHC.Event.Internal.throwErrnoIfMinus1NoRetry
  :: forall a.
     (GHC.Classes.Eq a, GHC.Num.Num a) =>
     GHC.Base.String -> GHC.Types.IO a -> GHC.Types.IO a
[GblId,
 Arity=5,
 Str=<L,1*U(1*C1(C1(U)),A)><L,U(A,A,A,1*C1(U),A,A,C(U))><L,U><C(S),1*C1(U(U,U))><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B5 eta_B4 eta_B3 eta_B2 void_0E]
        GHC.Event.Internal.throwErrnoIfMinus1NoRetry1
            eta_B5 eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Event.Internal.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

GHC.Event.Internal.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Internal.$trModule4];

GHC.Event.Internal.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.Event.Internal"#;

GHC.Event.Internal.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Internal.$trModule2];

GHC.Event.Internal.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [GHC.Event.Internal.$trModule3
                                     GHC.Event.Internal.$trModule1];

$krep_r9iWn :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Word.$tcWord64
                                              GHC.Types.[]];

$krep1_r9iWo :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcBool
                                              GHC.Types.[]];

$krep2_r9iWp :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcInt
                                              GHC.Types.[]];

$krep3_r9iWq :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Tuple.$tc()
                                              GHC.Types.[]];

$krep4_r9iWr :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [System.Posix.Types.$tcFd
                                              GHC.Types.[]];

$krep5_r9iWs :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep1_r9iWo GHC.Types.[]];

$krep6_r9iWt :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcIO
                                              $krep5_r9iWs];

$krep7_r9iWu :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep2_r9iWp GHC.Types.[]];

$krep8_r9iWv :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcIO
                                              $krep7_r9iWu];

$krep9_r9iWw :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep3_r9iWq GHC.Types.[]];

$krep10_r9iWx :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcIO
                                              $krep9_r9iWw];

$krep11_r9iWy :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepVar! [0#];

$krep12_r9iWz :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep11_r9iWy $krep10_r9iWx];

GHC.Event.Internal.$tcEvent2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Event"#;

GHC.Event.Internal.$tcEvent1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Internal.$tcEvent2];

GHC.Event.Internal.$tcEvent :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [6453162546660085965##
                                    4509047211634842293##
                                    GHC.Event.Internal.$trModule
                                    GHC.Event.Internal.$tcEvent1
                                    0#
                                    GHC.Types.krep$*];

$krep13_r9iWA :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.Internal.$tcEvent
                                              GHC.Types.[]];

$krep14_r9iWB :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep13_r9iWA $krep10_r9iWx];

$krep15_r9iWC :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep4_r9iWr $krep14_r9iWB];

$krep16_r9iWD :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep15_r9iWC $krep8_r9iWv];

$krep17_r9iWE :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep13_r9iWA $krep6_r9iWt];

$krep18_r9iWF :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep13_r9iWA $krep17_r9iWE];

$krep19_r9iWG :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep4_r9iWr $krep18_r9iWF];

$krep20_r9iWH :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep11_r9iWy $krep19_r9iWG];

$krep21_r9iWI :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep4_r9iWr $krep17_r9iWE];

$krep22_r9iWJ :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep11_r9iWy $krep21_r9iWI];

GHC.Event.Internal.$tc'Event1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_r9iWp $krep13_r9iWA];

GHC.Event.Internal.$tc'Event3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Event"#;

GHC.Event.Internal.$tc'Event2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Internal.$tc'Event3];

GHC.Event.Internal.$tc'Event :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [3843507504600839845##
                                    12172955723408562945##
                                    GHC.Event.Internal.$trModule
                                    GHC.Event.Internal.$tc'Event2
                                    0#
                                    GHC.Event.Internal.$tc'Event1];

GHC.Event.Internal.$tcLifetime2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Lifetime"#;

GHC.Event.Internal.$tcLifetime1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Internal.$tcLifetime2];

GHC.Event.Internal.$tcLifetime :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [16879554565198773712##
                                    8198822807138459060##
                                    GHC.Event.Internal.$trModule
                                    GHC.Event.Internal.$tcLifetime1
                                    0#
                                    GHC.Types.krep$*];

GHC.Event.Internal.$tc'MultiShot1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.Internal.$tcLifetime
                                              GHC.Types.[]];

GHC.Event.Internal.$tc'OneShot2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'OneShot"#;

GHC.Event.Internal.$tc'OneShot1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Internal.$tc'OneShot2];

GHC.Event.Internal.$tc'OneShot :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [4428239562170783460##
                                    11248279118174204528##
                                    GHC.Event.Internal.$trModule
                                    GHC.Event.Internal.$tc'OneShot1
                                    0#
                                    GHC.Event.Internal.$tc'MultiShot1];

GHC.Event.Internal.$tc'MultiShot3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'MultiShot"#;

GHC.Event.Internal.$tc'MultiShot2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Internal.$tc'MultiShot3];

GHC.Event.Internal.$tc'MultiShot :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [963080519453727549##
                                    5499435804578671723##
                                    GHC.Event.Internal.$trModule
                                    GHC.Event.Internal.$tc'MultiShot2
                                    0#
                                    GHC.Event.Internal.$tc'MultiShot1];

GHC.Event.Internal.$tcEventLifetime2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "EventLifetime"#;

GHC.Event.Internal.$tcEventLifetime1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Internal.$tcEventLifetime2];

GHC.Event.Internal.$tcEventLifetime :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [11472987326402547198##
                                    14676184191233842558##
                                    GHC.Event.Internal.$trModule
                                    GHC.Event.Internal.$tcEventLifetime1
                                    0#
                                    GHC.Types.krep$*];

$krep23_r9iWK :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.Internal.$tcEventLifetime
                                              GHC.Types.[]];

GHC.Event.Internal.$tc'EL1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_r9iWp $krep23_r9iWK];

GHC.Event.Internal.$tc'EL3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'EL"#;

GHC.Event.Internal.$tc'EL2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Internal.$tc'EL3];

GHC.Event.Internal.$tc'EL :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [13328424765260461560##
                                    17004947518967325218##
                                    GHC.Event.Internal.$trModule
                                    GHC.Event.Internal.$tc'EL2
                                    0#
                                    GHC.Event.Internal.$tc'EL1];

GHC.Event.Internal.$tcTimeout2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Timeout"#;

GHC.Event.Internal.$tcTimeout1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Internal.$tcTimeout2];

GHC.Event.Internal.$tcTimeout :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [3071157695468345159##
                                    2371669836431867052##
                                    GHC.Event.Internal.$trModule
                                    GHC.Event.Internal.$tcTimeout1
                                    0#
                                    GHC.Types.krep$*];

GHC.Event.Internal.$tc'Forever1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.Internal.$tcTimeout
                                              GHC.Types.[]];

GHC.Event.Internal.$tc'Forever3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Forever"#;

GHC.Event.Internal.$tc'Forever2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Internal.$tc'Forever3];

GHC.Event.Internal.$tc'Forever :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [15890326801882711521##
                                    6940845280791152844##
                                    GHC.Event.Internal.$trModule
                                    GHC.Event.Internal.$tc'Forever2
                                    0#
                                    GHC.Event.Internal.$tc'Forever1];

GHC.Event.Internal.$tc'Timeout1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_r9iWn
                                         GHC.Event.Internal.$tc'Forever1];

GHC.Event.Internal.$tc'Timeout3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Timeout"#;

GHC.Event.Internal.$tc'Timeout2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Internal.$tc'Timeout3];

GHC.Event.Internal.$tc'Timeout :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [11507111740173521793##
                                    14582130137848061687##
                                    GHC.Event.Internal.$trModule
                                    GHC.Event.Internal.$tc'Timeout2
                                    0#
                                    GHC.Event.Internal.$tc'Timeout1];

$krep24_r9iWL :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [GHC.Event.Internal.$tc'Forever1 GHC.Types.[]];

$krep25_r9iWM :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Base.$tcMaybe
                                              $krep24_r9iWL];

$krep26_r9iWN :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep25_r9iWM $krep16_r9iWD];

$krep27_r9iWO :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep11_r9iWy $krep26_r9iWN];

GHC.Event.Internal.$tcBackend2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Backend"#;

GHC.Event.Internal.$tcBackend1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Internal.$tcBackend2];

GHC.Event.Internal.$tcBackend :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [5241936179624485302##
                                    3407160178235461245##
                                    GHC.Event.Internal.$trModule
                                    GHC.Event.Internal.$tcBackend1
                                    0#
                                    GHC.Types.krep$*];

$krep28_r9iWP :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.Internal.$tcBackend
                                              GHC.Types.[]];

$krep29_r9iWQ :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep12_r9iWz $krep28_r9iWP];

$krep30_r9iWR :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep22_r9iWJ $krep29_r9iWQ];

$krep31_r9iWS :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep20_r9iWH $krep30_r9iWR];

$krep32_r9iWT :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep27_r9iWO $krep31_r9iWS];

GHC.Event.Internal.$tc'Backend1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep11_r9iWy $krep32_r9iWT];

GHC.Event.Internal.$tc'Backend3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Backend"#;

GHC.Event.Internal.$tc'Backend2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.Internal.$tc'Backend3];

GHC.Event.Internal.$tc'Backend :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [2097061961478251755##
                                    1358985482759746540##
                                    GHC.Event.Internal.$trModule
                                    GHC.Event.Internal.$tc'Backend2
                                    1#
                                    GHC.Event.Internal.$tc'Backend1];

GHC.Event.Internal.$fEqEvent [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq GHC.Event.Internal.Event
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Classes.eqInt
                                     GHC.Classes.neInt];

GHC.Event.Internal.$fEqEventLifetime [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq GHC.Event.Internal.EventLifetime
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Classes.eqInt
                                     GHC.Classes.neInt];

elEvent1_r9iWU :: GHC.Event.Internal.EventLifetime -> GHC.Types.Int
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>m,
 Unf=OtherCon []] =
    sat-only [] \r [ds_s9kuL]
        case ds_s9kuL of {
          GHC.Types.I# x#_s9kuN [Occ=Once] ->
              case andI# [x#_s9kuN 7#] of sat_s9kuO {
                __DEFAULT -> GHC.Types.I# [sat_s9kuO];
              };
        };

GHC.Event.Internal.elEvent [InlPrag=INLINE (sat-args=1)]
  :: GHC.Event.Internal.EventLifetime -> GHC.Event.Internal.Event
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>m,
 Unf=OtherCon []] =
    [] \r [eta_B1] elEvent1_r9iWU eta_B1;

GHC.Event.Internal.$wgo2 [InlPrag=NOUSERINLINE[0], Occ=LoopBreaker]
  :: GHC.Prim.Int#
     -> [GHC.Event.Internal.EventLifetime] -> GHC.Prim.Int#
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [ww_s9kuP w_s9kuQ]
        case w_s9kuQ of {
          [] -> ww_s9kuP;
          : c_s9kuS [Occ=Once] cs_s9kuT [Occ=Once] ->
              case c_s9kuS of {
                GHC.Types.I# ww2_s9kuV [Occ=Once] ->
                    case GHC.Event.Internal.$wgo2 ww2_s9kuV cs_s9kuT of ww3_s9kuW {
                      __DEFAULT -> orI# [ww_s9kuP ww3_s9kuW];
                    };
              };
        };

GHC.Event.Internal.$fSemigroupEventLifetime_go [InlPrag=NOUSERINLINE[0]]
  :: GHC.Event.Internal.EventLifetime
     -> [GHC.Event.Internal.EventLifetime]
     -> GHC.Event.Internal.EventLifetime
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S,1*U>m,
 Unf=OtherCon []] =
    [] \r [w_s9kuX w1_s9kuY]
        case w_s9kuX of {
          GHC.Types.I# ww1_s9kv0 [Occ=Once] ->
              case GHC.Event.Internal.$wgo2 ww1_s9kv0 w1_s9kuY of ww2_s9kv1 {
                __DEFAULT -> GHC.Types.I# [ww2_s9kv1];
              };
        };

GHC.Event.Internal.$fSemigroupEventLifetime_$csconcat
  :: GHC.Base.NonEmpty GHC.Event.Internal.EventLifetime
     -> GHC.Event.Internal.EventLifetime
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S(S)S),1*U(1*U(U),1*U)>m,
 Unf=OtherCon []] =
    [] \r [ds_s9kv2]
        case ds_s9kv2 of {
          GHC.Base.:| a1_s9kv4 [Occ=Once] as_s9kv5 [Occ=Once] ->
              GHC.Event.Internal.$fSemigroupEventLifetime_go a1_s9kv4 as_s9kv5;
        };

GHC.Event.Internal.$fSemigroupEventLifetime [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Base.Semigroup GHC.Event.Internal.EventLifetime
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Base.C:Semigroup! [Data.Bits.$fBitsInt_$c.|.
                                         GHC.Event.Internal.$fSemigroupEventLifetime_$csconcat
                                         GHC.Event.Internal.$fSemigroupEventLifetime_$cstimes];
GHC.Event.Internal.$fSemigroupEventLifetime_$cstimes [Occ=LoopBreaker]
  :: forall b.
     GHC.Real.Integral b =>
     b
     -> GHC.Event.Internal.EventLifetime
     -> GHC.Event.Internal.EventLifetime
[GblId, Arity=1, Str=<L,U>, Unf=OtherCon []] =
    [] \r [$dIntegral_s9kv6]
        Data.Semigroup.Internal.stimesDefault
            $dIntegral_s9kv6 GHC.Event.Internal.$fSemigroupEventLifetime;

GHC.Event.Internal.$wgo1 [InlPrag=NOUSERINLINE[0], Occ=LoopBreaker]
  :: [GHC.Event.Internal.EventLifetime] -> GHC.Prim.Int#
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [w_s9kv7]
        case w_s9kv7 of {
          [] -> 0#;
          : y_s9kv9 [Occ=Once] ys_s9kva [Occ=Once] ->
              case y_s9kv9 of {
                GHC.Types.I# x#_s9kvc [Occ=Once] ->
                    case GHC.Event.Internal.$wgo1 ys_s9kva of ww_s9kvd {
                      __DEFAULT -> orI# [x#_s9kvc ww_s9kvd];
                    };
              };
        };

GHC.Event.Internal.$fMonoidEventLifetime_go [InlPrag=NOUSERINLINE[0]]
  :: [GHC.Event.Internal.EventLifetime]
     -> GHC.Event.Internal.EventLifetime
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>m, Unf=OtherCon []] =
    [] \r [w_s9kve]
        case GHC.Event.Internal.$wgo1 w_s9kve of ww_s9kvf {
          __DEFAULT -> GHC.Types.I# [ww_s9kvf];
        };

GHC.Event.Internal.$fMonoidEventLifetime [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Base.Monoid GHC.Event.Internal.EventLifetime
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Base.C:Monoid! [GHC.Event.Internal.$fSemigroupEventLifetime
                                      GHC.Event.Internal.$fMonoidEventLifetime1
                                      Data.Bits.$fBitsInt_$c.|.
                                      GHC.Event.Internal.$fMonoidEventLifetime_go];

GHC.Event.Internal.elLifetime [InlPrag=INLINE (sat-args=1)]
  :: GHC.Event.Internal.EventLifetime -> GHC.Event.Internal.Lifetime
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [ds_s9kvg]
        case ds_s9kvg of {
          GHC.Types.I# x#_s9kvi [Occ=Once] ->
              case andI# [x#_s9kvi 8#] of {
                __DEFAULT -> GHC.Event.Internal.MultiShot [];
                0# -> GHC.Event.Internal.OneShot [];
              };
        };

eventLifetime1_r9iWV
  :: GHC.Event.Internal.Event
     -> GHC.Event.Internal.Lifetime -> GHC.Types.Int
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U(U)><S,1*U>m,
 Unf=OtherCon []] =
    sat-only [] \r [ds_s9kvk l_s9kvl]
        case ds_s9kvk of wild_s9kvm {
          GHC.Types.I# x#_s9kvn [Occ=Once] ->
              case l_s9kvl of {
                GHC.Event.Internal.OneShot -> wild_s9kvm;
                GHC.Event.Internal.MultiShot ->
                    case orI# [x#_s9kvn 8#] of sat_s9kvp {
                      __DEFAULT -> GHC.Types.I# [sat_s9kvp];
                    };
              };
        };

GHC.Event.Internal.eventLifetime [InlPrag=INLINE (sat-args=2)]
  :: GHC.Event.Internal.Event
     -> GHC.Event.Internal.Lifetime -> GHC.Event.Internal.EventLifetime
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U(U)><S,1*U>m,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] eventLifetime1_r9iWV eta_B2 eta_B1;

GHC.Event.Internal.evtCombine [InlPrag=INLINE (sat-args=2)]
  :: GHC.Event.Internal.Event
     -> GHC.Event.Internal.Event -> GHC.Event.Internal.Event
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)>m,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] Data.Bits.$fBitsInt_$c.|. eta_B2 eta_B1;

GHC.Event.Internal.evtConcat [InlPrag=INLINE (sat-args=0)]
  :: [GHC.Event.Internal.Event] -> GHC.Event.Internal.Event
[GblId, Arity=1, Unf=OtherCon []] =
    [] \r [eta_B1]
        GHC.List.foldl'
            GHC.Event.Internal.evtCombine GHC.Event.Internal.evtNothing eta_B1;

GHC.Event.Internal.$wgo [InlPrag=NOUSERINLINE[0], Occ=LoopBreaker]
  :: GHC.Prim.Int# -> [GHC.Event.Internal.Event] -> GHC.Prim.Int#
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [ww_s9kvq w_s9kvr]
        case w_s9kvr of {
          [] -> ww_s9kvq;
          : c_s9kvt [Occ=Once] cs_s9kvu [Occ=Once] ->
              case c_s9kvt of {
                GHC.Types.I# ww2_s9kvw [Occ=Once] ->
                    case GHC.Event.Internal.$wgo ww2_s9kvw cs_s9kvu of ww3_s9kvx {
                      __DEFAULT -> orI# [ww_s9kvq ww3_s9kvx];
                    };
              };
        };

GHC.Event.Internal.$fSemigroupEvent_go [InlPrag=NOUSERINLINE[0]]
  :: GHC.Event.Internal.Event
     -> [GHC.Event.Internal.Event] -> GHC.Event.Internal.Event
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S,1*U>m,
 Unf=OtherCon []] =
    [] \r [w_s9kvy w1_s9kvz]
        case w_s9kvy of {
          GHC.Types.I# ww1_s9kvB [Occ=Once] ->
              case GHC.Event.Internal.$wgo ww1_s9kvB w1_s9kvz of ww2_s9kvC {
                __DEFAULT -> GHC.Types.I# [ww2_s9kvC];
              };
        };

GHC.Event.Internal.$fSemigroupEvent_$csconcat
  :: GHC.Base.NonEmpty GHC.Event.Internal.Event
     -> GHC.Event.Internal.Event
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(S(S)S),1*U(1*U(U),1*U)>m,
 Unf=OtherCon []] =
    [] \r [ds_s9kvD]
        case ds_s9kvD of {
          GHC.Base.:| a1_s9kvF [Occ=Once] as_s9kvG [Occ=Once] ->
              GHC.Event.Internal.$fSemigroupEvent_go a1_s9kvF as_s9kvG;
        };

GHC.Event.Internal.$fSemigroupEvent [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Base.Semigroup GHC.Event.Internal.Event
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Base.C:Semigroup! [GHC.Event.Internal.evtCombine
                                         GHC.Event.Internal.$fSemigroupEvent_$csconcat
                                         GHC.Event.Internal.$fSemigroupEvent_$cstimes];
GHC.Event.Internal.$fMonoidEvent [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Base.Monoid GHC.Event.Internal.Event
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Base.C:Monoid! [GHC.Event.Internal.$fSemigroupEvent
                                      GHC.Event.Internal.evtNothing
                                      GHC.Event.Internal.evtCombine
                                      GHC.Event.Internal.evtConcat];
GHC.Event.Internal.$fSemigroupEvent_$cstimes [Occ=LoopBreaker]
  :: forall b.
     GHC.Real.Integral b =>
     b -> GHC.Event.Internal.Event -> GHC.Event.Internal.Event
[GblId,
 Arity=3,
 Str=<L,U(U(U(A,A,A,A,A,A,C(U)),U(U(C(C1(U)),A),C(C1(U)),A,A,A,A,A,A),A),A,C(C1(U)),C(C1(U)),A,A,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [$dIntegral_s9kvH eta_B2 eta_B1]
        Data.Semigroup.Internal.stimesMonoid
            $dIntegral_s9kvH GHC.Event.Internal.$fMonoidEvent eta_B2 eta_B1;

GHC.Event.Internal.eventIs
  :: GHC.Event.Internal.Event
     -> GHC.Event.Internal.Event -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)>,
 Unf=OtherCon []] =
    [] \r [ds_s9kvI ds1_s9kvJ]
        case ds_s9kvI of {
          GHC.Types.I# x#_s9kvL [Occ=Once] ->
              case ds1_s9kvJ of {
                GHC.Types.I# y#_s9kvN [Occ=Once] ->
                    case andI# [x#_s9kvL y#_s9kvN] of {
                      __DEFAULT -> GHC.Types.True [];
                      0# -> GHC.Types.False [];
                    };
              };
        };

GHC.Event.Internal.$fShowEvent13 :: GHC.Types.Char
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.C#! ['['#];

GHC.Event.Internal.$fShowEvent5 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "]"#;

GHC.Event.Internal.$fShowEvent10 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    ","#;

GHC.Event.Internal.$fShowEvent9 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# GHC.Event.Internal.$fShowEvent10;

GHC.Event.Internal.$fShowEvent12 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "evtRead"#;

GHC.Event.Internal.$fShowEvent11 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# GHC.Event.Internal.$fShowEvent12;

GHC.Event.Internal.$fShowEvent8 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "evtWrite"#;

GHC.Event.Internal.$fShowEvent7 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# GHC.Event.Internal.$fShowEvent8;

GHC.Event.Internal.$fShowEvent3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "evtClose"#;

GHC.Event.Internal.$fShowEvent2 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# GHC.Event.Internal.$fShowEvent3;

GHC.Event.Internal.$fShowEvent4 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# GHC.Event.Internal.$fShowEvent5;

GHC.Event.Internal.$fShowEvent6 :: [[GHC.Types.Char]]
[GblId, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [GHC.Event.Internal.$fShowEvent2 GHC.Types.[]];

GHC.Event.Internal.$w$cshow [InlPrag=NOUSERINLINE[0]]
  :: GHC.Event.Internal.Event
     -> (# GHC.Types.Char, [GHC.Types.Char] #)
[GblId, Arity=1, Str=<L,1*U(U)>, Unf=OtherCon []] =
    [] \r [w_s9kvP]
        let {
          sat_s9kwa [Occ=Once] :: [GHC.Types.Char]
          [LclId] =
              [w_s9kvP] \u []
                  case w_s9kvP of {
                    GHC.Types.I# x#_s9kvR ->
                        case andI# [x#_s9kvR 1#] of {
                          __DEFAULT ->
                              let {
                                sat_s9kvY [Occ=Once] :: [[GHC.Types.Char]]
                                [LclId] =
                                    [x#_s9kvR] \u []
                                        case andI# [x#_s9kvR 2#] of {
                                          __DEFAULT ->
                                              let {
                                                sat_s9kvV [Occ=Once] :: [[GHC.Types.Char]]
                                                [LclId] =
                                                    [x#_s9kvR] \u []
                                                        case andI# [x#_s9kvR 4#] of {
                                                          __DEFAULT ->
                                                              GHC.Event.Internal.$fShowEvent6;
                                                          0# -> [] [];
                                                        }; } in
                                              let {
                                                sat_s9kvW [Occ=Once] :: [[GHC.Types.Char]]
                                                [LclId] =
                                                    CCCS :! [GHC.Event.Internal.$fShowEvent7
                                                             sat_s9kvV];
                                              } in 
                                                Data.OldList.prependToAll
                                                    GHC.Event.Internal.$fShowEvent9 sat_s9kvW;
                                          0# ->
                                              case andI# [x#_s9kvR 4#] of {
                                                __DEFAULT ->
                                                    Data.OldList.prependToAll
                                                        GHC.Event.Internal.$fShowEvent9
                                                        GHC.Event.Internal.$fShowEvent6;
                                                0# ->
                                                    Data.OldList.prependToAll
                                                        GHC.Event.Internal.$fShowEvent9
                                                        GHC.Types.[];
                                              };
                                        }; } in
                              let {
                                sat_s9kvZ [Occ=Once] :: [[GHC.Types.Char]]
                                [LclId] =
                                    CCCS :! [GHC.Event.Internal.$fShowEvent11 sat_s9kvY];
                              } in 
                                case Data.OldList.intercalate1 sat_s9kvZ of sat_s9kw0 {
                                  __DEFAULT ->
                                      GHC.Base.++ sat_s9kw0 GHC.Event.Internal.$fShowEvent4;
                                };
                          0# ->
                              case andI# [x#_s9kvR 2#] of {
                                __DEFAULT ->
                                    let {
                                      sat_s9kw3 [Occ=Once] :: [[GHC.Types.Char]]
                                      [LclId] =
                                          [x#_s9kvR] \u []
                                              case andI# [x#_s9kvR 4#] of {
                                                __DEFAULT ->
                                                    Data.OldList.prependToAll
                                                        GHC.Event.Internal.$fShowEvent9
                                                        GHC.Event.Internal.$fShowEvent6;
                                                0# ->
                                                    Data.OldList.prependToAll
                                                        GHC.Event.Internal.$fShowEvent9
                                                        GHC.Types.[];
                                              }; } in
                                    let {
                                      sat_s9kw4 [Occ=Once] :: [[GHC.Types.Char]]
                                      [LclId] =
                                          CCCS :! [GHC.Event.Internal.$fShowEvent7 sat_s9kw3];
                                    } in 
                                      case Data.OldList.intercalate1 sat_s9kw4 of sat_s9kw5 {
                                        __DEFAULT ->
                                            GHC.Base.++ sat_s9kw5 GHC.Event.Internal.$fShowEvent4;
                                      };
                                0# ->
                                    case andI# [x#_s9kvR 4#] of {
                                      __DEFAULT ->
                                          let {
                                            sat_s9kw7 [Occ=Once] :: [[GHC.Types.Char]]
                                            [LclId] =
                                                [] \u []
                                                    Data.OldList.prependToAll
                                                        GHC.Event.Internal.$fShowEvent9
                                                        GHC.Types.[]; } in
                                          let {
                                            sat_s9kw8 [Occ=Once] :: [[GHC.Types.Char]]
                                            [LclId] =
                                                CCCS :! [GHC.Event.Internal.$fShowEvent2 sat_s9kw7];
                                          } in 
                                            case Data.OldList.intercalate1 sat_s9kw8 of sat_s9kw9 {
                                              __DEFAULT ->
                                                  GHC.Base.++
                                                      sat_s9kw9 GHC.Event.Internal.$fShowEvent4;
                                            };
                                      0# -> GHC.Event.Internal.$fShowEvent4;
                                    };
                              };
                        };
                  };
        } in  (#,#) [GHC.Event.Internal.$fShowEvent13 sat_s9kwa];

GHC.Event.Internal.$fShowEvent_$cshow [InlPrag=NOUSERINLINE[0]]
  :: GHC.Event.Internal.Event -> GHC.Base.String
[GblId, Arity=1, Str=<L,1*U(U)>m2, Unf=OtherCon []] =
    [] \r [w_s9kwb]
        case GHC.Event.Internal.$w$cshow w_s9kwb of {
          (#,#) ww1_s9kwd [Occ=Once] ww2_s9kwe [Occ=Once] ->
              : [ww1_s9kwd ww2_s9kwe];
        };

GHC.Event.Internal.$fShowEvent_$cshowsPrec
  :: GHC.Types.Int -> GHC.Event.Internal.Event -> GHC.Show.ShowS
[GblId, Arity=3, Str=<L,A><L,1*U(U)><L,1*U>, Unf=OtherCon []] =
    [] \r [ds_s9kwf x_s9kwg s_s9kwh]
        case GHC.Event.Internal.$w$cshow x_s9kwg of {
          (#,#) ww1_s9kwj [Occ=Once] ww2_s9kwk [Occ=Once] ->
              let {
                sat_s9kwl [Occ=Once] :: [GHC.Types.Char]
                [LclId] =
                    CCCS :! [ww1_s9kwj ww2_s9kwk];
              } in  GHC.Base.++ sat_s9kwl s_s9kwh;
        };

GHC.Event.Internal.$fShowEvent1
  :: GHC.Event.Internal.Event -> GHC.Base.String -> [GHC.Types.Char]
[GblId, Arity=2, Str=<L,1*U(U)><L,1*U>, Unf=OtherCon []] =
    [] \r [x_s9kwm s_s9kwn]
        case GHC.Event.Internal.$w$cshow x_s9kwm of {
          (#,#) ww1_s9kwp [Occ=Once] ww2_s9kwq [Occ=Once] ->
              let {
                sat_s9kwr [Occ=Once] :: [GHC.Types.Char]
                [LclId] =
                    CCCS :! [ww1_s9kwp ww2_s9kwq];
              } in  GHC.Base.++ sat_s9kwr s_s9kwn;
        };

GHC.Event.Internal.$fShowEvent_$cshowList
  :: [GHC.Event.Internal.Event] -> GHC.Show.ShowS
[GblId, Arity=2, Str=<S,1*U><L,U>, Unf=OtherCon []] =
    [] \r [ls_s9kws s_s9kwt]
        GHC.Show.showList__
            GHC.Event.Internal.$fShowEvent1 ls_s9kws s_s9kwt;

GHC.Event.Internal.$fShowEvent [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show GHC.Event.Internal.Event
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Event.Internal.$fShowEvent_$cshowsPrec
                                    GHC.Event.Internal.$fShowEvent_$cshow
                                    GHC.Event.Internal.$fShowEvent_$cshowList];

GHC.Event.Internal.Backend
  :: forall a.
     a
     -> (a
         -> GHC.Base.Maybe GHC.Event.Internal.Timeout
         -> (System.Posix.Types.Fd
             -> GHC.Event.Internal.Event -> GHC.Types.IO ())
         -> GHC.Types.IO GHC.Types.Int)
     -> (a
         -> System.Posix.Types.Fd
         -> GHC.Event.Internal.Event
         -> GHC.Event.Internal.Event
         -> GHC.Types.IO GHC.Types.Bool)
     -> (a
         -> System.Posix.Types.Fd
         -> GHC.Event.Internal.Event
         -> GHC.Types.IO GHC.Types.Bool)
     -> (a -> GHC.Types.IO ())
     -> GHC.Event.Internal.Backend
[GblId[DataCon],
 Arity=5,
 Caf=NoCafRefs,
 Str=<L,U><L,U><L,U><L,U><L,U>,
 Unf=OtherCon []] =
    [] \r [eta_B5 eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.Event.Internal.Backend [eta_B5 eta_B4 eta_B3 eta_B2 eta_B1];

GHC.Event.Internal.Timeout
  :: GHC.Prim.Word# -> GHC.Event.Internal.Timeout
[GblId[DataCon],
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U>m1,
 Unf=OtherCon []] =
    [] \r [eta_B1] GHC.Event.Internal.Timeout [eta_B1];

GHC.Event.Internal.Forever :: GHC.Event.Internal.Timeout
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Event.Internal.Forever! [];

GHC.Event.Internal.OneShot :: GHC.Event.Internal.Lifetime
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Event.Internal.OneShot! [];

GHC.Event.Internal.MultiShot :: GHC.Event.Internal.Lifetime
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Event.Internal.MultiShot! [];

