
==================== Pre unarise: ====================
2018-03-16 15:57:56.597352659 UTC

GHC.Event.PSQ.$WBin [InlPrag=INLINE[2]]
  :: forall v.
     GHC.Event.PSQ.Key
     -> GHC.Event.PSQ.Prio
     -> v
     -> GHC.Event.PSQ.Mask
     -> GHC.Event.PSQ.IntPSQ v
     -> GHC.Event.PSQ.IntPSQ v
     -> GHC.Event.PSQ.IntPSQ v
[GblId[DataConWrapper],
 Arity=6,
 Caf=NoCafRefs,
 Str=<S,U><S,U><S,U><S,U><S,U><S,U>m1,
 Unf=OtherCon []] =
    [] \r [dt_s3kda dt_s3kdb dt_s3kdc dt_s3kdd dt_s3kde dt_s3kdf]
        case dt_s3kda of {
          GHC.Types.I# dt_s3kdh [Occ=Once] ->
              case dt_s3kdb of {
                GHC.Word.W64# dt_s3kdj [Occ=Once] ->
                    case dt_s3kdc of dt_s3kdk {
                      __DEFAULT ->
                          case dt_s3kdd of {
                            GHC.Types.I# dt_s3kdm [Occ=Once] ->
                                case dt_s3kde of dt_s3kdn {
                                  __DEFAULT ->
                                      case dt_s3kdf of dt_s3kdo {
                                        __DEFAULT ->
                                            GHC.Event.PSQ.Bin [dt_s3kdh
                                                               dt_s3kdj
                                                               dt_s3kdk
                                                               dt_s3kdm
                                                               dt_s3kdn
                                                               dt_s3kdo];
                                      };
                                };
                          };
                    };
              };
        };

GHC.Event.PSQ.$WTip [InlPrag=INLINE[2]]
  :: forall v.
     GHC.Event.PSQ.Key
     -> GHC.Event.PSQ.Prio -> v -> GHC.Event.PSQ.IntPSQ v
[GblId[DataConWrapper],
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,U><S,U><S,U>m2,
 Unf=OtherCon []] =
    [] \r [dt_s3kdp dt_s3kdq dt_s3kdr]
        case dt_s3kdp of {
          GHC.Types.I# dt_s3kdt [Occ=Once] ->
              case dt_s3kdq of {
                GHC.Word.W64# dt_s3kdv [Occ=Once] ->
                    case dt_s3kdr of dt_s3kdw {
                      __DEFAULT -> GHC.Event.PSQ.Tip [dt_s3kdt dt_s3kdv dt_s3kdw];
                    };
              };
        };

GHC.Event.PSQ.$WE [InlPrag=INLINE[2]]
  :: forall a.
     GHC.Event.PSQ.Key
     -> GHC.Event.PSQ.Prio -> a -> GHC.Event.PSQ.Elem a
[GblId[DataConWrapper],
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,U><S,U><L,U>m,
 Unf=OtherCon []] =
    [] \r [dt_s3kdx dt_s3kdy dt_s3kdz]
        case dt_s3kdx of {
          GHC.Types.I# dt_s3kdB [Occ=Once] ->
              case dt_s3kdy of {
                GHC.Word.W64# dt_s3kdD [Occ=Once] ->
                    GHC.Event.PSQ.E [dt_s3kdB dt_s3kdD dt_s3kdz];
              };
        };

GHC.Event.PSQ.value :: forall a. GHC.Event.PSQ.Elem a -> a
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLS),1*U(A,A,1*U)>,
 Unf=OtherCon []] =
    [] \r [ds_s3kdE]
        case ds_s3kdE of {
          GHC.Event.PSQ.E _ [Occ=Dead] _ [Occ=Dead] ds1_s3kdI [Occ=Once] ->
              ds1_s3kdI;
        };

GHC.Event.PSQ.prio
  :: forall a. GHC.Event.PSQ.Elem a -> GHC.Event.PSQ.Prio
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LSL),1*U(A,U,A)>m,
 Unf=OtherCon []] =
    [] \r [ds_s3kdJ]
        case ds_s3kdJ of {
          GHC.Event.PSQ.E _ [Occ=Dead] dt1_s3kdM [Occ=Once] _ [Occ=Dead] ->
              GHC.Word.W64# [dt1_s3kdM];
        };

GHC.Event.PSQ.key
  :: forall a. GHC.Event.PSQ.Elem a -> GHC.Event.PSQ.Key
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SLL),1*U(U,A,A)>m,
 Unf=OtherCon []] =
    [] \r [ds_s3kdO]
        case ds_s3kdO of {
          GHC.Event.PSQ.E dt_s3kdQ [Occ=Once] _ [Occ=Dead] _ [Occ=Dead] ->
              GHC.Types.I# [dt_s3kdQ];
        };

GHC.Event.PSQ.null
  :: forall v. GHC.Event.PSQ.IntPSQ v -> GHC.Types.Bool
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [ds_s3kdT]
        case ds_s3kdT of {
          __DEFAULT -> GHC.Types.False [];
          GHC.Event.PSQ.Nil -> GHC.Types.True [];
        };

GHC.Event.PSQ.findMin
  :: forall v.
     GHC.Event.PSQ.IntPSQ v -> GHC.Base.Maybe (GHC.Event.PSQ.Elem v)
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [t_s3kdV]
        case t_s3kdV of {
          GHC.Event.PSQ.Bin dt_s3kdX [Occ=Once]
                            dt1_s3kdY [Occ=Once]
                            x_s3kdZ [Occ=Once]
                            _ [Occ=Dead]
                            _ [Occ=Dead]
                            _ [Occ=Dead] ->
              let {
                sat_s3ke3 [Occ=Once] :: GHC.Event.PSQ.Elem v_a3iL1
                [LclId] =
                    CCCS GHC.Event.PSQ.E! [dt_s3kdX dt1_s3kdY x_s3kdZ];
              } in  GHC.Base.Just [sat_s3ke3];
          GHC.Event.PSQ.Tip dt_s3ke4 [Occ=Once]
                            dt1_s3ke5 [Occ=Once]
                            x_s3ke6 [Occ=Once] ->
              let {
                sat_s3ke7 [Occ=Once] :: GHC.Event.PSQ.Elem v_a3iL1
                [LclId] =
                    CCCS GHC.Event.PSQ.E! [dt_s3ke4 dt1_s3ke5 x_s3ke6];
              } in  GHC.Base.Just [sat_s3ke7];
          GHC.Event.PSQ.Nil -> GHC.Base.Nothing [];
        };

GHC.Event.PSQ.empty :: forall v. GHC.Event.PSQ.IntPSQ v
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Event.PSQ.Nil! [];

GHC.Event.PSQ.singleton
  :: forall v.
     GHC.Event.PSQ.Key
     -> GHC.Event.PSQ.Prio -> v -> GHC.Event.PSQ.IntPSQ v
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,U><S,U><S,U>m2,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.Event.PSQ.$WTip eta_B3 eta_B2 eta_B1;

GHC.Event.PSQ.toList_go [Occ=LoopBreaker]
  :: forall v.
     [GHC.Event.PSQ.Elem v]
     -> GHC.Event.PSQ.IntPSQ v -> [GHC.Event.PSQ.Elem v]
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [acc_s3ke8 ds_s3ke9]
        case ds_s3ke9 of {
          GHC.Event.PSQ.Bin dt_s3keb [Occ=Once]
                            dt1_s3kec [Occ=Once]
                            x'_s3ked [Occ=Once]
                            _ [Occ=Dead]
                            l_s3kef [Occ=Once]
                            r_s3keg [Occ=Once] ->
              let {
                sat_s3kej [Occ=Once] :: [GHC.Event.PSQ.Elem v_a3iK3]
                [LclId] =
                    [acc_s3ke8 l_s3kef r_s3keg] \u []
                        let {
                          sat_s3kei [Occ=Once] :: [GHC.Event.PSQ.Elem v_a3iK3]
                          [LclId] =
                              [acc_s3ke8 r_s3keg] \u []
                                  GHC.Event.PSQ.toList_go acc_s3ke8 r_s3keg;
                        } in  GHC.Event.PSQ.toList_go sat_s3kei l_s3kef; } in
              let {
                sat_s3keh [Occ=Once] :: GHC.Event.PSQ.Elem v_a3iK3
                [LclId] =
                    CCCS GHC.Event.PSQ.E! [dt_s3keb dt1_s3kec x'_s3ked];
              } in  : [sat_s3keh sat_s3kej];
          GHC.Event.PSQ.Tip dt_s3kek [Occ=Once]
                            dt1_s3kel [Occ=Once]
                            x'_s3kem [Occ=Once] ->
              let {
                sat_s3ken [Occ=Once] :: GHC.Event.PSQ.Elem v_a3iK3
                [LclId] =
                    CCCS GHC.Event.PSQ.E! [dt_s3kek dt1_s3kel x'_s3kem];
              } in  : [sat_s3ken acc_s3ke8];
          GHC.Event.PSQ.Nil -> acc_s3ke8;
        };

GHC.Event.PSQ.toList
  :: forall v. GHC.Event.PSQ.IntPSQ v -> [GHC.Event.PSQ.Elem v]
[GblId, Arity=1, Caf=NoCafRefs, Unf=OtherCon []] =
    [] \r [eta_B1] GHC.Event.PSQ.toList_go GHC.Types.[] eta_B1;

GHC.Event.PSQ.merge [InlPrag=INLINABLE, Occ=LoopBreaker]
  :: forall v.
     GHC.Event.PSQ.Mask
     -> GHC.Event.PSQ.IntPSQ v
     -> GHC.Event.PSQ.IntPSQ v
     -> GHC.Event.PSQ.IntPSQ v
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,1*U(U)><S,1*U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [m_s3keo l_s3kep r_s3keq]
        case l_s3kep of wild_s3ker {
          GHC.Event.PSQ.Bin dt_s3kes
                            dt1_s3ket
                            lx_s3keu [Occ=Once*]
                            dt2_s3kev [Occ=Once*]
                            ll_s3kew [Occ=Once*]
                            lr_s3kex [Occ=Once*] ->
              case r_s3keq of wild1_s3key {
                GHC.Event.PSQ.Bin dt3_s3kez
                                  dt4_s3keA
                                  rx_s3keB [Occ=Once]
                                  dt5_s3keC [Occ=Once]
                                  rl_s3keD [Occ=Once]
                                  rr_s3keE [Occ=Once] ->
                    let-no-escape {
                      $j_s3keF [Occ=Once*T[0], Dmd=<L,1*U>]
                        :: GHC.Event.PSQ.IntPSQ v_a3iHG
                      [LclId[JoinId(0)], Unf=OtherCon []] =
                          [m_s3keo
                           wild_s3ker
                           dt3_s3kez
                           dt4_s3keA
                           rx_s3keB
                           dt5_s3keC
                           rl_s3keD
                           rr_s3keE] \r []
                              case m_s3keo of {
                                GHC.Types.I# dt7_s3keH [Occ=Once] ->
                                    let {
                                      sat_s3keI [Occ=Once] :: GHC.Event.PSQ.Mask
                                      [LclId] =
                                          CCCS GHC.Types.I#! [dt5_s3keC];
                                    } in 
                                      case
                                          GHC.Event.PSQ.merge sat_s3keI rl_s3keD rr_s3keE
                                      of
                                      dt8_s3keJ
                                      { __DEFAULT ->
                                            GHC.Event.PSQ.Bin [dt3_s3kez
                                                               dt4_s3keA
                                                               rx_s3keB
                                                               dt7_s3keH
                                                               wild_s3ker
                                                               dt8_s3keJ];
                                      };
                              };
                    } in 
                      let-no-escape {
                        $j1_s3keK [Occ=Once*T[0], Dmd=<L,1*U>]
                          :: GHC.Event.PSQ.IntPSQ v_a3iHG
                        [LclId[JoinId(0)], Unf=OtherCon []] =
                            [m_s3keo
                             dt_s3kes
                             dt1_s3ket
                             lx_s3keu
                             dt2_s3kev
                             ll_s3kew
                             lr_s3kex
                             wild1_s3key] \r []
                                case m_s3keo of {
                                  GHC.Types.I# dt7_s3keM [Occ=Once] ->
                                      let {
                                        sat_s3keN [Occ=Once] :: GHC.Event.PSQ.Mask
                                        [LclId] =
                                            CCCS GHC.Types.I#! [dt2_s3kev];
                                      } in 
                                        case
                                            GHC.Event.PSQ.merge sat_s3keN ll_s3kew lr_s3kex
                                        of
                                        dt8_s3keO
                                        { __DEFAULT ->
                                              GHC.Event.PSQ.Bin [dt_s3kes
                                                                 dt1_s3ket
                                                                 lx_s3keu
                                                                 dt7_s3keM
                                                                 dt8_s3keO
                                                                 wild1_s3key];
                                        };
                                };
                      } in 
                        case eqWord# [dt1_s3ket dt4_s3keA] of {
                          __DEFAULT ->
                              case leWord# [dt1_s3ket dt4_s3keA] of {
                                __DEFAULT -> $j_s3keF;
                                1# -> $j1_s3keK;
                              };
                          1# ->
                              case <# [dt_s3kes dt3_s3kez] of {
                                __DEFAULT -> $j_s3keF;
                                1# -> $j1_s3keK;
                              };
                        };
                GHC.Event.PSQ.Tip dt3_s3keS dt4_s3keT rx_s3keU [Occ=Once*] ->
                    let-no-escape {
                      $j_s3keV [Occ=Once*T[0], Dmd=<L,1*U>]
                        :: GHC.Event.PSQ.IntPSQ v_a3iHG
                      [LclId[JoinId(0)], Unf=OtherCon []] =
                          [m_s3keo
                           dt_s3kes
                           dt1_s3ket
                           lx_s3keu
                           dt2_s3kev
                           ll_s3kew
                           lr_s3kex
                           wild1_s3key] \r []
                              case m_s3keo of {
                                GHC.Types.I# dt6_s3keX [Occ=Once] ->
                                    let {
                                      sat_s3keY [Occ=Once] :: GHC.Event.PSQ.Mask
                                      [LclId] =
                                          CCCS GHC.Types.I#! [dt2_s3kev];
                                    } in 
                                      case
                                          GHC.Event.PSQ.merge sat_s3keY ll_s3kew lr_s3kex
                                      of
                                      dt7_s3keZ
                                      { __DEFAULT ->
                                            GHC.Event.PSQ.Bin [dt_s3kes
                                                               dt1_s3ket
                                                               lx_s3keu
                                                               dt6_s3keX
                                                               dt7_s3keZ
                                                               wild1_s3key];
                                      };
                              };
                    } in 
                      case eqWord# [dt1_s3ket dt4_s3keT] of {
                        __DEFAULT ->
                            case leWord# [dt1_s3ket dt4_s3keT] of {
                              __DEFAULT ->
                                  case m_s3keo of {
                                    GHC.Types.I# dt6_s3kf3 [Occ=Once] ->
                                        GHC.Event.PSQ.Bin [dt3_s3keS
                                                           dt4_s3keT
                                                           rx_s3keU
                                                           dt6_s3kf3
                                                           wild_s3ker
                                                           GHC.Event.PSQ.Nil];
                                  };
                              1# -> $j_s3keV;
                            };
                        1# ->
                            case <# [dt_s3kes dt3_s3keS] of {
                              __DEFAULT ->
                                  case m_s3keo of {
                                    GHC.Types.I# dt6_s3kf6 [Occ=Once] ->
                                        GHC.Event.PSQ.Bin [dt3_s3keS
                                                           dt4_s3keT
                                                           rx_s3keU
                                                           dt6_s3kf6
                                                           wild_s3ker
                                                           GHC.Event.PSQ.Nil];
                                  };
                              1# -> $j_s3keV;
                            };
                      };
                GHC.Event.PSQ.Nil -> wild_s3ker;
              };
          GHC.Event.PSQ.Tip dt_s3kf7 dt1_s3kf8 lx_s3kf9 [Occ=Once*] ->
              case r_s3keq of wild1_s3kfa {
                GHC.Event.PSQ.Bin dt2_s3kfb
                                  dt3_s3kfc
                                  rx_s3kfd [Occ=Once]
                                  dt4_s3kfe [Occ=Once]
                                  rl_s3kff [Occ=Once]
                                  rr_s3kfg [Occ=Once] ->
                    let-no-escape {
                      $j_s3kfh [Occ=Once*T[0], Dmd=<L,1*U>]
                        :: GHC.Event.PSQ.IntPSQ v_a3iHG
                      [LclId[JoinId(0)], Unf=OtherCon []] =
                          [m_s3keo
                           wild_s3ker
                           dt2_s3kfb
                           dt3_s3kfc
                           rx_s3kfd
                           dt4_s3kfe
                           rl_s3kff
                           rr_s3kfg] \r []
                              case m_s3keo of {
                                GHC.Types.I# dt6_s3kfj [Occ=Once] ->
                                    let {
                                      sat_s3kfk [Occ=Once] :: GHC.Event.PSQ.Mask
                                      [LclId] =
                                          CCCS GHC.Types.I#! [dt4_s3kfe];
                                    } in 
                                      case
                                          GHC.Event.PSQ.merge sat_s3kfk rl_s3kff rr_s3kfg
                                      of
                                      dt7_s3kfl
                                      { __DEFAULT ->
                                            GHC.Event.PSQ.Bin [dt2_s3kfb
                                                               dt3_s3kfc
                                                               rx_s3kfd
                                                               dt6_s3kfj
                                                               wild_s3ker
                                                               dt7_s3kfl];
                                      };
                              };
                    } in 
                      case eqWord# [dt1_s3kf8 dt3_s3kfc] of {
                        __DEFAULT ->
                            case leWord# [dt1_s3kf8 dt3_s3kfc] of {
                              __DEFAULT -> $j_s3kfh;
                              1# ->
                                  case m_s3keo of {
                                    GHC.Types.I# dt6_s3kfp [Occ=Once] ->
                                        GHC.Event.PSQ.Bin [dt_s3kf7
                                                           dt1_s3kf8
                                                           lx_s3kf9
                                                           dt6_s3kfp
                                                           GHC.Event.PSQ.Nil
                                                           wild1_s3kfa];
                                  };
                            };
                        1# ->
                            case <# [dt_s3kf7 dt2_s3kfb] of {
                              __DEFAULT -> $j_s3kfh;
                              1# ->
                                  case m_s3keo of {
                                    GHC.Types.I# dt6_s3kfs [Occ=Once] ->
                                        GHC.Event.PSQ.Bin [dt_s3kf7
                                                           dt1_s3kf8
                                                           lx_s3kf9
                                                           dt6_s3kfs
                                                           GHC.Event.PSQ.Nil
                                                           wild1_s3kfa];
                                  };
                            };
                      };
                GHC.Event.PSQ.Tip dt2_s3kft dt3_s3kfu rx_s3kfv [Occ=Once*] ->
                    case eqWord# [dt1_s3kf8 dt3_s3kfu] of {
                      __DEFAULT ->
                          case leWord# [dt1_s3kf8 dt3_s3kfu] of {
                            __DEFAULT ->
                                case m_s3keo of {
                                  GHC.Types.I# dt5_s3kfz [Occ=Once] ->
                                      GHC.Event.PSQ.Bin [dt2_s3kft
                                                         dt3_s3kfu
                                                         rx_s3kfv
                                                         dt5_s3kfz
                                                         wild_s3ker
                                                         GHC.Event.PSQ.Nil];
                                };
                            1# ->
                                case m_s3keo of {
                                  GHC.Types.I# dt5_s3kfB [Occ=Once] ->
                                      GHC.Event.PSQ.Bin [dt_s3kf7
                                                         dt1_s3kf8
                                                         lx_s3kf9
                                                         dt5_s3kfB
                                                         GHC.Event.PSQ.Nil
                                                         wild1_s3kfa];
                                };
                          };
                      1# ->
                          case <# [dt_s3kf7 dt2_s3kft] of {
                            __DEFAULT ->
                                case m_s3keo of {
                                  GHC.Types.I# dt5_s3kfE [Occ=Once] ->
                                      GHC.Event.PSQ.Bin [dt2_s3kft
                                                         dt3_s3kfu
                                                         rx_s3kfv
                                                         dt5_s3kfE
                                                         wild_s3ker
                                                         GHC.Event.PSQ.Nil];
                                };
                            1# ->
                                case m_s3keo of {
                                  GHC.Types.I# dt5_s3kfG [Occ=Once] ->
                                      GHC.Event.PSQ.Bin [dt_s3kf7
                                                         dt1_s3kf8
                                                         lx_s3kf9
                                                         dt5_s3kfG
                                                         GHC.Event.PSQ.Nil
                                                         wild1_s3kfa];
                                };
                          };
                    };
                GHC.Event.PSQ.Nil -> wild_s3ker;
              };
          GHC.Event.PSQ.Nil -> r_s3keq;
        };

GHC.Event.PSQ.$watMost [InlPrag=INLINABLE[0]]
  :: forall v.
     GHC.Event.PSQ.Prio
     -> GHC.Event.PSQ.IntPSQ v
     -> (# [GHC.Event.PSQ.Elem v], GHC.Event.PSQ.IntPSQ v #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U(U)><S,1*U>,
 Unf=OtherCon []] =
    [] \r [w_s3kfH w1_s3kfI]
        let {
          $wgo_s3kfJ [InlPrag=NOUSERINLINE[0], Occ=LoopBreaker]
            :: [GHC.Event.PSQ.Elem v_s3jT8]
               -> GHC.Event.PSQ.IntPSQ v_s3jT8
               -> (# [GHC.Event.PSQ.Elem v_s3jT8], GHC.Event.PSQ.IntPSQ v_s3jT8 #)
          [LclId, Arity=2, Str=<L,U><S,1*U>, Unf=OtherCon []] =
              sat-only [w_s3kfH $wgo_s3kfJ] \r [w2_s3kfK w3_s3kfL]
                  case w3_s3kfL of wild_s3kfM {
                    GHC.Event.PSQ.Bin dt_s3kfN [Occ=Once]
                                      dt1_s3kfO
                                      x_s3kfP [Occ=Once]
                                      dt2_s3kfQ [Occ=Once]
                                      l_s3kfR [Occ=Once]
                                      r_s3kfS [Occ=Once] ->
                        case w_s3kfH of {
                          GHC.Word.W64# y_s3kfU [Occ=Once] ->
                              case gtWord# [dt1_s3kfO y_s3kfU] of {
                                __DEFAULT ->
                                    let {
                                      ds_s3kfW [Dmd=<L,U(1*U,1*U)>]
                                        :: ([GHC.Event.PSQ.Elem v_s3jT8],
                                            GHC.Event.PSQ.IntPSQ v_s3jT8)
                                      [LclId] =
                                          [$wgo_s3kfJ w2_s3kfK l_s3kfR] \u []
                                              case $wgo_s3kfJ w2_s3kfK l_s3kfR of {
                                                (#,#) ww1_s3kfY [Occ=Once] ww2_s3kfZ [Occ=Once] ->
                                                    (,) [ww1_s3kfY ww2_s3kfZ];
                                              }; } in
                                    let {
                                      ds1_s3kg0 [Dmd=<L,U(1*U,1*U)>]
                                        :: ([GHC.Event.PSQ.Elem v_s3jT8],
                                            GHC.Event.PSQ.IntPSQ v_s3jT8)
                                      [LclId] =
                                          [$wgo_s3kfJ r_s3kfS ds_s3kfW] \u []
                                              let {
                                                sat_s3kg4 [Occ=Once] :: [GHC.Event.PSQ.Elem v_s3jT8]
                                                [LclId] =
                                                    [ds_s3kfW] \u []
                                                        case ds_s3kfW of {
                                                          (,) acc'_s3kg2 [Occ=Once] _ [Occ=Dead] ->
                                                              acc'_s3kg2;
                                                        };
                                              } in 
                                                case $wgo_s3kfJ sat_s3kg4 r_s3kfS of {
                                                  (#,#) ww1_s3kg6 [Occ=Once] ww2_s3kg7 [Occ=Once] ->
                                                      (,) [ww1_s3kg6 ww2_s3kg7];
                                                }; } in
                                    let {
                                      sat_s3kgl [Occ=Once] :: GHC.Event.PSQ.IntPSQ v_s3jT8
                                      [LclId] =
                                          [dt2_s3kfQ ds_s3kfW ds1_s3kg0] \u []
                                              case ds_s3kfW of {
                                                (,) _ [Occ=Dead] l'_s3kgg [Occ=Once] ->
                                                    case ds1_s3kg0 of {
                                                      (,) _ [Occ=Dead] r'_s3kgj [Occ=Once] ->
                                                          let {
                                                            sat_s3kgk [Occ=Once]
                                                              :: GHC.Event.PSQ.Mask
                                                            [LclId] =
                                                                CCCS GHC.Types.I#! [dt2_s3kfQ];
                                                          } in 
                                                            GHC.Event.PSQ.merge
                                                                sat_s3kgk l'_s3kgg r'_s3kgj;
                                                    };
                                              }; } in
                                    let {
                                      sat_s3kgc [Occ=Once] :: [GHC.Event.PSQ.Elem v_s3jT8]
                                      [LclId] =
                                          [ds1_s3kg0] \u []
                                              case ds1_s3kg0 of {
                                                (,) acc''_s3kga [Occ=Once] _ [Occ=Dead] ->
                                                    acc''_s3kga;
                                              }; } in
                                    let {
                                      sat_s3kg8 [Occ=Once] :: GHC.Event.PSQ.Elem v_s3jT8
                                      [LclId] =
                                          CCCS GHC.Event.PSQ.E! [dt_s3kfN dt1_s3kfO x_s3kfP]; } in
                                    let {
                                      sat_s3kgd [Occ=Once] :: [GHC.Event.PSQ.Elem v_s3jT8]
                                      [LclId] =
                                          CCCS :! [sat_s3kg8 sat_s3kgc];
                                    } in  (#,#) [sat_s3kgd sat_s3kgl];
                                1# -> (#,#) [w2_s3kfK wild_s3kfM];
                              };
                        };
                    GHC.Event.PSQ.Tip dt_s3kgm [Occ=Once]
                                      dt1_s3kgn
                                      x_s3kgo [Occ=Once] ->
                        case w_s3kfH of {
                          GHC.Word.W64# y_s3kgq [Occ=Once] ->
                              case gtWord# [dt1_s3kgn y_s3kgq] of {
                                __DEFAULT ->
                                    let {
                                      sat_s3kgs [Occ=Once] :: GHC.Event.PSQ.Elem v_s3jT8
                                      [LclId] =
                                          CCCS GHC.Event.PSQ.E! [dt_s3kgm dt1_s3kgn x_s3kgo]; } in
                                    let {
                                      sat_s3kgt [Occ=Once] :: [GHC.Event.PSQ.Elem v_s3jT8]
                                      [LclId] =
                                          CCCS :! [sat_s3kgs w2_s3kfK];
                                    } in  (#,#) [sat_s3kgt GHC.Event.PSQ.Nil];
                                1# -> (#,#) [w2_s3kfK wild_s3kfM];
                              };
                        };
                    GHC.Event.PSQ.Nil -> (#,#) [w2_s3kfK GHC.Event.PSQ.Nil];
                  };
        } in  $wgo_s3kfJ GHC.Types.[] w1_s3kfI;

GHC.Event.PSQ.atMost [InlPrag=NOUSERINLINE[0]]
  :: forall v.
     GHC.Event.PSQ.Prio
     -> GHC.Event.PSQ.IntPSQ v
     -> ([GHC.Event.PSQ.Elem v], GHC.Event.PSQ.IntPSQ v)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U(U)><S,1*U>m,
 Unf=OtherCon []] =
    [] \r [w_s3kgu w1_s3kgv]
        case GHC.Event.PSQ.$watMost w_s3kgu w1_s3kgv of {
          (#,#) ww1_s3kgx [Occ=Once] ww2_s3kgy [Occ=Once] ->
              (,) [ww1_s3kgx ww2_s3kgy];
        };

GHC.Event.PSQ.minView [InlPrag=INLINE (sat-args=1)]
  :: forall v.
     GHC.Event.PSQ.IntPSQ v
     -> GHC.Base.Maybe (GHC.Event.PSQ.Elem v, GHC.Event.PSQ.IntPSQ v)
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [t_s3kgz]
        case t_s3kgz of {
          GHC.Event.PSQ.Bin dt_s3kgB [Occ=Once]
                            dt1_s3kgC [Occ=Once]
                            x_s3kgD [Occ=Once]
                            dt2_s3kgE [Occ=Once]
                            l_s3kgF [Occ=Once]
                            r_s3kgG [Occ=Once] ->
              let {
                sat_s3kgJ [Occ=Once] :: GHC.Event.PSQ.IntPSQ v_a3iJO
                [LclId] =
                    [dt2_s3kgE l_s3kgF r_s3kgG] \u []
                        let {
                          sat_s3kgI [Occ=Once] :: GHC.Event.PSQ.Mask
                          [LclId] =
                              CCCS GHC.Types.I#! [dt2_s3kgE];
                        } in  GHC.Event.PSQ.merge sat_s3kgI l_s3kgF r_s3kgG; } in
              let {
                sat_s3kgH [Occ=Once] :: GHC.Event.PSQ.Elem v_a3iJO
                [LclId] =
                    CCCS GHC.Event.PSQ.E! [dt_s3kgB dt1_s3kgC x_s3kgD]; } in
              let {
                sat_s3kgK [Occ=Once]
                  :: (GHC.Event.PSQ.Elem v_a3iJO, GHC.Event.PSQ.IntPSQ v_a3iJO)
                [LclId] =
                    CCCS (,)! [sat_s3kgH sat_s3kgJ];
              } in  GHC.Base.Just [sat_s3kgK];
          GHC.Event.PSQ.Tip dt_s3kgL [Occ=Once]
                            dt1_s3kgM [Occ=Once]
                            x_s3kgN [Occ=Once] ->
              let {
                sat_s3kgO [Occ=Once] :: GHC.Event.PSQ.Elem v_a3iJO
                [LclId] =
                    CCCS GHC.Event.PSQ.E! [dt_s3kgL dt1_s3kgM x_s3kgN]; } in
              let {
                sat_s3kgP [Occ=Once]
                  :: (GHC.Event.PSQ.Elem v_a3iJO, GHC.Event.PSQ.IntPSQ v_a3iJO)
                [LclId] =
                    CCCS (,)! [sat_s3kgO GHC.Event.PSQ.Nil];
              } in  GHC.Base.Just [sat_s3kgP];
          GHC.Event.PSQ.Nil -> GHC.Base.Nothing [];
        };

GHC.Event.PSQ.deleteMin [InlPrag=INLINE (sat-args=1)]
  :: forall v. GHC.Event.PSQ.IntPSQ v -> GHC.Event.PSQ.IntPSQ v
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [t_s3kgQ]
        case t_s3kgQ of {
          GHC.Event.PSQ.Bin _ [Occ=Dead]
                            _ [Occ=Dead]
                            _ [Occ=Dead]
                            dt2_s3kgV [Occ=Once]
                            l_s3kgW [Occ=Once]
                            r_s3kgX [Occ=Once] ->
              let {
                sat_s3kgY [Occ=Once] :: GHC.Event.PSQ.Mask
                [LclId] =
                    CCCS GHC.Types.I#! [dt2_s3kgV];
              } in  GHC.Event.PSQ.merge sat_s3kgY l_s3kgW r_s3kgX;
          GHC.Event.PSQ.Tip _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] ->
              GHC.Event.PSQ.Nil [];
          GHC.Event.PSQ.Nil -> GHC.Event.PSQ.Nil [];
        };

GHC.Event.PSQ.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

GHC.Event.PSQ.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.PSQ.$trModule4];

GHC.Event.PSQ.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.Event.PSQ"#;

GHC.Event.PSQ.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.PSQ.$trModule2];

GHC.Event.PSQ.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [GHC.Event.PSQ.$trModule3
                                     GHC.Event.PSQ.$trModule1];

$krep_r3kcT :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcInt
                                              GHC.Types.[]];

$krep1_r3kcU :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Word.$tcWord64
                                              GHC.Types.[]];

$krep2_r3kcV :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.Unique.$tcUnique
                                              GHC.Types.[]];

$krep3_r3kcW :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepVar! [0#];

GHC.Event.PSQ.$tcElem2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Elem"#;

GHC.Event.PSQ.$tcElem1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.PSQ.$tcElem2];

GHC.Event.PSQ.$tcElem :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [15044414420558834066##
                                    12198171511156299872##
                                    GHC.Event.PSQ.$trModule
                                    GHC.Event.PSQ.$tcElem1
                                    0#
                                    GHC.Types.krep$*Arr*];

$krep4_r3kcX :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep3_r3kcW GHC.Types.[]];

$krep5_r3kcY :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.PSQ.$tcElem
                                              $krep4_r3kcX];

$krep6_r3kcZ :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep3_r3kcW $krep5_r3kcY];

$krep7_r3kd0 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep1_r3kcU $krep6_r3kcZ];

GHC.Event.PSQ.$tc'E1 [InlPrag=NOUSERINLINE[~]] :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_r3kcV $krep7_r3kd0];

GHC.Event.PSQ.$tc'E3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'E"#;

GHC.Event.PSQ.$tc'E2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.PSQ.$tc'E3];

GHC.Event.PSQ.$tc'E :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [11813029942800942247##
                                    17450377919573390885##
                                    GHC.Event.PSQ.$trModule
                                    GHC.Event.PSQ.$tc'E2
                                    1#
                                    GHC.Event.PSQ.$tc'E1];

GHC.Event.PSQ.$tcIntPSQ2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "IntPSQ"#;

GHC.Event.PSQ.$tcIntPSQ1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.PSQ.$tcIntPSQ2];

GHC.Event.PSQ.$tcIntPSQ :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [15246681906271547396##
                                    11594704564387731780##
                                    GHC.Event.PSQ.$trModule
                                    GHC.Event.PSQ.$tcIntPSQ1
                                    0#
                                    GHC.Types.krep$*Arr*];

GHC.Event.PSQ.$tc'Nil1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.PSQ.$tcIntPSQ
                                              $krep4_r3kcX];

GHC.Event.PSQ.$tc'Nil3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Nil"#;

GHC.Event.PSQ.$tc'Nil2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.PSQ.$tc'Nil3];

GHC.Event.PSQ.$tc'Nil :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [9632868263130136899##
                                    16639248836205398404##
                                    GHC.Event.PSQ.$trModule
                                    GHC.Event.PSQ.$tc'Nil2
                                    1#
                                    GHC.Event.PSQ.$tc'Nil1];

$krep8_r3kd1 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep3_r3kcW
                                         GHC.Event.PSQ.$tc'Nil1];

$krep9_r3kd2 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep1_r3kcU $krep8_r3kd1];

GHC.Event.PSQ.$tc'Tip1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_r3kcV $krep9_r3kd2];

GHC.Event.PSQ.$tc'Tip3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Tip"#;

GHC.Event.PSQ.$tc'Tip2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.PSQ.$tc'Tip3];

GHC.Event.PSQ.$tc'Tip :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [4235936270888684142##
                                    17098834253377543597##
                                    GHC.Event.PSQ.$trModule
                                    GHC.Event.PSQ.$tc'Tip2
                                    1#
                                    GHC.Event.PSQ.$tc'Tip1];

$krep10_r3kd3 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [GHC.Event.PSQ.$tc'Nil1
                                         GHC.Event.PSQ.$tc'Nil1];

$krep11_r3kd4 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [GHC.Event.PSQ.$tc'Nil1
                                         $krep10_r3kd3];

$krep12_r3kd5 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_r3kcT $krep11_r3kd4];

$krep13_r3kd6 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep3_r3kcW $krep12_r3kd5];

$krep14_r3kd7 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep1_r3kcU $krep13_r3kd6];

GHC.Event.PSQ.$tc'Bin1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_r3kcV $krep14_r3kd7];

GHC.Event.PSQ.$tc'Bin3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Bin"#;

GHC.Event.PSQ.$tc'Bin2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.PSQ.$tc'Bin3];

GHC.Event.PSQ.$tc'Bin :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [8835322380894053498##
                                    4329944662539077627##
                                    GHC.Event.PSQ.$trModule
                                    GHC.Event.PSQ.$tc'Bin2
                                    1#
                                    GHC.Event.PSQ.$tc'Bin1];

GHC.Event.PSQ.lookup
  :: forall v.
     GHC.Event.PSQ.Key
     -> GHC.Event.PSQ.IntPSQ v -> GHC.Base.Maybe (GHC.Event.PSQ.Prio, v)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U(U)><S,1*U>,
 Unf=OtherCon []] =
    [] \r [k_s3kh2 eta_s3kh3]
        let-no-escape {
          exit_s3kh4 [Occ=OnceL!T[3], Dmd=<L,C(C1(C1(U)))>]
            :: GHC.Prim.Int#
               -> GHC.Prim.Word#
               -> v_a3iMt
               -> GHC.Base.Maybe (GHC.Event.PSQ.Prio, v_a3iMt)
          [LclId[JoinId(3)], Arity=3, Str=<S,U><L,U><L,U>, Unf=OtherCon []] =
              sat-only [k_s3kh2] \r [dt_s3kh5 dt1_s3kh6 x'_s3kh7]
                  case k_s3kh2 of {
                    GHC.Types.I# x_s3kh9 [Occ=Once] ->
                        case ==# [x_s3kh9 dt_s3kh5] of {
                          __DEFAULT -> GHC.Base.Nothing [];
                          1# ->
                              let {
                                sat_s3khb [Occ=Once] :: GHC.Event.PSQ.Prio
                                [LclId] =
                                    CCCS GHC.Word.W64#! [dt1_s3kh6]; } in
                              let {
                                sat_s3khc [Occ=Once] :: (GHC.Event.PSQ.Prio, v_a3iMt)
                                [LclId] =
                                    CCCS (,)! [sat_s3khb x'_s3kh7];
                              } in  GHC.Base.Just [sat_s3khc];
                        };
                  };
        } in 
          let-no-escape {
            go1_s3khd [Occ=LoopBreakerT[1]]
              :: GHC.Event.PSQ.IntPSQ v_a3iMt
                 -> GHC.Base.Maybe (GHC.Event.PSQ.Prio, v_a3iMt)
            [LclId[JoinId(1)], Arity=1, Str=<S,1*U>, Unf=OtherCon []] =
                sat-only [k_s3kh2 exit_s3kh4 go1_s3khd] \r [t_s3khe]
                    case t_s3khe of {
                      GHC.Event.PSQ.Bin dt_s3khg
                                        dt1_s3khh [Occ=Once]
                                        x'_s3khi [Occ=Once]
                                        dt2_s3khj [Occ=Once]
                                        l_s3khk [Occ=Once]
                                        r_s3khl [Occ=Once] ->
                          case k_s3kh2 of {
                            GHC.Types.I# x#_s3khn ->
                                case int2Word# [dt2_s3khj] of m_s3kho [Dmd=<S,U>] {
                                  __DEFAULT ->
                                      case minusWord# [m_s3kho 1##] of sat_s3khq {
                                        __DEFAULT ->
                                            case
                                                xor# [sat_s3khq 18446744073709551615##]
                                            of
                                            sat_s3khr
                                            { __DEFAULT ->
                                                  case
                                                      xor# [sat_s3khr m_s3kho]
                                                  of
                                                  m'_s3khp [Dmd=<S,U>]
                                                  { __DEFAULT ->
                                                        case int2Word# [dt_s3khg] of sat_s3khu {
                                                          __DEFAULT ->
                                                              case
                                                                  and# [sat_s3khu m'_s3khp]
                                                              of
                                                              sat_s3khv
                                                              { __DEFAULT ->
                                                                    case
                                                                        int2Word# [x#_s3khn]
                                                                    of
                                                                    sat_s3khs
                                                                    { __DEFAULT ->
                                                                          case
                                                                              and# [sat_s3khs
                                                                                    m'_s3khp]
                                                                          of
                                                                          sat_s3kht
                                                                          { __DEFAULT ->
                                                                                case
                                                                                    neWord# [sat_s3kht
                                                                                             sat_s3khv]
                                                                                of
                                                                                { __DEFAULT ->
                                                                                      case
                                                                                          ==# [x#_s3khn
                                                                                               dt_s3khg]
                                                                                      of
                                                                                      { __DEFAULT ->
                                                                                            case
                                                                                                int2Word# [x#_s3khn]
                                                                                            of
                                                                                            sat_s3khy
                                                                                            { __DEFAULT ->
                                                                                                  case
                                                                                                      and# [sat_s3khy
                                                                                                            m_s3kho]
                                                                                                  of
                                                                                                  { __DEFAULT ->
                                                                                                        go1_s3khd
                                                                                                            r_s3khl;
                                                                                                    0## ->
                                                                                                        go1_s3khd
                                                                                                            l_s3khk;
                                                                                                  };
                                                                                            };
                                                                                        1# ->
                                                                                            let {
                                                                                              sat_s3khA [Occ=Once]
                                                                                                :: GHC.Event.PSQ.Prio
                                                                                              [LclId] =
                                                                                                  CCCS GHC.Word.W64#! [dt1_s3khh]; } in
                                                                                            let {
                                                                                              sat_s3khB [Occ=Once]
                                                                                                :: (GHC.Event.PSQ.Prio,
                                                                                                    v_a3iMt)
                                                                                              [LclId] =
                                                                                                  CCCS (,)! [sat_s3khA
                                                                                                             x'_s3khi];
                                                                                            } in 
                                                                                              GHC.Base.Just [sat_s3khB];
                                                                                      };
                                                                                  1# ->
                                                                                      GHC.Base.Nothing [];
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                                };
                          };
                      GHC.Event.PSQ.Tip dt_s3khC [Occ=Once]
                                        dt1_s3khD [Occ=Once]
                                        x'_s3khE [Occ=Once] ->
                          exit_s3kh4 dt_s3khC dt1_s3khD x'_s3khE;
                      GHC.Event.PSQ.Nil -> GHC.Base.Nothing [];
                    };
          } in  go1_s3khd eta_s3kh3;

GHC.Event.PSQ.delete [InlPrag=INLINABLE]
  :: forall v.
     GHC.Event.PSQ.Key
     -> GHC.Event.PSQ.IntPSQ v -> GHC.Event.PSQ.IntPSQ v
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U(U)><S,1*U>,
 Unf=OtherCon []] =
    [] \r [k_s3khF eta_s3khG]
        let {
          go1_s3khH [Occ=LoopBreaker]
            :: GHC.Event.PSQ.IntPSQ v_a3iNV -> GHC.Event.PSQ.IntPSQ v_a3iNV
          [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []] =
              sat-only [k_s3khF go1_s3khH] \r [t_s3khI]
                  case t_s3khI of wild_s3khJ {
                    GHC.Event.PSQ.Bin dt_s3khK
                                      dt1_s3khL [Occ=Once*]
                                      x'_s3khM [Occ=Once*]
                                      dt2_s3khN
                                      l_s3khO [Occ=Once*]
                                      r_s3khP [Occ=Once*] ->
                        case k_s3khF of {
                          GHC.Types.I# x#_s3khR ->
                              case int2Word# [dt2_s3khN] of m_s3khS [Dmd=<S,U>] {
                                __DEFAULT ->
                                    case minusWord# [m_s3khS 1##] of sat_s3khU {
                                      __DEFAULT ->
                                          case
                                              xor# [sat_s3khU 18446744073709551615##]
                                          of
                                          sat_s3khV
                                          { __DEFAULT ->
                                                case
                                                    xor# [sat_s3khV m_s3khS]
                                                of
                                                m'_s3khT [Dmd=<S,U>]
                                                { __DEFAULT ->
                                                      case int2Word# [dt_s3khK] of sat_s3khY {
                                                        __DEFAULT ->
                                                            case
                                                                and# [sat_s3khY m'_s3khT]
                                                            of
                                                            sat_s3khZ
                                                            { __DEFAULT ->
                                                                  case
                                                                      int2Word# [x#_s3khR]
                                                                  of
                                                                  sat_s3khW
                                                                  { __DEFAULT ->
                                                                        case
                                                                            and# [sat_s3khW
                                                                                  m'_s3khT]
                                                                        of
                                                                        sat_s3khX
                                                                        { __DEFAULT ->
                                                                              case
                                                                                  neWord# [sat_s3khX
                                                                                           sat_s3khZ]
                                                                              of
                                                                              { __DEFAULT ->
                                                                                    case
                                                                                        ==# [x#_s3khR
                                                                                             dt_s3khK]
                                                                                    of
                                                                                    { __DEFAULT ->
                                                                                          case
                                                                                              int2Word# [x#_s3khR]
                                                                                          of
                                                                                          sat_s3ki2
                                                                                          { __DEFAULT ->
                                                                                                case
                                                                                                    and# [sat_s3ki2
                                                                                                          m_s3khS]
                                                                                                of
                                                                                                { __DEFAULT ->
                                                                                                      case
                                                                                                          go1_s3khH
                                                                                                              r_s3khP
                                                                                                      of
                                                                                                      wild3_s3ki4
                                                                                                      { __DEFAULT ->
                                                                                                            GHC.Event.PSQ.Bin [dt_s3khK
                                                                                                                               dt1_s3khL
                                                                                                                               x'_s3khM
                                                                                                                               dt2_s3khN
                                                                                                                               l_s3khO
                                                                                                                               wild3_s3ki4];
                                                                                                        GHC.Event.PSQ.Nil ->
                                                                                                            case
                                                                                                                l_s3khO
                                                                                                            of
                                                                                                            wild4_s3ki5
                                                                                                            { __DEFAULT ->
                                                                                                                  GHC.Event.PSQ.Bin [dt_s3khK
                                                                                                                                     dt1_s3khL
                                                                                                                                     x'_s3khM
                                                                                                                                     dt2_s3khN
                                                                                                                                     wild4_s3ki5
                                                                                                                                     GHC.Event.PSQ.Nil];
                                                                                                              GHC.Event.PSQ.Nil ->
                                                                                                                  GHC.Event.PSQ.Tip [dt_s3khK
                                                                                                                                     dt1_s3khL
                                                                                                                                     x'_s3khM];
                                                                                                            };
                                                                                                      };
                                                                                                  0## ->
                                                                                                      case
                                                                                                          go1_s3khH
                                                                                                              l_s3khO
                                                                                                      of
                                                                                                      wild3_s3ki6
                                                                                                      { __DEFAULT ->
                                                                                                            GHC.Event.PSQ.Bin [dt_s3khK
                                                                                                                               dt1_s3khL
                                                                                                                               x'_s3khM
                                                                                                                               dt2_s3khN
                                                                                                                               wild3_s3ki6
                                                                                                                               r_s3khP];
                                                                                                        GHC.Event.PSQ.Nil ->
                                                                                                            case
                                                                                                                r_s3khP
                                                                                                            of
                                                                                                            wild4_s3ki7
                                                                                                            { __DEFAULT ->
                                                                                                                  GHC.Event.PSQ.Bin [dt_s3khK
                                                                                                                                     dt1_s3khL
                                                                                                                                     x'_s3khM
                                                                                                                                     dt2_s3khN
                                                                                                                                     GHC.Event.PSQ.Nil
                                                                                                                                     wild4_s3ki7];
                                                                                                              GHC.Event.PSQ.Nil ->
                                                                                                                  GHC.Event.PSQ.Tip [dt_s3khK
                                                                                                                                     dt1_s3khL
                                                                                                                                     x'_s3khM];
                                                                                                            };
                                                                                                      };
                                                                                                };
                                                                                          };
                                                                                      1# ->
                                                                                          let {
                                                                                            sat_s3ki8 [Occ=Once]
                                                                                              :: GHC.Event.PSQ.Mask
                                                                                            [LclId] =
                                                                                                CCCS GHC.Types.I#! [dt2_s3khN];
                                                                                          } in 
                                                                                            GHC.Event.PSQ.merge
                                                                                                sat_s3ki8
                                                                                                l_s3khO
                                                                                                r_s3khP;
                                                                                    };
                                                                                1# -> wild_s3khJ;
                                                                              };
                                                                        };
                                                                  };
                                                            };
                                                      };
                                                };
                                          };
                                    };
                              };
                        };
                    GHC.Event.PSQ.Tip dt_s3ki9 [Occ=Once] _ [Occ=Dead] _ [Occ=Dead] ->
                        case k_s3khF of {
                          GHC.Types.I# x_s3kid [Occ=Once] ->
                              case ==# [x_s3kid dt_s3ki9] of {
                                __DEFAULT -> wild_s3khJ;
                                1# -> GHC.Event.PSQ.Nil [];
                              };
                        };
                    GHC.Event.PSQ.Nil -> GHC.Event.PSQ.Nil [];
                  };
        } in  go1_s3khH eta_s3khG;

GHC.Event.PSQ.deleteView [InlPrag=INLINABLE]
  :: forall v.
     GHC.Event.PSQ.Key
     -> GHC.Event.PSQ.IntPSQ v
     -> GHC.Base.Maybe (GHC.Event.PSQ.Prio, v, GHC.Event.PSQ.IntPSQ v)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U(U)><S,1*U>,
 Unf=OtherCon []] =
    [] \r [k_s3kif t0_s3kig]
        let {
          delFrom_s3kih [Occ=LoopBreaker]
            :: GHC.Event.PSQ.IntPSQ v_a3iOE
               -> (# GHC.Event.PSQ.IntPSQ v_a3iOE,
                     GHC.Base.Maybe (GHC.Event.PSQ.Prio, v_a3iOE) #)
          [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []] =
              sat-only [k_s3kif delFrom_s3kih] \r [t_s3kii]
                  case t_s3kii of wild_s3kij {
                    GHC.Event.PSQ.Bin dt_s3kik
                                      dt1_s3kil [Occ=Once*]
                                      x'_s3kim [Occ=Once*]
                                      dt2_s3kin
                                      l_s3kio [Occ=Once*]
                                      r_s3kip [Occ=Once*] ->
                        case k_s3kif of {
                          GHC.Types.I# x#_s3kir ->
                              case int2Word# [dt2_s3kin] of m_s3kis [Dmd=<S,U>] {
                                __DEFAULT ->
                                    case minusWord# [m_s3kis 1##] of sat_s3kiu {
                                      __DEFAULT ->
                                          case
                                              xor# [sat_s3kiu 18446744073709551615##]
                                          of
                                          sat_s3kiv
                                          { __DEFAULT ->
                                                case
                                                    xor# [sat_s3kiv m_s3kis]
                                                of
                                                m'_s3kit [Dmd=<S,U>]
                                                { __DEFAULT ->
                                                      case int2Word# [dt_s3kik] of sat_s3kiy {
                                                        __DEFAULT ->
                                                            case
                                                                and# [sat_s3kiy m'_s3kit]
                                                            of
                                                            sat_s3kiz
                                                            { __DEFAULT ->
                                                                  case
                                                                      int2Word# [x#_s3kir]
                                                                  of
                                                                  sat_s3kiw
                                                                  { __DEFAULT ->
                                                                        case
                                                                            and# [sat_s3kiw
                                                                                  m'_s3kit]
                                                                        of
                                                                        sat_s3kix
                                                                        { __DEFAULT ->
                                                                              case
                                                                                  neWord# [sat_s3kix
                                                                                           sat_s3kiz]
                                                                              of
                                                                              { __DEFAULT ->
                                                                                    case
                                                                                        ==# [x#_s3kir
                                                                                             dt_s3kik]
                                                                                    of
                                                                                    { __DEFAULT ->
                                                                                          case
                                                                                              int2Word# [x#_s3kir]
                                                                                          of
                                                                                          sat_s3kiC
                                                                                          { __DEFAULT ->
                                                                                                case
                                                                                                    and# [sat_s3kiC
                                                                                                          m_s3kis]
                                                                                                of
                                                                                                { __DEFAULT ->
                                                                                                      case
                                                                                                          delFrom_s3kih
                                                                                                              r_s3kip
                                                                                                      of
                                                                                                      { (#,#) ipv_s3kiF [Occ=Once!]
                                                                                                              ipv1_s3kiG [Occ=Once*] ->
                                                                                                            case
                                                                                                                ipv_s3kiF
                                                                                                            of
                                                                                                            wild3_s3kiH
                                                                                                            { __DEFAULT ->
                                                                                                                  let {
                                                                                                                    sat_s3kiI [Occ=Once]
                                                                                                                      :: GHC.Event.PSQ.IntPSQ
                                                                                                                           v_a3iOE
                                                                                                                    [LclId] =
                                                                                                                        CCCS GHC.Event.PSQ.Bin! [dt_s3kik
                                                                                                                                                 dt1_s3kil
                                                                                                                                                 x'_s3kim
                                                                                                                                                 dt2_s3kin
                                                                                                                                                 l_s3kio
                                                                                                                                                 wild3_s3kiH];
                                                                                                                  } in 
                                                                                                                    (#,#) [sat_s3kiI
                                                                                                                           ipv1_s3kiG];
                                                                                                              GHC.Event.PSQ.Nil ->
                                                                                                                  case
                                                                                                                      l_s3kio
                                                                                                                  of
                                                                                                                  wild4_s3kiJ
                                                                                                                  { __DEFAULT ->
                                                                                                                        let {
                                                                                                                          sat_s3kiK [Occ=Once]
                                                                                                                            :: GHC.Event.PSQ.IntPSQ
                                                                                                                                 v_a3iOE
                                                                                                                          [LclId] =
                                                                                                                              CCCS GHC.Event.PSQ.Bin! [dt_s3kik
                                                                                                                                                       dt1_s3kil
                                                                                                                                                       x'_s3kim
                                                                                                                                                       dt2_s3kin
                                                                                                                                                       wild4_s3kiJ
                                                                                                                                                       GHC.Event.PSQ.Nil];
                                                                                                                        } in 
                                                                                                                          (#,#) [sat_s3kiK
                                                                                                                                 ipv1_s3kiG];
                                                                                                                    GHC.Event.PSQ.Nil ->
                                                                                                                        let {
                                                                                                                          sat_s3kiL [Occ=Once]
                                                                                                                            :: GHC.Event.PSQ.IntPSQ
                                                                                                                                 v_a3iOE
                                                                                                                          [LclId] =
                                                                                                                              CCCS GHC.Event.PSQ.Tip! [dt_s3kik
                                                                                                                                                       dt1_s3kil
                                                                                                                                                       x'_s3kim];
                                                                                                                        } in 
                                                                                                                          (#,#) [sat_s3kiL
                                                                                                                                 ipv1_s3kiG];
                                                                                                                  };
                                                                                                            };
                                                                                                      };
                                                                                                  0## ->
                                                                                                      case
                                                                                                          delFrom_s3kih
                                                                                                              l_s3kio
                                                                                                      of
                                                                                                      { (#,#) ipv_s3kiN [Occ=Once!]
                                                                                                              ipv1_s3kiO [Occ=Once*] ->
                                                                                                            case
                                                                                                                ipv_s3kiN
                                                                                                            of
                                                                                                            wild3_s3kiP
                                                                                                            { __DEFAULT ->
                                                                                                                  let {
                                                                                                                    sat_s3kiQ [Occ=Once]
                                                                                                                      :: GHC.Event.PSQ.IntPSQ
                                                                                                                           v_a3iOE
                                                                                                                    [LclId] =
                                                                                                                        CCCS GHC.Event.PSQ.Bin! [dt_s3kik
                                                                                                                                                 dt1_s3kil
                                                                                                                                                 x'_s3kim
                                                                                                                                                 dt2_s3kin
                                                                                                                                                 wild3_s3kiP
                                                                                                                                                 r_s3kip];
                                                                                                                  } in 
                                                                                                                    (#,#) [sat_s3kiQ
                                                                                                                           ipv1_s3kiO];
                                                                                                              GHC.Event.PSQ.Nil ->
                                                                                                                  case
                                                                                                                      r_s3kip
                                                                                                                  of
                                                                                                                  wild4_s3kiR
                                                                                                                  { __DEFAULT ->
                                                                                                                        let {
                                                                                                                          sat_s3kiS [Occ=Once]
                                                                                                                            :: GHC.Event.PSQ.IntPSQ
                                                                                                                                 v_a3iOE
                                                                                                                          [LclId] =
                                                                                                                              CCCS GHC.Event.PSQ.Bin! [dt_s3kik
                                                                                                                                                       dt1_s3kil
                                                                                                                                                       x'_s3kim
                                                                                                                                                       dt2_s3kin
                                                                                                                                                       GHC.Event.PSQ.Nil
                                                                                                                                                       wild4_s3kiR];
                                                                                                                        } in 
                                                                                                                          (#,#) [sat_s3kiS
                                                                                                                                 ipv1_s3kiO];
                                                                                                                    GHC.Event.PSQ.Nil ->
                                                                                                                        let {
                                                                                                                          sat_s3kiT [Occ=Once]
                                                                                                                            :: GHC.Event.PSQ.IntPSQ
                                                                                                                                 v_a3iOE
                                                                                                                          [LclId] =
                                                                                                                              CCCS GHC.Event.PSQ.Tip! [dt_s3kik
                                                                                                                                                       dt1_s3kil
                                                                                                                                                       x'_s3kim];
                                                                                                                        } in 
                                                                                                                          (#,#) [sat_s3kiT
                                                                                                                                 ipv1_s3kiO];
                                                                                                                  };
                                                                                                            };
                                                                                                      };
                                                                                                };
                                                                                          };
                                                                                      1# ->
                                                                                          let {
                                                                                            sat_s3kiU [Occ=Once]
                                                                                              :: GHC.Event.PSQ.Mask
                                                                                            [LclId] =
                                                                                                CCCS GHC.Types.I#! [dt2_s3kin];
                                                                                          } in 
                                                                                            case
                                                                                                GHC.Event.PSQ.merge
                                                                                                    sat_s3kiU
                                                                                                    l_s3kio
                                                                                                    r_s3kip
                                                                                            of
                                                                                            t'_s3kiV
                                                                                            { __DEFAULT ->
                                                                                                  let {
                                                                                                    sat_s3kiW [Occ=Once]
                                                                                                      :: GHC.Event.PSQ.Prio
                                                                                                    [LclId] =
                                                                                                        CCCS GHC.Word.W64#! [dt1_s3kil]; } in
                                                                                                  let {
                                                                                                    sat_s3kiX [Occ=Once]
                                                                                                      :: (GHC.Event.PSQ.Prio,
                                                                                                          v_a3iOE)
                                                                                                    [LclId] =
                                                                                                        CCCS (,)! [sat_s3kiW
                                                                                                                   x'_s3kim]; } in
                                                                                                  let {
                                                                                                    sat_s3kiY [Occ=Once]
                                                                                                      :: GHC.Base.Maybe
                                                                                                           (GHC.Event.PSQ.Prio,
                                                                                                            v_a3iOE)
                                                                                                    [LclId] =
                                                                                                        CCCS GHC.Base.Just! [sat_s3kiX];
                                                                                                  } in 
                                                                                                    (#,#) [t'_s3kiV
                                                                                                           sat_s3kiY];
                                                                                            };
                                                                                    };
                                                                                1# ->
                                                                                    (#,#) [wild_s3kij
                                                                                           GHC.Base.Nothing];
                                                                              };
                                                                        };
                                                                  };
                                                            };
                                                      };
                                                };
                                          };
                                    };
                              };
                        };
                    GHC.Event.PSQ.Tip dt_s3kiZ [Occ=Once]
                                      dt1_s3kj0 [Occ=Once]
                                      x'_s3kj1 [Occ=Once] ->
                        case k_s3kif of {
                          GHC.Types.I# x_s3kj3 [Occ=Once] ->
                              case ==# [x_s3kj3 dt_s3kiZ] of {
                                __DEFAULT -> (#,#) [wild_s3kij GHC.Base.Nothing];
                                1# ->
                                    let {
                                      sat_s3kj5 [Occ=Once] :: GHC.Event.PSQ.Prio
                                      [LclId] =
                                          CCCS GHC.Word.W64#! [dt1_s3kj0]; } in
                                    let {
                                      sat_s3kj6 [Occ=Once] :: (GHC.Event.PSQ.Prio, v_a3iOE)
                                      [LclId] =
                                          CCCS (,)! [sat_s3kj5 x'_s3kj1]; } in
                                    let {
                                      sat_s3kj7 [Occ=Once]
                                        :: GHC.Base.Maybe (GHC.Event.PSQ.Prio, v_a3iOE)
                                      [LclId] =
                                          CCCS GHC.Base.Just! [sat_s3kj6];
                                    } in  (#,#) [GHC.Event.PSQ.Nil sat_s3kj7];
                              };
                        };
                    GHC.Event.PSQ.Nil -> (#,#) [GHC.Event.PSQ.Nil GHC.Base.Nothing];
                  };
        } in 
          case delFrom_s3kih t0_s3kig of {
            (#,#) ipv_s3kj9 [Occ=Once] ipv1_s3kja [Occ=Once!] ->
                case ipv1_s3kja of {
                  GHC.Base.Nothing -> GHC.Base.Nothing [];
                  GHC.Base.Just ds1_s3kjc [Occ=Once!] ->
                      case ds1_s3kjc of {
                        (,) p_s3kje [Occ=Once] x_s3kjf [Occ=Once] ->
                            let {
                              sat_s3kjg [Occ=Once]
                                :: (GHC.Event.PSQ.Prio, v_a3iOE, GHC.Event.PSQ.IntPSQ v_a3iOE)
                              [LclId] =
                                  CCCS (,,)! [p_s3kje x_s3kjf ipv_s3kj9];
                            } in  GHC.Base.Just [sat_s3kjg];
                      };
                };
          };

GHC.Event.PSQ.$wsize [InlPrag=NOUSERINLINE[0], Occ=LoopBreaker]
  :: forall v. GHC.Event.PSQ.IntPSQ v -> GHC.Prim.Int#
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [w_s3kjh]
        case w_s3kjh of {
          GHC.Event.PSQ.Bin _ [Occ=Dead]
                            _ [Occ=Dead]
                            _ [Occ=Dead]
                            _ [Occ=Dead]
                            l_s3kjn [Occ=Once]
                            r_s3kjo [Occ=Once] ->
              case GHC.Event.PSQ.$wsize l_s3kjn of ww_s3kjp {
                __DEFAULT ->
                    case GHC.Event.PSQ.$wsize r_s3kjo of ww1_s3kjq {
                      __DEFAULT ->
                          case +# [1# ww_s3kjp] of sat_s3kjr {
                            __DEFAULT -> +# [sat_s3kjr ww1_s3kjq];
                          };
                    };
              };
          GHC.Event.PSQ.Tip _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] -> 1#;
          GHC.Event.PSQ.Nil -> 0#;
        };

GHC.Event.PSQ.size [InlPrag=NOUSERINLINE[0]]
  :: forall v. GHC.Event.PSQ.IntPSQ v -> GHC.Types.Int
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>m, Unf=OtherCon []] =
    [] \r [w_s3kjv]
        case GHC.Event.PSQ.$wsize w_s3kjv of ww_s3kjw {
          __DEFAULT -> GHC.Types.I# [ww_s3kjw];
        };

GHC.Event.PSQ.$wunsafeInsertNew [InlPrag=INLINABLE[0],
                                 Occ=LoopBreaker]
  :: forall v.
     GHC.Prim.Int#
     -> GHC.Prim.Word#
     -> v
     -> GHC.Event.PSQ.IntPSQ v
     -> GHC.Event.PSQ.IntPSQ v
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S,U><S,U><S,1*U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [ww_s3kjx ww1_s3kjy w_s3kjz w1_s3kjA]
        case w1_s3kjA of wild_s3kjB {
          GHC.Event.PSQ.Bin dt_s3kjC
                            dt1_s3kjD
                            x'_s3kjE
                            dt2_s3kjF
                            l_s3kjG
                            r_s3kjH ->
              case int2Word# [dt2_s3kjF] of m_s3kjI [Dmd=<S,U>] {
                __DEFAULT ->
                    case minusWord# [m_s3kjI 1##] of sat_s3kjK {
                      __DEFAULT ->
                          case xor# [sat_s3kjK 18446744073709551615##] of sat_s3kjL {
                            __DEFAULT ->
                                case xor# [sat_s3kjL m_s3kjI] of m'_s3kjJ [Dmd=<S,U>] {
                                  __DEFAULT ->
                                      case int2Word# [dt_s3kjC] of sat_s3kjO {
                                        __DEFAULT ->
                                            case and# [sat_s3kjO m'_s3kjJ] of sat_s3kjP {
                                              __DEFAULT ->
                                                  case int2Word# [ww_s3kjx] of sat_s3kjM {
                                                    __DEFAULT ->
                                                        case
                                                            and# [sat_s3kjM m'_s3kjJ]
                                                        of
                                                        sat_s3kjN
                                                        { __DEFAULT ->
                                                              case
                                                                  neWord# [sat_s3kjN sat_s3kjP]
                                                              of
                                                              { __DEFAULT ->
                                                                    let-no-escape {
                                                                      $j_s3kjR [Occ=Once*T[0],
                                                                                Dmd=<L,1*U>]
                                                                        :: GHC.Event.PSQ.IntPSQ
                                                                             v_s3jTx
                                                                      [LclId[JoinId(0)],
                                                                       Unf=OtherCon []] =
                                                                          [ww_s3kjx
                                                                           ww1_s3kjy
                                                                           w_s3kjz
                                                                           dt_s3kjC
                                                                           dt1_s3kjD
                                                                           x'_s3kjE
                                                                           dt2_s3kjF
                                                                           l_s3kjG
                                                                           r_s3kjH
                                                                           m_s3kjI] \r []
                                                                              case
                                                                                  int2Word# [ww_s3kjx]
                                                                              of
                                                                              sat_s3kjS
                                                                              { __DEFAULT ->
                                                                                    case
                                                                                        and# [sat_s3kjS
                                                                                              m_s3kjI]
                                                                                    of
                                                                                    { __DEFAULT ->
                                                                                          case
                                                                                              GHC.Event.PSQ.$wunsafeInsertNew
                                                                                                  ww_s3kjx
                                                                                                  ww1_s3kjy
                                                                                                  w_s3kjz
                                                                                                  r_s3kjH
                                                                                          of
                                                                                          dt3_s3kjU
                                                                                          { __DEFAULT ->
                                                                                                GHC.Event.PSQ.Bin [dt_s3kjC
                                                                                                                   dt1_s3kjD
                                                                                                                   x'_s3kjE
                                                                                                                   dt2_s3kjF
                                                                                                                   l_s3kjG
                                                                                                                   dt3_s3kjU];
                                                                                          };
                                                                                      0## ->
                                                                                          case
                                                                                              GHC.Event.PSQ.$wunsafeInsertNew
                                                                                                  ww_s3kjx
                                                                                                  ww1_s3kjy
                                                                                                  w_s3kjz
                                                                                                  l_s3kjG
                                                                                          of
                                                                                          dt3_s3kjV
                                                                                          { __DEFAULT ->
                                                                                                GHC.Event.PSQ.Bin [dt_s3kjC
                                                                                                                   dt1_s3kjD
                                                                                                                   x'_s3kjE
                                                                                                                   dt2_s3kjF
                                                                                                                   dt3_s3kjV
                                                                                                                   r_s3kjH];
                                                                                          };
                                                                                    };
                                                                              };
                                                                    } in 
                                                                      let-no-escape {
                                                                        $j1_s3kjW [Occ=Once*T[0],
                                                                                   Dmd=<L,1*U>]
                                                                          :: GHC.Event.PSQ.IntPSQ
                                                                               v_s3jTx
                                                                        [LclId[JoinId(0)],
                                                                         Unf=OtherCon []] =
                                                                            [ww_s3kjx
                                                                             ww1_s3kjy
                                                                             w_s3kjz
                                                                             dt_s3kjC
                                                                             dt1_s3kjD
                                                                             x'_s3kjE
                                                                             dt2_s3kjF
                                                                             l_s3kjG
                                                                             r_s3kjH
                                                                             m_s3kjI] \r []
                                                                                case
                                                                                    int2Word# [dt_s3kjC]
                                                                                of
                                                                                sat_s3kjX
                                                                                { __DEFAULT ->
                                                                                      case
                                                                                          and# [sat_s3kjX
                                                                                                m_s3kjI]
                                                                                      of
                                                                                      { __DEFAULT ->
                                                                                            case
                                                                                                w_s3kjz
                                                                                            of
                                                                                            dt3_s3kjZ
                                                                                            { __DEFAULT ->
                                                                                                  case
                                                                                                      GHC.Event.PSQ.$wunsafeInsertNew
                                                                                                          dt_s3kjC
                                                                                                          dt1_s3kjD
                                                                                                          x'_s3kjE
                                                                                                          r_s3kjH
                                                                                                  of
                                                                                                  dt4_s3kk0
                                                                                                  { __DEFAULT ->
                                                                                                        GHC.Event.PSQ.Bin [ww_s3kjx
                                                                                                                           ww1_s3kjy
                                                                                                                           dt3_s3kjZ
                                                                                                                           dt2_s3kjF
                                                                                                                           l_s3kjG
                                                                                                                           dt4_s3kk0];
                                                                                                  };
                                                                                            };
                                                                                        0## ->
                                                                                            case
                                                                                                w_s3kjz
                                                                                            of
                                                                                            dt3_s3kk1
                                                                                            { __DEFAULT ->
                                                                                                  case
                                                                                                      GHC.Event.PSQ.$wunsafeInsertNew
                                                                                                          dt_s3kjC
                                                                                                          dt1_s3kjD
                                                                                                          x'_s3kjE
                                                                                                          l_s3kjG
                                                                                                  of
                                                                                                  dt4_s3kk2
                                                                                                  { __DEFAULT ->
                                                                                                        GHC.Event.PSQ.Bin [ww_s3kjx
                                                                                                                           ww1_s3kjy
                                                                                                                           dt3_s3kk1
                                                                                                                           dt2_s3kjF
                                                                                                                           dt4_s3kk2
                                                                                                                           r_s3kjH];
                                                                                                  };
                                                                                            };
                                                                                      };
                                                                                };
                                                                      } in 
                                                                        case
                                                                            eqWord# [ww1_s3kjy
                                                                                     dt1_s3kjD]
                                                                        of
                                                                        { __DEFAULT ->
                                                                              case
                                                                                  leWord# [ww1_s3kjy
                                                                                           dt1_s3kjD]
                                                                              of
                                                                              { __DEFAULT ->
                                                                                    $j_s3kjR;
                                                                                1# -> $j1_s3kjW;
                                                                              };
                                                                          1# ->
                                                                              case
                                                                                  <# [ww_s3kjx
                                                                                      dt_s3kjC]
                                                                              of
                                                                              { __DEFAULT ->
                                                                                    $j_s3kjR;
                                                                                1# -> $j1_s3kjW;
                                                                              };
                                                                        };
                                                                1# ->
                                                                    let-no-escape {
                                                                      $j_s3kk6 [Occ=Once*T[0],
                                                                                Dmd=<L,1*U>]
                                                                        :: GHC.Event.PSQ.IntPSQ
                                                                             v_s3jTx
                                                                      [LclId[JoinId(0)],
                                                                       Unf=OtherCon []] =
                                                                          [ww_s3kjx
                                                                           ww1_s3kjy
                                                                           w_s3kjz
                                                                           dt_s3kjC
                                                                           dt1_s3kjD
                                                                           x'_s3kjE
                                                                           dt2_s3kjF
                                                                           l_s3kjG
                                                                           r_s3kjH] \r []
                                                                              case
                                                                                  int2Word# [ww_s3kjx]
                                                                              of
                                                                              sat_s3kk9
                                                                              { __DEFAULT ->
                                                                                    case
                                                                                        int2Word# [dt_s3kjC]
                                                                                    of
                                                                                    sat_s3kk8
                                                                                    { __DEFAULT ->
                                                                                          case
                                                                                              xor# [sat_s3kk8
                                                                                                    sat_s3kk9]
                                                                                          of
                                                                                          sat_s3kka
                                                                                          { __DEFAULT ->
                                                                                                case
                                                                                                    clz# [sat_s3kka]
                                                                                                of
                                                                                                sat_s3kkb
                                                                                                { __DEFAULT ->
                                                                                                      case
                                                                                                          minusWord# [63##
                                                                                                                      sat_s3kkb]
                                                                                                      of
                                                                                                      sat_s3kkc
                                                                                                      { __DEFAULT ->
                                                                                                            case
                                                                                                                word2Int# [sat_s3kkc]
                                                                                                            of
                                                                                                            sat_s3kkd
                                                                                                            { __DEFAULT ->
                                                                                                                  case
                                                                                                                      uncheckedShiftL# [1##
                                                                                                                                        sat_s3kkd]
                                                                                                                  of
                                                                                                                  sat_s3kke
                                                                                                                  { __DEFAULT ->
                                                                                                                        case
                                                                                                                            word2Int# [sat_s3kke]
                                                                                                                        of
                                                                                                                        x#_s3kk7 [Dmd=<S,U>]
                                                                                                                        { __DEFAULT ->
                                                                                                                              case
                                                                                                                                  int2Word# [ww_s3kjx]
                                                                                                                              of
                                                                                                                              sat_s3kkg
                                                                                                                              { __DEFAULT ->
                                                                                                                                    case
                                                                                                                                        int2Word# [x#_s3kk7]
                                                                                                                                    of
                                                                                                                                    sat_s3kkf
                                                                                                                                    { __DEFAULT ->
                                                                                                                                          case
                                                                                                                                              and# [sat_s3kkf
                                                                                                                                                    sat_s3kkg]
                                                                                                                                          of
                                                                                                                                          { __DEFAULT ->
                                                                                                                                                let {
                                                                                                                                                  sat_s3kki [Occ=Once]
                                                                                                                                                    :: GHC.Event.PSQ.Mask
                                                                                                                                                  [LclId] =
                                                                                                                                                      CCCS GHC.Types.I#! [dt2_s3kjF];
                                                                                                                                                } in 
                                                                                                                                                  case
                                                                                                                                                      GHC.Event.PSQ.merge
                                                                                                                                                          sat_s3kki
                                                                                                                                                          l_s3kjG
                                                                                                                                                          r_s3kjH
                                                                                                                                                  of
                                                                                                                                                  dt3_s3kkj
                                                                                                                                                  { __DEFAULT ->
                                                                                                                                                        case
                                                                                                                                                            w_s3kjz
                                                                                                                                                        of
                                                                                                                                                        dt4_s3kkk
                                                                                                                                                        { __DEFAULT ->
                                                                                                                                                              let {
                                                                                                                                                                sat_s3kkl [Occ=Once]
                                                                                                                                                                  :: GHC.Event.PSQ.IntPSQ
                                                                                                                                                                       v_s3jTx
                                                                                                                                                                [LclId] =
                                                                                                                                                                    CCCS GHC.Event.PSQ.Tip! [ww_s3kjx
                                                                                                                                                                                             ww1_s3kjy
                                                                                                                                                                                             dt4_s3kkk];
                                                                                                                                                              } in 
                                                                                                                                                                GHC.Event.PSQ.Bin [dt_s3kjC
                                                                                                                                                                                   dt1_s3kjD
                                                                                                                                                                                   x'_s3kjE
                                                                                                                                                                                   x#_s3kk7
                                                                                                                                                                                   dt3_s3kkj
                                                                                                                                                                                   sat_s3kkl];
                                                                                                                                                        };
                                                                                                                                                  };
                                                                                                                                            0## ->
                                                                                                                                                case
                                                                                                                                                    w_s3kjz
                                                                                                                                                of
                                                                                                                                                dt3_s3kkm
                                                                                                                                                { __DEFAULT ->
                                                                                                                                                      let {
                                                                                                                                                        sat_s3kkn [Occ=Once]
                                                                                                                                                          :: GHC.Event.PSQ.Mask
                                                                                                                                                        [LclId] =
                                                                                                                                                            CCCS GHC.Types.I#! [dt2_s3kjF];
                                                                                                                                                      } in 
                                                                                                                                                        case
                                                                                                                                                            GHC.Event.PSQ.merge
                                                                                                                                                                sat_s3kkn
                                                                                                                                                                l_s3kjG
                                                                                                                                                                r_s3kjH
                                                                                                                                                        of
                                                                                                                                                        dt4_s3kko
                                                                                                                                                        { __DEFAULT ->
                                                                                                                                                              let {
                                                                                                                                                                sat_s3kkp [Occ=Once]
                                                                                                                                                                  :: GHC.Event.PSQ.IntPSQ
                                                                                                                                                                       v_s3jTx
                                                                                                                                                                [LclId] =
                                                                                                                                                                    CCCS GHC.Event.PSQ.Tip! [ww_s3kjx
                                                                                                                                                                                             ww1_s3kjy
                                                                                                                                                                                             dt3_s3kkm];
                                                                                                                                                              } in 
                                                                                                                                                                GHC.Event.PSQ.Bin [dt_s3kjC
                                                                                                                                                                                   dt1_s3kjD
                                                                                                                                                                                   x'_s3kjE
                                                                                                                                                                                   x#_s3kk7
                                                                                                                                                                                   sat_s3kkp
                                                                                                                                                                                   dt4_s3kko];
                                                                                                                                                        };
                                                                                                                                                };
                                                                                                                                          };
                                                                                                                                    };
                                                                                                                              };
                                                                                                                        };
                                                                                                                  };
                                                                                                            };
                                                                                                      };
                                                                                                };
                                                                                          };
                                                                                    };
                                                                              };
                                                                    } in 
                                                                      let-no-escape {
                                                                        $j1_s3kkq [Occ=Once*T[0],
                                                                                   Dmd=<L,1*U>]
                                                                          :: GHC.Event.PSQ.IntPSQ
                                                                               v_s3jTx
                                                                        [LclId[JoinId(0)],
                                                                         Unf=OtherCon []] =
                                                                            [ww_s3kjx
                                                                             ww1_s3kjy
                                                                             w_s3kjz
                                                                             wild_s3kjB
                                                                             dt_s3kjC] \r []
                                                                                case
                                                                                    int2Word# [dt_s3kjC]
                                                                                of
                                                                                sat_s3kkt
                                                                                { __DEFAULT ->
                                                                                      case
                                                                                          int2Word# [ww_s3kjx]
                                                                                      of
                                                                                      sat_s3kks
                                                                                      { __DEFAULT ->
                                                                                            case
                                                                                                xor# [sat_s3kks
                                                                                                      sat_s3kkt]
                                                                                            of
                                                                                            sat_s3kku
                                                                                            { __DEFAULT ->
                                                                                                  case
                                                                                                      clz# [sat_s3kku]
                                                                                                  of
                                                                                                  sat_s3kkv
                                                                                                  { __DEFAULT ->
                                                                                                        case
                                                                                                            minusWord# [63##
                                                                                                                        sat_s3kkv]
                                                                                                        of
                                                                                                        sat_s3kkw
                                                                                                        { __DEFAULT ->
                                                                                                              case
                                                                                                                  word2Int# [sat_s3kkw]
                                                                                                              of
                                                                                                              sat_s3kkx
                                                                                                              { __DEFAULT ->
                                                                                                                    case
                                                                                                                        uncheckedShiftL# [1##
                                                                                                                                          sat_s3kkx]
                                                                                                                    of
                                                                                                                    sat_s3kky
                                                                                                                    { __DEFAULT ->
                                                                                                                          case
                                                                                                                              word2Int# [sat_s3kky]
                                                                                                                          of
                                                                                                                          x#_s3kkr [Dmd=<S,U>]
                                                                                                                          { __DEFAULT ->
                                                                                                                                case
                                                                                                                                    int2Word# [dt_s3kjC]
                                                                                                                                of
                                                                                                                                sat_s3kkA
                                                                                                                                { __DEFAULT ->
                                                                                                                                      case
                                                                                                                                          int2Word# [x#_s3kkr]
                                                                                                                                      of
                                                                                                                                      sat_s3kkz
                                                                                                                                      { __DEFAULT ->
                                                                                                                                            case
                                                                                                                                                and# [sat_s3kkz
                                                                                                                                                      sat_s3kkA]
                                                                                                                                            of
                                                                                                                                            { __DEFAULT ->
                                                                                                                                                  case
                                                                                                                                                      w_s3kjz
                                                                                                                                                  of
                                                                                                                                                  dt3_s3kkC
                                                                                                                                                  { __DEFAULT ->
                                                                                                                                                        GHC.Event.PSQ.Bin [ww_s3kjx
                                                                                                                                                                           ww1_s3kjy
                                                                                                                                                                           dt3_s3kkC
                                                                                                                                                                           x#_s3kkr
                                                                                                                                                                           GHC.Event.PSQ.Nil
                                                                                                                                                                           wild_s3kjB];
                                                                                                                                                  };
                                                                                                                                              0## ->
                                                                                                                                                  case
                                                                                                                                                      w_s3kjz
                                                                                                                                                  of
                                                                                                                                                  dt3_s3kkD
                                                                                                                                                  { __DEFAULT ->
                                                                                                                                                        GHC.Event.PSQ.Bin [ww_s3kjx
                                                                                                                                                                           ww1_s3kjy
                                                                                                                                                                           dt3_s3kkD
                                                                                                                                                                           x#_s3kkr
                                                                                                                                                                           wild_s3kjB
                                                                                                                                                                           GHC.Event.PSQ.Nil];
                                                                                                                                                  };
                                                                                                                                            };
                                                                                                                                      };
                                                                                                                                };
                                                                                                                          };
                                                                                                                    };
                                                                                                              };
                                                                                                        };
                                                                                                  };
                                                                                            };
                                                                                      };
                                                                                };
                                                                      } in 
                                                                        case
                                                                            eqWord# [ww1_s3kjy
                                                                                     dt1_s3kjD]
                                                                        of
                                                                        { __DEFAULT ->
                                                                              case
                                                                                  leWord# [ww1_s3kjy
                                                                                           dt1_s3kjD]
                                                                              of
                                                                              { __DEFAULT ->
                                                                                    $j_s3kk6;
                                                                                1# -> $j1_s3kkq;
                                                                              };
                                                                          1# ->
                                                                              case
                                                                                  <# [ww_s3kjx
                                                                                      dt_s3kjC]
                                                                              of
                                                                              { __DEFAULT ->
                                                                                    $j_s3kk6;
                                                                                1# -> $j1_s3kkq;
                                                                              };
                                                                        };
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
          GHC.Event.PSQ.Tip dt_s3kkH dt1_s3kkI x'_s3kkJ [Occ=Once*] ->
              let-no-escape {
                $j_s3kkK [Occ=Once*T[0], Dmd=<L,1*U>]
                  :: GHC.Event.PSQ.IntPSQ v_s3jTx
                [LclId[JoinId(0)], Unf=OtherCon []] =
                    [ww_s3kjx ww1_s3kjy w_s3kjz dt_s3kkH dt1_s3kkI x'_s3kkJ] \r []
                        case int2Word# [ww_s3kjx] of sat_s3kkN {
                          __DEFAULT ->
                              case int2Word# [dt_s3kkH] of sat_s3kkM {
                                __DEFAULT ->
                                    case xor# [sat_s3kkM sat_s3kkN] of sat_s3kkO {
                                      __DEFAULT ->
                                          case clz# [sat_s3kkO] of sat_s3kkP {
                                            __DEFAULT ->
                                                case minusWord# [63## sat_s3kkP] of sat_s3kkQ {
                                                  __DEFAULT ->
                                                      case word2Int# [sat_s3kkQ] of sat_s3kkR {
                                                        __DEFAULT ->
                                                            case
                                                                uncheckedShiftL# [1## sat_s3kkR]
                                                            of
                                                            sat_s3kkS
                                                            { __DEFAULT ->
                                                                  case
                                                                      word2Int# [sat_s3kkS]
                                                                  of
                                                                  x#_s3kkL [Dmd=<S,U>]
                                                                  { __DEFAULT ->
                                                                        case
                                                                            int2Word# [ww_s3kjx]
                                                                        of
                                                                        sat_s3kkU
                                                                        { __DEFAULT ->
                                                                              case
                                                                                  int2Word# [x#_s3kkL]
                                                                              of
                                                                              sat_s3kkT
                                                                              { __DEFAULT ->
                                                                                    case
                                                                                        and# [sat_s3kkT
                                                                                              sat_s3kkU]
                                                                                    of
                                                                                    { __DEFAULT ->
                                                                                          case
                                                                                              w_s3kjz
                                                                                          of
                                                                                          dt2_s3kkW
                                                                                          { __DEFAULT ->
                                                                                                let {
                                                                                                  sat_s3kkX [Occ=Once]
                                                                                                    :: GHC.Event.PSQ.IntPSQ
                                                                                                         v_s3jTx
                                                                                                  [LclId] =
                                                                                                      CCCS GHC.Event.PSQ.Tip! [ww_s3kjx
                                                                                                                               ww1_s3kjy
                                                                                                                               dt2_s3kkW];
                                                                                                } in 
                                                                                                  GHC.Event.PSQ.Bin [dt_s3kkH
                                                                                                                     dt1_s3kkI
                                                                                                                     x'_s3kkJ
                                                                                                                     x#_s3kkL
                                                                                                                     GHC.Event.PSQ.Nil
                                                                                                                     sat_s3kkX];
                                                                                          };
                                                                                      0## ->
                                                                                          case
                                                                                              w_s3kjz
                                                                                          of
                                                                                          dt2_s3kkY
                                                                                          { __DEFAULT ->
                                                                                                let {
                                                                                                  sat_s3kkZ [Occ=Once]
                                                                                                    :: GHC.Event.PSQ.IntPSQ
                                                                                                         v_s3jTx
                                                                                                  [LclId] =
                                                                                                      CCCS GHC.Event.PSQ.Tip! [ww_s3kjx
                                                                                                                               ww1_s3kjy
                                                                                                                               dt2_s3kkY];
                                                                                                } in 
                                                                                                  GHC.Event.PSQ.Bin [dt_s3kkH
                                                                                                                     dt1_s3kkI
                                                                                                                     x'_s3kkJ
                                                                                                                     x#_s3kkL
                                                                                                                     sat_s3kkZ
                                                                                                                     GHC.Event.PSQ.Nil];
                                                                                          };
                                                                                    };
                                                                              };
                                                                        };
                                                                  };
                                                            };
                                                      };
                                                };
                                          };
                                    };
                              };
                        };
              } in 
                let-no-escape {
                  $j1_s3kl0 [Occ=Once*T[0], Dmd=<L,1*U>]
                    :: GHC.Event.PSQ.IntPSQ v_s3jTx
                  [LclId[JoinId(0)], Unf=OtherCon []] =
                      [ww_s3kjx ww1_s3kjy w_s3kjz wild_s3kjB dt_s3kkH] \r []
                          case int2Word# [dt_s3kkH] of sat_s3kl3 {
                            __DEFAULT ->
                                case int2Word# [ww_s3kjx] of sat_s3kl2 {
                                  __DEFAULT ->
                                      case xor# [sat_s3kl2 sat_s3kl3] of sat_s3kl4 {
                                        __DEFAULT ->
                                            case clz# [sat_s3kl4] of sat_s3kl5 {
                                              __DEFAULT ->
                                                  case minusWord# [63## sat_s3kl5] of sat_s3kl6 {
                                                    __DEFAULT ->
                                                        case word2Int# [sat_s3kl6] of sat_s3kl7 {
                                                          __DEFAULT ->
                                                              case
                                                                  uncheckedShiftL# [1## sat_s3kl7]
                                                              of
                                                              sat_s3kl8
                                                              { __DEFAULT ->
                                                                    case
                                                                        word2Int# [sat_s3kl8]
                                                                    of
                                                                    x#_s3kl1 [Dmd=<S,U>]
                                                                    { __DEFAULT ->
                                                                          case
                                                                              int2Word# [dt_s3kkH]
                                                                          of
                                                                          sat_s3kla
                                                                          { __DEFAULT ->
                                                                                case
                                                                                    int2Word# [x#_s3kl1]
                                                                                of
                                                                                sat_s3kl9
                                                                                { __DEFAULT ->
                                                                                      case
                                                                                          and# [sat_s3kl9
                                                                                                sat_s3kla]
                                                                                      of
                                                                                      { __DEFAULT ->
                                                                                            case
                                                                                                w_s3kjz
                                                                                            of
                                                                                            dt2_s3klc
                                                                                            { __DEFAULT ->
                                                                                                  GHC.Event.PSQ.Bin [ww_s3kjx
                                                                                                                     ww1_s3kjy
                                                                                                                     dt2_s3klc
                                                                                                                     x#_s3kl1
                                                                                                                     GHC.Event.PSQ.Nil
                                                                                                                     wild_s3kjB];
                                                                                            };
                                                                                        0## ->
                                                                                            case
                                                                                                w_s3kjz
                                                                                            of
                                                                                            dt2_s3kld
                                                                                            { __DEFAULT ->
                                                                                                  GHC.Event.PSQ.Bin [ww_s3kjx
                                                                                                                     ww1_s3kjy
                                                                                                                     dt2_s3kld
                                                                                                                     x#_s3kl1
                                                                                                                     wild_s3kjB
                                                                                                                     GHC.Event.PSQ.Nil];
                                                                                            };
                                                                                      };
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                                };
                          };
                } in 
                  case eqWord# [ww1_s3kjy dt1_s3kkI] of {
                    __DEFAULT ->
                        case leWord# [ww1_s3kjy dt1_s3kkI] of {
                          __DEFAULT -> $j_s3kkK;
                          1# -> $j1_s3kl0;
                        };
                    1# ->
                        case <# [ww_s3kjx dt_s3kkH] of {
                          __DEFAULT -> $j_s3kkK;
                          1# -> $j1_s3kl0;
                        };
                  };
          GHC.Event.PSQ.Nil ->
              case w_s3kjz of dt_s3klh {
                __DEFAULT -> GHC.Event.PSQ.Tip [ww_s3kjx ww1_s3kjy dt_s3klh];
              };
        };

GHC.Event.PSQ.unsafeInsertNew [InlPrag=NOUSERINLINE[0]]
  :: forall v.
     GHC.Event.PSQ.Key
     -> GHC.Event.PSQ.Prio
     -> v
     -> GHC.Event.PSQ.IntPSQ v
     -> GHC.Event.PSQ.IntPSQ v
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,1*U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [w_s3kli w1_s3klj w2_s3klk w3_s3kll]
        case w_s3kli of {
          GHC.Types.I# ww1_s3kln [Occ=Once] ->
              case w1_s3klj of {
                GHC.Word.W64# ww3_s3klp [Occ=Once] ->
                    GHC.Event.PSQ.$wunsafeInsertNew
                        ww1_s3kln ww3_s3klp w2_s3klk w3_s3kll;
              };
        };

GHC.Event.PSQ.insert
  :: forall v.
     GHC.Event.PSQ.Key
     -> GHC.Event.PSQ.Prio
     -> v
     -> GHC.Event.PSQ.IntPSQ v
     -> GHC.Event.PSQ.IntPSQ v
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,1*U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [k_s3klq p_s3klr x_s3kls t0_s3klt]
        case k_s3klq of ww_s3klu {
          GHC.Types.I# ww1_s3klv [Occ=Once] ->
              case p_s3klr of {
                GHC.Word.W64# ww3_s3klx [Occ=Once] ->
                    case GHC.Event.PSQ.delete ww_s3klu t0_s3klt of sat_s3kly {
                      __DEFAULT ->
                          GHC.Event.PSQ.$wunsafeInsertNew
                              ww1_s3klv ww3_s3klx x_s3kls sat_s3kly;
                    };
              };
        };

go_r3kd8
  :: forall v. [GHC.Event.PSQ.Elem v] -> GHC.Event.PSQ.IntPSQ v
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    sat-only [] \r [ds_s3klz]
        case ds_s3klz of {
          [] -> GHC.Event.PSQ.Nil [];
          : y_s3klB [Occ=Once!] ys_s3klC [Occ=Once] ->
              case y_s3klB of {
                GHC.Event.PSQ.E dt_s3klE dt1_s3klF [Occ=Once] x_s3klG [Occ=Once] ->
                    case go_r3kd8 ys_s3klC of sat_s3klI {
                      __DEFAULT ->
                          let {
                            sat_s3klH [Occ=Once] :: GHC.Event.PSQ.Key
                            [LclId] =
                                CCCS GHC.Types.I#! [dt_s3klE];
                          } in 
                            case GHC.Event.PSQ.delete sat_s3klH sat_s3klI of sat_s3klJ {
                              __DEFAULT ->
                                  GHC.Event.PSQ.$wunsafeInsertNew
                                      dt_s3klE dt1_s3klF x_s3klG sat_s3klJ;
                            };
                    };
              };
        };

GHC.Event.PSQ.fromList [InlPrag=INLINABLE]
  :: forall v. [GHC.Event.PSQ.Elem v] -> GHC.Event.PSQ.IntPSQ v
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [eta_B1] go_r3kd8 eta_B1;

GHC.Event.PSQ.adjust [InlPrag=INLINE (sat-args=3)]
  :: forall a.
     (GHC.Event.PSQ.Prio -> GHC.Event.PSQ.Prio)
     -> GHC.Event.PSQ.Key -> GHC.Event.PSQ.PSQ a -> GHC.Event.PSQ.PSQ a
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,1*C1(U(U))><L,U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [f_s3klK k_s3klL q_s3klM]
        case GHC.Event.PSQ.deleteView k_s3klL q_s3klM of {
          GHC.Base.Nothing -> q_s3klM;
          GHC.Base.Just ds_s3klO [Occ=Once!] ->
              case ds_s3klO of {
                (,,) p_s3klQ [Occ=Once] v_s3klR [Occ=Once] t0'_s3klS [Occ=Once] ->
                    case k_s3klL of {
                      GHC.Types.I# ww1_s3klU [Occ=Once] ->
                          case f_s3klK p_s3klQ of {
                            GHC.Word.W64# ww3_s3klW [Occ=Once] ->
                                GHC.Event.PSQ.$wunsafeInsertNew
                                    ww1_s3klU ww3_s3klW v_s3klR t0'_s3klS;
                          };
                    };
              };
        };

GHC.Event.PSQ.Bin
  :: forall v.
     GHC.Prim.Int#
     -> GHC.Prim.Word#
     -> v
     -> GHC.Prim.Int#
     -> GHC.Event.PSQ.IntPSQ v
     -> GHC.Event.PSQ.IntPSQ v
     -> GHC.Event.PSQ.IntPSQ v
[GblId[DataCon],
 Arity=6,
 Caf=NoCafRefs,
 Str=<L,U><L,U><L,U><L,U><L,U><L,U>m1,
 Unf=OtherCon []] =
    [] \r [eta_B6 eta_B5 eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.Event.PSQ.Bin [eta_B6 eta_B5 eta_B4 eta_B3 eta_B2 eta_B1];

GHC.Event.PSQ.Tip
  :: forall v.
     GHC.Prim.Int# -> GHC.Prim.Word# -> v -> GHC.Event.PSQ.IntPSQ v
[GblId[DataCon],
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,U><L,U><L,U>m2,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.Event.PSQ.Tip [eta_B3 eta_B2 eta_B1];

GHC.Event.PSQ.Nil :: forall v. GHC.Event.PSQ.IntPSQ v
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Event.PSQ.Nil! [];

GHC.Event.PSQ.E
  :: forall a.
     GHC.Prim.Int# -> GHC.Prim.Word# -> a -> GHC.Event.PSQ.Elem a
[GblId[DataCon],
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,U><L,U><L,U>m,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.Event.PSQ.E [eta_B3 eta_B2 eta_B1];


==================== STG syntax: ====================
2018-03-16 15:57:56.633425812 UTC

GHC.Event.PSQ.$WBin [InlPrag=INLINE[2]]
  :: forall v.
     GHC.Event.PSQ.Key
     -> GHC.Event.PSQ.Prio
     -> v
     -> GHC.Event.PSQ.Mask
     -> GHC.Event.PSQ.IntPSQ v
     -> GHC.Event.PSQ.IntPSQ v
     -> GHC.Event.PSQ.IntPSQ v
[GblId[DataConWrapper],
 Arity=6,
 Caf=NoCafRefs,
 Str=<S,U><S,U><S,U><S,U><S,U><S,U>m1,
 Unf=OtherCon []] =
    [] \r [dt_s3kda dt_s3kdb dt_s3kdc dt_s3kdd dt_s3kde dt_s3kdf]
        case dt_s3kda of {
          GHC.Types.I# dt_s3kdh [Occ=Once] ->
              case dt_s3kdb of {
                GHC.Word.W64# dt_s3kdj [Occ=Once] ->
                    case dt_s3kdc of dt_s3kdk {
                      __DEFAULT ->
                          case dt_s3kdd of {
                            GHC.Types.I# dt_s3kdm [Occ=Once] ->
                                case dt_s3kde of dt_s3kdn {
                                  __DEFAULT ->
                                      case dt_s3kdf of dt_s3kdo {
                                        __DEFAULT ->
                                            GHC.Event.PSQ.Bin [dt_s3kdh
                                                               dt_s3kdj
                                                               dt_s3kdk
                                                               dt_s3kdm
                                                               dt_s3kdn
                                                               dt_s3kdo];
                                      };
                                };
                          };
                    };
              };
        };

GHC.Event.PSQ.$WTip [InlPrag=INLINE[2]]
  :: forall v.
     GHC.Event.PSQ.Key
     -> GHC.Event.PSQ.Prio -> v -> GHC.Event.PSQ.IntPSQ v
[GblId[DataConWrapper],
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,U><S,U><S,U>m2,
 Unf=OtherCon []] =
    [] \r [dt_s3kdp dt_s3kdq dt_s3kdr]
        case dt_s3kdp of {
          GHC.Types.I# dt_s3kdt [Occ=Once] ->
              case dt_s3kdq of {
                GHC.Word.W64# dt_s3kdv [Occ=Once] ->
                    case dt_s3kdr of dt_s3kdw {
                      __DEFAULT -> GHC.Event.PSQ.Tip [dt_s3kdt dt_s3kdv dt_s3kdw];
                    };
              };
        };

GHC.Event.PSQ.$WE [InlPrag=INLINE[2]]
  :: forall a.
     GHC.Event.PSQ.Key
     -> GHC.Event.PSQ.Prio -> a -> GHC.Event.PSQ.Elem a
[GblId[DataConWrapper],
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,U><S,U><L,U>m,
 Unf=OtherCon []] =
    [] \r [dt_s3kdx dt_s3kdy dt_s3kdz]
        case dt_s3kdx of {
          GHC.Types.I# dt_s3kdB [Occ=Once] ->
              case dt_s3kdy of {
                GHC.Word.W64# dt_s3kdD [Occ=Once] ->
                    GHC.Event.PSQ.E [dt_s3kdB dt_s3kdD dt_s3kdz];
              };
        };

GHC.Event.PSQ.value :: forall a. GHC.Event.PSQ.Elem a -> a
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLS),1*U(A,A,1*U)>,
 Unf=OtherCon []] =
    [] \r [ds_s3kdE]
        case ds_s3kdE of {
          GHC.Event.PSQ.E _ [Occ=Dead] _ [Occ=Dead] ds1_s3kdI [Occ=Once] ->
              ds1_s3kdI;
        };

GHC.Event.PSQ.prio
  :: forall a. GHC.Event.PSQ.Elem a -> GHC.Event.PSQ.Prio
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LSL),1*U(A,U,A)>m,
 Unf=OtherCon []] =
    [] \r [ds_s3kdJ]
        case ds_s3kdJ of {
          GHC.Event.PSQ.E _ [Occ=Dead] dt1_s3kdM [Occ=Once] _ [Occ=Dead] ->
              GHC.Word.W64# [dt1_s3kdM];
        };

GHC.Event.PSQ.key
  :: forall a. GHC.Event.PSQ.Elem a -> GHC.Event.PSQ.Key
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SLL),1*U(U,A,A)>m,
 Unf=OtherCon []] =
    [] \r [ds_s3kdO]
        case ds_s3kdO of {
          GHC.Event.PSQ.E dt_s3kdQ [Occ=Once] _ [Occ=Dead] _ [Occ=Dead] ->
              GHC.Types.I# [dt_s3kdQ];
        };

GHC.Event.PSQ.null
  :: forall v. GHC.Event.PSQ.IntPSQ v -> GHC.Types.Bool
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [ds_s3kdT]
        case ds_s3kdT of {
          __DEFAULT -> GHC.Types.False [];
          GHC.Event.PSQ.Nil -> GHC.Types.True [];
        };

GHC.Event.PSQ.findMin
  :: forall v.
     GHC.Event.PSQ.IntPSQ v -> GHC.Base.Maybe (GHC.Event.PSQ.Elem v)
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [t_s3kdV]
        case t_s3kdV of {
          GHC.Event.PSQ.Bin dt_s3kdX [Occ=Once]
                            dt1_s3kdY [Occ=Once]
                            x_s3kdZ [Occ=Once]
                            _ [Occ=Dead]
                            _ [Occ=Dead]
                            _ [Occ=Dead] ->
              let {
                sat_s3ke3 [Occ=Once] :: GHC.Event.PSQ.Elem v_a3iL1
                [LclId] =
                    CCCS GHC.Event.PSQ.E! [dt_s3kdX dt1_s3kdY x_s3kdZ];
              } in  GHC.Base.Just [sat_s3ke3];
          GHC.Event.PSQ.Tip dt_s3ke4 [Occ=Once]
                            dt1_s3ke5 [Occ=Once]
                            x_s3ke6 [Occ=Once] ->
              let {
                sat_s3ke7 [Occ=Once] :: GHC.Event.PSQ.Elem v_a3iL1
                [LclId] =
                    CCCS GHC.Event.PSQ.E! [dt_s3ke4 dt1_s3ke5 x_s3ke6];
              } in  GHC.Base.Just [sat_s3ke7];
          GHC.Event.PSQ.Nil -> GHC.Base.Nothing [];
        };

GHC.Event.PSQ.empty :: forall v. GHC.Event.PSQ.IntPSQ v
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Event.PSQ.Nil! [];

GHC.Event.PSQ.singleton
  :: forall v.
     GHC.Event.PSQ.Key
     -> GHC.Event.PSQ.Prio -> v -> GHC.Event.PSQ.IntPSQ v
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,U><S,U><S,U>m2,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.Event.PSQ.$WTip eta_B3 eta_B2 eta_B1;

GHC.Event.PSQ.toList_go [Occ=LoopBreaker]
  :: forall v.
     [GHC.Event.PSQ.Elem v]
     -> GHC.Event.PSQ.IntPSQ v -> [GHC.Event.PSQ.Elem v]
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [acc_s3ke8 ds_s3ke9]
        case ds_s3ke9 of {
          GHC.Event.PSQ.Bin dt_s3keb [Occ=Once]
                            dt1_s3kec [Occ=Once]
                            x'_s3ked [Occ=Once]
                            _ [Occ=Dead]
                            l_s3kef [Occ=Once]
                            r_s3keg [Occ=Once] ->
              let {
                sat_s3kej [Occ=Once] :: [GHC.Event.PSQ.Elem v_a3iK3]
                [LclId] =
                    [acc_s3ke8 l_s3kef r_s3keg] \u []
                        let {
                          sat_s3kei [Occ=Once] :: [GHC.Event.PSQ.Elem v_a3iK3]
                          [LclId] =
                              [acc_s3ke8 r_s3keg] \u []
                                  GHC.Event.PSQ.toList_go acc_s3ke8 r_s3keg;
                        } in  GHC.Event.PSQ.toList_go sat_s3kei l_s3kef; } in
              let {
                sat_s3keh [Occ=Once] :: GHC.Event.PSQ.Elem v_a3iK3
                [LclId] =
                    CCCS GHC.Event.PSQ.E! [dt_s3keb dt1_s3kec x'_s3ked];
              } in  : [sat_s3keh sat_s3kej];
          GHC.Event.PSQ.Tip dt_s3kek [Occ=Once]
                            dt1_s3kel [Occ=Once]
                            x'_s3kem [Occ=Once] ->
              let {
                sat_s3ken [Occ=Once] :: GHC.Event.PSQ.Elem v_a3iK3
                [LclId] =
                    CCCS GHC.Event.PSQ.E! [dt_s3kek dt1_s3kel x'_s3kem];
              } in  : [sat_s3ken acc_s3ke8];
          GHC.Event.PSQ.Nil -> acc_s3ke8;
        };

GHC.Event.PSQ.toList
  :: forall v. GHC.Event.PSQ.IntPSQ v -> [GHC.Event.PSQ.Elem v]
[GblId, Arity=1, Caf=NoCafRefs, Unf=OtherCon []] =
    [] \r [eta_B1] GHC.Event.PSQ.toList_go GHC.Types.[] eta_B1;

GHC.Event.PSQ.merge [InlPrag=INLINABLE, Occ=LoopBreaker]
  :: forall v.
     GHC.Event.PSQ.Mask
     -> GHC.Event.PSQ.IntPSQ v
     -> GHC.Event.PSQ.IntPSQ v
     -> GHC.Event.PSQ.IntPSQ v
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,1*U(U)><S,1*U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [m_s3keo l_s3kep r_s3keq]
        case l_s3kep of wild_s3ker {
          GHC.Event.PSQ.Bin dt_s3kes
                            dt1_s3ket
                            lx_s3keu [Occ=Once*]
                            dt2_s3kev [Occ=Once*]
                            ll_s3kew [Occ=Once*]
                            lr_s3kex [Occ=Once*] ->
              case r_s3keq of wild1_s3key {
                GHC.Event.PSQ.Bin dt3_s3kez
                                  dt4_s3keA
                                  rx_s3keB [Occ=Once]
                                  dt5_s3keC [Occ=Once]
                                  rl_s3keD [Occ=Once]
                                  rr_s3keE [Occ=Once] ->
                    let-no-escape {
                      $j_s3keF [Occ=Once*T[0], Dmd=<L,1*U>]
                        :: GHC.Event.PSQ.IntPSQ v_a3iHG
                      [LclId[JoinId(0)], Unf=OtherCon []] =
                          [m_s3keo
                           wild_s3ker
                           dt3_s3kez
                           dt4_s3keA
                           rx_s3keB
                           dt5_s3keC
                           rl_s3keD
                           rr_s3keE] \r []
                              case m_s3keo of {
                                GHC.Types.I# dt7_s3keH [Occ=Once] ->
                                    let {
                                      sat_s3keI [Occ=Once] :: GHC.Event.PSQ.Mask
                                      [LclId] =
                                          CCCS GHC.Types.I#! [dt5_s3keC];
                                    } in 
                                      case
                                          GHC.Event.PSQ.merge sat_s3keI rl_s3keD rr_s3keE
                                      of
                                      dt8_s3keJ
                                      { __DEFAULT ->
                                            GHC.Event.PSQ.Bin [dt3_s3kez
                                                               dt4_s3keA
                                                               rx_s3keB
                                                               dt7_s3keH
                                                               wild_s3ker
                                                               dt8_s3keJ];
                                      };
                              };
                    } in 
                      let-no-escape {
                        $j1_s3keK [Occ=Once*T[0], Dmd=<L,1*U>]
                          :: GHC.Event.PSQ.IntPSQ v_a3iHG
                        [LclId[JoinId(0)], Unf=OtherCon []] =
                            [m_s3keo
                             dt_s3kes
                             dt1_s3ket
                             lx_s3keu
                             dt2_s3kev
                             ll_s3kew
                             lr_s3kex
                             wild1_s3key] \r []
                                case m_s3keo of {
                                  GHC.Types.I# dt7_s3keM [Occ=Once] ->
                                      let {
                                        sat_s3keN [Occ=Once] :: GHC.Event.PSQ.Mask
                                        [LclId] =
                                            CCCS GHC.Types.I#! [dt2_s3kev];
                                      } in 
                                        case
                                            GHC.Event.PSQ.merge sat_s3keN ll_s3kew lr_s3kex
                                        of
                                        dt8_s3keO
                                        { __DEFAULT ->
                                              GHC.Event.PSQ.Bin [dt_s3kes
                                                                 dt1_s3ket
                                                                 lx_s3keu
                                                                 dt7_s3keM
                                                                 dt8_s3keO
                                                                 wild1_s3key];
                                        };
                                };
                      } in 
                        case eqWord# [dt1_s3ket dt4_s3keA] of {
                          __DEFAULT ->
                              case leWord# [dt1_s3ket dt4_s3keA] of {
                                __DEFAULT -> $j_s3keF;
                                1# -> $j1_s3keK;
                              };
                          1# ->
                              case <# [dt_s3kes dt3_s3kez] of {
                                __DEFAULT -> $j_s3keF;
                                1# -> $j1_s3keK;
                              };
                        };
                GHC.Event.PSQ.Tip dt3_s3keS dt4_s3keT rx_s3keU [Occ=Once*] ->
                    let-no-escape {
                      $j_s3keV [Occ=Once*T[0], Dmd=<L,1*U>]
                        :: GHC.Event.PSQ.IntPSQ v_a3iHG
                      [LclId[JoinId(0)], Unf=OtherCon []] =
                          [m_s3keo
                           dt_s3kes
                           dt1_s3ket
                           lx_s3keu
                           dt2_s3kev
                           ll_s3kew
                           lr_s3kex
                           wild1_s3key] \r []
                              case m_s3keo of {
                                GHC.Types.I# dt6_s3keX [Occ=Once] ->
                                    let {
                                      sat_s3keY [Occ=Once] :: GHC.Event.PSQ.Mask
                                      [LclId] =
                                          CCCS GHC.Types.I#! [dt2_s3kev];
                                    } in 
                                      case
                                          GHC.Event.PSQ.merge sat_s3keY ll_s3kew lr_s3kex
                                      of
                                      dt7_s3keZ
                                      { __DEFAULT ->
                                            GHC.Event.PSQ.Bin [dt_s3kes
                                                               dt1_s3ket
                                                               lx_s3keu
                                                               dt6_s3keX
                                                               dt7_s3keZ
                                                               wild1_s3key];
                                      };
                              };
                    } in 
                      case eqWord# [dt1_s3ket dt4_s3keT] of {
                        __DEFAULT ->
                            case leWord# [dt1_s3ket dt4_s3keT] of {
                              __DEFAULT ->
                                  case m_s3keo of {
                                    GHC.Types.I# dt6_s3kf3 [Occ=Once] ->
                                        GHC.Event.PSQ.Bin [dt3_s3keS
                                                           dt4_s3keT
                                                           rx_s3keU
                                                           dt6_s3kf3
                                                           wild_s3ker
                                                           GHC.Event.PSQ.Nil];
                                  };
                              1# -> $j_s3keV;
                            };
                        1# ->
                            case <# [dt_s3kes dt3_s3keS] of {
                              __DEFAULT ->
                                  case m_s3keo of {
                                    GHC.Types.I# dt6_s3kf6 [Occ=Once] ->
                                        GHC.Event.PSQ.Bin [dt3_s3keS
                                                           dt4_s3keT
                                                           rx_s3keU
                                                           dt6_s3kf6
                                                           wild_s3ker
                                                           GHC.Event.PSQ.Nil];
                                  };
                              1# -> $j_s3keV;
                            };
                      };
                GHC.Event.PSQ.Nil -> wild_s3ker;
              };
          GHC.Event.PSQ.Tip dt_s3kf7 dt1_s3kf8 lx_s3kf9 [Occ=Once*] ->
              case r_s3keq of wild1_s3kfa {
                GHC.Event.PSQ.Bin dt2_s3kfb
                                  dt3_s3kfc
                                  rx_s3kfd [Occ=Once]
                                  dt4_s3kfe [Occ=Once]
                                  rl_s3kff [Occ=Once]
                                  rr_s3kfg [Occ=Once] ->
                    let-no-escape {
                      $j_s3kfh [Occ=Once*T[0], Dmd=<L,1*U>]
                        :: GHC.Event.PSQ.IntPSQ v_a3iHG
                      [LclId[JoinId(0)], Unf=OtherCon []] =
                          [m_s3keo
                           wild_s3ker
                           dt2_s3kfb
                           dt3_s3kfc
                           rx_s3kfd
                           dt4_s3kfe
                           rl_s3kff
                           rr_s3kfg] \r []
                              case m_s3keo of {
                                GHC.Types.I# dt6_s3kfj [Occ=Once] ->
                                    let {
                                      sat_s3kfk [Occ=Once] :: GHC.Event.PSQ.Mask
                                      [LclId] =
                                          CCCS GHC.Types.I#! [dt4_s3kfe];
                                    } in 
                                      case
                                          GHC.Event.PSQ.merge sat_s3kfk rl_s3kff rr_s3kfg
                                      of
                                      dt7_s3kfl
                                      { __DEFAULT ->
                                            GHC.Event.PSQ.Bin [dt2_s3kfb
                                                               dt3_s3kfc
                                                               rx_s3kfd
                                                               dt6_s3kfj
                                                               wild_s3ker
                                                               dt7_s3kfl];
                                      };
                              };
                    } in 
                      case eqWord# [dt1_s3kf8 dt3_s3kfc] of {
                        __DEFAULT ->
                            case leWord# [dt1_s3kf8 dt3_s3kfc] of {
                              __DEFAULT -> $j_s3kfh;
                              1# ->
                                  case m_s3keo of {
                                    GHC.Types.I# dt6_s3kfp [Occ=Once] ->
                                        GHC.Event.PSQ.Bin [dt_s3kf7
                                                           dt1_s3kf8
                                                           lx_s3kf9
                                                           dt6_s3kfp
                                                           GHC.Event.PSQ.Nil
                                                           wild1_s3kfa];
                                  };
                            };
                        1# ->
                            case <# [dt_s3kf7 dt2_s3kfb] of {
                              __DEFAULT -> $j_s3kfh;
                              1# ->
                                  case m_s3keo of {
                                    GHC.Types.I# dt6_s3kfs [Occ=Once] ->
                                        GHC.Event.PSQ.Bin [dt_s3kf7
                                                           dt1_s3kf8
                                                           lx_s3kf9
                                                           dt6_s3kfs
                                                           GHC.Event.PSQ.Nil
                                                           wild1_s3kfa];
                                  };
                            };
                      };
                GHC.Event.PSQ.Tip dt2_s3kft dt3_s3kfu rx_s3kfv [Occ=Once*] ->
                    case eqWord# [dt1_s3kf8 dt3_s3kfu] of {
                      __DEFAULT ->
                          case leWord# [dt1_s3kf8 dt3_s3kfu] of {
                            __DEFAULT ->
                                case m_s3keo of {
                                  GHC.Types.I# dt5_s3kfz [Occ=Once] ->
                                      GHC.Event.PSQ.Bin [dt2_s3kft
                                                         dt3_s3kfu
                                                         rx_s3kfv
                                                         dt5_s3kfz
                                                         wild_s3ker
                                                         GHC.Event.PSQ.Nil];
                                };
                            1# ->
                                case m_s3keo of {
                                  GHC.Types.I# dt5_s3kfB [Occ=Once] ->
                                      GHC.Event.PSQ.Bin [dt_s3kf7
                                                         dt1_s3kf8
                                                         lx_s3kf9
                                                         dt5_s3kfB
                                                         GHC.Event.PSQ.Nil
                                                         wild1_s3kfa];
                                };
                          };
                      1# ->
                          case <# [dt_s3kf7 dt2_s3kft] of {
                            __DEFAULT ->
                                case m_s3keo of {
                                  GHC.Types.I# dt5_s3kfE [Occ=Once] ->
                                      GHC.Event.PSQ.Bin [dt2_s3kft
                                                         dt3_s3kfu
                                                         rx_s3kfv
                                                         dt5_s3kfE
                                                         wild_s3ker
                                                         GHC.Event.PSQ.Nil];
                                };
                            1# ->
                                case m_s3keo of {
                                  GHC.Types.I# dt5_s3kfG [Occ=Once] ->
                                      GHC.Event.PSQ.Bin [dt_s3kf7
                                                         dt1_s3kf8
                                                         lx_s3kf9
                                                         dt5_s3kfG
                                                         GHC.Event.PSQ.Nil
                                                         wild1_s3kfa];
                                };
                          };
                    };
                GHC.Event.PSQ.Nil -> wild_s3ker;
              };
          GHC.Event.PSQ.Nil -> r_s3keq;
        };

GHC.Event.PSQ.$watMost [InlPrag=INLINABLE[0]]
  :: forall v.
     GHC.Event.PSQ.Prio
     -> GHC.Event.PSQ.IntPSQ v
     -> (# [GHC.Event.PSQ.Elem v], GHC.Event.PSQ.IntPSQ v #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U(U)><S,1*U>,
 Unf=OtherCon []] =
    [] \r [w_s3kfH w1_s3kfI]
        let {
          $wgo_s3kfJ [InlPrag=NOUSERINLINE[0], Occ=LoopBreaker]
            :: [GHC.Event.PSQ.Elem v_s3jT8]
               -> GHC.Event.PSQ.IntPSQ v_s3jT8
               -> (# [GHC.Event.PSQ.Elem v_s3jT8], GHC.Event.PSQ.IntPSQ v_s3jT8 #)
          [LclId, Arity=2, Str=<L,U><S,1*U>, Unf=OtherCon []] =
              sat-only [w_s3kfH $wgo_s3kfJ] \r [w2_s3kfK w3_s3kfL]
                  case w3_s3kfL of wild_s3kfM {
                    GHC.Event.PSQ.Bin dt_s3kfN [Occ=Once]
                                      dt1_s3kfO
                                      x_s3kfP [Occ=Once]
                                      dt2_s3kfQ [Occ=Once]
                                      l_s3kfR [Occ=Once]
                                      r_s3kfS [Occ=Once] ->
                        case w_s3kfH of {
                          GHC.Word.W64# y_s3kfU [Occ=Once] ->
                              case gtWord# [dt1_s3kfO y_s3kfU] of {
                                __DEFAULT ->
                                    let {
                                      ds_s3kfW [Dmd=<L,U(1*U,1*U)>]
                                        :: ([GHC.Event.PSQ.Elem v_s3jT8],
                                            GHC.Event.PSQ.IntPSQ v_s3jT8)
                                      [LclId] =
                                          [$wgo_s3kfJ w2_s3kfK l_s3kfR] \u []
                                              case $wgo_s3kfJ w2_s3kfK l_s3kfR of {
                                                (#,#) ww1_s3kfY [Occ=Once] ww2_s3kfZ [Occ=Once] ->
                                                    (,) [ww1_s3kfY ww2_s3kfZ];
                                              }; } in
                                    let {
                                      ds1_s3kg0 [Dmd=<L,U(1*U,1*U)>]
                                        :: ([GHC.Event.PSQ.Elem v_s3jT8],
                                            GHC.Event.PSQ.IntPSQ v_s3jT8)
                                      [LclId] =
                                          [$wgo_s3kfJ r_s3kfS ds_s3kfW] \u []
                                              let {
                                                sat_s3kg4 [Occ=Once] :: [GHC.Event.PSQ.Elem v_s3jT8]
                                                [LclId] =
                                                    [ds_s3kfW] \u []
                                                        case ds_s3kfW of {
                                                          (,) acc'_s3kg2 [Occ=Once] _ [Occ=Dead] ->
                                                              acc'_s3kg2;
                                                        };
                                              } in 
                                                case $wgo_s3kfJ sat_s3kg4 r_s3kfS of {
                                                  (#,#) ww1_s3kg6 [Occ=Once] ww2_s3kg7 [Occ=Once] ->
                                                      (,) [ww1_s3kg6 ww2_s3kg7];
                                                }; } in
                                    let {
                                      sat_s3kgl [Occ=Once] :: GHC.Event.PSQ.IntPSQ v_s3jT8
                                      [LclId] =
                                          [dt2_s3kfQ ds_s3kfW ds1_s3kg0] \u []
                                              case ds_s3kfW of {
                                                (,) _ [Occ=Dead] l'_s3kgg [Occ=Once] ->
                                                    case ds1_s3kg0 of {
                                                      (,) _ [Occ=Dead] r'_s3kgj [Occ=Once] ->
                                                          let {
                                                            sat_s3kgk [Occ=Once]
                                                              :: GHC.Event.PSQ.Mask
                                                            [LclId] =
                                                                CCCS GHC.Types.I#! [dt2_s3kfQ];
                                                          } in 
                                                            GHC.Event.PSQ.merge
                                                                sat_s3kgk l'_s3kgg r'_s3kgj;
                                                    };
                                              }; } in
                                    let {
                                      sat_s3kgc [Occ=Once] :: [GHC.Event.PSQ.Elem v_s3jT8]
                                      [LclId] =
                                          [ds1_s3kg0] \u []
                                              case ds1_s3kg0 of {
                                                (,) acc''_s3kga [Occ=Once] _ [Occ=Dead] ->
                                                    acc''_s3kga;
                                              }; } in
                                    let {
                                      sat_s3kg8 [Occ=Once] :: GHC.Event.PSQ.Elem v_s3jT8
                                      [LclId] =
                                          CCCS GHC.Event.PSQ.E! [dt_s3kfN dt1_s3kfO x_s3kfP]; } in
                                    let {
                                      sat_s3kgd [Occ=Once] :: [GHC.Event.PSQ.Elem v_s3jT8]
                                      [LclId] =
                                          CCCS :! [sat_s3kg8 sat_s3kgc];
                                    } in  (#,#) [sat_s3kgd sat_s3kgl];
                                1# -> (#,#) [w2_s3kfK wild_s3kfM];
                              };
                        };
                    GHC.Event.PSQ.Tip dt_s3kgm [Occ=Once]
                                      dt1_s3kgn
                                      x_s3kgo [Occ=Once] ->
                        case w_s3kfH of {
                          GHC.Word.W64# y_s3kgq [Occ=Once] ->
                              case gtWord# [dt1_s3kgn y_s3kgq] of {
                                __DEFAULT ->
                                    let {
                                      sat_s3kgs [Occ=Once] :: GHC.Event.PSQ.Elem v_s3jT8
                                      [LclId] =
                                          CCCS GHC.Event.PSQ.E! [dt_s3kgm dt1_s3kgn x_s3kgo]; } in
                                    let {
                                      sat_s3kgt [Occ=Once] :: [GHC.Event.PSQ.Elem v_s3jT8]
                                      [LclId] =
                                          CCCS :! [sat_s3kgs w2_s3kfK];
                                    } in  (#,#) [sat_s3kgt GHC.Event.PSQ.Nil];
                                1# -> (#,#) [w2_s3kfK wild_s3kfM];
                              };
                        };
                    GHC.Event.PSQ.Nil -> (#,#) [w2_s3kfK GHC.Event.PSQ.Nil];
                  };
        } in  $wgo_s3kfJ GHC.Types.[] w1_s3kfI;

GHC.Event.PSQ.atMost [InlPrag=NOUSERINLINE[0]]
  :: forall v.
     GHC.Event.PSQ.Prio
     -> GHC.Event.PSQ.IntPSQ v
     -> ([GHC.Event.PSQ.Elem v], GHC.Event.PSQ.IntPSQ v)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U(U)><S,1*U>m,
 Unf=OtherCon []] =
    [] \r [w_s3kgu w1_s3kgv]
        case GHC.Event.PSQ.$watMost w_s3kgu w1_s3kgv of {
          (#,#) ww1_s3kgx [Occ=Once] ww2_s3kgy [Occ=Once] ->
              (,) [ww1_s3kgx ww2_s3kgy];
        };

GHC.Event.PSQ.minView [InlPrag=INLINE (sat-args=1)]
  :: forall v.
     GHC.Event.PSQ.IntPSQ v
     -> GHC.Base.Maybe (GHC.Event.PSQ.Elem v, GHC.Event.PSQ.IntPSQ v)
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [t_s3kgz]
        case t_s3kgz of {
          GHC.Event.PSQ.Bin dt_s3kgB [Occ=Once]
                            dt1_s3kgC [Occ=Once]
                            x_s3kgD [Occ=Once]
                            dt2_s3kgE [Occ=Once]
                            l_s3kgF [Occ=Once]
                            r_s3kgG [Occ=Once] ->
              let {
                sat_s3kgJ [Occ=Once] :: GHC.Event.PSQ.IntPSQ v_a3iJO
                [LclId] =
                    [dt2_s3kgE l_s3kgF r_s3kgG] \u []
                        let {
                          sat_s3kgI [Occ=Once] :: GHC.Event.PSQ.Mask
                          [LclId] =
                              CCCS GHC.Types.I#! [dt2_s3kgE];
                        } in  GHC.Event.PSQ.merge sat_s3kgI l_s3kgF r_s3kgG; } in
              let {
                sat_s3kgH [Occ=Once] :: GHC.Event.PSQ.Elem v_a3iJO
                [LclId] =
                    CCCS GHC.Event.PSQ.E! [dt_s3kgB dt1_s3kgC x_s3kgD]; } in
              let {
                sat_s3kgK [Occ=Once]
                  :: (GHC.Event.PSQ.Elem v_a3iJO, GHC.Event.PSQ.IntPSQ v_a3iJO)
                [LclId] =
                    CCCS (,)! [sat_s3kgH sat_s3kgJ];
              } in  GHC.Base.Just [sat_s3kgK];
          GHC.Event.PSQ.Tip dt_s3kgL [Occ=Once]
                            dt1_s3kgM [Occ=Once]
                            x_s3kgN [Occ=Once] ->
              let {
                sat_s3kgO [Occ=Once] :: GHC.Event.PSQ.Elem v_a3iJO
                [LclId] =
                    CCCS GHC.Event.PSQ.E! [dt_s3kgL dt1_s3kgM x_s3kgN]; } in
              let {
                sat_s3kgP [Occ=Once]
                  :: (GHC.Event.PSQ.Elem v_a3iJO, GHC.Event.PSQ.IntPSQ v_a3iJO)
                [LclId] =
                    CCCS (,)! [sat_s3kgO GHC.Event.PSQ.Nil];
              } in  GHC.Base.Just [sat_s3kgP];
          GHC.Event.PSQ.Nil -> GHC.Base.Nothing [];
        };

GHC.Event.PSQ.deleteMin [InlPrag=INLINE (sat-args=1)]
  :: forall v. GHC.Event.PSQ.IntPSQ v -> GHC.Event.PSQ.IntPSQ v
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [t_s3kgQ]
        case t_s3kgQ of {
          GHC.Event.PSQ.Bin _ [Occ=Dead]
                            _ [Occ=Dead]
                            _ [Occ=Dead]
                            dt2_s3kgV [Occ=Once]
                            l_s3kgW [Occ=Once]
                            r_s3kgX [Occ=Once] ->
              let {
                sat_s3kgY [Occ=Once] :: GHC.Event.PSQ.Mask
                [LclId] =
                    CCCS GHC.Types.I#! [dt2_s3kgV];
              } in  GHC.Event.PSQ.merge sat_s3kgY l_s3kgW r_s3kgX;
          GHC.Event.PSQ.Tip _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] ->
              GHC.Event.PSQ.Nil [];
          GHC.Event.PSQ.Nil -> GHC.Event.PSQ.Nil [];
        };

GHC.Event.PSQ.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

GHC.Event.PSQ.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.PSQ.$trModule4];

GHC.Event.PSQ.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.Event.PSQ"#;

GHC.Event.PSQ.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.PSQ.$trModule2];

GHC.Event.PSQ.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [GHC.Event.PSQ.$trModule3
                                     GHC.Event.PSQ.$trModule1];

$krep_r3kcT :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcInt
                                              GHC.Types.[]];

$krep1_r3kcU :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Word.$tcWord64
                                              GHC.Types.[]];

$krep2_r3kcV :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.Unique.$tcUnique
                                              GHC.Types.[]];

$krep3_r3kcW :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepVar! [0#];

GHC.Event.PSQ.$tcElem2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Elem"#;

GHC.Event.PSQ.$tcElem1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.PSQ.$tcElem2];

GHC.Event.PSQ.$tcElem :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [15044414420558834066##
                                    12198171511156299872##
                                    GHC.Event.PSQ.$trModule
                                    GHC.Event.PSQ.$tcElem1
                                    0#
                                    GHC.Types.krep$*Arr*];

$krep4_r3kcX :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep3_r3kcW GHC.Types.[]];

$krep5_r3kcY :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.PSQ.$tcElem
                                              $krep4_r3kcX];

$krep6_r3kcZ :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep3_r3kcW $krep5_r3kcY];

$krep7_r3kd0 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep1_r3kcU $krep6_r3kcZ];

GHC.Event.PSQ.$tc'E1 [InlPrag=NOUSERINLINE[~]] :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_r3kcV $krep7_r3kd0];

GHC.Event.PSQ.$tc'E3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'E"#;

GHC.Event.PSQ.$tc'E2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.PSQ.$tc'E3];

GHC.Event.PSQ.$tc'E :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [11813029942800942247##
                                    17450377919573390885##
                                    GHC.Event.PSQ.$trModule
                                    GHC.Event.PSQ.$tc'E2
                                    1#
                                    GHC.Event.PSQ.$tc'E1];

GHC.Event.PSQ.$tcIntPSQ2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "IntPSQ"#;

GHC.Event.PSQ.$tcIntPSQ1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.PSQ.$tcIntPSQ2];

GHC.Event.PSQ.$tcIntPSQ :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [15246681906271547396##
                                    11594704564387731780##
                                    GHC.Event.PSQ.$trModule
                                    GHC.Event.PSQ.$tcIntPSQ1
                                    0#
                                    GHC.Types.krep$*Arr*];

GHC.Event.PSQ.$tc'Nil1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.PSQ.$tcIntPSQ
                                              $krep4_r3kcX];

GHC.Event.PSQ.$tc'Nil3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Nil"#;

GHC.Event.PSQ.$tc'Nil2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.PSQ.$tc'Nil3];

GHC.Event.PSQ.$tc'Nil :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [9632868263130136899##
                                    16639248836205398404##
                                    GHC.Event.PSQ.$trModule
                                    GHC.Event.PSQ.$tc'Nil2
                                    1#
                                    GHC.Event.PSQ.$tc'Nil1];

$krep8_r3kd1 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep3_r3kcW
                                         GHC.Event.PSQ.$tc'Nil1];

$krep9_r3kd2 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep1_r3kcU $krep8_r3kd1];

GHC.Event.PSQ.$tc'Tip1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_r3kcV $krep9_r3kd2];

GHC.Event.PSQ.$tc'Tip3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Tip"#;

GHC.Event.PSQ.$tc'Tip2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.PSQ.$tc'Tip3];

GHC.Event.PSQ.$tc'Tip :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [4235936270888684142##
                                    17098834253377543597##
                                    GHC.Event.PSQ.$trModule
                                    GHC.Event.PSQ.$tc'Tip2
                                    1#
                                    GHC.Event.PSQ.$tc'Tip1];

$krep10_r3kd3 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [GHC.Event.PSQ.$tc'Nil1
                                         GHC.Event.PSQ.$tc'Nil1];

$krep11_r3kd4 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [GHC.Event.PSQ.$tc'Nil1
                                         $krep10_r3kd3];

$krep12_r3kd5 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_r3kcT $krep11_r3kd4];

$krep13_r3kd6 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep3_r3kcW $krep12_r3kd5];

$krep14_r3kd7 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep1_r3kcU $krep13_r3kd6];

GHC.Event.PSQ.$tc'Bin1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_r3kcV $krep14_r3kd7];

GHC.Event.PSQ.$tc'Bin3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Bin"#;

GHC.Event.PSQ.$tc'Bin2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.PSQ.$tc'Bin3];

GHC.Event.PSQ.$tc'Bin :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [8835322380894053498##
                                    4329944662539077627##
                                    GHC.Event.PSQ.$trModule
                                    GHC.Event.PSQ.$tc'Bin2
                                    1#
                                    GHC.Event.PSQ.$tc'Bin1];

GHC.Event.PSQ.lookup
  :: forall v.
     GHC.Event.PSQ.Key
     -> GHC.Event.PSQ.IntPSQ v -> GHC.Base.Maybe (GHC.Event.PSQ.Prio, v)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U(U)><S,1*U>,
 Unf=OtherCon []] =
    [] \r [k_s3kh2 eta_s3kh3]
        let-no-escape {
          exit_s3kh4 [Occ=OnceL!T[3], Dmd=<L,C(C1(C1(U)))>]
            :: GHC.Prim.Int#
               -> GHC.Prim.Word#
               -> v_a3iMt
               -> GHC.Base.Maybe (GHC.Event.PSQ.Prio, v_a3iMt)
          [LclId[JoinId(3)], Arity=3, Str=<S,U><L,U><L,U>, Unf=OtherCon []] =
              sat-only [k_s3kh2] \r [dt_s3kh5 dt1_s3kh6 x'_s3kh7]
                  case k_s3kh2 of {
                    GHC.Types.I# x_s3kh9 [Occ=Once] ->
                        case ==# [x_s3kh9 dt_s3kh5] of {
                          __DEFAULT -> GHC.Base.Nothing [];
                          1# ->
                              let {
                                sat_s3khb [Occ=Once] :: GHC.Event.PSQ.Prio
                                [LclId] =
                                    CCCS GHC.Word.W64#! [dt1_s3kh6]; } in
                              let {
                                sat_s3khc [Occ=Once] :: (GHC.Event.PSQ.Prio, v_a3iMt)
                                [LclId] =
                                    CCCS (,)! [sat_s3khb x'_s3kh7];
                              } in  GHC.Base.Just [sat_s3khc];
                        };
                  };
        } in 
          let-no-escape {
            go1_s3khd [Occ=LoopBreakerT[1]]
              :: GHC.Event.PSQ.IntPSQ v_a3iMt
                 -> GHC.Base.Maybe (GHC.Event.PSQ.Prio, v_a3iMt)
            [LclId[JoinId(1)], Arity=1, Str=<S,1*U>, Unf=OtherCon []] =
                sat-only [k_s3kh2 exit_s3kh4 go1_s3khd] \r [t_s3khe]
                    case t_s3khe of {
                      GHC.Event.PSQ.Bin dt_s3khg
                                        dt1_s3khh [Occ=Once]
                                        x'_s3khi [Occ=Once]
                                        dt2_s3khj [Occ=Once]
                                        l_s3khk [Occ=Once]
                                        r_s3khl [Occ=Once] ->
                          case k_s3kh2 of {
                            GHC.Types.I# x#_s3khn ->
                                case int2Word# [dt2_s3khj] of m_s3kho [Dmd=<S,U>] {
                                  __DEFAULT ->
                                      case minusWord# [m_s3kho 1##] of sat_s3khq {
                                        __DEFAULT ->
                                            case
                                                xor# [sat_s3khq 18446744073709551615##]
                                            of
                                            sat_s3khr
                                            { __DEFAULT ->
                                                  case
                                                      xor# [sat_s3khr m_s3kho]
                                                  of
                                                  m'_s3khp [Dmd=<S,U>]
                                                  { __DEFAULT ->
                                                        case int2Word# [dt_s3khg] of sat_s3khu {
                                                          __DEFAULT ->
                                                              case
                                                                  and# [sat_s3khu m'_s3khp]
                                                              of
                                                              sat_s3khv
                                                              { __DEFAULT ->
                                                                    case
                                                                        int2Word# [x#_s3khn]
                                                                    of
                                                                    sat_s3khs
                                                                    { __DEFAULT ->
                                                                          case
                                                                              and# [sat_s3khs
                                                                                    m'_s3khp]
                                                                          of
                                                                          sat_s3kht
                                                                          { __DEFAULT ->
                                                                                case
                                                                                    neWord# [sat_s3kht
                                                                                             sat_s3khv]
                                                                                of
                                                                                { __DEFAULT ->
                                                                                      case
                                                                                          ==# [x#_s3khn
                                                                                               dt_s3khg]
                                                                                      of
                                                                                      { __DEFAULT ->
                                                                                            case
                                                                                                int2Word# [x#_s3khn]
                                                                                            of
                                                                                            sat_s3khy
                                                                                            { __DEFAULT ->
                                                                                                  case
                                                                                                      and# [sat_s3khy
                                                                                                            m_s3kho]
                                                                                                  of
                                                                                                  { __DEFAULT ->
                                                                                                        go1_s3khd
                                                                                                            r_s3khl;
                                                                                                    0## ->
                                                                                                        go1_s3khd
                                                                                                            l_s3khk;
                                                                                                  };
                                                                                            };
                                                                                        1# ->
                                                                                            let {
                                                                                              sat_s3khA [Occ=Once]
                                                                                                :: GHC.Event.PSQ.Prio
                                                                                              [LclId] =
                                                                                                  CCCS GHC.Word.W64#! [dt1_s3khh]; } in
                                                                                            let {
                                                                                              sat_s3khB [Occ=Once]
                                                                                                :: (GHC.Event.PSQ.Prio,
                                                                                                    v_a3iMt)
                                                                                              [LclId] =
                                                                                                  CCCS (,)! [sat_s3khA
                                                                                                             x'_s3khi];
                                                                                            } in 
                                                                                              GHC.Base.Just [sat_s3khB];
                                                                                      };
                                                                                  1# ->
                                                                                      GHC.Base.Nothing [];
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                                };
                          };
                      GHC.Event.PSQ.Tip dt_s3khC [Occ=Once]
                                        dt1_s3khD [Occ=Once]
                                        x'_s3khE [Occ=Once] ->
                          exit_s3kh4 dt_s3khC dt1_s3khD x'_s3khE;
                      GHC.Event.PSQ.Nil -> GHC.Base.Nothing [];
                    };
          } in  go1_s3khd eta_s3kh3;

GHC.Event.PSQ.delete [InlPrag=INLINABLE]
  :: forall v.
     GHC.Event.PSQ.Key
     -> GHC.Event.PSQ.IntPSQ v -> GHC.Event.PSQ.IntPSQ v
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U(U)><S,1*U>,
 Unf=OtherCon []] =
    [] \r [k_s3khF eta_s3khG]
        let {
          go1_s3khH [Occ=LoopBreaker]
            :: GHC.Event.PSQ.IntPSQ v_a3iNV -> GHC.Event.PSQ.IntPSQ v_a3iNV
          [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []] =
              sat-only [k_s3khF go1_s3khH] \r [t_s3khI]
                  case t_s3khI of wild_s3khJ {
                    GHC.Event.PSQ.Bin dt_s3khK
                                      dt1_s3khL [Occ=Once*]
                                      x'_s3khM [Occ=Once*]
                                      dt2_s3khN
                                      l_s3khO [Occ=Once*]
                                      r_s3khP [Occ=Once*] ->
                        case k_s3khF of {
                          GHC.Types.I# x#_s3khR ->
                              case int2Word# [dt2_s3khN] of m_s3khS [Dmd=<S,U>] {
                                __DEFAULT ->
                                    case minusWord# [m_s3khS 1##] of sat_s3khU {
                                      __DEFAULT ->
                                          case
                                              xor# [sat_s3khU 18446744073709551615##]
                                          of
                                          sat_s3khV
                                          { __DEFAULT ->
                                                case
                                                    xor# [sat_s3khV m_s3khS]
                                                of
                                                m'_s3khT [Dmd=<S,U>]
                                                { __DEFAULT ->
                                                      case int2Word# [dt_s3khK] of sat_s3khY {
                                                        __DEFAULT ->
                                                            case
                                                                and# [sat_s3khY m'_s3khT]
                                                            of
                                                            sat_s3khZ
                                                            { __DEFAULT ->
                                                                  case
                                                                      int2Word# [x#_s3khR]
                                                                  of
                                                                  sat_s3khW
                                                                  { __DEFAULT ->
                                                                        case
                                                                            and# [sat_s3khW
                                                                                  m'_s3khT]
                                                                        of
                                                                        sat_s3khX
                                                                        { __DEFAULT ->
                                                                              case
                                                                                  neWord# [sat_s3khX
                                                                                           sat_s3khZ]
                                                                              of
                                                                              { __DEFAULT ->
                                                                                    case
                                                                                        ==# [x#_s3khR
                                                                                             dt_s3khK]
                                                                                    of
                                                                                    { __DEFAULT ->
                                                                                          case
                                                                                              int2Word# [x#_s3khR]
                                                                                          of
                                                                                          sat_s3ki2
                                                                                          { __DEFAULT ->
                                                                                                case
                                                                                                    and# [sat_s3ki2
                                                                                                          m_s3khS]
                                                                                                of
                                                                                                { __DEFAULT ->
                                                                                                      case
                                                                                                          go1_s3khH
                                                                                                              r_s3khP
                                                                                                      of
                                                                                                      wild3_s3ki4
                                                                                                      { __DEFAULT ->
                                                                                                            GHC.Event.PSQ.Bin [dt_s3khK
                                                                                                                               dt1_s3khL
                                                                                                                               x'_s3khM
                                                                                                                               dt2_s3khN
                                                                                                                               l_s3khO
                                                                                                                               wild3_s3ki4];
                                                                                                        GHC.Event.PSQ.Nil ->
                                                                                                            case
                                                                                                                l_s3khO
                                                                                                            of
                                                                                                            wild4_s3ki5
                                                                                                            { __DEFAULT ->
                                                                                                                  GHC.Event.PSQ.Bin [dt_s3khK
                                                                                                                                     dt1_s3khL
                                                                                                                                     x'_s3khM
                                                                                                                                     dt2_s3khN
                                                                                                                                     wild4_s3ki5
                                                                                                                                     GHC.Event.PSQ.Nil];
                                                                                                              GHC.Event.PSQ.Nil ->
                                                                                                                  GHC.Event.PSQ.Tip [dt_s3khK
                                                                                                                                     dt1_s3khL
                                                                                                                                     x'_s3khM];
                                                                                                            };
                                                                                                      };
                                                                                                  0## ->
                                                                                                      case
                                                                                                          go1_s3khH
                                                                                                              l_s3khO
                                                                                                      of
                                                                                                      wild3_s3ki6
                                                                                                      { __DEFAULT ->
                                                                                                            GHC.Event.PSQ.Bin [dt_s3khK
                                                                                                                               dt1_s3khL
                                                                                                                               x'_s3khM
                                                                                                                               dt2_s3khN
                                                                                                                               wild3_s3ki6
                                                                                                                               r_s3khP];
                                                                                                        GHC.Event.PSQ.Nil ->
                                                                                                            case
                                                                                                                r_s3khP
                                                                                                            of
                                                                                                            wild4_s3ki7
                                                                                                            { __DEFAULT ->
                                                                                                                  GHC.Event.PSQ.Bin [dt_s3khK
                                                                                                                                     dt1_s3khL
                                                                                                                                     x'_s3khM
                                                                                                                                     dt2_s3khN
                                                                                                                                     GHC.Event.PSQ.Nil
                                                                                                                                     wild4_s3ki7];
                                                                                                              GHC.Event.PSQ.Nil ->
                                                                                                                  GHC.Event.PSQ.Tip [dt_s3khK
                                                                                                                                     dt1_s3khL
                                                                                                                                     x'_s3khM];
                                                                                                            };
                                                                                                      };
                                                                                                };
                                                                                          };
                                                                                      1# ->
                                                                                          let {
                                                                                            sat_s3ki8 [Occ=Once]
                                                                                              :: GHC.Event.PSQ.Mask
                                                                                            [LclId] =
                                                                                                CCCS GHC.Types.I#! [dt2_s3khN];
                                                                                          } in 
                                                                                            GHC.Event.PSQ.merge
                                                                                                sat_s3ki8
                                                                                                l_s3khO
                                                                                                r_s3khP;
                                                                                    };
                                                                                1# -> wild_s3khJ;
                                                                              };
                                                                        };
                                                                  };
                                                            };
                                                      };
                                                };
                                          };
                                    };
                              };
                        };
                    GHC.Event.PSQ.Tip dt_s3ki9 [Occ=Once] _ [Occ=Dead] _ [Occ=Dead] ->
                        case k_s3khF of {
                          GHC.Types.I# x_s3kid [Occ=Once] ->
                              case ==# [x_s3kid dt_s3ki9] of {
                                __DEFAULT -> wild_s3khJ;
                                1# -> GHC.Event.PSQ.Nil [];
                              };
                        };
                    GHC.Event.PSQ.Nil -> GHC.Event.PSQ.Nil [];
                  };
        } in  go1_s3khH eta_s3khG;

GHC.Event.PSQ.deleteView [InlPrag=INLINABLE]
  :: forall v.
     GHC.Event.PSQ.Key
     -> GHC.Event.PSQ.IntPSQ v
     -> GHC.Base.Maybe (GHC.Event.PSQ.Prio, v, GHC.Event.PSQ.IntPSQ v)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U(U)><S,1*U>,
 Unf=OtherCon []] =
    [] \r [k_s3kif t0_s3kig]
        let {
          delFrom_s3kih [Occ=LoopBreaker]
            :: GHC.Event.PSQ.IntPSQ v_a3iOE
               -> (# GHC.Event.PSQ.IntPSQ v_a3iOE,
                     GHC.Base.Maybe (GHC.Event.PSQ.Prio, v_a3iOE) #)
          [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []] =
              sat-only [k_s3kif delFrom_s3kih] \r [t_s3kii]
                  case t_s3kii of wild_s3kij {
                    GHC.Event.PSQ.Bin dt_s3kik
                                      dt1_s3kil [Occ=Once*]
                                      x'_s3kim [Occ=Once*]
                                      dt2_s3kin
                                      l_s3kio [Occ=Once*]
                                      r_s3kip [Occ=Once*] ->
                        case k_s3kif of {
                          GHC.Types.I# x#_s3kir ->
                              case int2Word# [dt2_s3kin] of m_s3kis [Dmd=<S,U>] {
                                __DEFAULT ->
                                    case minusWord# [m_s3kis 1##] of sat_s3kiu {
                                      __DEFAULT ->
                                          case
                                              xor# [sat_s3kiu 18446744073709551615##]
                                          of
                                          sat_s3kiv
                                          { __DEFAULT ->
                                                case
                                                    xor# [sat_s3kiv m_s3kis]
                                                of
                                                m'_s3kit [Dmd=<S,U>]
                                                { __DEFAULT ->
                                                      case int2Word# [dt_s3kik] of sat_s3kiy {
                                                        __DEFAULT ->
                                                            case
                                                                and# [sat_s3kiy m'_s3kit]
                                                            of
                                                            sat_s3kiz
                                                            { __DEFAULT ->
                                                                  case
                                                                      int2Word# [x#_s3kir]
                                                                  of
                                                                  sat_s3kiw
                                                                  { __DEFAULT ->
                                                                        case
                                                                            and# [sat_s3kiw
                                                                                  m'_s3kit]
                                                                        of
                                                                        sat_s3kix
                                                                        { __DEFAULT ->
                                                                              case
                                                                                  neWord# [sat_s3kix
                                                                                           sat_s3kiz]
                                                                              of
                                                                              { __DEFAULT ->
                                                                                    case
                                                                                        ==# [x#_s3kir
                                                                                             dt_s3kik]
                                                                                    of
                                                                                    { __DEFAULT ->
                                                                                          case
                                                                                              int2Word# [x#_s3kir]
                                                                                          of
                                                                                          sat_s3kiC
                                                                                          { __DEFAULT ->
                                                                                                case
                                                                                                    and# [sat_s3kiC
                                                                                                          m_s3kis]
                                                                                                of
                                                                                                { __DEFAULT ->
                                                                                                      case
                                                                                                          delFrom_s3kih
                                                                                                              r_s3kip
                                                                                                      of
                                                                                                      { (#,#) ipv_s3kiF [Occ=Once!]
                                                                                                              ipv1_s3kiG [Occ=Once*] ->
                                                                                                            case
                                                                                                                ipv_s3kiF
                                                                                                            of
                                                                                                            wild3_s3kiH
                                                                                                            { __DEFAULT ->
                                                                                                                  let {
                                                                                                                    sat_s3kiI [Occ=Once]
                                                                                                                      :: GHC.Event.PSQ.IntPSQ
                                                                                                                           v_a3iOE
                                                                                                                    [LclId] =
                                                                                                                        CCCS GHC.Event.PSQ.Bin! [dt_s3kik
                                                                                                                                                 dt1_s3kil
                                                                                                                                                 x'_s3kim
                                                                                                                                                 dt2_s3kin
                                                                                                                                                 l_s3kio
                                                                                                                                                 wild3_s3kiH];
                                                                                                                  } in 
                                                                                                                    (#,#) [sat_s3kiI
                                                                                                                           ipv1_s3kiG];
                                                                                                              GHC.Event.PSQ.Nil ->
                                                                                                                  case
                                                                                                                      l_s3kio
                                                                                                                  of
                                                                                                                  wild4_s3kiJ
                                                                                                                  { __DEFAULT ->
                                                                                                                        let {
                                                                                                                          sat_s3kiK [Occ=Once]
                                                                                                                            :: GHC.Event.PSQ.IntPSQ
                                                                                                                                 v_a3iOE
                                                                                                                          [LclId] =
                                                                                                                              CCCS GHC.Event.PSQ.Bin! [dt_s3kik
                                                                                                                                                       dt1_s3kil
                                                                                                                                                       x'_s3kim
                                                                                                                                                       dt2_s3kin
                                                                                                                                                       wild4_s3kiJ
                                                                                                                                                       GHC.Event.PSQ.Nil];
                                                                                                                        } in 
                                                                                                                          (#,#) [sat_s3kiK
                                                                                                                                 ipv1_s3kiG];
                                                                                                                    GHC.Event.PSQ.Nil ->
                                                                                                                        let {
                                                                                                                          sat_s3kiL [Occ=Once]
                                                                                                                            :: GHC.Event.PSQ.IntPSQ
                                                                                                                                 v_a3iOE
                                                                                                                          [LclId] =
                                                                                                                              CCCS GHC.Event.PSQ.Tip! [dt_s3kik
                                                                                                                                                       dt1_s3kil
                                                                                                                                                       x'_s3kim];
                                                                                                                        } in 
                                                                                                                          (#,#) [sat_s3kiL
                                                                                                                                 ipv1_s3kiG];
                                                                                                                  };
                                                                                                            };
                                                                                                      };
                                                                                                  0## ->
                                                                                                      case
                                                                                                          delFrom_s3kih
                                                                                                              l_s3kio
                                                                                                      of
                                                                                                      { (#,#) ipv_s3kiN [Occ=Once!]
                                                                                                              ipv1_s3kiO [Occ=Once*] ->
                                                                                                            case
                                                                                                                ipv_s3kiN
                                                                                                            of
                                                                                                            wild3_s3kiP
                                                                                                            { __DEFAULT ->
                                                                                                                  let {
                                                                                                                    sat_s3kiQ [Occ=Once]
                                                                                                                      :: GHC.Event.PSQ.IntPSQ
                                                                                                                           v_a3iOE
                                                                                                                    [LclId] =
                                                                                                                        CCCS GHC.Event.PSQ.Bin! [dt_s3kik
                                                                                                                                                 dt1_s3kil
                                                                                                                                                 x'_s3kim
                                                                                                                                                 dt2_s3kin
                                                                                                                                                 wild3_s3kiP
                                                                                                                                                 r_s3kip];
                                                                                                                  } in 
                                                                                                                    (#,#) [sat_s3kiQ
                                                                                                                           ipv1_s3kiO];
                                                                                                              GHC.Event.PSQ.Nil ->
                                                                                                                  case
                                                                                                                      r_s3kip
                                                                                                                  of
                                                                                                                  wild4_s3kiR
                                                                                                                  { __DEFAULT ->
                                                                                                                        let {
                                                                                                                          sat_s3kiS [Occ=Once]
                                                                                                                            :: GHC.Event.PSQ.IntPSQ
                                                                                                                                 v_a3iOE
                                                                                                                          [LclId] =
                                                                                                                              CCCS GHC.Event.PSQ.Bin! [dt_s3kik
                                                                                                                                                       dt1_s3kil
                                                                                                                                                       x'_s3kim
                                                                                                                                                       dt2_s3kin
                                                                                                                                                       GHC.Event.PSQ.Nil
                                                                                                                                                       wild4_s3kiR];
                                                                                                                        } in 
                                                                                                                          (#,#) [sat_s3kiS
                                                                                                                                 ipv1_s3kiO];
                                                                                                                    GHC.Event.PSQ.Nil ->
                                                                                                                        let {
                                                                                                                          sat_s3kiT [Occ=Once]
                                                                                                                            :: GHC.Event.PSQ.IntPSQ
                                                                                                                                 v_a3iOE
                                                                                                                          [LclId] =
                                                                                                                              CCCS GHC.Event.PSQ.Tip! [dt_s3kik
                                                                                                                                                       dt1_s3kil
                                                                                                                                                       x'_s3kim];
                                                                                                                        } in 
                                                                                                                          (#,#) [sat_s3kiT
                                                                                                                                 ipv1_s3kiO];
                                                                                                                  };
                                                                                                            };
                                                                                                      };
                                                                                                };
                                                                                          };
                                                                                      1# ->
                                                                                          let {
                                                                                            sat_s3kiU [Occ=Once]
                                                                                              :: GHC.Event.PSQ.Mask
                                                                                            [LclId] =
                                                                                                CCCS GHC.Types.I#! [dt2_s3kin];
                                                                                          } in 
                                                                                            case
                                                                                                GHC.Event.PSQ.merge
                                                                                                    sat_s3kiU
                                                                                                    l_s3kio
                                                                                                    r_s3kip
                                                                                            of
                                                                                            t'_s3kiV
                                                                                            { __DEFAULT ->
                                                                                                  let {
                                                                                                    sat_s3kiW [Occ=Once]
                                                                                                      :: GHC.Event.PSQ.Prio
                                                                                                    [LclId] =
                                                                                                        CCCS GHC.Word.W64#! [dt1_s3kil]; } in
                                                                                                  let {
                                                                                                    sat_s3kiX [Occ=Once]
                                                                                                      :: (GHC.Event.PSQ.Prio,
                                                                                                          v_a3iOE)
                                                                                                    [LclId] =
                                                                                                        CCCS (,)! [sat_s3kiW
                                                                                                                   x'_s3kim]; } in
                                                                                                  let {
                                                                                                    sat_s3kiY [Occ=Once]
                                                                                                      :: GHC.Base.Maybe
                                                                                                           (GHC.Event.PSQ.Prio,
                                                                                                            v_a3iOE)
                                                                                                    [LclId] =
                                                                                                        CCCS GHC.Base.Just! [sat_s3kiX];
                                                                                                  } in 
                                                                                                    (#,#) [t'_s3kiV
                                                                                                           sat_s3kiY];
                                                                                            };
                                                                                    };
                                                                                1# ->
                                                                                    (#,#) [wild_s3kij
                                                                                           GHC.Base.Nothing];
                                                                              };
                                                                        };
                                                                  };
                                                            };
                                                      };
                                                };
                                          };
                                    };
                              };
                        };
                    GHC.Event.PSQ.Tip dt_s3kiZ [Occ=Once]
                                      dt1_s3kj0 [Occ=Once]
                                      x'_s3kj1 [Occ=Once] ->
                        case k_s3kif of {
                          GHC.Types.I# x_s3kj3 [Occ=Once] ->
                              case ==# [x_s3kj3 dt_s3kiZ] of {
                                __DEFAULT -> (#,#) [wild_s3kij GHC.Base.Nothing];
                                1# ->
                                    let {
                                      sat_s3kj5 [Occ=Once] :: GHC.Event.PSQ.Prio
                                      [LclId] =
                                          CCCS GHC.Word.W64#! [dt1_s3kj0]; } in
                                    let {
                                      sat_s3kj6 [Occ=Once] :: (GHC.Event.PSQ.Prio, v_a3iOE)
                                      [LclId] =
                                          CCCS (,)! [sat_s3kj5 x'_s3kj1]; } in
                                    let {
                                      sat_s3kj7 [Occ=Once]
                                        :: GHC.Base.Maybe (GHC.Event.PSQ.Prio, v_a3iOE)
                                      [LclId] =
                                          CCCS GHC.Base.Just! [sat_s3kj6];
                                    } in  (#,#) [GHC.Event.PSQ.Nil sat_s3kj7];
                              };
                        };
                    GHC.Event.PSQ.Nil -> (#,#) [GHC.Event.PSQ.Nil GHC.Base.Nothing];
                  };
        } in 
          case delFrom_s3kih t0_s3kig of {
            (#,#) ipv_s3kj9 [Occ=Once] ipv1_s3kja [Occ=Once!] ->
                case ipv1_s3kja of {
                  GHC.Base.Nothing -> GHC.Base.Nothing [];
                  GHC.Base.Just ds1_s3kjc [Occ=Once!] ->
                      case ds1_s3kjc of {
                        (,) p_s3kje [Occ=Once] x_s3kjf [Occ=Once] ->
                            let {
                              sat_s3kjg [Occ=Once]
                                :: (GHC.Event.PSQ.Prio, v_a3iOE, GHC.Event.PSQ.IntPSQ v_a3iOE)
                              [LclId] =
                                  CCCS (,,)! [p_s3kje x_s3kjf ipv_s3kj9];
                            } in  GHC.Base.Just [sat_s3kjg];
                      };
                };
          };

GHC.Event.PSQ.$wsize [InlPrag=NOUSERINLINE[0], Occ=LoopBreaker]
  :: forall v. GHC.Event.PSQ.IntPSQ v -> GHC.Prim.Int#
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [w_s3kjh]
        case w_s3kjh of {
          GHC.Event.PSQ.Bin _ [Occ=Dead]
                            _ [Occ=Dead]
                            _ [Occ=Dead]
                            _ [Occ=Dead]
                            l_s3kjn [Occ=Once]
                            r_s3kjo [Occ=Once] ->
              case GHC.Event.PSQ.$wsize l_s3kjn of ww_s3kjp {
                __DEFAULT ->
                    case GHC.Event.PSQ.$wsize r_s3kjo of ww1_s3kjq {
                      __DEFAULT ->
                          case +# [1# ww_s3kjp] of sat_s3kjr {
                            __DEFAULT -> +# [sat_s3kjr ww1_s3kjq];
                          };
                    };
              };
          GHC.Event.PSQ.Tip _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] -> 1#;
          GHC.Event.PSQ.Nil -> 0#;
        };

GHC.Event.PSQ.size [InlPrag=NOUSERINLINE[0]]
  :: forall v. GHC.Event.PSQ.IntPSQ v -> GHC.Types.Int
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>m, Unf=OtherCon []] =
    [] \r [w_s3kjv]
        case GHC.Event.PSQ.$wsize w_s3kjv of ww_s3kjw {
          __DEFAULT -> GHC.Types.I# [ww_s3kjw];
        };

GHC.Event.PSQ.$wunsafeInsertNew [InlPrag=INLINABLE[0],
                                 Occ=LoopBreaker]
  :: forall v.
     GHC.Prim.Int#
     -> GHC.Prim.Word#
     -> v
     -> GHC.Event.PSQ.IntPSQ v
     -> GHC.Event.PSQ.IntPSQ v
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S,U><S,U><S,1*U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [ww_s3kjx ww1_s3kjy w_s3kjz w1_s3kjA]
        case w1_s3kjA of wild_s3kjB {
          GHC.Event.PSQ.Bin dt_s3kjC
                            dt1_s3kjD
                            x'_s3kjE
                            dt2_s3kjF
                            l_s3kjG
                            r_s3kjH ->
              case int2Word# [dt2_s3kjF] of m_s3kjI [Dmd=<S,U>] {
                __DEFAULT ->
                    case minusWord# [m_s3kjI 1##] of sat_s3kjK {
                      __DEFAULT ->
                          case xor# [sat_s3kjK 18446744073709551615##] of sat_s3kjL {
                            __DEFAULT ->
                                case xor# [sat_s3kjL m_s3kjI] of m'_s3kjJ [Dmd=<S,U>] {
                                  __DEFAULT ->
                                      case int2Word# [dt_s3kjC] of sat_s3kjO {
                                        __DEFAULT ->
                                            case and# [sat_s3kjO m'_s3kjJ] of sat_s3kjP {
                                              __DEFAULT ->
                                                  case int2Word# [ww_s3kjx] of sat_s3kjM {
                                                    __DEFAULT ->
                                                        case
                                                            and# [sat_s3kjM m'_s3kjJ]
                                                        of
                                                        sat_s3kjN
                                                        { __DEFAULT ->
                                                              case
                                                                  neWord# [sat_s3kjN sat_s3kjP]
                                                              of
                                                              { __DEFAULT ->
                                                                    let-no-escape {
                                                                      $j_s3kjR [Occ=Once*T[0],
                                                                                Dmd=<L,1*U>]
                                                                        :: GHC.Event.PSQ.IntPSQ
                                                                             v_s3jTx
                                                                      [LclId[JoinId(0)],
                                                                       Unf=OtherCon []] =
                                                                          [ww_s3kjx
                                                                           ww1_s3kjy
                                                                           w_s3kjz
                                                                           dt_s3kjC
                                                                           dt1_s3kjD
                                                                           x'_s3kjE
                                                                           dt2_s3kjF
                                                                           l_s3kjG
                                                                           r_s3kjH
                                                                           m_s3kjI] \r []
                                                                              case
                                                                                  int2Word# [ww_s3kjx]
                                                                              of
                                                                              sat_s3kjS
                                                                              { __DEFAULT ->
                                                                                    case
                                                                                        and# [sat_s3kjS
                                                                                              m_s3kjI]
                                                                                    of
                                                                                    { __DEFAULT ->
                                                                                          case
                                                                                              GHC.Event.PSQ.$wunsafeInsertNew
                                                                                                  ww_s3kjx
                                                                                                  ww1_s3kjy
                                                                                                  w_s3kjz
                                                                                                  r_s3kjH
                                                                                          of
                                                                                          dt3_s3kjU
                                                                                          { __DEFAULT ->
                                                                                                GHC.Event.PSQ.Bin [dt_s3kjC
                                                                                                                   dt1_s3kjD
                                                                                                                   x'_s3kjE
                                                                                                                   dt2_s3kjF
                                                                                                                   l_s3kjG
                                                                                                                   dt3_s3kjU];
                                                                                          };
                                                                                      0## ->
                                                                                          case
                                                                                              GHC.Event.PSQ.$wunsafeInsertNew
                                                                                                  ww_s3kjx
                                                                                                  ww1_s3kjy
                                                                                                  w_s3kjz
                                                                                                  l_s3kjG
                                                                                          of
                                                                                          dt3_s3kjV
                                                                                          { __DEFAULT ->
                                                                                                GHC.Event.PSQ.Bin [dt_s3kjC
                                                                                                                   dt1_s3kjD
                                                                                                                   x'_s3kjE
                                                                                                                   dt2_s3kjF
                                                                                                                   dt3_s3kjV
                                                                                                                   r_s3kjH];
                                                                                          };
                                                                                    };
                                                                              };
                                                                    } in 
                                                                      let-no-escape {
                                                                        $j1_s3kjW [Occ=Once*T[0],
                                                                                   Dmd=<L,1*U>]
                                                                          :: GHC.Event.PSQ.IntPSQ
                                                                               v_s3jTx
                                                                        [LclId[JoinId(0)],
                                                                         Unf=OtherCon []] =
                                                                            [ww_s3kjx
                                                                             ww1_s3kjy
                                                                             w_s3kjz
                                                                             dt_s3kjC
                                                                             dt1_s3kjD
                                                                             x'_s3kjE
                                                                             dt2_s3kjF
                                                                             l_s3kjG
                                                                             r_s3kjH
                                                                             m_s3kjI] \r []
                                                                                case
                                                                                    int2Word# [dt_s3kjC]
                                                                                of
                                                                                sat_s3kjX
                                                                                { __DEFAULT ->
                                                                                      case
                                                                                          and# [sat_s3kjX
                                                                                                m_s3kjI]
                                                                                      of
                                                                                      { __DEFAULT ->
                                                                                            case
                                                                                                w_s3kjz
                                                                                            of
                                                                                            dt3_s3kjZ
                                                                                            { __DEFAULT ->
                                                                                                  case
                                                                                                      GHC.Event.PSQ.$wunsafeInsertNew
                                                                                                          dt_s3kjC
                                                                                                          dt1_s3kjD
                                                                                                          x'_s3kjE
                                                                                                          r_s3kjH
                                                                                                  of
                                                                                                  dt4_s3kk0
                                                                                                  { __DEFAULT ->
                                                                                                        GHC.Event.PSQ.Bin [ww_s3kjx
                                                                                                                           ww1_s3kjy
                                                                                                                           dt3_s3kjZ
                                                                                                                           dt2_s3kjF
                                                                                                                           l_s3kjG
                                                                                                                           dt4_s3kk0];
                                                                                                  };
                                                                                            };
                                                                                        0## ->
                                                                                            case
                                                                                                w_s3kjz
                                                                                            of
                                                                                            dt3_s3kk1
                                                                                            { __DEFAULT ->
                                                                                                  case
                                                                                                      GHC.Event.PSQ.$wunsafeInsertNew
                                                                                                          dt_s3kjC
                                                                                                          dt1_s3kjD
                                                                                                          x'_s3kjE
                                                                                                          l_s3kjG
                                                                                                  of
                                                                                                  dt4_s3kk2
                                                                                                  { __DEFAULT ->
                                                                                                        GHC.Event.PSQ.Bin [ww_s3kjx
                                                                                                                           ww1_s3kjy
                                                                                                                           dt3_s3kk1
                                                                                                                           dt2_s3kjF
                                                                                                                           dt4_s3kk2
                                                                                                                           r_s3kjH];
                                                                                                  };
                                                                                            };
                                                                                      };
                                                                                };
                                                                      } in 
                                                                        case
                                                                            eqWord# [ww1_s3kjy
                                                                                     dt1_s3kjD]
                                                                        of
                                                                        { __DEFAULT ->
                                                                              case
                                                                                  leWord# [ww1_s3kjy
                                                                                           dt1_s3kjD]
                                                                              of
                                                                              { __DEFAULT ->
                                                                                    $j_s3kjR;
                                                                                1# -> $j1_s3kjW;
                                                                              };
                                                                          1# ->
                                                                              case
                                                                                  <# [ww_s3kjx
                                                                                      dt_s3kjC]
                                                                              of
                                                                              { __DEFAULT ->
                                                                                    $j_s3kjR;
                                                                                1# -> $j1_s3kjW;
                                                                              };
                                                                        };
                                                                1# ->
                                                                    let-no-escape {
                                                                      $j_s3kk6 [Occ=Once*T[0],
                                                                                Dmd=<L,1*U>]
                                                                        :: GHC.Event.PSQ.IntPSQ
                                                                             v_s3jTx
                                                                      [LclId[JoinId(0)],
                                                                       Unf=OtherCon []] =
                                                                          [ww_s3kjx
                                                                           ww1_s3kjy
                                                                           w_s3kjz
                                                                           dt_s3kjC
                                                                           dt1_s3kjD
                                                                           x'_s3kjE
                                                                           dt2_s3kjF
                                                                           l_s3kjG
                                                                           r_s3kjH] \r []
                                                                              case
                                                                                  int2Word# [ww_s3kjx]
                                                                              of
                                                                              sat_s3kk9
                                                                              { __DEFAULT ->
                                                                                    case
                                                                                        int2Word# [dt_s3kjC]
                                                                                    of
                                                                                    sat_s3kk8
                                                                                    { __DEFAULT ->
                                                                                          case
                                                                                              xor# [sat_s3kk8
                                                                                                    sat_s3kk9]
                                                                                          of
                                                                                          sat_s3kka
                                                                                          { __DEFAULT ->
                                                                                                case
                                                                                                    clz# [sat_s3kka]
                                                                                                of
                                                                                                sat_s3kkb
                                                                                                { __DEFAULT ->
                                                                                                      case
                                                                                                          minusWord# [63##
                                                                                                                      sat_s3kkb]
                                                                                                      of
                                                                                                      sat_s3kkc
                                                                                                      { __DEFAULT ->
                                                                                                            case
                                                                                                                word2Int# [sat_s3kkc]
                                                                                                            of
                                                                                                            sat_s3kkd
                                                                                                            { __DEFAULT ->
                                                                                                                  case
                                                                                                                      uncheckedShiftL# [1##
                                                                                                                                        sat_s3kkd]
                                                                                                                  of
                                                                                                                  sat_s3kke
                                                                                                                  { __DEFAULT ->
                                                                                                                        case
                                                                                                                            word2Int# [sat_s3kke]
                                                                                                                        of
                                                                                                                        x#_s3kk7 [Dmd=<S,U>]
                                                                                                                        { __DEFAULT ->
                                                                                                                              case
                                                                                                                                  int2Word# [ww_s3kjx]
                                                                                                                              of
                                                                                                                              sat_s3kkg
                                                                                                                              { __DEFAULT ->
                                                                                                                                    case
                                                                                                                                        int2Word# [x#_s3kk7]
                                                                                                                                    of
                                                                                                                                    sat_s3kkf
                                                                                                                                    { __DEFAULT ->
                                                                                                                                          case
                                                                                                                                              and# [sat_s3kkf
                                                                                                                                                    sat_s3kkg]
                                                                                                                                          of
                                                                                                                                          { __DEFAULT ->
                                                                                                                                                let {
                                                                                                                                                  sat_s3kki [Occ=Once]
                                                                                                                                                    :: GHC.Event.PSQ.Mask
                                                                                                                                                  [LclId] =
                                                                                                                                                      CCCS GHC.Types.I#! [dt2_s3kjF];
                                                                                                                                                } in 
                                                                                                                                                  case
                                                                                                                                                      GHC.Event.PSQ.merge
                                                                                                                                                          sat_s3kki
                                                                                                                                                          l_s3kjG
                                                                                                                                                          r_s3kjH
                                                                                                                                                  of
                                                                                                                                                  dt3_s3kkj
                                                                                                                                                  { __DEFAULT ->
                                                                                                                                                        case
                                                                                                                                                            w_s3kjz
                                                                                                                                                        of
                                                                                                                                                        dt4_s3kkk
                                                                                                                                                        { __DEFAULT ->
                                                                                                                                                              let {
                                                                                                                                                                sat_s3kkl [Occ=Once]
                                                                                                                                                                  :: GHC.Event.PSQ.IntPSQ
                                                                                                                                                                       v_s3jTx
                                                                                                                                                                [LclId] =
                                                                                                                                                                    CCCS GHC.Event.PSQ.Tip! [ww_s3kjx
                                                                                                                                                                                             ww1_s3kjy
                                                                                                                                                                                             dt4_s3kkk];
                                                                                                                                                              } in 
                                                                                                                                                                GHC.Event.PSQ.Bin [dt_s3kjC
                                                                                                                                                                                   dt1_s3kjD
                                                                                                                                                                                   x'_s3kjE
                                                                                                                                                                                   x#_s3kk7
                                                                                                                                                                                   dt3_s3kkj
                                                                                                                                                                                   sat_s3kkl];
                                                                                                                                                        };
                                                                                                                                                  };
                                                                                                                                            0## ->
                                                                                                                                                case
                                                                                                                                                    w_s3kjz
                                                                                                                                                of
                                                                                                                                                dt3_s3kkm
                                                                                                                                                { __DEFAULT ->
                                                                                                                                                      let {
                                                                                                                                                        sat_s3kkn [Occ=Once]
                                                                                                                                                          :: GHC.Event.PSQ.Mask
                                                                                                                                                        [LclId] =
                                                                                                                                                            CCCS GHC.Types.I#! [dt2_s3kjF];
                                                                                                                                                      } in 
                                                                                                                                                        case
                                                                                                                                                            GHC.Event.PSQ.merge
                                                                                                                                                                sat_s3kkn
                                                                                                                                                                l_s3kjG
                                                                                                                                                                r_s3kjH
                                                                                                                                                        of
                                                                                                                                                        dt4_s3kko
                                                                                                                                                        { __DEFAULT ->
                                                                                                                                                              let {
                                                                                                                                                                sat_s3kkp [Occ=Once]
                                                                                                                                                                  :: GHC.Event.PSQ.IntPSQ
                                                                                                                                                                       v_s3jTx
                                                                                                                                                                [LclId] =
                                                                                                                                                                    CCCS GHC.Event.PSQ.Tip! [ww_s3kjx
                                                                                                                                                                                             ww1_s3kjy
                                                                                                                                                                                             dt3_s3kkm];
                                                                                                                                                              } in 
                                                                                                                                                                GHC.Event.PSQ.Bin [dt_s3kjC
                                                                                                                                                                                   dt1_s3kjD
                                                                                                                                                                                   x'_s3kjE
                                                                                                                                                                                   x#_s3kk7
                                                                                                                                                                                   sat_s3kkp
                                                                                                                                                                                   dt4_s3kko];
                                                                                                                                                        };
                                                                                                                                                };
                                                                                                                                          };
                                                                                                                                    };
                                                                                                                              };
                                                                                                                        };
                                                                                                                  };
                                                                                                            };
                                                                                                      };
                                                                                                };
                                                                                          };
                                                                                    };
                                                                              };
                                                                    } in 
                                                                      let-no-escape {
                                                                        $j1_s3kkq [Occ=Once*T[0],
                                                                                   Dmd=<L,1*U>]
                                                                          :: GHC.Event.PSQ.IntPSQ
                                                                               v_s3jTx
                                                                        [LclId[JoinId(0)],
                                                                         Unf=OtherCon []] =
                                                                            [ww_s3kjx
                                                                             ww1_s3kjy
                                                                             w_s3kjz
                                                                             wild_s3kjB
                                                                             dt_s3kjC] \r []
                                                                                case
                                                                                    int2Word# [dt_s3kjC]
                                                                                of
                                                                                sat_s3kkt
                                                                                { __DEFAULT ->
                                                                                      case
                                                                                          int2Word# [ww_s3kjx]
                                                                                      of
                                                                                      sat_s3kks
                                                                                      { __DEFAULT ->
                                                                                            case
                                                                                                xor# [sat_s3kks
                                                                                                      sat_s3kkt]
                                                                                            of
                                                                                            sat_s3kku
                                                                                            { __DEFAULT ->
                                                                                                  case
                                                                                                      clz# [sat_s3kku]
                                                                                                  of
                                                                                                  sat_s3kkv
                                                                                                  { __DEFAULT ->
                                                                                                        case
                                                                                                            minusWord# [63##
                                                                                                                        sat_s3kkv]
                                                                                                        of
                                                                                                        sat_s3kkw
                                                                                                        { __DEFAULT ->
                                                                                                              case
                                                                                                                  word2Int# [sat_s3kkw]
                                                                                                              of
                                                                                                              sat_s3kkx
                                                                                                              { __DEFAULT ->
                                                                                                                    case
                                                                                                                        uncheckedShiftL# [1##
                                                                                                                                          sat_s3kkx]
                                                                                                                    of
                                                                                                                    sat_s3kky
                                                                                                                    { __DEFAULT ->
                                                                                                                          case
                                                                                                                              word2Int# [sat_s3kky]
                                                                                                                          of
                                                                                                                          x#_s3kkr [Dmd=<S,U>]
                                                                                                                          { __DEFAULT ->
                                                                                                                                case
                                                                                                                                    int2Word# [dt_s3kjC]
                                                                                                                                of
                                                                                                                                sat_s3kkA
                                                                                                                                { __DEFAULT ->
                                                                                                                                      case
                                                                                                                                          int2Word# [x#_s3kkr]
                                                                                                                                      of
                                                                                                                                      sat_s3kkz
                                                                                                                                      { __DEFAULT ->
                                                                                                                                            case
                                                                                                                                                and# [sat_s3kkz
                                                                                                                                                      sat_s3kkA]
                                                                                                                                            of
                                                                                                                                            { __DEFAULT ->
                                                                                                                                                  case
                                                                                                                                                      w_s3kjz
                                                                                                                                                  of
                                                                                                                                                  dt3_s3kkC
                                                                                                                                                  { __DEFAULT ->
                                                                                                                                                        GHC.Event.PSQ.Bin [ww_s3kjx
                                                                                                                                                                           ww1_s3kjy
                                                                                                                                                                           dt3_s3kkC
                                                                                                                                                                           x#_s3kkr
                                                                                                                                                                           GHC.Event.PSQ.Nil
                                                                                                                                                                           wild_s3kjB];
                                                                                                                                                  };
                                                                                                                                              0## ->
                                                                                                                                                  case
                                                                                                                                                      w_s3kjz
                                                                                                                                                  of
                                                                                                                                                  dt3_s3kkD
                                                                                                                                                  { __DEFAULT ->
                                                                                                                                                        GHC.Event.PSQ.Bin [ww_s3kjx
                                                                                                                                                                           ww1_s3kjy
                                                                                                                                                                           dt3_s3kkD
                                                                                                                                                                           x#_s3kkr
                                                                                                                                                                           wild_s3kjB
                                                                                                                                                                           GHC.Event.PSQ.Nil];
                                                                                                                                                  };
                                                                                                                                            };
                                                                                                                                      };
                                                                                                                                };
                                                                                                                          };
                                                                                                                    };
                                                                                                              };
                                                                                                        };
                                                                                                  };
                                                                                            };
                                                                                      };
                                                                                };
                                                                      } in 
                                                                        case
                                                                            eqWord# [ww1_s3kjy
                                                                                     dt1_s3kjD]
                                                                        of
                                                                        { __DEFAULT ->
                                                                              case
                                                                                  leWord# [ww1_s3kjy
                                                                                           dt1_s3kjD]
                                                                              of
                                                                              { __DEFAULT ->
                                                                                    $j_s3kk6;
                                                                                1# -> $j1_s3kkq;
                                                                              };
                                                                          1# ->
                                                                              case
                                                                                  <# [ww_s3kjx
                                                                                      dt_s3kjC]
                                                                              of
                                                                              { __DEFAULT ->
                                                                                    $j_s3kk6;
                                                                                1# -> $j1_s3kkq;
                                                                              };
                                                                        };
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
          GHC.Event.PSQ.Tip dt_s3kkH dt1_s3kkI x'_s3kkJ [Occ=Once*] ->
              let-no-escape {
                $j_s3kkK [Occ=Once*T[0], Dmd=<L,1*U>]
                  :: GHC.Event.PSQ.IntPSQ v_s3jTx
                [LclId[JoinId(0)], Unf=OtherCon []] =
                    [ww_s3kjx ww1_s3kjy w_s3kjz dt_s3kkH dt1_s3kkI x'_s3kkJ] \r []
                        case int2Word# [ww_s3kjx] of sat_s3kkN {
                          __DEFAULT ->
                              case int2Word# [dt_s3kkH] of sat_s3kkM {
                                __DEFAULT ->
                                    case xor# [sat_s3kkM sat_s3kkN] of sat_s3kkO {
                                      __DEFAULT ->
                                          case clz# [sat_s3kkO] of sat_s3kkP {
                                            __DEFAULT ->
                                                case minusWord# [63## sat_s3kkP] of sat_s3kkQ {
                                                  __DEFAULT ->
                                                      case word2Int# [sat_s3kkQ] of sat_s3kkR {
                                                        __DEFAULT ->
                                                            case
                                                                uncheckedShiftL# [1## sat_s3kkR]
                                                            of
                                                            sat_s3kkS
                                                            { __DEFAULT ->
                                                                  case
                                                                      word2Int# [sat_s3kkS]
                                                                  of
                                                                  x#_s3kkL [Dmd=<S,U>]
                                                                  { __DEFAULT ->
                                                                        case
                                                                            int2Word# [ww_s3kjx]
                                                                        of
                                                                        sat_s3kkU
                                                                        { __DEFAULT ->
                                                                              case
                                                                                  int2Word# [x#_s3kkL]
                                                                              of
                                                                              sat_s3kkT
                                                                              { __DEFAULT ->
                                                                                    case
                                                                                        and# [sat_s3kkT
                                                                                              sat_s3kkU]
                                                                                    of
                                                                                    { __DEFAULT ->
                                                                                          case
                                                                                              w_s3kjz
                                                                                          of
                                                                                          dt2_s3kkW
                                                                                          { __DEFAULT ->
                                                                                                let {
                                                                                                  sat_s3kkX [Occ=Once]
                                                                                                    :: GHC.Event.PSQ.IntPSQ
                                                                                                         v_s3jTx
                                                                                                  [LclId] =
                                                                                                      CCCS GHC.Event.PSQ.Tip! [ww_s3kjx
                                                                                                                               ww1_s3kjy
                                                                                                                               dt2_s3kkW];
                                                                                                } in 
                                                                                                  GHC.Event.PSQ.Bin [dt_s3kkH
                                                                                                                     dt1_s3kkI
                                                                                                                     x'_s3kkJ
                                                                                                                     x#_s3kkL
                                                                                                                     GHC.Event.PSQ.Nil
                                                                                                                     sat_s3kkX];
                                                                                          };
                                                                                      0## ->
                                                                                          case
                                                                                              w_s3kjz
                                                                                          of
                                                                                          dt2_s3kkY
                                                                                          { __DEFAULT ->
                                                                                                let {
                                                                                                  sat_s3kkZ [Occ=Once]
                                                                                                    :: GHC.Event.PSQ.IntPSQ
                                                                                                         v_s3jTx
                                                                                                  [LclId] =
                                                                                                      CCCS GHC.Event.PSQ.Tip! [ww_s3kjx
                                                                                                                               ww1_s3kjy
                                                                                                                               dt2_s3kkY];
                                                                                                } in 
                                                                                                  GHC.Event.PSQ.Bin [dt_s3kkH
                                                                                                                     dt1_s3kkI
                                                                                                                     x'_s3kkJ
                                                                                                                     x#_s3kkL
                                                                                                                     sat_s3kkZ
                                                                                                                     GHC.Event.PSQ.Nil];
                                                                                          };
                                                                                    };
                                                                              };
                                                                        };
                                                                  };
                                                            };
                                                      };
                                                };
                                          };
                                    };
                              };
                        };
              } in 
                let-no-escape {
                  $j1_s3kl0 [Occ=Once*T[0], Dmd=<L,1*U>]
                    :: GHC.Event.PSQ.IntPSQ v_s3jTx
                  [LclId[JoinId(0)], Unf=OtherCon []] =
                      [ww_s3kjx ww1_s3kjy w_s3kjz wild_s3kjB dt_s3kkH] \r []
                          case int2Word# [dt_s3kkH] of sat_s3kl3 {
                            __DEFAULT ->
                                case int2Word# [ww_s3kjx] of sat_s3kl2 {
                                  __DEFAULT ->
                                      case xor# [sat_s3kl2 sat_s3kl3] of sat_s3kl4 {
                                        __DEFAULT ->
                                            case clz# [sat_s3kl4] of sat_s3kl5 {
                                              __DEFAULT ->
                                                  case minusWord# [63## sat_s3kl5] of sat_s3kl6 {
                                                    __DEFAULT ->
                                                        case word2Int# [sat_s3kl6] of sat_s3kl7 {
                                                          __DEFAULT ->
                                                              case
                                                                  uncheckedShiftL# [1## sat_s3kl7]
                                                              of
                                                              sat_s3kl8
                                                              { __DEFAULT ->
                                                                    case
                                                                        word2Int# [sat_s3kl8]
                                                                    of
                                                                    x#_s3kl1 [Dmd=<S,U>]
                                                                    { __DEFAULT ->
                                                                          case
                                                                              int2Word# [dt_s3kkH]
                                                                          of
                                                                          sat_s3kla
                                                                          { __DEFAULT ->
                                                                                case
                                                                                    int2Word# [x#_s3kl1]
                                                                                of
                                                                                sat_s3kl9
                                                                                { __DEFAULT ->
                                                                                      case
                                                                                          and# [sat_s3kl9
                                                                                                sat_s3kla]
                                                                                      of
                                                                                      { __DEFAULT ->
                                                                                            case
                                                                                                w_s3kjz
                                                                                            of
                                                                                            dt2_s3klc
                                                                                            { __DEFAULT ->
                                                                                                  GHC.Event.PSQ.Bin [ww_s3kjx
                                                                                                                     ww1_s3kjy
                                                                                                                     dt2_s3klc
                                                                                                                     x#_s3kl1
                                                                                                                     GHC.Event.PSQ.Nil
                                                                                                                     wild_s3kjB];
                                                                                            };
                                                                                        0## ->
                                                                                            case
                                                                                                w_s3kjz
                                                                                            of
                                                                                            dt2_s3kld
                                                                                            { __DEFAULT ->
                                                                                                  GHC.Event.PSQ.Bin [ww_s3kjx
                                                                                                                     ww1_s3kjy
                                                                                                                     dt2_s3kld
                                                                                                                     x#_s3kl1
                                                                                                                     wild_s3kjB
                                                                                                                     GHC.Event.PSQ.Nil];
                                                                                            };
                                                                                      };
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                                };
                          };
                } in 
                  case eqWord# [ww1_s3kjy dt1_s3kkI] of {
                    __DEFAULT ->
                        case leWord# [ww1_s3kjy dt1_s3kkI] of {
                          __DEFAULT -> $j_s3kkK;
                          1# -> $j1_s3kl0;
                        };
                    1# ->
                        case <# [ww_s3kjx dt_s3kkH] of {
                          __DEFAULT -> $j_s3kkK;
                          1# -> $j1_s3kl0;
                        };
                  };
          GHC.Event.PSQ.Nil ->
              case w_s3kjz of dt_s3klh {
                __DEFAULT -> GHC.Event.PSQ.Tip [ww_s3kjx ww1_s3kjy dt_s3klh];
              };
        };

GHC.Event.PSQ.unsafeInsertNew [InlPrag=NOUSERINLINE[0]]
  :: forall v.
     GHC.Event.PSQ.Key
     -> GHC.Event.PSQ.Prio
     -> v
     -> GHC.Event.PSQ.IntPSQ v
     -> GHC.Event.PSQ.IntPSQ v
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,1*U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [w_s3kli w1_s3klj w2_s3klk w3_s3kll]
        case w_s3kli of {
          GHC.Types.I# ww1_s3kln [Occ=Once] ->
              case w1_s3klj of {
                GHC.Word.W64# ww3_s3klp [Occ=Once] ->
                    GHC.Event.PSQ.$wunsafeInsertNew
                        ww1_s3kln ww3_s3klp w2_s3klk w3_s3kll;
              };
        };

GHC.Event.PSQ.insert
  :: forall v.
     GHC.Event.PSQ.Key
     -> GHC.Event.PSQ.Prio
     -> v
     -> GHC.Event.PSQ.IntPSQ v
     -> GHC.Event.PSQ.IntPSQ v
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,1*U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [k_s3klq p_s3klr x_s3kls t0_s3klt]
        case k_s3klq of ww_s3klu {
          GHC.Types.I# ww1_s3klv [Occ=Once] ->
              case p_s3klr of {
                GHC.Word.W64# ww3_s3klx [Occ=Once] ->
                    case GHC.Event.PSQ.delete ww_s3klu t0_s3klt of sat_s3kly {
                      __DEFAULT ->
                          GHC.Event.PSQ.$wunsafeInsertNew
                              ww1_s3klv ww3_s3klx x_s3kls sat_s3kly;
                    };
              };
        };

go_r3kd8
  :: forall v. [GHC.Event.PSQ.Elem v] -> GHC.Event.PSQ.IntPSQ v
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    sat-only [] \r [ds_s3klz]
        case ds_s3klz of {
          [] -> GHC.Event.PSQ.Nil [];
          : y_s3klB [Occ=Once!] ys_s3klC [Occ=Once] ->
              case y_s3klB of {
                GHC.Event.PSQ.E dt_s3klE dt1_s3klF [Occ=Once] x_s3klG [Occ=Once] ->
                    case go_r3kd8 ys_s3klC of sat_s3klI {
                      __DEFAULT ->
                          let {
                            sat_s3klH [Occ=Once] :: GHC.Event.PSQ.Key
                            [LclId] =
                                CCCS GHC.Types.I#! [dt_s3klE];
                          } in 
                            case GHC.Event.PSQ.delete sat_s3klH sat_s3klI of sat_s3klJ {
                              __DEFAULT ->
                                  GHC.Event.PSQ.$wunsafeInsertNew
                                      dt_s3klE dt1_s3klF x_s3klG sat_s3klJ;
                            };
                    };
              };
        };

GHC.Event.PSQ.fromList [InlPrag=INLINABLE]
  :: forall v. [GHC.Event.PSQ.Elem v] -> GHC.Event.PSQ.IntPSQ v
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [eta_B1] go_r3kd8 eta_B1;

GHC.Event.PSQ.adjust [InlPrag=INLINE (sat-args=3)]
  :: forall a.
     (GHC.Event.PSQ.Prio -> GHC.Event.PSQ.Prio)
     -> GHC.Event.PSQ.Key -> GHC.Event.PSQ.PSQ a -> GHC.Event.PSQ.PSQ a
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,1*C1(U(U))><L,U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [f_s3klK k_s3klL q_s3klM]
        case GHC.Event.PSQ.deleteView k_s3klL q_s3klM of {
          GHC.Base.Nothing -> q_s3klM;
          GHC.Base.Just ds_s3klO [Occ=Once!] ->
              case ds_s3klO of {
                (,,) p_s3klQ [Occ=Once] v_s3klR [Occ=Once] t0'_s3klS [Occ=Once] ->
                    case k_s3klL of {
                      GHC.Types.I# ww1_s3klU [Occ=Once] ->
                          case f_s3klK p_s3klQ of {
                            GHC.Word.W64# ww3_s3klW [Occ=Once] ->
                                GHC.Event.PSQ.$wunsafeInsertNew
                                    ww1_s3klU ww3_s3klW v_s3klR t0'_s3klS;
                          };
                    };
              };
        };

GHC.Event.PSQ.Bin
  :: forall v.
     GHC.Prim.Int#
     -> GHC.Prim.Word#
     -> v
     -> GHC.Prim.Int#
     -> GHC.Event.PSQ.IntPSQ v
     -> GHC.Event.PSQ.IntPSQ v
     -> GHC.Event.PSQ.IntPSQ v
[GblId[DataCon],
 Arity=6,
 Caf=NoCafRefs,
 Str=<L,U><L,U><L,U><L,U><L,U><L,U>m1,
 Unf=OtherCon []] =
    [] \r [eta_B6 eta_B5 eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.Event.PSQ.Bin [eta_B6 eta_B5 eta_B4 eta_B3 eta_B2 eta_B1];

GHC.Event.PSQ.Tip
  :: forall v.
     GHC.Prim.Int# -> GHC.Prim.Word# -> v -> GHC.Event.PSQ.IntPSQ v
[GblId[DataCon],
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,U><L,U><L,U>m2,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.Event.PSQ.Tip [eta_B3 eta_B2 eta_B1];

GHC.Event.PSQ.Nil :: forall v. GHC.Event.PSQ.IntPSQ v
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Event.PSQ.Nil! [];

GHC.Event.PSQ.E
  :: forall a.
     GHC.Prim.Int# -> GHC.Prim.Word# -> a -> GHC.Event.PSQ.Elem a
[GblId[DataCon],
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,U><L,U><L,U>m,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.Event.PSQ.E [eta_B3 eta_B2 eta_B1];


==================== Pre unarise: ====================
2018-03-16 15:57:59.316409392 UTC

GHC.Event.PSQ.$WBin [InlPrag=INLINE[2]]
  :: forall v.
     GHC.Event.PSQ.Key
     -> GHC.Event.PSQ.Prio
     -> v
     -> GHC.Event.PSQ.Mask
     -> GHC.Event.PSQ.IntPSQ v
     -> GHC.Event.PSQ.IntPSQ v
     -> GHC.Event.PSQ.IntPSQ v
[GblId[DataConWrapper],
 Arity=6,
 Caf=NoCafRefs,
 Str=<S,U><S,U><S,U><S,U><S,U><S,U>m1,
 Unf=OtherCon []] =
    [] \r [dt_s3meF dt_s3meG dt_s3meH dt_s3meI dt_s3meJ dt_s3meK]
        case dt_s3meF of {
          GHC.Types.I# dt_s3meM [Occ=Once] ->
              case dt_s3meG of {
                GHC.Word.W64# dt_s3meO [Occ=Once] ->
                    case dt_s3meH of dt_s3meP {
                      __DEFAULT ->
                          case dt_s3meI of {
                            GHC.Types.I# dt_s3meR [Occ=Once] ->
                                case dt_s3meJ of dt_s3meS {
                                  __DEFAULT ->
                                      case dt_s3meK of dt_s3meT {
                                        __DEFAULT ->
                                            GHC.Event.PSQ.Bin [dt_s3meM
                                                               dt_s3meO
                                                               dt_s3meP
                                                               dt_s3meR
                                                               dt_s3meS
                                                               dt_s3meT];
                                      };
                                };
                          };
                    };
              };
        };

GHC.Event.PSQ.$WTip [InlPrag=INLINE[2]]
  :: forall v.
     GHC.Event.PSQ.Key
     -> GHC.Event.PSQ.Prio -> v -> GHC.Event.PSQ.IntPSQ v
[GblId[DataConWrapper],
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,U><S,U><S,U>m2,
 Unf=OtherCon []] =
    [] \r [dt_s3meU dt_s3meV dt_s3meW]
        case dt_s3meU of {
          GHC.Types.I# dt_s3meY [Occ=Once] ->
              case dt_s3meV of {
                GHC.Word.W64# dt_s3mf0 [Occ=Once] ->
                    case dt_s3meW of dt_s3mf1 {
                      __DEFAULT -> GHC.Event.PSQ.Tip [dt_s3meY dt_s3mf0 dt_s3mf1];
                    };
              };
        };

GHC.Event.PSQ.$WE [InlPrag=INLINE[2]]
  :: forall a.
     GHC.Event.PSQ.Key
     -> GHC.Event.PSQ.Prio -> a -> GHC.Event.PSQ.Elem a
[GblId[DataConWrapper],
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,U><S,U><L,U>m,
 Unf=OtherCon []] =
    [] \r [dt_s3mf2 dt_s3mf3 dt_s3mf4]
        case dt_s3mf2 of {
          GHC.Types.I# dt_s3mf6 [Occ=Once] ->
              case dt_s3mf3 of {
                GHC.Word.W64# dt_s3mf8 [Occ=Once] ->
                    GHC.Event.PSQ.E [dt_s3mf6 dt_s3mf8 dt_s3mf4];
              };
        };

GHC.Event.PSQ.value :: forall a. GHC.Event.PSQ.Elem a -> a
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLS),1*U(A,A,1*U)>,
 Unf=OtherCon []] =
    [] \r [ds_s3mf9]
        case ds_s3mf9 of {
          GHC.Event.PSQ.E _ [Occ=Dead] _ [Occ=Dead] ds1_s3mfd [Occ=Once] ->
              ds1_s3mfd;
        };

GHC.Event.PSQ.prio
  :: forall a. GHC.Event.PSQ.Elem a -> GHC.Event.PSQ.Prio
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LSL),1*U(A,U,A)>m,
 Unf=OtherCon []] =
    [] \r [ds_s3mfe]
        case ds_s3mfe of {
          GHC.Event.PSQ.E _ [Occ=Dead] dt1_s3mfh [Occ=Once] _ [Occ=Dead] ->
              GHC.Word.W64# [dt1_s3mfh];
        };

GHC.Event.PSQ.key
  :: forall a. GHC.Event.PSQ.Elem a -> GHC.Event.PSQ.Key
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SLL),1*U(U,A,A)>m,
 Unf=OtherCon []] =
    [] \r [ds_s3mfj]
        case ds_s3mfj of {
          GHC.Event.PSQ.E dt_s3mfl [Occ=Once] _ [Occ=Dead] _ [Occ=Dead] ->
              GHC.Types.I# [dt_s3mfl];
        };

GHC.Event.PSQ.null
  :: forall v. GHC.Event.PSQ.IntPSQ v -> GHC.Types.Bool
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [ds_s3mfo]
        case ds_s3mfo of {
          __DEFAULT -> GHC.Types.False [];
          GHC.Event.PSQ.Nil -> GHC.Types.True [];
        };

GHC.Event.PSQ.findMin
  :: forall v.
     GHC.Event.PSQ.IntPSQ v -> GHC.Base.Maybe (GHC.Event.PSQ.Elem v)
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [t_s3mfq]
        case t_s3mfq of {
          GHC.Event.PSQ.Bin dt_s3mfs [Occ=Once]
                            dt1_s3mft [Occ=Once]
                            x_s3mfu [Occ=Once]
                            _ [Occ=Dead]
                            _ [Occ=Dead]
                            _ [Occ=Dead] ->
              let {
                sat_s3mfy [Occ=Once] :: GHC.Event.PSQ.Elem v_a3iL1
                [LclId] =
                    CCCS GHC.Event.PSQ.E! [dt_s3mfs dt1_s3mft x_s3mfu];
              } in  GHC.Base.Just [sat_s3mfy];
          GHC.Event.PSQ.Tip dt_s3mfz [Occ=Once]
                            dt1_s3mfA [Occ=Once]
                            x_s3mfB [Occ=Once] ->
              let {
                sat_s3mfC [Occ=Once] :: GHC.Event.PSQ.Elem v_a3iL1
                [LclId] =
                    CCCS GHC.Event.PSQ.E! [dt_s3mfz dt1_s3mfA x_s3mfB];
              } in  GHC.Base.Just [sat_s3mfC];
          GHC.Event.PSQ.Nil -> GHC.Base.Nothing [];
        };

GHC.Event.PSQ.empty :: forall v. GHC.Event.PSQ.IntPSQ v
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Event.PSQ.Nil! [];

GHC.Event.PSQ.singleton
  :: forall v.
     GHC.Event.PSQ.Key
     -> GHC.Event.PSQ.Prio -> v -> GHC.Event.PSQ.IntPSQ v
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,U><S,U><S,U>m2,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.Event.PSQ.$WTip eta_B3 eta_B2 eta_B1;

GHC.Event.PSQ.toList_go [Occ=LoopBreaker]
  :: forall v.
     [GHC.Event.PSQ.Elem v]
     -> GHC.Event.PSQ.IntPSQ v -> [GHC.Event.PSQ.Elem v]
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [acc_s3mfD ds_s3mfE]
        case ds_s3mfE of {
          GHC.Event.PSQ.Bin dt_s3mfG [Occ=Once]
                            dt1_s3mfH [Occ=Once]
                            x'_s3mfI [Occ=Once]
                            _ [Occ=Dead]
                            l_s3mfK [Occ=Once]
                            r_s3mfL [Occ=Once] ->
              let {
                sat_s3mfO [Occ=Once] :: [GHC.Event.PSQ.Elem v_a3iK3]
                [LclId] =
                    [acc_s3mfD l_s3mfK r_s3mfL] \u []
                        let {
                          sat_s3mfN [Occ=Once] :: [GHC.Event.PSQ.Elem v_a3iK3]
                          [LclId] =
                              [acc_s3mfD r_s3mfL] \u []
                                  GHC.Event.PSQ.toList_go acc_s3mfD r_s3mfL;
                        } in  GHC.Event.PSQ.toList_go sat_s3mfN l_s3mfK; } in
              let {
                sat_s3mfM [Occ=Once] :: GHC.Event.PSQ.Elem v_a3iK3
                [LclId] =
                    CCCS GHC.Event.PSQ.E! [dt_s3mfG dt1_s3mfH x'_s3mfI];
              } in  : [sat_s3mfM sat_s3mfO];
          GHC.Event.PSQ.Tip dt_s3mfP [Occ=Once]
                            dt1_s3mfQ [Occ=Once]
                            x'_s3mfR [Occ=Once] ->
              let {
                sat_s3mfS [Occ=Once] :: GHC.Event.PSQ.Elem v_a3iK3
                [LclId] =
                    CCCS GHC.Event.PSQ.E! [dt_s3mfP dt1_s3mfQ x'_s3mfR];
              } in  : [sat_s3mfS acc_s3mfD];
          GHC.Event.PSQ.Nil -> acc_s3mfD;
        };

GHC.Event.PSQ.toList
  :: forall v. GHC.Event.PSQ.IntPSQ v -> [GHC.Event.PSQ.Elem v]
[GblId, Arity=1, Caf=NoCafRefs, Unf=OtherCon []] =
    [] \r [eta_B1] GHC.Event.PSQ.toList_go GHC.Types.[] eta_B1;

GHC.Event.PSQ.merge [InlPrag=INLINABLE, Occ=LoopBreaker]
  :: forall v.
     GHC.Event.PSQ.Mask
     -> GHC.Event.PSQ.IntPSQ v
     -> GHC.Event.PSQ.IntPSQ v
     -> GHC.Event.PSQ.IntPSQ v
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,1*U(U)><S,1*U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [m_s3mfT l_s3mfU r_s3mfV]
        case l_s3mfU of wild_s3mfW {
          GHC.Event.PSQ.Bin dt_s3mfX
                            dt1_s3mfY
                            lx_s3mfZ [Occ=Once*]
                            dt2_s3mg0 [Occ=Once*]
                            ll_s3mg1 [Occ=Once*]
                            lr_s3mg2 [Occ=Once*] ->
              case r_s3mfV of wild1_s3mg3 {
                GHC.Event.PSQ.Bin dt3_s3mg4
                                  dt4_s3mg5
                                  rx_s3mg6 [Occ=Once]
                                  dt5_s3mg7 [Occ=Once]
                                  rl_s3mg8 [Occ=Once]
                                  rr_s3mg9 [Occ=Once] ->
                    let-no-escape {
                      $j_s3mga [Occ=Once*T[0], Dmd=<L,1*U>]
                        :: GHC.Event.PSQ.IntPSQ v_a3iHG
                      [LclId[JoinId(0)], Unf=OtherCon []] =
                          [m_s3mfT
                           wild_s3mfW
                           dt3_s3mg4
                           dt4_s3mg5
                           rx_s3mg6
                           dt5_s3mg7
                           rl_s3mg8
                           rr_s3mg9] \r []
                              case m_s3mfT of {
                                GHC.Types.I# dt7_s3mgc [Occ=Once] ->
                                    let {
                                      sat_s3mgd [Occ=Once] :: GHC.Event.PSQ.Mask
                                      [LclId] =
                                          CCCS GHC.Types.I#! [dt5_s3mg7];
                                    } in 
                                      case
                                          GHC.Event.PSQ.merge sat_s3mgd rl_s3mg8 rr_s3mg9
                                      of
                                      dt8_s3mge
                                      { __DEFAULT ->
                                            GHC.Event.PSQ.Bin [dt3_s3mg4
                                                               dt4_s3mg5
                                                               rx_s3mg6
                                                               dt7_s3mgc
                                                               wild_s3mfW
                                                               dt8_s3mge];
                                      };
                              };
                    } in 
                      let-no-escape {
                        $j1_s3mgf [Occ=Once*T[0], Dmd=<L,1*U>]
                          :: GHC.Event.PSQ.IntPSQ v_a3iHG
                        [LclId[JoinId(0)], Unf=OtherCon []] =
                            [m_s3mfT
                             dt_s3mfX
                             dt1_s3mfY
                             lx_s3mfZ
                             dt2_s3mg0
                             ll_s3mg1
                             lr_s3mg2
                             wild1_s3mg3] \r []
                                case m_s3mfT of {
                                  GHC.Types.I# dt7_s3mgh [Occ=Once] ->
                                      let {
                                        sat_s3mgi [Occ=Once] :: GHC.Event.PSQ.Mask
                                        [LclId] =
                                            CCCS GHC.Types.I#! [dt2_s3mg0];
                                      } in 
                                        case
                                            GHC.Event.PSQ.merge sat_s3mgi ll_s3mg1 lr_s3mg2
                                        of
                                        dt8_s3mgj
                                        { __DEFAULT ->
                                              GHC.Event.PSQ.Bin [dt_s3mfX
                                                                 dt1_s3mfY
                                                                 lx_s3mfZ
                                                                 dt7_s3mgh
                                                                 dt8_s3mgj
                                                                 wild1_s3mg3];
                                        };
                                };
                      } in 
                        case eqWord# [dt1_s3mfY dt4_s3mg5] of {
                          __DEFAULT ->
                              case leWord# [dt1_s3mfY dt4_s3mg5] of {
                                __DEFAULT -> $j_s3mga;
                                1# -> $j1_s3mgf;
                              };
                          1# ->
                              case <# [dt_s3mfX dt3_s3mg4] of {
                                __DEFAULT -> $j_s3mga;
                                1# -> $j1_s3mgf;
                              };
                        };
                GHC.Event.PSQ.Tip dt3_s3mgn dt4_s3mgo rx_s3mgp [Occ=Once*] ->
                    let-no-escape {
                      $j_s3mgq [Occ=Once*T[0], Dmd=<L,1*U>]
                        :: GHC.Event.PSQ.IntPSQ v_a3iHG
                      [LclId[JoinId(0)], Unf=OtherCon []] =
                          [m_s3mfT
                           dt_s3mfX
                           dt1_s3mfY
                           lx_s3mfZ
                           dt2_s3mg0
                           ll_s3mg1
                           lr_s3mg2
                           wild1_s3mg3] \r []
                              case m_s3mfT of {
                                GHC.Types.I# dt6_s3mgs [Occ=Once] ->
                                    let {
                                      sat_s3mgt [Occ=Once] :: GHC.Event.PSQ.Mask
                                      [LclId] =
                                          CCCS GHC.Types.I#! [dt2_s3mg0];
                                    } in 
                                      case
                                          GHC.Event.PSQ.merge sat_s3mgt ll_s3mg1 lr_s3mg2
                                      of
                                      dt7_s3mgu
                                      { __DEFAULT ->
                                            GHC.Event.PSQ.Bin [dt_s3mfX
                                                               dt1_s3mfY
                                                               lx_s3mfZ
                                                               dt6_s3mgs
                                                               dt7_s3mgu
                                                               wild1_s3mg3];
                                      };
                              };
                    } in 
                      case eqWord# [dt1_s3mfY dt4_s3mgo] of {
                        __DEFAULT ->
                            case leWord# [dt1_s3mfY dt4_s3mgo] of {
                              __DEFAULT ->
                                  case m_s3mfT of {
                                    GHC.Types.I# dt6_s3mgy [Occ=Once] ->
                                        GHC.Event.PSQ.Bin [dt3_s3mgn
                                                           dt4_s3mgo
                                                           rx_s3mgp
                                                           dt6_s3mgy
                                                           wild_s3mfW
                                                           GHC.Event.PSQ.Nil];
                                  };
                              1# -> $j_s3mgq;
                            };
                        1# ->
                            case <# [dt_s3mfX dt3_s3mgn] of {
                              __DEFAULT ->
                                  case m_s3mfT of {
                                    GHC.Types.I# dt6_s3mgB [Occ=Once] ->
                                        GHC.Event.PSQ.Bin [dt3_s3mgn
                                                           dt4_s3mgo
                                                           rx_s3mgp
                                                           dt6_s3mgB
                                                           wild_s3mfW
                                                           GHC.Event.PSQ.Nil];
                                  };
                              1# -> $j_s3mgq;
                            };
                      };
                GHC.Event.PSQ.Nil -> wild_s3mfW;
              };
          GHC.Event.PSQ.Tip dt_s3mgC dt1_s3mgD lx_s3mgE [Occ=Once*] ->
              case r_s3mfV of wild1_s3mgF {
                GHC.Event.PSQ.Bin dt2_s3mgG
                                  dt3_s3mgH
                                  rx_s3mgI [Occ=Once]
                                  dt4_s3mgJ [Occ=Once]
                                  rl_s3mgK [Occ=Once]
                                  rr_s3mgL [Occ=Once] ->
                    let-no-escape {
                      $j_s3mgM [Occ=Once*T[0], Dmd=<L,1*U>]
                        :: GHC.Event.PSQ.IntPSQ v_a3iHG
                      [LclId[JoinId(0)], Unf=OtherCon []] =
                          [m_s3mfT
                           wild_s3mfW
                           dt2_s3mgG
                           dt3_s3mgH
                           rx_s3mgI
                           dt4_s3mgJ
                           rl_s3mgK
                           rr_s3mgL] \r []
                              case m_s3mfT of {
                                GHC.Types.I# dt6_s3mgO [Occ=Once] ->
                                    let {
                                      sat_s3mgP [Occ=Once] :: GHC.Event.PSQ.Mask
                                      [LclId] =
                                          CCCS GHC.Types.I#! [dt4_s3mgJ];
                                    } in 
                                      case
                                          GHC.Event.PSQ.merge sat_s3mgP rl_s3mgK rr_s3mgL
                                      of
                                      dt7_s3mgQ
                                      { __DEFAULT ->
                                            GHC.Event.PSQ.Bin [dt2_s3mgG
                                                               dt3_s3mgH
                                                               rx_s3mgI
                                                               dt6_s3mgO
                                                               wild_s3mfW
                                                               dt7_s3mgQ];
                                      };
                              };
                    } in 
                      case eqWord# [dt1_s3mgD dt3_s3mgH] of {
                        __DEFAULT ->
                            case leWord# [dt1_s3mgD dt3_s3mgH] of {
                              __DEFAULT -> $j_s3mgM;
                              1# ->
                                  case m_s3mfT of {
                                    GHC.Types.I# dt6_s3mgU [Occ=Once] ->
                                        GHC.Event.PSQ.Bin [dt_s3mgC
                                                           dt1_s3mgD
                                                           lx_s3mgE
                                                           dt6_s3mgU
                                                           GHC.Event.PSQ.Nil
                                                           wild1_s3mgF];
                                  };
                            };
                        1# ->
                            case <# [dt_s3mgC dt2_s3mgG] of {
                              __DEFAULT -> $j_s3mgM;
                              1# ->
                                  case m_s3mfT of {
                                    GHC.Types.I# dt6_s3mgX [Occ=Once] ->
                                        GHC.Event.PSQ.Bin [dt_s3mgC
                                                           dt1_s3mgD
                                                           lx_s3mgE
                                                           dt6_s3mgX
                                                           GHC.Event.PSQ.Nil
                                                           wild1_s3mgF];
                                  };
                            };
                      };
                GHC.Event.PSQ.Tip dt2_s3mgY dt3_s3mgZ rx_s3mh0 [Occ=Once*] ->
                    case eqWord# [dt1_s3mgD dt3_s3mgZ] of {
                      __DEFAULT ->
                          case leWord# [dt1_s3mgD dt3_s3mgZ] of {
                            __DEFAULT ->
                                case m_s3mfT of {
                                  GHC.Types.I# dt5_s3mh4 [Occ=Once] ->
                                      GHC.Event.PSQ.Bin [dt2_s3mgY
                                                         dt3_s3mgZ
                                                         rx_s3mh0
                                                         dt5_s3mh4
                                                         wild_s3mfW
                                                         GHC.Event.PSQ.Nil];
                                };
                            1# ->
                                case m_s3mfT of {
                                  GHC.Types.I# dt5_s3mh6 [Occ=Once] ->
                                      GHC.Event.PSQ.Bin [dt_s3mgC
                                                         dt1_s3mgD
                                                         lx_s3mgE
                                                         dt5_s3mh6
                                                         GHC.Event.PSQ.Nil
                                                         wild1_s3mgF];
                                };
                          };
                      1# ->
                          case <# [dt_s3mgC dt2_s3mgY] of {
                            __DEFAULT ->
                                case m_s3mfT of {
                                  GHC.Types.I# dt5_s3mh9 [Occ=Once] ->
                                      GHC.Event.PSQ.Bin [dt2_s3mgY
                                                         dt3_s3mgZ
                                                         rx_s3mh0
                                                         dt5_s3mh9
                                                         wild_s3mfW
                                                         GHC.Event.PSQ.Nil];
                                };
                            1# ->
                                case m_s3mfT of {
                                  GHC.Types.I# dt5_s3mhb [Occ=Once] ->
                                      GHC.Event.PSQ.Bin [dt_s3mgC
                                                         dt1_s3mgD
                                                         lx_s3mgE
                                                         dt5_s3mhb
                                                         GHC.Event.PSQ.Nil
                                                         wild1_s3mgF];
                                };
                          };
                    };
                GHC.Event.PSQ.Nil -> wild_s3mfW;
              };
          GHC.Event.PSQ.Nil -> r_s3mfV;
        };

GHC.Event.PSQ.$watMost [InlPrag=INLINABLE[0]]
  :: forall v.
     GHC.Event.PSQ.Prio
     -> GHC.Event.PSQ.IntPSQ v
     -> (# [GHC.Event.PSQ.Elem v], GHC.Event.PSQ.IntPSQ v #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U(U)><S,1*U>,
 Unf=OtherCon []] =
    [] \r [w_s3mhc w1_s3mhd]
        let {
          $wgo_s3mhe [InlPrag=NOUSERINLINE[0], Occ=LoopBreaker]
            :: [GHC.Event.PSQ.Elem v_s3jT8]
               -> GHC.Event.PSQ.IntPSQ v_s3jT8
               -> (# [GHC.Event.PSQ.Elem v_s3jT8], GHC.Event.PSQ.IntPSQ v_s3jT8 #)
          [LclId, Arity=2, Str=<L,U><S,1*U>, Unf=OtherCon []] =
              sat-only [w_s3mhc $wgo_s3mhe] \r [w2_s3mhf w3_s3mhg]
                  case w3_s3mhg of wild_s3mhh {
                    GHC.Event.PSQ.Bin dt_s3mhi [Occ=Once]
                                      dt1_s3mhj
                                      x_s3mhk [Occ=Once]
                                      dt2_s3mhl [Occ=Once]
                                      l_s3mhm [Occ=Once]
                                      r_s3mhn [Occ=Once] ->
                        case w_s3mhc of {
                          GHC.Word.W64# y_s3mhp [Occ=Once] ->
                              case gtWord# [dt1_s3mhj y_s3mhp] of {
                                __DEFAULT ->
                                    let {
                                      ds_s3mhr [Dmd=<L,U(1*U,1*U)>]
                                        :: ([GHC.Event.PSQ.Elem v_s3jT8],
                                            GHC.Event.PSQ.IntPSQ v_s3jT8)
                                      [LclId] =
                                          [$wgo_s3mhe w2_s3mhf l_s3mhm] \u []
                                              case $wgo_s3mhe w2_s3mhf l_s3mhm of {
                                                (#,#) ww1_s3mht [Occ=Once] ww2_s3mhu [Occ=Once] ->
                                                    (,) [ww1_s3mht ww2_s3mhu];
                                              }; } in
                                    let {
                                      ds1_s3mhv [Dmd=<L,U(1*U,1*U)>]
                                        :: ([GHC.Event.PSQ.Elem v_s3jT8],
                                            GHC.Event.PSQ.IntPSQ v_s3jT8)
                                      [LclId] =
                                          [$wgo_s3mhe r_s3mhn ds_s3mhr] \u []
                                              let {
                                                sat_s3mhz [Occ=Once] :: [GHC.Event.PSQ.Elem v_s3jT8]
                                                [LclId] =
                                                    [ds_s3mhr] \u []
                                                        case ds_s3mhr of {
                                                          (,) acc'_s3mhx [Occ=Once] _ [Occ=Dead] ->
                                                              acc'_s3mhx;
                                                        };
                                              } in 
                                                case $wgo_s3mhe sat_s3mhz r_s3mhn of {
                                                  (#,#) ww1_s3mhB [Occ=Once] ww2_s3mhC [Occ=Once] ->
                                                      (,) [ww1_s3mhB ww2_s3mhC];
                                                }; } in
                                    let {
                                      sat_s3mhQ [Occ=Once] :: GHC.Event.PSQ.IntPSQ v_s3jT8
                                      [LclId] =
                                          [dt2_s3mhl ds_s3mhr ds1_s3mhv] \u []
                                              case ds_s3mhr of {
                                                (,) _ [Occ=Dead] l'_s3mhL [Occ=Once] ->
                                                    case ds1_s3mhv of {
                                                      (,) _ [Occ=Dead] r'_s3mhO [Occ=Once] ->
                                                          let {
                                                            sat_s3mhP [Occ=Once]
                                                              :: GHC.Event.PSQ.Mask
                                                            [LclId] =
                                                                CCCS GHC.Types.I#! [dt2_s3mhl];
                                                          } in 
                                                            GHC.Event.PSQ.merge
                                                                sat_s3mhP l'_s3mhL r'_s3mhO;
                                                    };
                                              }; } in
                                    let {
                                      sat_s3mhH [Occ=Once] :: [GHC.Event.PSQ.Elem v_s3jT8]
                                      [LclId] =
                                          [ds1_s3mhv] \u []
                                              case ds1_s3mhv of {
                                                (,) acc''_s3mhF [Occ=Once] _ [Occ=Dead] ->
                                                    acc''_s3mhF;
                                              }; } in
                                    let {
                                      sat_s3mhD [Occ=Once] :: GHC.Event.PSQ.Elem v_s3jT8
                                      [LclId] =
                                          CCCS GHC.Event.PSQ.E! [dt_s3mhi dt1_s3mhj x_s3mhk]; } in
                                    let {
                                      sat_s3mhI [Occ=Once] :: [GHC.Event.PSQ.Elem v_s3jT8]
                                      [LclId] =
                                          CCCS :! [sat_s3mhD sat_s3mhH];
                                    } in  (#,#) [sat_s3mhI sat_s3mhQ];
                                1# -> (#,#) [w2_s3mhf wild_s3mhh];
                              };
                        };
                    GHC.Event.PSQ.Tip dt_s3mhR [Occ=Once]
                                      dt1_s3mhS
                                      x_s3mhT [Occ=Once] ->
                        case w_s3mhc of {
                          GHC.Word.W64# y_s3mhV [Occ=Once] ->
                              case gtWord# [dt1_s3mhS y_s3mhV] of {
                                __DEFAULT ->
                                    let {
                                      sat_s3mhX [Occ=Once] :: GHC.Event.PSQ.Elem v_s3jT8
                                      [LclId] =
                                          CCCS GHC.Event.PSQ.E! [dt_s3mhR dt1_s3mhS x_s3mhT]; } in
                                    let {
                                      sat_s3mhY [Occ=Once] :: [GHC.Event.PSQ.Elem v_s3jT8]
                                      [LclId] =
                                          CCCS :! [sat_s3mhX w2_s3mhf];
                                    } in  (#,#) [sat_s3mhY GHC.Event.PSQ.Nil];
                                1# -> (#,#) [w2_s3mhf wild_s3mhh];
                              };
                        };
                    GHC.Event.PSQ.Nil -> (#,#) [w2_s3mhf GHC.Event.PSQ.Nil];
                  };
        } in  $wgo_s3mhe GHC.Types.[] w1_s3mhd;

GHC.Event.PSQ.atMost [InlPrag=NOUSERINLINE[0]]
  :: forall v.
     GHC.Event.PSQ.Prio
     -> GHC.Event.PSQ.IntPSQ v
     -> ([GHC.Event.PSQ.Elem v], GHC.Event.PSQ.IntPSQ v)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U(U)><S,1*U>m,
 Unf=OtherCon []] =
    [] \r [w_s3mhZ w1_s3mi0]
        case GHC.Event.PSQ.$watMost w_s3mhZ w1_s3mi0 of {
          (#,#) ww1_s3mi2 [Occ=Once] ww2_s3mi3 [Occ=Once] ->
              (,) [ww1_s3mi2 ww2_s3mi3];
        };

GHC.Event.PSQ.minView [InlPrag=INLINE (sat-args=1)]
  :: forall v.
     GHC.Event.PSQ.IntPSQ v
     -> GHC.Base.Maybe (GHC.Event.PSQ.Elem v, GHC.Event.PSQ.IntPSQ v)
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [t_s3mi4]
        case t_s3mi4 of {
          GHC.Event.PSQ.Bin dt_s3mi6 [Occ=Once]
                            dt1_s3mi7 [Occ=Once]
                            x_s3mi8 [Occ=Once]
                            dt2_s3mi9 [Occ=Once]
                            l_s3mia [Occ=Once]
                            r_s3mib [Occ=Once] ->
              let {
                sat_s3mie [Occ=Once] :: GHC.Event.PSQ.IntPSQ v_a3iJO
                [LclId] =
                    [dt2_s3mi9 l_s3mia r_s3mib] \u []
                        let {
                          sat_s3mid [Occ=Once] :: GHC.Event.PSQ.Mask
                          [LclId] =
                              CCCS GHC.Types.I#! [dt2_s3mi9];
                        } in  GHC.Event.PSQ.merge sat_s3mid l_s3mia r_s3mib; } in
              let {
                sat_s3mic [Occ=Once] :: GHC.Event.PSQ.Elem v_a3iJO
                [LclId] =
                    CCCS GHC.Event.PSQ.E! [dt_s3mi6 dt1_s3mi7 x_s3mi8]; } in
              let {
                sat_s3mif [Occ=Once]
                  :: (GHC.Event.PSQ.Elem v_a3iJO, GHC.Event.PSQ.IntPSQ v_a3iJO)
                [LclId] =
                    CCCS (,)! [sat_s3mic sat_s3mie];
              } in  GHC.Base.Just [sat_s3mif];
          GHC.Event.PSQ.Tip dt_s3mig [Occ=Once]
                            dt1_s3mih [Occ=Once]
                            x_s3mii [Occ=Once] ->
              let {
                sat_s3mij [Occ=Once] :: GHC.Event.PSQ.Elem v_a3iJO
                [LclId] =
                    CCCS GHC.Event.PSQ.E! [dt_s3mig dt1_s3mih x_s3mii]; } in
              let {
                sat_s3mik [Occ=Once]
                  :: (GHC.Event.PSQ.Elem v_a3iJO, GHC.Event.PSQ.IntPSQ v_a3iJO)
                [LclId] =
                    CCCS (,)! [sat_s3mij GHC.Event.PSQ.Nil];
              } in  GHC.Base.Just [sat_s3mik];
          GHC.Event.PSQ.Nil -> GHC.Base.Nothing [];
        };

GHC.Event.PSQ.deleteMin [InlPrag=INLINE (sat-args=1)]
  :: forall v. GHC.Event.PSQ.IntPSQ v -> GHC.Event.PSQ.IntPSQ v
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [t_s3mil]
        case t_s3mil of {
          GHC.Event.PSQ.Bin _ [Occ=Dead]
                            _ [Occ=Dead]
                            _ [Occ=Dead]
                            dt2_s3miq [Occ=Once]
                            l_s3mir [Occ=Once]
                            r_s3mis [Occ=Once] ->
              let {
                sat_s3mit [Occ=Once] :: GHC.Event.PSQ.Mask
                [LclId] =
                    CCCS GHC.Types.I#! [dt2_s3miq];
              } in  GHC.Event.PSQ.merge sat_s3mit l_s3mir r_s3mis;
          GHC.Event.PSQ.Tip _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] ->
              GHC.Event.PSQ.Nil [];
          GHC.Event.PSQ.Nil -> GHC.Event.PSQ.Nil [];
        };

GHC.Event.PSQ.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

GHC.Event.PSQ.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.PSQ.$trModule4];

GHC.Event.PSQ.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.Event.PSQ"#;

GHC.Event.PSQ.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.PSQ.$trModule2];

GHC.Event.PSQ.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [GHC.Event.PSQ.$trModule3
                                     GHC.Event.PSQ.$trModule1];

$krep_r3kcT :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcInt
                                              GHC.Types.[]];

$krep1_r3kcU :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Word.$tcWord64
                                              GHC.Types.[]];

$krep2_r3kcV :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.Unique.$tcUnique
                                              GHC.Types.[]];

$krep3_r3kcW :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepVar! [0#];

GHC.Event.PSQ.$tcElem2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Elem"#;

GHC.Event.PSQ.$tcElem1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.PSQ.$tcElem2];

GHC.Event.PSQ.$tcElem :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [15044414420558834066##
                                    12198171511156299872##
                                    GHC.Event.PSQ.$trModule
                                    GHC.Event.PSQ.$tcElem1
                                    0#
                                    GHC.Types.krep$*Arr*];

$krep4_r3kcX :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep3_r3kcW GHC.Types.[]];

$krep5_r3kcY :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.PSQ.$tcElem
                                              $krep4_r3kcX];

$krep6_r3kcZ :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep3_r3kcW $krep5_r3kcY];

$krep7_r3kd0 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep1_r3kcU $krep6_r3kcZ];

GHC.Event.PSQ.$tc'E1 [InlPrag=NOUSERINLINE[~]] :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_r3kcV $krep7_r3kd0];

GHC.Event.PSQ.$tc'E3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'E"#;

GHC.Event.PSQ.$tc'E2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.PSQ.$tc'E3];

GHC.Event.PSQ.$tc'E :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [11813029942800942247##
                                    17450377919573390885##
                                    GHC.Event.PSQ.$trModule
                                    GHC.Event.PSQ.$tc'E2
                                    1#
                                    GHC.Event.PSQ.$tc'E1];

GHC.Event.PSQ.$tcIntPSQ2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "IntPSQ"#;

GHC.Event.PSQ.$tcIntPSQ1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.PSQ.$tcIntPSQ2];

GHC.Event.PSQ.$tcIntPSQ :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [15246681906271547396##
                                    11594704564387731780##
                                    GHC.Event.PSQ.$trModule
                                    GHC.Event.PSQ.$tcIntPSQ1
                                    0#
                                    GHC.Types.krep$*Arr*];

GHC.Event.PSQ.$tc'Nil1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.PSQ.$tcIntPSQ
                                              $krep4_r3kcX];

GHC.Event.PSQ.$tc'Nil3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Nil"#;

GHC.Event.PSQ.$tc'Nil2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.PSQ.$tc'Nil3];

GHC.Event.PSQ.$tc'Nil :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [9632868263130136899##
                                    16639248836205398404##
                                    GHC.Event.PSQ.$trModule
                                    GHC.Event.PSQ.$tc'Nil2
                                    1#
                                    GHC.Event.PSQ.$tc'Nil1];

$krep8_r3kd1 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep3_r3kcW
                                         GHC.Event.PSQ.$tc'Nil1];

$krep9_r3kd2 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep1_r3kcU $krep8_r3kd1];

GHC.Event.PSQ.$tc'Tip1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_r3kcV $krep9_r3kd2];

GHC.Event.PSQ.$tc'Tip3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Tip"#;

GHC.Event.PSQ.$tc'Tip2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.PSQ.$tc'Tip3];

GHC.Event.PSQ.$tc'Tip :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [4235936270888684142##
                                    17098834253377543597##
                                    GHC.Event.PSQ.$trModule
                                    GHC.Event.PSQ.$tc'Tip2
                                    1#
                                    GHC.Event.PSQ.$tc'Tip1];

$krep10_r3kd3 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [GHC.Event.PSQ.$tc'Nil1
                                         GHC.Event.PSQ.$tc'Nil1];

$krep11_r3kd4 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [GHC.Event.PSQ.$tc'Nil1
                                         $krep10_r3kd3];

$krep12_r3kd5 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_r3kcT $krep11_r3kd4];

$krep13_r3kd6 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep3_r3kcW $krep12_r3kd5];

$krep14_r3kd7 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep1_r3kcU $krep13_r3kd6];

GHC.Event.PSQ.$tc'Bin1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_r3kcV $krep14_r3kd7];

GHC.Event.PSQ.$tc'Bin3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Bin"#;

GHC.Event.PSQ.$tc'Bin2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.PSQ.$tc'Bin3];

GHC.Event.PSQ.$tc'Bin :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [8835322380894053498##
                                    4329944662539077627##
                                    GHC.Event.PSQ.$trModule
                                    GHC.Event.PSQ.$tc'Bin2
                                    1#
                                    GHC.Event.PSQ.$tc'Bin1];

GHC.Event.PSQ.lookup
  :: forall v.
     GHC.Event.PSQ.Key
     -> GHC.Event.PSQ.IntPSQ v -> GHC.Base.Maybe (GHC.Event.PSQ.Prio, v)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U(U)><S,1*U>,
 Unf=OtherCon []] =
    [] \r [k_s3mix eta_s3miy]
        let-no-escape {
          exit_s3miz [Occ=OnceL!T[3], Dmd=<L,C(C1(C1(U)))>]
            :: GHC.Prim.Int#
               -> GHC.Prim.Word#
               -> v_a3iMt
               -> GHC.Base.Maybe (GHC.Event.PSQ.Prio, v_a3iMt)
          [LclId[JoinId(3)], Arity=3, Str=<S,U><L,U><L,U>, Unf=OtherCon []] =
              sat-only [k_s3mix] \r [dt_s3miA dt1_s3miB x'_s3miC]
                  case k_s3mix of {
                    GHC.Types.I# x_s3miE [Occ=Once] ->
                        case ==# [x_s3miE dt_s3miA] of {
                          __DEFAULT -> GHC.Base.Nothing [];
                          1# ->
                              let {
                                sat_s3miG [Occ=Once] :: GHC.Event.PSQ.Prio
                                [LclId] =
                                    CCCS GHC.Word.W64#! [dt1_s3miB]; } in
                              let {
                                sat_s3miH [Occ=Once] :: (GHC.Event.PSQ.Prio, v_a3iMt)
                                [LclId] =
                                    CCCS (,)! [sat_s3miG x'_s3miC];
                              } in  GHC.Base.Just [sat_s3miH];
                        };
                  };
        } in 
          let-no-escape {
            go1_s3miI [Occ=LoopBreakerT[1]]
              :: GHC.Event.PSQ.IntPSQ v_a3iMt
                 -> GHC.Base.Maybe (GHC.Event.PSQ.Prio, v_a3iMt)
            [LclId[JoinId(1)], Arity=1, Str=<S,1*U>, Unf=OtherCon []] =
                sat-only [k_s3mix exit_s3miz go1_s3miI] \r [t_s3miJ]
                    case t_s3miJ of {
                      GHC.Event.PSQ.Bin dt_s3miL
                                        dt1_s3miM [Occ=Once]
                                        x'_s3miN [Occ=Once]
                                        dt2_s3miO [Occ=Once]
                                        l_s3miP [Occ=Once]
                                        r_s3miQ [Occ=Once] ->
                          case k_s3mix of {
                            GHC.Types.I# x#_s3miS ->
                                case int2Word# [dt2_s3miO] of m_s3miT [Dmd=<S,U>] {
                                  __DEFAULT ->
                                      case minusWord# [m_s3miT 1##] of sat_s3miV {
                                        __DEFAULT ->
                                            case
                                                xor# [sat_s3miV 18446744073709551615##]
                                            of
                                            sat_s3miW
                                            { __DEFAULT ->
                                                  case
                                                      xor# [sat_s3miW m_s3miT]
                                                  of
                                                  m'_s3miU [Dmd=<S,U>]
                                                  { __DEFAULT ->
                                                        case int2Word# [dt_s3miL] of sat_s3miZ {
                                                          __DEFAULT ->
                                                              case
                                                                  and# [sat_s3miZ m'_s3miU]
                                                              of
                                                              sat_s3mj0
                                                              { __DEFAULT ->
                                                                    case
                                                                        int2Word# [x#_s3miS]
                                                                    of
                                                                    sat_s3miX
                                                                    { __DEFAULT ->
                                                                          case
                                                                              and# [sat_s3miX
                                                                                    m'_s3miU]
                                                                          of
                                                                          sat_s3miY
                                                                          { __DEFAULT ->
                                                                                case
                                                                                    neWord# [sat_s3miY
                                                                                             sat_s3mj0]
                                                                                of
                                                                                { __DEFAULT ->
                                                                                      case
                                                                                          ==# [x#_s3miS
                                                                                               dt_s3miL]
                                                                                      of
                                                                                      { __DEFAULT ->
                                                                                            case
                                                                                                int2Word# [x#_s3miS]
                                                                                            of
                                                                                            sat_s3mj3
                                                                                            { __DEFAULT ->
                                                                                                  case
                                                                                                      and# [sat_s3mj3
                                                                                                            m_s3miT]
                                                                                                  of
                                                                                                  { __DEFAULT ->
                                                                                                        go1_s3miI
                                                                                                            r_s3miQ;
                                                                                                    0## ->
                                                                                                        go1_s3miI
                                                                                                            l_s3miP;
                                                                                                  };
                                                                                            };
                                                                                        1# ->
                                                                                            let {
                                                                                              sat_s3mj5 [Occ=Once]
                                                                                                :: GHC.Event.PSQ.Prio
                                                                                              [LclId] =
                                                                                                  CCCS GHC.Word.W64#! [dt1_s3miM]; } in
                                                                                            let {
                                                                                              sat_s3mj6 [Occ=Once]
                                                                                                :: (GHC.Event.PSQ.Prio,
                                                                                                    v_a3iMt)
                                                                                              [LclId] =
                                                                                                  CCCS (,)! [sat_s3mj5
                                                                                                             x'_s3miN];
                                                                                            } in 
                                                                                              GHC.Base.Just [sat_s3mj6];
                                                                                      };
                                                                                  1# ->
                                                                                      GHC.Base.Nothing [];
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                                };
                          };
                      GHC.Event.PSQ.Tip dt_s3mj7 [Occ=Once]
                                        dt1_s3mj8 [Occ=Once]
                                        x'_s3mj9 [Occ=Once] ->
                          exit_s3miz dt_s3mj7 dt1_s3mj8 x'_s3mj9;
                      GHC.Event.PSQ.Nil -> GHC.Base.Nothing [];
                    };
          } in  go1_s3miI eta_s3miy;

GHC.Event.PSQ.delete [InlPrag=INLINABLE]
  :: forall v.
     GHC.Event.PSQ.Key
     -> GHC.Event.PSQ.IntPSQ v -> GHC.Event.PSQ.IntPSQ v
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U(U)><S,1*U>,
 Unf=OtherCon []] =
    [] \r [k_s3mja eta_s3mjb]
        let {
          go1_s3mjc [Occ=LoopBreaker]
            :: GHC.Event.PSQ.IntPSQ v_a3iNV -> GHC.Event.PSQ.IntPSQ v_a3iNV
          [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []] =
              sat-only [k_s3mja go1_s3mjc] \r [t_s3mjd]
                  case t_s3mjd of wild_s3mje {
                    GHC.Event.PSQ.Bin dt_s3mjf
                                      dt1_s3mjg [Occ=Once*]
                                      x'_s3mjh [Occ=Once*]
                                      dt2_s3mji
                                      l_s3mjj [Occ=Once*]
                                      r_s3mjk [Occ=Once*] ->
                        case k_s3mja of {
                          GHC.Types.I# x#_s3mjm ->
                              case int2Word# [dt2_s3mji] of m_s3mjn [Dmd=<S,U>] {
                                __DEFAULT ->
                                    case minusWord# [m_s3mjn 1##] of sat_s3mjp {
                                      __DEFAULT ->
                                          case
                                              xor# [sat_s3mjp 18446744073709551615##]
                                          of
                                          sat_s3mjq
                                          { __DEFAULT ->
                                                case
                                                    xor# [sat_s3mjq m_s3mjn]
                                                of
                                                m'_s3mjo [Dmd=<S,U>]
                                                { __DEFAULT ->
                                                      case int2Word# [dt_s3mjf] of sat_s3mjt {
                                                        __DEFAULT ->
                                                            case
                                                                and# [sat_s3mjt m'_s3mjo]
                                                            of
                                                            sat_s3mju
                                                            { __DEFAULT ->
                                                                  case
                                                                      int2Word# [x#_s3mjm]
                                                                  of
                                                                  sat_s3mjr
                                                                  { __DEFAULT ->
                                                                        case
                                                                            and# [sat_s3mjr
                                                                                  m'_s3mjo]
                                                                        of
                                                                        sat_s3mjs
                                                                        { __DEFAULT ->
                                                                              case
                                                                                  neWord# [sat_s3mjs
                                                                                           sat_s3mju]
                                                                              of
                                                                              { __DEFAULT ->
                                                                                    case
                                                                                        ==# [x#_s3mjm
                                                                                             dt_s3mjf]
                                                                                    of
                                                                                    { __DEFAULT ->
                                                                                          case
                                                                                              int2Word# [x#_s3mjm]
                                                                                          of
                                                                                          sat_s3mjx
                                                                                          { __DEFAULT ->
                                                                                                case
                                                                                                    and# [sat_s3mjx
                                                                                                          m_s3mjn]
                                                                                                of
                                                                                                { __DEFAULT ->
                                                                                                      case
                                                                                                          go1_s3mjc
                                                                                                              r_s3mjk
                                                                                                      of
                                                                                                      wild3_s3mjz
                                                                                                      { __DEFAULT ->
                                                                                                            GHC.Event.PSQ.Bin [dt_s3mjf
                                                                                                                               dt1_s3mjg
                                                                                                                               x'_s3mjh
                                                                                                                               dt2_s3mji
                                                                                                                               l_s3mjj
                                                                                                                               wild3_s3mjz];
                                                                                                        GHC.Event.PSQ.Nil ->
                                                                                                            case
                                                                                                                l_s3mjj
                                                                                                            of
                                                                                                            wild4_s3mjA
                                                                                                            { __DEFAULT ->
                                                                                                                  GHC.Event.PSQ.Bin [dt_s3mjf
                                                                                                                                     dt1_s3mjg
                                                                                                                                     x'_s3mjh
                                                                                                                                     dt2_s3mji
                                                                                                                                     wild4_s3mjA
                                                                                                                                     GHC.Event.PSQ.Nil];
                                                                                                              GHC.Event.PSQ.Nil ->
                                                                                                                  GHC.Event.PSQ.Tip [dt_s3mjf
                                                                                                                                     dt1_s3mjg
                                                                                                                                     x'_s3mjh];
                                                                                                            };
                                                                                                      };
                                                                                                  0## ->
                                                                                                      case
                                                                                                          go1_s3mjc
                                                                                                              l_s3mjj
                                                                                                      of
                                                                                                      wild3_s3mjB
                                                                                                      { __DEFAULT ->
                                                                                                            GHC.Event.PSQ.Bin [dt_s3mjf
                                                                                                                               dt1_s3mjg
                                                                                                                               x'_s3mjh
                                                                                                                               dt2_s3mji
                                                                                                                               wild3_s3mjB
                                                                                                                               r_s3mjk];
                                                                                                        GHC.Event.PSQ.Nil ->
                                                                                                            case
                                                                                                                r_s3mjk
                                                                                                            of
                                                                                                            wild4_s3mjC
                                                                                                            { __DEFAULT ->
                                                                                                                  GHC.Event.PSQ.Bin [dt_s3mjf
                                                                                                                                     dt1_s3mjg
                                                                                                                                     x'_s3mjh
                                                                                                                                     dt2_s3mji
                                                                                                                                     GHC.Event.PSQ.Nil
                                                                                                                                     wild4_s3mjC];
                                                                                                              GHC.Event.PSQ.Nil ->
                                                                                                                  GHC.Event.PSQ.Tip [dt_s3mjf
                                                                                                                                     dt1_s3mjg
                                                                                                                                     x'_s3mjh];
                                                                                                            };
                                                                                                      };
                                                                                                };
                                                                                          };
                                                                                      1# ->
                                                                                          let {
                                                                                            sat_s3mjD [Occ=Once]
                                                                                              :: GHC.Event.PSQ.Mask
                                                                                            [LclId] =
                                                                                                CCCS GHC.Types.I#! [dt2_s3mji];
                                                                                          } in 
                                                                                            GHC.Event.PSQ.merge
                                                                                                sat_s3mjD
                                                                                                l_s3mjj
                                                                                                r_s3mjk;
                                                                                    };
                                                                                1# -> wild_s3mje;
                                                                              };
                                                                        };
                                                                  };
                                                            };
                                                      };
                                                };
                                          };
                                    };
                              };
                        };
                    GHC.Event.PSQ.Tip dt_s3mjE [Occ=Once] _ [Occ=Dead] _ [Occ=Dead] ->
                        case k_s3mja of {
                          GHC.Types.I# x_s3mjI [Occ=Once] ->
                              case ==# [x_s3mjI dt_s3mjE] of {
                                __DEFAULT -> wild_s3mje;
                                1# -> GHC.Event.PSQ.Nil [];
                              };
                        };
                    GHC.Event.PSQ.Nil -> GHC.Event.PSQ.Nil [];
                  };
        } in  go1_s3mjc eta_s3mjb;

GHC.Event.PSQ.deleteView [InlPrag=INLINABLE]
  :: forall v.
     GHC.Event.PSQ.Key
     -> GHC.Event.PSQ.IntPSQ v
     -> GHC.Base.Maybe (GHC.Event.PSQ.Prio, v, GHC.Event.PSQ.IntPSQ v)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U(U)><S,1*U>,
 Unf=OtherCon []] =
    [] \r [k_s3mjK t0_s3mjL]
        let {
          delFrom_s3mjM [Occ=LoopBreaker]
            :: GHC.Event.PSQ.IntPSQ v_a3iOE
               -> (# GHC.Event.PSQ.IntPSQ v_a3iOE,
                     GHC.Base.Maybe (GHC.Event.PSQ.Prio, v_a3iOE) #)
          [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []] =
              sat-only [k_s3mjK delFrom_s3mjM] \r [t_s3mjN]
                  case t_s3mjN of wild_s3mjO {
                    GHC.Event.PSQ.Bin dt_s3mjP
                                      dt1_s3mjQ [Occ=Once*]
                                      x'_s3mjR [Occ=Once*]
                                      dt2_s3mjS
                                      l_s3mjT [Occ=Once*]
                                      r_s3mjU [Occ=Once*] ->
                        case k_s3mjK of {
                          GHC.Types.I# x#_s3mjW ->
                              case int2Word# [dt2_s3mjS] of m_s3mjX [Dmd=<S,U>] {
                                __DEFAULT ->
                                    case minusWord# [m_s3mjX 1##] of sat_s3mjZ {
                                      __DEFAULT ->
                                          case
                                              xor# [sat_s3mjZ 18446744073709551615##]
                                          of
                                          sat_s3mk0
                                          { __DEFAULT ->
                                                case
                                                    xor# [sat_s3mk0 m_s3mjX]
                                                of
                                                m'_s3mjY [Dmd=<S,U>]
                                                { __DEFAULT ->
                                                      case int2Word# [dt_s3mjP] of sat_s3mk3 {
                                                        __DEFAULT ->
                                                            case
                                                                and# [sat_s3mk3 m'_s3mjY]
                                                            of
                                                            sat_s3mk4
                                                            { __DEFAULT ->
                                                                  case
                                                                      int2Word# [x#_s3mjW]
                                                                  of
                                                                  sat_s3mk1
                                                                  { __DEFAULT ->
                                                                        case
                                                                            and# [sat_s3mk1
                                                                                  m'_s3mjY]
                                                                        of
                                                                        sat_s3mk2
                                                                        { __DEFAULT ->
                                                                              case
                                                                                  neWord# [sat_s3mk2
                                                                                           sat_s3mk4]
                                                                              of
                                                                              { __DEFAULT ->
                                                                                    case
                                                                                        ==# [x#_s3mjW
                                                                                             dt_s3mjP]
                                                                                    of
                                                                                    { __DEFAULT ->
                                                                                          case
                                                                                              int2Word# [x#_s3mjW]
                                                                                          of
                                                                                          sat_s3mk7
                                                                                          { __DEFAULT ->
                                                                                                case
                                                                                                    and# [sat_s3mk7
                                                                                                          m_s3mjX]
                                                                                                of
                                                                                                { __DEFAULT ->
                                                                                                      case
                                                                                                          delFrom_s3mjM
                                                                                                              r_s3mjU
                                                                                                      of
                                                                                                      { (#,#) ipv_s3mka [Occ=Once!]
                                                                                                              ipv1_s3mkb [Occ=Once*] ->
                                                                                                            case
                                                                                                                ipv_s3mka
                                                                                                            of
                                                                                                            wild3_s3mkc
                                                                                                            { __DEFAULT ->
                                                                                                                  let {
                                                                                                                    sat_s3mkd [Occ=Once]
                                                                                                                      :: GHC.Event.PSQ.IntPSQ
                                                                                                                           v_a3iOE
                                                                                                                    [LclId] =
                                                                                                                        CCCS GHC.Event.PSQ.Bin! [dt_s3mjP
                                                                                                                                                 dt1_s3mjQ
                                                                                                                                                 x'_s3mjR
                                                                                                                                                 dt2_s3mjS
                                                                                                                                                 l_s3mjT
                                                                                                                                                 wild3_s3mkc];
                                                                                                                  } in 
                                                                                                                    (#,#) [sat_s3mkd
                                                                                                                           ipv1_s3mkb];
                                                                                                              GHC.Event.PSQ.Nil ->
                                                                                                                  case
                                                                                                                      l_s3mjT
                                                                                                                  of
                                                                                                                  wild4_s3mke
                                                                                                                  { __DEFAULT ->
                                                                                                                        let {
                                                                                                                          sat_s3mkf [Occ=Once]
                                                                                                                            :: GHC.Event.PSQ.IntPSQ
                                                                                                                                 v_a3iOE
                                                                                                                          [LclId] =
                                                                                                                              CCCS GHC.Event.PSQ.Bin! [dt_s3mjP
                                                                                                                                                       dt1_s3mjQ
                                                                                                                                                       x'_s3mjR
                                                                                                                                                       dt2_s3mjS
                                                                                                                                                       wild4_s3mke
                                                                                                                                                       GHC.Event.PSQ.Nil];
                                                                                                                        } in 
                                                                                                                          (#,#) [sat_s3mkf
                                                                                                                                 ipv1_s3mkb];
                                                                                                                    GHC.Event.PSQ.Nil ->
                                                                                                                        let {
                                                                                                                          sat_s3mkg [Occ=Once]
                                                                                                                            :: GHC.Event.PSQ.IntPSQ
                                                                                                                                 v_a3iOE
                                                                                                                          [LclId] =
                                                                                                                              CCCS GHC.Event.PSQ.Tip! [dt_s3mjP
                                                                                                                                                       dt1_s3mjQ
                                                                                                                                                       x'_s3mjR];
                                                                                                                        } in 
                                                                                                                          (#,#) [sat_s3mkg
                                                                                                                                 ipv1_s3mkb];
                                                                                                                  };
                                                                                                            };
                                                                                                      };
                                                                                                  0## ->
                                                                                                      case
                                                                                                          delFrom_s3mjM
                                                                                                              l_s3mjT
                                                                                                      of
                                                                                                      { (#,#) ipv_s3mki [Occ=Once!]
                                                                                                              ipv1_s3mkj [Occ=Once*] ->
                                                                                                            case
                                                                                                                ipv_s3mki
                                                                                                            of
                                                                                                            wild3_s3mkk
                                                                                                            { __DEFAULT ->
                                                                                                                  let {
                                                                                                                    sat_s3mkl [Occ=Once]
                                                                                                                      :: GHC.Event.PSQ.IntPSQ
                                                                                                                           v_a3iOE
                                                                                                                    [LclId] =
                                                                                                                        CCCS GHC.Event.PSQ.Bin! [dt_s3mjP
                                                                                                                                                 dt1_s3mjQ
                                                                                                                                                 x'_s3mjR
                                                                                                                                                 dt2_s3mjS
                                                                                                                                                 wild3_s3mkk
                                                                                                                                                 r_s3mjU];
                                                                                                                  } in 
                                                                                                                    (#,#) [sat_s3mkl
                                                                                                                           ipv1_s3mkj];
                                                                                                              GHC.Event.PSQ.Nil ->
                                                                                                                  case
                                                                                                                      r_s3mjU
                                                                                                                  of
                                                                                                                  wild4_s3mkm
                                                                                                                  { __DEFAULT ->
                                                                                                                        let {
                                                                                                                          sat_s3mkn [Occ=Once]
                                                                                                                            :: GHC.Event.PSQ.IntPSQ
                                                                                                                                 v_a3iOE
                                                                                                                          [LclId] =
                                                                                                                              CCCS GHC.Event.PSQ.Bin! [dt_s3mjP
                                                                                                                                                       dt1_s3mjQ
                                                                                                                                                       x'_s3mjR
                                                                                                                                                       dt2_s3mjS
                                                                                                                                                       GHC.Event.PSQ.Nil
                                                                                                                                                       wild4_s3mkm];
                                                                                                                        } in 
                                                                                                                          (#,#) [sat_s3mkn
                                                                                                                                 ipv1_s3mkj];
                                                                                                                    GHC.Event.PSQ.Nil ->
                                                                                                                        let {
                                                                                                                          sat_s3mko [Occ=Once]
                                                                                                                            :: GHC.Event.PSQ.IntPSQ
                                                                                                                                 v_a3iOE
                                                                                                                          [LclId] =
                                                                                                                              CCCS GHC.Event.PSQ.Tip! [dt_s3mjP
                                                                                                                                                       dt1_s3mjQ
                                                                                                                                                       x'_s3mjR];
                                                                                                                        } in 
                                                                                                                          (#,#) [sat_s3mko
                                                                                                                                 ipv1_s3mkj];
                                                                                                                  };
                                                                                                            };
                                                                                                      };
                                                                                                };
                                                                                          };
                                                                                      1# ->
                                                                                          let {
                                                                                            sat_s3mkp [Occ=Once]
                                                                                              :: GHC.Event.PSQ.Mask
                                                                                            [LclId] =
                                                                                                CCCS GHC.Types.I#! [dt2_s3mjS];
                                                                                          } in 
                                                                                            case
                                                                                                GHC.Event.PSQ.merge
                                                                                                    sat_s3mkp
                                                                                                    l_s3mjT
                                                                                                    r_s3mjU
                                                                                            of
                                                                                            t'_s3mkq
                                                                                            { __DEFAULT ->
                                                                                                  let {
                                                                                                    sat_s3mkr [Occ=Once]
                                                                                                      :: GHC.Event.PSQ.Prio
                                                                                                    [LclId] =
                                                                                                        CCCS GHC.Word.W64#! [dt1_s3mjQ]; } in
                                                                                                  let {
                                                                                                    sat_s3mks [Occ=Once]
                                                                                                      :: (GHC.Event.PSQ.Prio,
                                                                                                          v_a3iOE)
                                                                                                    [LclId] =
                                                                                                        CCCS (,)! [sat_s3mkr
                                                                                                                   x'_s3mjR]; } in
                                                                                                  let {
                                                                                                    sat_s3mkt [Occ=Once]
                                                                                                      :: GHC.Base.Maybe
                                                                                                           (GHC.Event.PSQ.Prio,
                                                                                                            v_a3iOE)
                                                                                                    [LclId] =
                                                                                                        CCCS GHC.Base.Just! [sat_s3mks];
                                                                                                  } in 
                                                                                                    (#,#) [t'_s3mkq
                                                                                                           sat_s3mkt];
                                                                                            };
                                                                                    };
                                                                                1# ->
                                                                                    (#,#) [wild_s3mjO
                                                                                           GHC.Base.Nothing];
                                                                              };
                                                                        };
                                                                  };
                                                            };
                                                      };
                                                };
                                          };
                                    };
                              };
                        };
                    GHC.Event.PSQ.Tip dt_s3mku [Occ=Once]
                                      dt1_s3mkv [Occ=Once]
                                      x'_s3mkw [Occ=Once] ->
                        case k_s3mjK of {
                          GHC.Types.I# x_s3mky [Occ=Once] ->
                              case ==# [x_s3mky dt_s3mku] of {
                                __DEFAULT -> (#,#) [wild_s3mjO GHC.Base.Nothing];
                                1# ->
                                    let {
                                      sat_s3mkA [Occ=Once] :: GHC.Event.PSQ.Prio
                                      [LclId] =
                                          CCCS GHC.Word.W64#! [dt1_s3mkv]; } in
                                    let {
                                      sat_s3mkB [Occ=Once] :: (GHC.Event.PSQ.Prio, v_a3iOE)
                                      [LclId] =
                                          CCCS (,)! [sat_s3mkA x'_s3mkw]; } in
                                    let {
                                      sat_s3mkC [Occ=Once]
                                        :: GHC.Base.Maybe (GHC.Event.PSQ.Prio, v_a3iOE)
                                      [LclId] =
                                          CCCS GHC.Base.Just! [sat_s3mkB];
                                    } in  (#,#) [GHC.Event.PSQ.Nil sat_s3mkC];
                              };
                        };
                    GHC.Event.PSQ.Nil -> (#,#) [GHC.Event.PSQ.Nil GHC.Base.Nothing];
                  };
        } in 
          case delFrom_s3mjM t0_s3mjL of {
            (#,#) ipv_s3mkE [Occ=Once] ipv1_s3mkF [Occ=Once!] ->
                case ipv1_s3mkF of {
                  GHC.Base.Nothing -> GHC.Base.Nothing [];
                  GHC.Base.Just ds1_s3mkH [Occ=Once!] ->
                      case ds1_s3mkH of {
                        (,) p_s3mkJ [Occ=Once] x_s3mkK [Occ=Once] ->
                            let {
                              sat_s3mkL [Occ=Once]
                                :: (GHC.Event.PSQ.Prio, v_a3iOE, GHC.Event.PSQ.IntPSQ v_a3iOE)
                              [LclId] =
                                  CCCS (,,)! [p_s3mkJ x_s3mkK ipv_s3mkE];
                            } in  GHC.Base.Just [sat_s3mkL];
                      };
                };
          };

GHC.Event.PSQ.$wsize [InlPrag=NOUSERINLINE[0], Occ=LoopBreaker]
  :: forall v. GHC.Event.PSQ.IntPSQ v -> GHC.Prim.Int#
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [w_s3mkM]
        case w_s3mkM of {
          GHC.Event.PSQ.Bin _ [Occ=Dead]
                            _ [Occ=Dead]
                            _ [Occ=Dead]
                            _ [Occ=Dead]
                            l_s3mkS [Occ=Once]
                            r_s3mkT [Occ=Once] ->
              case GHC.Event.PSQ.$wsize l_s3mkS of ww_s3mkU {
                __DEFAULT ->
                    case GHC.Event.PSQ.$wsize r_s3mkT of ww1_s3mkV {
                      __DEFAULT ->
                          case +# [1# ww_s3mkU] of sat_s3mkW {
                            __DEFAULT -> +# [sat_s3mkW ww1_s3mkV];
                          };
                    };
              };
          GHC.Event.PSQ.Tip _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] -> 1#;
          GHC.Event.PSQ.Nil -> 0#;
        };

GHC.Event.PSQ.size [InlPrag=NOUSERINLINE[0]]
  :: forall v. GHC.Event.PSQ.IntPSQ v -> GHC.Types.Int
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>m, Unf=OtherCon []] =
    [] \r [w_s3ml0]
        case GHC.Event.PSQ.$wsize w_s3ml0 of ww_s3ml1 {
          __DEFAULT -> GHC.Types.I# [ww_s3ml1];
        };

GHC.Event.PSQ.$wunsafeInsertNew [InlPrag=INLINABLE[0],
                                 Occ=LoopBreaker]
  :: forall v.
     GHC.Prim.Int#
     -> GHC.Prim.Word#
     -> v
     -> GHC.Event.PSQ.IntPSQ v
     -> GHC.Event.PSQ.IntPSQ v
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S,U><S,U><S,1*U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [ww_s3ml2 ww1_s3ml3 w_s3ml4 w1_s3ml5]
        case w1_s3ml5 of wild_s3ml6 {
          GHC.Event.PSQ.Bin dt_s3ml7
                            dt1_s3ml8
                            x'_s3ml9
                            dt2_s3mla
                            l_s3mlb
                            r_s3mlc ->
              case int2Word# [dt2_s3mla] of m_s3mld [Dmd=<S,U>] {
                __DEFAULT ->
                    case minusWord# [m_s3mld 1##] of sat_s3mlf {
                      __DEFAULT ->
                          case xor# [sat_s3mlf 18446744073709551615##] of sat_s3mlg {
                            __DEFAULT ->
                                case xor# [sat_s3mlg m_s3mld] of m'_s3mle [Dmd=<S,U>] {
                                  __DEFAULT ->
                                      case int2Word# [dt_s3ml7] of sat_s3mlj {
                                        __DEFAULT ->
                                            case and# [sat_s3mlj m'_s3mle] of sat_s3mlk {
                                              __DEFAULT ->
                                                  case int2Word# [ww_s3ml2] of sat_s3mlh {
                                                    __DEFAULT ->
                                                        case
                                                            and# [sat_s3mlh m'_s3mle]
                                                        of
                                                        sat_s3mli
                                                        { __DEFAULT ->
                                                              case
                                                                  neWord# [sat_s3mli sat_s3mlk]
                                                              of
                                                              { __DEFAULT ->
                                                                    let-no-escape {
                                                                      $j_s3mlm [Occ=Once*T[0],
                                                                                Dmd=<L,1*U>]
                                                                        :: GHC.Event.PSQ.IntPSQ
                                                                             v_s3jTx
                                                                      [LclId[JoinId(0)],
                                                                       Unf=OtherCon []] =
                                                                          [ww_s3ml2
                                                                           ww1_s3ml3
                                                                           w_s3ml4
                                                                           dt_s3ml7
                                                                           dt1_s3ml8
                                                                           x'_s3ml9
                                                                           dt2_s3mla
                                                                           l_s3mlb
                                                                           r_s3mlc
                                                                           m_s3mld] \r []
                                                                              case
                                                                                  int2Word# [ww_s3ml2]
                                                                              of
                                                                              sat_s3mln
                                                                              { __DEFAULT ->
                                                                                    case
                                                                                        and# [sat_s3mln
                                                                                              m_s3mld]
                                                                                    of
                                                                                    { __DEFAULT ->
                                                                                          case
                                                                                              GHC.Event.PSQ.$wunsafeInsertNew
                                                                                                  ww_s3ml2
                                                                                                  ww1_s3ml3
                                                                                                  w_s3ml4
                                                                                                  r_s3mlc
                                                                                          of
                                                                                          dt3_s3mlp
                                                                                          { __DEFAULT ->
                                                                                                GHC.Event.PSQ.Bin [dt_s3ml7
                                                                                                                   dt1_s3ml8
                                                                                                                   x'_s3ml9
                                                                                                                   dt2_s3mla
                                                                                                                   l_s3mlb
                                                                                                                   dt3_s3mlp];
                                                                                          };
                                                                                      0## ->
                                                                                          case
                                                                                              GHC.Event.PSQ.$wunsafeInsertNew
                                                                                                  ww_s3ml2
                                                                                                  ww1_s3ml3
                                                                                                  w_s3ml4
                                                                                                  l_s3mlb
                                                                                          of
                                                                                          dt3_s3mlq
                                                                                          { __DEFAULT ->
                                                                                                GHC.Event.PSQ.Bin [dt_s3ml7
                                                                                                                   dt1_s3ml8
                                                                                                                   x'_s3ml9
                                                                                                                   dt2_s3mla
                                                                                                                   dt3_s3mlq
                                                                                                                   r_s3mlc];
                                                                                          };
                                                                                    };
                                                                              };
                                                                    } in 
                                                                      let-no-escape {
                                                                        $j1_s3mlr [Occ=Once*T[0],
                                                                                   Dmd=<L,1*U>]
                                                                          :: GHC.Event.PSQ.IntPSQ
                                                                               v_s3jTx
                                                                        [LclId[JoinId(0)],
                                                                         Unf=OtherCon []] =
                                                                            [ww_s3ml2
                                                                             ww1_s3ml3
                                                                             w_s3ml4
                                                                             dt_s3ml7
                                                                             dt1_s3ml8
                                                                             x'_s3ml9
                                                                             dt2_s3mla
                                                                             l_s3mlb
                                                                             r_s3mlc
                                                                             m_s3mld] \r []
                                                                                case
                                                                                    int2Word# [dt_s3ml7]
                                                                                of
                                                                                sat_s3mls
                                                                                { __DEFAULT ->
                                                                                      case
                                                                                          and# [sat_s3mls
                                                                                                m_s3mld]
                                                                                      of
                                                                                      { __DEFAULT ->
                                                                                            case
                                                                                                w_s3ml4
                                                                                            of
                                                                                            dt3_s3mlu
                                                                                            { __DEFAULT ->
                                                                                                  case
                                                                                                      GHC.Event.PSQ.$wunsafeInsertNew
                                                                                                          dt_s3ml7
                                                                                                          dt1_s3ml8
                                                                                                          x'_s3ml9
                                                                                                          r_s3mlc
                                                                                                  of
                                                                                                  dt4_s3mlv
                                                                                                  { __DEFAULT ->
                                                                                                        GHC.Event.PSQ.Bin [ww_s3ml2
                                                                                                                           ww1_s3ml3
                                                                                                                           dt3_s3mlu
                                                                                                                           dt2_s3mla
                                                                                                                           l_s3mlb
                                                                                                                           dt4_s3mlv];
                                                                                                  };
                                                                                            };
                                                                                        0## ->
                                                                                            case
                                                                                                w_s3ml4
                                                                                            of
                                                                                            dt3_s3mlw
                                                                                            { __DEFAULT ->
                                                                                                  case
                                                                                                      GHC.Event.PSQ.$wunsafeInsertNew
                                                                                                          dt_s3ml7
                                                                                                          dt1_s3ml8
                                                                                                          x'_s3ml9
                                                                                                          l_s3mlb
                                                                                                  of
                                                                                                  dt4_s3mlx
                                                                                                  { __DEFAULT ->
                                                                                                        GHC.Event.PSQ.Bin [ww_s3ml2
                                                                                                                           ww1_s3ml3
                                                                                                                           dt3_s3mlw
                                                                                                                           dt2_s3mla
                                                                                                                           dt4_s3mlx
                                                                                                                           r_s3mlc];
                                                                                                  };
                                                                                            };
                                                                                      };
                                                                                };
                                                                      } in 
                                                                        case
                                                                            eqWord# [ww1_s3ml3
                                                                                     dt1_s3ml8]
                                                                        of
                                                                        { __DEFAULT ->
                                                                              case
                                                                                  leWord# [ww1_s3ml3
                                                                                           dt1_s3ml8]
                                                                              of
                                                                              { __DEFAULT ->
                                                                                    $j_s3mlm;
                                                                                1# -> $j1_s3mlr;
                                                                              };
                                                                          1# ->
                                                                              case
                                                                                  <# [ww_s3ml2
                                                                                      dt_s3ml7]
                                                                              of
                                                                              { __DEFAULT ->
                                                                                    $j_s3mlm;
                                                                                1# -> $j1_s3mlr;
                                                                              };
                                                                        };
                                                                1# ->
                                                                    let-no-escape {
                                                                      $j_s3mlB [Occ=Once*T[0],
                                                                                Dmd=<L,1*U>]
                                                                        :: GHC.Event.PSQ.IntPSQ
                                                                             v_s3jTx
                                                                      [LclId[JoinId(0)],
                                                                       Unf=OtherCon []] =
                                                                          [ww_s3ml2
                                                                           ww1_s3ml3
                                                                           w_s3ml4
                                                                           dt_s3ml7
                                                                           dt1_s3ml8
                                                                           x'_s3ml9
                                                                           dt2_s3mla
                                                                           l_s3mlb
                                                                           r_s3mlc] \r []
                                                                              case
                                                                                  int2Word# [ww_s3ml2]
                                                                              of
                                                                              sat_s3mlE
                                                                              { __DEFAULT ->
                                                                                    case
                                                                                        int2Word# [dt_s3ml7]
                                                                                    of
                                                                                    sat_s3mlD
                                                                                    { __DEFAULT ->
                                                                                          case
                                                                                              xor# [sat_s3mlD
                                                                                                    sat_s3mlE]
                                                                                          of
                                                                                          sat_s3mlF
                                                                                          { __DEFAULT ->
                                                                                                case
                                                                                                    clz# [sat_s3mlF]
                                                                                                of
                                                                                                sat_s3mlG
                                                                                                { __DEFAULT ->
                                                                                                      case
                                                                                                          minusWord# [63##
                                                                                                                      sat_s3mlG]
                                                                                                      of
                                                                                                      sat_s3mlH
                                                                                                      { __DEFAULT ->
                                                                                                            case
                                                                                                                word2Int# [sat_s3mlH]
                                                                                                            of
                                                                                                            sat_s3mlI
                                                                                                            { __DEFAULT ->
                                                                                                                  case
                                                                                                                      uncheckedShiftL# [1##
                                                                                                                                        sat_s3mlI]
                                                                                                                  of
                                                                                                                  sat_s3mlJ
                                                                                                                  { __DEFAULT ->
                                                                                                                        case
                                                                                                                            word2Int# [sat_s3mlJ]
                                                                                                                        of
                                                                                                                        x#_s3mlC [Dmd=<S,U>]
                                                                                                                        { __DEFAULT ->
                                                                                                                              case
                                                                                                                                  int2Word# [ww_s3ml2]
                                                                                                                              of
                                                                                                                              sat_s3mlL
                                                                                                                              { __DEFAULT ->
                                                                                                                                    case
                                                                                                                                        int2Word# [x#_s3mlC]
                                                                                                                                    of
                                                                                                                                    sat_s3mlK
                                                                                                                                    { __DEFAULT ->
                                                                                                                                          case
                                                                                                                                              and# [sat_s3mlK
                                                                                                                                                    sat_s3mlL]
                                                                                                                                          of
                                                                                                                                          { __DEFAULT ->
                                                                                                                                                let {
                                                                                                                                                  sat_s3mlN [Occ=Once]
                                                                                                                                                    :: GHC.Event.PSQ.Mask
                                                                                                                                                  [LclId] =
                                                                                                                                                      CCCS GHC.Types.I#! [dt2_s3mla];
                                                                                                                                                } in 
                                                                                                                                                  case
                                                                                                                                                      GHC.Event.PSQ.merge
                                                                                                                                                          sat_s3mlN
                                                                                                                                                          l_s3mlb
                                                                                                                                                          r_s3mlc
                                                                                                                                                  of
                                                                                                                                                  dt3_s3mlO
                                                                                                                                                  { __DEFAULT ->
                                                                                                                                                        case
                                                                                                                                                            w_s3ml4
                                                                                                                                                        of
                                                                                                                                                        dt4_s3mlP
                                                                                                                                                        { __DEFAULT ->
                                                                                                                                                              let {
                                                                                                                                                                sat_s3mlQ [Occ=Once]
                                                                                                                                                                  :: GHC.Event.PSQ.IntPSQ
                                                                                                                                                                       v_s3jTx
                                                                                                                                                                [LclId] =
                                                                                                                                                                    CCCS GHC.Event.PSQ.Tip! [ww_s3ml2
                                                                                                                                                                                             ww1_s3ml3
                                                                                                                                                                                             dt4_s3mlP];
                                                                                                                                                              } in 
                                                                                                                                                                GHC.Event.PSQ.Bin [dt_s3ml7
                                                                                                                                                                                   dt1_s3ml8
                                                                                                                                                                                   x'_s3ml9
                                                                                                                                                                                   x#_s3mlC
                                                                                                                                                                                   dt3_s3mlO
                                                                                                                                                                                   sat_s3mlQ];
                                                                                                                                                        };
                                                                                                                                                  };
                                                                                                                                            0## ->
                                                                                                                                                case
                                                                                                                                                    w_s3ml4
                                                                                                                                                of
                                                                                                                                                dt3_s3mlR
                                                                                                                                                { __DEFAULT ->
                                                                                                                                                      let {
                                                                                                                                                        sat_s3mlS [Occ=Once]
                                                                                                                                                          :: GHC.Event.PSQ.Mask
                                                                                                                                                        [LclId] =
                                                                                                                                                            CCCS GHC.Types.I#! [dt2_s3mla];
                                                                                                                                                      } in 
                                                                                                                                                        case
                                                                                                                                                            GHC.Event.PSQ.merge
                                                                                                                                                                sat_s3mlS
                                                                                                                                                                l_s3mlb
                                                                                                                                                                r_s3mlc
                                                                                                                                                        of
                                                                                                                                                        dt4_s3mlT
                                                                                                                                                        { __DEFAULT ->
                                                                                                                                                              let {
                                                                                                                                                                sat_s3mlU [Occ=Once]
                                                                                                                                                                  :: GHC.Event.PSQ.IntPSQ
                                                                                                                                                                       v_s3jTx
                                                                                                                                                                [LclId] =
                                                                                                                                                                    CCCS GHC.Event.PSQ.Tip! [ww_s3ml2
                                                                                                                                                                                             ww1_s3ml3
                                                                                                                                                                                             dt3_s3mlR];
                                                                                                                                                              } in 
                                                                                                                                                                GHC.Event.PSQ.Bin [dt_s3ml7
                                                                                                                                                                                   dt1_s3ml8
                                                                                                                                                                                   x'_s3ml9
                                                                                                                                                                                   x#_s3mlC
                                                                                                                                                                                   sat_s3mlU
                                                                                                                                                                                   dt4_s3mlT];
                                                                                                                                                        };
                                                                                                                                                };
                                                                                                                                          };
                                                                                                                                    };
                                                                                                                              };
                                                                                                                        };
                                                                                                                  };
                                                                                                            };
                                                                                                      };
                                                                                                };
                                                                                          };
                                                                                    };
                                                                              };
                                                                    } in 
                                                                      let-no-escape {
                                                                        $j1_s3mlV [Occ=Once*T[0],
                                                                                   Dmd=<L,1*U>]
                                                                          :: GHC.Event.PSQ.IntPSQ
                                                                               v_s3jTx
                                                                        [LclId[JoinId(0)],
                                                                         Unf=OtherCon []] =
                                                                            [ww_s3ml2
                                                                             ww1_s3ml3
                                                                             w_s3ml4
                                                                             wild_s3ml6
                                                                             dt_s3ml7] \r []
                                                                                case
                                                                                    int2Word# [dt_s3ml7]
                                                                                of
                                                                                sat_s3mlY
                                                                                { __DEFAULT ->
                                                                                      case
                                                                                          int2Word# [ww_s3ml2]
                                                                                      of
                                                                                      sat_s3mlX
                                                                                      { __DEFAULT ->
                                                                                            case
                                                                                                xor# [sat_s3mlX
                                                                                                      sat_s3mlY]
                                                                                            of
                                                                                            sat_s3mlZ
                                                                                            { __DEFAULT ->
                                                                                                  case
                                                                                                      clz# [sat_s3mlZ]
                                                                                                  of
                                                                                                  sat_s3mm0
                                                                                                  { __DEFAULT ->
                                                                                                        case
                                                                                                            minusWord# [63##
                                                                                                                        sat_s3mm0]
                                                                                                        of
                                                                                                        sat_s3mm1
                                                                                                        { __DEFAULT ->
                                                                                                              case
                                                                                                                  word2Int# [sat_s3mm1]
                                                                                                              of
                                                                                                              sat_s3mm2
                                                                                                              { __DEFAULT ->
                                                                                                                    case
                                                                                                                        uncheckedShiftL# [1##
                                                                                                                                          sat_s3mm2]
                                                                                                                    of
                                                                                                                    sat_s3mm3
                                                                                                                    { __DEFAULT ->
                                                                                                                          case
                                                                                                                              word2Int# [sat_s3mm3]
                                                                                                                          of
                                                                                                                          x#_s3mlW [Dmd=<S,U>]
                                                                                                                          { __DEFAULT ->
                                                                                                                                case
                                                                                                                                    int2Word# [dt_s3ml7]
                                                                                                                                of
                                                                                                                                sat_s3mm5
                                                                                                                                { __DEFAULT ->
                                                                                                                                      case
                                                                                                                                          int2Word# [x#_s3mlW]
                                                                                                                                      of
                                                                                                                                      sat_s3mm4
                                                                                                                                      { __DEFAULT ->
                                                                                                                                            case
                                                                                                                                                and# [sat_s3mm4
                                                                                                                                                      sat_s3mm5]
                                                                                                                                            of
                                                                                                                                            { __DEFAULT ->
                                                                                                                                                  case
                                                                                                                                                      w_s3ml4
                                                                                                                                                  of
                                                                                                                                                  dt3_s3mm7
                                                                                                                                                  { __DEFAULT ->
                                                                                                                                                        GHC.Event.PSQ.Bin [ww_s3ml2
                                                                                                                                                                           ww1_s3ml3
                                                                                                                                                                           dt3_s3mm7
                                                                                                                                                                           x#_s3mlW
                                                                                                                                                                           GHC.Event.PSQ.Nil
                                                                                                                                                                           wild_s3ml6];
                                                                                                                                                  };
                                                                                                                                              0## ->
                                                                                                                                                  case
                                                                                                                                                      w_s3ml4
                                                                                                                                                  of
                                                                                                                                                  dt3_s3mm8
                                                                                                                                                  { __DEFAULT ->
                                                                                                                                                        GHC.Event.PSQ.Bin [ww_s3ml2
                                                                                                                                                                           ww1_s3ml3
                                                                                                                                                                           dt3_s3mm8
                                                                                                                                                                           x#_s3mlW
                                                                                                                                                                           wild_s3ml6
                                                                                                                                                                           GHC.Event.PSQ.Nil];
                                                                                                                                                  };
                                                                                                                                            };
                                                                                                                                      };
                                                                                                                                };
                                                                                                                          };
                                                                                                                    };
                                                                                                              };
                                                                                                        };
                                                                                                  };
                                                                                            };
                                                                                      };
                                                                                };
                                                                      } in 
                                                                        case
                                                                            eqWord# [ww1_s3ml3
                                                                                     dt1_s3ml8]
                                                                        of
                                                                        { __DEFAULT ->
                                                                              case
                                                                                  leWord# [ww1_s3ml3
                                                                                           dt1_s3ml8]
                                                                              of
                                                                              { __DEFAULT ->
                                                                                    $j_s3mlB;
                                                                                1# -> $j1_s3mlV;
                                                                              };
                                                                          1# ->
                                                                              case
                                                                                  <# [ww_s3ml2
                                                                                      dt_s3ml7]
                                                                              of
                                                                              { __DEFAULT ->
                                                                                    $j_s3mlB;
                                                                                1# -> $j1_s3mlV;
                                                                              };
                                                                        };
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
          GHC.Event.PSQ.Tip dt_s3mmc dt1_s3mmd x'_s3mme [Occ=Once*] ->
              let-no-escape {
                $j_s3mmf [Occ=Once*T[0], Dmd=<L,1*U>]
                  :: GHC.Event.PSQ.IntPSQ v_s3jTx
                [LclId[JoinId(0)], Unf=OtherCon []] =
                    [ww_s3ml2 ww1_s3ml3 w_s3ml4 dt_s3mmc dt1_s3mmd x'_s3mme] \r []
                        case int2Word# [ww_s3ml2] of sat_s3mmi {
                          __DEFAULT ->
                              case int2Word# [dt_s3mmc] of sat_s3mmh {
                                __DEFAULT ->
                                    case xor# [sat_s3mmh sat_s3mmi] of sat_s3mmj {
                                      __DEFAULT ->
                                          case clz# [sat_s3mmj] of sat_s3mmk {
                                            __DEFAULT ->
                                                case minusWord# [63## sat_s3mmk] of sat_s3mml {
                                                  __DEFAULT ->
                                                      case word2Int# [sat_s3mml] of sat_s3mmm {
                                                        __DEFAULT ->
                                                            case
                                                                uncheckedShiftL# [1## sat_s3mmm]
                                                            of
                                                            sat_s3mmn
                                                            { __DEFAULT ->
                                                                  case
                                                                      word2Int# [sat_s3mmn]
                                                                  of
                                                                  x#_s3mmg [Dmd=<S,U>]
                                                                  { __DEFAULT ->
                                                                        case
                                                                            int2Word# [ww_s3ml2]
                                                                        of
                                                                        sat_s3mmp
                                                                        { __DEFAULT ->
                                                                              case
                                                                                  int2Word# [x#_s3mmg]
                                                                              of
                                                                              sat_s3mmo
                                                                              { __DEFAULT ->
                                                                                    case
                                                                                        and# [sat_s3mmo
                                                                                              sat_s3mmp]
                                                                                    of
                                                                                    { __DEFAULT ->
                                                                                          case
                                                                                              w_s3ml4
                                                                                          of
                                                                                          dt2_s3mmr
                                                                                          { __DEFAULT ->
                                                                                                let {
                                                                                                  sat_s3mms [Occ=Once]
                                                                                                    :: GHC.Event.PSQ.IntPSQ
                                                                                                         v_s3jTx
                                                                                                  [LclId] =
                                                                                                      CCCS GHC.Event.PSQ.Tip! [ww_s3ml2
                                                                                                                               ww1_s3ml3
                                                                                                                               dt2_s3mmr];
                                                                                                } in 
                                                                                                  GHC.Event.PSQ.Bin [dt_s3mmc
                                                                                                                     dt1_s3mmd
                                                                                                                     x'_s3mme
                                                                                                                     x#_s3mmg
                                                                                                                     GHC.Event.PSQ.Nil
                                                                                                                     sat_s3mms];
                                                                                          };
                                                                                      0## ->
                                                                                          case
                                                                                              w_s3ml4
                                                                                          of
                                                                                          dt2_s3mmt
                                                                                          { __DEFAULT ->
                                                                                                let {
                                                                                                  sat_s3mmu [Occ=Once]
                                                                                                    :: GHC.Event.PSQ.IntPSQ
                                                                                                         v_s3jTx
                                                                                                  [LclId] =
                                                                                                      CCCS GHC.Event.PSQ.Tip! [ww_s3ml2
                                                                                                                               ww1_s3ml3
                                                                                                                               dt2_s3mmt];
                                                                                                } in 
                                                                                                  GHC.Event.PSQ.Bin [dt_s3mmc
                                                                                                                     dt1_s3mmd
                                                                                                                     x'_s3mme
                                                                                                                     x#_s3mmg
                                                                                                                     sat_s3mmu
                                                                                                                     GHC.Event.PSQ.Nil];
                                                                                          };
                                                                                    };
                                                                              };
                                                                        };
                                                                  };
                                                            };
                                                      };
                                                };
                                          };
                                    };
                              };
                        };
              } in 
                let-no-escape {
                  $j1_s3mmv [Occ=Once*T[0], Dmd=<L,1*U>]
                    :: GHC.Event.PSQ.IntPSQ v_s3jTx
                  [LclId[JoinId(0)], Unf=OtherCon []] =
                      [ww_s3ml2 ww1_s3ml3 w_s3ml4 wild_s3ml6 dt_s3mmc] \r []
                          case int2Word# [dt_s3mmc] of sat_s3mmy {
                            __DEFAULT ->
                                case int2Word# [ww_s3ml2] of sat_s3mmx {
                                  __DEFAULT ->
                                      case xor# [sat_s3mmx sat_s3mmy] of sat_s3mmz {
                                        __DEFAULT ->
                                            case clz# [sat_s3mmz] of sat_s3mmA {
                                              __DEFAULT ->
                                                  case minusWord# [63## sat_s3mmA] of sat_s3mmB {
                                                    __DEFAULT ->
                                                        case word2Int# [sat_s3mmB] of sat_s3mmC {
                                                          __DEFAULT ->
                                                              case
                                                                  uncheckedShiftL# [1## sat_s3mmC]
                                                              of
                                                              sat_s3mmD
                                                              { __DEFAULT ->
                                                                    case
                                                                        word2Int# [sat_s3mmD]
                                                                    of
                                                                    x#_s3mmw [Dmd=<S,U>]
                                                                    { __DEFAULT ->
                                                                          case
                                                                              int2Word# [dt_s3mmc]
                                                                          of
                                                                          sat_s3mmF
                                                                          { __DEFAULT ->
                                                                                case
                                                                                    int2Word# [x#_s3mmw]
                                                                                of
                                                                                sat_s3mmE
                                                                                { __DEFAULT ->
                                                                                      case
                                                                                          and# [sat_s3mmE
                                                                                                sat_s3mmF]
                                                                                      of
                                                                                      { __DEFAULT ->
                                                                                            case
                                                                                                w_s3ml4
                                                                                            of
                                                                                            dt2_s3mmH
                                                                                            { __DEFAULT ->
                                                                                                  GHC.Event.PSQ.Bin [ww_s3ml2
                                                                                                                     ww1_s3ml3
                                                                                                                     dt2_s3mmH
                                                                                                                     x#_s3mmw
                                                                                                                     GHC.Event.PSQ.Nil
                                                                                                                     wild_s3ml6];
                                                                                            };
                                                                                        0## ->
                                                                                            case
                                                                                                w_s3ml4
                                                                                            of
                                                                                            dt2_s3mmI
                                                                                            { __DEFAULT ->
                                                                                                  GHC.Event.PSQ.Bin [ww_s3ml2
                                                                                                                     ww1_s3ml3
                                                                                                                     dt2_s3mmI
                                                                                                                     x#_s3mmw
                                                                                                                     wild_s3ml6
                                                                                                                     GHC.Event.PSQ.Nil];
                                                                                            };
                                                                                      };
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                                };
                          };
                } in 
                  case eqWord# [ww1_s3ml3 dt1_s3mmd] of {
                    __DEFAULT ->
                        case leWord# [ww1_s3ml3 dt1_s3mmd] of {
                          __DEFAULT -> $j_s3mmf;
                          1# -> $j1_s3mmv;
                        };
                    1# ->
                        case <# [ww_s3ml2 dt_s3mmc] of {
                          __DEFAULT -> $j_s3mmf;
                          1# -> $j1_s3mmv;
                        };
                  };
          GHC.Event.PSQ.Nil ->
              case w_s3ml4 of dt_s3mmM {
                __DEFAULT -> GHC.Event.PSQ.Tip [ww_s3ml2 ww1_s3ml3 dt_s3mmM];
              };
        };

GHC.Event.PSQ.unsafeInsertNew [InlPrag=NOUSERINLINE[0]]
  :: forall v.
     GHC.Event.PSQ.Key
     -> GHC.Event.PSQ.Prio
     -> v
     -> GHC.Event.PSQ.IntPSQ v
     -> GHC.Event.PSQ.IntPSQ v
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,1*U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [w_s3mmN w1_s3mmO w2_s3mmP w3_s3mmQ]
        case w_s3mmN of {
          GHC.Types.I# ww1_s3mmS [Occ=Once] ->
              case w1_s3mmO of {
                GHC.Word.W64# ww3_s3mmU [Occ=Once] ->
                    GHC.Event.PSQ.$wunsafeInsertNew
                        ww1_s3mmS ww3_s3mmU w2_s3mmP w3_s3mmQ;
              };
        };

GHC.Event.PSQ.insert
  :: forall v.
     GHC.Event.PSQ.Key
     -> GHC.Event.PSQ.Prio
     -> v
     -> GHC.Event.PSQ.IntPSQ v
     -> GHC.Event.PSQ.IntPSQ v
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,1*U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [k_s3mmV p_s3mmW x_s3mmX t0_s3mmY]
        case k_s3mmV of ww_s3mmZ {
          GHC.Types.I# ww1_s3mn0 [Occ=Once] ->
              case p_s3mmW of {
                GHC.Word.W64# ww3_s3mn2 [Occ=Once] ->
                    case GHC.Event.PSQ.delete ww_s3mmZ t0_s3mmY of sat_s3mn3 {
                      __DEFAULT ->
                          GHC.Event.PSQ.$wunsafeInsertNew
                              ww1_s3mn0 ww3_s3mn2 x_s3mmX sat_s3mn3;
                    };
              };
        };

go_r3kd8
  :: forall v. [GHC.Event.PSQ.Elem v] -> GHC.Event.PSQ.IntPSQ v
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    sat-only [] \r [ds_s3mn4]
        case ds_s3mn4 of {
          [] -> GHC.Event.PSQ.Nil [];
          : y_s3mn6 [Occ=Once!] ys_s3mn7 [Occ=Once] ->
              case y_s3mn6 of {
                GHC.Event.PSQ.E dt_s3mn9 dt1_s3mna [Occ=Once] x_s3mnb [Occ=Once] ->
                    case go_r3kd8 ys_s3mn7 of sat_s3mnd {
                      __DEFAULT ->
                          let {
                            sat_s3mnc [Occ=Once] :: GHC.Event.PSQ.Key
                            [LclId] =
                                CCCS GHC.Types.I#! [dt_s3mn9];
                          } in 
                            case GHC.Event.PSQ.delete sat_s3mnc sat_s3mnd of sat_s3mne {
                              __DEFAULT ->
                                  GHC.Event.PSQ.$wunsafeInsertNew
                                      dt_s3mn9 dt1_s3mna x_s3mnb sat_s3mne;
                            };
                    };
              };
        };

GHC.Event.PSQ.fromList [InlPrag=INLINABLE]
  :: forall v. [GHC.Event.PSQ.Elem v] -> GHC.Event.PSQ.IntPSQ v
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [eta_B1] go_r3kd8 eta_B1;

GHC.Event.PSQ.adjust [InlPrag=INLINE (sat-args=3)]
  :: forall a.
     (GHC.Event.PSQ.Prio -> GHC.Event.PSQ.Prio)
     -> GHC.Event.PSQ.Key -> GHC.Event.PSQ.PSQ a -> GHC.Event.PSQ.PSQ a
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,1*C1(U(U))><L,U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [f_s3mnf k_s3mng q_s3mnh]
        case GHC.Event.PSQ.deleteView k_s3mng q_s3mnh of {
          GHC.Base.Nothing -> q_s3mnh;
          GHC.Base.Just ds_s3mnj [Occ=Once!] ->
              case ds_s3mnj of {
                (,,) p_s3mnl [Occ=Once] v_s3mnm [Occ=Once] t0'_s3mnn [Occ=Once] ->
                    case k_s3mng of {
                      GHC.Types.I# ww1_s3mnp [Occ=Once] ->
                          case f_s3mnf p_s3mnl of {
                            GHC.Word.W64# ww3_s3mnr [Occ=Once] ->
                                GHC.Event.PSQ.$wunsafeInsertNew
                                    ww1_s3mnp ww3_s3mnr v_s3mnm t0'_s3mnn;
                          };
                    };
              };
        };

GHC.Event.PSQ.Bin
  :: forall v.
     GHC.Prim.Int#
     -> GHC.Prim.Word#
     -> v
     -> GHC.Prim.Int#
     -> GHC.Event.PSQ.IntPSQ v
     -> GHC.Event.PSQ.IntPSQ v
     -> GHC.Event.PSQ.IntPSQ v
[GblId[DataCon],
 Arity=6,
 Caf=NoCafRefs,
 Str=<L,U><L,U><L,U><L,U><L,U><L,U>m1,
 Unf=OtherCon []] =
    [] \r [eta_B6 eta_B5 eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.Event.PSQ.Bin [eta_B6 eta_B5 eta_B4 eta_B3 eta_B2 eta_B1];

GHC.Event.PSQ.Tip
  :: forall v.
     GHC.Prim.Int# -> GHC.Prim.Word# -> v -> GHC.Event.PSQ.IntPSQ v
[GblId[DataCon],
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,U><L,U><L,U>m2,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.Event.PSQ.Tip [eta_B3 eta_B2 eta_B1];

GHC.Event.PSQ.Nil :: forall v. GHC.Event.PSQ.IntPSQ v
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Event.PSQ.Nil! [];

GHC.Event.PSQ.E
  :: forall a.
     GHC.Prim.Int# -> GHC.Prim.Word# -> a -> GHC.Event.PSQ.Elem a
[GblId[DataCon],
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,U><L,U><L,U>m,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.Event.PSQ.E [eta_B3 eta_B2 eta_B1];


==================== STG syntax: ====================
2018-03-16 15:57:59.362177049 UTC

GHC.Event.PSQ.$WBin [InlPrag=INLINE[2]]
  :: forall v.
     GHC.Event.PSQ.Key
     -> GHC.Event.PSQ.Prio
     -> v
     -> GHC.Event.PSQ.Mask
     -> GHC.Event.PSQ.IntPSQ v
     -> GHC.Event.PSQ.IntPSQ v
     -> GHC.Event.PSQ.IntPSQ v
[GblId[DataConWrapper],
 Arity=6,
 Caf=NoCafRefs,
 Str=<S,U><S,U><S,U><S,U><S,U><S,U>m1,
 Unf=OtherCon []] =
    [] \r [dt_s3meF dt_s3meG dt_s3meH dt_s3meI dt_s3meJ dt_s3meK]
        case dt_s3meF of {
          GHC.Types.I# dt_s3meM [Occ=Once] ->
              case dt_s3meG of {
                GHC.Word.W64# dt_s3meO [Occ=Once] ->
                    case dt_s3meH of dt_s3meP {
                      __DEFAULT ->
                          case dt_s3meI of {
                            GHC.Types.I# dt_s3meR [Occ=Once] ->
                                case dt_s3meJ of dt_s3meS {
                                  __DEFAULT ->
                                      case dt_s3meK of dt_s3meT {
                                        __DEFAULT ->
                                            GHC.Event.PSQ.Bin [dt_s3meM
                                                               dt_s3meO
                                                               dt_s3meP
                                                               dt_s3meR
                                                               dt_s3meS
                                                               dt_s3meT];
                                      };
                                };
                          };
                    };
              };
        };

GHC.Event.PSQ.$WTip [InlPrag=INLINE[2]]
  :: forall v.
     GHC.Event.PSQ.Key
     -> GHC.Event.PSQ.Prio -> v -> GHC.Event.PSQ.IntPSQ v
[GblId[DataConWrapper],
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,U><S,U><S,U>m2,
 Unf=OtherCon []] =
    [] \r [dt_s3meU dt_s3meV dt_s3meW]
        case dt_s3meU of {
          GHC.Types.I# dt_s3meY [Occ=Once] ->
              case dt_s3meV of {
                GHC.Word.W64# dt_s3mf0 [Occ=Once] ->
                    case dt_s3meW of dt_s3mf1 {
                      __DEFAULT -> GHC.Event.PSQ.Tip [dt_s3meY dt_s3mf0 dt_s3mf1];
                    };
              };
        };

GHC.Event.PSQ.$WE [InlPrag=INLINE[2]]
  :: forall a.
     GHC.Event.PSQ.Key
     -> GHC.Event.PSQ.Prio -> a -> GHC.Event.PSQ.Elem a
[GblId[DataConWrapper],
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,U><S,U><L,U>m,
 Unf=OtherCon []] =
    [] \r [dt_s3mf2 dt_s3mf3 dt_s3mf4]
        case dt_s3mf2 of {
          GHC.Types.I# dt_s3mf6 [Occ=Once] ->
              case dt_s3mf3 of {
                GHC.Word.W64# dt_s3mf8 [Occ=Once] ->
                    GHC.Event.PSQ.E [dt_s3mf6 dt_s3mf8 dt_s3mf4];
              };
        };

GHC.Event.PSQ.value :: forall a. GHC.Event.PSQ.Elem a -> a
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLS),1*U(A,A,1*U)>,
 Unf=OtherCon []] =
    [] \r [ds_s3mf9]
        case ds_s3mf9 of {
          GHC.Event.PSQ.E _ [Occ=Dead] _ [Occ=Dead] ds1_s3mfd [Occ=Once] ->
              ds1_s3mfd;
        };

GHC.Event.PSQ.prio
  :: forall a. GHC.Event.PSQ.Elem a -> GHC.Event.PSQ.Prio
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LSL),1*U(A,U,A)>m,
 Unf=OtherCon []] =
    [] \r [ds_s3mfe]
        case ds_s3mfe of {
          GHC.Event.PSQ.E _ [Occ=Dead] dt1_s3mfh [Occ=Once] _ [Occ=Dead] ->
              GHC.Word.W64# [dt1_s3mfh];
        };

GHC.Event.PSQ.key
  :: forall a. GHC.Event.PSQ.Elem a -> GHC.Event.PSQ.Key
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SLL),1*U(U,A,A)>m,
 Unf=OtherCon []] =
    [] \r [ds_s3mfj]
        case ds_s3mfj of {
          GHC.Event.PSQ.E dt_s3mfl [Occ=Once] _ [Occ=Dead] _ [Occ=Dead] ->
              GHC.Types.I# [dt_s3mfl];
        };

GHC.Event.PSQ.null
  :: forall v. GHC.Event.PSQ.IntPSQ v -> GHC.Types.Bool
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [ds_s3mfo]
        case ds_s3mfo of {
          __DEFAULT -> GHC.Types.False [];
          GHC.Event.PSQ.Nil -> GHC.Types.True [];
        };

GHC.Event.PSQ.findMin
  :: forall v.
     GHC.Event.PSQ.IntPSQ v -> GHC.Base.Maybe (GHC.Event.PSQ.Elem v)
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [t_s3mfq]
        case t_s3mfq of {
          GHC.Event.PSQ.Bin dt_s3mfs [Occ=Once]
                            dt1_s3mft [Occ=Once]
                            x_s3mfu [Occ=Once]
                            _ [Occ=Dead]
                            _ [Occ=Dead]
                            _ [Occ=Dead] ->
              let {
                sat_s3mfy [Occ=Once] :: GHC.Event.PSQ.Elem v_a3iL1
                [LclId] =
                    CCCS GHC.Event.PSQ.E! [dt_s3mfs dt1_s3mft x_s3mfu];
              } in  GHC.Base.Just [sat_s3mfy];
          GHC.Event.PSQ.Tip dt_s3mfz [Occ=Once]
                            dt1_s3mfA [Occ=Once]
                            x_s3mfB [Occ=Once] ->
              let {
                sat_s3mfC [Occ=Once] :: GHC.Event.PSQ.Elem v_a3iL1
                [LclId] =
                    CCCS GHC.Event.PSQ.E! [dt_s3mfz dt1_s3mfA x_s3mfB];
              } in  GHC.Base.Just [sat_s3mfC];
          GHC.Event.PSQ.Nil -> GHC.Base.Nothing [];
        };

GHC.Event.PSQ.empty :: forall v. GHC.Event.PSQ.IntPSQ v
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Event.PSQ.Nil! [];

GHC.Event.PSQ.singleton
  :: forall v.
     GHC.Event.PSQ.Key
     -> GHC.Event.PSQ.Prio -> v -> GHC.Event.PSQ.IntPSQ v
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,U><S,U><S,U>m2,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.Event.PSQ.$WTip eta_B3 eta_B2 eta_B1;

GHC.Event.PSQ.toList_go [Occ=LoopBreaker]
  :: forall v.
     [GHC.Event.PSQ.Elem v]
     -> GHC.Event.PSQ.IntPSQ v -> [GHC.Event.PSQ.Elem v]
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [acc_s3mfD ds_s3mfE]
        case ds_s3mfE of {
          GHC.Event.PSQ.Bin dt_s3mfG [Occ=Once]
                            dt1_s3mfH [Occ=Once]
                            x'_s3mfI [Occ=Once]
                            _ [Occ=Dead]
                            l_s3mfK [Occ=Once]
                            r_s3mfL [Occ=Once] ->
              let {
                sat_s3mfO [Occ=Once] :: [GHC.Event.PSQ.Elem v_a3iK3]
                [LclId] =
                    [acc_s3mfD l_s3mfK r_s3mfL] \u []
                        let {
                          sat_s3mfN [Occ=Once] :: [GHC.Event.PSQ.Elem v_a3iK3]
                          [LclId] =
                              [acc_s3mfD r_s3mfL] \u []
                                  GHC.Event.PSQ.toList_go acc_s3mfD r_s3mfL;
                        } in  GHC.Event.PSQ.toList_go sat_s3mfN l_s3mfK; } in
              let {
                sat_s3mfM [Occ=Once] :: GHC.Event.PSQ.Elem v_a3iK3
                [LclId] =
                    CCCS GHC.Event.PSQ.E! [dt_s3mfG dt1_s3mfH x'_s3mfI];
              } in  : [sat_s3mfM sat_s3mfO];
          GHC.Event.PSQ.Tip dt_s3mfP [Occ=Once]
                            dt1_s3mfQ [Occ=Once]
                            x'_s3mfR [Occ=Once] ->
              let {
                sat_s3mfS [Occ=Once] :: GHC.Event.PSQ.Elem v_a3iK3
                [LclId] =
                    CCCS GHC.Event.PSQ.E! [dt_s3mfP dt1_s3mfQ x'_s3mfR];
              } in  : [sat_s3mfS acc_s3mfD];
          GHC.Event.PSQ.Nil -> acc_s3mfD;
        };

GHC.Event.PSQ.toList
  :: forall v. GHC.Event.PSQ.IntPSQ v -> [GHC.Event.PSQ.Elem v]
[GblId, Arity=1, Caf=NoCafRefs, Unf=OtherCon []] =
    [] \r [eta_B1] GHC.Event.PSQ.toList_go GHC.Types.[] eta_B1;

GHC.Event.PSQ.merge [InlPrag=INLINABLE, Occ=LoopBreaker]
  :: forall v.
     GHC.Event.PSQ.Mask
     -> GHC.Event.PSQ.IntPSQ v
     -> GHC.Event.PSQ.IntPSQ v
     -> GHC.Event.PSQ.IntPSQ v
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,1*U(U)><S,1*U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [m_s3mfT l_s3mfU r_s3mfV]
        case l_s3mfU of wild_s3mfW {
          GHC.Event.PSQ.Bin dt_s3mfX
                            dt1_s3mfY
                            lx_s3mfZ [Occ=Once*]
                            dt2_s3mg0 [Occ=Once*]
                            ll_s3mg1 [Occ=Once*]
                            lr_s3mg2 [Occ=Once*] ->
              case r_s3mfV of wild1_s3mg3 {
                GHC.Event.PSQ.Bin dt3_s3mg4
                                  dt4_s3mg5
                                  rx_s3mg6 [Occ=Once]
                                  dt5_s3mg7 [Occ=Once]
                                  rl_s3mg8 [Occ=Once]
                                  rr_s3mg9 [Occ=Once] ->
                    let-no-escape {
                      $j_s3mga [Occ=Once*T[0], Dmd=<L,1*U>]
                        :: GHC.Event.PSQ.IntPSQ v_a3iHG
                      [LclId[JoinId(0)], Unf=OtherCon []] =
                          [m_s3mfT
                           wild_s3mfW
                           dt3_s3mg4
                           dt4_s3mg5
                           rx_s3mg6
                           dt5_s3mg7
                           rl_s3mg8
                           rr_s3mg9] \r []
                              case m_s3mfT of {
                                GHC.Types.I# dt7_s3mgc [Occ=Once] ->
                                    let {
                                      sat_s3mgd [Occ=Once] :: GHC.Event.PSQ.Mask
                                      [LclId] =
                                          CCCS GHC.Types.I#! [dt5_s3mg7];
                                    } in 
                                      case
                                          GHC.Event.PSQ.merge sat_s3mgd rl_s3mg8 rr_s3mg9
                                      of
                                      dt8_s3mge
                                      { __DEFAULT ->
                                            GHC.Event.PSQ.Bin [dt3_s3mg4
                                                               dt4_s3mg5
                                                               rx_s3mg6
                                                               dt7_s3mgc
                                                               wild_s3mfW
                                                               dt8_s3mge];
                                      };
                              };
                    } in 
                      let-no-escape {
                        $j1_s3mgf [Occ=Once*T[0], Dmd=<L,1*U>]
                          :: GHC.Event.PSQ.IntPSQ v_a3iHG
                        [LclId[JoinId(0)], Unf=OtherCon []] =
                            [m_s3mfT
                             dt_s3mfX
                             dt1_s3mfY
                             lx_s3mfZ
                             dt2_s3mg0
                             ll_s3mg1
                             lr_s3mg2
                             wild1_s3mg3] \r []
                                case m_s3mfT of {
                                  GHC.Types.I# dt7_s3mgh [Occ=Once] ->
                                      let {
                                        sat_s3mgi [Occ=Once] :: GHC.Event.PSQ.Mask
                                        [LclId] =
                                            CCCS GHC.Types.I#! [dt2_s3mg0];
                                      } in 
                                        case
                                            GHC.Event.PSQ.merge sat_s3mgi ll_s3mg1 lr_s3mg2
                                        of
                                        dt8_s3mgj
                                        { __DEFAULT ->
                                              GHC.Event.PSQ.Bin [dt_s3mfX
                                                                 dt1_s3mfY
                                                                 lx_s3mfZ
                                                                 dt7_s3mgh
                                                                 dt8_s3mgj
                                                                 wild1_s3mg3];
                                        };
                                };
                      } in 
                        case eqWord# [dt1_s3mfY dt4_s3mg5] of {
                          __DEFAULT ->
                              case leWord# [dt1_s3mfY dt4_s3mg5] of {
                                __DEFAULT -> $j_s3mga;
                                1# -> $j1_s3mgf;
                              };
                          1# ->
                              case <# [dt_s3mfX dt3_s3mg4] of {
                                __DEFAULT -> $j_s3mga;
                                1# -> $j1_s3mgf;
                              };
                        };
                GHC.Event.PSQ.Tip dt3_s3mgn dt4_s3mgo rx_s3mgp [Occ=Once*] ->
                    let-no-escape {
                      $j_s3mgq [Occ=Once*T[0], Dmd=<L,1*U>]
                        :: GHC.Event.PSQ.IntPSQ v_a3iHG
                      [LclId[JoinId(0)], Unf=OtherCon []] =
                          [m_s3mfT
                           dt_s3mfX
                           dt1_s3mfY
                           lx_s3mfZ
                           dt2_s3mg0
                           ll_s3mg1
                           lr_s3mg2
                           wild1_s3mg3] \r []
                              case m_s3mfT of {
                                GHC.Types.I# dt6_s3mgs [Occ=Once] ->
                                    let {
                                      sat_s3mgt [Occ=Once] :: GHC.Event.PSQ.Mask
                                      [LclId] =
                                          CCCS GHC.Types.I#! [dt2_s3mg0];
                                    } in 
                                      case
                                          GHC.Event.PSQ.merge sat_s3mgt ll_s3mg1 lr_s3mg2
                                      of
                                      dt7_s3mgu
                                      { __DEFAULT ->
                                            GHC.Event.PSQ.Bin [dt_s3mfX
                                                               dt1_s3mfY
                                                               lx_s3mfZ
                                                               dt6_s3mgs
                                                               dt7_s3mgu
                                                               wild1_s3mg3];
                                      };
                              };
                    } in 
                      case eqWord# [dt1_s3mfY dt4_s3mgo] of {
                        __DEFAULT ->
                            case leWord# [dt1_s3mfY dt4_s3mgo] of {
                              __DEFAULT ->
                                  case m_s3mfT of {
                                    GHC.Types.I# dt6_s3mgy [Occ=Once] ->
                                        GHC.Event.PSQ.Bin [dt3_s3mgn
                                                           dt4_s3mgo
                                                           rx_s3mgp
                                                           dt6_s3mgy
                                                           wild_s3mfW
                                                           GHC.Event.PSQ.Nil];
                                  };
                              1# -> $j_s3mgq;
                            };
                        1# ->
                            case <# [dt_s3mfX dt3_s3mgn] of {
                              __DEFAULT ->
                                  case m_s3mfT of {
                                    GHC.Types.I# dt6_s3mgB [Occ=Once] ->
                                        GHC.Event.PSQ.Bin [dt3_s3mgn
                                                           dt4_s3mgo
                                                           rx_s3mgp
                                                           dt6_s3mgB
                                                           wild_s3mfW
                                                           GHC.Event.PSQ.Nil];
                                  };
                              1# -> $j_s3mgq;
                            };
                      };
                GHC.Event.PSQ.Nil -> wild_s3mfW;
              };
          GHC.Event.PSQ.Tip dt_s3mgC dt1_s3mgD lx_s3mgE [Occ=Once*] ->
              case r_s3mfV of wild1_s3mgF {
                GHC.Event.PSQ.Bin dt2_s3mgG
                                  dt3_s3mgH
                                  rx_s3mgI [Occ=Once]
                                  dt4_s3mgJ [Occ=Once]
                                  rl_s3mgK [Occ=Once]
                                  rr_s3mgL [Occ=Once] ->
                    let-no-escape {
                      $j_s3mgM [Occ=Once*T[0], Dmd=<L,1*U>]
                        :: GHC.Event.PSQ.IntPSQ v_a3iHG
                      [LclId[JoinId(0)], Unf=OtherCon []] =
                          [m_s3mfT
                           wild_s3mfW
                           dt2_s3mgG
                           dt3_s3mgH
                           rx_s3mgI
                           dt4_s3mgJ
                           rl_s3mgK
                           rr_s3mgL] \r []
                              case m_s3mfT of {
                                GHC.Types.I# dt6_s3mgO [Occ=Once] ->
                                    let {
                                      sat_s3mgP [Occ=Once] :: GHC.Event.PSQ.Mask
                                      [LclId] =
                                          CCCS GHC.Types.I#! [dt4_s3mgJ];
                                    } in 
                                      case
                                          GHC.Event.PSQ.merge sat_s3mgP rl_s3mgK rr_s3mgL
                                      of
                                      dt7_s3mgQ
                                      { __DEFAULT ->
                                            GHC.Event.PSQ.Bin [dt2_s3mgG
                                                               dt3_s3mgH
                                                               rx_s3mgI
                                                               dt6_s3mgO
                                                               wild_s3mfW
                                                               dt7_s3mgQ];
                                      };
                              };
                    } in 
                      case eqWord# [dt1_s3mgD dt3_s3mgH] of {
                        __DEFAULT ->
                            case leWord# [dt1_s3mgD dt3_s3mgH] of {
                              __DEFAULT -> $j_s3mgM;
                              1# ->
                                  case m_s3mfT of {
                                    GHC.Types.I# dt6_s3mgU [Occ=Once] ->
                                        GHC.Event.PSQ.Bin [dt_s3mgC
                                                           dt1_s3mgD
                                                           lx_s3mgE
                                                           dt6_s3mgU
                                                           GHC.Event.PSQ.Nil
                                                           wild1_s3mgF];
                                  };
                            };
                        1# ->
                            case <# [dt_s3mgC dt2_s3mgG] of {
                              __DEFAULT -> $j_s3mgM;
                              1# ->
                                  case m_s3mfT of {
                                    GHC.Types.I# dt6_s3mgX [Occ=Once] ->
                                        GHC.Event.PSQ.Bin [dt_s3mgC
                                                           dt1_s3mgD
                                                           lx_s3mgE
                                                           dt6_s3mgX
                                                           GHC.Event.PSQ.Nil
                                                           wild1_s3mgF];
                                  };
                            };
                      };
                GHC.Event.PSQ.Tip dt2_s3mgY dt3_s3mgZ rx_s3mh0 [Occ=Once*] ->
                    case eqWord# [dt1_s3mgD dt3_s3mgZ] of {
                      __DEFAULT ->
                          case leWord# [dt1_s3mgD dt3_s3mgZ] of {
                            __DEFAULT ->
                                case m_s3mfT of {
                                  GHC.Types.I# dt5_s3mh4 [Occ=Once] ->
                                      GHC.Event.PSQ.Bin [dt2_s3mgY
                                                         dt3_s3mgZ
                                                         rx_s3mh0
                                                         dt5_s3mh4
                                                         wild_s3mfW
                                                         GHC.Event.PSQ.Nil];
                                };
                            1# ->
                                case m_s3mfT of {
                                  GHC.Types.I# dt5_s3mh6 [Occ=Once] ->
                                      GHC.Event.PSQ.Bin [dt_s3mgC
                                                         dt1_s3mgD
                                                         lx_s3mgE
                                                         dt5_s3mh6
                                                         GHC.Event.PSQ.Nil
                                                         wild1_s3mgF];
                                };
                          };
                      1# ->
                          case <# [dt_s3mgC dt2_s3mgY] of {
                            __DEFAULT ->
                                case m_s3mfT of {
                                  GHC.Types.I# dt5_s3mh9 [Occ=Once] ->
                                      GHC.Event.PSQ.Bin [dt2_s3mgY
                                                         dt3_s3mgZ
                                                         rx_s3mh0
                                                         dt5_s3mh9
                                                         wild_s3mfW
                                                         GHC.Event.PSQ.Nil];
                                };
                            1# ->
                                case m_s3mfT of {
                                  GHC.Types.I# dt5_s3mhb [Occ=Once] ->
                                      GHC.Event.PSQ.Bin [dt_s3mgC
                                                         dt1_s3mgD
                                                         lx_s3mgE
                                                         dt5_s3mhb
                                                         GHC.Event.PSQ.Nil
                                                         wild1_s3mgF];
                                };
                          };
                    };
                GHC.Event.PSQ.Nil -> wild_s3mfW;
              };
          GHC.Event.PSQ.Nil -> r_s3mfV;
        };

GHC.Event.PSQ.$watMost [InlPrag=INLINABLE[0]]
  :: forall v.
     GHC.Event.PSQ.Prio
     -> GHC.Event.PSQ.IntPSQ v
     -> (# [GHC.Event.PSQ.Elem v], GHC.Event.PSQ.IntPSQ v #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U(U)><S,1*U>,
 Unf=OtherCon []] =
    [] \r [w_s3mhc w1_s3mhd]
        let {
          $wgo_s3mhe [InlPrag=NOUSERINLINE[0], Occ=LoopBreaker]
            :: [GHC.Event.PSQ.Elem v_s3jT8]
               -> GHC.Event.PSQ.IntPSQ v_s3jT8
               -> (# [GHC.Event.PSQ.Elem v_s3jT8], GHC.Event.PSQ.IntPSQ v_s3jT8 #)
          [LclId, Arity=2, Str=<L,U><S,1*U>, Unf=OtherCon []] =
              sat-only [w_s3mhc $wgo_s3mhe] \r [w2_s3mhf w3_s3mhg]
                  case w3_s3mhg of wild_s3mhh {
                    GHC.Event.PSQ.Bin dt_s3mhi [Occ=Once]
                                      dt1_s3mhj
                                      x_s3mhk [Occ=Once]
                                      dt2_s3mhl [Occ=Once]
                                      l_s3mhm [Occ=Once]
                                      r_s3mhn [Occ=Once] ->
                        case w_s3mhc of {
                          GHC.Word.W64# y_s3mhp [Occ=Once] ->
                              case gtWord# [dt1_s3mhj y_s3mhp] of {
                                __DEFAULT ->
                                    let {
                                      ds_s3mhr [Dmd=<L,U(1*U,1*U)>]
                                        :: ([GHC.Event.PSQ.Elem v_s3jT8],
                                            GHC.Event.PSQ.IntPSQ v_s3jT8)
                                      [LclId] =
                                          [$wgo_s3mhe w2_s3mhf l_s3mhm] \u []
                                              case $wgo_s3mhe w2_s3mhf l_s3mhm of {
                                                (#,#) ww1_s3mht [Occ=Once] ww2_s3mhu [Occ=Once] ->
                                                    (,) [ww1_s3mht ww2_s3mhu];
                                              }; } in
                                    let {
                                      ds1_s3mhv [Dmd=<L,U(1*U,1*U)>]
                                        :: ([GHC.Event.PSQ.Elem v_s3jT8],
                                            GHC.Event.PSQ.IntPSQ v_s3jT8)
                                      [LclId] =
                                          [$wgo_s3mhe r_s3mhn ds_s3mhr] \u []
                                              let {
                                                sat_s3mhz [Occ=Once] :: [GHC.Event.PSQ.Elem v_s3jT8]
                                                [LclId] =
                                                    [ds_s3mhr] \u []
                                                        case ds_s3mhr of {
                                                          (,) acc'_s3mhx [Occ=Once] _ [Occ=Dead] ->
                                                              acc'_s3mhx;
                                                        };
                                              } in 
                                                case $wgo_s3mhe sat_s3mhz r_s3mhn of {
                                                  (#,#) ww1_s3mhB [Occ=Once] ww2_s3mhC [Occ=Once] ->
                                                      (,) [ww1_s3mhB ww2_s3mhC];
                                                }; } in
                                    let {
                                      sat_s3mhQ [Occ=Once] :: GHC.Event.PSQ.IntPSQ v_s3jT8
                                      [LclId] =
                                          [dt2_s3mhl ds_s3mhr ds1_s3mhv] \u []
                                              case ds_s3mhr of {
                                                (,) _ [Occ=Dead] l'_s3mhL [Occ=Once] ->
                                                    case ds1_s3mhv of {
                                                      (,) _ [Occ=Dead] r'_s3mhO [Occ=Once] ->
                                                          let {
                                                            sat_s3mhP [Occ=Once]
                                                              :: GHC.Event.PSQ.Mask
                                                            [LclId] =
                                                                CCCS GHC.Types.I#! [dt2_s3mhl];
                                                          } in 
                                                            GHC.Event.PSQ.merge
                                                                sat_s3mhP l'_s3mhL r'_s3mhO;
                                                    };
                                              }; } in
                                    let {
                                      sat_s3mhH [Occ=Once] :: [GHC.Event.PSQ.Elem v_s3jT8]
                                      [LclId] =
                                          [ds1_s3mhv] \u []
                                              case ds1_s3mhv of {
                                                (,) acc''_s3mhF [Occ=Once] _ [Occ=Dead] ->
                                                    acc''_s3mhF;
                                              }; } in
                                    let {
                                      sat_s3mhD [Occ=Once] :: GHC.Event.PSQ.Elem v_s3jT8
                                      [LclId] =
                                          CCCS GHC.Event.PSQ.E! [dt_s3mhi dt1_s3mhj x_s3mhk]; } in
                                    let {
                                      sat_s3mhI [Occ=Once] :: [GHC.Event.PSQ.Elem v_s3jT8]
                                      [LclId] =
                                          CCCS :! [sat_s3mhD sat_s3mhH];
                                    } in  (#,#) [sat_s3mhI sat_s3mhQ];
                                1# -> (#,#) [w2_s3mhf wild_s3mhh];
                              };
                        };
                    GHC.Event.PSQ.Tip dt_s3mhR [Occ=Once]
                                      dt1_s3mhS
                                      x_s3mhT [Occ=Once] ->
                        case w_s3mhc of {
                          GHC.Word.W64# y_s3mhV [Occ=Once] ->
                              case gtWord# [dt1_s3mhS y_s3mhV] of {
                                __DEFAULT ->
                                    let {
                                      sat_s3mhX [Occ=Once] :: GHC.Event.PSQ.Elem v_s3jT8
                                      [LclId] =
                                          CCCS GHC.Event.PSQ.E! [dt_s3mhR dt1_s3mhS x_s3mhT]; } in
                                    let {
                                      sat_s3mhY [Occ=Once] :: [GHC.Event.PSQ.Elem v_s3jT8]
                                      [LclId] =
                                          CCCS :! [sat_s3mhX w2_s3mhf];
                                    } in  (#,#) [sat_s3mhY GHC.Event.PSQ.Nil];
                                1# -> (#,#) [w2_s3mhf wild_s3mhh];
                              };
                        };
                    GHC.Event.PSQ.Nil -> (#,#) [w2_s3mhf GHC.Event.PSQ.Nil];
                  };
        } in  $wgo_s3mhe GHC.Types.[] w1_s3mhd;

GHC.Event.PSQ.atMost [InlPrag=NOUSERINLINE[0]]
  :: forall v.
     GHC.Event.PSQ.Prio
     -> GHC.Event.PSQ.IntPSQ v
     -> ([GHC.Event.PSQ.Elem v], GHC.Event.PSQ.IntPSQ v)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U(U)><S,1*U>m,
 Unf=OtherCon []] =
    [] \r [w_s3mhZ w1_s3mi0]
        case GHC.Event.PSQ.$watMost w_s3mhZ w1_s3mi0 of {
          (#,#) ww1_s3mi2 [Occ=Once] ww2_s3mi3 [Occ=Once] ->
              (,) [ww1_s3mi2 ww2_s3mi3];
        };

GHC.Event.PSQ.minView [InlPrag=INLINE (sat-args=1)]
  :: forall v.
     GHC.Event.PSQ.IntPSQ v
     -> GHC.Base.Maybe (GHC.Event.PSQ.Elem v, GHC.Event.PSQ.IntPSQ v)
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [t_s3mi4]
        case t_s3mi4 of {
          GHC.Event.PSQ.Bin dt_s3mi6 [Occ=Once]
                            dt1_s3mi7 [Occ=Once]
                            x_s3mi8 [Occ=Once]
                            dt2_s3mi9 [Occ=Once]
                            l_s3mia [Occ=Once]
                            r_s3mib [Occ=Once] ->
              let {
                sat_s3mie [Occ=Once] :: GHC.Event.PSQ.IntPSQ v_a3iJO
                [LclId] =
                    [dt2_s3mi9 l_s3mia r_s3mib] \u []
                        let {
                          sat_s3mid [Occ=Once] :: GHC.Event.PSQ.Mask
                          [LclId] =
                              CCCS GHC.Types.I#! [dt2_s3mi9];
                        } in  GHC.Event.PSQ.merge sat_s3mid l_s3mia r_s3mib; } in
              let {
                sat_s3mic [Occ=Once] :: GHC.Event.PSQ.Elem v_a3iJO
                [LclId] =
                    CCCS GHC.Event.PSQ.E! [dt_s3mi6 dt1_s3mi7 x_s3mi8]; } in
              let {
                sat_s3mif [Occ=Once]
                  :: (GHC.Event.PSQ.Elem v_a3iJO, GHC.Event.PSQ.IntPSQ v_a3iJO)
                [LclId] =
                    CCCS (,)! [sat_s3mic sat_s3mie];
              } in  GHC.Base.Just [sat_s3mif];
          GHC.Event.PSQ.Tip dt_s3mig [Occ=Once]
                            dt1_s3mih [Occ=Once]
                            x_s3mii [Occ=Once] ->
              let {
                sat_s3mij [Occ=Once] :: GHC.Event.PSQ.Elem v_a3iJO
                [LclId] =
                    CCCS GHC.Event.PSQ.E! [dt_s3mig dt1_s3mih x_s3mii]; } in
              let {
                sat_s3mik [Occ=Once]
                  :: (GHC.Event.PSQ.Elem v_a3iJO, GHC.Event.PSQ.IntPSQ v_a3iJO)
                [LclId] =
                    CCCS (,)! [sat_s3mij GHC.Event.PSQ.Nil];
              } in  GHC.Base.Just [sat_s3mik];
          GHC.Event.PSQ.Nil -> GHC.Base.Nothing [];
        };

GHC.Event.PSQ.deleteMin [InlPrag=INLINE (sat-args=1)]
  :: forall v. GHC.Event.PSQ.IntPSQ v -> GHC.Event.PSQ.IntPSQ v
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [t_s3mil]
        case t_s3mil of {
          GHC.Event.PSQ.Bin _ [Occ=Dead]
                            _ [Occ=Dead]
                            _ [Occ=Dead]
                            dt2_s3miq [Occ=Once]
                            l_s3mir [Occ=Once]
                            r_s3mis [Occ=Once] ->
              let {
                sat_s3mit [Occ=Once] :: GHC.Event.PSQ.Mask
                [LclId] =
                    CCCS GHC.Types.I#! [dt2_s3miq];
              } in  GHC.Event.PSQ.merge sat_s3mit l_s3mir r_s3mis;
          GHC.Event.PSQ.Tip _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] ->
              GHC.Event.PSQ.Nil [];
          GHC.Event.PSQ.Nil -> GHC.Event.PSQ.Nil [];
        };

GHC.Event.PSQ.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

GHC.Event.PSQ.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.PSQ.$trModule4];

GHC.Event.PSQ.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.Event.PSQ"#;

GHC.Event.PSQ.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.PSQ.$trModule2];

GHC.Event.PSQ.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [GHC.Event.PSQ.$trModule3
                                     GHC.Event.PSQ.$trModule1];

$krep_r3kcT :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcInt
                                              GHC.Types.[]];

$krep1_r3kcU :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Word.$tcWord64
                                              GHC.Types.[]];

$krep2_r3kcV :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.Unique.$tcUnique
                                              GHC.Types.[]];

$krep3_r3kcW :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepVar! [0#];

GHC.Event.PSQ.$tcElem2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Elem"#;

GHC.Event.PSQ.$tcElem1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.PSQ.$tcElem2];

GHC.Event.PSQ.$tcElem :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [15044414420558834066##
                                    12198171511156299872##
                                    GHC.Event.PSQ.$trModule
                                    GHC.Event.PSQ.$tcElem1
                                    0#
                                    GHC.Types.krep$*Arr*];

$krep4_r3kcX :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep3_r3kcW GHC.Types.[]];

$krep5_r3kcY :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.PSQ.$tcElem
                                              $krep4_r3kcX];

$krep6_r3kcZ :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep3_r3kcW $krep5_r3kcY];

$krep7_r3kd0 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep1_r3kcU $krep6_r3kcZ];

GHC.Event.PSQ.$tc'E1 [InlPrag=NOUSERINLINE[~]] :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_r3kcV $krep7_r3kd0];

GHC.Event.PSQ.$tc'E3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'E"#;

GHC.Event.PSQ.$tc'E2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.PSQ.$tc'E3];

GHC.Event.PSQ.$tc'E :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [11813029942800942247##
                                    17450377919573390885##
                                    GHC.Event.PSQ.$trModule
                                    GHC.Event.PSQ.$tc'E2
                                    1#
                                    GHC.Event.PSQ.$tc'E1];

GHC.Event.PSQ.$tcIntPSQ2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "IntPSQ"#;

GHC.Event.PSQ.$tcIntPSQ1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.PSQ.$tcIntPSQ2];

GHC.Event.PSQ.$tcIntPSQ :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [15246681906271547396##
                                    11594704564387731780##
                                    GHC.Event.PSQ.$trModule
                                    GHC.Event.PSQ.$tcIntPSQ1
                                    0#
                                    GHC.Types.krep$*Arr*];

GHC.Event.PSQ.$tc'Nil1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.PSQ.$tcIntPSQ
                                              $krep4_r3kcX];

GHC.Event.PSQ.$tc'Nil3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Nil"#;

GHC.Event.PSQ.$tc'Nil2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.PSQ.$tc'Nil3];

GHC.Event.PSQ.$tc'Nil :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [9632868263130136899##
                                    16639248836205398404##
                                    GHC.Event.PSQ.$trModule
                                    GHC.Event.PSQ.$tc'Nil2
                                    1#
                                    GHC.Event.PSQ.$tc'Nil1];

$krep8_r3kd1 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep3_r3kcW
                                         GHC.Event.PSQ.$tc'Nil1];

$krep9_r3kd2 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep1_r3kcU $krep8_r3kd1];

GHC.Event.PSQ.$tc'Tip1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_r3kcV $krep9_r3kd2];

GHC.Event.PSQ.$tc'Tip3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Tip"#;

GHC.Event.PSQ.$tc'Tip2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.PSQ.$tc'Tip3];

GHC.Event.PSQ.$tc'Tip :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [4235936270888684142##
                                    17098834253377543597##
                                    GHC.Event.PSQ.$trModule
                                    GHC.Event.PSQ.$tc'Tip2
                                    1#
                                    GHC.Event.PSQ.$tc'Tip1];

$krep10_r3kd3 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [GHC.Event.PSQ.$tc'Nil1
                                         GHC.Event.PSQ.$tc'Nil1];

$krep11_r3kd4 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [GHC.Event.PSQ.$tc'Nil1
                                         $krep10_r3kd3];

$krep12_r3kd5 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_r3kcT $krep11_r3kd4];

$krep13_r3kd6 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep3_r3kcW $krep12_r3kd5];

$krep14_r3kd7 :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep1_r3kcU $krep13_r3kd6];

GHC.Event.PSQ.$tc'Bin1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_r3kcV $krep14_r3kd7];

GHC.Event.PSQ.$tc'Bin3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Bin"#;

GHC.Event.PSQ.$tc'Bin2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.PSQ.$tc'Bin3];

GHC.Event.PSQ.$tc'Bin :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [8835322380894053498##
                                    4329944662539077627##
                                    GHC.Event.PSQ.$trModule
                                    GHC.Event.PSQ.$tc'Bin2
                                    1#
                                    GHC.Event.PSQ.$tc'Bin1];

GHC.Event.PSQ.lookup
  :: forall v.
     GHC.Event.PSQ.Key
     -> GHC.Event.PSQ.IntPSQ v -> GHC.Base.Maybe (GHC.Event.PSQ.Prio, v)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U(U)><S,1*U>,
 Unf=OtherCon []] =
    [] \r [k_s3mix eta_s3miy]
        let-no-escape {
          exit_s3miz [Occ=OnceL!T[3], Dmd=<L,C(C1(C1(U)))>]
            :: GHC.Prim.Int#
               -> GHC.Prim.Word#
               -> v_a3iMt
               -> GHC.Base.Maybe (GHC.Event.PSQ.Prio, v_a3iMt)
          [LclId[JoinId(3)], Arity=3, Str=<S,U><L,U><L,U>, Unf=OtherCon []] =
              sat-only [k_s3mix] \r [dt_s3miA dt1_s3miB x'_s3miC]
                  case k_s3mix of {
                    GHC.Types.I# x_s3miE [Occ=Once] ->
                        case ==# [x_s3miE dt_s3miA] of {
                          __DEFAULT -> GHC.Base.Nothing [];
                          1# ->
                              let {
                                sat_s3miG [Occ=Once] :: GHC.Event.PSQ.Prio
                                [LclId] =
                                    CCCS GHC.Word.W64#! [dt1_s3miB]; } in
                              let {
                                sat_s3miH [Occ=Once] :: (GHC.Event.PSQ.Prio, v_a3iMt)
                                [LclId] =
                                    CCCS (,)! [sat_s3miG x'_s3miC];
                              } in  GHC.Base.Just [sat_s3miH];
                        };
                  };
        } in 
          let-no-escape {
            go1_s3miI [Occ=LoopBreakerT[1]]
              :: GHC.Event.PSQ.IntPSQ v_a3iMt
                 -> GHC.Base.Maybe (GHC.Event.PSQ.Prio, v_a3iMt)
            [LclId[JoinId(1)], Arity=1, Str=<S,1*U>, Unf=OtherCon []] =
                sat-only [k_s3mix exit_s3miz go1_s3miI] \r [t_s3miJ]
                    case t_s3miJ of {
                      GHC.Event.PSQ.Bin dt_s3miL
                                        dt1_s3miM [Occ=Once]
                                        x'_s3miN [Occ=Once]
                                        dt2_s3miO [Occ=Once]
                                        l_s3miP [Occ=Once]
                                        r_s3miQ [Occ=Once] ->
                          case k_s3mix of {
                            GHC.Types.I# x#_s3miS ->
                                case int2Word# [dt2_s3miO] of m_s3miT [Dmd=<S,U>] {
                                  __DEFAULT ->
                                      case minusWord# [m_s3miT 1##] of sat_s3miV {
                                        __DEFAULT ->
                                            case
                                                xor# [sat_s3miV 18446744073709551615##]
                                            of
                                            sat_s3miW
                                            { __DEFAULT ->
                                                  case
                                                      xor# [sat_s3miW m_s3miT]
                                                  of
                                                  m'_s3miU [Dmd=<S,U>]
                                                  { __DEFAULT ->
                                                        case int2Word# [dt_s3miL] of sat_s3miZ {
                                                          __DEFAULT ->
                                                              case
                                                                  and# [sat_s3miZ m'_s3miU]
                                                              of
                                                              sat_s3mj0
                                                              { __DEFAULT ->
                                                                    case
                                                                        int2Word# [x#_s3miS]
                                                                    of
                                                                    sat_s3miX
                                                                    { __DEFAULT ->
                                                                          case
                                                                              and# [sat_s3miX
                                                                                    m'_s3miU]
                                                                          of
                                                                          sat_s3miY
                                                                          { __DEFAULT ->
                                                                                case
                                                                                    neWord# [sat_s3miY
                                                                                             sat_s3mj0]
                                                                                of
                                                                                { __DEFAULT ->
                                                                                      case
                                                                                          ==# [x#_s3miS
                                                                                               dt_s3miL]
                                                                                      of
                                                                                      { __DEFAULT ->
                                                                                            case
                                                                                                int2Word# [x#_s3miS]
                                                                                            of
                                                                                            sat_s3mj3
                                                                                            { __DEFAULT ->
                                                                                                  case
                                                                                                      and# [sat_s3mj3
                                                                                                            m_s3miT]
                                                                                                  of
                                                                                                  { __DEFAULT ->
                                                                                                        go1_s3miI
                                                                                                            r_s3miQ;
                                                                                                    0## ->
                                                                                                        go1_s3miI
                                                                                                            l_s3miP;
                                                                                                  };
                                                                                            };
                                                                                        1# ->
                                                                                            let {
                                                                                              sat_s3mj5 [Occ=Once]
                                                                                                :: GHC.Event.PSQ.Prio
                                                                                              [LclId] =
                                                                                                  CCCS GHC.Word.W64#! [dt1_s3miM]; } in
                                                                                            let {
                                                                                              sat_s3mj6 [Occ=Once]
                                                                                                :: (GHC.Event.PSQ.Prio,
                                                                                                    v_a3iMt)
                                                                                              [LclId] =
                                                                                                  CCCS (,)! [sat_s3mj5
                                                                                                             x'_s3miN];
                                                                                            } in 
                                                                                              GHC.Base.Just [sat_s3mj6];
                                                                                      };
                                                                                  1# ->
                                                                                      GHC.Base.Nothing [];
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                                };
                          };
                      GHC.Event.PSQ.Tip dt_s3mj7 [Occ=Once]
                                        dt1_s3mj8 [Occ=Once]
                                        x'_s3mj9 [Occ=Once] ->
                          exit_s3miz dt_s3mj7 dt1_s3mj8 x'_s3mj9;
                      GHC.Event.PSQ.Nil -> GHC.Base.Nothing [];
                    };
          } in  go1_s3miI eta_s3miy;

GHC.Event.PSQ.delete [InlPrag=INLINABLE]
  :: forall v.
     GHC.Event.PSQ.Key
     -> GHC.Event.PSQ.IntPSQ v -> GHC.Event.PSQ.IntPSQ v
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U(U)><S,1*U>,
 Unf=OtherCon []] =
    [] \r [k_s3mja eta_s3mjb]
        let {
          go1_s3mjc [Occ=LoopBreaker]
            :: GHC.Event.PSQ.IntPSQ v_a3iNV -> GHC.Event.PSQ.IntPSQ v_a3iNV
          [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []] =
              sat-only [k_s3mja go1_s3mjc] \r [t_s3mjd]
                  case t_s3mjd of wild_s3mje {
                    GHC.Event.PSQ.Bin dt_s3mjf
                                      dt1_s3mjg [Occ=Once*]
                                      x'_s3mjh [Occ=Once*]
                                      dt2_s3mji
                                      l_s3mjj [Occ=Once*]
                                      r_s3mjk [Occ=Once*] ->
                        case k_s3mja of {
                          GHC.Types.I# x#_s3mjm ->
                              case int2Word# [dt2_s3mji] of m_s3mjn [Dmd=<S,U>] {
                                __DEFAULT ->
                                    case minusWord# [m_s3mjn 1##] of sat_s3mjp {
                                      __DEFAULT ->
                                          case
                                              xor# [sat_s3mjp 18446744073709551615##]
                                          of
                                          sat_s3mjq
                                          { __DEFAULT ->
                                                case
                                                    xor# [sat_s3mjq m_s3mjn]
                                                of
                                                m'_s3mjo [Dmd=<S,U>]
                                                { __DEFAULT ->
                                                      case int2Word# [dt_s3mjf] of sat_s3mjt {
                                                        __DEFAULT ->
                                                            case
                                                                and# [sat_s3mjt m'_s3mjo]
                                                            of
                                                            sat_s3mju
                                                            { __DEFAULT ->
                                                                  case
                                                                      int2Word# [x#_s3mjm]
                                                                  of
                                                                  sat_s3mjr
                                                                  { __DEFAULT ->
                                                                        case
                                                                            and# [sat_s3mjr
                                                                                  m'_s3mjo]
                                                                        of
                                                                        sat_s3mjs
                                                                        { __DEFAULT ->
                                                                              case
                                                                                  neWord# [sat_s3mjs
                                                                                           sat_s3mju]
                                                                              of
                                                                              { __DEFAULT ->
                                                                                    case
                                                                                        ==# [x#_s3mjm
                                                                                             dt_s3mjf]
                                                                                    of
                                                                                    { __DEFAULT ->
                                                                                          case
                                                                                              int2Word# [x#_s3mjm]
                                                                                          of
                                                                                          sat_s3mjx
                                                                                          { __DEFAULT ->
                                                                                                case
                                                                                                    and# [sat_s3mjx
                                                                                                          m_s3mjn]
                                                                                                of
                                                                                                { __DEFAULT ->
                                                                                                      case
                                                                                                          go1_s3mjc
                                                                                                              r_s3mjk
                                                                                                      of
                                                                                                      wild3_s3mjz
                                                                                                      { __DEFAULT ->
                                                                                                            GHC.Event.PSQ.Bin [dt_s3mjf
                                                                                                                               dt1_s3mjg
                                                                                                                               x'_s3mjh
                                                                                                                               dt2_s3mji
                                                                                                                               l_s3mjj
                                                                                                                               wild3_s3mjz];
                                                                                                        GHC.Event.PSQ.Nil ->
                                                                                                            case
                                                                                                                l_s3mjj
                                                                                                            of
                                                                                                            wild4_s3mjA
                                                                                                            { __DEFAULT ->
                                                                                                                  GHC.Event.PSQ.Bin [dt_s3mjf
                                                                                                                                     dt1_s3mjg
                                                                                                                                     x'_s3mjh
                                                                                                                                     dt2_s3mji
                                                                                                                                     wild4_s3mjA
                                                                                                                                     GHC.Event.PSQ.Nil];
                                                                                                              GHC.Event.PSQ.Nil ->
                                                                                                                  GHC.Event.PSQ.Tip [dt_s3mjf
                                                                                                                                     dt1_s3mjg
                                                                                                                                     x'_s3mjh];
                                                                                                            };
                                                                                                      };
                                                                                                  0## ->
                                                                                                      case
                                                                                                          go1_s3mjc
                                                                                                              l_s3mjj
                                                                                                      of
                                                                                                      wild3_s3mjB
                                                                                                      { __DEFAULT ->
                                                                                                            GHC.Event.PSQ.Bin [dt_s3mjf
                                                                                                                               dt1_s3mjg
                                                                                                                               x'_s3mjh
                                                                                                                               dt2_s3mji
                                                                                                                               wild3_s3mjB
                                                                                                                               r_s3mjk];
                                                                                                        GHC.Event.PSQ.Nil ->
                                                                                                            case
                                                                                                                r_s3mjk
                                                                                                            of
                                                                                                            wild4_s3mjC
                                                                                                            { __DEFAULT ->
                                                                                                                  GHC.Event.PSQ.Bin [dt_s3mjf
                                                                                                                                     dt1_s3mjg
                                                                                                                                     x'_s3mjh
                                                                                                                                     dt2_s3mji
                                                                                                                                     GHC.Event.PSQ.Nil
                                                                                                                                     wild4_s3mjC];
                                                                                                              GHC.Event.PSQ.Nil ->
                                                                                                                  GHC.Event.PSQ.Tip [dt_s3mjf
                                                                                                                                     dt1_s3mjg
                                                                                                                                     x'_s3mjh];
                                                                                                            };
                                                                                                      };
                                                                                                };
                                                                                          };
                                                                                      1# ->
                                                                                          let {
                                                                                            sat_s3mjD [Occ=Once]
                                                                                              :: GHC.Event.PSQ.Mask
                                                                                            [LclId] =
                                                                                                CCCS GHC.Types.I#! [dt2_s3mji];
                                                                                          } in 
                                                                                            GHC.Event.PSQ.merge
                                                                                                sat_s3mjD
                                                                                                l_s3mjj
                                                                                                r_s3mjk;
                                                                                    };
                                                                                1# -> wild_s3mje;
                                                                              };
                                                                        };
                                                                  };
                                                            };
                                                      };
                                                };
                                          };
                                    };
                              };
                        };
                    GHC.Event.PSQ.Tip dt_s3mjE [Occ=Once] _ [Occ=Dead] _ [Occ=Dead] ->
                        case k_s3mja of {
                          GHC.Types.I# x_s3mjI [Occ=Once] ->
                              case ==# [x_s3mjI dt_s3mjE] of {
                                __DEFAULT -> wild_s3mje;
                                1# -> GHC.Event.PSQ.Nil [];
                              };
                        };
                    GHC.Event.PSQ.Nil -> GHC.Event.PSQ.Nil [];
                  };
        } in  go1_s3mjc eta_s3mjb;

GHC.Event.PSQ.deleteView [InlPrag=INLINABLE]
  :: forall v.
     GHC.Event.PSQ.Key
     -> GHC.Event.PSQ.IntPSQ v
     -> GHC.Base.Maybe (GHC.Event.PSQ.Prio, v, GHC.Event.PSQ.IntPSQ v)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,U(U)><S,1*U>,
 Unf=OtherCon []] =
    [] \r [k_s3mjK t0_s3mjL]
        let {
          delFrom_s3mjM [Occ=LoopBreaker]
            :: GHC.Event.PSQ.IntPSQ v_a3iOE
               -> (# GHC.Event.PSQ.IntPSQ v_a3iOE,
                     GHC.Base.Maybe (GHC.Event.PSQ.Prio, v_a3iOE) #)
          [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []] =
              sat-only [k_s3mjK delFrom_s3mjM] \r [t_s3mjN]
                  case t_s3mjN of wild_s3mjO {
                    GHC.Event.PSQ.Bin dt_s3mjP
                                      dt1_s3mjQ [Occ=Once*]
                                      x'_s3mjR [Occ=Once*]
                                      dt2_s3mjS
                                      l_s3mjT [Occ=Once*]
                                      r_s3mjU [Occ=Once*] ->
                        case k_s3mjK of {
                          GHC.Types.I# x#_s3mjW ->
                              case int2Word# [dt2_s3mjS] of m_s3mjX [Dmd=<S,U>] {
                                __DEFAULT ->
                                    case minusWord# [m_s3mjX 1##] of sat_s3mjZ {
                                      __DEFAULT ->
                                          case
                                              xor# [sat_s3mjZ 18446744073709551615##]
                                          of
                                          sat_s3mk0
                                          { __DEFAULT ->
                                                case
                                                    xor# [sat_s3mk0 m_s3mjX]
                                                of
                                                m'_s3mjY [Dmd=<S,U>]
                                                { __DEFAULT ->
                                                      case int2Word# [dt_s3mjP] of sat_s3mk3 {
                                                        __DEFAULT ->
                                                            case
                                                                and# [sat_s3mk3 m'_s3mjY]
                                                            of
                                                            sat_s3mk4
                                                            { __DEFAULT ->
                                                                  case
                                                                      int2Word# [x#_s3mjW]
                                                                  of
                                                                  sat_s3mk1
                                                                  { __DEFAULT ->
                                                                        case
                                                                            and# [sat_s3mk1
                                                                                  m'_s3mjY]
                                                                        of
                                                                        sat_s3mk2
                                                                        { __DEFAULT ->
                                                                              case
                                                                                  neWord# [sat_s3mk2
                                                                                           sat_s3mk4]
                                                                              of
                                                                              { __DEFAULT ->
                                                                                    case
                                                                                        ==# [x#_s3mjW
                                                                                             dt_s3mjP]
                                                                                    of
                                                                                    { __DEFAULT ->
                                                                                          case
                                                                                              int2Word# [x#_s3mjW]
                                                                                          of
                                                                                          sat_s3mk7
                                                                                          { __DEFAULT ->
                                                                                                case
                                                                                                    and# [sat_s3mk7
                                                                                                          m_s3mjX]
                                                                                                of
                                                                                                { __DEFAULT ->
                                                                                                      case
                                                                                                          delFrom_s3mjM
                                                                                                              r_s3mjU
                                                                                                      of
                                                                                                      { (#,#) ipv_s3mka [Occ=Once!]
                                                                                                              ipv1_s3mkb [Occ=Once*] ->
                                                                                                            case
                                                                                                                ipv_s3mka
                                                                                                            of
                                                                                                            wild3_s3mkc
                                                                                                            { __DEFAULT ->
                                                                                                                  let {
                                                                                                                    sat_s3mkd [Occ=Once]
                                                                                                                      :: GHC.Event.PSQ.IntPSQ
                                                                                                                           v_a3iOE
                                                                                                                    [LclId] =
                                                                                                                        CCCS GHC.Event.PSQ.Bin! [dt_s3mjP
                                                                                                                                                 dt1_s3mjQ
                                                                                                                                                 x'_s3mjR
                                                                                                                                                 dt2_s3mjS
                                                                                                                                                 l_s3mjT
                                                                                                                                                 wild3_s3mkc];
                                                                                                                  } in 
                                                                                                                    (#,#) [sat_s3mkd
                                                                                                                           ipv1_s3mkb];
                                                                                                              GHC.Event.PSQ.Nil ->
                                                                                                                  case
                                                                                                                      l_s3mjT
                                                                                                                  of
                                                                                                                  wild4_s3mke
                                                                                                                  { __DEFAULT ->
                                                                                                                        let {
                                                                                                                          sat_s3mkf [Occ=Once]
                                                                                                                            :: GHC.Event.PSQ.IntPSQ
                                                                                                                                 v_a3iOE
                                                                                                                          [LclId] =
                                                                                                                              CCCS GHC.Event.PSQ.Bin! [dt_s3mjP
                                                                                                                                                       dt1_s3mjQ
                                                                                                                                                       x'_s3mjR
                                                                                                                                                       dt2_s3mjS
                                                                                                                                                       wild4_s3mke
                                                                                                                                                       GHC.Event.PSQ.Nil];
                                                                                                                        } in 
                                                                                                                          (#,#) [sat_s3mkf
                                                                                                                                 ipv1_s3mkb];
                                                                                                                    GHC.Event.PSQ.Nil ->
                                                                                                                        let {
                                                                                                                          sat_s3mkg [Occ=Once]
                                                                                                                            :: GHC.Event.PSQ.IntPSQ
                                                                                                                                 v_a3iOE
                                                                                                                          [LclId] =
                                                                                                                              CCCS GHC.Event.PSQ.Tip! [dt_s3mjP
                                                                                                                                                       dt1_s3mjQ
                                                                                                                                                       x'_s3mjR];
                                                                                                                        } in 
                                                                                                                          (#,#) [sat_s3mkg
                                                                                                                                 ipv1_s3mkb];
                                                                                                                  };
                                                                                                            };
                                                                                                      };
                                                                                                  0## ->
                                                                                                      case
                                                                                                          delFrom_s3mjM
                                                                                                              l_s3mjT
                                                                                                      of
                                                                                                      { (#,#) ipv_s3mki [Occ=Once!]
                                                                                                              ipv1_s3mkj [Occ=Once*] ->
                                                                                                            case
                                                                                                                ipv_s3mki
                                                                                                            of
                                                                                                            wild3_s3mkk
                                                                                                            { __DEFAULT ->
                                                                                                                  let {
                                                                                                                    sat_s3mkl [Occ=Once]
                                                                                                                      :: GHC.Event.PSQ.IntPSQ
                                                                                                                           v_a3iOE
                                                                                                                    [LclId] =
                                                                                                                        CCCS GHC.Event.PSQ.Bin! [dt_s3mjP
                                                                                                                                                 dt1_s3mjQ
                                                                                                                                                 x'_s3mjR
                                                                                                                                                 dt2_s3mjS
                                                                                                                                                 wild3_s3mkk
                                                                                                                                                 r_s3mjU];
                                                                                                                  } in 
                                                                                                                    (#,#) [sat_s3mkl
                                                                                                                           ipv1_s3mkj];
                                                                                                              GHC.Event.PSQ.Nil ->
                                                                                                                  case
                                                                                                                      r_s3mjU
                                                                                                                  of
                                                                                                                  wild4_s3mkm
                                                                                                                  { __DEFAULT ->
                                                                                                                        let {
                                                                                                                          sat_s3mkn [Occ=Once]
                                                                                                                            :: GHC.Event.PSQ.IntPSQ
                                                                                                                                 v_a3iOE
                                                                                                                          [LclId] =
                                                                                                                              CCCS GHC.Event.PSQ.Bin! [dt_s3mjP
                                                                                                                                                       dt1_s3mjQ
                                                                                                                                                       x'_s3mjR
                                                                                                                                                       dt2_s3mjS
                                                                                                                                                       GHC.Event.PSQ.Nil
                                                                                                                                                       wild4_s3mkm];
                                                                                                                        } in 
                                                                                                                          (#,#) [sat_s3mkn
                                                                                                                                 ipv1_s3mkj];
                                                                                                                    GHC.Event.PSQ.Nil ->
                                                                                                                        let {
                                                                                                                          sat_s3mko [Occ=Once]
                                                                                                                            :: GHC.Event.PSQ.IntPSQ
                                                                                                                                 v_a3iOE
                                                                                                                          [LclId] =
                                                                                                                              CCCS GHC.Event.PSQ.Tip! [dt_s3mjP
                                                                                                                                                       dt1_s3mjQ
                                                                                                                                                       x'_s3mjR];
                                                                                                                        } in 
                                                                                                                          (#,#) [sat_s3mko
                                                                                                                                 ipv1_s3mkj];
                                                                                                                  };
                                                                                                            };
                                                                                                      };
                                                                                                };
                                                                                          };
                                                                                      1# ->
                                                                                          let {
                                                                                            sat_s3mkp [Occ=Once]
                                                                                              :: GHC.Event.PSQ.Mask
                                                                                            [LclId] =
                                                                                                CCCS GHC.Types.I#! [dt2_s3mjS];
                                                                                          } in 
                                                                                            case
                                                                                                GHC.Event.PSQ.merge
                                                                                                    sat_s3mkp
                                                                                                    l_s3mjT
                                                                                                    r_s3mjU
                                                                                            of
                                                                                            t'_s3mkq
                                                                                            { __DEFAULT ->
                                                                                                  let {
                                                                                                    sat_s3mkr [Occ=Once]
                                                                                                      :: GHC.Event.PSQ.Prio
                                                                                                    [LclId] =
                                                                                                        CCCS GHC.Word.W64#! [dt1_s3mjQ]; } in
                                                                                                  let {
                                                                                                    sat_s3mks [Occ=Once]
                                                                                                      :: (GHC.Event.PSQ.Prio,
                                                                                                          v_a3iOE)
                                                                                                    [LclId] =
                                                                                                        CCCS (,)! [sat_s3mkr
                                                                                                                   x'_s3mjR]; } in
                                                                                                  let {
                                                                                                    sat_s3mkt [Occ=Once]
                                                                                                      :: GHC.Base.Maybe
                                                                                                           (GHC.Event.PSQ.Prio,
                                                                                                            v_a3iOE)
                                                                                                    [LclId] =
                                                                                                        CCCS GHC.Base.Just! [sat_s3mks];
                                                                                                  } in 
                                                                                                    (#,#) [t'_s3mkq
                                                                                                           sat_s3mkt];
                                                                                            };
                                                                                    };
                                                                                1# ->
                                                                                    (#,#) [wild_s3mjO
                                                                                           GHC.Base.Nothing];
                                                                              };
                                                                        };
                                                                  };
                                                            };
                                                      };
                                                };
                                          };
                                    };
                              };
                        };
                    GHC.Event.PSQ.Tip dt_s3mku [Occ=Once]
                                      dt1_s3mkv [Occ=Once]
                                      x'_s3mkw [Occ=Once] ->
                        case k_s3mjK of {
                          GHC.Types.I# x_s3mky [Occ=Once] ->
                              case ==# [x_s3mky dt_s3mku] of {
                                __DEFAULT -> (#,#) [wild_s3mjO GHC.Base.Nothing];
                                1# ->
                                    let {
                                      sat_s3mkA [Occ=Once] :: GHC.Event.PSQ.Prio
                                      [LclId] =
                                          CCCS GHC.Word.W64#! [dt1_s3mkv]; } in
                                    let {
                                      sat_s3mkB [Occ=Once] :: (GHC.Event.PSQ.Prio, v_a3iOE)
                                      [LclId] =
                                          CCCS (,)! [sat_s3mkA x'_s3mkw]; } in
                                    let {
                                      sat_s3mkC [Occ=Once]
                                        :: GHC.Base.Maybe (GHC.Event.PSQ.Prio, v_a3iOE)
                                      [LclId] =
                                          CCCS GHC.Base.Just! [sat_s3mkB];
                                    } in  (#,#) [GHC.Event.PSQ.Nil sat_s3mkC];
                              };
                        };
                    GHC.Event.PSQ.Nil -> (#,#) [GHC.Event.PSQ.Nil GHC.Base.Nothing];
                  };
        } in 
          case delFrom_s3mjM t0_s3mjL of {
            (#,#) ipv_s3mkE [Occ=Once] ipv1_s3mkF [Occ=Once!] ->
                case ipv1_s3mkF of {
                  GHC.Base.Nothing -> GHC.Base.Nothing [];
                  GHC.Base.Just ds1_s3mkH [Occ=Once!] ->
                      case ds1_s3mkH of {
                        (,) p_s3mkJ [Occ=Once] x_s3mkK [Occ=Once] ->
                            let {
                              sat_s3mkL [Occ=Once]
                                :: (GHC.Event.PSQ.Prio, v_a3iOE, GHC.Event.PSQ.IntPSQ v_a3iOE)
                              [LclId] =
                                  CCCS (,,)! [p_s3mkJ x_s3mkK ipv_s3mkE];
                            } in  GHC.Base.Just [sat_s3mkL];
                      };
                };
          };

GHC.Event.PSQ.$wsize [InlPrag=NOUSERINLINE[0], Occ=LoopBreaker]
  :: forall v. GHC.Event.PSQ.IntPSQ v -> GHC.Prim.Int#
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [w_s3mkM]
        case w_s3mkM of {
          GHC.Event.PSQ.Bin _ [Occ=Dead]
                            _ [Occ=Dead]
                            _ [Occ=Dead]
                            _ [Occ=Dead]
                            l_s3mkS [Occ=Once]
                            r_s3mkT [Occ=Once] ->
              case GHC.Event.PSQ.$wsize l_s3mkS of ww_s3mkU {
                __DEFAULT ->
                    case GHC.Event.PSQ.$wsize r_s3mkT of ww1_s3mkV {
                      __DEFAULT ->
                          case +# [1# ww_s3mkU] of sat_s3mkW {
                            __DEFAULT -> +# [sat_s3mkW ww1_s3mkV];
                          };
                    };
              };
          GHC.Event.PSQ.Tip _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] -> 1#;
          GHC.Event.PSQ.Nil -> 0#;
        };

GHC.Event.PSQ.size [InlPrag=NOUSERINLINE[0]]
  :: forall v. GHC.Event.PSQ.IntPSQ v -> GHC.Types.Int
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>m, Unf=OtherCon []] =
    [] \r [w_s3ml0]
        case GHC.Event.PSQ.$wsize w_s3ml0 of ww_s3ml1 {
          __DEFAULT -> GHC.Types.I# [ww_s3ml1];
        };

GHC.Event.PSQ.$wunsafeInsertNew [InlPrag=INLINABLE[0],
                                 Occ=LoopBreaker]
  :: forall v.
     GHC.Prim.Int#
     -> GHC.Prim.Word#
     -> v
     -> GHC.Event.PSQ.IntPSQ v
     -> GHC.Event.PSQ.IntPSQ v
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S,U><S,U><S,1*U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [ww_s3ml2 ww1_s3ml3 w_s3ml4 w1_s3ml5]
        case w1_s3ml5 of wild_s3ml6 {
          GHC.Event.PSQ.Bin dt_s3ml7
                            dt1_s3ml8
                            x'_s3ml9
                            dt2_s3mla
                            l_s3mlb
                            r_s3mlc ->
              case int2Word# [dt2_s3mla] of m_s3mld [Dmd=<S,U>] {
                __DEFAULT ->
                    case minusWord# [m_s3mld 1##] of sat_s3mlf {
                      __DEFAULT ->
                          case xor# [sat_s3mlf 18446744073709551615##] of sat_s3mlg {
                            __DEFAULT ->
                                case xor# [sat_s3mlg m_s3mld] of m'_s3mle [Dmd=<S,U>] {
                                  __DEFAULT ->
                                      case int2Word# [dt_s3ml7] of sat_s3mlj {
                                        __DEFAULT ->
                                            case and# [sat_s3mlj m'_s3mle] of sat_s3mlk {
                                              __DEFAULT ->
                                                  case int2Word# [ww_s3ml2] of sat_s3mlh {
                                                    __DEFAULT ->
                                                        case
                                                            and# [sat_s3mlh m'_s3mle]
                                                        of
                                                        sat_s3mli
                                                        { __DEFAULT ->
                                                              case
                                                                  neWord# [sat_s3mli sat_s3mlk]
                                                              of
                                                              { __DEFAULT ->
                                                                    let-no-escape {
                                                                      $j_s3mlm [Occ=Once*T[0],
                                                                                Dmd=<L,1*U>]
                                                                        :: GHC.Event.PSQ.IntPSQ
                                                                             v_s3jTx
                                                                      [LclId[JoinId(0)],
                                                                       Unf=OtherCon []] =
                                                                          [ww_s3ml2
                                                                           ww1_s3ml3
                                                                           w_s3ml4
                                                                           dt_s3ml7
                                                                           dt1_s3ml8
                                                                           x'_s3ml9
                                                                           dt2_s3mla
                                                                           l_s3mlb
                                                                           r_s3mlc
                                                                           m_s3mld] \r []
                                                                              case
                                                                                  int2Word# [ww_s3ml2]
                                                                              of
                                                                              sat_s3mln
                                                                              { __DEFAULT ->
                                                                                    case
                                                                                        and# [sat_s3mln
                                                                                              m_s3mld]
                                                                                    of
                                                                                    { __DEFAULT ->
                                                                                          case
                                                                                              GHC.Event.PSQ.$wunsafeInsertNew
                                                                                                  ww_s3ml2
                                                                                                  ww1_s3ml3
                                                                                                  w_s3ml4
                                                                                                  r_s3mlc
                                                                                          of
                                                                                          dt3_s3mlp
                                                                                          { __DEFAULT ->
                                                                                                GHC.Event.PSQ.Bin [dt_s3ml7
                                                                                                                   dt1_s3ml8
                                                                                                                   x'_s3ml9
                                                                                                                   dt2_s3mla
                                                                                                                   l_s3mlb
                                                                                                                   dt3_s3mlp];
                                                                                          };
                                                                                      0## ->
                                                                                          case
                                                                                              GHC.Event.PSQ.$wunsafeInsertNew
                                                                                                  ww_s3ml2
                                                                                                  ww1_s3ml3
                                                                                                  w_s3ml4
                                                                                                  l_s3mlb
                                                                                          of
                                                                                          dt3_s3mlq
                                                                                          { __DEFAULT ->
                                                                                                GHC.Event.PSQ.Bin [dt_s3ml7
                                                                                                                   dt1_s3ml8
                                                                                                                   x'_s3ml9
                                                                                                                   dt2_s3mla
                                                                                                                   dt3_s3mlq
                                                                                                                   r_s3mlc];
                                                                                          };
                                                                                    };
                                                                              };
                                                                    } in 
                                                                      let-no-escape {
                                                                        $j1_s3mlr [Occ=Once*T[0],
                                                                                   Dmd=<L,1*U>]
                                                                          :: GHC.Event.PSQ.IntPSQ
                                                                               v_s3jTx
                                                                        [LclId[JoinId(0)],
                                                                         Unf=OtherCon []] =
                                                                            [ww_s3ml2
                                                                             ww1_s3ml3
                                                                             w_s3ml4
                                                                             dt_s3ml7
                                                                             dt1_s3ml8
                                                                             x'_s3ml9
                                                                             dt2_s3mla
                                                                             l_s3mlb
                                                                             r_s3mlc
                                                                             m_s3mld] \r []
                                                                                case
                                                                                    int2Word# [dt_s3ml7]
                                                                                of
                                                                                sat_s3mls
                                                                                { __DEFAULT ->
                                                                                      case
                                                                                          and# [sat_s3mls
                                                                                                m_s3mld]
                                                                                      of
                                                                                      { __DEFAULT ->
                                                                                            case
                                                                                                w_s3ml4
                                                                                            of
                                                                                            dt3_s3mlu
                                                                                            { __DEFAULT ->
                                                                                                  case
                                                                                                      GHC.Event.PSQ.$wunsafeInsertNew
                                                                                                          dt_s3ml7
                                                                                                          dt1_s3ml8
                                                                                                          x'_s3ml9
                                                                                                          r_s3mlc
                                                                                                  of
                                                                                                  dt4_s3mlv
                                                                                                  { __DEFAULT ->
                                                                                                        GHC.Event.PSQ.Bin [ww_s3ml2
                                                                                                                           ww1_s3ml3
                                                                                                                           dt3_s3mlu
                                                                                                                           dt2_s3mla
                                                                                                                           l_s3mlb
                                                                                                                           dt4_s3mlv];
                                                                                                  };
                                                                                            };
                                                                                        0## ->
                                                                                            case
                                                                                                w_s3ml4
                                                                                            of
                                                                                            dt3_s3mlw
                                                                                            { __DEFAULT ->
                                                                                                  case
                                                                                                      GHC.Event.PSQ.$wunsafeInsertNew
                                                                                                          dt_s3ml7
                                                                                                          dt1_s3ml8
                                                                                                          x'_s3ml9
                                                                                                          l_s3mlb
                                                                                                  of
                                                                                                  dt4_s3mlx
                                                                                                  { __DEFAULT ->
                                                                                                        GHC.Event.PSQ.Bin [ww_s3ml2
                                                                                                                           ww1_s3ml3
                                                                                                                           dt3_s3mlw
                                                                                                                           dt2_s3mla
                                                                                                                           dt4_s3mlx
                                                                                                                           r_s3mlc];
                                                                                                  };
                                                                                            };
                                                                                      };
                                                                                };
                                                                      } in 
                                                                        case
                                                                            eqWord# [ww1_s3ml3
                                                                                     dt1_s3ml8]
                                                                        of
                                                                        { __DEFAULT ->
                                                                              case
                                                                                  leWord# [ww1_s3ml3
                                                                                           dt1_s3ml8]
                                                                              of
                                                                              { __DEFAULT ->
                                                                                    $j_s3mlm;
                                                                                1# -> $j1_s3mlr;
                                                                              };
                                                                          1# ->
                                                                              case
                                                                                  <# [ww_s3ml2
                                                                                      dt_s3ml7]
                                                                              of
                                                                              { __DEFAULT ->
                                                                                    $j_s3mlm;
                                                                                1# -> $j1_s3mlr;
                                                                              };
                                                                        };
                                                                1# ->
                                                                    let-no-escape {
                                                                      $j_s3mlB [Occ=Once*T[0],
                                                                                Dmd=<L,1*U>]
                                                                        :: GHC.Event.PSQ.IntPSQ
                                                                             v_s3jTx
                                                                      [LclId[JoinId(0)],
                                                                       Unf=OtherCon []] =
                                                                          [ww_s3ml2
                                                                           ww1_s3ml3
                                                                           w_s3ml4
                                                                           dt_s3ml7
                                                                           dt1_s3ml8
                                                                           x'_s3ml9
                                                                           dt2_s3mla
                                                                           l_s3mlb
                                                                           r_s3mlc] \r []
                                                                              case
                                                                                  int2Word# [ww_s3ml2]
                                                                              of
                                                                              sat_s3mlE
                                                                              { __DEFAULT ->
                                                                                    case
                                                                                        int2Word# [dt_s3ml7]
                                                                                    of
                                                                                    sat_s3mlD
                                                                                    { __DEFAULT ->
                                                                                          case
                                                                                              xor# [sat_s3mlD
                                                                                                    sat_s3mlE]
                                                                                          of
                                                                                          sat_s3mlF
                                                                                          { __DEFAULT ->
                                                                                                case
                                                                                                    clz# [sat_s3mlF]
                                                                                                of
                                                                                                sat_s3mlG
                                                                                                { __DEFAULT ->
                                                                                                      case
                                                                                                          minusWord# [63##
                                                                                                                      sat_s3mlG]
                                                                                                      of
                                                                                                      sat_s3mlH
                                                                                                      { __DEFAULT ->
                                                                                                            case
                                                                                                                word2Int# [sat_s3mlH]
                                                                                                            of
                                                                                                            sat_s3mlI
                                                                                                            { __DEFAULT ->
                                                                                                                  case
                                                                                                                      uncheckedShiftL# [1##
                                                                                                                                        sat_s3mlI]
                                                                                                                  of
                                                                                                                  sat_s3mlJ
                                                                                                                  { __DEFAULT ->
                                                                                                                        case
                                                                                                                            word2Int# [sat_s3mlJ]
                                                                                                                        of
                                                                                                                        x#_s3mlC [Dmd=<S,U>]
                                                                                                                        { __DEFAULT ->
                                                                                                                              case
                                                                                                                                  int2Word# [ww_s3ml2]
                                                                                                                              of
                                                                                                                              sat_s3mlL
                                                                                                                              { __DEFAULT ->
                                                                                                                                    case
                                                                                                                                        int2Word# [x#_s3mlC]
                                                                                                                                    of
                                                                                                                                    sat_s3mlK
                                                                                                                                    { __DEFAULT ->
                                                                                                                                          case
                                                                                                                                              and# [sat_s3mlK
                                                                                                                                                    sat_s3mlL]
                                                                                                                                          of
                                                                                                                                          { __DEFAULT ->
                                                                                                                                                let {
                                                                                                                                                  sat_s3mlN [Occ=Once]
                                                                                                                                                    :: GHC.Event.PSQ.Mask
                                                                                                                                                  [LclId] =
                                                                                                                                                      CCCS GHC.Types.I#! [dt2_s3mla];
                                                                                                                                                } in 
                                                                                                                                                  case
                                                                                                                                                      GHC.Event.PSQ.merge
                                                                                                                                                          sat_s3mlN
                                                                                                                                                          l_s3mlb
                                                                                                                                                          r_s3mlc
                                                                                                                                                  of
                                                                                                                                                  dt3_s3mlO
                                                                                                                                                  { __DEFAULT ->
                                                                                                                                                        case
                                                                                                                                                            w_s3ml4
                                                                                                                                                        of
                                                                                                                                                        dt4_s3mlP
                                                                                                                                                        { __DEFAULT ->
                                                                                                                                                              let {
                                                                                                                                                                sat_s3mlQ [Occ=Once]
                                                                                                                                                                  :: GHC.Event.PSQ.IntPSQ
                                                                                                                                                                       v_s3jTx
                                                                                                                                                                [LclId] =
                                                                                                                                                                    CCCS GHC.Event.PSQ.Tip! [ww_s3ml2
                                                                                                                                                                                             ww1_s3ml3
                                                                                                                                                                                             dt4_s3mlP];
                                                                                                                                                              } in 
                                                                                                                                                                GHC.Event.PSQ.Bin [dt_s3ml7
                                                                                                                                                                                   dt1_s3ml8
                                                                                                                                                                                   x'_s3ml9
                                                                                                                                                                                   x#_s3mlC
                                                                                                                                                                                   dt3_s3mlO
                                                                                                                                                                                   sat_s3mlQ];
                                                                                                                                                        };
                                                                                                                                                  };
                                                                                                                                            0## ->
                                                                                                                                                case
                                                                                                                                                    w_s3ml4
                                                                                                                                                of
                                                                                                                                                dt3_s3mlR
                                                                                                                                                { __DEFAULT ->
                                                                                                                                                      let {
                                                                                                                                                        sat_s3mlS [Occ=Once]
                                                                                                                                                          :: GHC.Event.PSQ.Mask
                                                                                                                                                        [LclId] =
                                                                                                                                                            CCCS GHC.Types.I#! [dt2_s3mla];
                                                                                                                                                      } in 
                                                                                                                                                        case
                                                                                                                                                            GHC.Event.PSQ.merge
                                                                                                                                                                sat_s3mlS
                                                                                                                                                                l_s3mlb
                                                                                                                                                                r_s3mlc
                                                                                                                                                        of
                                                                                                                                                        dt4_s3mlT
                                                                                                                                                        { __DEFAULT ->
                                                                                                                                                              let {
                                                                                                                                                                sat_s3mlU [Occ=Once]
                                                                                                                                                                  :: GHC.Event.PSQ.IntPSQ
                                                                                                                                                                       v_s3jTx
                                                                                                                                                                [LclId] =
                                                                                                                                                                    CCCS GHC.Event.PSQ.Tip! [ww_s3ml2
                                                                                                                                                                                             ww1_s3ml3
                                                                                                                                                                                             dt3_s3mlR];
                                                                                                                                                              } in 
                                                                                                                                                                GHC.Event.PSQ.Bin [dt_s3ml7
                                                                                                                                                                                   dt1_s3ml8
                                                                                                                                                                                   x'_s3ml9
                                                                                                                                                                                   x#_s3mlC
                                                                                                                                                                                   sat_s3mlU
                                                                                                                                                                                   dt4_s3mlT];
                                                                                                                                                        };
                                                                                                                                                };
                                                                                                                                          };
                                                                                                                                    };
                                                                                                                              };
                                                                                                                        };
                                                                                                                  };
                                                                                                            };
                                                                                                      };
                                                                                                };
                                                                                          };
                                                                                    };
                                                                              };
                                                                    } in 
                                                                      let-no-escape {
                                                                        $j1_s3mlV [Occ=Once*T[0],
                                                                                   Dmd=<L,1*U>]
                                                                          :: GHC.Event.PSQ.IntPSQ
                                                                               v_s3jTx
                                                                        [LclId[JoinId(0)],
                                                                         Unf=OtherCon []] =
                                                                            [ww_s3ml2
                                                                             ww1_s3ml3
                                                                             w_s3ml4
                                                                             wild_s3ml6
                                                                             dt_s3ml7] \r []
                                                                                case
                                                                                    int2Word# [dt_s3ml7]
                                                                                of
                                                                                sat_s3mlY
                                                                                { __DEFAULT ->
                                                                                      case
                                                                                          int2Word# [ww_s3ml2]
                                                                                      of
                                                                                      sat_s3mlX
                                                                                      { __DEFAULT ->
                                                                                            case
                                                                                                xor# [sat_s3mlX
                                                                                                      sat_s3mlY]
                                                                                            of
                                                                                            sat_s3mlZ
                                                                                            { __DEFAULT ->
                                                                                                  case
                                                                                                      clz# [sat_s3mlZ]
                                                                                                  of
                                                                                                  sat_s3mm0
                                                                                                  { __DEFAULT ->
                                                                                                        case
                                                                                                            minusWord# [63##
                                                                                                                        sat_s3mm0]
                                                                                                        of
                                                                                                        sat_s3mm1
                                                                                                        { __DEFAULT ->
                                                                                                              case
                                                                                                                  word2Int# [sat_s3mm1]
                                                                                                              of
                                                                                                              sat_s3mm2
                                                                                                              { __DEFAULT ->
                                                                                                                    case
                                                                                                                        uncheckedShiftL# [1##
                                                                                                                                          sat_s3mm2]
                                                                                                                    of
                                                                                                                    sat_s3mm3
                                                                                                                    { __DEFAULT ->
                                                                                                                          case
                                                                                                                              word2Int# [sat_s3mm3]
                                                                                                                          of
                                                                                                                          x#_s3mlW [Dmd=<S,U>]
                                                                                                                          { __DEFAULT ->
                                                                                                                                case
                                                                                                                                    int2Word# [dt_s3ml7]
                                                                                                                                of
                                                                                                                                sat_s3mm5
                                                                                                                                { __DEFAULT ->
                                                                                                                                      case
                                                                                                                                          int2Word# [x#_s3mlW]
                                                                                                                                      of
                                                                                                                                      sat_s3mm4
                                                                                                                                      { __DEFAULT ->
                                                                                                                                            case
                                                                                                                                                and# [sat_s3mm4
                                                                                                                                                      sat_s3mm5]
                                                                                                                                            of
                                                                                                                                            { __DEFAULT ->
                                                                                                                                                  case
                                                                                                                                                      w_s3ml4
                                                                                                                                                  of
                                                                                                                                                  dt3_s3mm7
                                                                                                                                                  { __DEFAULT ->
                                                                                                                                                        GHC.Event.PSQ.Bin [ww_s3ml2
                                                                                                                                                                           ww1_s3ml3
                                                                                                                                                                           dt3_s3mm7
                                                                                                                                                                           x#_s3mlW
                                                                                                                                                                           GHC.Event.PSQ.Nil
                                                                                                                                                                           wild_s3ml6];
                                                                                                                                                  };
                                                                                                                                              0## ->
                                                                                                                                                  case
                                                                                                                                                      w_s3ml4
                                                                                                                                                  of
                                                                                                                                                  dt3_s3mm8
                                                                                                                                                  { __DEFAULT ->
                                                                                                                                                        GHC.Event.PSQ.Bin [ww_s3ml2
                                                                                                                                                                           ww1_s3ml3
                                                                                                                                                                           dt3_s3mm8
                                                                                                                                                                           x#_s3mlW
                                                                                                                                                                           wild_s3ml6
                                                                                                                                                                           GHC.Event.PSQ.Nil];
                                                                                                                                                  };
                                                                                                                                            };
                                                                                                                                      };
                                                                                                                                };
                                                                                                                          };
                                                                                                                    };
                                                                                                              };
                                                                                                        };
                                                                                                  };
                                                                                            };
                                                                                      };
                                                                                };
                                                                      } in 
                                                                        case
                                                                            eqWord# [ww1_s3ml3
                                                                                     dt1_s3ml8]
                                                                        of
                                                                        { __DEFAULT ->
                                                                              case
                                                                                  leWord# [ww1_s3ml3
                                                                                           dt1_s3ml8]
                                                                              of
                                                                              { __DEFAULT ->
                                                                                    $j_s3mlB;
                                                                                1# -> $j1_s3mlV;
                                                                              };
                                                                          1# ->
                                                                              case
                                                                                  <# [ww_s3ml2
                                                                                      dt_s3ml7]
                                                                              of
                                                                              { __DEFAULT ->
                                                                                    $j_s3mlB;
                                                                                1# -> $j1_s3mlV;
                                                                              };
                                                                        };
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
          GHC.Event.PSQ.Tip dt_s3mmc dt1_s3mmd x'_s3mme [Occ=Once*] ->
              let-no-escape {
                $j_s3mmf [Occ=Once*T[0], Dmd=<L,1*U>]
                  :: GHC.Event.PSQ.IntPSQ v_s3jTx
                [LclId[JoinId(0)], Unf=OtherCon []] =
                    [ww_s3ml2 ww1_s3ml3 w_s3ml4 dt_s3mmc dt1_s3mmd x'_s3mme] \r []
                        case int2Word# [ww_s3ml2] of sat_s3mmi {
                          __DEFAULT ->
                              case int2Word# [dt_s3mmc] of sat_s3mmh {
                                __DEFAULT ->
                                    case xor# [sat_s3mmh sat_s3mmi] of sat_s3mmj {
                                      __DEFAULT ->
                                          case clz# [sat_s3mmj] of sat_s3mmk {
                                            __DEFAULT ->
                                                case minusWord# [63## sat_s3mmk] of sat_s3mml {
                                                  __DEFAULT ->
                                                      case word2Int# [sat_s3mml] of sat_s3mmm {
                                                        __DEFAULT ->
                                                            case
                                                                uncheckedShiftL# [1## sat_s3mmm]
                                                            of
                                                            sat_s3mmn
                                                            { __DEFAULT ->
                                                                  case
                                                                      word2Int# [sat_s3mmn]
                                                                  of
                                                                  x#_s3mmg [Dmd=<S,U>]
                                                                  { __DEFAULT ->
                                                                        case
                                                                            int2Word# [ww_s3ml2]
                                                                        of
                                                                        sat_s3mmp
                                                                        { __DEFAULT ->
                                                                              case
                                                                                  int2Word# [x#_s3mmg]
                                                                              of
                                                                              sat_s3mmo
                                                                              { __DEFAULT ->
                                                                                    case
                                                                                        and# [sat_s3mmo
                                                                                              sat_s3mmp]
                                                                                    of
                                                                                    { __DEFAULT ->
                                                                                          case
                                                                                              w_s3ml4
                                                                                          of
                                                                                          dt2_s3mmr
                                                                                          { __DEFAULT ->
                                                                                                let {
                                                                                                  sat_s3mms [Occ=Once]
                                                                                                    :: GHC.Event.PSQ.IntPSQ
                                                                                                         v_s3jTx
                                                                                                  [LclId] =
                                                                                                      CCCS GHC.Event.PSQ.Tip! [ww_s3ml2
                                                                                                                               ww1_s3ml3
                                                                                                                               dt2_s3mmr];
                                                                                                } in 
                                                                                                  GHC.Event.PSQ.Bin [dt_s3mmc
                                                                                                                     dt1_s3mmd
                                                                                                                     x'_s3mme
                                                                                                                     x#_s3mmg
                                                                                                                     GHC.Event.PSQ.Nil
                                                                                                                     sat_s3mms];
                                                                                          };
                                                                                      0## ->
                                                                                          case
                                                                                              w_s3ml4
                                                                                          of
                                                                                          dt2_s3mmt
                                                                                          { __DEFAULT ->
                                                                                                let {
                                                                                                  sat_s3mmu [Occ=Once]
                                                                                                    :: GHC.Event.PSQ.IntPSQ
                                                                                                         v_s3jTx
                                                                                                  [LclId] =
                                                                                                      CCCS GHC.Event.PSQ.Tip! [ww_s3ml2
                                                                                                                               ww1_s3ml3
                                                                                                                               dt2_s3mmt];
                                                                                                } in 
                                                                                                  GHC.Event.PSQ.Bin [dt_s3mmc
                                                                                                                     dt1_s3mmd
                                                                                                                     x'_s3mme
                                                                                                                     x#_s3mmg
                                                                                                                     sat_s3mmu
                                                                                                                     GHC.Event.PSQ.Nil];
                                                                                          };
                                                                                    };
                                                                              };
                                                                        };
                                                                  };
                                                            };
                                                      };
                                                };
                                          };
                                    };
                              };
                        };
              } in 
                let-no-escape {
                  $j1_s3mmv [Occ=Once*T[0], Dmd=<L,1*U>]
                    :: GHC.Event.PSQ.IntPSQ v_s3jTx
                  [LclId[JoinId(0)], Unf=OtherCon []] =
                      [ww_s3ml2 ww1_s3ml3 w_s3ml4 wild_s3ml6 dt_s3mmc] \r []
                          case int2Word# [dt_s3mmc] of sat_s3mmy {
                            __DEFAULT ->
                                case int2Word# [ww_s3ml2] of sat_s3mmx {
                                  __DEFAULT ->
                                      case xor# [sat_s3mmx sat_s3mmy] of sat_s3mmz {
                                        __DEFAULT ->
                                            case clz# [sat_s3mmz] of sat_s3mmA {
                                              __DEFAULT ->
                                                  case minusWord# [63## sat_s3mmA] of sat_s3mmB {
                                                    __DEFAULT ->
                                                        case word2Int# [sat_s3mmB] of sat_s3mmC {
                                                          __DEFAULT ->
                                                              case
                                                                  uncheckedShiftL# [1## sat_s3mmC]
                                                              of
                                                              sat_s3mmD
                                                              { __DEFAULT ->
                                                                    case
                                                                        word2Int# [sat_s3mmD]
                                                                    of
                                                                    x#_s3mmw [Dmd=<S,U>]
                                                                    { __DEFAULT ->
                                                                          case
                                                                              int2Word# [dt_s3mmc]
                                                                          of
                                                                          sat_s3mmF
                                                                          { __DEFAULT ->
                                                                                case
                                                                                    int2Word# [x#_s3mmw]
                                                                                of
                                                                                sat_s3mmE
                                                                                { __DEFAULT ->
                                                                                      case
                                                                                          and# [sat_s3mmE
                                                                                                sat_s3mmF]
                                                                                      of
                                                                                      { __DEFAULT ->
                                                                                            case
                                                                                                w_s3ml4
                                                                                            of
                                                                                            dt2_s3mmH
                                                                                            { __DEFAULT ->
                                                                                                  GHC.Event.PSQ.Bin [ww_s3ml2
                                                                                                                     ww1_s3ml3
                                                                                                                     dt2_s3mmH
                                                                                                                     x#_s3mmw
                                                                                                                     GHC.Event.PSQ.Nil
                                                                                                                     wild_s3ml6];
                                                                                            };
                                                                                        0## ->
                                                                                            case
                                                                                                w_s3ml4
                                                                                            of
                                                                                            dt2_s3mmI
                                                                                            { __DEFAULT ->
                                                                                                  GHC.Event.PSQ.Bin [ww_s3ml2
                                                                                                                     ww1_s3ml3
                                                                                                                     dt2_s3mmI
                                                                                                                     x#_s3mmw
                                                                                                                     wild_s3ml6
                                                                                                                     GHC.Event.PSQ.Nil];
                                                                                            };
                                                                                      };
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                                };
                          };
                } in 
                  case eqWord# [ww1_s3ml3 dt1_s3mmd] of {
                    __DEFAULT ->
                        case leWord# [ww1_s3ml3 dt1_s3mmd] of {
                          __DEFAULT -> $j_s3mmf;
                          1# -> $j1_s3mmv;
                        };
                    1# ->
                        case <# [ww_s3ml2 dt_s3mmc] of {
                          __DEFAULT -> $j_s3mmf;
                          1# -> $j1_s3mmv;
                        };
                  };
          GHC.Event.PSQ.Nil ->
              case w_s3ml4 of dt_s3mmM {
                __DEFAULT -> GHC.Event.PSQ.Tip [ww_s3ml2 ww1_s3ml3 dt_s3mmM];
              };
        };

GHC.Event.PSQ.unsafeInsertNew [InlPrag=NOUSERINLINE[0]]
  :: forall v.
     GHC.Event.PSQ.Key
     -> GHC.Event.PSQ.Prio
     -> v
     -> GHC.Event.PSQ.IntPSQ v
     -> GHC.Event.PSQ.IntPSQ v
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,1*U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [w_s3mmN w1_s3mmO w2_s3mmP w3_s3mmQ]
        case w_s3mmN of {
          GHC.Types.I# ww1_s3mmS [Occ=Once] ->
              case w1_s3mmO of {
                GHC.Word.W64# ww3_s3mmU [Occ=Once] ->
                    GHC.Event.PSQ.$wunsafeInsertNew
                        ww1_s3mmS ww3_s3mmU w2_s3mmP w3_s3mmQ;
              };
        };

GHC.Event.PSQ.insert
  :: forall v.
     GHC.Event.PSQ.Key
     -> GHC.Event.PSQ.Prio
     -> v
     -> GHC.Event.PSQ.IntPSQ v
     -> GHC.Event.PSQ.IntPSQ v
[GblId,
 Arity=4,
 Caf=NoCafRefs,
 Str=<S(S),1*U(U)><S(S),1*U(U)><S,1*U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [k_s3mmV p_s3mmW x_s3mmX t0_s3mmY]
        case k_s3mmV of ww_s3mmZ {
          GHC.Types.I# ww1_s3mn0 [Occ=Once] ->
              case p_s3mmW of {
                GHC.Word.W64# ww3_s3mn2 [Occ=Once] ->
                    case GHC.Event.PSQ.delete ww_s3mmZ t0_s3mmY of sat_s3mn3 {
                      __DEFAULT ->
                          GHC.Event.PSQ.$wunsafeInsertNew
                              ww1_s3mn0 ww3_s3mn2 x_s3mmX sat_s3mn3;
                    };
              };
        };

go_r3kd8
  :: forall v. [GHC.Event.PSQ.Elem v] -> GHC.Event.PSQ.IntPSQ v
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    sat-only [] \r [ds_s3mn4]
        case ds_s3mn4 of {
          [] -> GHC.Event.PSQ.Nil [];
          : y_s3mn6 [Occ=Once!] ys_s3mn7 [Occ=Once] ->
              case y_s3mn6 of {
                GHC.Event.PSQ.E dt_s3mn9 dt1_s3mna [Occ=Once] x_s3mnb [Occ=Once] ->
                    case go_r3kd8 ys_s3mn7 of sat_s3mnd {
                      __DEFAULT ->
                          let {
                            sat_s3mnc [Occ=Once] :: GHC.Event.PSQ.Key
                            [LclId] =
                                CCCS GHC.Types.I#! [dt_s3mn9];
                          } in 
                            case GHC.Event.PSQ.delete sat_s3mnc sat_s3mnd of sat_s3mne {
                              __DEFAULT ->
                                  GHC.Event.PSQ.$wunsafeInsertNew
                                      dt_s3mn9 dt1_s3mna x_s3mnb sat_s3mne;
                            };
                    };
              };
        };

GHC.Event.PSQ.fromList [InlPrag=INLINABLE]
  :: forall v. [GHC.Event.PSQ.Elem v] -> GHC.Event.PSQ.IntPSQ v
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [eta_B1] go_r3kd8 eta_B1;

GHC.Event.PSQ.adjust [InlPrag=INLINE (sat-args=3)]
  :: forall a.
     (GHC.Event.PSQ.Prio -> GHC.Event.PSQ.Prio)
     -> GHC.Event.PSQ.Key -> GHC.Event.PSQ.PSQ a -> GHC.Event.PSQ.PSQ a
[GblId,
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,1*C1(U(U))><L,U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [f_s3mnf k_s3mng q_s3mnh]
        case GHC.Event.PSQ.deleteView k_s3mng q_s3mnh of {
          GHC.Base.Nothing -> q_s3mnh;
          GHC.Base.Just ds_s3mnj [Occ=Once!] ->
              case ds_s3mnj of {
                (,,) p_s3mnl [Occ=Once] v_s3mnm [Occ=Once] t0'_s3mnn [Occ=Once] ->
                    case k_s3mng of {
                      GHC.Types.I# ww1_s3mnp [Occ=Once] ->
                          case f_s3mnf p_s3mnl of {
                            GHC.Word.W64# ww3_s3mnr [Occ=Once] ->
                                GHC.Event.PSQ.$wunsafeInsertNew
                                    ww1_s3mnp ww3_s3mnr v_s3mnm t0'_s3mnn;
                          };
                    };
              };
        };

GHC.Event.PSQ.Bin
  :: forall v.
     GHC.Prim.Int#
     -> GHC.Prim.Word#
     -> v
     -> GHC.Prim.Int#
     -> GHC.Event.PSQ.IntPSQ v
     -> GHC.Event.PSQ.IntPSQ v
     -> GHC.Event.PSQ.IntPSQ v
[GblId[DataCon],
 Arity=6,
 Caf=NoCafRefs,
 Str=<L,U><L,U><L,U><L,U><L,U><L,U>m1,
 Unf=OtherCon []] =
    [] \r [eta_B6 eta_B5 eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.Event.PSQ.Bin [eta_B6 eta_B5 eta_B4 eta_B3 eta_B2 eta_B1];

GHC.Event.PSQ.Tip
  :: forall v.
     GHC.Prim.Int# -> GHC.Prim.Word# -> v -> GHC.Event.PSQ.IntPSQ v
[GblId[DataCon],
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,U><L,U><L,U>m2,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.Event.PSQ.Tip [eta_B3 eta_B2 eta_B1];

GHC.Event.PSQ.Nil :: forall v. GHC.Event.PSQ.IntPSQ v
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Event.PSQ.Nil! [];

GHC.Event.PSQ.E
  :: forall a.
     GHC.Prim.Int# -> GHC.Prim.Word# -> a -> GHC.Event.PSQ.Elem a
[GblId[DataCon],
 Arity=3,
 Caf=NoCafRefs,
 Str=<L,U><L,U><L,U>m,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.Event.PSQ.E [eta_B3 eta_B2 eta_B1];

