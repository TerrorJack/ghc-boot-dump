
==================== Pre unarise: ====================
2018-03-16 16:04:29.08046388 UTC

lvl_r9ldZ :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "KQueue back end not implemented for this platform"#;

GHC.Event.KQueue.new :: GHC.Types.IO GHC.Event.Internal.Backend
[GblId, Str=x] =
    [] \u []
        case GHC.CString.unpackCString# lvl_r9ldZ of sat_s9le1 {
          __DEFAULT -> GHC.Err.errorWithoutStackTrace sat_s9le1;
        };

GHC.Event.KQueue.available [InlPrag=INLINE (sat-args=0)]
  :: GHC.Types.Bool
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.False! [];

GHC.Event.KQueue.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

GHC.Event.KQueue.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.KQueue.$trModule4];

GHC.Event.KQueue.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.Event.KQueue"#;

GHC.Event.KQueue.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.KQueue.$trModule2];

GHC.Event.KQueue.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [GHC.Event.KQueue.$trModule3
                                     GHC.Event.KQueue.$trModule1];


==================== STG syntax: ====================
2018-03-16 16:04:29.081430524 UTC

lvl_r9ldZ :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "KQueue back end not implemented for this platform"#;

GHC.Event.KQueue.new :: GHC.Types.IO GHC.Event.Internal.Backend
[GblId, Str=x] =
    [] \u []
        case GHC.CString.unpackCString# lvl_r9ldZ of sat_s9le1 {
          __DEFAULT -> GHC.Err.errorWithoutStackTrace sat_s9le1;
        };

GHC.Event.KQueue.available [InlPrag=INLINE (sat-args=0)]
  :: GHC.Types.Bool
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.False! [];

GHC.Event.KQueue.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

GHC.Event.KQueue.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.KQueue.$trModule4];

GHC.Event.KQueue.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.Event.KQueue"#;

GHC.Event.KQueue.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.KQueue.$trModule2];

GHC.Event.KQueue.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [GHC.Event.KQueue.$trModule3
                                     GHC.Event.KQueue.$trModule1];


==================== Pre unarise: ====================
2018-03-16 16:04:29.133406608 UTC

lvl_r9ldZ :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "KQueue back end not implemented for this platform"#;

GHC.Event.KQueue.new :: GHC.Types.IO GHC.Event.Internal.Backend
[GblId, Str=x] =
    [] \u []
        case GHC.CString.unpackCString# lvl_r9ldZ of sat_s9lf1 {
          __DEFAULT -> GHC.Err.errorWithoutStackTrace sat_s9lf1;
        };

GHC.Event.KQueue.available [InlPrag=INLINE (sat-args=0)]
  :: GHC.Types.Bool
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.False! [];

GHC.Event.KQueue.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

GHC.Event.KQueue.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.KQueue.$trModule4];

GHC.Event.KQueue.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.Event.KQueue"#;

GHC.Event.KQueue.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.KQueue.$trModule2];

GHC.Event.KQueue.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [GHC.Event.KQueue.$trModule3
                                     GHC.Event.KQueue.$trModule1];


==================== STG syntax: ====================
2018-03-16 16:04:29.134450404 UTC

lvl_r9ldZ :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "KQueue back end not implemented for this platform"#;

GHC.Event.KQueue.new :: GHC.Types.IO GHC.Event.Internal.Backend
[GblId, Str=x] =
    [] \u []
        case GHC.CString.unpackCString# lvl_r9ldZ of sat_s9lf1 {
          __DEFAULT -> GHC.Err.errorWithoutStackTrace sat_s9lf1;
        };

GHC.Event.KQueue.available [InlPrag=INLINE (sat-args=0)]
  :: GHC.Types.Bool
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.False! [];

GHC.Event.KQueue.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

GHC.Event.KQueue.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.KQueue.$trModule4];

GHC.Event.KQueue.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.Event.KQueue"#;

GHC.Event.KQueue.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.KQueue.$trModule2];

GHC.Event.KQueue.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [GHC.Event.KQueue.$trModule3
                                     GHC.Event.KQueue.$trModule1];

