
==================== Output Cmm ====================
2018-03-16 16:04:26.158870519 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:04:26.159979597 UTC

[section ""data" . GHC.Event.Internal.$WBackend_closure" {
     GHC.Event.Internal.$WBackend_closure:
         const GHC.Event.Internal.$WBackend_info;
 },
 GHC.Event.Internal.$WBackend_entry() //  [R2, R3, R4, R5, R6]
         { info_tbl: [(c9j1C,
                       label: GHC.Event.Internal.$WBackend_info
                       rep:HeapRep static { Fun {arity: 5 fun_type: ArgSpec 25} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9j1C: // global
           if ((Sp + -40) < SpLim) (likely: False) goto c9j1D; else goto c9j1E;
       c9j1D: // global
           R6 = R6;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$WBackend_closure;
           call (stg_gc_fun)(R6, R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9j1E: // global
           I64[Sp - 40] = block_c9j1z_info;
           R1 = R2;
           P64[Sp - 32] = R3;
           P64[Sp - 24] = R4;
           P64[Sp - 16] = R5;
           P64[Sp - 8] = R6;
           Sp = Sp - 40;
           call stg_ap_0_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9j1z() //  [R1]
         { info_tbl: [(c9j1z,
                       label: block_c9j1z_info
                       rep:StackRep [False, False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9j1z: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c9j1H; else goto c9j1G;
       c9j1H: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9j1G: // global
           I64[Hp - 40] = GHC.Event.Internal.Backend_con_info;
           P64[Hp - 32] = R1;
           P64[Hp - 24] = P64[Sp + 8];
           P64[Hp - 16] = P64[Sp + 16];
           P64[Hp - 8] = P64[Sp + 24];
           P64[Hp] = P64[Sp + 32];
           R1 = Hp - 39;
           Sp = Sp + 40;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.161481864 UTC

[section ""data" . GHC.Event.Internal.$WTimeout_closure" {
     GHC.Event.Internal.$WTimeout_closure:
         const GHC.Event.Internal.$WTimeout_info;
 },
 GHC.Event.Internal.$WTimeout_entry() //  [R2]
         { info_tbl: [(c9j1P,
                       label: GHC.Event.Internal.$WTimeout_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9j1P: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9j1T; else goto c9j1U;
       c9j1T: // global
           R2 = R2;
           R1 = GHC.Event.Internal.$WTimeout_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9j1U: // global
           I64[Sp - 8] = block_c9j1M_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9j1Y; else goto c9j1N;
       u9j1Y: // global
           call _c9j1M(R1) args: 0, res: 0, upd: 0;
       c9j1N: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9j1M() //  [R1]
         { info_tbl: [(c9j1M,
                       label: block_c9j1M_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9j1M: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9j1X; else goto c9j1W;
       c9j1X: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9j1W: // global
           _s9iX5::I64 = I64[R1 + 7];
           I64[Hp - 8] = GHC.Event.Internal.Timeout_con_info;
           I64[Hp] = _s9iX5::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.162533944 UTC

[section ""data" . GHC.Event.Internal.$fMonoidEventLifetime1_closure" {
     GHC.Event.Internal.$fMonoidEventLifetime1_closure:
         const GHC.Types.I#_con_info;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.163080486 UTC

[section ""cstring" . GHC.Event.Internal.$fShowTimeout4_bytes" {
     GHC.Event.Internal.$fShowTimeout4_bytes:
         I8[] [70,111,114,101,118,101,114]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.163793846 UTC

[section ""data" . GHC.Event.Internal.$fShowTimeout3_closure" {
     GHC.Event.Internal.$fShowTimeout3_closure:
         const GHC.Event.Internal.$fShowTimeout3_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Internal.$fShowTimeout3_entry() //  [R1]
         { info_tbl: [(c9j25,
                       label: GHC.Event.Internal.$fShowTimeout3_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9j25: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9j26; else goto c9j27;
       c9j26: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9j27: // global
           (_c9j22::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9j22::I64 == 0) goto c9j24; else goto c9j23;
       c9j24: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9j23: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9j22::I64;
           R2 = GHC.Event.Internal.$fShowTimeout4_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.164779021 UTC

[section ""data" . GHC.Event.Internal.$fShowTimeout2_closure" {
     GHC.Event.Internal.$fShowTimeout2_closure:
         const GHC.Event.Internal.$fShowTimeout2_info;
         const 0;
 },
 GHC.Event.Internal.$fShowTimeout2_entry() //  [R2]
         { info_tbl: [(c9j2c,
                       label: GHC.Event.Internal.$fShowTimeout2_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9j2c: // global
           R3 = R2;
           R2 = GHC.Event.Internal.$fShowTimeout3_closure;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.165559867 UTC

[section ""cstring" . GHC.Event.Internal.$fShowTimeout5_bytes" {
     GHC.Event.Internal.$fShowTimeout5_bytes:
         I8[] [84,105,109,101,111,117,116,32]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.167818502 UTC

[section ""data" . GHC.Event.Internal.$fShowTimeout_$cshowsPrec_closure" {
     GHC.Event.Internal.$fShowTimeout_$cshowsPrec_closure:
         const GHC.Event.Internal.$fShowTimeout_$cshowsPrec_info;
         const 0;
 },
 w1_s9iXc_entry() //  [R1]
         { info_tbl: [(c9j2A,
                       label: w1_s9iXc_info
                       rep:HeapRep 1 nonptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9j2A: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9j2B; else goto c9j2I;
       c9j2B: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9j2I: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           _s9iX9::I64 = I64[R1 + 16];
           if (%MO_S_Lt_W64(_s9iX9::I64, 0)) goto c9j2G; else goto c9j2H;
       c9j2G: // global
           R2 = _s9iX9::I64;
           Sp = Sp - 16;
           call GHC.Integer.Type.wordToInteger_entry(R2) args: 24, res: 0, upd: 24;
       c9j2H: // global
           R2 = _s9iX9::I64;
           Sp = Sp - 16;
           call GHC.Integer.Type.smallInteger_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 sat_s9iXk_entry() //  [R1]
         { info_tbl: [(c9j2Y,
                       label: sat_s9iXk_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9j2Y: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9j2Z; else goto c9j30;
       c9j2Z: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9j30: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c9j2V_info;
           R4 = P64[R1 + 24];
           R3 = P64[R1 + 16];
           R2 = 11;
           Sp = Sp - 24;
           call GHC.Show.$w$cshowsPrec4_entry(R4,
                                              R3,
                                              R2) args: 8, res: 8, upd: 24;
     }
 },
 _c9j2V() //  [R1, R2]
         { info_tbl: [(c9j2V,
                       label: block_c9j2V_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9j2V: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9j33; else goto c9j32;
       c9j33: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c9j32: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 sat_s9iXl_entry() //  [R1, R2]
         { info_tbl: [(c9j34,
                       label: sat_s9iXl_info
                       rep:HeapRep 1 ptrs { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9j34: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c9j38; else goto c9j37;
       c9j38: // global
           HpAlloc = 32;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9j37: // global
           _s9iXc::P64 = P64[R1 + 7];
           I64[Hp - 24] = sat_s9iXk_info;
           P64[Hp - 8] = _s9iXc::P64;
           P64[Hp] = R2;
           R3 = Hp - 24;
           R2 = GHC.Event.Internal.$fShowTimeout5_bytes;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 sat_s9iXr_entry() //  [R1]
         { info_tbl: [(c9j3r,
                       label: sat_s9iXr_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9j3r: // global
           _s9iXr::P64 = R1;
           if ((Sp + -24) < SpLim) (likely: False) goto c9j3s; else goto c9j3t;
       c9j3t: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9j3v; else goto c9j3u;
       c9j3v: // global
           HpAlloc = 24;
           goto c9j3s;
       c9j3s: // global
           R1 = _s9iXr::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9j3u: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s9iXr::P64;
           _s9iXc::P64 = P64[_s9iXr::P64 + 16];
           _s9iXm::P64 = P64[_s9iXr::P64 + 24];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.$fShow(,)2_closure;
           P64[Hp] = _s9iXm::P64;
           I64[Sp - 24] = block_c9j3o_info;
           R4 = Hp - 14;
           R3 = _s9iXc::P64;
           R2 = 11;
           Sp = Sp - 24;
           call GHC.Show.$w$cshowsPrec4_entry(R4,
                                              R3,
                                              R2) args: 8, res: 8, upd: 24;
     }
 },
 _c9j3o() //  [R1, R2]
         { info_tbl: [(c9j3o,
                       label: block_c9j3o_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9j3o: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9j3y; else goto c9j3x;
       c9j3y: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c9j3x: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 sat_s9iXs_entry() //  [R1]
         { info_tbl: [(c9j3z,
                       label: sat_s9iXs_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9j3z: // global
           _s9iXs::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9j3A; else goto c9j3B;
       c9j3B: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c9j3D; else goto c9j3C;
       c9j3D: // global
           HpAlloc = 32;
           goto c9j3A;
       c9j3A: // global
           R1 = _s9iXs::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9j3C: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s9iXs::P64;
           _s9iXc::P64 = P64[_s9iXs::P64 + 16];
           _s9iXm::P64 = P64[_s9iXs::P64 + 24];
           I64[Hp - 24] = sat_s9iXr_info;
           P64[Hp - 8] = _s9iXc::P64;
           P64[Hp] = _s9iXm::P64;
           R3 = Hp - 24;
           R2 = GHC.Event.Internal.$fShowTimeout5_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 24, res: 0, upd: 24;
     }
 },
 sat_s9iXt_entry() //  [R1, R2]
         { info_tbl: [(c9j3F,
                       label: sat_s9iXt_info
                       rep:HeapRep 1 ptrs { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9j3F: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c9j3J; else goto c9j3I;
       c9j3J: // global
           HpAlloc = 56;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9j3I: // global
           _s9iXc::P64 = P64[R1 + 7];
           I64[Hp - 48] = sat_s9iXs_info;
           P64[Hp - 32] = _s9iXc::P64;
           P64[Hp - 24] = R2;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.$fShow(,)4_closure;
           P64[Hp] = Hp - 48;
           R1 = Hp - 14;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.Event.Internal.$fShowTimeout_$cshowsPrec_entry() //  [R2, R3]
         { info_tbl: [(c9j3O,
                       label: GHC.Event.Internal.$fShowTimeout_$cshowsPrec_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9j3O: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9j3P; else goto c9j3Q;
       c9j3P: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fShowTimeout_$cshowsPrec_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9j3Q: // global
           I64[Sp - 16] = block_c9j2k_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9j42; else goto c9j2l;
       u9j42: // global
           call _c9j2k(R1) args: 0, res: 0, upd: 0;
       c9j2l: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9j2k() //  [R1]
         { info_tbl: [(c9j2k,
                       label: block_c9j2k_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9j2k: // global
           if (R1 & 7 == 1) goto c9j3L; else goto c9j3M;
       c9j3L: // global
           I64[Sp] = block_c9j2p_info;
           _s9iX9::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9iX9::I64;
           if (R1 & 7 != 0) goto u9j41; else goto c9j2q;
       u9j41: // global
           call _c9j2p(R1) args: 0, res: 0, upd: 0;
       c9j2q: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c9j3M: // global
           R1 = GHC.Event.Internal.$fShowTimeout2_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9j2p() //  [R1]
         { info_tbl: [(c9j2p,
                       label: block_c9j2p_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9j2p: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c9j3U; else goto c9j3T;
       c9j3U: // global
           HpAlloc = 40;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9j3T: // global
           _s9iXb::I64 = I64[R1 + 7];
           I64[Hp - 32] = w1_s9iXc_info;
           I64[Hp - 16] = I64[Sp + 8];
           _c9j2u::P64 = Hp - 32;
           if (%MO_S_Lt_W64(_s9iXb::I64, 11)) goto c9j3W; else goto c9j3X;
       c9j3W: // global
           I64[Hp - 8] = sat_s9iXl_info;
           P64[Hp] = _c9j2u::P64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9j3X: // global
           I64[Hp - 8] = sat_s9iXt_info;
           P64[Hp] = _c9j2u::P64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.172410691 UTC

[section ""data" . GHC.Event.Internal.$fShowTimeout_$cshow_closure" {
     GHC.Event.Internal.$fShowTimeout_$cshow_closure:
         const GHC.Event.Internal.$fShowTimeout_$cshow_info;
         const 0;
 },
 sat_s9iXH_entry() //  [R1]
         { info_tbl: [(c9j4i,
                       label: sat_s9iXH_info
                       rep:HeapRep 1 nonptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9j4i: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9j4j; else goto c9j4O;
       c9j4j: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9j4O: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           _s9iXw::I64 = I64[R1 + 16];
           if (%MO_S_Lt_W64(_s9iXw::I64, 0)) goto c9j4w; else goto c9j4J;
       c9j4w: // global
           I64[Sp - 24] = block_c9j4o_info;
           R2 = _s9iXw::I64;
           Sp = Sp - 24;
           call GHC.Integer.Type.wordToInteger_entry(R2) args: 8, res: 8, upd: 24;
       c9j4J: // global
           I64[Sp - 24] = block_c9j4C_info;
           R2 = _s9iXw::I64;
           Sp = Sp - 24;
           call GHC.Integer.Type.smallInteger_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 _c9j4o() //  [R1]
         { info_tbl: [(c9j4o,
                       label: block_c9j4o_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9j4o: // global
           I64[Sp] = block_c9j4s_info;
           R4 = GHC.Types.[]_closure+1;
           R3 = R1;
           R2 = 11;
           call GHC.Show.$w$cshowsPrec4_entry(R4,
                                              R3,
                                              R2) args: 8, res: 8, upd: 24;
     }
 },
 _c9j4s() //  [R1, R2]
         { info_tbl: [(c9j4s,
                       label: block_c9j4s_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9j4s: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9j4A; else goto c9j4z;
       c9j4A: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c9j4z: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 _c9j4C() //  [R1]
         { info_tbl: [(c9j4C,
                       label: block_c9j4C_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9j4C: // global
           I64[Sp] = block_c9j4G_info;
           R4 = GHC.Types.[]_closure+1;
           R3 = R1;
           R2 = 11;
           call GHC.Show.$w$cshowsPrec4_entry(R4,
                                              R3,
                                              R2) args: 8, res: 8, upd: 24;
     }
 },
 _c9j4G() //  [R1, R2]
         { info_tbl: [(c9j4G,
                       label: block_c9j4G_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9j4G: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9j4N; else goto c9j4M;
       c9j4N: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c9j4M: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 GHC.Event.Internal.$fShowTimeout_$cshow_entry() //  [R2]
         { info_tbl: [(c9j4T,
                       label: GHC.Event.Internal.$fShowTimeout_$cshow_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9j4T: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9j4U; else goto c9j4V;
       c9j4U: // global
           R2 = R2;
           R1 = GHC.Event.Internal.$fShowTimeout_$cshow_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9j4V: // global
           I64[Sp - 8] = block_c9j47_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9j52; else goto c9j48;
       u9j52: // global
           call _c9j47(R1) args: 0, res: 0, upd: 0;
       c9j48: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9j47() //  [R1]
         { info_tbl: [(c9j47,
                       label: block_c9j47_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9j47: // global
           if (R1 & 7 == 1) goto c9j4Q; else goto c9j4R;
       c9j4Q: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9j4Y; else goto c9j4X;
       c9j4Y: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9j4X: // global
           _s9iXw::I64 = I64[R1 + 7];
           I64[Hp - 16] = sat_s9iXH_info;
           I64[Hp] = _s9iXw::I64;
           R3 = Hp - 16;
           R2 = GHC.Event.Internal.$fShowTimeout5_bytes;
           Sp = Sp + 8;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
       c9j4R: // global
           R1 = GHC.Event.Internal.$fShowTimeout3_closure;
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.174749328 UTC

[section ""data" . GHC.Event.Internal.$fShowTimeout1_closure" {
     GHC.Event.Internal.$fShowTimeout1_closure:
         const GHC.Event.Internal.$fShowTimeout1_info;
         const 0;
 },
 GHC.Event.Internal.$fShowTimeout1_entry() //  [R2]
         { info_tbl: [(c9j57,
                       label: GHC.Event.Internal.$fShowTimeout1_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9j57: // global
           R3 = R2;
           R2 = GHC.Event.Internal.$fMonoidEventLifetime1_closure+1;
           call GHC.Event.Internal.$fShowTimeout_$cshowsPrec_entry(R3,
                                                                   R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.175599441 UTC

[section ""data" . GHC.Event.Internal.$fShowTimeout_$cshowList_closure" {
     GHC.Event.Internal.$fShowTimeout_$cshowList_closure:
         const GHC.Event.Internal.$fShowTimeout_$cshowList_info;
         const 0;
 },
 GHC.Event.Internal.$fShowTimeout_$cshowList_entry() //  [R2, R3]
         { info_tbl: [(c9j5e,
                       label: GHC.Event.Internal.$fShowTimeout_$cshowList_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9j5e: // global
           R4 = R3;
           R3 = R2;
           R2 = GHC.Event.Internal.$fShowTimeout1_closure+1;
           call GHC.Show.showList___entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.17638369 UTC

[section ""data" . GHC.Event.Internal.$fShowTimeout_closure" {
     GHC.Event.Internal.$fShowTimeout_closure:
         const GHC.Show.C:Show_con_info;
         const GHC.Event.Internal.$fShowTimeout_$cshowsPrec_closure+2;
         const GHC.Event.Internal.$fShowTimeout_$cshow_closure+1;
         const GHC.Event.Internal.$fShowTimeout_$cshowList_closure+2;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.176958056 UTC

[section ""cstring" . GHC.Event.Internal.$fShowEventLifetime2_bytes" {
     GHC.Event.Internal.$fShowEventLifetime2_bytes:
         I8[] [69,76,32]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.178682586 UTC

[section ""data" . GHC.Event.Internal.$w$cshowsPrec_closure" {
     GHC.Event.Internal.$w$cshowsPrec_closure:
         const GHC.Event.Internal.$w$cshowsPrec_info;
 },
 sat_s9iXT_entry() //  [R1]
         { info_tbl: [(c9j5v,
                       label: sat_s9iXT_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9j5v: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c9j5B; else goto c9j5C;
       c9j5B: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9j5C: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 32] = block_c9j5s_info;
           _s9iXM::P64 = P64[R1 + 24];
           R1 = P64[R1 + 16];
           P64[Sp - 24] = _s9iXM::P64;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u9j5H; else goto c9j5t;
       u9j5H: // global
           call _c9j5s(R1) args: 0, res: 0, upd: 0;
       c9j5t: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 _c9j5s() //  [R1]
         { info_tbl: [(c9j5s,
                       label: block_c9j5s_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9j5s: // global
           _s9iXM::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c9j5y_info;
           R4 = _s9iXM::P64;
           R3 = I64[R1 + 7];
           R2 = 11;
           Sp = Sp + 8;
           call GHC.Show.$wshowSignedInt_entry(R4,
                                               R3,
                                               R2) args: 8, res: 8, upd: 24;
     }
 },
 _c9j5y() //  [R1, R2]
         { info_tbl: [(c9j5y,
                       label: block_c9j5y_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9j5y: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9j5G; else goto c9j5F;
       c9j5G: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c9j5F: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 sat_s9iY0_entry() //  [R1]
         { info_tbl: [(c9j5U,
                       label: sat_s9iY0_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9j5U: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c9j61; else goto c9j62;
       c9j61: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9j62: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 32] = block_c9j5R_info;
           _s9iXM::P64 = P64[R1 + 24];
           R1 = P64[R1 + 16];
           P64[Sp - 24] = _s9iXM::P64;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u9j69; else goto c9j5S;
       u9j69: // global
           call _c9j5R(R1) args: 0, res: 0, upd: 0;
       c9j5S: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 _c9j5R() //  [R1]
         { info_tbl: [(c9j5R,
                       label: block_c9j5R_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9j5R: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9j65; else goto c9j64;
       c9j65: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 24;
       c9j64: // global
           _s9iXV::I64 = I64[R1 + 7];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.$fShow(,)2_closure;
           P64[Hp] = P64[Sp + 8];
           I64[Sp + 8] = block_c9j5Y_info;
           R4 = Hp - 14;
           R3 = _s9iXV::I64;
           R2 = 11;
           Sp = Sp + 8;
           call GHC.Show.$wshowSignedInt_entry(R4,
                                               R3,
                                               R2) args: 8, res: 8, upd: 24;
     }
 },
 _c9j5Y() //  [R1, R2]
         { info_tbl: [(c9j5Y,
                       label: block_c9j5Y_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9j5Y: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9j68; else goto c9j67;
       c9j68: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c9j67: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 sat_s9iY1_entry() //  [R1]
         { info_tbl: [(c9j6a,
                       label: sat_s9iY1_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9j6a: // global
           _s9iY1::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9j6b; else goto c9j6c;
       c9j6c: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c9j6e; else goto c9j6d;
       c9j6e: // global
           HpAlloc = 32;
           goto c9j6b;
       c9j6b: // global
           R1 = _s9iY1::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9j6d: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s9iY1::P64;
           _s9iXL::P64 = P64[_s9iY1::P64 + 16];
           _s9iXM::P64 = P64[_s9iY1::P64 + 24];
           I64[Hp - 24] = sat_s9iY0_info;
           P64[Hp - 8] = _s9iXL::P64;
           P64[Hp] = _s9iXM::P64;
           R3 = Hp - 24;
           R2 = GHC.Event.Internal.$fShowEventLifetime2_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 24, res: 0, upd: 24;
     }
 },
 GHC.Event.Internal.$w$cshowsPrec_entry() //  [R2, R3, R4]
         { info_tbl: [(c9j6i,
                       label: GHC.Event.Internal.$w$cshowsPrec_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 19} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9j6i: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c9j6m; else goto c9j6l;
       c9j6m: // global
           HpAlloc = 56;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$w$cshowsPrec_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9j6l: // global
           if (%MO_S_Lt_W64(R2, 11)) goto c9j6g; else goto c9j6h;
       c9j6g: // global
           I64[Hp - 48] = sat_s9iXT_info;
           P64[Hp - 32] = R3;
           P64[Hp - 24] = R4;
           _c9j5o::P64 = Hp - 48;
           Hp = Hp - 24;
           R3 = _c9j5o::P64;
           R2 = GHC.Event.Internal.$fShowEventLifetime2_bytes;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
       c9j6h: // global
           I64[Hp - 48] = sat_s9iY1_info;
           P64[Hp - 32] = R3;
           P64[Hp - 24] = R4;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.$fShow(,)4_closure;
           P64[Hp] = Hp - 48;
           R1 = Hp - 14;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.181972709 UTC

[section ""data" . GHC.Event.Internal.$fShowEventLifetime_$cshowsPrec_closure" {
     GHC.Event.Internal.$fShowEventLifetime_$cshowsPrec_closure:
         const GHC.Event.Internal.$fShowEventLifetime_$cshowsPrec_info;
 },
 GHC.Event.Internal.$fShowEventLifetime_$cshowsPrec_entry() //  [R2,
                                                                 R3, R4]
         { info_tbl: [(c9j6v,
                       label: GHC.Event.Internal.$fShowEventLifetime_$cshowsPrec_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9j6v: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9j6w; else goto c9j6x;
       c9j6w: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fShowEventLifetime_$cshowsPrec_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9j6x: // global
           I64[Sp - 24] = block_c9j6s_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9j6B; else goto c9j6t;
       u9j6B: // global
           call _c9j6s(R1) args: 0, res: 0, upd: 0;
       c9j6t: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9j6s() //  [R1]
         { info_tbl: [(c9j6s,
                       label: block_c9j6s_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9j6s: // global
           R4 = P64[Sp + 16];
           R3 = P64[Sp + 8];
           R2 = I64[R1 + 7];
           Sp = Sp + 24;
           call GHC.Event.Internal.$w$cshowsPrec_entry(R4,
                                                       R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.183423797 UTC

[section ""data" . GHC.Event.Internal.$fShowEventLifetime_$cshow_closure" {
     GHC.Event.Internal.$fShowEventLifetime_$cshow_closure:
         const GHC.Event.Internal.$fShowEventLifetime_$cshow_info;
 },
 sat_s9iYd_entry() //  [R1]
         { info_tbl: [(c9j6N,
                       label: sat_s9iYd_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9j6N: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9j6T; else goto c9j6U;
       c9j6T: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9j6U: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c9j6K_info;
           R1 = P64[R1 + 16];
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9j6Z; else goto c9j6L;
       u9j6Z: // global
           call _c9j6K(R1) args: 0, res: 0, upd: 0;
       c9j6L: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 _c9j6K() //  [R1]
         { info_tbl: [(c9j6K,
                       label: block_c9j6K_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9j6K: // global
           I64[Sp] = block_c9j6Q_info;
           R4 = GHC.Types.[]_closure+1;
           R3 = I64[R1 + 7];
           R2 = 11;
           call GHC.Show.$wshowSignedInt_entry(R4,
                                               R3,
                                               R2) args: 8, res: 8, upd: 24;
     }
 },
 _c9j6Q() //  [R1, R2]
         { info_tbl: [(c9j6Q,
                       label: block_c9j6Q_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9j6Q: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9j6Y; else goto c9j6X;
       c9j6Y: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c9j6X: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 GHC.Event.Internal.$fShowEventLifetime_$cshow_entry() //  [R2]
         { info_tbl: [(c9j70,
                       label: GHC.Event.Internal.$fShowEventLifetime_$cshow_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9j70: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9j74; else goto c9j73;
       c9j74: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = GHC.Event.Internal.$fShowEventLifetime_$cshow_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9j73: // global
           I64[Hp - 16] = sat_s9iYd_info;
           P64[Hp] = R2;
           R3 = Hp - 16;
           R2 = GHC.Event.Internal.$fShowEventLifetime2_bytes;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.184980631 UTC

[section ""data" . GHC.Event.Internal.$fShowEventLifetime1_closure" {
     GHC.Event.Internal.$fShowEventLifetime1_closure:
         const GHC.Event.Internal.$fShowEventLifetime1_info;
 },
 GHC.Event.Internal.$fShowEventLifetime1_entry() //  [R2, R3]
         { info_tbl: [(c9j79,
                       label: GHC.Event.Internal.$fShowEventLifetime1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9j79: // global
           R4 = R3;
           R3 = R2;
           R2 = 0;
           call GHC.Event.Internal.$w$cshowsPrec_entry(R4,
                                                       R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.185884803 UTC

[section ""data" . GHC.Event.Internal.$fShowEventLifetime_$cshowList_closure" {
     GHC.Event.Internal.$fShowEventLifetime_$cshowList_closure:
         const GHC.Event.Internal.$fShowEventLifetime_$cshowList_info;
 },
 GHC.Event.Internal.$fShowEventLifetime_$cshowList_entry() //  [R2,
                                                                R3]
         { info_tbl: [(c9j7g,
                       label: GHC.Event.Internal.$fShowEventLifetime_$cshowList_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9j7g: // global
           R4 = R3;
           R3 = R2;
           R2 = GHC.Event.Internal.$fShowEventLifetime1_closure+2;
           call GHC.Show.showList___entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.186654755 UTC

[section ""data" . GHC.Event.Internal.$fShowEventLifetime_closure" {
     GHC.Event.Internal.$fShowEventLifetime_closure:
         const GHC.Show.C:Show_con_info;
         const GHC.Event.Internal.$fShowEventLifetime_$cshowsPrec_closure+3;
         const GHC.Event.Internal.$fShowEventLifetime_$cshow_closure+1;
         const GHC.Event.Internal.$fShowEventLifetime_$cshowList_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.187779276 UTC

[section ""data" . GHC.Event.Internal.$fEqLifetime_$c==_closure" {
     GHC.Event.Internal.$fEqLifetime_$c==_closure:
         const GHC.Event.Internal.$fEqLifetime_$c==_info;
 },
 GHC.Event.Internal.$fEqLifetime_$c==_entry() //  [R2, R3]
         { info_tbl: [(c9j7u,
                       label: GHC.Event.Internal.$fEqLifetime_$c==_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9j7u: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9j7v; else goto c9j7w;
       c9j7v: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fEqLifetime_$c==_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9j7w: // global
           I64[Sp - 16] = block_c9j7n_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9j89; else goto c9j7o;
       u9j89: // global
           call _c9j7n(R1) args: 0, res: 0, upd: 0;
       c9j7o: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9j7n() //  [R1]
         { info_tbl: [(c9j7n,
                       label: block_c9j7n_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9j7n: // global
           _s9iYj::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c9j7r; else goto c9j7s;
       c9j7r: // global
           I64[Sp + 8] = block_c9j7z_info;
           R1 = _s9iYj::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u9j87; else goto c9j7B;
       u9j87: // global
           call _c9j7z(R1) args: 0, res: 0, upd: 0;
       c9j7B: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c9j7s: // global
           I64[Sp + 8] = block_c9j7O_info;
           R1 = _s9iYj::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u9j88; else goto c9j7Q;
       u9j88: // global
           call _c9j7O(R1) args: 0, res: 0, upd: 0;
       c9j7Q: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9j7z() //  [R1]
         { info_tbl: [(c9j7z,
                       label: block_c9j7z_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9j7z: // global
           if (R1 & 7 == 1) goto u9j85; else goto u9j86;
       u9j85: // global
           Sp = Sp + 8;
           call _c9j80() args: 0, res: 0, upd: 0;
       u9j86: // global
           Sp = Sp + 8;
           call _c9j7W() args: 0, res: 0, upd: 0;
     }
 },
 _c9j7O() //  [R1]
         { info_tbl: [(c9j7O,
                       label: block_c9j7O_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9j7O: // global
           if (R1 & 7 == 1) goto u9j83; else goto u9j84;
       u9j83: // global
           Sp = Sp + 8;
           call _c9j7W() args: 0, res: 0, upd: 0;
       u9j84: // global
           Sp = Sp + 8;
           call _c9j80() args: 0, res: 0, upd: 0;
     }
 },
 _c9j7W() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9j7W: // global
           R1 = GHC.Types.False_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9j80() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9j80: // global
           R1 = GHC.Types.True_closure+2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.18993812 UTC

[section ""data" . GHC.Event.Internal.$fEqLifetime_$c/=_closure" {
     GHC.Event.Internal.$fEqLifetime_$c/=_closure:
         const GHC.Event.Internal.$fEqLifetime_$c/=_info;
 },
 GHC.Event.Internal.$fEqLifetime_$c/=_entry() //  [R2, R3]
         { info_tbl: [(c9j8p,
                       label: GHC.Event.Internal.$fEqLifetime_$c/=_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9j8p: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9j8q; else goto c9j8r;
       c9j8q: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fEqLifetime_$c/=_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9j8r: // global
           I64[Sp - 16] = block_c9j8i_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9j94; else goto c9j8j;
       u9j94: // global
           call _c9j8i(R1) args: 0, res: 0, upd: 0;
       c9j8j: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9j8i() //  [R1]
         { info_tbl: [(c9j8i,
                       label: block_c9j8i_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9j8i: // global
           _s9iYo::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c9j8m; else goto c9j8n;
       c9j8m: // global
           I64[Sp + 8] = block_c9j8u_info;
           R1 = _s9iYo::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u9j92; else goto c9j8w;
       u9j92: // global
           call _c9j8u(R1) args: 0, res: 0, upd: 0;
       c9j8w: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c9j8n: // global
           I64[Sp + 8] = block_c9j8J_info;
           R1 = _s9iYo::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u9j93; else goto c9j8L;
       u9j93: // global
           call _c9j8J(R1) args: 0, res: 0, upd: 0;
       c9j8L: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9j8u() //  [R1]
         { info_tbl: [(c9j8u,
                       label: block_c9j8u_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9j8u: // global
           if (R1 & 7 == 1) goto u9j90; else goto u9j91;
       u9j90: // global
           Sp = Sp + 8;
           call _c9j8V() args: 0, res: 0, upd: 0;
       u9j91: // global
           Sp = Sp + 8;
           call _c9j8R() args: 0, res: 0, upd: 0;
     }
 },
 _c9j8J() //  [R1]
         { info_tbl: [(c9j8J,
                       label: block_c9j8J_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9j8J: // global
           if (R1 & 7 == 1) goto u9j8Y; else goto u9j8Z;
       u9j8Y: // global
           Sp = Sp + 8;
           call _c9j8R() args: 0, res: 0, upd: 0;
       u9j8Z: // global
           Sp = Sp + 8;
           call _c9j8V() args: 0, res: 0, upd: 0;
     }
 },
 _c9j8R() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9j8R: // global
           R1 = GHC.Types.True_closure+2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9j8V() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9j8V: // global
           R1 = GHC.Types.False_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.191598479 UTC

[section ""data" . GHC.Event.Internal.$fEqLifetime_closure" {
     GHC.Event.Internal.$fEqLifetime_closure:
         const GHC.Classes.C:Eq_con_info;
         const GHC.Event.Internal.$fEqLifetime_$c==_closure+2;
         const GHC.Event.Internal.$fEqLifetime_$c/=_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.192223625 UTC

[section ""cstring" . GHC.Event.Internal.$fShowLifetime5_bytes" {
     GHC.Event.Internal.$fShowLifetime5_bytes:
         I8[] [79,110,101,83,104,111,116]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.192981536 UTC

[section ""data" . GHC.Event.Internal.$fShowLifetime4_closure" {
     GHC.Event.Internal.$fShowLifetime4_closure:
         const GHC.Event.Internal.$fShowLifetime4_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Internal.$fShowLifetime4_entry() //  [R1]
         { info_tbl: [(c9j9f,
                       label: GHC.Event.Internal.$fShowLifetime4_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9j9f: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9j9g; else goto c9j9h;
       c9j9g: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9j9h: // global
           (_c9j9c::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9j9c::I64 == 0) goto c9j9e; else goto c9j9d;
       c9j9e: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9j9d: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9j9c::I64;
           R2 = GHC.Event.Internal.$fShowLifetime5_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.194067693 UTC

[section ""cstring" . GHC.Event.Internal.$fShowLifetime3_bytes" {
     GHC.Event.Internal.$fShowLifetime3_bytes:
         I8[] [77,117,108,116,105,83,104,111,116]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.194806189 UTC

[section ""data" . GHC.Event.Internal.$fShowLifetime2_closure" {
     GHC.Event.Internal.$fShowLifetime2_closure:
         const GHC.Event.Internal.$fShowLifetime2_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Internal.$fShowLifetime2_entry() //  [R1]
         { info_tbl: [(c9j9o,
                       label: GHC.Event.Internal.$fShowLifetime2_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9j9o: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9j9p; else goto c9j9q;
       c9j9p: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9j9q: // global
           (_c9j9l::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9j9l::I64 == 0) goto c9j9n; else goto c9j9m;
       c9j9n: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9j9m: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9j9l::I64;
           R2 = GHC.Event.Internal.$fShowLifetime3_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.196014512 UTC

[section ""data" . GHC.Event.Internal.$fShowLifetime_$cshowsPrec_closure" {
     GHC.Event.Internal.$fShowLifetime_$cshowsPrec_closure:
         const GHC.Event.Internal.$fShowLifetime_$cshowsPrec_info;
         const 0;
 },
 GHC.Event.Internal.$fShowLifetime_$cshowsPrec_entry() //  [R2, R3,
                                                            R4]
         { info_tbl: [(c9j9C,
                       label: GHC.Event.Internal.$fShowLifetime_$cshowsPrec_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9j9C: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9j9D; else goto c9j9E;
       c9j9D: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fShowLifetime_$cshowsPrec_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9j9E: // global
           I64[Sp - 16] = block_c9j9v_info;
           R1 = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9j9L; else goto c9j9w;
       u9j9L: // global
           call _c9j9v(R1) args: 0, res: 0, upd: 0;
       c9j9w: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9j9v() //  [R1]
         { info_tbl: [(c9j9v,
                       label: block_c9j9v_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9j9v: // global
           _s9iYu::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c9j9z; else goto c9j9A;
       c9j9z: // global
           R3 = _s9iYu::P64;
           R2 = GHC.Event.Internal.$fShowLifetime4_closure;
           Sp = Sp + 16;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
       c9j9A: // global
           R3 = _s9iYu::P64;
           R2 = GHC.Event.Internal.$fShowLifetime2_closure;
           Sp = Sp + 16;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.197434323 UTC

[section ""data" . GHC.Event.Internal.$fShowLifetime_$cshow_closure" {
     GHC.Event.Internal.$fShowLifetime_$cshow_closure:
         const GHC.Event.Internal.$fShowLifetime_$cshow_info;
         const 0;
 },
 GHC.Event.Internal.$fShowLifetime_$cshow_entry() //  [R2]
         { info_tbl: [(c9j9X,
                       label: GHC.Event.Internal.$fShowLifetime_$cshow_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9j9X: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9j9Y; else goto c9j9Z;
       c9j9Y: // global
           R2 = R2;
           R1 = GHC.Event.Internal.$fShowLifetime_$cshow_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9j9Z: // global
           I64[Sp - 8] = block_c9j9Q_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9ja6; else goto c9j9R;
       u9ja6: // global
           call _c9j9Q(R1) args: 0, res: 0, upd: 0;
       c9j9R: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9j9Q() //  [R1]
         { info_tbl: [(c9j9Q,
                       label: block_c9j9Q_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9j9Q: // global
           if (R1 & 7 == 1) goto c9j9U; else goto c9j9V;
       c9j9U: // global
           R1 = GHC.Event.Internal.$fShowLifetime4_closure;
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c9j9V: // global
           R1 = GHC.Event.Internal.$fShowLifetime2_closure;
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.198857192 UTC

[section ""data" . GHC.Event.Internal.$fShowLifetime1_closure" {
     GHC.Event.Internal.$fShowLifetime1_closure:
         const GHC.Event.Internal.$fShowLifetime1_info;
         const 0;
 },
 GHC.Event.Internal.$fShowLifetime1_entry() //  [R2, R3]
         { info_tbl: [(c9jai,
                       label: GHC.Event.Internal.$fShowLifetime1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jai: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9jaj; else goto c9jak;
       c9jaj: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fShowLifetime1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9jak: // global
           I64[Sp - 16] = block_c9jab_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9jar; else goto c9jac;
       u9jar: // global
           call _c9jab(R1) args: 0, res: 0, upd: 0;
       c9jac: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jab() //  [R1]
         { info_tbl: [(c9jab,
                       label: block_c9jab_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jab: // global
           _s9iYz::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c9jaf; else goto c9jag;
       c9jaf: // global
           R3 = _s9iYz::P64;
           R2 = GHC.Event.Internal.$fShowLifetime4_closure;
           Sp = Sp + 16;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
       c9jag: // global
           R3 = _s9iYz::P64;
           R2 = GHC.Event.Internal.$fShowLifetime2_closure;
           Sp = Sp + 16;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.200199146 UTC

[section ""data" . GHC.Event.Internal.$fShowLifetime_$cshowList_closure" {
     GHC.Event.Internal.$fShowLifetime_$cshowList_closure:
         const GHC.Event.Internal.$fShowLifetime_$cshowList_info;
         const 0;
 },
 GHC.Event.Internal.$fShowLifetime_$cshowList_entry() //  [R2, R3]
         { info_tbl: [(c9jaw,
                       label: GHC.Event.Internal.$fShowLifetime_$cshowList_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jaw: // global
           R4 = R3;
           R3 = R2;
           R2 = GHC.Event.Internal.$fShowLifetime1_closure+2;
           call GHC.Show.showList___entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.20100995 UTC

[section ""data" . GHC.Event.Internal.$fShowLifetime_closure" {
     GHC.Event.Internal.$fShowLifetime_closure:
         const GHC.Show.C:Show_con_info;
         const GHC.Event.Internal.$fShowLifetime_$cshowsPrec_closure+3;
         const GHC.Event.Internal.$fShowLifetime_$cshow_closure+1;
         const GHC.Event.Internal.$fShowLifetime_$cshowList_closure+2;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.201672281 UTC

[section ""data" . GHC.Event.Internal._beDelete_closure" {
     GHC.Event.Internal._beDelete_closure:
         const ()_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.202298464 UTC

[section ""data" . GHC.Event.Internal._beModifyFdOnce_closure" {
     GHC.Event.Internal._beModifyFdOnce_closure:
         const ()_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.202887734 UTC

[section ""data" . GHC.Event.Internal._beModifyFd_closure" {
     GHC.Event.Internal._beModifyFd_closure:
         const ()_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.205497849 UTC

[section ""data" . GHC.Event.Internal._bePoll_closure" {
     GHC.Event.Internal._bePoll_closure:
         const ()_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.20610218 UTC

[section ""data" . GHC.Event.Internal._beState_closure" {
     GHC.Event.Internal._beState_closure:
         const ()_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.206660117 UTC

[section ""data" . GHC.Event.Internal.evtNothing_closure" {
     GHC.Event.Internal.evtNothing_closure:
         const stg_IND_STATIC_info;
         const GHC.Event.Internal.$fMonoidEventLifetime1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.207270134 UTC

[section ""data" . evtRead1_r9iWk_closure" {
     evtRead1_r9iWk_closure:
         const GHC.Types.I#_con_info;
         const 1;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.207836254 UTC

[section ""data" . GHC.Event.Internal.evtRead_closure" {
     GHC.Event.Internal.evtRead_closure:
         const stg_IND_STATIC_info;
         const evtRead1_r9iWk_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.20841138 UTC

[section ""data" . evtWrite1_r9iWl_closure" {
     evtWrite1_r9iWl_closure:
         const GHC.Types.I#_con_info;
         const 2;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.208956472 UTC

[section ""data" . GHC.Event.Internal.evtWrite_closure" {
     GHC.Event.Internal.evtWrite_closure:
         const stg_IND_STATIC_info;
         const evtWrite1_r9iWl_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.209824901 UTC

[section ""data" . evtClose1_r9iWm_closure" {
     evtClose1_r9iWm_closure:
         const GHC.Types.I#_con_info;
         const 4;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.210384064 UTC

[section ""data" . GHC.Event.Internal.evtClose_closure" {
     GHC.Event.Internal.evtClose_closure:
         const stg_IND_STATIC_info;
         const evtClose1_r9iWm_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.211272625 UTC

[section ""data" . GHC.Event.Internal.elSupremum_closure" {
     GHC.Event.Internal.elSupremum_closure:
         const GHC.Event.Internal.elSupremum_info;
 },
 GHC.Event.Internal.elSupremum_entry() //  [R2, R3]
         { info_tbl: [(c9jaK,
                       label: GHC.Event.Internal.elSupremum_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jaK: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9jaL; else goto c9jaM;
       c9jaL: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.elSupremum_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9jaM: // global
           I64[Sp - 16] = block_c9jaD_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9jaT; else goto c9jaE;
       u9jaT: // global
           call _c9jaD(R1) args: 0, res: 0, upd: 0;
       c9jaE: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jaD() //  [R1]
         { info_tbl: [(c9jaD,
                       label: block_c9jaD_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jaD: // global
           if (R1 & 7 == 1) goto c9jaH; else goto c9jaI;
       c9jaH: // global
           R1 = P64[Sp + 8] & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c9jaI: // global
           R1 = GHC.Event.Internal.MultiShot_closure+2;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.212824689 UTC

[section ""data" . GHC.Event.Internal.$fSemigroupLifetime_go_closure" {
     GHC.Event.Internal.$fSemigroupLifetime_go_closure:
         const GHC.Event.Internal.$fSemigroupLifetime_go_info;
 },
 GHC.Event.Internal.$fSemigroupLifetime_go_entry() //  [R2, R3]
         { info_tbl: [(c9jb5,
                       label: GHC.Event.Internal.$fSemigroupLifetime_go_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jb5: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9jb6; else goto u9jbr;
       c9jb6: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fSemigroupLifetime_go_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       u9jbr: // global
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           call _c9jaV() args: 0, res: 0, upd: 0;
     }
 },
 _c9jaV() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jaV: // global
           I64[Sp - 8] = block_c9jaY_info;
           R1 = P64[Sp + 8];
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9jbt; else goto c9jaZ;
       u9jbt: // global
           call _c9jaY(R1) args: 0, res: 0, upd: 0;
       c9jaZ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jaY() //  [R1]
         { info_tbl: [(c9jaY,
                       label: block_c9jaY_info
                       rep:StackRep [False, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jaY: // global
           _s9iYG::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c9jb2; else goto c9jb3;
       c9jb2: // global
           R1 = _s9iYG::P64 & (-8);
           Sp = Sp + 24;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c9jb3: // global
           I64[Sp] = block_c9jbd_info;
           _s9iYJ::P64 = P64[R1 + 6];
           _s9iYK::P64 = P64[R1 + 14];
           R1 = _s9iYG::P64;
           P64[Sp + 8] = _s9iYK::P64;
           P64[Sp + 16] = _s9iYJ::P64;
           if (R1 & 7 != 0) goto u9jbu; else goto c9jbf;
       u9jbu: // global
           call _c9jbd(R1) args: 0, res: 0, upd: 0;
       c9jbf: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jbd() //  [R1]
         { info_tbl: [(c9jbd,
                       label: block_c9jbd_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jbd: // global
           if (R1 & 7 == 1) goto c9jbl; else goto c9jbp;
       c9jbl: // global
           _s9iYH::P64 = P64[Sp + 8];
           P64[Sp + 8] = P64[Sp + 16];
           P64[Sp + 16] = _s9iYH::P64;
           Sp = Sp + 8;
           call _c9jaV() args: 0, res: 0, upd: 0;
       c9jbp: // global
           R1 = GHC.Event.Internal.MultiShot_closure+2;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.214475839 UTC

[section ""data" . GHC.Event.Internal.$fSemigroupLifetime_$csconcat_closure" {
     GHC.Event.Internal.$fSemigroupLifetime_$csconcat_closure:
         const GHC.Event.Internal.$fSemigroupLifetime_$csconcat_info;
 },
 GHC.Event.Internal.$fSemigroupLifetime_$csconcat_entry() //  [R2]
         { info_tbl: [(c9jbE,
                       label: GHC.Event.Internal.$fSemigroupLifetime_$csconcat_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jbE: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9jbF; else goto c9jbG;
       c9jbF: // global
           R2 = R2;
           R1 = GHC.Event.Internal.$fSemigroupLifetime_$csconcat_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9jbG: // global
           I64[Sp - 8] = block_c9jbB_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9jbK; else goto c9jbC;
       u9jbK: // global
           call _c9jbB(R1) args: 0, res: 0, upd: 0;
       c9jbC: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jbB() //  [R1]
         { info_tbl: [(c9jbB,
                       label: block_c9jbB_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jbB: // global
           R3 = P64[R1 + 15];
           R2 = P64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Event.Internal.$fSemigroupLifetime_go_entry(R3,
                                                                R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.2158045 UTC

[section ""data" . GHC.Event.Internal.$fMonoidLifetime_go_closure" {
     GHC.Event.Internal.$fMonoidLifetime_go_closure:
         const GHC.Event.Internal.$fMonoidLifetime_go_info;
 },
 GHC.Event.Internal.$fMonoidLifetime_go_entry() //  [R2]
         { info_tbl: [(c9jbW,
                       label: GHC.Event.Internal.$fMonoidLifetime_go_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jbW: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9jbX; else goto u9jci;
       c9jbX: // global
           R2 = R2;
           R1 = GHC.Event.Internal.$fMonoidLifetime_go_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       u9jci: // global
           P64[Sp - 8] = R2;
           Sp = Sp - 8;
           call _c9jbM() args: 0, res: 0, upd: 0;
     }
 },
 _c9jbM() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jbM: // global
           _s9iYQ::P64 = P64[Sp];
           I64[Sp] = block_c9jbP_info;
           R1 = _s9iYQ::P64;
           if (R1 & 7 != 0) goto u9jck; else goto c9jbQ;
       u9jck: // global
           call _c9jbP(R1) args: 0, res: 0, upd: 0;
       c9jbQ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jbP() //  [R1]
         { info_tbl: [(c9jbP,
                       label: block_c9jbP_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jbP: // global
           if (R1 & 7 == 1) goto c9jbT; else goto c9jbU;
       c9jbT: // global
           R1 = GHC.Event.Internal.OneShot_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9jbU: // global
           I64[Sp - 8] = block_c9jc4_info;
           _s9iYT::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp] = _s9iYT::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9jcl; else goto c9jc6;
       u9jcl: // global
           call _c9jc4(R1) args: 0, res: 0, upd: 0;
       c9jc6: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jc4() //  [R1]
         { info_tbl: [(c9jc4,
                       label: block_c9jc4_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jc4: // global
           if (R1 & 7 == 1) goto c9jcc; else goto c9jcg;
       c9jcc: // global
           P64[Sp + 8] = P64[Sp + 8];
           Sp = Sp + 8;
           call _c9jbM() args: 0, res: 0, upd: 0;
       c9jcg: // global
           R1 = GHC.Event.Internal.MultiShot_closure+2;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.217300384 UTC

[section ""data" . GHC.Event.Internal.$fSemigroupLifetime_closure" {
     GHC.Event.Internal.$fSemigroupLifetime_closure:
         const GHC.Base.C:Semigroup_con_info;
         const GHC.Event.Internal.elSupremum_closure+2;
         const GHC.Event.Internal.$fSemigroupLifetime_$csconcat_closure+1;
         const GHC.Event.Internal.$fSemigroupLifetime_$cstimes_closure+3;
         const 0;
 },
 section ""data" . GHC.Event.Internal.$fMonoidLifetime_closure" {
     GHC.Event.Internal.$fMonoidLifetime_closure:
         const GHC.Base.C:Monoid_con_info;
         const GHC.Event.Internal.$fSemigroupLifetime_closure+1;
         const GHC.Event.Internal.OneShot_closure+1;
         const GHC.Event.Internal.elSupremum_closure+2;
         const GHC.Event.Internal.$fMonoidLifetime_go_closure+1;
         const 0;
 },
 section ""data" . GHC.Event.Internal.$fSemigroupLifetime_$cstimes_closure" {
     GHC.Event.Internal.$fSemigroupLifetime_$cstimes_closure:
         const GHC.Event.Internal.$fSemigroupLifetime_$cstimes_info;
         const 0;
 },
 GHC.Event.Internal.$fSemigroupLifetime_$cstimes_entry() //  [R2,
                                                              R3, R4]
         { info_tbl: [(c9jcs,
                       label: GHC.Event.Internal.$fSemigroupLifetime_$cstimes_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jcs: // global
           R5 = R4;
           R4 = R3;
           R3 = GHC.Event.Internal.$fMonoidLifetime_closure+1;
           R2 = R2;
           call Data.Semigroup.Internal.stimesMonoid_entry(R5,
                                                           R4,
                                                           R3,
                                                           R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.218319089 UTC

[section ""data" . GHC.Event.Internal.backend_closure" {
     GHC.Event.Internal.backend_closure:
         const GHC.Event.Internal.backend_info;
 },
 GHC.Event.Internal.backend_entry() //  [R2, R3, R4, R5, R6]
         { info_tbl: [(c9jcz,
                       label: GHC.Event.Internal.backend_info
                       rep:HeapRep static { Fun {arity: 5 fun_type: ArgSpec 25} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jcz: // global
           _s9iZ0::P64 = R6;
           R6 = R5;
           R5 = R4;
           R4 = R3;
           R3 = R2;
           R2 = _s9iZ0::P64;
           call GHC.Event.Internal.$WBackend_entry(R6,
                                                   R5,
                                                   R4,
                                                   R3,
                                                   R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.219281563 UTC

[section ""data" . GHC.Event.Internal.poll_closure" {
     GHC.Event.Internal.poll_closure:
         const GHC.Event.Internal.poll_info;
 },
 GHC.Event.Internal.poll_entry() //  [R2]
         { info_tbl: [(c9jcJ,
                       label: GHC.Event.Internal.poll_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jcJ: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9jcK; else goto c9jcL;
       c9jcK: // global
           R2 = R2;
           R1 = GHC.Event.Internal.poll_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9jcL: // global
           I64[Sp - 8] = block_c9jcG_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9jcP; else goto c9jcH;
       u9jcP: // global
           call _c9jcG(R1) args: 0, res: 0, upd: 0;
       c9jcH: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jcG() //  [R1]
         { info_tbl: [(c9jcG,
                       label: block_c9jcG_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jcG: // global
           R2 = P64[R1 + 7];
           R1 = P64[R1 + 15];
           Sp = Sp + 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.22043397 UTC

[section ""data" . GHC.Event.Internal.modifyFd_closure" {
     GHC.Event.Internal.modifyFd_closure:
         const GHC.Event.Internal.modifyFd_info;
 },
 GHC.Event.Internal.modifyFd_entry() //  [R2]
         { info_tbl: [(c9jcX,
                       label: GHC.Event.Internal.modifyFd_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jcX: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9jcY; else goto c9jcZ;
       c9jcY: // global
           R2 = R2;
           R1 = GHC.Event.Internal.modifyFd_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9jcZ: // global
           I64[Sp - 8] = block_c9jcU_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9jd3; else goto c9jcV;
       u9jd3: // global
           call _c9jcU(R1) args: 0, res: 0, upd: 0;
       c9jcV: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jcU() //  [R1]
         { info_tbl: [(c9jcU,
                       label: block_c9jcU_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jcU: // global
           R2 = P64[R1 + 7];
           R1 = P64[R1 + 23];
           Sp = Sp + 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.221998806 UTC

[section ""data" . GHC.Event.Internal.modifyFdOnce_closure" {
     GHC.Event.Internal.modifyFdOnce_closure:
         const GHC.Event.Internal.modifyFdOnce_info;
 },
 GHC.Event.Internal.modifyFdOnce_entry() //  [R2]
         { info_tbl: [(c9jdb,
                       label: GHC.Event.Internal.modifyFdOnce_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jdb: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9jdc; else goto c9jdd;
       c9jdc: // global
           R2 = R2;
           R1 = GHC.Event.Internal.modifyFdOnce_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9jdd: // global
           I64[Sp - 8] = block_c9jd8_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9jdh; else goto c9jd9;
       u9jdh: // global
           call _c9jd8(R1) args: 0, res: 0, upd: 0;
       c9jd9: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jd8() //  [R1]
         { info_tbl: [(c9jd8,
                       label: block_c9jd8_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jd8: // global
           R2 = P64[R1 + 7];
           R1 = P64[R1 + 31];
           Sp = Sp + 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.223179483 UTC

[section ""data" . GHC.Event.Internal.delete_closure" {
     GHC.Event.Internal.delete_closure:
         const GHC.Event.Internal.delete_info;
 },
 GHC.Event.Internal.delete_entry() //  [R2]
         { info_tbl: [(c9jdp,
                       label: GHC.Event.Internal.delete_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jdp: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9jdq; else goto c9jdr;
       c9jdq: // global
           R2 = R2;
           R1 = GHC.Event.Internal.delete_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9jdr: // global
           I64[Sp - 8] = block_c9jdm_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9jdv; else goto c9jdn;
       u9jdv: // global
           call _c9jdm(R1) args: 0, res: 0, upd: 0;
       c9jdn: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jdm() //  [R1]
         { info_tbl: [(c9jdm,
                       label: block_c9jdm_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jdm: // global
           R2 = P64[R1 + 7];
           R1 = P64[R1 + 39];
           Sp = Sp + 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.224324743 UTC

[section ""data" . GHC.Event.Internal.throwErrnoIfMinus1NoRetry2_closure" {
     GHC.Event.Internal.throwErrnoIfMinus1NoRetry2_closure:
         const GHC.Event.Internal.throwErrnoIfMinus1NoRetry2_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Internal.throwErrnoIfMinus1NoRetry2_entry() //  [R1]
         { info_tbl: [(c9jdC,
                       label: GHC.Event.Internal.throwErrnoIfMinus1NoRetry2_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jdC: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9jdD; else goto c9jdE;
       c9jdD: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jdE: // global
           (_c9jdz::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9jdz::I64 == 0) goto c9jdB; else goto c9jdA;
       c9jdB: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9jdA: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9jdz::I64;
           R3 = GHC.Types.[]_closure+1;
           R2 = GHC.Types.True_closure+2;
           Sp = Sp - 16;
           call GHC.Integer.Type.mkInteger_entry(R3,
                                                 R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.225189213 UTC

[section ""data" . sat_s9iZt_closure" {
     sat_s9iZt_closure:
         const GHC.Types.I#_con_info;
         const 1;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.225764923 UTC

[section ""data" . sat_s9iZu_closure" {
     sat_s9iZu_closure:
         const :_con_info;
         const sat_s9iZt_closure+1;
         const GHC.Types.[]_closure+1;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.226495005 UTC

[section ""data" . GHC.Event.Internal.throwErrnoIfMinus1NoRetry3_closure" {
     GHC.Event.Internal.throwErrnoIfMinus1NoRetry3_closure:
         const GHC.Event.Internal.throwErrnoIfMinus1NoRetry3_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Internal.throwErrnoIfMinus1NoRetry3_entry() //  [R1]
         { info_tbl: [(c9jdL,
                       label: GHC.Event.Internal.throwErrnoIfMinus1NoRetry3_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jdL: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9jdM; else goto c9jdN;
       c9jdM: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jdN: // global
           (_c9jdI::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9jdI::I64 == 0) goto c9jdK; else goto c9jdJ;
       c9jdK: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9jdJ: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9jdI::I64;
           R3 = sat_s9iZu_closure+2;
           R2 = GHC.Types.True_closure+2;
           Sp = Sp - 16;
           call GHC.Integer.Type.mkInteger_entry(R3,
                                                 R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.228440662 UTC

[section ""data" . GHC.Event.Internal.throwErrnoIfMinus1NoRetry1_closure" {
     GHC.Event.Internal.throwErrnoIfMinus1NoRetry1_closure:
         const GHC.Event.Internal.throwErrnoIfMinus1NoRetry1_info;
         const 0;
 },
 sat_s9iZD_entry() //  [R1]
         { info_tbl: [(c9je2,
                       label: sat_s9iZD_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9je2: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c9je3; else goto c9je4;
       c9je3: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9je4: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = GHC.Event.Internal.throwErrnoIfMinus1NoRetry3_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 sat_s9iZE_entry() //  [R1]
         { info_tbl: [(c9je5,
                       label: sat_s9iZE_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9je5: // global
           _s9iZE::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto c9je6; else goto c9je7;
       c9je7: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9je9; else goto c9je8;
       c9je9: // global
           HpAlloc = 24;
           goto c9je6;
       c9je6: // global
           R1 = _s9iZE::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9je8: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s9iZE::P64;
           _s9iZw::P64 = P64[_s9iZE::P64 + 16];
           I64[Hp - 16] = sat_s9iZD_info;
           P64[Hp] = _s9iZw::P64;
           R2 = _s9iZw::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 32;
           call GHC.Num.negate_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 sat_s9iZL_entry() //  [R1]
         { info_tbl: [(c9jer,
                       label: sat_s9iZL_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jer: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c9jes; else goto c9jet;
       c9jes: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jet: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = GHC.Event.Internal.throwErrnoIfMinus1NoRetry2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 GHC.Event.Internal.throwErrnoIfMinus1NoRetry1_entry() //  [R2, R3,
                                                            R4, R5]
         { info_tbl: [(c9jey,
                       label: GHC.Event.Internal.throwErrnoIfMinus1NoRetry1_info
                       rep:HeapRep static { Fun {arity: 5 fun_type: ArgSpec 24} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jey: // global
           if ((Sp + -56) < SpLim) (likely: False) goto c9jez; else goto c9jeA;
       c9jez: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.throwErrnoIfMinus1NoRetry1_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9jeA: // global
           I64[Sp - 32] = block_c9jdS_info;
           R1 = R5;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 32;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jdS() //  [R1]
         { info_tbl: [(c9jdS,
                       label: block_c9jdS_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jdS: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9jeD; else goto c9jeC;
       c9jeD: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9jeC: // global
           I64[Hp - 16] = sat_s9iZE_info;
           P64[Hp] = P64[Sp + 16];
           I64[Sp] = block_c9jea_info;
           R2 = P64[Sp + 8];
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = R1;
           P64[Sp - 8] = Hp - 16;
           P64[Sp + 8] = R1;
           Sp = Sp - 24;
           call GHC.Classes.==_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 _c9jea() //  [R1]
         { info_tbl: [(c9jea,
                       label: block_c9jea_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jea: // global
           if (R1 & 7 == 1) goto c9jev; else goto c9jew;
       c9jev: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9jew: // global
           _s9iZx::P64 = P64[Sp + 24];
           (_s9iZJ::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           _s9iZK::I64 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9iZJ::I64));
           if (_s9iZK::I64 != 4) goto c9jeJ; else goto u9jeR;
       c9jeJ: // global
           R2 = _s9iZx::P64;
           Sp = Sp + 32;
           call Foreign.C.Error.throwErrno1_entry(R2) args: 8, res: 0, upd: 8;
       u9jeR: // global
           I64[Sp + 24] = _s9iZK::I64;
           Sp = Sp + 16;
           call _c9jel() args: 0, res: 0, upd: 0;
     }
 },
 _c9jel() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jel: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9jeQ; else goto c9jeP;
       c9jeQ: // global
           HpAlloc = 24;
           I64[Sp - 8] = block_c9jek_info;
           R1 = I64[Sp + 8];
           Sp = Sp - 8;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9jeP: // global
           I64[Hp - 16] = sat_s9iZL_info;
           P64[Hp] = P64[Sp];
           R1 = Hp - 16;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9jek() //  [R1]
         { info_tbl: [(c9jek,
                       label: block_c9jek_info
                       rep:StackRep [False, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jek: // global
           I64[Sp + 16] = R1;
           Sp = Sp + 8;
           call _c9jel() args: 0, res: 0, upd: 0;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.231216069 UTC

[section ""data" . GHC.Event.Internal.throwErrnoIfMinus1NoRetry_closure" {
     GHC.Event.Internal.throwErrnoIfMinus1NoRetry_closure:
         const GHC.Event.Internal.throwErrnoIfMinus1NoRetry_info;
         const 0;
 },
 GHC.Event.Internal.throwErrnoIfMinus1NoRetry_entry() //  [R2, R3,
                                                           R4, R5]
         { info_tbl: [(c9jeZ,
                       label: GHC.Event.Internal.throwErrnoIfMinus1NoRetry_info
                       rep:HeapRep static { Fun {arity: 5 fun_type: ArgSpec 24} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jeZ: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call GHC.Event.Internal.throwErrnoIfMinus1NoRetry1_entry(R5,
                                                                    R4,
                                                                    R3,
                                                                    R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.231947393 UTC

[section ""cstring" . GHC.Event.Internal.$trModule4_bytes" {
     GHC.Event.Internal.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.232489495 UTC

[section ""data" . GHC.Event.Internal.$trModule3_closure" {
     GHC.Event.Internal.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.233035922 UTC

[section ""cstring" . GHC.Event.Internal.$trModule2_bytes" {
     GHC.Event.Internal.$trModule2_bytes:
         I8[] [71,72,67,46,69,118,101,110,116,46,73,110,116,101,114,110,97,108]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.233871579 UTC

[section ""data" . GHC.Event.Internal.$trModule1_closure" {
     GHC.Event.Internal.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.234421901 UTC

[section ""data" . GHC.Event.Internal.$trModule_closure" {
     GHC.Event.Internal.$trModule_closure:
         const GHC.Types.Module_con_info;
         const GHC.Event.Internal.$trModule3_closure+1;
         const GHC.Event.Internal.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.235064392 UTC

[section ""data" . $krep_r9iWn_closure" {
     $krep_r9iWn_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Word.$tcWord64_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.235633604 UTC

[section ""data" . $krep1_r9iWo_closure" {
     $krep1_r9iWo_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcBool_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.236182402 UTC

[section ""data" . $krep2_r9iWp_closure" {
     $krep2_r9iWp_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcInt_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.236764841 UTC

[section ""data" . $krep3_r9iWq_closure" {
     $krep3_r9iWq_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Tuple.$tc()_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.237361342 UTC

[section ""data" . $krep4_r9iWr_closure" {
     $krep4_r9iWr_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const System.Posix.Types.$tcFd_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.237935525 UTC

[section ""data" . $krep5_r9iWs_closure" {
     $krep5_r9iWs_closure:
         const :_con_info;
         const $krep1_r9iWo_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.238474502 UTC

[section ""data" . $krep6_r9iWt_closure" {
     $krep6_r9iWt_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcIO_closure;
         const $krep5_r9iWs_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.239079187 UTC

[section ""data" . $krep7_r9iWu_closure" {
     $krep7_r9iWu_closure:
         const :_con_info;
         const $krep2_r9iWp_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.239647478 UTC

[section ""data" . $krep8_r9iWv_closure" {
     $krep8_r9iWv_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcIO_closure;
         const $krep7_r9iWu_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.240195976 UTC

[section ""data" . $krep9_r9iWw_closure" {
     $krep9_r9iWw_closure:
         const :_con_info;
         const $krep3_r9iWq_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.240721361 UTC

[section ""data" . $krep10_r9iWx_closure" {
     $krep10_r9iWx_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcIO_closure;
         const $krep9_r9iWw_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.24132345 UTC

[section ""data" . $krep11_r9iWy_closure" {
     $krep11_r9iWy_closure:
         const GHC.Types.KindRepVar_con_info;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.243190451 UTC

[section ""data" . $krep12_r9iWz_closure" {
     $krep12_r9iWz_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep11_r9iWy_closure+2;
         const $krep10_r9iWx_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.243800418 UTC

[section ""cstring" . GHC.Event.Internal.$tcEvent2_bytes" {
     GHC.Event.Internal.$tcEvent2_bytes:
         I8[] [69,118,101,110,116]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.24432306 UTC

[section ""data" . GHC.Event.Internal.$tcEvent1_closure" {
     GHC.Event.Internal.$tcEvent1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tcEvent2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.244889494 UTC

[section ""data" . GHC.Event.Internal.$tcEvent_closure" {
     GHC.Event.Internal.$tcEvent_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tcEvent1_closure+1;
         const GHC.Types.krep$*_closure;
         const 6453162546660085965;
         const 4509047211634842293;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.245726076 UTC

[section ""data" . $krep13_r9iWA_closure" {
     $krep13_r9iWA_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Event.Internal.$tcEvent_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.246246117 UTC

[section ""data" . $krep14_r9iWB_closure" {
     $krep14_r9iWB_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep13_r9iWA_closure+1;
         const $krep10_r9iWx_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.246777974 UTC

[section ""data" . $krep15_r9iWC_closure" {
     $krep15_r9iWC_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep4_r9iWr_closure+1;
         const $krep14_r9iWB_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.247307204 UTC

[section ""data" . $krep16_r9iWD_closure" {
     $krep16_r9iWD_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep15_r9iWC_closure+4;
         const $krep8_r9iWv_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.247861911 UTC

[section ""data" . $krep17_r9iWE_closure" {
     $krep17_r9iWE_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep13_r9iWA_closure+1;
         const $krep6_r9iWt_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.248398354 UTC

[section ""data" . $krep18_r9iWF_closure" {
     $krep18_r9iWF_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep13_r9iWA_closure+1;
         const $krep17_r9iWE_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.248962465 UTC

[section ""data" . $krep19_r9iWG_closure" {
     $krep19_r9iWG_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep4_r9iWr_closure+1;
         const $krep18_r9iWF_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.249477861 UTC

[section ""data" . $krep20_r9iWH_closure" {
     $krep20_r9iWH_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep11_r9iWy_closure+2;
         const $krep19_r9iWG_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.250006901 UTC

[section ""data" . $krep21_r9iWI_closure" {
     $krep21_r9iWI_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep4_r9iWr_closure+1;
         const $krep17_r9iWE_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.250545025 UTC

[section ""data" . $krep22_r9iWJ_closure" {
     $krep22_r9iWJ_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep11_r9iWy_closure+2;
         const $krep21_r9iWI_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.251057641 UTC

[section ""data" . GHC.Event.Internal.$tc'Event1_closure" {
     GHC.Event.Internal.$tc'Event1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep2_r9iWp_closure+1;
         const $krep13_r9iWA_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.251582992 UTC

[section ""cstring" . GHC.Event.Internal.$tc'Event3_bytes" {
     GHC.Event.Internal.$tc'Event3_bytes:
         I8[] [39,69,118,101,110,116]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.252071702 UTC

[section ""data" . GHC.Event.Internal.$tc'Event2_closure" {
     GHC.Event.Internal.$tc'Event2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tc'Event3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.252628829 UTC

[section ""data" . GHC.Event.Internal.$tc'Event_closure" {
     GHC.Event.Internal.$tc'Event_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tc'Event2_closure+1;
         const GHC.Event.Internal.$tc'Event1_closure+4;
         const 3843507504600839845;
         const 12172955723408562945;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.253165993 UTC

[section ""cstring" . GHC.Event.Internal.$tcLifetime2_bytes" {
     GHC.Event.Internal.$tcLifetime2_bytes:
         I8[] [76,105,102,101,116,105,109,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.253736505 UTC

[section ""data" . GHC.Event.Internal.$tcLifetime1_closure" {
     GHC.Event.Internal.$tcLifetime1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tcLifetime2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.254273588 UTC

[section ""data" . GHC.Event.Internal.$tcLifetime_closure" {
     GHC.Event.Internal.$tcLifetime_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tcLifetime1_closure+1;
         const GHC.Types.krep$*_closure;
         const 16879554565198773712;
         const 8198822807138459060;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.254872868 UTC

[section ""data" . GHC.Event.Internal.$tc'MultiShot1_closure" {
     GHC.Event.Internal.$tc'MultiShot1_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Event.Internal.$tcLifetime_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.255442722 UTC

[section ""cstring" . GHC.Event.Internal.$tc'OneShot2_bytes" {
     GHC.Event.Internal.$tc'OneShot2_bytes:
         I8[] [39,79,110,101,83,104,111,116]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.255946884 UTC

[section ""data" . GHC.Event.Internal.$tc'OneShot1_closure" {
     GHC.Event.Internal.$tc'OneShot1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tc'OneShot2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.256527221 UTC

[section ""data" . GHC.Event.Internal.$tc'OneShot_closure" {
     GHC.Event.Internal.$tc'OneShot_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tc'OneShot1_closure+1;
         const GHC.Event.Internal.$tc'MultiShot1_closure+1;
         const 4428239562170783460;
         const 11248279118174204528;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.257144482 UTC

[section ""cstring" . GHC.Event.Internal.$tc'MultiShot3_bytes" {
     GHC.Event.Internal.$tc'MultiShot3_bytes:
         I8[] [39,77,117,108,116,105,83,104,111,116]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.25810649 UTC

[section ""data" . GHC.Event.Internal.$tc'MultiShot2_closure" {
     GHC.Event.Internal.$tc'MultiShot2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tc'MultiShot3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.258673994 UTC

[section ""data" . GHC.Event.Internal.$tc'MultiShot_closure" {
     GHC.Event.Internal.$tc'MultiShot_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tc'MultiShot2_closure+1;
         const GHC.Event.Internal.$tc'MultiShot1_closure+1;
         const 963080519453727549;
         const 5499435804578671723;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.25925326 UTC

[section ""cstring" . GHC.Event.Internal.$tcEventLifetime2_bytes" {
     GHC.Event.Internal.$tcEventLifetime2_bytes:
         I8[] [69,118,101,110,116,76,105,102,101,116,105,109,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.259787363 UTC

[section ""data" . GHC.Event.Internal.$tcEventLifetime1_closure" {
     GHC.Event.Internal.$tcEventLifetime1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tcEventLifetime2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.26036306 UTC

[section ""data" . GHC.Event.Internal.$tcEventLifetime_closure" {
     GHC.Event.Internal.$tcEventLifetime_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tcEventLifetime1_closure+1;
         const GHC.Types.krep$*_closure;
         const 11472987326402547198;
         const 14676184191233842558;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.260977711 UTC

[section ""data" . $krep23_r9iWK_closure" {
     $krep23_r9iWK_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Event.Internal.$tcEventLifetime_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.261607273 UTC

[section ""data" . GHC.Event.Internal.$tc'EL1_closure" {
     GHC.Event.Internal.$tc'EL1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep2_r9iWp_closure+1;
         const $krep23_r9iWK_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.262193841 UTC

[section ""cstring" . GHC.Event.Internal.$tc'EL3_bytes" {
     GHC.Event.Internal.$tc'EL3_bytes:
         I8[] [39,69,76]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.262764138 UTC

[section ""data" . GHC.Event.Internal.$tc'EL2_closure" {
     GHC.Event.Internal.$tc'EL2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tc'EL3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.263335408 UTC

[section ""data" . GHC.Event.Internal.$tc'EL_closure" {
     GHC.Event.Internal.$tc'EL_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tc'EL2_closure+1;
         const GHC.Event.Internal.$tc'EL1_closure+4;
         const 13328424765260461560;
         const 17004947518967325218;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.263912838 UTC

[section ""cstring" . GHC.Event.Internal.$tcTimeout2_bytes" {
     GHC.Event.Internal.$tcTimeout2_bytes:
         I8[] [84,105,109,101,111,117,116]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.264451458 UTC

[section ""data" . GHC.Event.Internal.$tcTimeout1_closure" {
     GHC.Event.Internal.$tcTimeout1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tcTimeout2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.2650516 UTC

[section ""data" . GHC.Event.Internal.$tcTimeout_closure" {
     GHC.Event.Internal.$tcTimeout_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tcTimeout1_closure+1;
         const GHC.Types.krep$*_closure;
         const 3071157695468345159;
         const 2371669836431867052;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.265626029 UTC

[section ""data" . GHC.Event.Internal.$tc'Forever1_closure" {
     GHC.Event.Internal.$tc'Forever1_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Event.Internal.$tcTimeout_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.266150347 UTC

[section ""cstring" . GHC.Event.Internal.$tc'Forever3_bytes" {
     GHC.Event.Internal.$tc'Forever3_bytes:
         I8[] [39,70,111,114,101,118,101,114]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.266717265 UTC

[section ""data" . GHC.Event.Internal.$tc'Forever2_closure" {
     GHC.Event.Internal.$tc'Forever2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tc'Forever3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.267251327 UTC

[section ""data" . GHC.Event.Internal.$tc'Forever_closure" {
     GHC.Event.Internal.$tc'Forever_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tc'Forever2_closure+1;
         const GHC.Event.Internal.$tc'Forever1_closure+1;
         const 15890326801882711521;
         const 6940845280791152844;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.268526827 UTC

[section ""data" . GHC.Event.Internal.$tc'Timeout1_closure" {
     GHC.Event.Internal.$tc'Timeout1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep_r9iWn_closure+1;
         const GHC.Event.Internal.$tc'Forever1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.269122555 UTC

[section ""cstring" . GHC.Event.Internal.$tc'Timeout3_bytes" {
     GHC.Event.Internal.$tc'Timeout3_bytes:
         I8[] [39,84,105,109,101,111,117,116]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.270225283 UTC

[section ""data" . GHC.Event.Internal.$tc'Timeout2_closure" {
     GHC.Event.Internal.$tc'Timeout2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tc'Timeout3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.270813461 UTC

[section ""data" . GHC.Event.Internal.$tc'Timeout_closure" {
     GHC.Event.Internal.$tc'Timeout_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tc'Timeout2_closure+1;
         const GHC.Event.Internal.$tc'Timeout1_closure+4;
         const 11507111740173521793;
         const 14582130137848061687;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.271413184 UTC

[section ""data" . $krep24_r9iWL_closure" {
     $krep24_r9iWL_closure:
         const :_con_info;
         const GHC.Event.Internal.$tc'Forever1_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.271993693 UTC

[section ""data" . $krep25_r9iWM_closure" {
     $krep25_r9iWM_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Base.$tcMaybe_closure;
         const $krep24_r9iWL_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.272550513 UTC

[section ""data" . $krep26_r9iWN_closure" {
     $krep26_r9iWN_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep25_r9iWM_closure+1;
         const $krep16_r9iWD_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.273123899 UTC

[section ""data" . $krep27_r9iWO_closure" {
     $krep27_r9iWO_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep11_r9iWy_closure+2;
         const $krep26_r9iWN_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.273708004 UTC

[section ""cstring" . GHC.Event.Internal.$tcBackend2_bytes" {
     GHC.Event.Internal.$tcBackend2_bytes:
         I8[] [66,97,99,107,101,110,100]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.274259181 UTC

[section ""data" . GHC.Event.Internal.$tcBackend1_closure" {
     GHC.Event.Internal.$tcBackend1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tcBackend2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.274823395 UTC

[section ""data" . GHC.Event.Internal.$tcBackend_closure" {
     GHC.Event.Internal.$tcBackend_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tcBackend1_closure+1;
         const GHC.Types.krep$*_closure;
         const 5241936179624485302;
         const 3407160178235461245;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.275462787 UTC

[section ""data" . $krep28_r9iWP_closure" {
     $krep28_r9iWP_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Event.Internal.$tcBackend_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.276039714 UTC

[section ""data" . $krep29_r9iWQ_closure" {
     $krep29_r9iWQ_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep12_r9iWz_closure+4;
         const $krep28_r9iWP_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.276629377 UTC

[section ""data" . $krep30_r9iWR_closure" {
     $krep30_r9iWR_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep22_r9iWJ_closure+4;
         const $krep29_r9iWQ_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.277203487 UTC

[section ""data" . $krep31_r9iWS_closure" {
     $krep31_r9iWS_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep20_r9iWH_closure+4;
         const $krep30_r9iWR_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.277829463 UTC

[section ""data" . $krep32_r9iWT_closure" {
     $krep32_r9iWT_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep27_r9iWO_closure+4;
         const $krep31_r9iWS_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.278385443 UTC

[section ""data" . GHC.Event.Internal.$tc'Backend1_closure" {
     GHC.Event.Internal.$tc'Backend1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep11_r9iWy_closure+2;
         const $krep32_r9iWT_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.278966912 UTC

[section ""cstring" . GHC.Event.Internal.$tc'Backend3_bytes" {
     GHC.Event.Internal.$tc'Backend3_bytes:
         I8[] [39,66,97,99,107,101,110,100]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.279500323 UTC

[section ""data" . GHC.Event.Internal.$tc'Backend2_closure" {
     GHC.Event.Internal.$tc'Backend2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tc'Backend3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.2801126 UTC

[section ""data" . GHC.Event.Internal.$tc'Backend_closure" {
     GHC.Event.Internal.$tc'Backend_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tc'Backend2_closure+1;
         const GHC.Event.Internal.$tc'Backend1_closure+4;
         const 2097061961478251755;
         const 1358985482759746540;
         const 1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.280679812 UTC

[section ""data" . GHC.Event.Internal.$fEqEvent_closure" {
     GHC.Event.Internal.$fEqEvent_closure:
         const GHC.Classes.C:Eq_con_info;
         const GHC.Classes.eqInt_closure+2;
         const GHC.Classes.neInt_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.281230379 UTC

[section ""data" . GHC.Event.Internal.$fEqEventLifetime_closure" {
     GHC.Event.Internal.$fEqEventLifetime_closure:
         const GHC.Classes.C:Eq_con_info;
         const GHC.Classes.eqInt_closure+2;
         const GHC.Classes.neInt_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.284507687 UTC

[section ""data" . elEvent1_r9iWU_closure" {
     elEvent1_r9iWU_closure:
         const elEvent1_r9iWU_info;
 },
 elEvent1_r9iWU_entry() //  [R2]
         { info_tbl: [(c9jf9,
                       label: elEvent1_r9iWU_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jf9: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9jfg; else goto c9jfh;
       c9jfg: // global
           R2 = R2;
           R1 = elEvent1_r9iWU_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9jfh: // global
           I64[Sp - 8] = block_c9jf6_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9jfl; else goto c9jf7;
       u9jfl: // global
           call _c9jf6(R1) args: 0, res: 0, upd: 0;
       c9jf7: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jf6() //  [R1]
         { info_tbl: [(c9jf6,
                       label: block_c9jf6_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jf6: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9jfk; else goto c9jfj;
       c9jfk: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9jfj: // global
           _s9iZP::I64 = I64[R1 + 7] & 7;
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = _s9iZP::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.285849704 UTC

[section ""data" . GHC.Event.Internal.elEvent_closure" {
     GHC.Event.Internal.elEvent_closure:
         const GHC.Event.Internal.elEvent_info;
 },
 GHC.Event.Internal.elEvent_entry() //  [R2]
         { info_tbl: [(c9jfq,
                       label: GHC.Event.Internal.elEvent_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jfq: // global
           R2 = R2;
           call elEvent1_r9iWU_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.286952698 UTC

[section ""data" . GHC.Event.Internal.$wgo2_closure" {
     GHC.Event.Internal.$wgo2_closure:
         const GHC.Event.Internal.$wgo2_info;
 },
 GHC.Event.Internal.$wgo2_entry() //  [R2, R3]
         { info_tbl: [(c9jfE,
                       label: GHC.Event.Internal.$wgo2_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 13} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jfE: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9jfF; else goto c9jfG;
       c9jfF: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$wgo2_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9jfG: // global
           I64[Sp - 16] = block_c9jfx_info;
           R1 = R3;
           I64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9jg0; else goto c9jfy;
       u9jg0: // global
           call _c9jfx(R1) args: 0, res: 0, upd: 0;
       c9jfy: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jfx() //  [R1]
         { info_tbl: [(c9jfx,
                       label: block_c9jfx_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jfx: // global
           if (R1 & 7 == 1) goto c9jfB; else goto c9jfC;
       c9jfB: // global
           R1 = I64[Sp + 8];
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9jfC: // global
           I64[Sp - 8] = block_c9jfM_info;
           _s9iZU::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp] = _s9iZU::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9jfZ; else goto c9jfN;
       u9jfZ: // global
           call _c9jfM(R1) args: 0, res: 0, upd: 0;
       c9jfN: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jfM() //  [R1]
         { info_tbl: [(c9jfM,
                       label: block_c9jfM_info
                       rep:StackRep [False, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jfM: // global
           _s9iZU::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c9jfR_info;
           R3 = _s9iZU::P64;
           R2 = I64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Event.Internal.$wgo2_entry(R3,
                                               R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9jfR() //  [R1]
         { info_tbl: [(c9jfR,
                       label: block_c9jfR_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jfR: // global
           R1 = I64[Sp + 8] | R1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.288661525 UTC

[section ""data" . GHC.Event.Internal.$fSemigroupEventLifetime_go_closure" {
     GHC.Event.Internal.$fSemigroupEventLifetime_go_closure:
         const GHC.Event.Internal.$fSemigroupEventLifetime_go_info;
 },
 GHC.Event.Internal.$fSemigroupEventLifetime_go_entry() //  [R2, R3]
         { info_tbl: [(c9jg8,
                       label: GHC.Event.Internal.$fSemigroupEventLifetime_go_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jg8: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9jgg; else goto c9jgh;
       c9jgg: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fSemigroupEventLifetime_go_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9jgh: // global
           I64[Sp - 16] = block_c9jg5_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9jgm; else goto c9jg6;
       u9jgm: // global
           call _c9jg5(R1) args: 0, res: 0, upd: 0;
       c9jg6: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jg5() //  [R1]
         { info_tbl: [(c9jg5,
                       label: block_c9jg5_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jg5: // global
           _s9iZZ::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c9jgb_info;
           R3 = _s9iZZ::P64;
           R2 = I64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Event.Internal.$wgo2_entry(R3,
                                               R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9jgb() //  [R1]
         { info_tbl: [(c9jgb,
                       label: block_c9jgb_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jgb: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9jgl; else goto c9jgk;
       c9jgl: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9jgk: // global
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = R1;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.290129618 UTC

[section ""data" . GHC.Event.Internal.$fSemigroupEventLifetime_$csconcat_closure" {
     GHC.Event.Internal.$fSemigroupEventLifetime_$csconcat_closure:
         const GHC.Event.Internal.$fSemigroupEventLifetime_$csconcat_info;
 },
 GHC.Event.Internal.$fSemigroupEventLifetime_$csconcat_entry() //  [R2]
         { info_tbl: [(c9jgu,
                       label: GHC.Event.Internal.$fSemigroupEventLifetime_$csconcat_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jgu: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9jgv; else goto c9jgw;
       c9jgv: // global
           R2 = R2;
           R1 = GHC.Event.Internal.$fSemigroupEventLifetime_$csconcat_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9jgw: // global
           I64[Sp - 8] = block_c9jgr_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9jgA; else goto c9jgs;
       u9jgA: // global
           call _c9jgr(R1) args: 0, res: 0, upd: 0;
       c9jgs: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jgr() //  [R1]
         { info_tbl: [(c9jgr,
                       label: block_c9jgr_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jgr: // global
           R3 = P64[R1 + 15];
           R2 = P64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Event.Internal.$fSemigroupEventLifetime_go_entry(R3,
                                                                     R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.291288045 UTC

[section ""data" . GHC.Event.Internal.$fSemigroupEventLifetime_closure" {
     GHC.Event.Internal.$fSemigroupEventLifetime_closure:
         const GHC.Base.C:Semigroup_con_info;
         const Data.Bits.$fBitsInt_$c.|._closure+2;
         const GHC.Event.Internal.$fSemigroupEventLifetime_$csconcat_closure+1;
         const GHC.Event.Internal.$fSemigroupEventLifetime_$cstimes_closure+1;
         const 0;
 },
 section ""data" . GHC.Event.Internal.$fSemigroupEventLifetime_$cstimes_closure" {
     GHC.Event.Internal.$fSemigroupEventLifetime_$cstimes_closure:
         const GHC.Event.Internal.$fSemigroupEventLifetime_$cstimes_info;
         const 0;
 },
 GHC.Event.Internal.$fSemigroupEventLifetime_$cstimes_entry() //  [R2]
         { info_tbl: [(c9jgF,
                       label: GHC.Event.Internal.$fSemigroupEventLifetime_$cstimes_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jgF: // global
           R3 = GHC.Event.Internal.$fSemigroupEventLifetime_closure+1;
           R2 = R2;
           R1 = Data.Semigroup.Internal.stimesDefault_closure+4;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.292528702 UTC

[section ""data" . GHC.Event.Internal.$wgo1_closure" {
     GHC.Event.Internal.$wgo1_closure:
         const GHC.Event.Internal.$wgo1_info;
 },
 GHC.Event.Internal.$wgo1_entry() //  [R2]
         { info_tbl: [(c9jgT,
                       label: GHC.Event.Internal.$wgo1_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jgT: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9jgU; else goto c9jgV;
       c9jgU: // global
           R2 = R2;
           R1 = GHC.Event.Internal.$wgo1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9jgV: // global
           I64[Sp - 8] = block_c9jgM_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9jhf; else goto c9jgN;
       u9jhf: // global
           call _c9jgM(R1) args: 0, res: 0, upd: 0;
       c9jgN: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jgM() //  [R1]
         { info_tbl: [(c9jgM,
                       label: block_c9jgM_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jgM: // global
           if (R1 & 7 == 1) goto c9jgQ; else goto c9jgR;
       c9jgQ: // global
           R1 = 0;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9jgR: // global
           I64[Sp - 8] = block_c9jh1_info;
           _s9j0b::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp] = _s9j0b::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9jhe; else goto c9jh2;
       u9jhe: // global
           call _c9jh1(R1) args: 0, res: 0, upd: 0;
       c9jh2: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jh1() //  [R1]
         { info_tbl: [(c9jh1,
                       label: block_c9jh1_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jh1: // global
           I64[Sp] = block_c9jh6_info;
           R2 = P64[Sp + 8];
           I64[Sp + 8] = I64[R1 + 7];
           call GHC.Event.Internal.$wgo1_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9jh6() //  [R1]
         { info_tbl: [(c9jh6,
                       label: block_c9jh6_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jh6: // global
           R1 = I64[Sp + 8] | R1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.294600949 UTC

[section ""data" . GHC.Event.Internal.$fMonoidEventLifetime_go_closure" {
     GHC.Event.Internal.$fMonoidEventLifetime_go_closure:
         const GHC.Event.Internal.$fMonoidEventLifetime_go_info;
 },
 GHC.Event.Internal.$fMonoidEventLifetime_go_entry() //  [R2]
         { info_tbl: [(c9jhm,
                       label: GHC.Event.Internal.$fMonoidEventLifetime_go_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jhm: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9jhq; else goto c9jhr;
       c9jhq: // global
           R2 = R2;
           R1 = GHC.Event.Internal.$fMonoidEventLifetime_go_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9jhr: // global
           I64[Sp - 8] = block_c9jhk_info;
           R2 = R2;
           Sp = Sp - 8;
           call GHC.Event.Internal.$wgo1_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9jhk() //  [R1]
         { info_tbl: [(c9jhk,
                       label: block_c9jhk_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jhk: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9jhu; else goto c9jht;
       c9jhu: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9jht: // global
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = R1;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.295609333 UTC

[section ""data" . GHC.Event.Internal.$fMonoidEventLifetime_closure" {
     GHC.Event.Internal.$fMonoidEventLifetime_closure:
         const GHC.Base.C:Monoid_con_info;
         const GHC.Event.Internal.$fSemigroupEventLifetime_closure+1;
         const GHC.Event.Internal.$fMonoidEventLifetime1_closure+1;
         const Data.Bits.$fBitsInt_$c.|._closure+2;
         const GHC.Event.Internal.$fMonoidEventLifetime_go_closure+1;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.296559117 UTC

[section ""data" . GHC.Event.Internal.elLifetime_closure" {
     GHC.Event.Internal.elLifetime_closure:
         const GHC.Event.Internal.elLifetime_info;
 },
 GHC.Event.Internal.elLifetime_entry() //  [R2]
         { info_tbl: [(c9jhC,
                       label: GHC.Event.Internal.elLifetime_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jhC: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9jhD; else goto c9jhE;
       c9jhD: // global
           R2 = R2;
           R1 = GHC.Event.Internal.elLifetime_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9jhE: // global
           I64[Sp - 8] = block_c9jhz_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9jhX; else goto c9jhA;
       u9jhX: // global
           call _c9jhz(R1) args: 0, res: 0, upd: 0;
       c9jhA: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jhz() //  [R1]
         { info_tbl: [(c9jhz,
                       label: block_c9jhz_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jhz: // global
           if (I64[R1 + 7] & 8 == 0) goto c9jhT; else goto c9jhN;
       c9jhT: // global
           R1 = GHC.Event.Internal.OneShot_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9jhN: // global
           R1 = GHC.Event.Internal.MultiShot_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.298048963 UTC

[section ""data" . eventLifetime1_r9iWV_closure" {
     eventLifetime1_r9iWV_closure:
         const eventLifetime1_r9iWV_info;
 },
 eventLifetime1_r9iWV_entry() //  [R2, R3]
         { info_tbl: [(c9ji5,
                       label: eventLifetime1_r9iWV_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ji5: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9ji6; else goto c9ji7;
       c9ji6: // global
           R3 = R3;
           R2 = R2;
           R1 = eventLifetime1_r9iWV_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9ji7: // global
           I64[Sp - 16] = block_c9ji2_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9jiv; else goto c9ji3;
       u9jiv: // global
           call _c9ji2(R1) args: 0, res: 0, upd: 0;
       c9ji3: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9ji2() //  [R1]
         { info_tbl: [(c9ji2,
                       label: block_c9ji2_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ji2: // global
           I64[Sp - 8] = block_c9jia_info;
           _s9j0n::P64 = R1;
           _s9j0o::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp] = _s9j0o::I64;
           P64[Sp + 8] = _s9j0n::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9jiu; else goto c9jic;
       u9jiu: // global
           call _c9jia(R1) args: 0, res: 0, upd: 0;
       c9jic: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jia() //  [R1]
         { info_tbl: [(c9jia,
                       label: block_c9jia_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jia: // global
           if (R1 & 7 == 1) goto c9jii; else goto c9jip;
       c9jii: // global
           R1 = P64[Sp + 16] & (-8);
           Sp = Sp + 24;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c9jip: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9jis; else goto c9jir;
       c9jis: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9jir: // global
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = I64[Sp + 8] | 8;
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.299598769 UTC

[section ""data" . GHC.Event.Internal.eventLifetime_closure" {
     GHC.Event.Internal.eventLifetime_closure:
         const GHC.Event.Internal.eventLifetime_info;
 },
 GHC.Event.Internal.eventLifetime_entry() //  [R2, R3]
         { info_tbl: [(c9jiA,
                       label: GHC.Event.Internal.eventLifetime_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jiA: // global
           R3 = R3;
           R2 = R2;
           call eventLifetime1_r9iWV_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.300420225 UTC

[section ""data" . GHC.Event.Internal.evtCombine_closure" {
     GHC.Event.Internal.evtCombine_closure:
         const GHC.Event.Internal.evtCombine_info;
 },
 GHC.Event.Internal.evtCombine_entry() //  [R2, R3]
         { info_tbl: [(c9jiH,
                       label: GHC.Event.Internal.evtCombine_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jiH: // global
           R3 = R3;
           R2 = R2;
           call Data.Bits.$fBitsInt_$c.|._entry(R3,
                                                R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.301193557 UTC

[section ""data" . GHC.Event.Internal.evtConcat_closure" {
     GHC.Event.Internal.evtConcat_closure:
         const GHC.Event.Internal.evtConcat_info;
         const 0;
 },
 GHC.Event.Internal.evtConcat_entry() //  [R2]
         { info_tbl: [(c9jiO,
                       label: GHC.Event.Internal.evtConcat_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jiO: // global
           R4 = R2;
           R3 = GHC.Event.Internal.evtNothing_closure;
           R2 = GHC.Event.Internal.evtCombine_closure+2;
           call GHC.List.foldl'_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.302339501 UTC

[section ""data" . GHC.Event.Internal.$wgo_closure" {
     GHC.Event.Internal.$wgo_closure:
         const GHC.Event.Internal.$wgo_info;
 },
 GHC.Event.Internal.$wgo_entry() //  [R2, R3]
         { info_tbl: [(c9jj2,
                       label: GHC.Event.Internal.$wgo_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 13} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jj2: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9jj3; else goto c9jj4;
       c9jj3: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$wgo_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9jj4: // global
           I64[Sp - 16] = block_c9jiV_info;
           R1 = R3;
           I64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9jjo; else goto c9jiW;
       u9jjo: // global
           call _c9jiV(R1) args: 0, res: 0, upd: 0;
       c9jiW: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jiV() //  [R1]
         { info_tbl: [(c9jiV,
                       label: block_c9jiV_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jiV: // global
           if (R1 & 7 == 1) goto c9jiZ; else goto c9jj0;
       c9jiZ: // global
           R1 = I64[Sp + 8];
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9jj0: // global
           I64[Sp - 8] = block_c9jja_info;
           _s9j0v::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp] = _s9j0v::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9jjn; else goto c9jjb;
       u9jjn: // global
           call _c9jja(R1) args: 0, res: 0, upd: 0;
       c9jjb: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jja() //  [R1]
         { info_tbl: [(c9jja,
                       label: block_c9jja_info
                       rep:StackRep [False, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jja: // global
           _s9j0v::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c9jjf_info;
           R3 = _s9j0v::P64;
           R2 = I64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Event.Internal.$wgo_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9jjf() //  [R1]
         { info_tbl: [(c9jjf,
                       label: block_c9jjf_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jjf: // global
           R1 = I64[Sp + 8] | R1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.304045513 UTC

[section ""data" . GHC.Event.Internal.$fSemigroupEvent_go_closure" {
     GHC.Event.Internal.$fSemigroupEvent_go_closure:
         const GHC.Event.Internal.$fSemigroupEvent_go_info;
 },
 GHC.Event.Internal.$fSemigroupEvent_go_entry() //  [R2, R3]
         { info_tbl: [(c9jjw,
                       label: GHC.Event.Internal.$fSemigroupEvent_go_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jjw: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9jjE; else goto c9jjF;
       c9jjE: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fSemigroupEvent_go_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9jjF: // global
           I64[Sp - 16] = block_c9jjt_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9jjK; else goto c9jju;
       u9jjK: // global
           call _c9jjt(R1) args: 0, res: 0, upd: 0;
       c9jju: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jjt() //  [R1]
         { info_tbl: [(c9jjt,
                       label: block_c9jjt_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jjt: // global
           _s9j0A::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c9jjz_info;
           R3 = _s9j0A::P64;
           R2 = I64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Event.Internal.$wgo_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9jjz() //  [R1]
         { info_tbl: [(c9jjz,
                       label: block_c9jjz_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jjz: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9jjJ; else goto c9jjI;
       c9jjJ: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9jjI: // global
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = R1;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.30564479 UTC

[section ""data" . GHC.Event.Internal.$fSemigroupEvent_$csconcat_closure" {
     GHC.Event.Internal.$fSemigroupEvent_$csconcat_closure:
         const GHC.Event.Internal.$fSemigroupEvent_$csconcat_info;
 },
 GHC.Event.Internal.$fSemigroupEvent_$csconcat_entry() //  [R2]
         { info_tbl: [(c9jjS,
                       label: GHC.Event.Internal.$fSemigroupEvent_$csconcat_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jjS: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9jjT; else goto c9jjU;
       c9jjT: // global
           R2 = R2;
           R1 = GHC.Event.Internal.$fSemigroupEvent_$csconcat_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9jjU: // global
           I64[Sp - 8] = block_c9jjP_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9jjY; else goto c9jjQ;
       u9jjY: // global
           call _c9jjP(R1) args: 0, res: 0, upd: 0;
       c9jjQ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jjP() //  [R1]
         { info_tbl: [(c9jjP,
                       label: block_c9jjP_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jjP: // global
           R3 = P64[R1 + 15];
           R2 = P64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Event.Internal.$fSemigroupEvent_go_entry(R3,
                                                             R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.306753255 UTC

[section ""data" . GHC.Event.Internal.$fSemigroupEvent_closure" {
     GHC.Event.Internal.$fSemigroupEvent_closure:
         const GHC.Base.C:Semigroup_con_info;
         const GHC.Event.Internal.evtCombine_closure+2;
         const GHC.Event.Internal.$fSemigroupEvent_$csconcat_closure+1;
         const GHC.Event.Internal.$fSemigroupEvent_$cstimes_closure+3;
         const 0;
 },
 section ""data" . GHC.Event.Internal.$fMonoidEvent_closure" {
     GHC.Event.Internal.$fMonoidEvent_closure:
         const GHC.Base.C:Monoid_con_info;
         const GHC.Event.Internal.$fSemigroupEvent_closure+1;
         const GHC.Event.Internal.evtNothing_closure;
         const GHC.Event.Internal.evtCombine_closure+2;
         const GHC.Event.Internal.evtConcat_closure+1;
         const 0;
 },
 section ""data" . GHC.Event.Internal.$fSemigroupEvent_$cstimes_closure" {
     GHC.Event.Internal.$fSemigroupEvent_$cstimes_closure:
         const GHC.Event.Internal.$fSemigroupEvent_$cstimes_info;
         const 0;
 },
 GHC.Event.Internal.$fSemigroupEvent_$cstimes_entry() //  [R2, R3,
                                                           R4]
         { info_tbl: [(c9jk3,
                       label: GHC.Event.Internal.$fSemigroupEvent_$cstimes_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jk3: // global
           R5 = R4;
           R4 = R3;
           R3 = GHC.Event.Internal.$fMonoidEvent_closure+1;
           R2 = R2;
           call Data.Semigroup.Internal.stimesMonoid_entry(R5,
                                                           R4,
                                                           R3,
                                                           R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.308012022 UTC

[section ""data" . GHC.Event.Internal.eventIs_closure" {
     GHC.Event.Internal.eventIs_closure:
         const GHC.Event.Internal.eventIs_info;
 },
 GHC.Event.Internal.eventIs_entry() //  [R2, R3]
         { info_tbl: [(c9jkd,
                       label: GHC.Event.Internal.eventIs_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jkd: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9jkh; else goto c9jki;
       c9jkh: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.eventIs_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9jki: // global
           I64[Sp - 16] = block_c9jka_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9jkF; else goto c9jkb;
       u9jkF: // global
           call _c9jka(R1) args: 0, res: 0, upd: 0;
       c9jkb: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jka() //  [R1]
         { info_tbl: [(c9jka,
                       label: block_c9jka_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jka: // global
           I64[Sp] = block_c9jkg_info;
           _s9j0M::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9j0M::I64;
           if (R1 & 7 != 0) goto u9jkE; else goto c9jkk;
       u9jkE: // global
           call _c9jkg(R1) args: 0, res: 0, upd: 0;
       c9jkk: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jkg() //  [R1]
         { info_tbl: [(c9jkg,
                       label: block_c9jkg_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jkg: // global
           if (I64[Sp + 8] & I64[R1 + 7] == 0) goto c9jkA; else goto c9jku;
       c9jkA: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9jku: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.309291206 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent13_closure" {
     GHC.Event.Internal.$fShowEvent13_closure:
         const GHC.Types.C#_con_info;
         const 91;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.30988671 UTC

[section ""cstring" . GHC.Event.Internal.$fShowEvent5_bytes" {
     GHC.Event.Internal.$fShowEvent5_bytes:
         I8[] [93]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.31167176 UTC

[section ""cstring" . GHC.Event.Internal.$fShowEvent10_bytes" {
     GHC.Event.Internal.$fShowEvent10_bytes:
         I8[] [44]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.312378449 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent9_closure" {
     GHC.Event.Internal.$fShowEvent9_closure:
         const GHC.Event.Internal.$fShowEvent9_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Internal.$fShowEvent9_entry() //  [R1]
         { info_tbl: [(c9jkM,
                       label: GHC.Event.Internal.$fShowEvent9_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jkM: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9jkN; else goto c9jkO;
       c9jkN: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jkO: // global
           (_c9jkJ::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9jkJ::I64 == 0) goto c9jkL; else goto c9jkK;
       c9jkL: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9jkK: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9jkJ::I64;
           R2 = GHC.Event.Internal.$fShowEvent10_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.313376092 UTC

[section ""cstring" . GHC.Event.Internal.$fShowEvent12_bytes" {
     GHC.Event.Internal.$fShowEvent12_bytes:
         I8[] [101,118,116,82,101,97,100]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.314073955 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent11_closure" {
     GHC.Event.Internal.$fShowEvent11_closure:
         const GHC.Event.Internal.$fShowEvent11_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Internal.$fShowEvent11_entry() //  [R1]
         { info_tbl: [(c9jkV,
                       label: GHC.Event.Internal.$fShowEvent11_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jkV: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9jkW; else goto c9jkX;
       c9jkW: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jkX: // global
           (_c9jkS::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9jkS::I64 == 0) goto c9jkU; else goto c9jkT;
       c9jkU: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9jkT: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9jkS::I64;
           R2 = GHC.Event.Internal.$fShowEvent12_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.314928629 UTC

[section ""cstring" . GHC.Event.Internal.$fShowEvent8_bytes" {
     GHC.Event.Internal.$fShowEvent8_bytes:
         I8[] [101,118,116,87,114,105,116,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.315912859 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent7_closure" {
     GHC.Event.Internal.$fShowEvent7_closure:
         const GHC.Event.Internal.$fShowEvent7_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Internal.$fShowEvent7_entry() //  [R1]
         { info_tbl: [(c9jl4,
                       label: GHC.Event.Internal.$fShowEvent7_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jl4: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9jl5; else goto c9jl6;
       c9jl5: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jl6: // global
           (_c9jl1::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9jl1::I64 == 0) goto c9jl3; else goto c9jl2;
       c9jl3: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9jl2: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9jl1::I64;
           R2 = GHC.Event.Internal.$fShowEvent8_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.316763407 UTC

[section ""cstring" . GHC.Event.Internal.$fShowEvent3_bytes" {
     GHC.Event.Internal.$fShowEvent3_bytes:
         I8[] [101,118,116,67,108,111,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.317680154 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent2_closure" {
     GHC.Event.Internal.$fShowEvent2_closure:
         const GHC.Event.Internal.$fShowEvent2_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Internal.$fShowEvent2_entry() //  [R1]
         { info_tbl: [(c9jld,
                       label: GHC.Event.Internal.$fShowEvent2_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jld: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9jle; else goto c9jlf;
       c9jle: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jlf: // global
           (_c9jla::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9jla::I64 == 0) goto c9jlc; else goto c9jlb;
       c9jlc: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9jlb: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9jla::I64;
           R2 = GHC.Event.Internal.$fShowEvent3_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.318712652 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent4_closure" {
     GHC.Event.Internal.$fShowEvent4_closure:
         const GHC.Event.Internal.$fShowEvent4_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Internal.$fShowEvent4_entry() //  [R1]
         { info_tbl: [(c9jlm,
                       label: GHC.Event.Internal.$fShowEvent4_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jlm: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9jln; else goto c9jlo;
       c9jln: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jlo: // global
           (_c9jlj::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9jlj::I64 == 0) goto c9jll; else goto c9jlk;
       c9jll: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9jlk: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9jlj::I64;
           R2 = GHC.Event.Internal.$fShowEvent5_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.319564745 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent6_closure" {
     GHC.Event.Internal.$fShowEvent6_closure:
         const :_con_info;
         const GHC.Event.Internal.$fShowEvent2_closure;
         const GHC.Types.[]_closure+1;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.322130528 UTC

[section ""data" . GHC.Event.Internal.$w$cshow_closure" {
     GHC.Event.Internal.$w$cshow_closure:
         const GHC.Event.Internal.$w$cshow_info;
         const 0;
 },
 sat_s9j0W_entry() //  [R1]
         { info_tbl: [(c9jm1,
                       label: sat_s9j0W_info
                       rep:HeapRep 1 nonptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jm1: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9jm2; else goto c9jmd;
       c9jm2: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jmd: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           if (I64[R1 + 16] & 4 == 0) goto c9jm0; else goto c9jlZ;
       c9jm0: // global
           R1 = []_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c9jlZ: // global
           R1 = GHC.Event.Internal.$fShowEvent6_closure+2;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 sat_s9j0Z_entry() //  [R1]
         { info_tbl: [(c9jmh,
                       label: sat_s9j0Z_info
                       rep:HeapRep 1 nonptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jmh: // global
           if ((Sp + -40) < SpLim) (likely: False) goto c9jmi; else goto c9jmH;
       c9jmi: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jmH: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           _s9j0S::I64 = I64[R1 + 16];
           _s9j0U::I64 = _s9j0S::I64 & 2;
           if (_s9j0U::I64 != 0) goto u9jmI; else goto c9jmg;
       u9jmI: // global
           I64[Sp - 32] = _s9j0S::I64;
           I64[Sp - 24] = _s9j0U::I64;
           Sp = Sp - 32;
           call _c9jlQ() args: 0, res: 0, upd: 0;
       c9jmg: // global
           if (_s9j0S::I64 & 4 == 0) goto c9jmD; else goto c9jmx;
       c9jmD: // global
           R3 = GHC.Types.[]_closure+1;
           R2 = GHC.Event.Internal.$fShowEvent9_closure;
           Sp = Sp - 16;
           call Data.OldList.prependToAll_entry(R3,
                                                R2) args: 24, res: 0, upd: 24;
       c9jmx: // global
           R3 = GHC.Event.Internal.$fShowEvent6_closure+2;
           R2 = GHC.Event.Internal.$fShowEvent9_closure;
           Sp = Sp - 16;
           call Data.OldList.prependToAll_entry(R3,
                                                R2) args: 24, res: 0, upd: 24;
     }
 },
 _c9jlQ() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jlQ: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c9jmm; else goto c9jml;
       c9jmm: // global
           HpAlloc = 48;
           I64[Sp - 8] = block_c9jlP_info;
           R1 = I64[Sp + 8];
           Sp = Sp - 8;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 24;
       c9jml: // global
           I64[Hp - 40] = sat_s9j0W_info;
           I64[Hp - 24] = I64[Sp];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Event.Internal.$fShowEvent7_closure;
           P64[Hp] = Hp - 40;
           R3 = Hp - 14;
           R2 = GHC.Event.Internal.$fShowEvent9_closure;
           Sp = Sp + 16;
           call Data.OldList.prependToAll_entry(R3,
                                                R2) args: 24, res: 0, upd: 24;
     }
 },
 _c9jlP() //  [R1]
         { info_tbl: [(c9jlP,
                       label: block_c9jlP_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jlP: // global
           I64[Sp + 16] = R1;
           Sp = Sp + 8;
           call _c9jlQ() args: 0, res: 0, upd: 0;
     }
 },
 sat_s9j14_entry() //  [R1]
         { info_tbl: [(c9jn5,
                       label: sat_s9j14_info
                       rep:HeapRep 1 nonptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jn5: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9jn6; else goto c9jnh;
       c9jn6: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jnh: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           if (I64[R1 + 16] & 4 == 0) goto c9jn4; else goto c9jn3;
       c9jn4: // global
           R3 = GHC.Types.[]_closure+1;
           R2 = GHC.Event.Internal.$fShowEvent9_closure;
           Sp = Sp - 16;
           call Data.OldList.prependToAll_entry(R3,
                                                R2) args: 24, res: 0, upd: 24;
       c9jn3: // global
           R3 = GHC.Event.Internal.$fShowEvent6_closure+2;
           R2 = GHC.Event.Internal.$fShowEvent9_closure;
           Sp = Sp - 16;
           call Data.OldList.prependToAll_entry(R3,
                                                R2) args: 24, res: 0, upd: 24;
     }
 },
 sat_s9j18_entry() //  [R1]
         { info_tbl: [(c9jnw,
                       label: sat_s9j18_info
                       rep:HeapRep { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jnw: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9jnx; else goto c9jny;
       c9jnx: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jny: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = GHC.Types.[]_closure+1;
           R2 = GHC.Event.Internal.$fShowEvent9_closure;
           Sp = Sp - 16;
           call Data.OldList.prependToAll_entry(R3,
                                                R2) args: 24, res: 0, upd: 24;
     }
 },
 sat_s9j1b_entry() //  [R1]
         { info_tbl: [(c9jnz,
                       label: sat_s9j1b_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jnz: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c9jnA; else goto c9jnB;
       c9jnA: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jnB: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c9jlx_info;
           R1 = P64[R1 + 16];
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9jow; else goto c9jly;
       u9jow: // global
           call _c9jlx(R1) args: 0, res: 0, upd: 0;
       c9jly: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 _c9jlx() //  [R1]
         { info_tbl: [(c9jlx,
                       label: block_c9jlx_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jlx: // global
           _s9j0S::I64 = I64[R1 + 7];
           _s9j0T::I64 = _s9j0S::I64 & 1;
           if (_s9j0T::I64 != 0) goto u9jok; else goto c9jnO;
       u9jok: // global
           I64[Sp - 8] = _s9j0T::I64;
           I64[Sp] = _s9j0S::I64;
           Sp = Sp - 8;
           call _c9jlG() args: 0, res: 0, upd: 0;
       c9jnO: // global
           _s9j12::I64 = _s9j0S::I64 & 2;
           if (_s9j12::I64 != 0) goto u9jom; else goto c9jo1;
       u9jom: // global
           I64[Sp - 8] = _s9j12::I64;
           I64[Sp] = _s9j0S::I64;
           Sp = Sp - 8;
           call _c9jmU() args: 0, res: 0, upd: 0;
       c9jo1: // global
           _s9j17::I64 = _s9j0S::I64 & 4;
           if (_s9j17::I64 != 0) goto u9joo; else goto c9jog;
       u9joo: // global
           I64[Sp] = _s9j17::I64;
           call _c9jnq() args: 0, res: 0, upd: 0;
       c9jog: // global
           R1 = GHC.Event.Internal.$fShowEvent4_closure;
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 _c9jlG() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jlG: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c9jnJ; else goto c9jnI;
       c9jnJ: // global
           HpAlloc = 48;
           _s9j0T::I64 = I64[Sp];
           I64[Sp] = block_c9jlF_info;
           R1 = _s9j0T::I64;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 24;
       c9jnI: // global
           I64[Hp - 40] = sat_s9j0Z_info;
           I64[Hp - 24] = I64[Sp + 8];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Event.Internal.$fShowEvent11_closure;
           P64[Hp] = Hp - 40;
           I64[Sp + 8] = block_c9jnE_info;
           R2 = Hp - 14;
           Sp = Sp + 8;
           call Data.OldList.intercalate1_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 _c9jlF() //  [R1]
         { info_tbl: [(c9jlF,
                       label: block_c9jlF_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jlF: // global
           I64[Sp] = R1;
           call _c9jlG() args: 0, res: 0, upd: 0;
     }
 },
 _c9jnE() //  [R1]
         { info_tbl: [(c9jnE,
                       label: block_c9jnE_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jnE: // global
           R3 = GHC.Event.Internal.$fShowEvent4_closure;
           R2 = R1;
           Sp = Sp + 8;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 _c9jmU() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jmU: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c9jnW; else goto c9jnV;
       c9jnW: // global
           HpAlloc = 48;
           _s9j12::I64 = I64[Sp];
           I64[Sp] = block_c9jmT_info;
           R1 = _s9j12::I64;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 24;
       c9jnV: // global
           I64[Hp - 40] = sat_s9j14_info;
           I64[Hp - 24] = I64[Sp + 8];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Event.Internal.$fShowEvent7_closure;
           P64[Hp] = Hp - 40;
           I64[Sp + 8] = block_c9jnR_info;
           R2 = Hp - 14;
           Sp = Sp + 8;
           call Data.OldList.intercalate1_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 _c9jmT() //  [R1]
         { info_tbl: [(c9jmT,
                       label: block_c9jmT_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jmT: // global
           I64[Sp] = R1;
           call _c9jmU() args: 0, res: 0, upd: 0;
     }
 },
 _c9jnR() //  [R1]
         { info_tbl: [(c9jnR,
                       label: block_c9jnR_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jnR: // global
           R3 = GHC.Event.Internal.$fShowEvent4_closure;
           R2 = R1;
           Sp = Sp + 8;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 _c9jnq() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jnq: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c9jo9; else goto c9jo8;
       c9jo9: // global
           HpAlloc = 40;
           _s9j17::I64 = I64[Sp];
           I64[Sp] = block_c9jnp_info;
           R1 = _s9j17::I64;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 24;
       c9jo8: // global
           I64[Hp - 32] = sat_s9j18_info;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Event.Internal.$fShowEvent2_closure;
           P64[Hp] = Hp - 32;
           I64[Sp] = block_c9jo4_info;
           R2 = Hp - 14;
           call Data.OldList.intercalate1_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 _c9jnp() //  [R1]
         { info_tbl: [(c9jnp,
                       label: block_c9jnp_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jnp: // global
           I64[Sp] = R1;
           call _c9jnq() args: 0, res: 0, upd: 0;
     }
 },
 _c9jo4() //  [R1]
         { info_tbl: [(c9jo4,
                       label: block_c9jo4_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jo4: // global
           R3 = GHC.Event.Internal.$fShowEvent4_closure;
           R2 = R1;
           Sp = Sp + 8;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 GHC.Event.Internal.$w$cshow_entry() //  [R2]
         { info_tbl: [(c9jox,
                       label: GHC.Event.Internal.$w$cshow_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jox: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9joB; else goto c9joA;
       c9joB: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = GHC.Event.Internal.$w$cshow_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9joA: // global
           I64[Hp - 16] = sat_s9j1b_info;
           P64[Hp] = R2;
           R2 = Hp - 16;
           R1 = GHC.Event.Internal.$fShowEvent13_closure+1;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.327182695 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent_$cshow_closure" {
     GHC.Event.Internal.$fShowEvent_$cshow_closure:
         const GHC.Event.Internal.$fShowEvent_$cshow_info;
         const 0;
 },
 GHC.Event.Internal.$fShowEvent_$cshow_entry() //  [R2]
         { info_tbl: [(c9joJ,
                       label: GHC.Event.Internal.$fShowEvent_$cshow_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9joJ: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9joK; else goto c9joL;
       c9joK: // global
           R2 = R2;
           R1 = GHC.Event.Internal.$fShowEvent_$cshow_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9joL: // global
           I64[Sp - 8] = block_c9joG_info;
           R2 = R2;
           Sp = Sp - 8;
           call GHC.Event.Internal.$w$cshow_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9joG() //  [R1, R2]
         { info_tbl: [(c9joG,
                       label: block_c9joG_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9joG: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9joO; else goto c9joN;
       c9joO: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 8;
       c9joN: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.328463852 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent_$cshowsPrec_closure" {
     GHC.Event.Internal.$fShowEvent_$cshowsPrec_closure:
         const GHC.Event.Internal.$fShowEvent_$cshowsPrec_info;
         const 0;
 },
 GHC.Event.Internal.$fShowEvent_$cshowsPrec_entry() //  [R2, R3, R4]
         { info_tbl: [(c9joW,
                       label: GHC.Event.Internal.$fShowEvent_$cshowsPrec_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9joW: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9joX; else goto c9joY;
       c9joX: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fShowEvent_$cshowsPrec_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9joY: // global
           I64[Sp - 16] = block_c9joT_info;
           R2 = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 16;
           call GHC.Event.Internal.$w$cshow_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9joT() //  [R1, R2]
         { info_tbl: [(c9joT,
                       label: block_c9joT_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9joT: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9jp1; else goto c9jp0;
       c9jp1: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 8;
       c9jp0: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R3 = P64[Sp + 8];
           R2 = Hp - 14;
           Sp = Sp + 16;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.329790327 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent1_closure" {
     GHC.Event.Internal.$fShowEvent1_closure:
         const GHC.Event.Internal.$fShowEvent1_info;
         const 0;
 },
 GHC.Event.Internal.$fShowEvent1_entry() //  [R2, R3]
         { info_tbl: [(c9jp9,
                       label: GHC.Event.Internal.$fShowEvent1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jp9: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9jpa; else goto c9jpb;
       c9jpa: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fShowEvent1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9jpb: // global
           I64[Sp - 16] = block_c9jp6_info;
           R2 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           call GHC.Event.Internal.$w$cshow_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9jp6() //  [R1, R2]
         { info_tbl: [(c9jp6,
                       label: block_c9jp6_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jp6: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9jpe; else goto c9jpd;
       c9jpe: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 8;
       c9jpd: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R3 = P64[Sp + 8];
           R2 = Hp - 14;
           Sp = Sp + 16;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.330965001 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent_$cshowList_closure" {
     GHC.Event.Internal.$fShowEvent_$cshowList_closure:
         const GHC.Event.Internal.$fShowEvent_$cshowList_info;
         const 0;
 },
 GHC.Event.Internal.$fShowEvent_$cshowList_entry() //  [R2, R3]
         { info_tbl: [(c9jpj,
                       label: GHC.Event.Internal.$fShowEvent_$cshowList_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jpj: // global
           R4 = R3;
           R3 = R2;
           R2 = GHC.Event.Internal.$fShowEvent1_closure+2;
           call GHC.Show.showList___entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.331697531 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent_closure" {
     GHC.Event.Internal.$fShowEvent_closure:
         const GHC.Show.C:Show_con_info;
         const GHC.Event.Internal.$fShowEvent_$cshowsPrec_closure+3;
         const GHC.Event.Internal.$fShowEvent_$cshow_closure+1;
         const GHC.Event.Internal.$fShowEvent_$cshowList_closure+2;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.332481203 UTC

[section ""data" . GHC.Event.Internal.Backend_closure" {
     GHC.Event.Internal.Backend_closure:
         const GHC.Event.Internal.Backend_info;
 },
 GHC.Event.Internal.Backend_entry() //  [R2, R3, R4, R5, R6]
         { info_tbl: [(c9jpr,
                       label: GHC.Event.Internal.Backend_info
                       rep:HeapRep static { Fun {arity: 5 fun_type: ArgSpec 25} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jpr: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c9jpv; else goto c9jpu;
       c9jpv: // global
           HpAlloc = 48;
           R6 = R6;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.Backend_closure;
           call (stg_gc_fun)(R6, R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9jpu: // global
           I64[Hp - 40] = GHC.Event.Internal.Backend_con_info;
           P64[Hp - 32] = R2;
           P64[Hp - 24] = R3;
           P64[Hp - 16] = R4;
           P64[Hp - 8] = R5;
           P64[Hp] = R6;
           R1 = Hp - 39;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.333811764 UTC

[section ""data" . GHC.Event.Internal.Timeout_closure" {
     GHC.Event.Internal.Timeout_closure:
         const GHC.Event.Internal.Timeout_info;
 },
 GHC.Event.Internal.Timeout_entry() //  [R2]
         { info_tbl: [(c9jpB,
                       label: GHC.Event.Internal.Timeout_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jpB: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9jpF; else goto c9jpE;
       c9jpF: // global
           HpAlloc = 16;
           R2 = R2;
           R1 = GHC.Event.Internal.Timeout_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9jpE: // global
           I64[Hp - 8] = GHC.Event.Internal.Timeout_con_info;
           I64[Hp] = R2;
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.334609815 UTC

[section ""data" . GHC.Event.Internal.Forever_closure" {
     GHC.Event.Internal.Forever_closure:
         const GHC.Event.Internal.Forever_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.335153251 UTC

[section ""data" . GHC.Event.Internal.OneShot_closure" {
     GHC.Event.Internal.OneShot_closure:
         const GHC.Event.Internal.OneShot_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.33568389 UTC

[section ""data" . GHC.Event.Internal.MultiShot_closure" {
     GHC.Event.Internal.MultiShot_closure:
         const GHC.Event.Internal.MultiShot_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.336282302 UTC

[GHC.Event.Internal.Backend_con_entry() //  [R1]
         { info_tbl: [(c9jpG,
                       label: GHC.Event.Internal.Backend_con_info
                       rep:HeapRep 5 ptrs {
                             Con {tag: 0
                                  descr:[98,97,115,101,58,71,72,67,46,69,118,101,110,116,46,73,110,116,101,114,110,97,108,46,66,97,99,107,101,110,100]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jpG: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.336967635 UTC

[GHC.Event.Internal.Timeout_con_entry() //  [R1]
         { info_tbl: [(c9jpH,
                       label: GHC.Event.Internal.Timeout_con_info
                       rep:HeapRep 1 nonptrs {
                             Con {tag: 0
                                  descr:[98,97,115,101,58,71,72,67,46,69,118,101,110,116,46,73,110,116,101,114,110,97,108,46,84,105,109,101,111,117,116]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jpH: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.337769623 UTC

[GHC.Event.Internal.Forever_con_entry() //  [R1]
         { info_tbl: [(c9jpI,
                       label: GHC.Event.Internal.Forever_con_info
                       rep:HeapRep 1 nonptrs {
                             Con {tag: 1
                                  descr:[98,97,115,101,58,71,72,67,46,69,118,101,110,116,46,73,110,116,101,114,110,97,108,46,70,111,114,101,118,101,114]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jpI: // global
           R1 = R1 + 2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.338450865 UTC

[section ""relreadonly" . GHC.Event.Internal.Lifetime_closure_tbl" {
     GHC.Event.Internal.Lifetime_closure_tbl:
         const GHC.Event.Internal.OneShot_closure+1;
         const GHC.Event.Internal.MultiShot_closure+2;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.339023354 UTC

[GHC.Event.Internal.OneShot_con_entry() //  [R1]
         { info_tbl: [(c9jpJ,
                       label: GHC.Event.Internal.OneShot_con_info
                       rep:HeapRep 1 nonptrs {
                             Con {tag: 0
                                  descr:[98,97,115,101,58,71,72,67,46,69,118,101,110,116,46,73,110,116,101,114,110,97,108,46,79,110,101,83,104,111,116]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jpJ: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.33973964 UTC

[GHC.Event.Internal.MultiShot_con_entry() //  [R1]
         { info_tbl: [(c9jpK,
                       label: GHC.Event.Internal.MultiShot_con_info
                       rep:HeapRep 1 nonptrs {
                             Con {tag: 1
                                  descr:[98,97,115,101,58,71,72,67,46,69,118,101,110,116,46,73,110,116,101,114,110,97,108,46,77,117,108,116,105,83,104,111,116]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jpK: // global
           R1 = R1 + 2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.340352553 UTC

[section ""relreadonly" . S9j2f_srt" {
     S9j2f_srt:
         const GHC.Event.Internal.$fShowTimeout3_closure;
         const GHC.Show.$w$cshowsPrec4_closure;
         const GHC.Event.Internal.$fShowTimeout_$cshowsPrec_closure;
         const GHC.Event.Internal.$fShowTimeout2_closure;
         const GHC.Event.Internal.$fShowTimeout_$cshow_closure;
         const GHC.Event.Internal.$fShowTimeout1_closure;
         const GHC.Event.Internal.$fShowLifetime2_closure;
         const GHC.Event.Internal.$fShowLifetime4_closure;
         const GHC.Event.Internal.$fShowLifetime_$cshowsPrec_closure;
         const GHC.Event.Internal.$fShowLifetime_$cshow_closure;
         const GHC.Event.Internal.$fShowLifetime1_closure;
         const Data.Semigroup.Internal.stimesMonoid_closure;
         const GHC.Event.Internal.$fMonoidLifetime_closure;
         const sat_s9iZu_closure;
         const GHC.Event.Internal.throwErrnoIfMinus1NoRetry3_closure;
         const GHC.Event.Internal.throwErrnoIfMinus1NoRetry2_closure;
         const Foreign.C.Error.throwErrno1_closure;
         const GHC.Event.Internal.throwErrnoIfMinus1NoRetry1_closure;
         const Data.Semigroup.Internal.stimesDefault_closure;
         const GHC.Event.Internal.$fSemigroupEventLifetime_closure;
         const GHC.Event.Internal.evtNothing_closure;
         const GHC.Event.Internal.$fMonoidEvent_closure;
         const GHC.Event.Internal.$fShowEvent6_closure;
         const GHC.Event.Internal.$fShowEvent7_closure;
         const GHC.Event.Internal.$fShowEvent9_closure;
         const GHC.Event.Internal.$fShowEvent2_closure;
         const GHC.Event.Internal.$fShowEvent4_closure;
         const GHC.Event.Internal.$fShowEvent11_closure;
         const GHC.Event.Internal.$w$cshow_closure;
         const GHC.Event.Internal.$fShowEvent_$cshow_closure;
         const GHC.Event.Internal.$fShowEvent_$cshowsPrec_closure;
         const GHC.Event.Internal.$fShowEvent1_closure;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.341085699 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:04:26.342155959 UTC

[section ""data" . GHC.Event.Internal.$WBackend_closure" {
     GHC.Event.Internal.$WBackend_closure:
         const GHC.Event.Internal.$WBackend_info;
 },
 GHC.Event.Internal.$WBackend_entry() //  [R2, R3, R4, R5, R6]
         { info_tbl: [(c9jpS,
                       label: GHC.Event.Internal.$WBackend_info
                       rep:HeapRep static { Fun {arity: 5 fun_type: ArgSpec 25} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jpS: // global
           if ((Sp + -40) < SpLim) (likely: False) goto c9jpT; else goto c9jpU;
       c9jpT: // global
           R6 = R6;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$WBackend_closure;
           call (stg_gc_fun)(R6, R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9jpU: // global
           I64[Sp - 40] = block_c9jpP_info;
           R1 = R2;
           P64[Sp - 32] = R3;
           P64[Sp - 24] = R4;
           P64[Sp - 16] = R5;
           P64[Sp - 8] = R6;
           Sp = Sp - 40;
           call stg_ap_0_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jpP() //  [R1]
         { info_tbl: [(c9jpP,
                       label: block_c9jpP_info
                       rep:StackRep [False, False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jpP: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c9jpX; else goto c9jpW;
       c9jpX: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9jpW: // global
           I64[Hp - 40] = GHC.Event.Internal.Backend_con_info;
           P64[Hp - 32] = R1;
           P64[Hp - 24] = P64[Sp + 8];
           P64[Hp - 16] = P64[Sp + 16];
           P64[Hp - 8] = P64[Sp + 24];
           P64[Hp] = P64[Sp + 32];
           R1 = Hp - 39;
           Sp = Sp + 40;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.343549389 UTC

[section ""data" . GHC.Event.Internal.$WTimeout_closure" {
     GHC.Event.Internal.$WTimeout_closure:
         const GHC.Event.Internal.$WTimeout_info;
 },
 GHC.Event.Internal.$WTimeout_entry() //  [R2]
         { info_tbl: [(c9jq5,
                       label: GHC.Event.Internal.$WTimeout_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jq5: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9jq9; else goto c9jqa;
       c9jq9: // global
           R2 = R2;
           R1 = GHC.Event.Internal.$WTimeout_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9jqa: // global
           I64[Sp - 8] = block_c9jq2_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9jqe; else goto c9jq3;
       u9jqe: // global
           call _c9jq2(R1) args: 0, res: 0, upd: 0;
       c9jq3: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jq2() //  [R1]
         { info_tbl: [(c9jq2,
                       label: block_c9jq2_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jq2: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9jqd; else goto c9jqc;
       c9jqd: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9jqc: // global
           _s9iX5::I64 = I64[R1 + 7];
           I64[Hp - 8] = GHC.Event.Internal.Timeout_con_info;
           I64[Hp] = _s9iX5::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.344618152 UTC

[section ""data" . GHC.Event.Internal.$fMonoidEventLifetime1_closure" {
     GHC.Event.Internal.$fMonoidEventLifetime1_closure:
         const GHC.Types.I#_con_info;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.345188257 UTC

[section ""cstring" . GHC.Event.Internal.$fShowTimeout4_bytes" {
     GHC.Event.Internal.$fShowTimeout4_bytes:
         I8[] [70,111,114,101,118,101,114]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.345969457 UTC

[section ""data" . GHC.Event.Internal.$fShowTimeout3_closure" {
     GHC.Event.Internal.$fShowTimeout3_closure:
         const GHC.Event.Internal.$fShowTimeout3_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Internal.$fShowTimeout3_entry() //  [R1]
         { info_tbl: [(c9jql,
                       label: GHC.Event.Internal.$fShowTimeout3_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jql: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9jqm; else goto c9jqn;
       c9jqm: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jqn: // global
           (_c9jqi::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9jqi::I64 == 0) goto c9jqk; else goto c9jqj;
       c9jqk: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9jqj: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9jqi::I64;
           R2 = GHC.Event.Internal.$fShowTimeout4_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.347032036 UTC

[section ""data" . GHC.Event.Internal.$fShowTimeout2_closure" {
     GHC.Event.Internal.$fShowTimeout2_closure:
         const GHC.Event.Internal.$fShowTimeout2_info;
         const 0;
 },
 GHC.Event.Internal.$fShowTimeout2_entry() //  [R2]
         { info_tbl: [(c9jqs,
                       label: GHC.Event.Internal.$fShowTimeout2_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jqs: // global
           R3 = R2;
           R2 = GHC.Event.Internal.$fShowTimeout3_closure;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.347725623 UTC

[section ""cstring" . GHC.Event.Internal.$fShowTimeout5_bytes" {
     GHC.Event.Internal.$fShowTimeout5_bytes:
         I8[] [84,105,109,101,111,117,116,32]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.350259179 UTC

[section ""data" . GHC.Event.Internal.$fShowTimeout_$cshowsPrec_closure" {
     GHC.Event.Internal.$fShowTimeout_$cshowsPrec_closure:
         const GHC.Event.Internal.$fShowTimeout_$cshowsPrec_info;
         const 0;
 },
 w1_s9iXc_entry() //  [R1]
         { info_tbl: [(c9jqP,
                       label: w1_s9iXc_info
                       rep:HeapRep 1 nonptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jqP: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9jqQ; else goto c9jqX;
       c9jqQ: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jqX: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           _s9iX9::I64 = I64[R1 + 16];
           if (%MO_S_Lt_W64(_s9iX9::I64, 0)) goto c9jqV; else goto c9jqW;
       c9jqV: // global
           R2 = _s9iX9::I64;
           Sp = Sp - 16;
           call GHC.Integer.Type.wordToInteger_entry(R2) args: 24, res: 0, upd: 24;
       c9jqW: // global
           R2 = _s9iX9::I64;
           Sp = Sp - 16;
           call GHC.Integer.Type.smallInteger_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 sat_s9iXk_entry() //  [R1]
         { info_tbl: [(c9jrd,
                       label: sat_s9iXk_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jrd: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9jre; else goto c9jrf;
       c9jre: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jrf: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c9jra_info;
           R4 = P64[R1 + 24];
           R3 = P64[R1 + 16];
           R2 = 11;
           Sp = Sp - 24;
           call GHC.Show.$w$cshowsPrec4_entry(R4,
                                              R3,
                                              R2) args: 8, res: 8, upd: 24;
     }
 },
 _c9jra() //  [R1, R2]
         { info_tbl: [(c9jra,
                       label: block_c9jra_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jra: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9jri; else goto c9jrh;
       c9jri: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c9jrh: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 sat_s9iXl_entry() //  [R1, R2]
         { info_tbl: [(c9jrj,
                       label: sat_s9iXl_info
                       rep:HeapRep 1 ptrs { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jrj: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c9jrn; else goto c9jrm;
       c9jrn: // global
           HpAlloc = 32;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9jrm: // global
           _s9iXc::P64 = P64[R1 + 7];
           I64[Hp - 24] = sat_s9iXk_info;
           P64[Hp - 8] = _s9iXc::P64;
           P64[Hp] = R2;
           R3 = Hp - 24;
           R2 = GHC.Event.Internal.$fShowTimeout5_bytes;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 sat_s9iXr_entry() //  [R1]
         { info_tbl: [(c9jrG,
                       label: sat_s9iXr_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jrG: // global
           _s9iXr::P64 = R1;
           if ((Sp + -24) < SpLim) (likely: False) goto c9jrH; else goto c9jrI;
       c9jrI: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9jrK; else goto c9jrJ;
       c9jrK: // global
           HpAlloc = 24;
           goto c9jrH;
       c9jrH: // global
           R1 = _s9iXr::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jrJ: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s9iXr::P64;
           _s9iXc::P64 = P64[_s9iXr::P64 + 16];
           _s9iXm::P64 = P64[_s9iXr::P64 + 24];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.$fShow(,)2_closure;
           P64[Hp] = _s9iXm::P64;
           I64[Sp - 24] = block_c9jrD_info;
           R4 = Hp - 14;
           R3 = _s9iXc::P64;
           R2 = 11;
           Sp = Sp - 24;
           call GHC.Show.$w$cshowsPrec4_entry(R4,
                                              R3,
                                              R2) args: 8, res: 8, upd: 24;
     }
 },
 _c9jrD() //  [R1, R2]
         { info_tbl: [(c9jrD,
                       label: block_c9jrD_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jrD: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9jrN; else goto c9jrM;
       c9jrN: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c9jrM: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 sat_s9iXs_entry() //  [R1]
         { info_tbl: [(c9jrO,
                       label: sat_s9iXs_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jrO: // global
           _s9iXs::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9jrP; else goto c9jrQ;
       c9jrQ: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c9jrS; else goto c9jrR;
       c9jrS: // global
           HpAlloc = 32;
           goto c9jrP;
       c9jrP: // global
           R1 = _s9iXs::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jrR: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s9iXs::P64;
           _s9iXc::P64 = P64[_s9iXs::P64 + 16];
           _s9iXm::P64 = P64[_s9iXs::P64 + 24];
           I64[Hp - 24] = sat_s9iXr_info;
           P64[Hp - 8] = _s9iXc::P64;
           P64[Hp] = _s9iXm::P64;
           R3 = Hp - 24;
           R2 = GHC.Event.Internal.$fShowTimeout5_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 24, res: 0, upd: 24;
     }
 },
 sat_s9iXt_entry() //  [R1, R2]
         { info_tbl: [(c9jrU,
                       label: sat_s9iXt_info
                       rep:HeapRep 1 ptrs { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jrU: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c9jrY; else goto c9jrX;
       c9jrY: // global
           HpAlloc = 56;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9jrX: // global
           _s9iXc::P64 = P64[R1 + 7];
           I64[Hp - 48] = sat_s9iXs_info;
           P64[Hp - 32] = _s9iXc::P64;
           P64[Hp - 24] = R2;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.$fShow(,)4_closure;
           P64[Hp] = Hp - 48;
           R1 = Hp - 14;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.Event.Internal.$fShowTimeout_$cshowsPrec_entry() //  [R2, R3]
         { info_tbl: [(c9js3,
                       label: GHC.Event.Internal.$fShowTimeout_$cshowsPrec_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9js3: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9js4; else goto c9js5;
       c9js4: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fShowTimeout_$cshowsPrec_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9js5: // global
           I64[Sp - 16] = block_c9jqz_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9jsh; else goto c9jqA;
       u9jsh: // global
           call _c9jqz(R1) args: 0, res: 0, upd: 0;
       c9jqA: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jqz() //  [R1]
         { info_tbl: [(c9jqz,
                       label: block_c9jqz_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jqz: // global
           if (R1 & 7 == 1) goto c9js0; else goto c9js1;
       c9js0: // global
           I64[Sp] = block_c9jqE_info;
           _s9iX9::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9iX9::I64;
           if (R1 & 7 != 0) goto u9jsg; else goto c9jqF;
       u9jsg: // global
           call _c9jqE(R1) args: 0, res: 0, upd: 0;
       c9jqF: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c9js1: // global
           R1 = GHC.Event.Internal.$fShowTimeout2_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9jqE() //  [R1]
         { info_tbl: [(c9jqE,
                       label: block_c9jqE_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jqE: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c9js9; else goto c9js8;
       c9js9: // global
           HpAlloc = 40;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9js8: // global
           _s9iXb::I64 = I64[R1 + 7];
           I64[Hp - 32] = w1_s9iXc_info;
           I64[Hp - 16] = I64[Sp + 8];
           _c9jqJ::P64 = Hp - 32;
           if (%MO_S_Lt_W64(_s9iXb::I64, 11)) goto c9jsb; else goto c9jsc;
       c9jsb: // global
           I64[Hp - 8] = sat_s9iXl_info;
           P64[Hp] = _c9jqJ::P64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9jsc: // global
           I64[Hp - 8] = sat_s9iXt_info;
           P64[Hp] = _c9jqJ::P64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.354858493 UTC

[section ""data" . GHC.Event.Internal.$fShowTimeout_$cshow_closure" {
     GHC.Event.Internal.$fShowTimeout_$cshow_closure:
         const GHC.Event.Internal.$fShowTimeout_$cshow_info;
         const 0;
 },
 sat_s9iXH_entry() //  [R1]
         { info_tbl: [(c9jsx,
                       label: sat_s9iXH_info
                       rep:HeapRep 1 nonptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jsx: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9jsy; else goto c9jt3;
       c9jsy: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jt3: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           _s9iXw::I64 = I64[R1 + 16];
           if (%MO_S_Lt_W64(_s9iXw::I64, 0)) goto c9jsL; else goto c9jsY;
       c9jsL: // global
           I64[Sp - 24] = block_c9jsD_info;
           R2 = _s9iXw::I64;
           Sp = Sp - 24;
           call GHC.Integer.Type.wordToInteger_entry(R2) args: 8, res: 8, upd: 24;
       c9jsY: // global
           I64[Sp - 24] = block_c9jsR_info;
           R2 = _s9iXw::I64;
           Sp = Sp - 24;
           call GHC.Integer.Type.smallInteger_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 _c9jsD() //  [R1]
         { info_tbl: [(c9jsD,
                       label: block_c9jsD_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jsD: // global
           I64[Sp] = block_c9jsH_info;
           R4 = GHC.Types.[]_closure+1;
           R3 = R1;
           R2 = 11;
           call GHC.Show.$w$cshowsPrec4_entry(R4,
                                              R3,
                                              R2) args: 8, res: 8, upd: 24;
     }
 },
 _c9jsH() //  [R1, R2]
         { info_tbl: [(c9jsH,
                       label: block_c9jsH_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jsH: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9jsP; else goto c9jsO;
       c9jsP: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c9jsO: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 _c9jsR() //  [R1]
         { info_tbl: [(c9jsR,
                       label: block_c9jsR_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jsR: // global
           I64[Sp] = block_c9jsV_info;
           R4 = GHC.Types.[]_closure+1;
           R3 = R1;
           R2 = 11;
           call GHC.Show.$w$cshowsPrec4_entry(R4,
                                              R3,
                                              R2) args: 8, res: 8, upd: 24;
     }
 },
 _c9jsV() //  [R1, R2]
         { info_tbl: [(c9jsV,
                       label: block_c9jsV_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jsV: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9jt2; else goto c9jt1;
       c9jt2: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c9jt1: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 GHC.Event.Internal.$fShowTimeout_$cshow_entry() //  [R2]
         { info_tbl: [(c9jt8,
                       label: GHC.Event.Internal.$fShowTimeout_$cshow_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jt8: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9jt9; else goto c9jta;
       c9jt9: // global
           R2 = R2;
           R1 = GHC.Event.Internal.$fShowTimeout_$cshow_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9jta: // global
           I64[Sp - 8] = block_c9jsm_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9jth; else goto c9jsn;
       u9jth: // global
           call _c9jsm(R1) args: 0, res: 0, upd: 0;
       c9jsn: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jsm() //  [R1]
         { info_tbl: [(c9jsm,
                       label: block_c9jsm_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jsm: // global
           if (R1 & 7 == 1) goto c9jt5; else goto c9jt6;
       c9jt5: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9jtd; else goto c9jtc;
       c9jtd: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9jtc: // global
           _s9iXw::I64 = I64[R1 + 7];
           I64[Hp - 16] = sat_s9iXH_info;
           I64[Hp] = _s9iXw::I64;
           R3 = Hp - 16;
           R2 = GHC.Event.Internal.$fShowTimeout5_bytes;
           Sp = Sp + 8;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
       c9jt6: // global
           R1 = GHC.Event.Internal.$fShowTimeout3_closure;
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.357189539 UTC

[section ""data" . GHC.Event.Internal.$fShowTimeout1_closure" {
     GHC.Event.Internal.$fShowTimeout1_closure:
         const GHC.Event.Internal.$fShowTimeout1_info;
         const 0;
 },
 GHC.Event.Internal.$fShowTimeout1_entry() //  [R2]
         { info_tbl: [(c9jtm,
                       label: GHC.Event.Internal.$fShowTimeout1_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jtm: // global
           R3 = R2;
           R2 = GHC.Event.Internal.$fMonoidEventLifetime1_closure+1;
           call GHC.Event.Internal.$fShowTimeout_$cshowsPrec_entry(R3,
                                                                   R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.358204091 UTC

[section ""data" . GHC.Event.Internal.$fShowTimeout_$cshowList_closure" {
     GHC.Event.Internal.$fShowTimeout_$cshowList_closure:
         const GHC.Event.Internal.$fShowTimeout_$cshowList_info;
         const 0;
 },
 GHC.Event.Internal.$fShowTimeout_$cshowList_entry() //  [R2, R3]
         { info_tbl: [(c9jtt,
                       label: GHC.Event.Internal.$fShowTimeout_$cshowList_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jtt: // global
           R4 = R3;
           R3 = R2;
           R2 = GHC.Event.Internal.$fShowTimeout1_closure+1;
           call GHC.Show.showList___entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.3590014 UTC

[section ""data" . GHC.Event.Internal.$fShowTimeout_closure" {
     GHC.Event.Internal.$fShowTimeout_closure:
         const GHC.Show.C:Show_con_info;
         const GHC.Event.Internal.$fShowTimeout_$cshowsPrec_closure+2;
         const GHC.Event.Internal.$fShowTimeout_$cshow_closure+1;
         const GHC.Event.Internal.$fShowTimeout_$cshowList_closure+2;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.359614648 UTC

[section ""cstring" . GHC.Event.Internal.$fShowEventLifetime2_bytes" {
     GHC.Event.Internal.$fShowEventLifetime2_bytes:
         I8[] [69,76,32]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.362894969 UTC

[section ""data" . GHC.Event.Internal.$w$cshowsPrec_closure" {
     GHC.Event.Internal.$w$cshowsPrec_closure:
         const GHC.Event.Internal.$w$cshowsPrec_info;
 },
 sat_s9iXT_entry() //  [R1]
         { info_tbl: [(c9jtK,
                       label: sat_s9iXT_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jtK: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c9jtQ; else goto c9jtR;
       c9jtQ: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jtR: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 32] = block_c9jtH_info;
           _s9iXM::P64 = P64[R1 + 24];
           R1 = P64[R1 + 16];
           P64[Sp - 24] = _s9iXM::P64;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u9jtW; else goto c9jtI;
       u9jtW: // global
           call _c9jtH(R1) args: 0, res: 0, upd: 0;
       c9jtI: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 _c9jtH() //  [R1]
         { info_tbl: [(c9jtH,
                       label: block_c9jtH_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jtH: // global
           _s9iXM::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c9jtN_info;
           R4 = _s9iXM::P64;
           R3 = I64[R1 + 7];
           R2 = 11;
           Sp = Sp + 8;
           call GHC.Show.$wshowSignedInt_entry(R4,
                                               R3,
                                               R2) args: 8, res: 8, upd: 24;
     }
 },
 _c9jtN() //  [R1, R2]
         { info_tbl: [(c9jtN,
                       label: block_c9jtN_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jtN: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9jtV; else goto c9jtU;
       c9jtV: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c9jtU: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 sat_s9iY0_entry() //  [R1]
         { info_tbl: [(c9ju9,
                       label: sat_s9iY0_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ju9: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c9jug; else goto c9juh;
       c9jug: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9juh: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 32] = block_c9ju6_info;
           _s9iXM::P64 = P64[R1 + 24];
           R1 = P64[R1 + 16];
           P64[Sp - 24] = _s9iXM::P64;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u9juo; else goto c9ju7;
       u9juo: // global
           call _c9ju6(R1) args: 0, res: 0, upd: 0;
       c9ju7: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 _c9ju6() //  [R1]
         { info_tbl: [(c9ju6,
                       label: block_c9ju6_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ju6: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9juk; else goto c9juj;
       c9juk: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 24;
       c9juj: // global
           _s9iXV::I64 = I64[R1 + 7];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.$fShow(,)2_closure;
           P64[Hp] = P64[Sp + 8];
           I64[Sp + 8] = block_c9jud_info;
           R4 = Hp - 14;
           R3 = _s9iXV::I64;
           R2 = 11;
           Sp = Sp + 8;
           call GHC.Show.$wshowSignedInt_entry(R4,
                                               R3,
                                               R2) args: 8, res: 8, upd: 24;
     }
 },
 _c9jud() //  [R1, R2]
         { info_tbl: [(c9jud,
                       label: block_c9jud_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jud: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9jun; else goto c9jum;
       c9jun: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c9jum: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 sat_s9iY1_entry() //  [R1]
         { info_tbl: [(c9jup,
                       label: sat_s9iY1_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jup: // global
           _s9iY1::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9juq; else goto c9jur;
       c9jur: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c9jut; else goto c9jus;
       c9jut: // global
           HpAlloc = 32;
           goto c9juq;
       c9juq: // global
           R1 = _s9iY1::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jus: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s9iY1::P64;
           _s9iXL::P64 = P64[_s9iY1::P64 + 16];
           _s9iXM::P64 = P64[_s9iY1::P64 + 24];
           I64[Hp - 24] = sat_s9iY0_info;
           P64[Hp - 8] = _s9iXL::P64;
           P64[Hp] = _s9iXM::P64;
           R3 = Hp - 24;
           R2 = GHC.Event.Internal.$fShowEventLifetime2_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 24, res: 0, upd: 24;
     }
 },
 GHC.Event.Internal.$w$cshowsPrec_entry() //  [R2, R3, R4]
         { info_tbl: [(c9jux,
                       label: GHC.Event.Internal.$w$cshowsPrec_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 19} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jux: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c9juB; else goto c9juA;
       c9juB: // global
           HpAlloc = 56;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$w$cshowsPrec_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9juA: // global
           if (%MO_S_Lt_W64(R2, 11)) goto c9juv; else goto c9juw;
       c9juv: // global
           I64[Hp - 48] = sat_s9iXT_info;
           P64[Hp - 32] = R3;
           P64[Hp - 24] = R4;
           _c9jtD::P64 = Hp - 48;
           Hp = Hp - 24;
           R3 = _c9jtD::P64;
           R2 = GHC.Event.Internal.$fShowEventLifetime2_bytes;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
       c9juw: // global
           I64[Hp - 48] = sat_s9iY1_info;
           P64[Hp - 32] = R3;
           P64[Hp - 24] = R4;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.$fShow(,)4_closure;
           P64[Hp] = Hp - 48;
           R1 = Hp - 14;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.36607684 UTC

[section ""data" . GHC.Event.Internal.$fShowEventLifetime_$cshowsPrec_closure" {
     GHC.Event.Internal.$fShowEventLifetime_$cshowsPrec_closure:
         const GHC.Event.Internal.$fShowEventLifetime_$cshowsPrec_info;
 },
 GHC.Event.Internal.$fShowEventLifetime_$cshowsPrec_entry() //  [R2,
                                                                 R3, R4]
         { info_tbl: [(c9juK,
                       label: GHC.Event.Internal.$fShowEventLifetime_$cshowsPrec_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9juK: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9juL; else goto c9juM;
       c9juL: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fShowEventLifetime_$cshowsPrec_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9juM: // global
           I64[Sp - 24] = block_c9juH_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9juQ; else goto c9juI;
       u9juQ: // global
           call _c9juH(R1) args: 0, res: 0, upd: 0;
       c9juI: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9juH() //  [R1]
         { info_tbl: [(c9juH,
                       label: block_c9juH_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9juH: // global
           R4 = P64[Sp + 16];
           R3 = P64[Sp + 8];
           R2 = I64[R1 + 7];
           Sp = Sp + 24;
           call GHC.Event.Internal.$w$cshowsPrec_entry(R4,
                                                       R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.367544503 UTC

[section ""data" . GHC.Event.Internal.$fShowEventLifetime_$cshow_closure" {
     GHC.Event.Internal.$fShowEventLifetime_$cshow_closure:
         const GHC.Event.Internal.$fShowEventLifetime_$cshow_info;
 },
 sat_s9iYd_entry() //  [R1]
         { info_tbl: [(c9jv2,
                       label: sat_s9iYd_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jv2: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9jv8; else goto c9jv9;
       c9jv8: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jv9: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c9juZ_info;
           R1 = P64[R1 + 16];
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9jve; else goto c9jv0;
       u9jve: // global
           call _c9juZ(R1) args: 0, res: 0, upd: 0;
       c9jv0: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 _c9juZ() //  [R1]
         { info_tbl: [(c9juZ,
                       label: block_c9juZ_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9juZ: // global
           I64[Sp] = block_c9jv5_info;
           R4 = GHC.Types.[]_closure+1;
           R3 = I64[R1 + 7];
           R2 = 11;
           call GHC.Show.$wshowSignedInt_entry(R4,
                                               R3,
                                               R2) args: 8, res: 8, upd: 24;
     }
 },
 _c9jv5() //  [R1, R2]
         { info_tbl: [(c9jv5,
                       label: block_c9jv5_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jv5: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9jvd; else goto c9jvc;
       c9jvd: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c9jvc: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 GHC.Event.Internal.$fShowEventLifetime_$cshow_entry() //  [R2]
         { info_tbl: [(c9jvf,
                       label: GHC.Event.Internal.$fShowEventLifetime_$cshow_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jvf: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9jvj; else goto c9jvi;
       c9jvj: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = GHC.Event.Internal.$fShowEventLifetime_$cshow_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9jvi: // global
           I64[Hp - 16] = sat_s9iYd_info;
           P64[Hp] = R2;
           R3 = Hp - 16;
           R2 = GHC.Event.Internal.$fShowEventLifetime2_bytes;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.369112837 UTC

[section ""data" . GHC.Event.Internal.$fShowEventLifetime1_closure" {
     GHC.Event.Internal.$fShowEventLifetime1_closure:
         const GHC.Event.Internal.$fShowEventLifetime1_info;
 },
 GHC.Event.Internal.$fShowEventLifetime1_entry() //  [R2, R3]
         { info_tbl: [(c9jvo,
                       label: GHC.Event.Internal.$fShowEventLifetime1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jvo: // global
           R4 = R3;
           R3 = R2;
           R2 = 0;
           call GHC.Event.Internal.$w$cshowsPrec_entry(R4,
                                                       R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.369975541 UTC

[section ""data" . GHC.Event.Internal.$fShowEventLifetime_$cshowList_closure" {
     GHC.Event.Internal.$fShowEventLifetime_$cshowList_closure:
         const GHC.Event.Internal.$fShowEventLifetime_$cshowList_info;
 },
 GHC.Event.Internal.$fShowEventLifetime_$cshowList_entry() //  [R2,
                                                                R3]
         { info_tbl: [(c9jvv,
                       label: GHC.Event.Internal.$fShowEventLifetime_$cshowList_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jvv: // global
           R4 = R3;
           R3 = R2;
           R2 = GHC.Event.Internal.$fShowEventLifetime1_closure+2;
           call GHC.Show.showList___entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.370725386 UTC

[section ""data" . GHC.Event.Internal.$fShowEventLifetime_closure" {
     GHC.Event.Internal.$fShowEventLifetime_closure:
         const GHC.Show.C:Show_con_info;
         const GHC.Event.Internal.$fShowEventLifetime_$cshowsPrec_closure+3;
         const GHC.Event.Internal.$fShowEventLifetime_$cshow_closure+1;
         const GHC.Event.Internal.$fShowEventLifetime_$cshowList_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.371883271 UTC

[section ""data" . GHC.Event.Internal.$fEqLifetime_$c==_closure" {
     GHC.Event.Internal.$fEqLifetime_$c==_closure:
         const GHC.Event.Internal.$fEqLifetime_$c==_info;
 },
 GHC.Event.Internal.$fEqLifetime_$c==_entry() //  [R2, R3]
         { info_tbl: [(c9jvJ,
                       label: GHC.Event.Internal.$fEqLifetime_$c==_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jvJ: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9jvK; else goto c9jvL;
       c9jvK: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fEqLifetime_$c==_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9jvL: // global
           I64[Sp - 16] = block_c9jvC_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9jwo; else goto c9jvD;
       u9jwo: // global
           call _c9jvC(R1) args: 0, res: 0, upd: 0;
       c9jvD: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jvC() //  [R1]
         { info_tbl: [(c9jvC,
                       label: block_c9jvC_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jvC: // global
           _s9iYj::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c9jvG; else goto c9jvH;
       c9jvG: // global
           I64[Sp + 8] = block_c9jvO_info;
           R1 = _s9iYj::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u9jwm; else goto c9jvQ;
       u9jwm: // global
           call _c9jvO(R1) args: 0, res: 0, upd: 0;
       c9jvQ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c9jvH: // global
           I64[Sp + 8] = block_c9jw3_info;
           R1 = _s9iYj::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u9jwn; else goto c9jw5;
       u9jwn: // global
           call _c9jw3(R1) args: 0, res: 0, upd: 0;
       c9jw5: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jvO() //  [R1]
         { info_tbl: [(c9jvO,
                       label: block_c9jvO_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jvO: // global
           if (R1 & 7 == 1) goto u9jwk; else goto u9jwl;
       u9jwk: // global
           Sp = Sp + 8;
           call _c9jwf() args: 0, res: 0, upd: 0;
       u9jwl: // global
           Sp = Sp + 8;
           call _c9jwb() args: 0, res: 0, upd: 0;
     }
 },
 _c9jw3() //  [R1]
         { info_tbl: [(c9jw3,
                       label: block_c9jw3_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jw3: // global
           if (R1 & 7 == 1) goto u9jwi; else goto u9jwj;
       u9jwi: // global
           Sp = Sp + 8;
           call _c9jwb() args: 0, res: 0, upd: 0;
       u9jwj: // global
           Sp = Sp + 8;
           call _c9jwf() args: 0, res: 0, upd: 0;
     }
 },
 _c9jwb() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jwb: // global
           R1 = GHC.Types.False_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9jwf() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jwf: // global
           R1 = GHC.Types.True_closure+2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.374067164 UTC

[section ""data" . GHC.Event.Internal.$fEqLifetime_$c/=_closure" {
     GHC.Event.Internal.$fEqLifetime_$c/=_closure:
         const GHC.Event.Internal.$fEqLifetime_$c/=_info;
 },
 GHC.Event.Internal.$fEqLifetime_$c/=_entry() //  [R2, R3]
         { info_tbl: [(c9jwE,
                       label: GHC.Event.Internal.$fEqLifetime_$c/=_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jwE: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9jwF; else goto c9jwG;
       c9jwF: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fEqLifetime_$c/=_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9jwG: // global
           I64[Sp - 16] = block_c9jwx_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9jxj; else goto c9jwy;
       u9jxj: // global
           call _c9jwx(R1) args: 0, res: 0, upd: 0;
       c9jwy: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jwx() //  [R1]
         { info_tbl: [(c9jwx,
                       label: block_c9jwx_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jwx: // global
           _s9iYo::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c9jwB; else goto c9jwC;
       c9jwB: // global
           I64[Sp + 8] = block_c9jwJ_info;
           R1 = _s9iYo::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u9jxh; else goto c9jwL;
       u9jxh: // global
           call _c9jwJ(R1) args: 0, res: 0, upd: 0;
       c9jwL: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c9jwC: // global
           I64[Sp + 8] = block_c9jwY_info;
           R1 = _s9iYo::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u9jxi; else goto c9jx0;
       u9jxi: // global
           call _c9jwY(R1) args: 0, res: 0, upd: 0;
       c9jx0: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jwJ() //  [R1]
         { info_tbl: [(c9jwJ,
                       label: block_c9jwJ_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jwJ: // global
           if (R1 & 7 == 1) goto u9jxf; else goto u9jxg;
       u9jxf: // global
           Sp = Sp + 8;
           call _c9jxa() args: 0, res: 0, upd: 0;
       u9jxg: // global
           Sp = Sp + 8;
           call _c9jx6() args: 0, res: 0, upd: 0;
     }
 },
 _c9jwY() //  [R1]
         { info_tbl: [(c9jwY,
                       label: block_c9jwY_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jwY: // global
           if (R1 & 7 == 1) goto u9jxd; else goto u9jxe;
       u9jxd: // global
           Sp = Sp + 8;
           call _c9jx6() args: 0, res: 0, upd: 0;
       u9jxe: // global
           Sp = Sp + 8;
           call _c9jxa() args: 0, res: 0, upd: 0;
     }
 },
 _c9jx6() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jx6: // global
           R1 = GHC.Types.True_closure+2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9jxa() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jxa: // global
           R1 = GHC.Types.False_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.375583781 UTC

[section ""data" . GHC.Event.Internal.$fEqLifetime_closure" {
     GHC.Event.Internal.$fEqLifetime_closure:
         const GHC.Classes.C:Eq_con_info;
         const GHC.Event.Internal.$fEqLifetime_$c==_closure+2;
         const GHC.Event.Internal.$fEqLifetime_$c/=_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.376177001 UTC

[section ""cstring" . GHC.Event.Internal.$fShowLifetime5_bytes" {
     GHC.Event.Internal.$fShowLifetime5_bytes:
         I8[] [79,110,101,83,104,111,116]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.376941495 UTC

[section ""data" . GHC.Event.Internal.$fShowLifetime4_closure" {
     GHC.Event.Internal.$fShowLifetime4_closure:
         const GHC.Event.Internal.$fShowLifetime4_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Internal.$fShowLifetime4_entry() //  [R1]
         { info_tbl: [(c9jxu,
                       label: GHC.Event.Internal.$fShowLifetime4_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jxu: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9jxv; else goto c9jxw;
       c9jxv: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jxw: // global
           (_c9jxr::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9jxr::I64 == 0) goto c9jxt; else goto c9jxs;
       c9jxt: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9jxs: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9jxr::I64;
           R2 = GHC.Event.Internal.$fShowLifetime5_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.377883826 UTC

[section ""cstring" . GHC.Event.Internal.$fShowLifetime3_bytes" {
     GHC.Event.Internal.$fShowLifetime3_bytes:
         I8[] [77,117,108,116,105,83,104,111,116]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.378634224 UTC

[section ""data" . GHC.Event.Internal.$fShowLifetime2_closure" {
     GHC.Event.Internal.$fShowLifetime2_closure:
         const GHC.Event.Internal.$fShowLifetime2_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Internal.$fShowLifetime2_entry() //  [R1]
         { info_tbl: [(c9jxD,
                       label: GHC.Event.Internal.$fShowLifetime2_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jxD: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9jxE; else goto c9jxF;
       c9jxE: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jxF: // global
           (_c9jxA::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9jxA::I64 == 0) goto c9jxC; else goto c9jxB;
       c9jxC: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9jxB: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9jxA::I64;
           R2 = GHC.Event.Internal.$fShowLifetime3_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.379764358 UTC

[section ""data" . GHC.Event.Internal.$fShowLifetime_$cshowsPrec_closure" {
     GHC.Event.Internal.$fShowLifetime_$cshowsPrec_closure:
         const GHC.Event.Internal.$fShowLifetime_$cshowsPrec_info;
         const 0;
 },
 GHC.Event.Internal.$fShowLifetime_$cshowsPrec_entry() //  [R2, R3,
                                                            R4]
         { info_tbl: [(c9jxR,
                       label: GHC.Event.Internal.$fShowLifetime_$cshowsPrec_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jxR: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9jxS; else goto c9jxT;
       c9jxS: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fShowLifetime_$cshowsPrec_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9jxT: // global
           I64[Sp - 16] = block_c9jxK_info;
           R1 = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9jy0; else goto c9jxL;
       u9jy0: // global
           call _c9jxK(R1) args: 0, res: 0, upd: 0;
       c9jxL: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jxK() //  [R1]
         { info_tbl: [(c9jxK,
                       label: block_c9jxK_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jxK: // global
           _s9iYu::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c9jxO; else goto c9jxP;
       c9jxO: // global
           R3 = _s9iYu::P64;
           R2 = GHC.Event.Internal.$fShowLifetime4_closure;
           Sp = Sp + 16;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
       c9jxP: // global
           R3 = _s9iYu::P64;
           R2 = GHC.Event.Internal.$fShowLifetime2_closure;
           Sp = Sp + 16;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.381112295 UTC

[section ""data" . GHC.Event.Internal.$fShowLifetime_$cshow_closure" {
     GHC.Event.Internal.$fShowLifetime_$cshow_closure:
         const GHC.Event.Internal.$fShowLifetime_$cshow_info;
         const 0;
 },
 GHC.Event.Internal.$fShowLifetime_$cshow_entry() //  [R2]
         { info_tbl: [(c9jyc,
                       label: GHC.Event.Internal.$fShowLifetime_$cshow_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jyc: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9jyd; else goto c9jye;
       c9jyd: // global
           R2 = R2;
           R1 = GHC.Event.Internal.$fShowLifetime_$cshow_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9jye: // global
           I64[Sp - 8] = block_c9jy5_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9jyl; else goto c9jy6;
       u9jyl: // global
           call _c9jy5(R1) args: 0, res: 0, upd: 0;
       c9jy6: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jy5() //  [R1]
         { info_tbl: [(c9jy5,
                       label: block_c9jy5_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jy5: // global
           if (R1 & 7 == 1) goto c9jy9; else goto c9jya;
       c9jy9: // global
           R1 = GHC.Event.Internal.$fShowLifetime4_closure;
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c9jya: // global
           R1 = GHC.Event.Internal.$fShowLifetime2_closure;
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.382619909 UTC

[section ""data" . GHC.Event.Internal.$fShowLifetime1_closure" {
     GHC.Event.Internal.$fShowLifetime1_closure:
         const GHC.Event.Internal.$fShowLifetime1_info;
         const 0;
 },
 GHC.Event.Internal.$fShowLifetime1_entry() //  [R2, R3]
         { info_tbl: [(c9jyx,
                       label: GHC.Event.Internal.$fShowLifetime1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jyx: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9jyy; else goto c9jyz;
       c9jyy: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fShowLifetime1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9jyz: // global
           I64[Sp - 16] = block_c9jyq_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9jyG; else goto c9jyr;
       u9jyG: // global
           call _c9jyq(R1) args: 0, res: 0, upd: 0;
       c9jyr: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jyq() //  [R1]
         { info_tbl: [(c9jyq,
                       label: block_c9jyq_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jyq: // global
           _s9iYz::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c9jyu; else goto c9jyv;
       c9jyu: // global
           R3 = _s9iYz::P64;
           R2 = GHC.Event.Internal.$fShowLifetime4_closure;
           Sp = Sp + 16;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
       c9jyv: // global
           R3 = _s9iYz::P64;
           R2 = GHC.Event.Internal.$fShowLifetime2_closure;
           Sp = Sp + 16;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.383837319 UTC

[section ""data" . GHC.Event.Internal.$fShowLifetime_$cshowList_closure" {
     GHC.Event.Internal.$fShowLifetime_$cshowList_closure:
         const GHC.Event.Internal.$fShowLifetime_$cshowList_info;
         const 0;
 },
 GHC.Event.Internal.$fShowLifetime_$cshowList_entry() //  [R2, R3]
         { info_tbl: [(c9jyL,
                       label: GHC.Event.Internal.$fShowLifetime_$cshowList_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jyL: // global
           R4 = R3;
           R3 = R2;
           R2 = GHC.Event.Internal.$fShowLifetime1_closure+2;
           call GHC.Show.showList___entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.384555099 UTC

[section ""data" . GHC.Event.Internal.$fShowLifetime_closure" {
     GHC.Event.Internal.$fShowLifetime_closure:
         const GHC.Show.C:Show_con_info;
         const GHC.Event.Internal.$fShowLifetime_$cshowsPrec_closure+3;
         const GHC.Event.Internal.$fShowLifetime_$cshow_closure+1;
         const GHC.Event.Internal.$fShowLifetime_$cshowList_closure+2;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.385132599 UTC

[section ""data" . GHC.Event.Internal._beDelete_closure" {
     GHC.Event.Internal._beDelete_closure:
         const ()_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.385736369 UTC

[section ""data" . GHC.Event.Internal._beModifyFdOnce_closure" {
     GHC.Event.Internal._beModifyFdOnce_closure:
         const ()_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.386313093 UTC

[section ""data" . GHC.Event.Internal._beModifyFd_closure" {
     GHC.Event.Internal._beModifyFd_closure:
         const ()_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.386860722 UTC

[section ""data" . GHC.Event.Internal._bePoll_closure" {
     GHC.Event.Internal._bePoll_closure:
         const ()_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.38742145 UTC

[section ""data" . GHC.Event.Internal._beState_closure" {
     GHC.Event.Internal._beState_closure:
         const ()_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.38797753 UTC

[section ""data" . GHC.Event.Internal.evtNothing_closure" {
     GHC.Event.Internal.evtNothing_closure:
         const stg_IND_STATIC_info;
         const GHC.Event.Internal.$fMonoidEventLifetime1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.388541048 UTC

[section ""data" . evtRead1_r9iWk_closure" {
     evtRead1_r9iWk_closure:
         const GHC.Types.I#_con_info;
         const 1;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.38911059 UTC

[section ""data" . GHC.Event.Internal.evtRead_closure" {
     GHC.Event.Internal.evtRead_closure:
         const stg_IND_STATIC_info;
         const evtRead1_r9iWk_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.389878795 UTC

[section ""data" . evtWrite1_r9iWl_closure" {
     evtWrite1_r9iWl_closure:
         const GHC.Types.I#_con_info;
         const 2;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.390400221 UTC

[section ""data" . GHC.Event.Internal.evtWrite_closure" {
     GHC.Event.Internal.evtWrite_closure:
         const stg_IND_STATIC_info;
         const evtWrite1_r9iWl_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.390975316 UTC

[section ""data" . evtClose1_r9iWm_closure" {
     evtClose1_r9iWm_closure:
         const GHC.Types.I#_con_info;
         const 4;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.391510635 UTC

[section ""data" . GHC.Event.Internal.evtClose_closure" {
     GHC.Event.Internal.evtClose_closure:
         const stg_IND_STATIC_info;
         const evtClose1_r9iWm_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.392404389 UTC

[section ""data" . GHC.Event.Internal.elSupremum_closure" {
     GHC.Event.Internal.elSupremum_closure:
         const GHC.Event.Internal.elSupremum_info;
 },
 GHC.Event.Internal.elSupremum_entry() //  [R2, R3]
         { info_tbl: [(c9jyZ,
                       label: GHC.Event.Internal.elSupremum_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jyZ: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9jz0; else goto c9jz1;
       c9jz0: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.elSupremum_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9jz1: // global
           I64[Sp - 16] = block_c9jyS_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9jz8; else goto c9jyT;
       u9jz8: // global
           call _c9jyS(R1) args: 0, res: 0, upd: 0;
       c9jyT: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jyS() //  [R1]
         { info_tbl: [(c9jyS,
                       label: block_c9jyS_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jyS: // global
           if (R1 & 7 == 1) goto c9jyW; else goto c9jyX;
       c9jyW: // global
           R1 = P64[Sp + 8] & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c9jyX: // global
           R1 = GHC.Event.Internal.MultiShot_closure+2;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.393970426 UTC

[section ""data" . GHC.Event.Internal.$fSemigroupLifetime_go_closure" {
     GHC.Event.Internal.$fSemigroupLifetime_go_closure:
         const GHC.Event.Internal.$fSemigroupLifetime_go_info;
 },
 GHC.Event.Internal.$fSemigroupLifetime_go_entry() //  [R2, R3]
         { info_tbl: [(c9jzk,
                       label: GHC.Event.Internal.$fSemigroupLifetime_go_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jzk: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9jzl; else goto u9jzG;
       c9jzl: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fSemigroupLifetime_go_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       u9jzG: // global
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           call _c9jza() args: 0, res: 0, upd: 0;
     }
 },
 _c9jza() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jza: // global
           I64[Sp - 8] = block_c9jzd_info;
           R1 = P64[Sp + 8];
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9jzI; else goto c9jze;
       u9jzI: // global
           call _c9jzd(R1) args: 0, res: 0, upd: 0;
       c9jze: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jzd() //  [R1]
         { info_tbl: [(c9jzd,
                       label: block_c9jzd_info
                       rep:StackRep [False, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jzd: // global
           _s9iYG::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c9jzh; else goto c9jzi;
       c9jzh: // global
           R1 = _s9iYG::P64 & (-8);
           Sp = Sp + 24;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c9jzi: // global
           I64[Sp] = block_c9jzs_info;
           _s9iYJ::P64 = P64[R1 + 6];
           _s9iYK::P64 = P64[R1 + 14];
           R1 = _s9iYG::P64;
           P64[Sp + 8] = _s9iYK::P64;
           P64[Sp + 16] = _s9iYJ::P64;
           if (R1 & 7 != 0) goto u9jzJ; else goto c9jzu;
       u9jzJ: // global
           call _c9jzs(R1) args: 0, res: 0, upd: 0;
       c9jzu: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jzs() //  [R1]
         { info_tbl: [(c9jzs,
                       label: block_c9jzs_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jzs: // global
           if (R1 & 7 == 1) goto c9jzA; else goto c9jzE;
       c9jzA: // global
           _s9iYH::P64 = P64[Sp + 8];
           P64[Sp + 8] = P64[Sp + 16];
           P64[Sp + 16] = _s9iYH::P64;
           Sp = Sp + 8;
           call _c9jza() args: 0, res: 0, upd: 0;
       c9jzE: // global
           R1 = GHC.Event.Internal.MultiShot_closure+2;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.395626478 UTC

[section ""data" . GHC.Event.Internal.$fSemigroupLifetime_$csconcat_closure" {
     GHC.Event.Internal.$fSemigroupLifetime_$csconcat_closure:
         const GHC.Event.Internal.$fSemigroupLifetime_$csconcat_info;
 },
 GHC.Event.Internal.$fSemigroupLifetime_$csconcat_entry() //  [R2]
         { info_tbl: [(c9jzT,
                       label: GHC.Event.Internal.$fSemigroupLifetime_$csconcat_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jzT: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9jzU; else goto c9jzV;
       c9jzU: // global
           R2 = R2;
           R1 = GHC.Event.Internal.$fSemigroupLifetime_$csconcat_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9jzV: // global
           I64[Sp - 8] = block_c9jzQ_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9jzZ; else goto c9jzR;
       u9jzZ: // global
           call _c9jzQ(R1) args: 0, res: 0, upd: 0;
       c9jzR: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jzQ() //  [R1]
         { info_tbl: [(c9jzQ,
                       label: block_c9jzQ_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jzQ: // global
           R3 = P64[R1 + 15];
           R2 = P64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Event.Internal.$fSemigroupLifetime_go_entry(R3,
                                                                R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.396985104 UTC

[section ""data" . GHC.Event.Internal.$fMonoidLifetime_go_closure" {
     GHC.Event.Internal.$fMonoidLifetime_go_closure:
         const GHC.Event.Internal.$fMonoidLifetime_go_info;
 },
 GHC.Event.Internal.$fMonoidLifetime_go_entry() //  [R2]
         { info_tbl: [(c9jAb,
                       label: GHC.Event.Internal.$fMonoidLifetime_go_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jAb: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9jAc; else goto u9jAx;
       c9jAc: // global
           R2 = R2;
           R1 = GHC.Event.Internal.$fMonoidLifetime_go_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       u9jAx: // global
           P64[Sp - 8] = R2;
           Sp = Sp - 8;
           call _c9jA1() args: 0, res: 0, upd: 0;
     }
 },
 _c9jA1() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jA1: // global
           _s9iYQ::P64 = P64[Sp];
           I64[Sp] = block_c9jA4_info;
           R1 = _s9iYQ::P64;
           if (R1 & 7 != 0) goto u9jAz; else goto c9jA5;
       u9jAz: // global
           call _c9jA4(R1) args: 0, res: 0, upd: 0;
       c9jA5: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jA4() //  [R1]
         { info_tbl: [(c9jA4,
                       label: block_c9jA4_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jA4: // global
           if (R1 & 7 == 1) goto c9jA8; else goto c9jA9;
       c9jA8: // global
           R1 = GHC.Event.Internal.OneShot_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9jA9: // global
           I64[Sp - 8] = block_c9jAj_info;
           _s9iYT::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp] = _s9iYT::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9jAA; else goto c9jAl;
       u9jAA: // global
           call _c9jAj(R1) args: 0, res: 0, upd: 0;
       c9jAl: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jAj() //  [R1]
         { info_tbl: [(c9jAj,
                       label: block_c9jAj_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jAj: // global
           if (R1 & 7 == 1) goto c9jAr; else goto c9jAv;
       c9jAr: // global
           P64[Sp + 8] = P64[Sp + 8];
           Sp = Sp + 8;
           call _c9jA1() args: 0, res: 0, upd: 0;
       c9jAv: // global
           R1 = GHC.Event.Internal.MultiShot_closure+2;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.398732104 UTC

[section ""data" . GHC.Event.Internal.$fSemigroupLifetime_closure" {
     GHC.Event.Internal.$fSemigroupLifetime_closure:
         const GHC.Base.C:Semigroup_con_info;
         const GHC.Event.Internal.elSupremum_closure+2;
         const GHC.Event.Internal.$fSemigroupLifetime_$csconcat_closure+1;
         const GHC.Event.Internal.$fSemigroupLifetime_$cstimes_closure+3;
         const 0;
 },
 section ""data" . GHC.Event.Internal.$fMonoidLifetime_closure" {
     GHC.Event.Internal.$fMonoidLifetime_closure:
         const GHC.Base.C:Monoid_con_info;
         const GHC.Event.Internal.$fSemigroupLifetime_closure+1;
         const GHC.Event.Internal.OneShot_closure+1;
         const GHC.Event.Internal.elSupremum_closure+2;
         const GHC.Event.Internal.$fMonoidLifetime_go_closure+1;
         const 0;
 },
 section ""data" . GHC.Event.Internal.$fSemigroupLifetime_$cstimes_closure" {
     GHC.Event.Internal.$fSemigroupLifetime_$cstimes_closure:
         const GHC.Event.Internal.$fSemigroupLifetime_$cstimes_info;
         const 0;
 },
 GHC.Event.Internal.$fSemigroupLifetime_$cstimes_entry() //  [R2,
                                                              R3, R4]
         { info_tbl: [(c9jAH,
                       label: GHC.Event.Internal.$fSemigroupLifetime_$cstimes_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jAH: // global
           R5 = R4;
           R4 = R3;
           R3 = GHC.Event.Internal.$fMonoidLifetime_closure+1;
           R2 = R2;
           call Data.Semigroup.Internal.stimesMonoid_entry(R5,
                                                           R4,
                                                           R3,
                                                           R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.399726731 UTC

[section ""data" . GHC.Event.Internal.backend_closure" {
     GHC.Event.Internal.backend_closure:
         const GHC.Event.Internal.backend_info;
 },
 GHC.Event.Internal.backend_entry() //  [R2, R3, R4, R5, R6]
         { info_tbl: [(c9jAO,
                       label: GHC.Event.Internal.backend_info
                       rep:HeapRep static { Fun {arity: 5 fun_type: ArgSpec 25} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jAO: // global
           _s9iZ0::P64 = R6;
           R6 = R5;
           R5 = R4;
           R4 = R3;
           R3 = R2;
           R2 = _s9iZ0::P64;
           call GHC.Event.Internal.$WBackend_entry(R6,
                                                   R5,
                                                   R4,
                                                   R3,
                                                   R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.400653566 UTC

[section ""data" . GHC.Event.Internal.poll_closure" {
     GHC.Event.Internal.poll_closure:
         const GHC.Event.Internal.poll_info;
 },
 GHC.Event.Internal.poll_entry() //  [R2]
         { info_tbl: [(c9jAY,
                       label: GHC.Event.Internal.poll_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jAY: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9jAZ; else goto c9jB0;
       c9jAZ: // global
           R2 = R2;
           R1 = GHC.Event.Internal.poll_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9jB0: // global
           I64[Sp - 8] = block_c9jAV_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9jB4; else goto c9jAW;
       u9jB4: // global
           call _c9jAV(R1) args: 0, res: 0, upd: 0;
       c9jAW: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jAV() //  [R1]
         { info_tbl: [(c9jAV,
                       label: block_c9jAV_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jAV: // global
           R2 = P64[R1 + 7];
           R1 = P64[R1 + 15];
           Sp = Sp + 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.401850217 UTC

[section ""data" . GHC.Event.Internal.modifyFd_closure" {
     GHC.Event.Internal.modifyFd_closure:
         const GHC.Event.Internal.modifyFd_info;
 },
 GHC.Event.Internal.modifyFd_entry() //  [R2]
         { info_tbl: [(c9jBc,
                       label: GHC.Event.Internal.modifyFd_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jBc: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9jBd; else goto c9jBe;
       c9jBd: // global
           R2 = R2;
           R1 = GHC.Event.Internal.modifyFd_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9jBe: // global
           I64[Sp - 8] = block_c9jB9_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9jBi; else goto c9jBa;
       u9jBi: // global
           call _c9jB9(R1) args: 0, res: 0, upd: 0;
       c9jBa: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jB9() //  [R1]
         { info_tbl: [(c9jB9,
                       label: block_c9jB9_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jB9: // global
           R2 = P64[R1 + 7];
           R1 = P64[R1 + 23];
           Sp = Sp + 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.403006521 UTC

[section ""data" . GHC.Event.Internal.modifyFdOnce_closure" {
     GHC.Event.Internal.modifyFdOnce_closure:
         const GHC.Event.Internal.modifyFdOnce_info;
 },
 GHC.Event.Internal.modifyFdOnce_entry() //  [R2]
         { info_tbl: [(c9jBq,
                       label: GHC.Event.Internal.modifyFdOnce_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jBq: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9jBr; else goto c9jBs;
       c9jBr: // global
           R2 = R2;
           R1 = GHC.Event.Internal.modifyFdOnce_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9jBs: // global
           I64[Sp - 8] = block_c9jBn_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9jBw; else goto c9jBo;
       u9jBw: // global
           call _c9jBn(R1) args: 0, res: 0, upd: 0;
       c9jBo: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jBn() //  [R1]
         { info_tbl: [(c9jBn,
                       label: block_c9jBn_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jBn: // global
           R2 = P64[R1 + 7];
           R1 = P64[R1 + 31];
           Sp = Sp + 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.404149732 UTC

[section ""data" . GHC.Event.Internal.delete_closure" {
     GHC.Event.Internal.delete_closure:
         const GHC.Event.Internal.delete_info;
 },
 GHC.Event.Internal.delete_entry() //  [R2]
         { info_tbl: [(c9jBE,
                       label: GHC.Event.Internal.delete_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jBE: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9jBF; else goto c9jBG;
       c9jBF: // global
           R2 = R2;
           R1 = GHC.Event.Internal.delete_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9jBG: // global
           I64[Sp - 8] = block_c9jBB_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9jBK; else goto c9jBC;
       u9jBK: // global
           call _c9jBB(R1) args: 0, res: 0, upd: 0;
       c9jBC: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jBB() //  [R1]
         { info_tbl: [(c9jBB,
                       label: block_c9jBB_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jBB: // global
           R2 = P64[R1 + 7];
           R1 = P64[R1 + 39];
           Sp = Sp + 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.405307231 UTC

[section ""data" . GHC.Event.Internal.throwErrnoIfMinus1NoRetry2_closure" {
     GHC.Event.Internal.throwErrnoIfMinus1NoRetry2_closure:
         const GHC.Event.Internal.throwErrnoIfMinus1NoRetry2_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Internal.throwErrnoIfMinus1NoRetry2_entry() //  [R1]
         { info_tbl: [(c9jBR,
                       label: GHC.Event.Internal.throwErrnoIfMinus1NoRetry2_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jBR: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9jBS; else goto c9jBT;
       c9jBS: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jBT: // global
           (_c9jBO::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9jBO::I64 == 0) goto c9jBQ; else goto c9jBP;
       c9jBQ: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9jBP: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9jBO::I64;
           R3 = GHC.Types.[]_closure+1;
           R2 = GHC.Types.True_closure+2;
           Sp = Sp - 16;
           call GHC.Integer.Type.mkInteger_entry(R3,
                                                 R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.406230374 UTC

[section ""data" . sat_s9iZt_closure" {
     sat_s9iZt_closure:
         const GHC.Types.I#_con_info;
         const 1;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.40677806 UTC

[section ""data" . sat_s9iZu_closure" {
     sat_s9iZu_closure:
         const :_con_info;
         const sat_s9iZt_closure+1;
         const GHC.Types.[]_closure+1;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.408852658 UTC

[section ""data" . GHC.Event.Internal.throwErrnoIfMinus1NoRetry3_closure" {
     GHC.Event.Internal.throwErrnoIfMinus1NoRetry3_closure:
         const GHC.Event.Internal.throwErrnoIfMinus1NoRetry3_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Internal.throwErrnoIfMinus1NoRetry3_entry() //  [R1]
         { info_tbl: [(c9jC0,
                       label: GHC.Event.Internal.throwErrnoIfMinus1NoRetry3_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jC0: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9jC1; else goto c9jC2;
       c9jC1: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jC2: // global
           (_c9jBX::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9jBX::I64 == 0) goto c9jBZ; else goto c9jBY;
       c9jBZ: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9jBY: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9jBX::I64;
           R3 = sat_s9iZu_closure+2;
           R2 = GHC.Types.True_closure+2;
           Sp = Sp - 16;
           call GHC.Integer.Type.mkInteger_entry(R3,
                                                 R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.411030355 UTC

[section ""data" . GHC.Event.Internal.throwErrnoIfMinus1NoRetry1_closure" {
     GHC.Event.Internal.throwErrnoIfMinus1NoRetry1_closure:
         const GHC.Event.Internal.throwErrnoIfMinus1NoRetry1_info;
         const 0;
 },
 sat_s9iZD_entry() //  [R1]
         { info_tbl: [(c9jCh,
                       label: sat_s9iZD_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jCh: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c9jCi; else goto c9jCj;
       c9jCi: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jCj: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = GHC.Event.Internal.throwErrnoIfMinus1NoRetry3_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 sat_s9iZE_entry() //  [R1]
         { info_tbl: [(c9jCk,
                       label: sat_s9iZE_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jCk: // global
           _s9iZE::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto c9jCl; else goto c9jCm;
       c9jCm: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9jCo; else goto c9jCn;
       c9jCo: // global
           HpAlloc = 24;
           goto c9jCl;
       c9jCl: // global
           R1 = _s9iZE::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jCn: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s9iZE::P64;
           _s9iZw::P64 = P64[_s9iZE::P64 + 16];
           I64[Hp - 16] = sat_s9iZD_info;
           P64[Hp] = _s9iZw::P64;
           R2 = _s9iZw::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 32;
           call GHC.Num.negate_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 sat_s9iZL_entry() //  [R1]
         { info_tbl: [(c9jCG,
                       label: sat_s9iZL_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jCG: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c9jCH; else goto c9jCI;
       c9jCH: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jCI: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = GHC.Event.Internal.throwErrnoIfMinus1NoRetry2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 GHC.Event.Internal.throwErrnoIfMinus1NoRetry1_entry() //  [R2, R3,
                                                            R4, R5]
         { info_tbl: [(c9jCN,
                       label: GHC.Event.Internal.throwErrnoIfMinus1NoRetry1_info
                       rep:HeapRep static { Fun {arity: 5 fun_type: ArgSpec 24} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jCN: // global
           if ((Sp + -56) < SpLim) (likely: False) goto c9jCO; else goto c9jCP;
       c9jCO: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.throwErrnoIfMinus1NoRetry1_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9jCP: // global
           I64[Sp - 32] = block_c9jC7_info;
           R1 = R5;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 32;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jC7() //  [R1]
         { info_tbl: [(c9jC7,
                       label: block_c9jC7_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jC7: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9jCS; else goto c9jCR;
       c9jCS: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9jCR: // global
           I64[Hp - 16] = sat_s9iZE_info;
           P64[Hp] = P64[Sp + 16];
           I64[Sp] = block_c9jCp_info;
           R2 = P64[Sp + 8];
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = R1;
           P64[Sp - 8] = Hp - 16;
           P64[Sp + 8] = R1;
           Sp = Sp - 24;
           call GHC.Classes.==_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 _c9jCp() //  [R1]
         { info_tbl: [(c9jCp,
                       label: block_c9jCp_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jCp: // global
           if (R1 & 7 == 1) goto c9jCK; else goto c9jCL;
       c9jCK: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9jCL: // global
           _s9iZx::P64 = P64[Sp + 24];
           (_s9iZJ::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           _s9iZK::I64 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9iZJ::I64));
           if (_s9iZK::I64 != 4) goto c9jCY; else goto u9jD6;
       c9jCY: // global
           R2 = _s9iZx::P64;
           Sp = Sp + 32;
           call Foreign.C.Error.throwErrno1_entry(R2) args: 8, res: 0, upd: 8;
       u9jD6: // global
           I64[Sp + 24] = _s9iZK::I64;
           Sp = Sp + 16;
           call _c9jCA() args: 0, res: 0, upd: 0;
     }
 },
 _c9jCA() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jCA: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9jD5; else goto c9jD4;
       c9jD5: // global
           HpAlloc = 24;
           I64[Sp - 8] = block_c9jCz_info;
           R1 = I64[Sp + 8];
           Sp = Sp - 8;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9jD4: // global
           I64[Hp - 16] = sat_s9iZL_info;
           P64[Hp] = P64[Sp];
           R1 = Hp - 16;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9jCz() //  [R1]
         { info_tbl: [(c9jCz,
                       label: block_c9jCz_info
                       rep:StackRep [False, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jCz: // global
           I64[Sp + 16] = R1;
           Sp = Sp + 8;
           call _c9jCA() args: 0, res: 0, upd: 0;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.413721364 UTC

[section ""data" . GHC.Event.Internal.throwErrnoIfMinus1NoRetry_closure" {
     GHC.Event.Internal.throwErrnoIfMinus1NoRetry_closure:
         const GHC.Event.Internal.throwErrnoIfMinus1NoRetry_info;
         const 0;
 },
 GHC.Event.Internal.throwErrnoIfMinus1NoRetry_entry() //  [R2, R3,
                                                           R4, R5]
         { info_tbl: [(c9jDe,
                       label: GHC.Event.Internal.throwErrnoIfMinus1NoRetry_info
                       rep:HeapRep static { Fun {arity: 5 fun_type: ArgSpec 24} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jDe: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call GHC.Event.Internal.throwErrnoIfMinus1NoRetry1_entry(R5,
                                                                    R4,
                                                                    R3,
                                                                    R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.414428889 UTC

[section ""cstring" . GHC.Event.Internal.$trModule4_bytes" {
     GHC.Event.Internal.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.415010912 UTC

[section ""data" . GHC.Event.Internal.$trModule3_closure" {
     GHC.Event.Internal.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.415517096 UTC

[section ""cstring" . GHC.Event.Internal.$trModule2_bytes" {
     GHC.Event.Internal.$trModule2_bytes:
         I8[] [71,72,67,46,69,118,101,110,116,46,73,110,116,101,114,110,97,108]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.416074844 UTC

[section ""data" . GHC.Event.Internal.$trModule1_closure" {
     GHC.Event.Internal.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.416627174 UTC

[section ""data" . GHC.Event.Internal.$trModule_closure" {
     GHC.Event.Internal.$trModule_closure:
         const GHC.Types.Module_con_info;
         const GHC.Event.Internal.$trModule3_closure+1;
         const GHC.Event.Internal.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.417199499 UTC

[section ""data" . $krep_r9iWn_closure" {
     $krep_r9iWn_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Word.$tcWord64_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.41804962 UTC

[section ""data" . $krep1_r9iWo_closure" {
     $krep1_r9iWo_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcBool_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.418585777 UTC

[section ""data" . $krep2_r9iWp_closure" {
     $krep2_r9iWp_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcInt_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.41915285 UTC

[section ""data" . $krep3_r9iWq_closure" {
     $krep3_r9iWq_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Tuple.$tc()_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.419699942 UTC

[section ""data" . $krep4_r9iWr_closure" {
     $krep4_r9iWr_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const System.Posix.Types.$tcFd_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.420285814 UTC

[section ""data" . $krep5_r9iWs_closure" {
     $krep5_r9iWs_closure:
         const :_con_info;
         const $krep1_r9iWo_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.420861597 UTC

[section ""data" . $krep6_r9iWt_closure" {
     $krep6_r9iWt_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcIO_closure;
         const $krep5_r9iWs_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.421456801 UTC

[section ""data" . $krep7_r9iWu_closure" {
     $krep7_r9iWu_closure:
         const :_con_info;
         const $krep2_r9iWp_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.422034358 UTC

[section ""data" . $krep8_r9iWv_closure" {
     $krep8_r9iWv_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcIO_closure;
         const $krep7_r9iWu_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.422613506 UTC

[section ""data" . $krep9_r9iWw_closure" {
     $krep9_r9iWw_closure:
         const :_con_info;
         const $krep3_r9iWq_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.42321515 UTC

[section ""data" . $krep10_r9iWx_closure" {
     $krep10_r9iWx_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcIO_closure;
         const $krep9_r9iWw_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.423777854 UTC

[section ""data" . $krep11_r9iWy_closure" {
     $krep11_r9iWy_closure:
         const GHC.Types.KindRepVar_con_info;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.424331488 UTC

[section ""data" . $krep12_r9iWz_closure" {
     $krep12_r9iWz_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep11_r9iWy_closure+2;
         const $krep10_r9iWx_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.424896246 UTC

[section ""cstring" . GHC.Event.Internal.$tcEvent2_bytes" {
     GHC.Event.Internal.$tcEvent2_bytes:
         I8[] [69,118,101,110,116]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.425577904 UTC

[section ""data" . GHC.Event.Internal.$tcEvent1_closure" {
     GHC.Event.Internal.$tcEvent1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tcEvent2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.426135024 UTC

[section ""data" . GHC.Event.Internal.$tcEvent_closure" {
     GHC.Event.Internal.$tcEvent_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tcEvent1_closure+1;
         const GHC.Types.krep$*_closure;
         const 6453162546660085965;
         const 4509047211634842293;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.426725488 UTC

[section ""data" . $krep13_r9iWA_closure" {
     $krep13_r9iWA_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Event.Internal.$tcEvent_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.427309213 UTC

[section ""data" . $krep14_r9iWB_closure" {
     $krep14_r9iWB_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep13_r9iWA_closure+1;
         const $krep10_r9iWx_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.427890336 UTC

[section ""data" . $krep15_r9iWC_closure" {
     $krep15_r9iWC_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep4_r9iWr_closure+1;
         const $krep14_r9iWB_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.428389708 UTC

[section ""data" . $krep16_r9iWD_closure" {
     $krep16_r9iWD_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep15_r9iWC_closure+4;
         const $krep8_r9iWv_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.428919669 UTC

[section ""data" . $krep17_r9iWE_closure" {
     $krep17_r9iWE_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep13_r9iWA_closure+1;
         const $krep6_r9iWt_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.429515397 UTC

[section ""data" . $krep18_r9iWF_closure" {
     $krep18_r9iWF_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep13_r9iWA_closure+1;
         const $krep17_r9iWE_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.430065518 UTC

[section ""data" . $krep19_r9iWG_closure" {
     $krep19_r9iWG_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep4_r9iWr_closure+1;
         const $krep18_r9iWF_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.430620943 UTC

[section ""data" . $krep20_r9iWH_closure" {
     $krep20_r9iWH_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep11_r9iWy_closure+2;
         const $krep19_r9iWG_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.431186182 UTC

[section ""data" . $krep21_r9iWI_closure" {
     $krep21_r9iWI_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep4_r9iWr_closure+1;
         const $krep17_r9iWE_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.431763242 UTC

[section ""data" . $krep22_r9iWJ_closure" {
     $krep22_r9iWJ_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep11_r9iWy_closure+2;
         const $krep21_r9iWI_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.432315932 UTC

[section ""data" . GHC.Event.Internal.$tc'Event1_closure" {
     GHC.Event.Internal.$tc'Event1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep2_r9iWp_closure+1;
         const $krep13_r9iWA_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.432863483 UTC

[section ""cstring" . GHC.Event.Internal.$tc'Event3_bytes" {
     GHC.Event.Internal.$tc'Event3_bytes:
         I8[] [39,69,118,101,110,116]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.43348111 UTC

[section ""data" . GHC.Event.Internal.$tc'Event2_closure" {
     GHC.Event.Internal.$tc'Event2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tc'Event3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.434006092 UTC

[section ""data" . GHC.Event.Internal.$tc'Event_closure" {
     GHC.Event.Internal.$tc'Event_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tc'Event2_closure+1;
         const GHC.Event.Internal.$tc'Event1_closure+4;
         const 3843507504600839845;
         const 12172955723408562945;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.434599735 UTC

[section ""cstring" . GHC.Event.Internal.$tcLifetime2_bytes" {
     GHC.Event.Internal.$tcLifetime2_bytes:
         I8[] [76,105,102,101,116,105,109,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.435144604 UTC

[section ""data" . GHC.Event.Internal.$tcLifetime1_closure" {
     GHC.Event.Internal.$tcLifetime1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tcLifetime2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.435682823 UTC

[section ""data" . GHC.Event.Internal.$tcLifetime_closure" {
     GHC.Event.Internal.$tcLifetime_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tcLifetime1_closure+1;
         const GHC.Types.krep$*_closure;
         const 16879554565198773712;
         const 8198822807138459060;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.436273705 UTC

[section ""data" . GHC.Event.Internal.$tc'MultiShot1_closure" {
     GHC.Event.Internal.$tc'MultiShot1_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Event.Internal.$tcLifetime_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.436847559 UTC

[section ""cstring" . GHC.Event.Internal.$tc'OneShot2_bytes" {
     GHC.Event.Internal.$tc'OneShot2_bytes:
         I8[] [39,79,110,101,83,104,111,116]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.438732211 UTC

[section ""data" . GHC.Event.Internal.$tc'OneShot1_closure" {
     GHC.Event.Internal.$tc'OneShot1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tc'OneShot2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.43931388 UTC

[section ""data" . GHC.Event.Internal.$tc'OneShot_closure" {
     GHC.Event.Internal.$tc'OneShot_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tc'OneShot1_closure+1;
         const GHC.Event.Internal.$tc'MultiShot1_closure+1;
         const 4428239562170783460;
         const 11248279118174204528;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.43989 UTC

[section ""cstring" . GHC.Event.Internal.$tc'MultiShot3_bytes" {
     GHC.Event.Internal.$tc'MultiShot3_bytes:
         I8[] [39,77,117,108,116,105,83,104,111,116]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.440425247 UTC

[section ""data" . GHC.Event.Internal.$tc'MultiShot2_closure" {
     GHC.Event.Internal.$tc'MultiShot2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tc'MultiShot3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.441006204 UTC

[section ""data" . GHC.Event.Internal.$tc'MultiShot_closure" {
     GHC.Event.Internal.$tc'MultiShot_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tc'MultiShot2_closure+1;
         const GHC.Event.Internal.$tc'MultiShot1_closure+1;
         const 963080519453727549;
         const 5499435804578671723;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.441653698 UTC

[section ""cstring" . GHC.Event.Internal.$tcEventLifetime2_bytes" {
     GHC.Event.Internal.$tcEventLifetime2_bytes:
         I8[] [69,118,101,110,116,76,105,102,101,116,105,109,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.442213874 UTC

[section ""data" . GHC.Event.Internal.$tcEventLifetime1_closure" {
     GHC.Event.Internal.$tcEventLifetime1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tcEventLifetime2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.442780037 UTC

[section ""data" . GHC.Event.Internal.$tcEventLifetime_closure" {
     GHC.Event.Internal.$tcEventLifetime_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tcEventLifetime1_closure+1;
         const GHC.Types.krep$*_closure;
         const 11472987326402547198;
         const 14676184191233842558;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.443432217 UTC

[section ""data" . $krep23_r9iWK_closure" {
     $krep23_r9iWK_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Event.Internal.$tcEventLifetime_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.443996773 UTC

[section ""data" . GHC.Event.Internal.$tc'EL1_closure" {
     GHC.Event.Internal.$tc'EL1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep2_r9iWp_closure+1;
         const $krep23_r9iWK_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.444583645 UTC

[section ""cstring" . GHC.Event.Internal.$tc'EL3_bytes" {
     GHC.Event.Internal.$tc'EL3_bytes:
         I8[] [39,69,76]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.445089848 UTC

[section ""data" . GHC.Event.Internal.$tc'EL2_closure" {
     GHC.Event.Internal.$tc'EL2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tc'EL3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.446097223 UTC

[section ""data" . GHC.Event.Internal.$tc'EL_closure" {
     GHC.Event.Internal.$tc'EL_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tc'EL2_closure+1;
         const GHC.Event.Internal.$tc'EL1_closure+4;
         const 13328424765260461560;
         const 17004947518967325218;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.446656394 UTC

[section ""cstring" . GHC.Event.Internal.$tcTimeout2_bytes" {
     GHC.Event.Internal.$tcTimeout2_bytes:
         I8[] [84,105,109,101,111,117,116]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.447182672 UTC

[section ""data" . GHC.Event.Internal.$tcTimeout1_closure" {
     GHC.Event.Internal.$tcTimeout1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tcTimeout2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.447726193 UTC

[section ""data" . GHC.Event.Internal.$tcTimeout_closure" {
     GHC.Event.Internal.$tcTimeout_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tcTimeout1_closure+1;
         const GHC.Types.krep$*_closure;
         const 3071157695468345159;
         const 2371669836431867052;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.448319002 UTC

[section ""data" . GHC.Event.Internal.$tc'Forever1_closure" {
     GHC.Event.Internal.$tc'Forever1_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Event.Internal.$tcTimeout_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.448874494 UTC

[section ""cstring" . GHC.Event.Internal.$tc'Forever3_bytes" {
     GHC.Event.Internal.$tc'Forever3_bytes:
         I8[] [39,70,111,114,101,118,101,114]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.449467246 UTC

[section ""data" . GHC.Event.Internal.$tc'Forever2_closure" {
     GHC.Event.Internal.$tc'Forever2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tc'Forever3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.450018305 UTC

[section ""data" . GHC.Event.Internal.$tc'Forever_closure" {
     GHC.Event.Internal.$tc'Forever_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tc'Forever2_closure+1;
         const GHC.Event.Internal.$tc'Forever1_closure+1;
         const 15890326801882711521;
         const 6940845280791152844;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.450609242 UTC

[section ""data" . GHC.Event.Internal.$tc'Timeout1_closure" {
     GHC.Event.Internal.$tc'Timeout1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep_r9iWn_closure+1;
         const GHC.Event.Internal.$tc'Forever1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.451195883 UTC

[section ""cstring" . GHC.Event.Internal.$tc'Timeout3_bytes" {
     GHC.Event.Internal.$tc'Timeout3_bytes:
         I8[] [39,84,105,109,101,111,117,116]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.451717436 UTC

[section ""data" . GHC.Event.Internal.$tc'Timeout2_closure" {
     GHC.Event.Internal.$tc'Timeout2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tc'Timeout3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.452240959 UTC

[section ""data" . GHC.Event.Internal.$tc'Timeout_closure" {
     GHC.Event.Internal.$tc'Timeout_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tc'Timeout2_closure+1;
         const GHC.Event.Internal.$tc'Timeout1_closure+4;
         const 11507111740173521793;
         const 14582130137848061687;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.452835415 UTC

[section ""data" . $krep24_r9iWL_closure" {
     $krep24_r9iWL_closure:
         const :_con_info;
         const GHC.Event.Internal.$tc'Forever1_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.453678547 UTC

[section ""data" . $krep25_r9iWM_closure" {
     $krep25_r9iWM_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Base.$tcMaybe_closure;
         const $krep24_r9iWL_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.454241953 UTC

[section ""data" . $krep26_r9iWN_closure" {
     $krep26_r9iWN_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep25_r9iWM_closure+1;
         const $krep16_r9iWD_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.45480928 UTC

[section ""data" . $krep27_r9iWO_closure" {
     $krep27_r9iWO_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep11_r9iWy_closure+2;
         const $krep26_r9iWN_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.455315433 UTC

[section ""cstring" . GHC.Event.Internal.$tcBackend2_bytes" {
     GHC.Event.Internal.$tcBackend2_bytes:
         I8[] [66,97,99,107,101,110,100]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.45587096 UTC

[section ""data" . GHC.Event.Internal.$tcBackend1_closure" {
     GHC.Event.Internal.$tcBackend1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tcBackend2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.45643443 UTC

[section ""data" . GHC.Event.Internal.$tcBackend_closure" {
     GHC.Event.Internal.$tcBackend_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tcBackend1_closure+1;
         const GHC.Types.krep$*_closure;
         const 5241936179624485302;
         const 3407160178235461245;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.457031899 UTC

[section ""data" . $krep28_r9iWP_closure" {
     $krep28_r9iWP_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Event.Internal.$tcBackend_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.457624804 UTC

[section ""data" . $krep29_r9iWQ_closure" {
     $krep29_r9iWQ_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep12_r9iWz_closure+4;
         const $krep28_r9iWP_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.4581795 UTC

[section ""data" . $krep30_r9iWR_closure" {
     $krep30_r9iWR_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep22_r9iWJ_closure+4;
         const $krep29_r9iWQ_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.45873792 UTC

[section ""data" . $krep31_r9iWS_closure" {
     $krep31_r9iWS_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep20_r9iWH_closure+4;
         const $krep30_r9iWR_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.459276447 UTC

[section ""data" . $krep32_r9iWT_closure" {
     $krep32_r9iWT_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep27_r9iWO_closure+4;
         const $krep31_r9iWS_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.459867778 UTC

[section ""data" . GHC.Event.Internal.$tc'Backend1_closure" {
     GHC.Event.Internal.$tc'Backend1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep11_r9iWy_closure+2;
         const $krep32_r9iWT_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.460425712 UTC

[section ""cstring" . GHC.Event.Internal.$tc'Backend3_bytes" {
     GHC.Event.Internal.$tc'Backend3_bytes:
         I8[] [39,66,97,99,107,101,110,100]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.460952933 UTC

[section ""data" . GHC.Event.Internal.$tc'Backend2_closure" {
     GHC.Event.Internal.$tc'Backend2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tc'Backend3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.461849027 UTC

[section ""data" . GHC.Event.Internal.$tc'Backend_closure" {
     GHC.Event.Internal.$tc'Backend_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tc'Backend2_closure+1;
         const GHC.Event.Internal.$tc'Backend1_closure+4;
         const 2097061961478251755;
         const 1358985482759746540;
         const 1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.462431083 UTC

[section ""data" . GHC.Event.Internal.$fEqEvent_closure" {
     GHC.Event.Internal.$fEqEvent_closure:
         const GHC.Classes.C:Eq_con_info;
         const GHC.Classes.eqInt_closure+2;
         const GHC.Classes.neInt_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.4630171 UTC

[section ""data" . GHC.Event.Internal.$fEqEventLifetime_closure" {
     GHC.Event.Internal.$fEqEventLifetime_closure:
         const GHC.Classes.C:Eq_con_info;
         const GHC.Classes.eqInt_closure+2;
         const GHC.Classes.neInt_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.464682964 UTC

[section ""data" . elEvent1_r9iWU_closure" {
     elEvent1_r9iWU_closure:
         const elEvent1_r9iWU_info;
 },
 elEvent1_r9iWU_entry() //  [R2]
         { info_tbl: [(c9jDo,
                       label: elEvent1_r9iWU_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jDo: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9jDv; else goto c9jDw;
       c9jDv: // global
           R2 = R2;
           R1 = elEvent1_r9iWU_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9jDw: // global
           I64[Sp - 8] = block_c9jDl_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9jDA; else goto c9jDm;
       u9jDA: // global
           call _c9jDl(R1) args: 0, res: 0, upd: 0;
       c9jDm: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jDl() //  [R1]
         { info_tbl: [(c9jDl,
                       label: block_c9jDl_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jDl: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9jDz; else goto c9jDy;
       c9jDz: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9jDy: // global
           _s9iZP::I64 = I64[R1 + 7] & 7;
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = _s9iZP::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.465943481 UTC

[section ""data" . GHC.Event.Internal.elEvent_closure" {
     GHC.Event.Internal.elEvent_closure:
         const GHC.Event.Internal.elEvent_info;
 },
 GHC.Event.Internal.elEvent_entry() //  [R2]
         { info_tbl: [(c9jDF,
                       label: GHC.Event.Internal.elEvent_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jDF: // global
           R2 = R2;
           call elEvent1_r9iWU_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.467116755 UTC

[section ""data" . GHC.Event.Internal.$wgo2_closure" {
     GHC.Event.Internal.$wgo2_closure:
         const GHC.Event.Internal.$wgo2_info;
 },
 GHC.Event.Internal.$wgo2_entry() //  [R2, R3]
         { info_tbl: [(c9jDT,
                       label: GHC.Event.Internal.$wgo2_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 13} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jDT: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9jDU; else goto c9jDV;
       c9jDU: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$wgo2_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9jDV: // global
           I64[Sp - 16] = block_c9jDM_info;
           R1 = R3;
           I64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9jEf; else goto c9jDN;
       u9jEf: // global
           call _c9jDM(R1) args: 0, res: 0, upd: 0;
       c9jDN: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jDM() //  [R1]
         { info_tbl: [(c9jDM,
                       label: block_c9jDM_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jDM: // global
           if (R1 & 7 == 1) goto c9jDQ; else goto c9jDR;
       c9jDQ: // global
           R1 = I64[Sp + 8];
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9jDR: // global
           I64[Sp - 8] = block_c9jE1_info;
           _s9iZU::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp] = _s9iZU::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9jEe; else goto c9jE2;
       u9jEe: // global
           call _c9jE1(R1) args: 0, res: 0, upd: 0;
       c9jE2: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jE1() //  [R1]
         { info_tbl: [(c9jE1,
                       label: block_c9jE1_info
                       rep:StackRep [False, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jE1: // global
           _s9iZU::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c9jE6_info;
           R3 = _s9iZU::P64;
           R2 = I64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Event.Internal.$wgo2_entry(R3,
                                               R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9jE6() //  [R1]
         { info_tbl: [(c9jE6,
                       label: block_c9jE6_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jE6: // global
           R1 = I64[Sp + 8] | R1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.468794363 UTC

[section ""data" . GHC.Event.Internal.$fSemigroupEventLifetime_go_closure" {
     GHC.Event.Internal.$fSemigroupEventLifetime_go_closure:
         const GHC.Event.Internal.$fSemigroupEventLifetime_go_info;
 },
 GHC.Event.Internal.$fSemigroupEventLifetime_go_entry() //  [R2, R3]
         { info_tbl: [(c9jEn,
                       label: GHC.Event.Internal.$fSemigroupEventLifetime_go_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jEn: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9jEv; else goto c9jEw;
       c9jEv: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fSemigroupEventLifetime_go_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9jEw: // global
           I64[Sp - 16] = block_c9jEk_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9jEB; else goto c9jEl;
       u9jEB: // global
           call _c9jEk(R1) args: 0, res: 0, upd: 0;
       c9jEl: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jEk() //  [R1]
         { info_tbl: [(c9jEk,
                       label: block_c9jEk_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jEk: // global
           _s9iZZ::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c9jEq_info;
           R3 = _s9iZZ::P64;
           R2 = I64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Event.Internal.$wgo2_entry(R3,
                                               R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9jEq() //  [R1]
         { info_tbl: [(c9jEq,
                       label: block_c9jEq_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jEq: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9jEA; else goto c9jEz;
       c9jEA: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9jEz: // global
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = R1;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.47051259 UTC

[section ""data" . GHC.Event.Internal.$fSemigroupEventLifetime_$csconcat_closure" {
     GHC.Event.Internal.$fSemigroupEventLifetime_$csconcat_closure:
         const GHC.Event.Internal.$fSemigroupEventLifetime_$csconcat_info;
 },
 GHC.Event.Internal.$fSemigroupEventLifetime_$csconcat_entry() //  [R2]
         { info_tbl: [(c9jEJ,
                       label: GHC.Event.Internal.$fSemigroupEventLifetime_$csconcat_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jEJ: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9jEK; else goto c9jEL;
       c9jEK: // global
           R2 = R2;
           R1 = GHC.Event.Internal.$fSemigroupEventLifetime_$csconcat_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9jEL: // global
           I64[Sp - 8] = block_c9jEG_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9jEP; else goto c9jEH;
       u9jEP: // global
           call _c9jEG(R1) args: 0, res: 0, upd: 0;
       c9jEH: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jEG() //  [R1]
         { info_tbl: [(c9jEG,
                       label: block_c9jEG_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jEG: // global
           R3 = P64[R1 + 15];
           R2 = P64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Event.Internal.$fSemigroupEventLifetime_go_entry(R3,
                                                                     R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.471540942 UTC

[section ""data" . GHC.Event.Internal.$fSemigroupEventLifetime_closure" {
     GHC.Event.Internal.$fSemigroupEventLifetime_closure:
         const GHC.Base.C:Semigroup_con_info;
         const Data.Bits.$fBitsInt_$c.|._closure+2;
         const GHC.Event.Internal.$fSemigroupEventLifetime_$csconcat_closure+1;
         const GHC.Event.Internal.$fSemigroupEventLifetime_$cstimes_closure+1;
         const 0;
 },
 section ""data" . GHC.Event.Internal.$fSemigroupEventLifetime_$cstimes_closure" {
     GHC.Event.Internal.$fSemigroupEventLifetime_$cstimes_closure:
         const GHC.Event.Internal.$fSemigroupEventLifetime_$cstimes_info;
         const 0;
 },
 GHC.Event.Internal.$fSemigroupEventLifetime_$cstimes_entry() //  [R2]
         { info_tbl: [(c9jEU,
                       label: GHC.Event.Internal.$fSemigroupEventLifetime_$cstimes_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jEU: // global
           R3 = GHC.Event.Internal.$fSemigroupEventLifetime_closure+1;
           R2 = R2;
           R1 = Data.Semigroup.Internal.stimesDefault_closure+4;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.472705267 UTC

[section ""data" . GHC.Event.Internal.$wgo1_closure" {
     GHC.Event.Internal.$wgo1_closure:
         const GHC.Event.Internal.$wgo1_info;
 },
 GHC.Event.Internal.$wgo1_entry() //  [R2]
         { info_tbl: [(c9jF8,
                       label: GHC.Event.Internal.$wgo1_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jF8: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9jF9; else goto c9jFa;
       c9jF9: // global
           R2 = R2;
           R1 = GHC.Event.Internal.$wgo1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9jFa: // global
           I64[Sp - 8] = block_c9jF1_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9jFu; else goto c9jF2;
       u9jFu: // global
           call _c9jF1(R1) args: 0, res: 0, upd: 0;
       c9jF2: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jF1() //  [R1]
         { info_tbl: [(c9jF1,
                       label: block_c9jF1_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jF1: // global
           if (R1 & 7 == 1) goto c9jF5; else goto c9jF6;
       c9jF5: // global
           R1 = 0;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9jF6: // global
           I64[Sp - 8] = block_c9jFg_info;
           _s9j0b::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp] = _s9j0b::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9jFt; else goto c9jFh;
       u9jFt: // global
           call _c9jFg(R1) args: 0, res: 0, upd: 0;
       c9jFh: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jFg() //  [R1]
         { info_tbl: [(c9jFg,
                       label: block_c9jFg_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jFg: // global
           I64[Sp] = block_c9jFl_info;
           R2 = P64[Sp + 8];
           I64[Sp + 8] = I64[R1 + 7];
           call GHC.Event.Internal.$wgo1_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9jFl() //  [R1]
         { info_tbl: [(c9jFl,
                       label: block_c9jFl_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jFl: // global
           R1 = I64[Sp + 8] | R1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.474251558 UTC

[section ""data" . GHC.Event.Internal.$fMonoidEventLifetime_go_closure" {
     GHC.Event.Internal.$fMonoidEventLifetime_go_closure:
         const GHC.Event.Internal.$fMonoidEventLifetime_go_info;
 },
 GHC.Event.Internal.$fMonoidEventLifetime_go_entry() //  [R2]
         { info_tbl: [(c9jFB,
                       label: GHC.Event.Internal.$fMonoidEventLifetime_go_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jFB: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9jFF; else goto c9jFG;
       c9jFF: // global
           R2 = R2;
           R1 = GHC.Event.Internal.$fMonoidEventLifetime_go_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9jFG: // global
           I64[Sp - 8] = block_c9jFz_info;
           R2 = R2;
           Sp = Sp - 8;
           call GHC.Event.Internal.$wgo1_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9jFz() //  [R1]
         { info_tbl: [(c9jFz,
                       label: block_c9jFz_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jFz: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9jFJ; else goto c9jFI;
       c9jFJ: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9jFI: // global
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = R1;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.475228025 UTC

[section ""data" . GHC.Event.Internal.$fMonoidEventLifetime_closure" {
     GHC.Event.Internal.$fMonoidEventLifetime_closure:
         const GHC.Base.C:Monoid_con_info;
         const GHC.Event.Internal.$fSemigroupEventLifetime_closure+1;
         const GHC.Event.Internal.$fMonoidEventLifetime1_closure+1;
         const Data.Bits.$fBitsInt_$c.|._closure+2;
         const GHC.Event.Internal.$fMonoidEventLifetime_go_closure+1;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.476100386 UTC

[section ""data" . GHC.Event.Internal.elLifetime_closure" {
     GHC.Event.Internal.elLifetime_closure:
         const GHC.Event.Internal.elLifetime_info;
 },
 GHC.Event.Internal.elLifetime_entry() //  [R2]
         { info_tbl: [(c9jFR,
                       label: GHC.Event.Internal.elLifetime_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jFR: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9jFS; else goto c9jFT;
       c9jFS: // global
           R2 = R2;
           R1 = GHC.Event.Internal.elLifetime_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9jFT: // global
           I64[Sp - 8] = block_c9jFO_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9jGc; else goto c9jFP;
       u9jGc: // global
           call _c9jFO(R1) args: 0, res: 0, upd: 0;
       c9jFP: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jFO() //  [R1]
         { info_tbl: [(c9jFO,
                       label: block_c9jFO_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jFO: // global
           if (I64[R1 + 7] & 8 == 0) goto c9jG8; else goto c9jG2;
       c9jG8: // global
           R1 = GHC.Event.Internal.OneShot_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9jG2: // global
           R1 = GHC.Event.Internal.MultiShot_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.477565133 UTC

[section ""data" . eventLifetime1_r9iWV_closure" {
     eventLifetime1_r9iWV_closure:
         const eventLifetime1_r9iWV_info;
 },
 eventLifetime1_r9iWV_entry() //  [R2, R3]
         { info_tbl: [(c9jGk,
                       label: eventLifetime1_r9iWV_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jGk: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9jGl; else goto c9jGm;
       c9jGl: // global
           R3 = R3;
           R2 = R2;
           R1 = eventLifetime1_r9iWV_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9jGm: // global
           I64[Sp - 16] = block_c9jGh_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9jGK; else goto c9jGi;
       u9jGK: // global
           call _c9jGh(R1) args: 0, res: 0, upd: 0;
       c9jGi: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jGh() //  [R1]
         { info_tbl: [(c9jGh,
                       label: block_c9jGh_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jGh: // global
           I64[Sp - 8] = block_c9jGp_info;
           _s9j0n::P64 = R1;
           _s9j0o::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp] = _s9j0o::I64;
           P64[Sp + 8] = _s9j0n::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9jGJ; else goto c9jGr;
       u9jGJ: // global
           call _c9jGp(R1) args: 0, res: 0, upd: 0;
       c9jGr: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jGp() //  [R1]
         { info_tbl: [(c9jGp,
                       label: block_c9jGp_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jGp: // global
           if (R1 & 7 == 1) goto c9jGx; else goto c9jGE;
       c9jGx: // global
           R1 = P64[Sp + 16] & (-8);
           Sp = Sp + 24;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c9jGE: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9jGH; else goto c9jGG;
       c9jGH: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9jGG: // global
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = I64[Sp + 8] | 8;
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.479014163 UTC

[section ""data" . GHC.Event.Internal.eventLifetime_closure" {
     GHC.Event.Internal.eventLifetime_closure:
         const GHC.Event.Internal.eventLifetime_info;
 },
 GHC.Event.Internal.eventLifetime_entry() //  [R2, R3]
         { info_tbl: [(c9jGP,
                       label: GHC.Event.Internal.eventLifetime_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jGP: // global
           R3 = R3;
           R2 = R2;
           call eventLifetime1_r9iWV_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.479860074 UTC

[section ""data" . GHC.Event.Internal.evtCombine_closure" {
     GHC.Event.Internal.evtCombine_closure:
         const GHC.Event.Internal.evtCombine_info;
 },
 GHC.Event.Internal.evtCombine_entry() //  [R2, R3]
         { info_tbl: [(c9jGW,
                       label: GHC.Event.Internal.evtCombine_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jGW: // global
           R3 = R3;
           R2 = R2;
           call Data.Bits.$fBitsInt_$c.|._entry(R3,
                                                R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.480658097 UTC

[section ""data" . GHC.Event.Internal.evtConcat_closure" {
     GHC.Event.Internal.evtConcat_closure:
         const GHC.Event.Internal.evtConcat_info;
         const 0;
 },
 GHC.Event.Internal.evtConcat_entry() //  [R2]
         { info_tbl: [(c9jH3,
                       label: GHC.Event.Internal.evtConcat_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jH3: // global
           R4 = R2;
           R3 = GHC.Event.Internal.evtNothing_closure;
           R2 = GHC.Event.Internal.evtCombine_closure+2;
           call GHC.List.foldl'_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.48193014 UTC

[section ""data" . GHC.Event.Internal.$wgo_closure" {
     GHC.Event.Internal.$wgo_closure:
         const GHC.Event.Internal.$wgo_info;
 },
 GHC.Event.Internal.$wgo_entry() //  [R2, R3]
         { info_tbl: [(c9jHh,
                       label: GHC.Event.Internal.$wgo_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 13} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jHh: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9jHi; else goto c9jHj;
       c9jHi: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$wgo_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9jHj: // global
           I64[Sp - 16] = block_c9jHa_info;
           R1 = R3;
           I64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9jHD; else goto c9jHb;
       u9jHD: // global
           call _c9jHa(R1) args: 0, res: 0, upd: 0;
       c9jHb: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jHa() //  [R1]
         { info_tbl: [(c9jHa,
                       label: block_c9jHa_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jHa: // global
           if (R1 & 7 == 1) goto c9jHe; else goto c9jHf;
       c9jHe: // global
           R1 = I64[Sp + 8];
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9jHf: // global
           I64[Sp - 8] = block_c9jHp_info;
           _s9j0v::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp] = _s9j0v::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9jHC; else goto c9jHq;
       u9jHC: // global
           call _c9jHp(R1) args: 0, res: 0, upd: 0;
       c9jHq: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jHp() //  [R1]
         { info_tbl: [(c9jHp,
                       label: block_c9jHp_info
                       rep:StackRep [False, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jHp: // global
           _s9j0v::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c9jHu_info;
           R3 = _s9j0v::P64;
           R2 = I64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Event.Internal.$wgo_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9jHu() //  [R1]
         { info_tbl: [(c9jHu,
                       label: block_c9jHu_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jHu: // global
           R1 = I64[Sp + 8] | R1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.483585769 UTC

[section ""data" . GHC.Event.Internal.$fSemigroupEvent_go_closure" {
     GHC.Event.Internal.$fSemigroupEvent_go_closure:
         const GHC.Event.Internal.$fSemigroupEvent_go_info;
 },
 GHC.Event.Internal.$fSemigroupEvent_go_entry() //  [R2, R3]
         { info_tbl: [(c9jHL,
                       label: GHC.Event.Internal.$fSemigroupEvent_go_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jHL: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9jHT; else goto c9jHU;
       c9jHT: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fSemigroupEvent_go_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9jHU: // global
           I64[Sp - 16] = block_c9jHI_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9jHZ; else goto c9jHJ;
       u9jHZ: // global
           call _c9jHI(R1) args: 0, res: 0, upd: 0;
       c9jHJ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jHI() //  [R1]
         { info_tbl: [(c9jHI,
                       label: block_c9jHI_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jHI: // global
           _s9j0A::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c9jHO_info;
           R3 = _s9j0A::P64;
           R2 = I64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Event.Internal.$wgo_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9jHO() //  [R1]
         { info_tbl: [(c9jHO,
                       label: block_c9jHO_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jHO: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9jHY; else goto c9jHX;
       c9jHY: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9jHX: // global
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = R1;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.484992989 UTC

[section ""data" . GHC.Event.Internal.$fSemigroupEvent_$csconcat_closure" {
     GHC.Event.Internal.$fSemigroupEvent_$csconcat_closure:
         const GHC.Event.Internal.$fSemigroupEvent_$csconcat_info;
 },
 GHC.Event.Internal.$fSemigroupEvent_$csconcat_entry() //  [R2]
         { info_tbl: [(c9jI7,
                       label: GHC.Event.Internal.$fSemigroupEvent_$csconcat_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jI7: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9jI8; else goto c9jI9;
       c9jI8: // global
           R2 = R2;
           R1 = GHC.Event.Internal.$fSemigroupEvent_$csconcat_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9jI9: // global
           I64[Sp - 8] = block_c9jI4_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9jId; else goto c9jI5;
       u9jId: // global
           call _c9jI4(R1) args: 0, res: 0, upd: 0;
       c9jI5: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jI4() //  [R1]
         { info_tbl: [(c9jI4,
                       label: block_c9jI4_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jI4: // global
           R3 = P64[R1 + 15];
           R2 = P64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Event.Internal.$fSemigroupEvent_go_entry(R3,
                                                             R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.486101353 UTC

[section ""data" . GHC.Event.Internal.$fSemigroupEvent_closure" {
     GHC.Event.Internal.$fSemigroupEvent_closure:
         const GHC.Base.C:Semigroup_con_info;
         const GHC.Event.Internal.evtCombine_closure+2;
         const GHC.Event.Internal.$fSemigroupEvent_$csconcat_closure+1;
         const GHC.Event.Internal.$fSemigroupEvent_$cstimes_closure+3;
         const 0;
 },
 section ""data" . GHC.Event.Internal.$fMonoidEvent_closure" {
     GHC.Event.Internal.$fMonoidEvent_closure:
         const GHC.Base.C:Monoid_con_info;
         const GHC.Event.Internal.$fSemigroupEvent_closure+1;
         const GHC.Event.Internal.evtNothing_closure;
         const GHC.Event.Internal.evtCombine_closure+2;
         const GHC.Event.Internal.evtConcat_closure+1;
         const 0;
 },
 section ""data" . GHC.Event.Internal.$fSemigroupEvent_$cstimes_closure" {
     GHC.Event.Internal.$fSemigroupEvent_$cstimes_closure:
         const GHC.Event.Internal.$fSemigroupEvent_$cstimes_info;
         const 0;
 },
 GHC.Event.Internal.$fSemigroupEvent_$cstimes_entry() //  [R2, R3,
                                                           R4]
         { info_tbl: [(c9jIi,
                       label: GHC.Event.Internal.$fSemigroupEvent_$cstimes_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jIi: // global
           R5 = R4;
           R4 = R3;
           R3 = GHC.Event.Internal.$fMonoidEvent_closure+1;
           R2 = R2;
           call Data.Semigroup.Internal.stimesMonoid_entry(R5,
                                                           R4,
                                                           R3,
                                                           R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.487315638 UTC

[section ""data" . GHC.Event.Internal.eventIs_closure" {
     GHC.Event.Internal.eventIs_closure:
         const GHC.Event.Internal.eventIs_info;
 },
 GHC.Event.Internal.eventIs_entry() //  [R2, R3]
         { info_tbl: [(c9jIs,
                       label: GHC.Event.Internal.eventIs_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jIs: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9jIw; else goto c9jIx;
       c9jIw: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.eventIs_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9jIx: // global
           I64[Sp - 16] = block_c9jIp_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9jIU; else goto c9jIq;
       u9jIU: // global
           call _c9jIp(R1) args: 0, res: 0, upd: 0;
       c9jIq: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jIp() //  [R1]
         { info_tbl: [(c9jIp,
                       label: block_c9jIp_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jIp: // global
           I64[Sp] = block_c9jIv_info;
           _s9j0M::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9j0M::I64;
           if (R1 & 7 != 0) goto u9jIT; else goto c9jIz;
       u9jIT: // global
           call _c9jIv(R1) args: 0, res: 0, upd: 0;
       c9jIz: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jIv() //  [R1]
         { info_tbl: [(c9jIv,
                       label: block_c9jIv_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jIv: // global
           if (I64[Sp + 8] & I64[R1 + 7] == 0) goto c9jIP; else goto c9jIJ;
       c9jIP: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9jIJ: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.488550891 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent13_closure" {
     GHC.Event.Internal.$fShowEvent13_closure:
         const GHC.Types.C#_con_info;
         const 91;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.489110562 UTC

[section ""cstring" . GHC.Event.Internal.$fShowEvent5_bytes" {
     GHC.Event.Internal.$fShowEvent5_bytes:
         I8[] [93]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.489696854 UTC

[section ""cstring" . GHC.Event.Internal.$fShowEvent10_bytes" {
     GHC.Event.Internal.$fShowEvent10_bytes:
         I8[] [44]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.490419182 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent9_closure" {
     GHC.Event.Internal.$fShowEvent9_closure:
         const GHC.Event.Internal.$fShowEvent9_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Internal.$fShowEvent9_entry() //  [R1]
         { info_tbl: [(c9jJ1,
                       label: GHC.Event.Internal.$fShowEvent9_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jJ1: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9jJ2; else goto c9jJ3;
       c9jJ2: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jJ3: // global
           (_c9jIY::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9jIY::I64 == 0) goto c9jJ0; else goto c9jIZ;
       c9jJ0: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9jIZ: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9jIY::I64;
           R2 = GHC.Event.Internal.$fShowEvent10_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.49127248 UTC

[section ""cstring" . GHC.Event.Internal.$fShowEvent12_bytes" {
     GHC.Event.Internal.$fShowEvent12_bytes:
         I8[] [101,118,116,82,101,97,100]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.491928762 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent11_closure" {
     GHC.Event.Internal.$fShowEvent11_closure:
         const GHC.Event.Internal.$fShowEvent11_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Internal.$fShowEvent11_entry() //  [R1]
         { info_tbl: [(c9jJa,
                       label: GHC.Event.Internal.$fShowEvent11_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jJa: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9jJb; else goto c9jJc;
       c9jJb: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jJc: // global
           (_c9jJ7::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9jJ7::I64 == 0) goto c9jJ9; else goto c9jJ8;
       c9jJ9: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9jJ8: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9jJ7::I64;
           R2 = GHC.Event.Internal.$fShowEvent12_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.49279501 UTC

[section ""cstring" . GHC.Event.Internal.$fShowEvent8_bytes" {
     GHC.Event.Internal.$fShowEvent8_bytes:
         I8[] [101,118,116,87,114,105,116,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.493504838 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent7_closure" {
     GHC.Event.Internal.$fShowEvent7_closure:
         const GHC.Event.Internal.$fShowEvent7_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Internal.$fShowEvent7_entry() //  [R1]
         { info_tbl: [(c9jJj,
                       label: GHC.Event.Internal.$fShowEvent7_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jJj: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9jJk; else goto c9jJl;
       c9jJk: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jJl: // global
           (_c9jJg::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9jJg::I64 == 0) goto c9jJi; else goto c9jJh;
       c9jJi: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9jJh: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9jJg::I64;
           R2 = GHC.Event.Internal.$fShowEvent8_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.494333807 UTC

[section ""cstring" . GHC.Event.Internal.$fShowEvent3_bytes" {
     GHC.Event.Internal.$fShowEvent3_bytes:
         I8[] [101,118,116,67,108,111,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.495076745 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent2_closure" {
     GHC.Event.Internal.$fShowEvent2_closure:
         const GHC.Event.Internal.$fShowEvent2_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Internal.$fShowEvent2_entry() //  [R1]
         { info_tbl: [(c9jJs,
                       label: GHC.Event.Internal.$fShowEvent2_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jJs: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9jJt; else goto c9jJu;
       c9jJt: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jJu: // global
           (_c9jJp::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9jJp::I64 == 0) goto c9jJr; else goto c9jJq;
       c9jJr: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9jJq: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9jJp::I64;
           R2 = GHC.Event.Internal.$fShowEvent3_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.496093116 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent4_closure" {
     GHC.Event.Internal.$fShowEvent4_closure:
         const GHC.Event.Internal.$fShowEvent4_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Internal.$fShowEvent4_entry() //  [R1]
         { info_tbl: [(c9jJB,
                       label: GHC.Event.Internal.$fShowEvent4_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jJB: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9jJC; else goto c9jJD;
       c9jJC: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jJD: // global
           (_c9jJy::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9jJy::I64 == 0) goto c9jJA; else goto c9jJz;
       c9jJA: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9jJz: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9jJy::I64;
           R2 = GHC.Event.Internal.$fShowEvent5_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.496946115 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent6_closure" {
     GHC.Event.Internal.$fShowEvent6_closure:
         const :_con_info;
         const GHC.Event.Internal.$fShowEvent2_closure;
         const GHC.Types.[]_closure+1;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.499516467 UTC

[section ""data" . GHC.Event.Internal.$w$cshow_closure" {
     GHC.Event.Internal.$w$cshow_closure:
         const GHC.Event.Internal.$w$cshow_info;
         const 0;
 },
 sat_s9j0W_entry() //  [R1]
         { info_tbl: [(c9jKg,
                       label: sat_s9j0W_info
                       rep:HeapRep 1 nonptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jKg: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9jKh; else goto c9jKs;
       c9jKh: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jKs: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           if (I64[R1 + 16] & 4 == 0) goto c9jKf; else goto c9jKe;
       c9jKf: // global
           R1 = []_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c9jKe: // global
           R1 = GHC.Event.Internal.$fShowEvent6_closure+2;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 sat_s9j0Z_entry() //  [R1]
         { info_tbl: [(c9jKw,
                       label: sat_s9j0Z_info
                       rep:HeapRep 1 nonptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jKw: // global
           if ((Sp + -40) < SpLim) (likely: False) goto c9jKx; else goto c9jKW;
       c9jKx: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jKW: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           _s9j0S::I64 = I64[R1 + 16];
           _s9j0U::I64 = _s9j0S::I64 & 2;
           if (_s9j0U::I64 != 0) goto u9jKX; else goto c9jKv;
       u9jKX: // global
           I64[Sp - 32] = _s9j0S::I64;
           I64[Sp - 24] = _s9j0U::I64;
           Sp = Sp - 32;
           call _c9jK5() args: 0, res: 0, upd: 0;
       c9jKv: // global
           if (_s9j0S::I64 & 4 == 0) goto c9jKS; else goto c9jKM;
       c9jKS: // global
           R3 = GHC.Types.[]_closure+1;
           R2 = GHC.Event.Internal.$fShowEvent9_closure;
           Sp = Sp - 16;
           call Data.OldList.prependToAll_entry(R3,
                                                R2) args: 24, res: 0, upd: 24;
       c9jKM: // global
           R3 = GHC.Event.Internal.$fShowEvent6_closure+2;
           R2 = GHC.Event.Internal.$fShowEvent9_closure;
           Sp = Sp - 16;
           call Data.OldList.prependToAll_entry(R3,
                                                R2) args: 24, res: 0, upd: 24;
     }
 },
 _c9jK5() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jK5: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c9jKB; else goto c9jKA;
       c9jKB: // global
           HpAlloc = 48;
           I64[Sp - 8] = block_c9jK4_info;
           R1 = I64[Sp + 8];
           Sp = Sp - 8;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 24;
       c9jKA: // global
           I64[Hp - 40] = sat_s9j0W_info;
           I64[Hp - 24] = I64[Sp];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Event.Internal.$fShowEvent7_closure;
           P64[Hp] = Hp - 40;
           R3 = Hp - 14;
           R2 = GHC.Event.Internal.$fShowEvent9_closure;
           Sp = Sp + 16;
           call Data.OldList.prependToAll_entry(R3,
                                                R2) args: 24, res: 0, upd: 24;
     }
 },
 _c9jK4() //  [R1]
         { info_tbl: [(c9jK4,
                       label: block_c9jK4_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jK4: // global
           I64[Sp + 16] = R1;
           Sp = Sp + 8;
           call _c9jK5() args: 0, res: 0, upd: 0;
     }
 },
 sat_s9j14_entry() //  [R1]
         { info_tbl: [(c9jLk,
                       label: sat_s9j14_info
                       rep:HeapRep 1 nonptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jLk: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9jLl; else goto c9jLw;
       c9jLl: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jLw: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           if (I64[R1 + 16] & 4 == 0) goto c9jLj; else goto c9jLi;
       c9jLj: // global
           R3 = GHC.Types.[]_closure+1;
           R2 = GHC.Event.Internal.$fShowEvent9_closure;
           Sp = Sp - 16;
           call Data.OldList.prependToAll_entry(R3,
                                                R2) args: 24, res: 0, upd: 24;
       c9jLi: // global
           R3 = GHC.Event.Internal.$fShowEvent6_closure+2;
           R2 = GHC.Event.Internal.$fShowEvent9_closure;
           Sp = Sp - 16;
           call Data.OldList.prependToAll_entry(R3,
                                                R2) args: 24, res: 0, upd: 24;
     }
 },
 sat_s9j18_entry() //  [R1]
         { info_tbl: [(c9jLL,
                       label: sat_s9j18_info
                       rep:HeapRep { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jLL: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9jLM; else goto c9jLN;
       c9jLM: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jLN: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = GHC.Types.[]_closure+1;
           R2 = GHC.Event.Internal.$fShowEvent9_closure;
           Sp = Sp - 16;
           call Data.OldList.prependToAll_entry(R3,
                                                R2) args: 24, res: 0, upd: 24;
     }
 },
 sat_s9j1b_entry() //  [R1]
         { info_tbl: [(c9jLO,
                       label: sat_s9j1b_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jLO: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c9jLP; else goto c9jLQ;
       c9jLP: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jLQ: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c9jJM_info;
           R1 = P64[R1 + 16];
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9jML; else goto c9jJN;
       u9jML: // global
           call _c9jJM(R1) args: 0, res: 0, upd: 0;
       c9jJN: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 _c9jJM() //  [R1]
         { info_tbl: [(c9jJM,
                       label: block_c9jJM_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jJM: // global
           _s9j0S::I64 = I64[R1 + 7];
           _s9j0T::I64 = _s9j0S::I64 & 1;
           if (_s9j0T::I64 != 0) goto u9jMz; else goto c9jM3;
       u9jMz: // global
           I64[Sp - 8] = _s9j0T::I64;
           I64[Sp] = _s9j0S::I64;
           Sp = Sp - 8;
           call _c9jJV() args: 0, res: 0, upd: 0;
       c9jM3: // global
           _s9j12::I64 = _s9j0S::I64 & 2;
           if (_s9j12::I64 != 0) goto u9jMB; else goto c9jMg;
       u9jMB: // global
           I64[Sp - 8] = _s9j12::I64;
           I64[Sp] = _s9j0S::I64;
           Sp = Sp - 8;
           call _c9jL9() args: 0, res: 0, upd: 0;
       c9jMg: // global
           _s9j17::I64 = _s9j0S::I64 & 4;
           if (_s9j17::I64 != 0) goto u9jMD; else goto c9jMv;
       u9jMD: // global
           I64[Sp] = _s9j17::I64;
           call _c9jLF() args: 0, res: 0, upd: 0;
       c9jMv: // global
           R1 = GHC.Event.Internal.$fShowEvent4_closure;
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 _c9jJV() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jJV: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c9jLY; else goto c9jLX;
       c9jLY: // global
           HpAlloc = 48;
           _s9j0T::I64 = I64[Sp];
           I64[Sp] = block_c9jJU_info;
           R1 = _s9j0T::I64;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 24;
       c9jLX: // global
           I64[Hp - 40] = sat_s9j0Z_info;
           I64[Hp - 24] = I64[Sp + 8];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Event.Internal.$fShowEvent11_closure;
           P64[Hp] = Hp - 40;
           I64[Sp + 8] = block_c9jLT_info;
           R2 = Hp - 14;
           Sp = Sp + 8;
           call Data.OldList.intercalate1_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 _c9jJU() //  [R1]
         { info_tbl: [(c9jJU,
                       label: block_c9jJU_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jJU: // global
           I64[Sp] = R1;
           call _c9jJV() args: 0, res: 0, upd: 0;
     }
 },
 _c9jLT() //  [R1]
         { info_tbl: [(c9jLT,
                       label: block_c9jLT_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jLT: // global
           R3 = GHC.Event.Internal.$fShowEvent4_closure;
           R2 = R1;
           Sp = Sp + 8;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 _c9jL9() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jL9: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c9jMb; else goto c9jMa;
       c9jMb: // global
           HpAlloc = 48;
           _s9j12::I64 = I64[Sp];
           I64[Sp] = block_c9jL8_info;
           R1 = _s9j12::I64;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 24;
       c9jMa: // global
           I64[Hp - 40] = sat_s9j14_info;
           I64[Hp - 24] = I64[Sp + 8];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Event.Internal.$fShowEvent7_closure;
           P64[Hp] = Hp - 40;
           I64[Sp + 8] = block_c9jM6_info;
           R2 = Hp - 14;
           Sp = Sp + 8;
           call Data.OldList.intercalate1_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 _c9jL8() //  [R1]
         { info_tbl: [(c9jL8,
                       label: block_c9jL8_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jL8: // global
           I64[Sp] = R1;
           call _c9jL9() args: 0, res: 0, upd: 0;
     }
 },
 _c9jM6() //  [R1]
         { info_tbl: [(c9jM6,
                       label: block_c9jM6_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jM6: // global
           R3 = GHC.Event.Internal.$fShowEvent4_closure;
           R2 = R1;
           Sp = Sp + 8;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 _c9jLF() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jLF: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c9jMo; else goto c9jMn;
       c9jMo: // global
           HpAlloc = 40;
           _s9j17::I64 = I64[Sp];
           I64[Sp] = block_c9jLE_info;
           R1 = _s9j17::I64;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 24;
       c9jMn: // global
           I64[Hp - 32] = sat_s9j18_info;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Event.Internal.$fShowEvent2_closure;
           P64[Hp] = Hp - 32;
           I64[Sp] = block_c9jMj_info;
           R2 = Hp - 14;
           call Data.OldList.intercalate1_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 _c9jLE() //  [R1]
         { info_tbl: [(c9jLE,
                       label: block_c9jLE_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jLE: // global
           I64[Sp] = R1;
           call _c9jLF() args: 0, res: 0, upd: 0;
     }
 },
 _c9jMj() //  [R1]
         { info_tbl: [(c9jMj,
                       label: block_c9jMj_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jMj: // global
           R3 = GHC.Event.Internal.$fShowEvent4_closure;
           R2 = R1;
           Sp = Sp + 8;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 GHC.Event.Internal.$w$cshow_entry() //  [R2]
         { info_tbl: [(c9jMM,
                       label: GHC.Event.Internal.$w$cshow_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jMM: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9jMQ; else goto c9jMP;
       c9jMQ: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = GHC.Event.Internal.$w$cshow_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9jMP: // global
           I64[Hp - 16] = sat_s9j1b_info;
           P64[Hp] = R2;
           R2 = Hp - 16;
           R1 = GHC.Event.Internal.$fShowEvent13_closure+1;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.504572512 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent_$cshow_closure" {
     GHC.Event.Internal.$fShowEvent_$cshow_closure:
         const GHC.Event.Internal.$fShowEvent_$cshow_info;
         const 0;
 },
 GHC.Event.Internal.$fShowEvent_$cshow_entry() //  [R2]
         { info_tbl: [(c9jMY,
                       label: GHC.Event.Internal.$fShowEvent_$cshow_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jMY: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9jMZ; else goto c9jN0;
       c9jMZ: // global
           R2 = R2;
           R1 = GHC.Event.Internal.$fShowEvent_$cshow_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9jN0: // global
           I64[Sp - 8] = block_c9jMV_info;
           R2 = R2;
           Sp = Sp - 8;
           call GHC.Event.Internal.$w$cshow_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9jMV() //  [R1, R2]
         { info_tbl: [(c9jMV,
                       label: block_c9jMV_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jMV: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9jN3; else goto c9jN2;
       c9jN3: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 8;
       c9jN2: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.505874913 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent_$cshowsPrec_closure" {
     GHC.Event.Internal.$fShowEvent_$cshowsPrec_closure:
         const GHC.Event.Internal.$fShowEvent_$cshowsPrec_info;
         const 0;
 },
 GHC.Event.Internal.$fShowEvent_$cshowsPrec_entry() //  [R2, R3, R4]
         { info_tbl: [(c9jNb,
                       label: GHC.Event.Internal.$fShowEvent_$cshowsPrec_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jNb: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9jNc; else goto c9jNd;
       c9jNc: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fShowEvent_$cshowsPrec_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9jNd: // global
           I64[Sp - 16] = block_c9jN8_info;
           R2 = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 16;
           call GHC.Event.Internal.$w$cshow_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9jN8() //  [R1, R2]
         { info_tbl: [(c9jN8,
                       label: block_c9jN8_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jN8: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9jNg; else goto c9jNf;
       c9jNg: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 8;
       c9jNf: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R3 = P64[Sp + 8];
           R2 = Hp - 14;
           Sp = Sp + 16;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.507235821 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent1_closure" {
     GHC.Event.Internal.$fShowEvent1_closure:
         const GHC.Event.Internal.$fShowEvent1_info;
         const 0;
 },
 GHC.Event.Internal.$fShowEvent1_entry() //  [R2, R3]
         { info_tbl: [(c9jNo,
                       label: GHC.Event.Internal.$fShowEvent1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jNo: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9jNp; else goto c9jNq;
       c9jNp: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fShowEvent1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9jNq: // global
           I64[Sp - 16] = block_c9jNl_info;
           R2 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           call GHC.Event.Internal.$w$cshow_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9jNl() //  [R1, R2]
         { info_tbl: [(c9jNl,
                       label: block_c9jNl_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jNl: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9jNt; else goto c9jNs;
       c9jNt: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 8;
       c9jNs: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R3 = P64[Sp + 8];
           R2 = Hp - 14;
           Sp = Sp + 16;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.508440843 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent_$cshowList_closure" {
     GHC.Event.Internal.$fShowEvent_$cshowList_closure:
         const GHC.Event.Internal.$fShowEvent_$cshowList_info;
         const 0;
 },
 GHC.Event.Internal.$fShowEvent_$cshowList_entry() //  [R2, R3]
         { info_tbl: [(c9jNy,
                       label: GHC.Event.Internal.$fShowEvent_$cshowList_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jNy: // global
           R4 = R3;
           R3 = R2;
           R2 = GHC.Event.Internal.$fShowEvent1_closure+2;
           call GHC.Show.showList___entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.50916071 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent_closure" {
     GHC.Event.Internal.$fShowEvent_closure:
         const GHC.Show.C:Show_con_info;
         const GHC.Event.Internal.$fShowEvent_$cshowsPrec_closure+3;
         const GHC.Event.Internal.$fShowEvent_$cshow_closure+1;
         const GHC.Event.Internal.$fShowEvent_$cshowList_closure+2;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.509990368 UTC

[section ""data" . GHC.Event.Internal.Backend_closure" {
     GHC.Event.Internal.Backend_closure:
         const GHC.Event.Internal.Backend_info;
 },
 GHC.Event.Internal.Backend_entry() //  [R2, R3, R4, R5, R6]
         { info_tbl: [(c9jNG,
                       label: GHC.Event.Internal.Backend_info
                       rep:HeapRep static { Fun {arity: 5 fun_type: ArgSpec 25} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jNG: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c9jNK; else goto c9jNJ;
       c9jNK: // global
           HpAlloc = 48;
           R6 = R6;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.Backend_closure;
           call (stg_gc_fun)(R6, R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9jNJ: // global
           I64[Hp - 40] = GHC.Event.Internal.Backend_con_info;
           P64[Hp - 32] = R2;
           P64[Hp - 24] = R3;
           P64[Hp - 16] = R4;
           P64[Hp - 8] = R5;
           P64[Hp] = R6;
           R1 = Hp - 39;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.511013117 UTC

[section ""data" . GHC.Event.Internal.Timeout_closure" {
     GHC.Event.Internal.Timeout_closure:
         const GHC.Event.Internal.Timeout_info;
 },
 GHC.Event.Internal.Timeout_entry() //  [R2]
         { info_tbl: [(c9jNQ,
                       label: GHC.Event.Internal.Timeout_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jNQ: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9jNU; else goto c9jNT;
       c9jNU: // global
           HpAlloc = 16;
           R2 = R2;
           R1 = GHC.Event.Internal.Timeout_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9jNT: // global
           I64[Hp - 8] = GHC.Event.Internal.Timeout_con_info;
           I64[Hp] = R2;
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.511784792 UTC

[section ""data" . GHC.Event.Internal.Forever_closure" {
     GHC.Event.Internal.Forever_closure:
         const GHC.Event.Internal.Forever_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.512329616 UTC

[section ""data" . GHC.Event.Internal.OneShot_closure" {
     GHC.Event.Internal.OneShot_closure:
         const GHC.Event.Internal.OneShot_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.512837498 UTC

[section ""data" . GHC.Event.Internal.MultiShot_closure" {
     GHC.Event.Internal.MultiShot_closure:
         const GHC.Event.Internal.MultiShot_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.513713403 UTC

[GHC.Event.Internal.Backend_con_entry() //  [R1]
         { info_tbl: [(c9jNV,
                       label: GHC.Event.Internal.Backend_con_info
                       rep:HeapRep 5 ptrs {
                             Con {tag: 0
                                  descr:[98,97,115,101,58,71,72,67,46,69,118,101,110,116,46,73,110,116,101,114,110,97,108,46,66,97,99,107,101,110,100]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jNV: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.515736904 UTC

[GHC.Event.Internal.Timeout_con_entry() //  [R1]
         { info_tbl: [(c9jNX,
                       label: GHC.Event.Internal.Timeout_con_info
                       rep:HeapRep 1 nonptrs {
                             Con {tag: 0
                                  descr:[98,97,115,101,58,71,72,67,46,69,118,101,110,116,46,73,110,116,101,114,110,97,108,46,84,105,109,101,111,117,116]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jNX: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.516481346 UTC

[GHC.Event.Internal.Forever_con_entry() //  [R1]
         { info_tbl: [(c9jNZ,
                       label: GHC.Event.Internal.Forever_con_info
                       rep:HeapRep 1 nonptrs {
                             Con {tag: 1
                                  descr:[98,97,115,101,58,71,72,67,46,69,118,101,110,116,46,73,110,116,101,114,110,97,108,46,70,111,114,101,118,101,114]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jNZ: // global
           R1 = R1 + 2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.517165041 UTC

[section ""relreadonly" . GHC.Event.Internal.Lifetime_closure_tbl" {
     GHC.Event.Internal.Lifetime_closure_tbl:
         const GHC.Event.Internal.OneShot_closure+1;
         const GHC.Event.Internal.MultiShot_closure+2;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.517763858 UTC

[GHC.Event.Internal.OneShot_con_entry() //  [R1]
         { info_tbl: [(c9jO1,
                       label: GHC.Event.Internal.OneShot_con_info
                       rep:HeapRep 1 nonptrs {
                             Con {tag: 0
                                  descr:[98,97,115,101,58,71,72,67,46,69,118,101,110,116,46,73,110,116,101,114,110,97,108,46,79,110,101,83,104,111,116]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jO1: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.518477913 UTC

[GHC.Event.Internal.MultiShot_con_entry() //  [R1]
         { info_tbl: [(c9jO3,
                       label: GHC.Event.Internal.MultiShot_con_info
                       rep:HeapRep 1 nonptrs {
                             Con {tag: 1
                                  descr:[98,97,115,101,58,71,72,67,46,69,118,101,110,116,46,73,110,116,101,114,110,97,108,46,77,117,108,116,105,83,104,111,116]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jO3: // global
           R1 = R1 + 2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.51913197 UTC

[section ""relreadonly" . S9j2f_srt" {
     S9j2f_srt:
         const GHC.Event.Internal.$fShowTimeout3_closure;
         const GHC.Show.$w$cshowsPrec4_closure;
         const GHC.Event.Internal.$fShowTimeout_$cshowsPrec_closure;
         const GHC.Event.Internal.$fShowTimeout2_closure;
         const GHC.Event.Internal.$fShowTimeout_$cshow_closure;
         const GHC.Event.Internal.$fShowTimeout1_closure;
         const GHC.Event.Internal.$fShowLifetime2_closure;
         const GHC.Event.Internal.$fShowLifetime4_closure;
         const GHC.Event.Internal.$fShowLifetime_$cshowsPrec_closure;
         const GHC.Event.Internal.$fShowLifetime_$cshow_closure;
         const GHC.Event.Internal.$fShowLifetime1_closure;
         const Data.Semigroup.Internal.stimesMonoid_closure;
         const GHC.Event.Internal.$fMonoidLifetime_closure;
         const sat_s9iZu_closure;
         const GHC.Event.Internal.throwErrnoIfMinus1NoRetry3_closure;
         const GHC.Event.Internal.throwErrnoIfMinus1NoRetry2_closure;
         const Foreign.C.Error.throwErrno1_closure;
         const GHC.Event.Internal.throwErrnoIfMinus1NoRetry1_closure;
         const Data.Semigroup.Internal.stimesDefault_closure;
         const GHC.Event.Internal.$fSemigroupEventLifetime_closure;
         const GHC.Event.Internal.evtNothing_closure;
         const GHC.Event.Internal.$fMonoidEvent_closure;
         const GHC.Event.Internal.$fShowEvent6_closure;
         const GHC.Event.Internal.$fShowEvent7_closure;
         const GHC.Event.Internal.$fShowEvent9_closure;
         const GHC.Event.Internal.$fShowEvent2_closure;
         const GHC.Event.Internal.$fShowEvent4_closure;
         const GHC.Event.Internal.$fShowEvent11_closure;
         const GHC.Event.Internal.$w$cshow_closure;
         const GHC.Event.Internal.$fShowEvent_$cshow_closure;
         const GHC.Event.Internal.$fShowEvent_$cshowsPrec_closure;
         const GHC.Event.Internal.$fShowEvent1_closure;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.520099421 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:04:26.521576761 UTC

[section ""data" . GHC.Event.Internal.$WBackend_closure" {
     GHC.Event.Internal.$WBackend_closure:
         const GHC.Event.Internal.$WBackend_info;
 },
 GHC.Event.Internal.$WBackend_entry() //  [R2, R3, R4, R5, R6]
         { info_tbl: [(c9jOc,
                       label: GHC.Event.Internal.$WBackend_info
                       rep:HeapRep static { Fun {arity: 5 fun_type: ArgSpec 25} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jOc: // global
           if ((Sp + -40) < SpLim) (likely: False) goto c9jOd; else goto c9jOe;
       c9jOd: // global
           R6 = R6;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$WBackend_closure;
           call (stg_gc_fun)(R6, R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9jOe: // global
           I64[Sp - 40] = block_c9jO9_info;
           R1 = R2;
           P64[Sp - 32] = R3;
           P64[Sp - 24] = R4;
           P64[Sp - 16] = R5;
           P64[Sp - 8] = R6;
           Sp = Sp - 40;
           call stg_ap_0_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jO9() //  [R1]
         { info_tbl: [(c9jO9,
                       label: block_c9jO9_info
                       rep:StackRep [False, False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jO9: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c9jOh; else goto c9jOg;
       c9jOh: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9jOg: // global
           I64[Hp - 40] = GHC.Event.Internal.Backend_con_info;
           P64[Hp - 32] = R1;
           P64[Hp - 24] = P64[Sp + 8];
           P64[Hp - 16] = P64[Sp + 16];
           P64[Hp - 8] = P64[Sp + 24];
           P64[Hp] = P64[Sp + 32];
           R1 = Hp - 39;
           Sp = Sp + 40;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.527838275 UTC

[section ""data" . GHC.Event.Internal.$WTimeout_closure" {
     GHC.Event.Internal.$WTimeout_closure:
         const GHC.Event.Internal.$WTimeout_info;
 },
 GHC.Event.Internal.$WTimeout_entry() //  [R2]
         { info_tbl: [(c9jOC,
                       label: GHC.Event.Internal.$WTimeout_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jOC: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9jOG; else goto c9jOH;
       c9jOG: // global
           R2 = R2;
           R1 = GHC.Event.Internal.$WTimeout_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9jOH: // global
           I64[Sp - 8] = block_c9jOz_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9jOL; else goto c9jOA;
       u9jOL: // global
           call _c9jOz(R1) args: 0, res: 0, upd: 0;
       c9jOA: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jOz() //  [R1]
         { info_tbl: [(c9jOz,
                       label: block_c9jOz_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jOz: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9jOK; else goto c9jOJ;
       c9jOK: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9jOJ: // global
           _s9iX5::I64 = I64[R1 + 7];
           I64[Hp - 8] = GHC.Event.Internal.Timeout_con_info;
           I64[Hp] = _s9iX5::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.533143263 UTC

[section ""data" . GHC.Event.Internal.$fMonoidEventLifetime1_closure" {
     GHC.Event.Internal.$fMonoidEventLifetime1_closure:
         const GHC.Types.I#_con_info;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.534841058 UTC

[section ""cstring" . GHC.Event.Internal.$fShowTimeout4_bytes" {
     GHC.Event.Internal.$fShowTimeout4_bytes:
         I8[] [70,111,114,101,118,101,114]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.53668505 UTC

[section ""data" . GHC.Event.Internal.$fShowTimeout3_closure" {
     GHC.Event.Internal.$fShowTimeout3_closure:
         const GHC.Event.Internal.$fShowTimeout3_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Internal.$fShowTimeout3_entry() //  [R1]
         { info_tbl: [(c9jP4,
                       label: GHC.Event.Internal.$fShowTimeout3_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jP4: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9jP5; else goto c9jP6;
       c9jP5: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jP6: // global
           (_c9jP1::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9jP1::I64 == 0) goto c9jP3; else goto c9jP2;
       c9jP3: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9jP2: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9jP1::I64;
           R2 = GHC.Event.Internal.$fShowTimeout4_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.540886371 UTC

[section ""data" . GHC.Event.Internal.$fShowTimeout2_closure" {
     GHC.Event.Internal.$fShowTimeout2_closure:
         const GHC.Event.Internal.$fShowTimeout2_info;
         const 0;
 },
 GHC.Event.Internal.$fShowTimeout2_entry() //  [R2]
         { info_tbl: [(c9jPi,
                       label: GHC.Event.Internal.$fShowTimeout2_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jPi: // global
           R3 = R2;
           R2 = GHC.Event.Internal.$fShowTimeout3_closure;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.544170473 UTC

[section ""cstring" . GHC.Event.Internal.$fShowTimeout5_bytes" {
     GHC.Event.Internal.$fShowTimeout5_bytes:
         I8[] [84,105,109,101,111,117,116,32]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.547639978 UTC

[section ""data" . GHC.Event.Internal.$fShowTimeout_$cshowsPrec_closure" {
     GHC.Event.Internal.$fShowTimeout_$cshowsPrec_closure:
         const GHC.Event.Internal.$fShowTimeout_$cshowsPrec_info;
         const 0;
 },
 w1_s9iXc_entry() //  [R1]
         { info_tbl: [(c9jPK,
                       label: w1_s9iXc_info
                       rep:HeapRep 1 nonptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jPK: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9jPL; else goto c9jPS;
       c9jPL: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jPS: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           _s9iX9::I64 = I64[R1 + 16];
           if (%MO_S_Lt_W64(_s9iX9::I64, 0)) goto c9jPQ; else goto c9jPR;
       c9jPQ: // global
           R2 = _s9iX9::I64;
           Sp = Sp - 16;
           call GHC.Integer.Type.wordToInteger_entry(R2) args: 24, res: 0, upd: 24;
       c9jPR: // global
           R2 = _s9iX9::I64;
           Sp = Sp - 16;
           call GHC.Integer.Type.smallInteger_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 sat_s9iXk_entry() //  [R1]
         { info_tbl: [(c9jQ8,
                       label: sat_s9iXk_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jQ8: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9jQ9; else goto c9jQa;
       c9jQ9: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jQa: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c9jQ5_info;
           R4 = P64[R1 + 24];
           R3 = P64[R1 + 16];
           R2 = 11;
           Sp = Sp - 24;
           call GHC.Show.$w$cshowsPrec4_entry(R4,
                                              R3,
                                              R2) args: 8, res: 8, upd: 24;
     }
 },
 _c9jQ5() //  [R1, R2]
         { info_tbl: [(c9jQ5,
                       label: block_c9jQ5_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jQ5: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9jQd; else goto c9jQc;
       c9jQd: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c9jQc: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 sat_s9iXl_entry() //  [R1, R2]
         { info_tbl: [(c9jQe,
                       label: sat_s9iXl_info
                       rep:HeapRep 1 ptrs { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jQe: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c9jQi; else goto c9jQh;
       c9jQi: // global
           HpAlloc = 32;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9jQh: // global
           _s9iXc::P64 = P64[R1 + 7];
           I64[Hp - 24] = sat_s9iXk_info;
           P64[Hp - 8] = _s9iXc::P64;
           P64[Hp] = R2;
           R3 = Hp - 24;
           R2 = GHC.Event.Internal.$fShowTimeout5_bytes;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 sat_s9iXr_entry() //  [R1]
         { info_tbl: [(c9jQB,
                       label: sat_s9iXr_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jQB: // global
           _s9iXr::P64 = R1;
           if ((Sp + -24) < SpLim) (likely: False) goto c9jQC; else goto c9jQD;
       c9jQD: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9jQF; else goto c9jQE;
       c9jQF: // global
           HpAlloc = 24;
           goto c9jQC;
       c9jQC: // global
           R1 = _s9iXr::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jQE: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s9iXr::P64;
           _s9iXc::P64 = P64[_s9iXr::P64 + 16];
           _s9iXm::P64 = P64[_s9iXr::P64 + 24];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.$fShow(,)2_closure;
           P64[Hp] = _s9iXm::P64;
           I64[Sp - 24] = block_c9jQy_info;
           R4 = Hp - 14;
           R3 = _s9iXc::P64;
           R2 = 11;
           Sp = Sp - 24;
           call GHC.Show.$w$cshowsPrec4_entry(R4,
                                              R3,
                                              R2) args: 8, res: 8, upd: 24;
     }
 },
 _c9jQy() //  [R1, R2]
         { info_tbl: [(c9jQy,
                       label: block_c9jQy_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jQy: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9jQI; else goto c9jQH;
       c9jQI: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c9jQH: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 sat_s9iXs_entry() //  [R1]
         { info_tbl: [(c9jQJ,
                       label: sat_s9iXs_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jQJ: // global
           _s9iXs::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9jQK; else goto c9jQL;
       c9jQL: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c9jQN; else goto c9jQM;
       c9jQN: // global
           HpAlloc = 32;
           goto c9jQK;
       c9jQK: // global
           R1 = _s9iXs::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jQM: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s9iXs::P64;
           _s9iXc::P64 = P64[_s9iXs::P64 + 16];
           _s9iXm::P64 = P64[_s9iXs::P64 + 24];
           I64[Hp - 24] = sat_s9iXr_info;
           P64[Hp - 8] = _s9iXc::P64;
           P64[Hp] = _s9iXm::P64;
           R3 = Hp - 24;
           R2 = GHC.Event.Internal.$fShowTimeout5_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 24, res: 0, upd: 24;
     }
 },
 sat_s9iXt_entry() //  [R1, R2]
         { info_tbl: [(c9jQP,
                       label: sat_s9iXt_info
                       rep:HeapRep 1 ptrs { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jQP: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c9jQT; else goto c9jQS;
       c9jQT: // global
           HpAlloc = 56;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9jQS: // global
           _s9iXc::P64 = P64[R1 + 7];
           I64[Hp - 48] = sat_s9iXs_info;
           P64[Hp - 32] = _s9iXc::P64;
           P64[Hp - 24] = R2;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.$fShow(,)4_closure;
           P64[Hp] = Hp - 48;
           R1 = Hp - 14;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.Event.Internal.$fShowTimeout_$cshowsPrec_entry() //  [R2, R3]
         { info_tbl: [(c9jQY,
                       label: GHC.Event.Internal.$fShowTimeout_$cshowsPrec_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jQY: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9jQZ; else goto c9jR0;
       c9jQZ: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fShowTimeout_$cshowsPrec_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9jR0: // global
           I64[Sp - 16] = block_c9jPu_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9jRc; else goto c9jPv;
       u9jRc: // global
           call _c9jPu(R1) args: 0, res: 0, upd: 0;
       c9jPv: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jPu() //  [R1]
         { info_tbl: [(c9jPu,
                       label: block_c9jPu_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jPu: // global
           if (R1 & 7 == 1) goto c9jQV; else goto c9jQW;
       c9jQV: // global
           I64[Sp] = block_c9jPz_info;
           _s9iX9::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9iX9::I64;
           if (R1 & 7 != 0) goto u9jRb; else goto c9jPA;
       u9jRb: // global
           call _c9jPz(R1) args: 0, res: 0, upd: 0;
       c9jPA: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c9jQW: // global
           R1 = GHC.Event.Internal.$fShowTimeout2_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9jPz() //  [R1]
         { info_tbl: [(c9jPz,
                       label: block_c9jPz_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jPz: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c9jR4; else goto c9jR3;
       c9jR4: // global
           HpAlloc = 40;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9jR3: // global
           _s9iXb::I64 = I64[R1 + 7];
           I64[Hp - 32] = w1_s9iXc_info;
           I64[Hp - 16] = I64[Sp + 8];
           _c9jPE::P64 = Hp - 32;
           if (%MO_S_Lt_W64(_s9iXb::I64, 11)) goto c9jR6; else goto c9jR7;
       c9jR6: // global
           I64[Hp - 8] = sat_s9iXl_info;
           P64[Hp] = _c9jPE::P64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9jR7: // global
           I64[Hp - 8] = sat_s9iXt_info;
           P64[Hp] = _c9jPE::P64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.573897693 UTC

[section ""data" . GHC.Event.Internal.$fShowTimeout_$cshow_closure" {
     GHC.Event.Internal.$fShowTimeout_$cshow_closure:
         const GHC.Event.Internal.$fShowTimeout_$cshow_info;
         const 0;
 },
 sat_s9iXH_entry() //  [R1]
         { info_tbl: [(c9jSh,
                       label: sat_s9iXH_info
                       rep:HeapRep 1 nonptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jSh: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9jSi; else goto c9jSN;
       c9jSi: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jSN: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           _s9iXw::I64 = I64[R1 + 16];
           if (%MO_S_Lt_W64(_s9iXw::I64, 0)) goto c9jSv; else goto c9jSI;
       c9jSv: // global
           I64[Sp - 24] = block_c9jSn_info;
           R2 = _s9iXw::I64;
           Sp = Sp - 24;
           call GHC.Integer.Type.wordToInteger_entry(R2) args: 8, res: 8, upd: 24;
       c9jSI: // global
           I64[Sp - 24] = block_c9jSB_info;
           R2 = _s9iXw::I64;
           Sp = Sp - 24;
           call GHC.Integer.Type.smallInteger_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 _c9jSn() //  [R1]
         { info_tbl: [(c9jSn,
                       label: block_c9jSn_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jSn: // global
           I64[Sp] = block_c9jSr_info;
           R4 = GHC.Types.[]_closure+1;
           R3 = R1;
           R2 = 11;
           call GHC.Show.$w$cshowsPrec4_entry(R4,
                                              R3,
                                              R2) args: 8, res: 8, upd: 24;
     }
 },
 _c9jSr() //  [R1, R2]
         { info_tbl: [(c9jSr,
                       label: block_c9jSr_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jSr: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9jSz; else goto c9jSy;
       c9jSz: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c9jSy: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 _c9jSB() //  [R1]
         { info_tbl: [(c9jSB,
                       label: block_c9jSB_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jSB: // global
           I64[Sp] = block_c9jSF_info;
           R4 = GHC.Types.[]_closure+1;
           R3 = R1;
           R2 = 11;
           call GHC.Show.$w$cshowsPrec4_entry(R4,
                                              R3,
                                              R2) args: 8, res: 8, upd: 24;
     }
 },
 _c9jSF() //  [R1, R2]
         { info_tbl: [(c9jSF,
                       label: block_c9jSF_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jSF: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9jSM; else goto c9jSL;
       c9jSM: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c9jSL: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 GHC.Event.Internal.$fShowTimeout_$cshow_entry() //  [R2]
         { info_tbl: [(c9jSS,
                       label: GHC.Event.Internal.$fShowTimeout_$cshow_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jSS: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9jST; else goto c9jSU;
       c9jST: // global
           R2 = R2;
           R1 = GHC.Event.Internal.$fShowTimeout_$cshow_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9jSU: // global
           I64[Sp - 8] = block_c9jS6_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9jT1; else goto c9jS7;
       u9jT1: // global
           call _c9jS6(R1) args: 0, res: 0, upd: 0;
       c9jS7: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jS6() //  [R1]
         { info_tbl: [(c9jS6,
                       label: block_c9jS6_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jS6: // global
           if (R1 & 7 == 1) goto c9jSP; else goto c9jSQ;
       c9jSP: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9jSX; else goto c9jSW;
       c9jSX: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9jSW: // global
           _s9iXw::I64 = I64[R1 + 7];
           I64[Hp - 16] = sat_s9iXH_info;
           I64[Hp] = _s9iXw::I64;
           R3 = Hp - 16;
           R2 = GHC.Event.Internal.$fShowTimeout5_bytes;
           Sp = Sp + 8;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
       c9jSQ: // global
           R1 = GHC.Event.Internal.$fShowTimeout3_closure;
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.589275108 UTC

[section ""data" . GHC.Event.Internal.$fShowTimeout1_closure" {
     GHC.Event.Internal.$fShowTimeout1_closure:
         const GHC.Event.Internal.$fShowTimeout1_info;
         const 0;
 },
 GHC.Event.Internal.$fShowTimeout1_entry() //  [R2]
         { info_tbl: [(c9jTA,
                       label: GHC.Event.Internal.$fShowTimeout1_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jTA: // global
           R3 = R2;
           R2 = GHC.Event.Internal.$fMonoidEventLifetime1_closure+1;
           call GHC.Event.Internal.$fShowTimeout_$cshowsPrec_entry(R3,
                                                                   R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.596450124 UTC

[section ""data" . GHC.Event.Internal.$fShowTimeout_$cshowList_closure" {
     GHC.Event.Internal.$fShowTimeout_$cshowList_closure:
         const GHC.Event.Internal.$fShowTimeout_$cshowList_info;
         const 0;
 },
 GHC.Event.Internal.$fShowTimeout_$cshowList_entry() //  [R2, R3]
         { info_tbl: [(c9jTL,
                       label: GHC.Event.Internal.$fShowTimeout_$cshowList_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jTL: // global
           R4 = R3;
           R3 = R2;
           R2 = GHC.Event.Internal.$fShowTimeout1_closure+1;
           call GHC.Show.showList___entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.600210541 UTC

[section ""data" . GHC.Event.Internal.$fShowTimeout_closure" {
     GHC.Event.Internal.$fShowTimeout_closure:
         const GHC.Show.C:Show_con_info;
         const GHC.Event.Internal.$fShowTimeout_$cshowsPrec_closure+2;
         const GHC.Event.Internal.$fShowTimeout_$cshow_closure+1;
         const GHC.Event.Internal.$fShowTimeout_$cshowList_closure+2;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.60239352 UTC

[section ""cstring" . GHC.Event.Internal.$fShowEventLifetime2_bytes" {
     GHC.Event.Internal.$fShowEventLifetime2_bytes:
         I8[] [69,76,32]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.606105911 UTC

[section ""data" . GHC.Event.Internal.$w$cshowsPrec_closure" {
     GHC.Event.Internal.$w$cshowsPrec_closure:
         const GHC.Event.Internal.$w$cshowsPrec_info;
 },
 sat_s9iXT_entry() //  [R1]
         { info_tbl: [(c9jU8,
                       label: sat_s9iXT_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jU8: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c9jUe; else goto c9jUf;
       c9jUe: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jUf: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 32] = block_c9jU5_info;
           _s9iXM::P64 = P64[R1 + 24];
           R1 = P64[R1 + 16];
           P64[Sp - 24] = _s9iXM::P64;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u9jUk; else goto c9jU6;
       u9jUk: // global
           call _c9jU5(R1) args: 0, res: 0, upd: 0;
       c9jU6: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 _c9jU5() //  [R1]
         { info_tbl: [(c9jU5,
                       label: block_c9jU5_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jU5: // global
           _s9iXM::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c9jUb_info;
           R4 = _s9iXM::P64;
           R3 = I64[R1 + 7];
           R2 = 11;
           Sp = Sp + 8;
           call GHC.Show.$wshowSignedInt_entry(R4,
                                               R3,
                                               R2) args: 8, res: 8, upd: 24;
     }
 },
 _c9jUb() //  [R1, R2]
         { info_tbl: [(c9jUb,
                       label: block_c9jUb_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jUb: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9jUj; else goto c9jUi;
       c9jUj: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c9jUi: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 sat_s9iY0_entry() //  [R1]
         { info_tbl: [(c9jUx,
                       label: sat_s9iY0_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jUx: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c9jUE; else goto c9jUF;
       c9jUE: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jUF: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 32] = block_c9jUu_info;
           _s9iXM::P64 = P64[R1 + 24];
           R1 = P64[R1 + 16];
           P64[Sp - 24] = _s9iXM::P64;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u9jUM; else goto c9jUv;
       u9jUM: // global
           call _c9jUu(R1) args: 0, res: 0, upd: 0;
       c9jUv: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 _c9jUu() //  [R1]
         { info_tbl: [(c9jUu,
                       label: block_c9jUu_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jUu: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9jUI; else goto c9jUH;
       c9jUI: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 24;
       c9jUH: // global
           _s9iXV::I64 = I64[R1 + 7];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.$fShow(,)2_closure;
           P64[Hp] = P64[Sp + 8];
           I64[Sp + 8] = block_c9jUB_info;
           R4 = Hp - 14;
           R3 = _s9iXV::I64;
           R2 = 11;
           Sp = Sp + 8;
           call GHC.Show.$wshowSignedInt_entry(R4,
                                               R3,
                                               R2) args: 8, res: 8, upd: 24;
     }
 },
 _c9jUB() //  [R1, R2]
         { info_tbl: [(c9jUB,
                       label: block_c9jUB_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jUB: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9jUL; else goto c9jUK;
       c9jUL: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c9jUK: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 sat_s9iY1_entry() //  [R1]
         { info_tbl: [(c9jUN,
                       label: sat_s9iY1_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jUN: // global
           _s9iY1::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9jUO; else goto c9jUP;
       c9jUP: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c9jUR; else goto c9jUQ;
       c9jUR: // global
           HpAlloc = 32;
           goto c9jUO;
       c9jUO: // global
           R1 = _s9iY1::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jUQ: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s9iY1::P64;
           _s9iXL::P64 = P64[_s9iY1::P64 + 16];
           _s9iXM::P64 = P64[_s9iY1::P64 + 24];
           I64[Hp - 24] = sat_s9iY0_info;
           P64[Hp - 8] = _s9iXL::P64;
           P64[Hp] = _s9iXM::P64;
           R3 = Hp - 24;
           R2 = GHC.Event.Internal.$fShowEventLifetime2_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 24, res: 0, upd: 24;
     }
 },
 GHC.Event.Internal.$w$cshowsPrec_entry() //  [R2, R3, R4]
         { info_tbl: [(c9jUV,
                       label: GHC.Event.Internal.$w$cshowsPrec_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 19} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jUV: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c9jUZ; else goto c9jUY;
       c9jUZ: // global
           HpAlloc = 56;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$w$cshowsPrec_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9jUY: // global
           if (%MO_S_Lt_W64(R2, 11)) goto c9jUT; else goto c9jUU;
       c9jUT: // global
           I64[Hp - 48] = sat_s9iXT_info;
           P64[Hp - 32] = R3;
           P64[Hp - 24] = R4;
           _c9jU1::P64 = Hp - 48;
           Hp = Hp - 24;
           R3 = _c9jU1::P64;
           R2 = GHC.Event.Internal.$fShowEventLifetime2_bytes;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
       c9jUU: // global
           I64[Hp - 48] = sat_s9iY1_info;
           P64[Hp - 32] = R3;
           P64[Hp - 24] = R4;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.$fShow(,)4_closure;
           P64[Hp] = Hp - 48;
           R1 = Hp - 14;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.627119545 UTC

[section ""data" . GHC.Event.Internal.$fShowEventLifetime_$cshowsPrec_closure" {
     GHC.Event.Internal.$fShowEventLifetime_$cshowsPrec_closure:
         const GHC.Event.Internal.$fShowEventLifetime_$cshowsPrec_info;
 },
 GHC.Event.Internal.$fShowEventLifetime_$cshowsPrec_entry() //  [R2,
                                                                 R3, R4]
         { info_tbl: [(c9jVH,
                       label: GHC.Event.Internal.$fShowEventLifetime_$cshowsPrec_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jVH: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9jVI; else goto c9jVJ;
       c9jVI: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fShowEventLifetime_$cshowsPrec_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9jVJ: // global
           I64[Sp - 24] = block_c9jVE_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9jVN; else goto c9jVF;
       u9jVN: // global
           call _c9jVE(R1) args: 0, res: 0, upd: 0;
       c9jVF: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jVE() //  [R1]
         { info_tbl: [(c9jVE,
                       label: block_c9jVE_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jVE: // global
           R4 = P64[Sp + 16];
           R3 = P64[Sp + 8];
           R2 = I64[R1 + 7];
           Sp = Sp + 24;
           call GHC.Event.Internal.$w$cshowsPrec_entry(R4,
                                                       R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.634209507 UTC

[section ""data" . GHC.Event.Internal.$fShowEventLifetime_$cshow_closure" {
     GHC.Event.Internal.$fShowEventLifetime_$cshow_closure:
         const GHC.Event.Internal.$fShowEventLifetime_$cshow_info;
 },
 sat_s9iYd_entry() //  [R1]
         { info_tbl: [(c9jW8,
                       label: sat_s9iYd_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jW8: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9jWe; else goto c9jWf;
       c9jWe: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jWf: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c9jW5_info;
           R1 = P64[R1 + 16];
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9jWk; else goto c9jW6;
       u9jWk: // global
           call _c9jW5(R1) args: 0, res: 0, upd: 0;
       c9jW6: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 _c9jW5() //  [R1]
         { info_tbl: [(c9jW5,
                       label: block_c9jW5_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jW5: // global
           I64[Sp] = block_c9jWb_info;
           R4 = GHC.Types.[]_closure+1;
           R3 = I64[R1 + 7];
           R2 = 11;
           call GHC.Show.$wshowSignedInt_entry(R4,
                                               R3,
                                               R2) args: 8, res: 8, upd: 24;
     }
 },
 _c9jWb() //  [R1, R2]
         { info_tbl: [(c9jWb,
                       label: block_c9jWb_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jWb: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9jWj; else goto c9jWi;
       c9jWj: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c9jWi: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 GHC.Event.Internal.$fShowEventLifetime_$cshow_entry() //  [R2]
         { info_tbl: [(c9jWl,
                       label: GHC.Event.Internal.$fShowEventLifetime_$cshow_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jWl: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9jWp; else goto c9jWo;
       c9jWp: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = GHC.Event.Internal.$fShowEventLifetime_$cshow_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9jWo: // global
           I64[Hp - 16] = sat_s9iYd_info;
           P64[Hp] = R2;
           R3 = Hp - 16;
           R2 = GHC.Event.Internal.$fShowEventLifetime2_bytes;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.644880673 UTC

[section ""data" . GHC.Event.Internal.$fShowEventLifetime1_closure" {
     GHC.Event.Internal.$fShowEventLifetime1_closure:
         const GHC.Event.Internal.$fShowEventLifetime1_info;
 },
 GHC.Event.Internal.$fShowEventLifetime1_entry() //  [R2, R3]
         { info_tbl: [(c9jWK,
                       label: GHC.Event.Internal.$fShowEventLifetime1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jWK: // global
           R4 = R3;
           R3 = R2;
           R2 = 0;
           call GHC.Event.Internal.$w$cshowsPrec_entry(R4,
                                                       R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.648216045 UTC

[section ""data" . GHC.Event.Internal.$fShowEventLifetime_$cshowList_closure" {
     GHC.Event.Internal.$fShowEventLifetime_$cshowList_closure:
         const GHC.Event.Internal.$fShowEventLifetime_$cshowList_info;
 },
 GHC.Event.Internal.$fShowEventLifetime_$cshowList_entry() //  [R2,
                                                                R3]
         { info_tbl: [(c9jWV,
                       label: GHC.Event.Internal.$fShowEventLifetime_$cshowList_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jWV: // global
           R4 = R3;
           R3 = R2;
           R2 = GHC.Event.Internal.$fShowEventLifetime1_closure+2;
           call GHC.Show.showList___entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.651408419 UTC

[section ""data" . GHC.Event.Internal.$fShowEventLifetime_closure" {
     GHC.Event.Internal.$fShowEventLifetime_closure:
         const GHC.Show.C:Show_con_info;
         const GHC.Event.Internal.$fShowEventLifetime_$cshowsPrec_closure+3;
         const GHC.Event.Internal.$fShowEventLifetime_$cshow_closure+1;
         const GHC.Event.Internal.$fShowEventLifetime_$cshowList_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.654038927 UTC

[section ""data" . GHC.Event.Internal.$fEqLifetime_$c==_closure" {
     GHC.Event.Internal.$fEqLifetime_$c==_closure:
         const GHC.Event.Internal.$fEqLifetime_$c==_info;
 },
 GHC.Event.Internal.$fEqLifetime_$c==_entry() //  [R2, R3]
         { info_tbl: [(c9jXe,
                       label: GHC.Event.Internal.$fEqLifetime_$c==_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jXe: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9jXf; else goto c9jXg;
       c9jXf: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fEqLifetime_$c==_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9jXg: // global
           I64[Sp - 16] = block_c9jX7_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9jXT; else goto c9jX8;
       u9jXT: // global
           call _c9jX7(R1) args: 0, res: 0, upd: 0;
       c9jX8: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jX7() //  [R1]
         { info_tbl: [(c9jX7,
                       label: block_c9jX7_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jX7: // global
           _s9iYj::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c9jXb; else goto c9jXc;
       c9jXb: // global
           I64[Sp + 8] = block_c9jXj_info;
           R1 = _s9iYj::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u9jXR; else goto c9jXl;
       u9jXR: // global
           call _c9jXj(R1) args: 0, res: 0, upd: 0;
       c9jXl: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c9jXc: // global
           I64[Sp + 8] = block_c9jXy_info;
           R1 = _s9iYj::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u9jXS; else goto c9jXA;
       u9jXS: // global
           call _c9jXy(R1) args: 0, res: 0, upd: 0;
       c9jXA: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jXj() //  [R1]
         { info_tbl: [(c9jXj,
                       label: block_c9jXj_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jXj: // global
           if (R1 & 7 == 1) goto u9jXP; else goto u9jXQ;
       u9jXP: // global
           Sp = Sp + 8;
           call _c9jXK() args: 0, res: 0, upd: 0;
       u9jXQ: // global
           Sp = Sp + 8;
           call _c9jXG() args: 0, res: 0, upd: 0;
     }
 },
 _c9jXy() //  [R1]
         { info_tbl: [(c9jXy,
                       label: block_c9jXy_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jXy: // global
           if (R1 & 7 == 1) goto u9jXN; else goto u9jXO;
       u9jXN: // global
           Sp = Sp + 8;
           call _c9jXG() args: 0, res: 0, upd: 0;
       u9jXO: // global
           Sp = Sp + 8;
           call _c9jXK() args: 0, res: 0, upd: 0;
     }
 },
 _c9jXG() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jXG: // global
           R1 = GHC.Types.False_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9jXK() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jXK: // global
           R1 = GHC.Types.True_closure+2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.664883389 UTC

[section ""data" . GHC.Event.Internal.$fEqLifetime_$c/=_closure" {
     GHC.Event.Internal.$fEqLifetime_$c/=_closure:
         const GHC.Event.Internal.$fEqLifetime_$c/=_info;
 },
 GHC.Event.Internal.$fEqLifetime_$c/=_entry() //  [R2, R3]
         { info_tbl: [(c9jYC,
                       label: GHC.Event.Internal.$fEqLifetime_$c/=_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jYC: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9jYD; else goto c9jYE;
       c9jYD: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fEqLifetime_$c/=_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9jYE: // global
           I64[Sp - 16] = block_c9jYv_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9jZh; else goto c9jYw;
       u9jZh: // global
           call _c9jYv(R1) args: 0, res: 0, upd: 0;
       c9jYw: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jYv() //  [R1]
         { info_tbl: [(c9jYv,
                       label: block_c9jYv_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jYv: // global
           _s9iYo::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c9jYz; else goto c9jYA;
       c9jYz: // global
           I64[Sp + 8] = block_c9jYH_info;
           R1 = _s9iYo::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u9jZf; else goto c9jYJ;
       u9jZf: // global
           call _c9jYH(R1) args: 0, res: 0, upd: 0;
       c9jYJ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c9jYA: // global
           I64[Sp + 8] = block_c9jYW_info;
           R1 = _s9iYo::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u9jZg; else goto c9jYY;
       u9jZg: // global
           call _c9jYW(R1) args: 0, res: 0, upd: 0;
       c9jYY: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9jYH() //  [R1]
         { info_tbl: [(c9jYH,
                       label: block_c9jYH_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jYH: // global
           if (R1 & 7 == 1) goto u9jZd; else goto u9jZe;
       u9jZd: // global
           Sp = Sp + 8;
           call _c9jZ8() args: 0, res: 0, upd: 0;
       u9jZe: // global
           Sp = Sp + 8;
           call _c9jZ4() args: 0, res: 0, upd: 0;
     }
 },
 _c9jYW() //  [R1]
         { info_tbl: [(c9jYW,
                       label: block_c9jYW_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jYW: // global
           if (R1 & 7 == 1) goto u9jZb; else goto u9jZc;
       u9jZb: // global
           Sp = Sp + 8;
           call _c9jZ4() args: 0, res: 0, upd: 0;
       u9jZc: // global
           Sp = Sp + 8;
           call _c9jZ8() args: 0, res: 0, upd: 0;
     }
 },
 _c9jZ4() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jZ4: // global
           R1 = GHC.Types.True_closure+2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9jZ8() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jZ8: // global
           R1 = GHC.Types.False_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.6759934 UTC

[section ""data" . GHC.Event.Internal.$fEqLifetime_closure" {
     GHC.Event.Internal.$fEqLifetime_closure:
         const GHC.Classes.C:Eq_con_info;
         const GHC.Event.Internal.$fEqLifetime_$c==_closure+2;
         const GHC.Event.Internal.$fEqLifetime_$c/=_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.678056784 UTC

[section ""cstring" . GHC.Event.Internal.$fShowLifetime5_bytes" {
     GHC.Event.Internal.$fShowLifetime5_bytes:
         I8[] [79,110,101,83,104,111,116]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.679865222 UTC

[section ""data" . GHC.Event.Internal.$fShowLifetime4_closure" {
     GHC.Event.Internal.$fShowLifetime4_closure:
         const GHC.Event.Internal.$fShowLifetime4_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Internal.$fShowLifetime4_entry() //  [R1]
         { info_tbl: [(c9jZX,
                       label: GHC.Event.Internal.$fShowLifetime4_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9jZX: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9jZY; else goto c9jZZ;
       c9jZY: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9jZZ: // global
           (_c9jZU::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9jZU::I64 == 0) goto c9jZW; else goto c9jZV;
       c9jZW: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9jZV: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9jZU::I64;
           R2 = GHC.Event.Internal.$fShowLifetime5_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.683654533 UTC

[section ""cstring" . GHC.Event.Internal.$fShowLifetime3_bytes" {
     GHC.Event.Internal.$fShowLifetime3_bytes:
         I8[] [77,117,108,116,105,83,104,111,116]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.685905629 UTC

[section ""data" . GHC.Event.Internal.$fShowLifetime2_closure" {
     GHC.Event.Internal.$fShowLifetime2_closure:
         const GHC.Event.Internal.$fShowLifetime2_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Internal.$fShowLifetime2_entry() //  [R1]
         { info_tbl: [(c9k0e,
                       label: GHC.Event.Internal.$fShowLifetime2_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9k0e: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9k0f; else goto c9k0g;
       c9k0f: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9k0g: // global
           (_c9k0b::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9k0b::I64 == 0) goto c9k0d; else goto c9k0c;
       c9k0d: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9k0c: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9k0b::I64;
           R2 = GHC.Event.Internal.$fShowLifetime3_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.690137014 UTC

[section ""data" . GHC.Event.Internal.$fShowLifetime_$cshowsPrec_closure" {
     GHC.Event.Internal.$fShowLifetime_$cshowsPrec_closure:
         const GHC.Event.Internal.$fShowLifetime_$cshowsPrec_info;
         const 0;
 },
 GHC.Event.Internal.$fShowLifetime_$cshowsPrec_entry() //  [R2, R3,
                                                            R4]
         { info_tbl: [(c9k0z,
                       label: GHC.Event.Internal.$fShowLifetime_$cshowsPrec_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9k0z: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9k0A; else goto c9k0B;
       c9k0A: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fShowLifetime_$cshowsPrec_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9k0B: // global
           I64[Sp - 16] = block_c9k0s_info;
           R1 = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9k0I; else goto c9k0t;
       u9k0I: // global
           call _c9k0s(R1) args: 0, res: 0, upd: 0;
       c9k0t: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9k0s() //  [R1]
         { info_tbl: [(c9k0s,
                       label: block_c9k0s_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9k0s: // global
           _s9iYu::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c9k0w; else goto c9k0x;
       c9k0w: // global
           R3 = _s9iYu::P64;
           R2 = GHC.Event.Internal.$fShowLifetime4_closure;
           Sp = Sp + 16;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
       c9k0x: // global
           R3 = _s9iYu::P64;
           R2 = GHC.Event.Internal.$fShowLifetime2_closure;
           Sp = Sp + 16;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.696204984 UTC

[section ""data" . GHC.Event.Internal.$fShowLifetime_$cshow_closure" {
     GHC.Event.Internal.$fShowLifetime_$cshow_closure:
         const GHC.Event.Internal.$fShowLifetime_$cshow_info;
         const 0;
 },
 GHC.Event.Internal.$fShowLifetime_$cshow_entry() //  [R2]
         { info_tbl: [(c9k15,
                       label: GHC.Event.Internal.$fShowLifetime_$cshow_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9k15: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9k16; else goto c9k17;
       c9k16: // global
           R2 = R2;
           R1 = GHC.Event.Internal.$fShowLifetime_$cshow_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9k17: // global
           I64[Sp - 8] = block_c9k0Y_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9k1e; else goto c9k0Z;
       u9k1e: // global
           call _c9k0Y(R1) args: 0, res: 0, upd: 0;
       c9k0Z: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9k0Y() //  [R1]
         { info_tbl: [(c9k0Y,
                       label: block_c9k0Y_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9k0Y: // global
           if (R1 & 7 == 1) goto c9k12; else goto c9k13;
       c9k12: // global
           R1 = GHC.Event.Internal.$fShowLifetime4_closure;
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c9k13: // global
           R1 = GHC.Event.Internal.$fShowLifetime2_closure;
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.702078602 UTC

[section ""data" . GHC.Event.Internal.$fShowLifetime1_closure" {
     GHC.Event.Internal.$fShowLifetime1_closure:
         const GHC.Event.Internal.$fShowLifetime1_info;
         const 0;
 },
 GHC.Event.Internal.$fShowLifetime1_entry() //  [R2, R3]
         { info_tbl: [(c9k1D,
                       label: GHC.Event.Internal.$fShowLifetime1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9k1D: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9k1E; else goto c9k1F;
       c9k1E: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fShowLifetime1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9k1F: // global
           I64[Sp - 16] = block_c9k1w_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9k1M; else goto c9k1x;
       u9k1M: // global
           call _c9k1w(R1) args: 0, res: 0, upd: 0;
       c9k1x: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9k1w() //  [R1]
         { info_tbl: [(c9k1w,
                       label: block_c9k1w_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9k1w: // global
           _s9iYz::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c9k1A; else goto c9k1B;
       c9k1A: // global
           R3 = _s9iYz::P64;
           R2 = GHC.Event.Internal.$fShowLifetime4_closure;
           Sp = Sp + 16;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
       c9k1B: // global
           R3 = _s9iYz::P64;
           R2 = GHC.Event.Internal.$fShowLifetime2_closure;
           Sp = Sp + 16;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.708117902 UTC

[section ""data" . GHC.Event.Internal.$fShowLifetime_$cshowList_closure" {
     GHC.Event.Internal.$fShowLifetime_$cshowList_closure:
         const GHC.Event.Internal.$fShowLifetime_$cshowList_info;
         const 0;
 },
 GHC.Event.Internal.$fShowLifetime_$cshowList_entry() //  [R2, R3]
         { info_tbl: [(c9k22,
                       label: GHC.Event.Internal.$fShowLifetime_$cshowList_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9k22: // global
           R4 = R3;
           R3 = R2;
           R2 = GHC.Event.Internal.$fShowLifetime1_closure+2;
           call GHC.Show.showList___entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.711405209 UTC

[section ""data" . GHC.Event.Internal.$fShowLifetime_closure" {
     GHC.Event.Internal.$fShowLifetime_closure:
         const GHC.Show.C:Show_con_info;
         const GHC.Event.Internal.$fShowLifetime_$cshowsPrec_closure+3;
         const GHC.Event.Internal.$fShowLifetime_$cshow_closure+1;
         const GHC.Event.Internal.$fShowLifetime_$cshowList_closure+2;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.713093091 UTC

[section ""data" . GHC.Event.Internal._beDelete_closure" {
     GHC.Event.Internal._beDelete_closure:
         const ()_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.714938195 UTC

[section ""data" . GHC.Event.Internal._beModifyFdOnce_closure" {
     GHC.Event.Internal._beModifyFdOnce_closure:
         const ()_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.716588516 UTC

[section ""data" . GHC.Event.Internal._beModifyFd_closure" {
     GHC.Event.Internal._beModifyFd_closure:
         const ()_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.718284636 UTC

[section ""data" . GHC.Event.Internal._bePoll_closure" {
     GHC.Event.Internal._bePoll_closure:
         const ()_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.7198806 UTC

[section ""data" . GHC.Event.Internal._beState_closure" {
     GHC.Event.Internal._beState_closure:
         const ()_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.721487831 UTC

[section ""data" . GHC.Event.Internal.evtNothing_closure" {
     GHC.Event.Internal.evtNothing_closure:
         const stg_IND_STATIC_info;
         const GHC.Event.Internal.$fMonoidEventLifetime1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.723232571 UTC

[section ""data" . evtRead1_r9iWk_closure" {
     evtRead1_r9iWk_closure:
         const GHC.Types.I#_con_info;
         const 1;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.724892532 UTC

[section ""data" . GHC.Event.Internal.evtRead_closure" {
     GHC.Event.Internal.evtRead_closure:
         const stg_IND_STATIC_info;
         const evtRead1_r9iWk_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.726938921 UTC

[section ""data" . evtWrite1_r9iWl_closure" {
     evtWrite1_r9iWl_closure:
         const GHC.Types.I#_con_info;
         const 2;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.728533173 UTC

[section ""data" . GHC.Event.Internal.evtWrite_closure" {
     GHC.Event.Internal.evtWrite_closure:
         const stg_IND_STATIC_info;
         const evtWrite1_r9iWl_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.730237861 UTC

[section ""data" . evtClose1_r9iWm_closure" {
     evtClose1_r9iWm_closure:
         const GHC.Types.I#_con_info;
         const 4;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.732378611 UTC

[section ""data" . GHC.Event.Internal.evtClose_closure" {
     GHC.Event.Internal.evtClose_closure:
         const stg_IND_STATIC_info;
         const evtClose1_r9iWm_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.735064743 UTC

[section ""data" . GHC.Event.Internal.elSupremum_closure" {
     GHC.Event.Internal.elSupremum_closure:
         const GHC.Event.Internal.elSupremum_info;
 },
 GHC.Event.Internal.elSupremum_entry() //  [R2, R3]
         { info_tbl: [(c9k2x,
                       label: GHC.Event.Internal.elSupremum_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9k2x: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9k2y; else goto c9k2z;
       c9k2y: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.elSupremum_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9k2z: // global
           I64[Sp - 16] = block_c9k2q_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9k2G; else goto c9k2r;
       u9k2G: // global
           call _c9k2q(R1) args: 0, res: 0, upd: 0;
       c9k2r: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9k2q() //  [R1]
         { info_tbl: [(c9k2q,
                       label: block_c9k2q_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9k2q: // global
           if (R1 & 7 == 1) goto c9k2u; else goto c9k2v;
       c9k2u: // global
           R1 = P64[Sp + 8] & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c9k2v: // global
           R1 = GHC.Event.Internal.MultiShot_closure+2;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.74113523 UTC

[section ""data" . GHC.Event.Internal.$fSemigroupLifetime_go_closure" {
     GHC.Event.Internal.$fSemigroupLifetime_go_closure:
         const GHC.Event.Internal.$fSemigroupLifetime_go_info;
 },
 GHC.Event.Internal.$fSemigroupLifetime_go_entry() //  [R2, R3]
         { info_tbl: [(c9k36,
                       label: GHC.Event.Internal.$fSemigroupLifetime_go_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9k36: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9k37; else goto u9k3s;
       c9k37: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fSemigroupLifetime_go_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       u9k3s: // global
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           call _c9k2W() args: 0, res: 0, upd: 0;
     }
 },
 _c9k2W() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9k2W: // global
           I64[Sp - 8] = block_c9k2Z_info;
           R1 = P64[Sp + 8];
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9k3u; else goto c9k30;
       u9k3u: // global
           call _c9k2Z(R1) args: 0, res: 0, upd: 0;
       c9k30: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9k2Z() //  [R1]
         { info_tbl: [(c9k2Z,
                       label: block_c9k2Z_info
                       rep:StackRep [False, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9k2Z: // global
           _s9iYG::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c9k33; else goto c9k34;
       c9k33: // global
           R1 = _s9iYG::P64 & (-8);
           Sp = Sp + 24;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c9k34: // global
           I64[Sp] = block_c9k3e_info;
           _s9iYJ::P64 = P64[R1 + 6];
           _s9iYK::P64 = P64[R1 + 14];
           R1 = _s9iYG::P64;
           P64[Sp + 8] = _s9iYK::P64;
           P64[Sp + 16] = _s9iYJ::P64;
           if (R1 & 7 != 0) goto u9k3v; else goto c9k3g;
       u9k3v: // global
           call _c9k3e(R1) args: 0, res: 0, upd: 0;
       c9k3g: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9k3e() //  [R1]
         { info_tbl: [(c9k3e,
                       label: block_c9k3e_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9k3e: // global
           if (R1 & 7 == 1) goto c9k3m; else goto c9k3q;
       c9k3m: // global
           _s9iYH::P64 = P64[Sp + 8];
           P64[Sp + 8] = P64[Sp + 16];
           P64[Sp + 16] = _s9iYH::P64;
           Sp = Sp + 8;
           call _c9k2W() args: 0, res: 0, upd: 0;
       c9k3q: // global
           R1 = GHC.Event.Internal.MultiShot_closure+2;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.749851058 UTC

[section ""data" . GHC.Event.Internal.$fSemigroupLifetime_$csconcat_closure" {
     GHC.Event.Internal.$fSemigroupLifetime_$csconcat_closure:
         const GHC.Event.Internal.$fSemigroupLifetime_$csconcat_info;
 },
 GHC.Event.Internal.$fSemigroupLifetime_$csconcat_entry() //  [R2]
         { info_tbl: [(c9k42,
                       label: GHC.Event.Internal.$fSemigroupLifetime_$csconcat_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9k42: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9k43; else goto c9k44;
       c9k43: // global
           R2 = R2;
           R1 = GHC.Event.Internal.$fSemigroupLifetime_$csconcat_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9k44: // global
           I64[Sp - 8] = block_c9k3Z_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9k48; else goto c9k40;
       u9k48: // global
           call _c9k3Z(R1) args: 0, res: 0, upd: 0;
       c9k40: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9k3Z() //  [R1]
         { info_tbl: [(c9k3Z,
                       label: block_c9k3Z_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9k3Z: // global
           R3 = P64[R1 + 15];
           R2 = P64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Event.Internal.$fSemigroupLifetime_go_entry(R3,
                                                                R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.755505365 UTC

[section ""data" . GHC.Event.Internal.$fMonoidLifetime_go_closure" {
     GHC.Event.Internal.$fMonoidLifetime_go_closure:
         const GHC.Event.Internal.$fMonoidLifetime_go_info;
 },
 GHC.Event.Internal.$fMonoidLifetime_go_entry() //  [R2]
         { info_tbl: [(c9k4t,
                       label: GHC.Event.Internal.$fMonoidLifetime_go_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9k4t: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9k4u; else goto u9k4P;
       c9k4u: // global
           R2 = R2;
           R1 = GHC.Event.Internal.$fMonoidLifetime_go_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       u9k4P: // global
           P64[Sp - 8] = R2;
           Sp = Sp - 8;
           call _c9k4j() args: 0, res: 0, upd: 0;
     }
 },
 _c9k4j() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9k4j: // global
           _s9iYQ::P64 = P64[Sp];
           I64[Sp] = block_c9k4m_info;
           R1 = _s9iYQ::P64;
           if (R1 & 7 != 0) goto u9k4R; else goto c9k4n;
       u9k4R: // global
           call _c9k4m(R1) args: 0, res: 0, upd: 0;
       c9k4n: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9k4m() //  [R1]
         { info_tbl: [(c9k4m,
                       label: block_c9k4m_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9k4m: // global
           if (R1 & 7 == 1) goto c9k4q; else goto c9k4r;
       c9k4q: // global
           R1 = GHC.Event.Internal.OneShot_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9k4r: // global
           I64[Sp - 8] = block_c9k4B_info;
           _s9iYT::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp] = _s9iYT::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9k4S; else goto c9k4D;
       u9k4S: // global
           call _c9k4B(R1) args: 0, res: 0, upd: 0;
       c9k4D: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9k4B() //  [R1]
         { info_tbl: [(c9k4B,
                       label: block_c9k4B_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9k4B: // global
           if (R1 & 7 == 1) goto c9k4J; else goto c9k4N;
       c9k4J: // global
           P64[Sp + 8] = P64[Sp + 8];
           Sp = Sp + 8;
           call _c9k4j() args: 0, res: 0, upd: 0;
       c9k4N: // global
           R1 = GHC.Event.Internal.MultiShot_closure+2;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.763566828 UTC

[section ""data" . GHC.Event.Internal.$fSemigroupLifetime_closure" {
     GHC.Event.Internal.$fSemigroupLifetime_closure:
         const GHC.Base.C:Semigroup_con_info;
         const GHC.Event.Internal.elSupremum_closure+2;
         const GHC.Event.Internal.$fSemigroupLifetime_$csconcat_closure+1;
         const GHC.Event.Internal.$fSemigroupLifetime_$cstimes_closure+3;
         const 0;
 },
 section ""data" . GHC.Event.Internal.$fMonoidLifetime_closure" {
     GHC.Event.Internal.$fMonoidLifetime_closure:
         const GHC.Base.C:Monoid_con_info;
         const GHC.Event.Internal.$fSemigroupLifetime_closure+1;
         const GHC.Event.Internal.OneShot_closure+1;
         const GHC.Event.Internal.elSupremum_closure+2;
         const GHC.Event.Internal.$fMonoidLifetime_go_closure+1;
         const 0;
 },
 section ""data" . GHC.Event.Internal.$fSemigroupLifetime_$cstimes_closure" {
     GHC.Event.Internal.$fSemigroupLifetime_$cstimes_closure:
         const GHC.Event.Internal.$fSemigroupLifetime_$cstimes_info;
         const 0;
 },
 GHC.Event.Internal.$fSemigroupLifetime_$cstimes_entry() //  [R2,
                                                              R3, R4]
         { info_tbl: [(c9k5l,
                       label: GHC.Event.Internal.$fSemigroupLifetime_$cstimes_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9k5l: // global
           R5 = R4;
           R4 = R3;
           R3 = GHC.Event.Internal.$fMonoidLifetime_closure+1;
           R2 = R2;
           call Data.Semigroup.Internal.stimesMonoid_entry(R5,
                                                           R4,
                                                           R3,
                                                           R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.769304273 UTC

[section ""data" . GHC.Event.Internal.backend_closure" {
     GHC.Event.Internal.backend_closure:
         const GHC.Event.Internal.backend_info;
 },
 GHC.Event.Internal.backend_entry() //  [R2, R3, R4, R5, R6]
         { info_tbl: [(c9k5y,
                       label: GHC.Event.Internal.backend_info
                       rep:HeapRep static { Fun {arity: 5 fun_type: ArgSpec 25} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9k5y: // global
           _s9iZ0::P64 = R6;
           R6 = R5;
           R5 = R4;
           R4 = R3;
           R3 = R2;
           R2 = _s9iZ0::P64;
           call GHC.Event.Internal.$WBackend_entry(R6,
                                                   R5,
                                                   R4,
                                                   R3,
                                                   R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.772725177 UTC

[section ""data" . GHC.Event.Internal.poll_closure" {
     GHC.Event.Internal.poll_closure:
         const GHC.Event.Internal.poll_info;
 },
 GHC.Event.Internal.poll_entry() //  [R2]
         { info_tbl: [(c9k5M,
                       label: GHC.Event.Internal.poll_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9k5M: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9k5N; else goto c9k5O;
       c9k5N: // global
           R2 = R2;
           R1 = GHC.Event.Internal.poll_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9k5O: // global
           I64[Sp - 8] = block_c9k5J_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9k5S; else goto c9k5K;
       u9k5S: // global
           call _c9k5J(R1) args: 0, res: 0, upd: 0;
       c9k5K: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9k5J() //  [R1]
         { info_tbl: [(c9k5J,
                       label: block_c9k5J_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9k5J: // global
           R2 = P64[R1 + 7];
           R1 = P64[R1 + 15];
           Sp = Sp + 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.778312432 UTC

[section ""data" . GHC.Event.Internal.modifyFd_closure" {
     GHC.Event.Internal.modifyFd_closure:
         const GHC.Event.Internal.modifyFd_info;
 },
 GHC.Event.Internal.modifyFd_entry() //  [R2]
         { info_tbl: [(c9k69,
                       label: GHC.Event.Internal.modifyFd_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9k69: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9k6a; else goto c9k6b;
       c9k6a: // global
           R2 = R2;
           R1 = GHC.Event.Internal.modifyFd_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9k6b: // global
           I64[Sp - 8] = block_c9k66_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9k6f; else goto c9k67;
       u9k6f: // global
           call _c9k66(R1) args: 0, res: 0, upd: 0;
       c9k67: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9k66() //  [R1]
         { info_tbl: [(c9k66,
                       label: block_c9k66_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9k66: // global
           R2 = P64[R1 + 7];
           R1 = P64[R1 + 23];
           Sp = Sp + 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.78374185 UTC

[section ""data" . GHC.Event.Internal.modifyFdOnce_closure" {
     GHC.Event.Internal.modifyFdOnce_closure:
         const GHC.Event.Internal.modifyFdOnce_info;
 },
 GHC.Event.Internal.modifyFdOnce_entry() //  [R2]
         { info_tbl: [(c9k6w,
                       label: GHC.Event.Internal.modifyFdOnce_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9k6w: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9k6x; else goto c9k6y;
       c9k6x: // global
           R2 = R2;
           R1 = GHC.Event.Internal.modifyFdOnce_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9k6y: // global
           I64[Sp - 8] = block_c9k6t_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9k6C; else goto c9k6u;
       u9k6C: // global
           call _c9k6t(R1) args: 0, res: 0, upd: 0;
       c9k6u: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9k6t() //  [R1]
         { info_tbl: [(c9k6t,
                       label: block_c9k6t_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9k6t: // global
           R2 = P64[R1 + 7];
           R1 = P64[R1 + 31];
           Sp = Sp + 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.788932745 UTC

[section ""data" . GHC.Event.Internal.delete_closure" {
     GHC.Event.Internal.delete_closure:
         const GHC.Event.Internal.delete_info;
 },
 GHC.Event.Internal.delete_entry() //  [R2]
         { info_tbl: [(c9k6T,
                       label: GHC.Event.Internal.delete_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9k6T: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9k6U; else goto c9k6V;
       c9k6U: // global
           R2 = R2;
           R1 = GHC.Event.Internal.delete_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9k6V: // global
           I64[Sp - 8] = block_c9k6Q_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9k6Z; else goto c9k6R;
       u9k6Z: // global
           call _c9k6Q(R1) args: 0, res: 0, upd: 0;
       c9k6R: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9k6Q() //  [R1]
         { info_tbl: [(c9k6Q,
                       label: block_c9k6Q_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9k6Q: // global
           R2 = P64[R1 + 7];
           R1 = P64[R1 + 39];
           Sp = Sp + 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.794467076 UTC

[section ""data" . GHC.Event.Internal.throwErrnoIfMinus1NoRetry2_closure" {
     GHC.Event.Internal.throwErrnoIfMinus1NoRetry2_closure:
         const GHC.Event.Internal.throwErrnoIfMinus1NoRetry2_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Internal.throwErrnoIfMinus1NoRetry2_entry() //  [R1]
         { info_tbl: [(c9k7f,
                       label: GHC.Event.Internal.throwErrnoIfMinus1NoRetry2_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9k7f: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9k7g; else goto c9k7h;
       c9k7g: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9k7h: // global
           (_c9k7c::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9k7c::I64 == 0) goto c9k7e; else goto c9k7d;
       c9k7e: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9k7d: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9k7c::I64;
           R3 = GHC.Types.[]_closure+1;
           R2 = GHC.Types.True_closure+2;
           Sp = Sp - 16;
           call GHC.Integer.Type.mkInteger_entry(R3,
                                                 R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.798277135 UTC

[section ""data" . sat_s9iZt_closure" {
     sat_s9iZt_closure:
         const GHC.Types.I#_con_info;
         const 1;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.800430412 UTC

[section ""data" . sat_s9iZu_closure" {
     sat_s9iZu_closure:
         const :_con_info;
         const sat_s9iZt_closure+1;
         const GHC.Types.[]_closure+1;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.802349008 UTC

[section ""data" . GHC.Event.Internal.throwErrnoIfMinus1NoRetry3_closure" {
     GHC.Event.Internal.throwErrnoIfMinus1NoRetry3_closure:
         const GHC.Event.Internal.throwErrnoIfMinus1NoRetry3_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Internal.throwErrnoIfMinus1NoRetry3_entry() //  [R1]
         { info_tbl: [(c9k7x,
                       label: GHC.Event.Internal.throwErrnoIfMinus1NoRetry3_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9k7x: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9k7y; else goto c9k7z;
       c9k7y: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9k7z: // global
           (_c9k7u::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9k7u::I64 == 0) goto c9k7w; else goto c9k7v;
       c9k7w: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9k7v: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9k7u::I64;
           R3 = sat_s9iZu_closure+2;
           R2 = GHC.Types.True_closure+2;
           Sp = Sp - 16;
           call GHC.Integer.Type.mkInteger_entry(R3,
                                                 R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.807199264 UTC

[section ""data" . GHC.Event.Internal.throwErrnoIfMinus1NoRetry1_closure" {
     GHC.Event.Internal.throwErrnoIfMinus1NoRetry1_closure:
         const GHC.Event.Internal.throwErrnoIfMinus1NoRetry1_info;
         const 0;
 },
 sat_s9iZD_entry() //  [R1]
         { info_tbl: [(c9k7V,
                       label: sat_s9iZD_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9k7V: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c9k7W; else goto c9k7X;
       c9k7W: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9k7X: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = GHC.Event.Internal.throwErrnoIfMinus1NoRetry3_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 sat_s9iZE_entry() //  [R1]
         { info_tbl: [(c9k7Y,
                       label: sat_s9iZE_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9k7Y: // global
           _s9iZE::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto c9k7Z; else goto c9k80;
       c9k80: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9k82; else goto c9k81;
       c9k82: // global
           HpAlloc = 24;
           goto c9k7Z;
       c9k7Z: // global
           R1 = _s9iZE::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9k81: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s9iZE::P64;
           _s9iZw::P64 = P64[_s9iZE::P64 + 16];
           I64[Hp - 16] = sat_s9iZD_info;
           P64[Hp] = _s9iZw::P64;
           R2 = _s9iZw::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 32;
           call GHC.Num.negate_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 sat_s9iZL_entry() //  [R1]
         { info_tbl: [(c9k8k,
                       label: sat_s9iZL_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9k8k: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c9k8l; else goto c9k8m;
       c9k8l: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9k8m: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = GHC.Event.Internal.throwErrnoIfMinus1NoRetry2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 GHC.Event.Internal.throwErrnoIfMinus1NoRetry1_entry() //  [R2, R3,
                                                            R4, R5]
         { info_tbl: [(c9k8r,
                       label: GHC.Event.Internal.throwErrnoIfMinus1NoRetry1_info
                       rep:HeapRep static { Fun {arity: 5 fun_type: ArgSpec 24} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9k8r: // global
           if ((Sp + -56) < SpLim) (likely: False) goto c9k8s; else goto c9k8t;
       c9k8s: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.throwErrnoIfMinus1NoRetry1_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9k8t: // global
           I64[Sp - 32] = block_c9k7L_info;
           R1 = R5;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 32;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9k7L() //  [R1]
         { info_tbl: [(c9k7L,
                       label: block_c9k7L_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9k7L: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9k8w; else goto c9k8v;
       c9k8w: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9k8v: // global
           I64[Hp - 16] = sat_s9iZE_info;
           P64[Hp] = P64[Sp + 16];
           I64[Sp] = block_c9k83_info;
           R2 = P64[Sp + 8];
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = R1;
           P64[Sp - 8] = Hp - 16;
           P64[Sp + 8] = R1;
           Sp = Sp - 24;
           call GHC.Classes.==_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 _c9k83() //  [R1]
         { info_tbl: [(c9k83,
                       label: block_c9k83_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9k83: // global
           if (R1 & 7 == 1) goto c9k8o; else goto c9k8p;
       c9k8o: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9k8p: // global
           _s9iZx::P64 = P64[Sp + 24];
           (_s9iZJ::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           _s9iZK::I64 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9iZJ::I64));
           if (_s9iZK::I64 != 4) goto c9k8C; else goto u9k8K;
       c9k8C: // global
           R2 = _s9iZx::P64;
           Sp = Sp + 32;
           call Foreign.C.Error.throwErrno1_entry(R2) args: 8, res: 0, upd: 8;
       u9k8K: // global
           I64[Sp + 24] = _s9iZK::I64;
           Sp = Sp + 16;
           call _c9k8e() args: 0, res: 0, upd: 0;
     }
 },
 _c9k8e() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9k8e: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9k8J; else goto c9k8I;
       c9k8J: // global
           HpAlloc = 24;
           I64[Sp - 8] = block_c9k8d_info;
           R1 = I64[Sp + 8];
           Sp = Sp - 8;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9k8I: // global
           I64[Hp - 16] = sat_s9iZL_info;
           P64[Hp] = P64[Sp];
           R1 = Hp - 16;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9k8d() //  [R1]
         { info_tbl: [(c9k8d,
                       label: block_c9k8d_info
                       rep:StackRep [False, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9k8d: // global
           I64[Sp + 16] = R1;
           Sp = Sp + 8;
           call _c9k8e() args: 0, res: 0, upd: 0;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.823668863 UTC

[section ""data" . GHC.Event.Internal.throwErrnoIfMinus1NoRetry_closure" {
     GHC.Event.Internal.throwErrnoIfMinus1NoRetry_closure:
         const GHC.Event.Internal.throwErrnoIfMinus1NoRetry_info;
         const 0;
 },
 GHC.Event.Internal.throwErrnoIfMinus1NoRetry_entry() //  [R2, R3,
                                                           R4, R5]
         { info_tbl: [(c9k9s,
                       label: GHC.Event.Internal.throwErrnoIfMinus1NoRetry_info
                       rep:HeapRep static { Fun {arity: 5 fun_type: ArgSpec 24} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9k9s: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call GHC.Event.Internal.throwErrnoIfMinus1NoRetry1_entry(R5,
                                                                    R4,
                                                                    R3,
                                                                    R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.827083529 UTC

[section ""cstring" . GHC.Event.Internal.$trModule4_bytes" {
     GHC.Event.Internal.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.828791288 UTC

[section ""data" . GHC.Event.Internal.$trModule3_closure" {
     GHC.Event.Internal.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.830449653 UTC

[section ""cstring" . GHC.Event.Internal.$trModule2_bytes" {
     GHC.Event.Internal.$trModule2_bytes:
         I8[] [71,72,67,46,69,118,101,110,116,46,73,110,116,101,114,110,97,108]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.832055071 UTC

[section ""data" . GHC.Event.Internal.$trModule1_closure" {
     GHC.Event.Internal.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.834199114 UTC

[section ""data" . GHC.Event.Internal.$trModule_closure" {
     GHC.Event.Internal.$trModule_closure:
         const GHC.Types.Module_con_info;
         const GHC.Event.Internal.$trModule3_closure+1;
         const GHC.Event.Internal.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.835907089 UTC

[section ""data" . $krep_r9iWn_closure" {
     $krep_r9iWn_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Word.$tcWord64_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.838363981 UTC

[section ""data" . $krep1_r9iWo_closure" {
     $krep1_r9iWo_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcBool_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.840119999 UTC

[section ""data" . $krep2_r9iWp_closure" {
     $krep2_r9iWp_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcInt_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.841825581 UTC

[section ""data" . $krep3_r9iWq_closure" {
     $krep3_r9iWq_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Tuple.$tc()_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.843465173 UTC

[section ""data" . $krep4_r9iWr_closure" {
     $krep4_r9iWr_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const System.Posix.Types.$tcFd_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.845203278 UTC

[section ""data" . $krep5_r9iWs_closure" {
     $krep5_r9iWs_closure:
         const :_con_info;
         const $krep1_r9iWo_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.846883317 UTC

[section ""data" . $krep6_r9iWt_closure" {
     $krep6_r9iWt_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcIO_closure;
         const $krep5_r9iWs_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.848565997 UTC

[section ""data" . $krep7_r9iWu_closure" {
     $krep7_r9iWu_closure:
         const :_con_info;
         const $krep2_r9iWp_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.85026955 UTC

[section ""data" . $krep8_r9iWv_closure" {
     $krep8_r9iWv_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcIO_closure;
         const $krep7_r9iWu_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.8519477 UTC

[section ""data" . $krep9_r9iWw_closure" {
     $krep9_r9iWw_closure:
         const :_con_info;
         const $krep3_r9iWq_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.854050111 UTC

[section ""data" . $krep10_r9iWx_closure" {
     $krep10_r9iWx_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcIO_closure;
         const $krep9_r9iWw_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.855773981 UTC

[section ""data" . $krep11_r9iWy_closure" {
     $krep11_r9iWy_closure:
         const GHC.Types.KindRepVar_con_info;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.857422165 UTC

[section ""data" . $krep12_r9iWz_closure" {
     $krep12_r9iWz_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep11_r9iWy_closure+2;
         const $krep10_r9iWx_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.859582712 UTC

[section ""cstring" . GHC.Event.Internal.$tcEvent2_bytes" {
     GHC.Event.Internal.$tcEvent2_bytes:
         I8[] [69,118,101,110,116]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.861314564 UTC

[section ""data" . GHC.Event.Internal.$tcEvent1_closure" {
     GHC.Event.Internal.$tcEvent1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tcEvent2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.862984843 UTC

[section ""data" . GHC.Event.Internal.$tcEvent_closure" {
     GHC.Event.Internal.$tcEvent_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tcEvent1_closure+1;
         const GHC.Types.krep$*_closure;
         const 6453162546660085965;
         const 4509047211634842293;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.864782832 UTC

[section ""data" . $krep13_r9iWA_closure" {
     $krep13_r9iWA_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Event.Internal.$tcEvent_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.866475099 UTC

[section ""data" . $krep14_r9iWB_closure" {
     $krep14_r9iWB_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep13_r9iWA_closure+1;
         const $krep10_r9iWx_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.868203231 UTC

[section ""data" . $krep15_r9iWC_closure" {
     $krep15_r9iWC_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep4_r9iWr_closure+1;
         const $krep14_r9iWB_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.870476745 UTC

[section ""data" . $krep16_r9iWD_closure" {
     $krep16_r9iWD_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep15_r9iWC_closure+4;
         const $krep8_r9iWv_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.872201383 UTC

[section ""data" . $krep17_r9iWE_closure" {
     $krep17_r9iWE_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep13_r9iWA_closure+1;
         const $krep6_r9iWt_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.873932085 UTC

[section ""data" . $krep18_r9iWF_closure" {
     $krep18_r9iWF_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep13_r9iWA_closure+1;
         const $krep17_r9iWE_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.875552914 UTC

[section ""data" . $krep19_r9iWG_closure" {
     $krep19_r9iWG_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep4_r9iWr_closure+1;
         const $krep18_r9iWF_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.877207564 UTC

[section ""data" . $krep20_r9iWH_closure" {
     $krep20_r9iWH_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep11_r9iWy_closure+2;
         const $krep19_r9iWG_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.879209475 UTC

[section ""data" . $krep21_r9iWI_closure" {
     $krep21_r9iWI_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep4_r9iWr_closure+1;
         const $krep17_r9iWE_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.880877658 UTC

[section ""data" . $krep22_r9iWJ_closure" {
     $krep22_r9iWJ_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep11_r9iWy_closure+2;
         const $krep21_r9iWI_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.882596631 UTC

[section ""data" . GHC.Event.Internal.$tc'Event1_closure" {
     GHC.Event.Internal.$tc'Event1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep2_r9iWp_closure+1;
         const $krep13_r9iWA_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.884363015 UTC

[section ""cstring" . GHC.Event.Internal.$tc'Event3_bytes" {
     GHC.Event.Internal.$tc'Event3_bytes:
         I8[] [39,69,118,101,110,116]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.886567188 UTC

[section ""data" . GHC.Event.Internal.$tc'Event2_closure" {
     GHC.Event.Internal.$tc'Event2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tc'Event3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.888207143 UTC

[section ""data" . GHC.Event.Internal.$tc'Event_closure" {
     GHC.Event.Internal.$tc'Event_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tc'Event2_closure+1;
         const GHC.Event.Internal.$tc'Event1_closure+4;
         const 3843507504600839845;
         const 12172955723408562945;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.890346828 UTC

[section ""cstring" . GHC.Event.Internal.$tcLifetime2_bytes" {
     GHC.Event.Internal.$tcLifetime2_bytes:
         I8[] [76,105,102,101,116,105,109,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.891899725 UTC

[section ""data" . GHC.Event.Internal.$tcLifetime1_closure" {
     GHC.Event.Internal.$tcLifetime1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tcLifetime2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.893527844 UTC

[section ""data" . GHC.Event.Internal.$tcLifetime_closure" {
     GHC.Event.Internal.$tcLifetime_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tcLifetime1_closure+1;
         const GHC.Types.krep$*_closure;
         const 16879554565198773712;
         const 8198822807138459060;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.895342091 UTC

[section ""data" . GHC.Event.Internal.$tc'MultiShot1_closure" {
     GHC.Event.Internal.$tc'MultiShot1_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Event.Internal.$tcLifetime_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.897045589 UTC

[section ""cstring" . GHC.Event.Internal.$tc'OneShot2_bytes" {
     GHC.Event.Internal.$tc'OneShot2_bytes:
         I8[] [39,79,110,101,83,104,111,116]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.898909678 UTC

[section ""data" . GHC.Event.Internal.$tc'OneShot1_closure" {
     GHC.Event.Internal.$tc'OneShot1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tc'OneShot2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.900505861 UTC

[section ""data" . GHC.Event.Internal.$tc'OneShot_closure" {
     GHC.Event.Internal.$tc'OneShot_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tc'OneShot1_closure+1;
         const GHC.Event.Internal.$tc'MultiShot1_closure+1;
         const 4428239562170783460;
         const 11248279118174204528;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.90230037 UTC

[section ""cstring" . GHC.Event.Internal.$tc'MultiShot3_bytes" {
     GHC.Event.Internal.$tc'MultiShot3_bytes:
         I8[] [39,77,117,108,116,105,83,104,111,116]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.903931132 UTC

[section ""data" . GHC.Event.Internal.$tc'MultiShot2_closure" {
     GHC.Event.Internal.$tc'MultiShot2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tc'MultiShot3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.905689777 UTC

[section ""data" . GHC.Event.Internal.$tc'MultiShot_closure" {
     GHC.Event.Internal.$tc'MultiShot_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tc'MultiShot2_closure+1;
         const GHC.Event.Internal.$tc'MultiShot1_closure+1;
         const 963080519453727549;
         const 5499435804578671723;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.907436101 UTC

[section ""cstring" . GHC.Event.Internal.$tcEventLifetime2_bytes" {
     GHC.Event.Internal.$tcEventLifetime2_bytes:
         I8[] [69,118,101,110,116,76,105,102,101,116,105,109,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.909108479 UTC

[section ""data" . GHC.Event.Internal.$tcEventLifetime1_closure" {
     GHC.Event.Internal.$tcEventLifetime1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tcEventLifetime2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.913993125 UTC

[section ""data" . GHC.Event.Internal.$tcEventLifetime_closure" {
     GHC.Event.Internal.$tcEventLifetime_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tcEventLifetime1_closure+1;
         const GHC.Types.krep$*_closure;
         const 11472987326402547198;
         const 14676184191233842558;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.916587152 UTC

[section ""data" . $krep23_r9iWK_closure" {
     $krep23_r9iWK_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Event.Internal.$tcEventLifetime_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.918457345 UTC

[section ""data" . GHC.Event.Internal.$tc'EL1_closure" {
     GHC.Event.Internal.$tc'EL1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep2_r9iWp_closure+1;
         const $krep23_r9iWK_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.920580216 UTC

[section ""cstring" . GHC.Event.Internal.$tc'EL3_bytes" {
     GHC.Event.Internal.$tc'EL3_bytes:
         I8[] [39,69,76]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.923028743 UTC

[section ""data" . GHC.Event.Internal.$tc'EL2_closure" {
     GHC.Event.Internal.$tc'EL2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tc'EL3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.924760539 UTC

[section ""data" . GHC.Event.Internal.$tc'EL_closure" {
     GHC.Event.Internal.$tc'EL_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tc'EL2_closure+1;
         const GHC.Event.Internal.$tc'EL1_closure+4;
         const 13328424765260461560;
         const 17004947518967325218;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.926910252 UTC

[section ""cstring" . GHC.Event.Internal.$tcTimeout2_bytes" {
     GHC.Event.Internal.$tcTimeout2_bytes:
         I8[] [84,105,109,101,111,117,116]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.928644771 UTC

[section ""data" . GHC.Event.Internal.$tcTimeout1_closure" {
     GHC.Event.Internal.$tcTimeout1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tcTimeout2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.930722138 UTC

[section ""data" . GHC.Event.Internal.$tcTimeout_closure" {
     GHC.Event.Internal.$tcTimeout_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tcTimeout1_closure+1;
         const GHC.Types.krep$*_closure;
         const 3071157695468345159;
         const 2371669836431867052;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.93282318 UTC

[section ""data" . GHC.Event.Internal.$tc'Forever1_closure" {
     GHC.Event.Internal.$tc'Forever1_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Event.Internal.$tcTimeout_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.935282748 UTC

[section ""cstring" . GHC.Event.Internal.$tc'Forever3_bytes" {
     GHC.Event.Internal.$tc'Forever3_bytes:
         I8[] [39,70,111,114,101,118,101,114]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.937292554 UTC

[section ""data" . GHC.Event.Internal.$tc'Forever2_closure" {
     GHC.Event.Internal.$tc'Forever2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tc'Forever3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.939278879 UTC

[section ""data" . GHC.Event.Internal.$tc'Forever_closure" {
     GHC.Event.Internal.$tc'Forever_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tc'Forever2_closure+1;
         const GHC.Event.Internal.$tc'Forever1_closure+1;
         const 15890326801882711521;
         const 6940845280791152844;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.941318091 UTC

[section ""data" . GHC.Event.Internal.$tc'Timeout1_closure" {
     GHC.Event.Internal.$tc'Timeout1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep_r9iWn_closure+1;
         const GHC.Event.Internal.$tc'Forever1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.9438907 UTC

[section ""cstring" . GHC.Event.Internal.$tc'Timeout3_bytes" {
     GHC.Event.Internal.$tc'Timeout3_bytes:
         I8[] [39,84,105,109,101,111,117,116]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.945809035 UTC

[section ""data" . GHC.Event.Internal.$tc'Timeout2_closure" {
     GHC.Event.Internal.$tc'Timeout2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tc'Timeout3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.947460832 UTC

[section ""data" . GHC.Event.Internal.$tc'Timeout_closure" {
     GHC.Event.Internal.$tc'Timeout_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tc'Timeout2_closure+1;
         const GHC.Event.Internal.$tc'Timeout1_closure+4;
         const 11507111740173521793;
         const 14582130137848061687;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.949173278 UTC

[section ""data" . $krep24_r9iWL_closure" {
     $krep24_r9iWL_closure:
         const :_con_info;
         const GHC.Event.Internal.$tc'Forever1_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.950876515 UTC

[section ""data" . $krep25_r9iWM_closure" {
     $krep25_r9iWM_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Base.$tcMaybe_closure;
         const $krep24_r9iWL_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.952554596 UTC

[section ""data" . $krep26_r9iWN_closure" {
     $krep26_r9iWN_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep25_r9iWM_closure+1;
         const $krep16_r9iWD_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.954209238 UTC

[section ""data" . $krep27_r9iWO_closure" {
     $krep27_r9iWO_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep11_r9iWy_closure+2;
         const $krep26_r9iWN_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.955861456 UTC

[section ""cstring" . GHC.Event.Internal.$tcBackend2_bytes" {
     GHC.Event.Internal.$tcBackend2_bytes:
         I8[] [66,97,99,107,101,110,100]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.957801667 UTC

[section ""data" . GHC.Event.Internal.$tcBackend1_closure" {
     GHC.Event.Internal.$tcBackend1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tcBackend2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.95938689 UTC

[section ""data" . GHC.Event.Internal.$tcBackend_closure" {
     GHC.Event.Internal.$tcBackend_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tcBackend1_closure+1;
         const GHC.Types.krep$*_closure;
         const 5241936179624485302;
         const 3407160178235461245;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.961161246 UTC

[section ""data" . $krep28_r9iWP_closure" {
     $krep28_r9iWP_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Event.Internal.$tcBackend_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.962864805 UTC

[section ""data" . $krep29_r9iWQ_closure" {
     $krep29_r9iWQ_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep12_r9iWz_closure+4;
         const $krep28_r9iWP_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.964502427 UTC

[section ""data" . $krep30_r9iWR_closure" {
     $krep30_r9iWR_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep22_r9iWJ_closure+4;
         const $krep29_r9iWQ_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.966141021 UTC

[section ""data" . $krep31_r9iWS_closure" {
     $krep31_r9iWS_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep20_r9iWH_closure+4;
         const $krep30_r9iWR_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.968319739 UTC

[section ""data" . $krep32_r9iWT_closure" {
     $krep32_r9iWT_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep27_r9iWO_closure+4;
         const $krep31_r9iWS_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.970435204 UTC

[section ""data" . GHC.Event.Internal.$tc'Backend1_closure" {
     GHC.Event.Internal.$tc'Backend1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep11_r9iWy_closure+2;
         const $krep32_r9iWT_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.972111266 UTC

[section ""cstring" . GHC.Event.Internal.$tc'Backend3_bytes" {
     GHC.Event.Internal.$tc'Backend3_bytes:
         I8[] [39,66,97,99,107,101,110,100]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.973679025 UTC

[section ""data" . GHC.Event.Internal.$tc'Backend2_closure" {
     GHC.Event.Internal.$tc'Backend2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tc'Backend3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.975270438 UTC

[section ""data" . GHC.Event.Internal.$tc'Backend_closure" {
     GHC.Event.Internal.$tc'Backend_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tc'Backend2_closure+1;
         const GHC.Event.Internal.$tc'Backend1_closure+4;
         const 2097061961478251755;
         const 1358985482759746540;
         const 1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.977008787 UTC

[section ""data" . GHC.Event.Internal.$fEqEvent_closure" {
     GHC.Event.Internal.$fEqEvent_closure:
         const GHC.Classes.C:Eq_con_info;
         const GHC.Classes.eqInt_closure+2;
         const GHC.Classes.neInt_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.97869295 UTC

[section ""data" . GHC.Event.Internal.$fEqEventLifetime_closure" {
     GHC.Event.Internal.$fEqEventLifetime_closure:
         const GHC.Classes.C:Eq_con_info;
         const GHC.Classes.eqInt_closure+2;
         const GHC.Classes.neInt_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.980779646 UTC

[section ""data" . elEvent1_r9iWU_closure" {
     elEvent1_r9iWU_closure:
         const elEvent1_r9iWU_info;
 },
 elEvent1_r9iWU_entry() //  [R2]
         { info_tbl: [(c9kb0,
                       label: elEvent1_r9iWU_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kb0: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9kb7; else goto c9kb8;
       c9kb7: // global
           R2 = R2;
           R1 = elEvent1_r9iWU_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9kb8: // global
           I64[Sp - 8] = block_c9kaX_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9kbc; else goto c9kaY;
       u9kbc: // global
           call _c9kaX(R1) args: 0, res: 0, upd: 0;
       c9kaY: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9kaX() //  [R1]
         { info_tbl: [(c9kaX,
                       label: block_c9kaX_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kaX: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9kbb; else goto c9kba;
       c9kbb: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9kba: // global
           _s9iZP::I64 = I64[R1 + 7] & 7;
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = _s9iZP::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.986688856 UTC

[section ""data" . GHC.Event.Internal.elEvent_closure" {
     GHC.Event.Internal.elEvent_closure:
         const GHC.Event.Internal.elEvent_info;
 },
 GHC.Event.Internal.elEvent_entry() //  [R2]
         { info_tbl: [(c9kbs,
                       label: GHC.Event.Internal.elEvent_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kbs: // global
           R2 = R2;
           call elEvent1_r9iWU_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:26.990105582 UTC

[section ""data" . GHC.Event.Internal.$wgo2_closure" {
     GHC.Event.Internal.$wgo2_closure:
         const GHC.Event.Internal.$wgo2_info;
 },
 GHC.Event.Internal.$wgo2_entry() //  [R2, R3]
         { info_tbl: [(c9kbK,
                       label: GHC.Event.Internal.$wgo2_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 13} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kbK: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9kbL; else goto c9kbM;
       c9kbL: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$wgo2_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9kbM: // global
           I64[Sp - 16] = block_c9kbD_info;
           R1 = R3;
           I64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9kc6; else goto c9kbE;
       u9kc6: // global
           call _c9kbD(R1) args: 0, res: 0, upd: 0;
       c9kbE: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9kbD() //  [R1]
         { info_tbl: [(c9kbD,
                       label: block_c9kbD_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kbD: // global
           if (R1 & 7 == 1) goto c9kbH; else goto c9kbI;
       c9kbH: // global
           R1 = I64[Sp + 8];
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9kbI: // global
           I64[Sp - 8] = block_c9kbS_info;
           _s9iZU::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp] = _s9iZU::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9kc5; else goto c9kbT;
       u9kc5: // global
           call _c9kbS(R1) args: 0, res: 0, upd: 0;
       c9kbT: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9kbS() //  [R1]
         { info_tbl: [(c9kbS,
                       label: block_c9kbS_info
                       rep:StackRep [False, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kbS: // global
           _s9iZU::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c9kbX_info;
           R3 = _s9iZU::P64;
           R2 = I64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Event.Internal.$wgo2_entry(R3,
                                               R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9kbX() //  [R1]
         { info_tbl: [(c9kbX,
                       label: block_c9kbX_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kbX: // global
           R1 = I64[Sp + 8] | R1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:27.000158232 UTC

[section ""data" . GHC.Event.Internal.$fSemigroupEventLifetime_go_closure" {
     GHC.Event.Internal.$fSemigroupEventLifetime_go_closure:
         const GHC.Event.Internal.$fSemigroupEventLifetime_go_info;
 },
 GHC.Event.Internal.$fSemigroupEventLifetime_go_entry() //  [R2, R3]
         { info_tbl: [(c9kcz,
                       label: GHC.Event.Internal.$fSemigroupEventLifetime_go_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kcz: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9kcH; else goto c9kcI;
       c9kcH: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fSemigroupEventLifetime_go_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9kcI: // global
           I64[Sp - 16] = block_c9kcw_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9kcN; else goto c9kcx;
       u9kcN: // global
           call _c9kcw(R1) args: 0, res: 0, upd: 0;
       c9kcx: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9kcw() //  [R1]
         { info_tbl: [(c9kcw,
                       label: block_c9kcw_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kcw: // global
           _s9iZZ::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c9kcC_info;
           R3 = _s9iZZ::P64;
           R2 = I64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Event.Internal.$wgo2_entry(R3,
                                               R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9kcC() //  [R1]
         { info_tbl: [(c9kcC,
                       label: block_c9kcC_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kcC: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9kcM; else goto c9kcL;
       c9kcM: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9kcL: // global
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = R1;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:27.007380765 UTC

[section ""data" . GHC.Event.Internal.$fSemigroupEventLifetime_$csconcat_closure" {
     GHC.Event.Internal.$fSemigroupEventLifetime_$csconcat_closure:
         const GHC.Event.Internal.$fSemigroupEventLifetime_$csconcat_info;
 },
 GHC.Event.Internal.$fSemigroupEventLifetime_$csconcat_entry() //  [R2]
         { info_tbl: [(c9kd8,
                       label: GHC.Event.Internal.$fSemigroupEventLifetime_$csconcat_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kd8: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9kd9; else goto c9kda;
       c9kd9: // global
           R2 = R2;
           R1 = GHC.Event.Internal.$fSemigroupEventLifetime_$csconcat_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9kda: // global
           I64[Sp - 8] = block_c9kd5_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9kde; else goto c9kd6;
       u9kde: // global
           call _c9kd5(R1) args: 0, res: 0, upd: 0;
       c9kd6: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9kd5() //  [R1]
         { info_tbl: [(c9kd5,
                       label: block_c9kd5_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kd5: // global
           R3 = P64[R1 + 15];
           R2 = P64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Event.Internal.$fSemigroupEventLifetime_go_entry(R3,
                                                                     R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:27.012464572 UTC

[section ""data" . GHC.Event.Internal.$fSemigroupEventLifetime_closure" {
     GHC.Event.Internal.$fSemigroupEventLifetime_closure:
         const GHC.Base.C:Semigroup_con_info;
         const Data.Bits.$fBitsInt_$c.|._closure+2;
         const GHC.Event.Internal.$fSemigroupEventLifetime_$csconcat_closure+1;
         const GHC.Event.Internal.$fSemigroupEventLifetime_$cstimes_closure+1;
         const 0;
 },
 section ""data" . GHC.Event.Internal.$fSemigroupEventLifetime_$cstimes_closure" {
     GHC.Event.Internal.$fSemigroupEventLifetime_$cstimes_closure:
         const GHC.Event.Internal.$fSemigroupEventLifetime_$cstimes_info;
         const 0;
 },
 GHC.Event.Internal.$fSemigroupEventLifetime_$cstimes_entry() //  [R2]
         { info_tbl: [(c9kds,
                       label: GHC.Event.Internal.$fSemigroupEventLifetime_$cstimes_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kds: // global
           R3 = GHC.Event.Internal.$fSemigroupEventLifetime_closure+1;
           R2 = R2;
           R1 = Data.Semigroup.Internal.stimesDefault_closure+4;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:27.016815026 UTC

[section ""data" . GHC.Event.Internal.$wgo1_closure" {
     GHC.Event.Internal.$wgo1_closure:
         const GHC.Event.Internal.$wgo1_info;
 },
 GHC.Event.Internal.$wgo1_entry() //  [R2]
         { info_tbl: [(c9kdL,
                       label: GHC.Event.Internal.$wgo1_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kdL: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9kdM; else goto c9kdN;
       c9kdM: // global
           R2 = R2;
           R1 = GHC.Event.Internal.$wgo1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9kdN: // global
           I64[Sp - 8] = block_c9kdE_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9ke7; else goto c9kdF;
       u9ke7: // global
           call _c9kdE(R1) args: 0, res: 0, upd: 0;
       c9kdF: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9kdE() //  [R1]
         { info_tbl: [(c9kdE,
                       label: block_c9kdE_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kdE: // global
           if (R1 & 7 == 1) goto c9kdI; else goto c9kdJ;
       c9kdI: // global
           R1 = 0;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9kdJ: // global
           I64[Sp - 8] = block_c9kdT_info;
           _s9j0b::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp] = _s9j0b::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9ke6; else goto c9kdU;
       u9ke6: // global
           call _c9kdT(R1) args: 0, res: 0, upd: 0;
       c9kdU: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9kdT() //  [R1]
         { info_tbl: [(c9kdT,
                       label: block_c9kdT_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kdT: // global
           I64[Sp] = block_c9kdY_info;
           R2 = P64[Sp + 8];
           I64[Sp + 8] = I64[R1 + 7];
           call GHC.Event.Internal.$wgo1_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9kdY() //  [R1]
         { info_tbl: [(c9kdY,
                       label: block_c9kdY_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kdY: // global
           R1 = I64[Sp + 8] | R1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:27.025610167 UTC

[section ""data" . GHC.Event.Internal.$fMonoidEventLifetime_go_closure" {
     GHC.Event.Internal.$fMonoidEventLifetime_go_closure:
         const GHC.Event.Internal.$fMonoidEventLifetime_go_info;
 },
 GHC.Event.Internal.$fMonoidEventLifetime_go_entry() //  [R2]
         { info_tbl: [(c9keA,
                       label: GHC.Event.Internal.$fMonoidEventLifetime_go_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9keA: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9keE; else goto c9keF;
       c9keE: // global
           R2 = R2;
           R1 = GHC.Event.Internal.$fMonoidEventLifetime_go_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9keF: // global
           I64[Sp - 8] = block_c9key_info;
           R2 = R2;
           Sp = Sp - 8;
           call GHC.Event.Internal.$wgo1_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9key() //  [R1]
         { info_tbl: [(c9key,
                       label: block_c9key_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9key: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9keI; else goto c9keH;
       c9keI: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9keH: // global
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = R1;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:27.031565011 UTC

[section ""data" . GHC.Event.Internal.$fMonoidEventLifetime_closure" {
     GHC.Event.Internal.$fMonoidEventLifetime_closure:
         const GHC.Base.C:Monoid_con_info;
         const GHC.Event.Internal.$fSemigroupEventLifetime_closure+1;
         const GHC.Event.Internal.$fMonoidEventLifetime1_closure+1;
         const Data.Bits.$fBitsInt_$c.|._closure+2;
         const GHC.Event.Internal.$fMonoidEventLifetime_go_closure+1;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:27.034319968 UTC

[section ""data" . GHC.Event.Internal.elLifetime_closure" {
     GHC.Event.Internal.elLifetime_closure:
         const GHC.Event.Internal.elLifetime_info;
 },
 GHC.Event.Internal.elLifetime_entry() //  [R2]
         { info_tbl: [(c9kf0,
                       label: GHC.Event.Internal.elLifetime_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kf0: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9kf1; else goto c9kf2;
       c9kf1: // global
           R2 = R2;
           R1 = GHC.Event.Internal.elLifetime_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9kf2: // global
           I64[Sp - 8] = block_c9keX_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9kfl; else goto c9keY;
       u9kfl: // global
           call _c9keX(R1) args: 0, res: 0, upd: 0;
       c9keY: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9keX() //  [R1]
         { info_tbl: [(c9keX,
                       label: block_c9keX_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9keX: // global
           if (I64[R1 + 7] & 8 == 0) goto c9kfh; else goto c9kfb;
       c9kfh: // global
           R1 = GHC.Event.Internal.OneShot_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9kfb: // global
           R1 = GHC.Event.Internal.MultiShot_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:27.040084685 UTC

[section ""data" . eventLifetime1_r9iWV_closure" {
     eventLifetime1_r9iWV_closure:
         const eventLifetime1_r9iWV_info;
 },
 eventLifetime1_r9iWV_entry() //  [R2, R3]
         { info_tbl: [(c9kfF,
                       label: eventLifetime1_r9iWV_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kfF: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9kfG; else goto c9kfH;
       c9kfG: // global
           R3 = R3;
           R2 = R2;
           R1 = eventLifetime1_r9iWV_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9kfH: // global
           I64[Sp - 16] = block_c9kfC_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9kg5; else goto c9kfD;
       u9kg5: // global
           call _c9kfC(R1) args: 0, res: 0, upd: 0;
       c9kfD: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9kfC() //  [R1]
         { info_tbl: [(c9kfC,
                       label: block_c9kfC_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kfC: // global
           I64[Sp - 8] = block_c9kfK_info;
           _s9j0n::P64 = R1;
           _s9j0o::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp] = _s9j0o::I64;
           P64[Sp + 8] = _s9j0n::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9kg4; else goto c9kfM;
       u9kg4: // global
           call _c9kfK(R1) args: 0, res: 0, upd: 0;
       c9kfM: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9kfK() //  [R1]
         { info_tbl: [(c9kfK,
                       label: block_c9kfK_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kfK: // global
           if (R1 & 7 == 1) goto c9kfS; else goto c9kfZ;
       c9kfS: // global
           R1 = P64[Sp + 16] & (-8);
           Sp = Sp + 24;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c9kfZ: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9kg2; else goto c9kg1;
       c9kg2: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9kg1: // global
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = I64[Sp + 8] | 8;
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:27.047755746 UTC

[section ""data" . GHC.Event.Internal.eventLifetime_closure" {
     GHC.Event.Internal.eventLifetime_closure:
         const GHC.Event.Internal.eventLifetime_info;
 },
 GHC.Event.Internal.eventLifetime_entry() //  [R2, R3]
         { info_tbl: [(c9kgu,
                       label: GHC.Event.Internal.eventLifetime_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kgu: // global
           R3 = R3;
           R2 = R2;
           call eventLifetime1_r9iWV_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:27.05104958 UTC

[section ""data" . GHC.Event.Internal.evtCombine_closure" {
     GHC.Event.Internal.evtCombine_closure:
         const GHC.Event.Internal.evtCombine_info;
 },
 GHC.Event.Internal.evtCombine_entry() //  [R2, R3]
         { info_tbl: [(c9kgF,
                       label: GHC.Event.Internal.evtCombine_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kgF: // global
           R3 = R3;
           R2 = R2;
           call Data.Bits.$fBitsInt_$c.|._entry(R3,
                                                R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:27.05471556 UTC

[section ""data" . GHC.Event.Internal.evtConcat_closure" {
     GHC.Event.Internal.evtConcat_closure:
         const GHC.Event.Internal.evtConcat_info;
         const 0;
 },
 GHC.Event.Internal.evtConcat_entry() //  [R2]
         { info_tbl: [(c9kgQ,
                       label: GHC.Event.Internal.evtConcat_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kgQ: // global
           R4 = R2;
           R3 = GHC.Event.Internal.evtNothing_closure;
           R2 = GHC.Event.Internal.evtCombine_closure+2;
           call GHC.List.foldl'_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:27.058428601 UTC

[section ""data" . GHC.Event.Internal.$wgo_closure" {
     GHC.Event.Internal.$wgo_closure:
         const GHC.Event.Internal.$wgo_info;
 },
 GHC.Event.Internal.$wgo_entry() //  [R2, R3]
         { info_tbl: [(c9kh8,
                       label: GHC.Event.Internal.$wgo_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 13} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kh8: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9kh9; else goto c9kha;
       c9kh9: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$wgo_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9kha: // global
           I64[Sp - 16] = block_c9kh1_info;
           R1 = R3;
           I64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9khu; else goto c9kh2;
       u9khu: // global
           call _c9kh1(R1) args: 0, res: 0, upd: 0;
       c9kh2: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9kh1() //  [R1]
         { info_tbl: [(c9kh1,
                       label: block_c9kh1_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kh1: // global
           if (R1 & 7 == 1) goto c9kh5; else goto c9kh6;
       c9kh5: // global
           R1 = I64[Sp + 8];
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9kh6: // global
           I64[Sp - 8] = block_c9khg_info;
           _s9j0v::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp] = _s9j0v::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9kht; else goto c9khh;
       u9kht: // global
           call _c9khg(R1) args: 0, res: 0, upd: 0;
       c9khh: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9khg() //  [R1]
         { info_tbl: [(c9khg,
                       label: block_c9khg_info
                       rep:StackRep [False, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9khg: // global
           _s9j0v::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c9khl_info;
           R3 = _s9j0v::P64;
           R2 = I64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Event.Internal.$wgo_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9khl() //  [R1]
         { info_tbl: [(c9khl,
                       label: block_c9khl_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9khl: // global
           R1 = I64[Sp + 8] | R1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:27.068670278 UTC

[section ""data" . GHC.Event.Internal.$fSemigroupEvent_go_closure" {
     GHC.Event.Internal.$fSemigroupEvent_go_closure:
         const GHC.Event.Internal.$fSemigroupEvent_go_info;
 },
 GHC.Event.Internal.$fSemigroupEvent_go_entry() //  [R2, R3]
         { info_tbl: [(c9khX,
                       label: GHC.Event.Internal.$fSemigroupEvent_go_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9khX: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9ki5; else goto c9ki6;
       c9ki5: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fSemigroupEvent_go_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9ki6: // global
           I64[Sp - 16] = block_c9khU_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9kib; else goto c9khV;
       u9kib: // global
           call _c9khU(R1) args: 0, res: 0, upd: 0;
       c9khV: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9khU() //  [R1]
         { info_tbl: [(c9khU,
                       label: block_c9khU_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9khU: // global
           _s9j0A::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c9ki0_info;
           R3 = _s9j0A::P64;
           R2 = I64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Event.Internal.$wgo_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9ki0() //  [R1]
         { info_tbl: [(c9ki0,
                       label: block_c9ki0_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ki0: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9kia; else goto c9ki9;
       c9kia: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9ki9: // global
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = R1;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:27.075721995 UTC

[section ""data" . GHC.Event.Internal.$fSemigroupEvent_$csconcat_closure" {
     GHC.Event.Internal.$fSemigroupEvent_$csconcat_closure:
         const GHC.Event.Internal.$fSemigroupEvent_$csconcat_info;
 },
 GHC.Event.Internal.$fSemigroupEvent_$csconcat_entry() //  [R2]
         { info_tbl: [(c9kiw,
                       label: GHC.Event.Internal.$fSemigroupEvent_$csconcat_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kiw: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9kix; else goto c9kiy;
       c9kix: // global
           R2 = R2;
           R1 = GHC.Event.Internal.$fSemigroupEvent_$csconcat_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9kiy: // global
           I64[Sp - 8] = block_c9kit_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9kiC; else goto c9kiu;
       u9kiC: // global
           call _c9kit(R1) args: 0, res: 0, upd: 0;
       c9kiu: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9kit() //  [R1]
         { info_tbl: [(c9kit,
                       label: block_c9kit_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kit: // global
           R3 = P64[R1 + 15];
           R2 = P64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Event.Internal.$fSemigroupEvent_go_entry(R3,
                                                             R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:27.081212015 UTC

[section ""data" . GHC.Event.Internal.$fSemigroupEvent_closure" {
     GHC.Event.Internal.$fSemigroupEvent_closure:
         const GHC.Base.C:Semigroup_con_info;
         const GHC.Event.Internal.evtCombine_closure+2;
         const GHC.Event.Internal.$fSemigroupEvent_$csconcat_closure+1;
         const GHC.Event.Internal.$fSemigroupEvent_$cstimes_closure+3;
         const 0;
 },
 section ""data" . GHC.Event.Internal.$fMonoidEvent_closure" {
     GHC.Event.Internal.$fMonoidEvent_closure:
         const GHC.Base.C:Monoid_con_info;
         const GHC.Event.Internal.$fSemigroupEvent_closure+1;
         const GHC.Event.Internal.evtNothing_closure;
         const GHC.Event.Internal.evtCombine_closure+2;
         const GHC.Event.Internal.evtConcat_closure+1;
         const 0;
 },
 section ""data" . GHC.Event.Internal.$fSemigroupEvent_$cstimes_closure" {
     GHC.Event.Internal.$fSemigroupEvent_$cstimes_closure:
         const GHC.Event.Internal.$fSemigroupEvent_$cstimes_info;
         const 0;
 },
 GHC.Event.Internal.$fSemigroupEvent_$cstimes_entry() //  [R2, R3,
                                                           R4]
         { info_tbl: [(c9kiQ,
                       label: GHC.Event.Internal.$fSemigroupEvent_$cstimes_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kiQ: // global
           R5 = R4;
           R4 = R3;
           R3 = GHC.Event.Internal.$fMonoidEvent_closure+1;
           R2 = R2;
           call Data.Semigroup.Internal.stimesMonoid_entry(R5,
                                                           R4,
                                                           R3,
                                                           R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:27.086413757 UTC

[section ""data" . GHC.Event.Internal.eventIs_closure" {
     GHC.Event.Internal.eventIs_closure:
         const GHC.Event.Internal.eventIs_info;
 },
 GHC.Event.Internal.eventIs_entry() //  [R2, R3]
         { info_tbl: [(c9kj6,
                       label: GHC.Event.Internal.eventIs_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kj6: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9kja; else goto c9kjb;
       c9kja: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.eventIs_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9kjb: // global
           I64[Sp - 16] = block_c9kj3_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9kjy; else goto c9kj4;
       u9kjy: // global
           call _c9kj3(R1) args: 0, res: 0, upd: 0;
       c9kj4: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9kj3() //  [R1]
         { info_tbl: [(c9kj3,
                       label: block_c9kj3_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kj3: // global
           I64[Sp] = block_c9kj9_info;
           _s9j0M::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9j0M::I64;
           if (R1 & 7 != 0) goto u9kjx; else goto c9kjd;
       u9kjx: // global
           call _c9kj9(R1) args: 0, res: 0, upd: 0;
       c9kjd: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9kj9() //  [R1]
         { info_tbl: [(c9kj9,
                       label: block_c9kj9_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kj9: // global
           if (I64[Sp + 8] & I64[R1 + 7] == 0) goto c9kjt; else goto c9kjn;
       c9kjt: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9kjn: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:27.093629401 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent13_closure" {
     GHC.Event.Internal.$fShowEvent13_closure:
         const GHC.Types.C#_con_info;
         const 91;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:27.095313593 UTC

[section ""cstring" . GHC.Event.Internal.$fShowEvent5_bytes" {
     GHC.Event.Internal.$fShowEvent5_bytes:
         I8[] [93]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:27.096899173 UTC

[section ""cstring" . GHC.Event.Internal.$fShowEvent10_bytes" {
     GHC.Event.Internal.$fShowEvent10_bytes:
         I8[] [44]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:27.099308004 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent9_closure" {
     GHC.Event.Internal.$fShowEvent9_closure:
         const GHC.Event.Internal.$fShowEvent9_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Internal.$fShowEvent9_entry() //  [R1]
         { info_tbl: [(c9kk0,
                       label: GHC.Event.Internal.$fShowEvent9_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kk0: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9kk1; else goto c9kk2;
       c9kk1: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9kk2: // global
           (_c9kjX::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9kjX::I64 == 0) goto c9kjZ; else goto c9kjY;
       c9kjZ: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9kjY: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9kjX::I64;
           R2 = GHC.Event.Internal.$fShowEvent10_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:27.103448532 UTC

[section ""cstring" . GHC.Event.Internal.$fShowEvent12_bytes" {
     GHC.Event.Internal.$fShowEvent12_bytes:
         I8[] [101,118,116,82,101,97,100]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:27.105216473 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent11_closure" {
     GHC.Event.Internal.$fShowEvent11_closure:
         const GHC.Event.Internal.$fShowEvent11_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Internal.$fShowEvent11_entry() //  [R1]
         { info_tbl: [(c9kkh,
                       label: GHC.Event.Internal.$fShowEvent11_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kkh: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9kki; else goto c9kkj;
       c9kki: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9kkj: // global
           (_c9kke::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9kke::I64 == 0) goto c9kkg; else goto c9kkf;
       c9kkg: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9kkf: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9kke::I64;
           R2 = GHC.Event.Internal.$fShowEvent12_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:27.108967496 UTC

[section ""cstring" . GHC.Event.Internal.$fShowEvent8_bytes" {
     GHC.Event.Internal.$fShowEvent8_bytes:
         I8[] [101,118,116,87,114,105,116,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:27.110791407 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent7_closure" {
     GHC.Event.Internal.$fShowEvent7_closure:
         const GHC.Event.Internal.$fShowEvent7_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Internal.$fShowEvent7_entry() //  [R1]
         { info_tbl: [(c9kky,
                       label: GHC.Event.Internal.$fShowEvent7_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kky: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9kkz; else goto c9kkA;
       c9kkz: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9kkA: // global
           (_c9kkv::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9kkv::I64 == 0) goto c9kkx; else goto c9kkw;
       c9kkx: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9kkw: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9kkv::I64;
           R2 = GHC.Event.Internal.$fShowEvent8_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:27.114905242 UTC

[section ""cstring" . GHC.Event.Internal.$fShowEvent3_bytes" {
     GHC.Event.Internal.$fShowEvent3_bytes:
         I8[] [101,118,116,67,108,111,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:27.11679773 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent2_closure" {
     GHC.Event.Internal.$fShowEvent2_closure:
         const GHC.Event.Internal.$fShowEvent2_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Internal.$fShowEvent2_entry() //  [R1]
         { info_tbl: [(c9kkP,
                       label: GHC.Event.Internal.$fShowEvent2_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kkP: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9kkQ; else goto c9kkR;
       c9kkQ: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9kkR: // global
           (_c9kkM::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9kkM::I64 == 0) goto c9kkO; else goto c9kkN;
       c9kkO: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9kkN: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9kkM::I64;
           R2 = GHC.Event.Internal.$fShowEvent3_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:27.120712987 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent4_closure" {
     GHC.Event.Internal.$fShowEvent4_closure:
         const GHC.Event.Internal.$fShowEvent4_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Internal.$fShowEvent4_entry() //  [R1]
         { info_tbl: [(c9kl5,
                       label: GHC.Event.Internal.$fShowEvent4_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kl5: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9kl6; else goto c9kl7;
       c9kl6: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9kl7: // global
           (_c9kl2::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9kl2::I64 == 0) goto c9kl4; else goto c9kl3;
       c9kl4: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9kl3: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9kl2::I64;
           R2 = GHC.Event.Internal.$fShowEvent5_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:27.124477505 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent6_closure" {
     GHC.Event.Internal.$fShowEvent6_closure:
         const :_con_info;
         const GHC.Event.Internal.$fShowEvent2_closure;
         const GHC.Types.[]_closure+1;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:27.128505276 UTC

[section ""data" . GHC.Event.Internal.$w$cshow_closure" {
     GHC.Event.Internal.$w$cshow_closure:
         const GHC.Event.Internal.$w$cshow_info;
         const 0;
 },
 sat_s9j0W_entry() //  [R1]
         { info_tbl: [(c9klS,
                       label: sat_s9j0W_info
                       rep:HeapRep 1 nonptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9klS: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9klT; else goto c9km4;
       c9klT: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9km4: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           if (I64[R1 + 16] & 4 == 0) goto c9klR; else goto c9klQ;
       c9klR: // global
           R1 = []_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c9klQ: // global
           R1 = GHC.Event.Internal.$fShowEvent6_closure+2;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 sat_s9j0Z_entry() //  [R1]
         { info_tbl: [(c9km8,
                       label: sat_s9j0Z_info
                       rep:HeapRep 1 nonptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9km8: // global
           if ((Sp + -40) < SpLim) (likely: False) goto c9km9; else goto c9kmy;
       c9km9: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9kmy: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           _s9j0S::I64 = I64[R1 + 16];
           _s9j0U::I64 = _s9j0S::I64 & 2;
           if (_s9j0U::I64 != 0) goto u9kmz; else goto c9km7;
       u9kmz: // global
           I64[Sp - 32] = _s9j0S::I64;
           I64[Sp - 24] = _s9j0U::I64;
           Sp = Sp - 32;
           call _c9klH() args: 0, res: 0, upd: 0;
       c9km7: // global
           if (_s9j0S::I64 & 4 == 0) goto c9kmu; else goto c9kmo;
       c9kmu: // global
           R3 = GHC.Types.[]_closure+1;
           R2 = GHC.Event.Internal.$fShowEvent9_closure;
           Sp = Sp - 16;
           call Data.OldList.prependToAll_entry(R3,
                                                R2) args: 24, res: 0, upd: 24;
       c9kmo: // global
           R3 = GHC.Event.Internal.$fShowEvent6_closure+2;
           R2 = GHC.Event.Internal.$fShowEvent9_closure;
           Sp = Sp - 16;
           call Data.OldList.prependToAll_entry(R3,
                                                R2) args: 24, res: 0, upd: 24;
     }
 },
 _c9klH() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9klH: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c9kmd; else goto c9kmc;
       c9kmd: // global
           HpAlloc = 48;
           I64[Sp - 8] = block_c9klG_info;
           R1 = I64[Sp + 8];
           Sp = Sp - 8;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 24;
       c9kmc: // global
           I64[Hp - 40] = sat_s9j0W_info;
           I64[Hp - 24] = I64[Sp];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Event.Internal.$fShowEvent7_closure;
           P64[Hp] = Hp - 40;
           R3 = Hp - 14;
           R2 = GHC.Event.Internal.$fShowEvent9_closure;
           Sp = Sp + 16;
           call Data.OldList.prependToAll_entry(R3,
                                                R2) args: 24, res: 0, upd: 24;
     }
 },
 _c9klG() //  [R1]
         { info_tbl: [(c9klG,
                       label: block_c9klG_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9klG: // global
           I64[Sp + 16] = R1;
           Sp = Sp + 8;
           call _c9klH() args: 0, res: 0, upd: 0;
     }
 },
 sat_s9j14_entry() //  [R1]
         { info_tbl: [(c9kmW,
                       label: sat_s9j14_info
                       rep:HeapRep 1 nonptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kmW: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9kmX; else goto c9kn8;
       c9kmX: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9kn8: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           if (I64[R1 + 16] & 4 == 0) goto c9kmV; else goto c9kmU;
       c9kmV: // global
           R3 = GHC.Types.[]_closure+1;
           R2 = GHC.Event.Internal.$fShowEvent9_closure;
           Sp = Sp - 16;
           call Data.OldList.prependToAll_entry(R3,
                                                R2) args: 24, res: 0, upd: 24;
       c9kmU: // global
           R3 = GHC.Event.Internal.$fShowEvent6_closure+2;
           R2 = GHC.Event.Internal.$fShowEvent9_closure;
           Sp = Sp - 16;
           call Data.OldList.prependToAll_entry(R3,
                                                R2) args: 24, res: 0, upd: 24;
     }
 },
 sat_s9j18_entry() //  [R1]
         { info_tbl: [(c9knn,
                       label: sat_s9j18_info
                       rep:HeapRep { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9knn: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9kno; else goto c9knp;
       c9kno: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9knp: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = GHC.Types.[]_closure+1;
           R2 = GHC.Event.Internal.$fShowEvent9_closure;
           Sp = Sp - 16;
           call Data.OldList.prependToAll_entry(R3,
                                                R2) args: 24, res: 0, upd: 24;
     }
 },
 sat_s9j1b_entry() //  [R1]
         { info_tbl: [(c9knq,
                       label: sat_s9j1b_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9knq: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c9knr; else goto c9kns;
       c9knr: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9kns: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c9klo_info;
           R1 = P64[R1 + 16];
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9kon; else goto c9klp;
       u9kon: // global
           call _c9klo(R1) args: 0, res: 0, upd: 0;
       c9klp: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 _c9klo() //  [R1]
         { info_tbl: [(c9klo,
                       label: block_c9klo_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9klo: // global
           _s9j0S::I64 = I64[R1 + 7];
           _s9j0T::I64 = _s9j0S::I64 & 1;
           if (_s9j0T::I64 != 0) goto u9kob; else goto c9knF;
       u9kob: // global
           I64[Sp - 8] = _s9j0T::I64;
           I64[Sp] = _s9j0S::I64;
           Sp = Sp - 8;
           call _c9klx() args: 0, res: 0, upd: 0;
       c9knF: // global
           _s9j12::I64 = _s9j0S::I64 & 2;
           if (_s9j12::I64 != 0) goto u9kod; else goto c9knS;
       u9kod: // global
           I64[Sp - 8] = _s9j12::I64;
           I64[Sp] = _s9j0S::I64;
           Sp = Sp - 8;
           call _c9kmL() args: 0, res: 0, upd: 0;
       c9knS: // global
           _s9j17::I64 = _s9j0S::I64 & 4;
           if (_s9j17::I64 != 0) goto u9kof; else goto c9ko7;
       u9kof: // global
           I64[Sp] = _s9j17::I64;
           call _c9knh() args: 0, res: 0, upd: 0;
       c9ko7: // global
           R1 = GHC.Event.Internal.$fShowEvent4_closure;
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 _c9klx() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9klx: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c9knA; else goto c9knz;
       c9knA: // global
           HpAlloc = 48;
           _s9j0T::I64 = I64[Sp];
           I64[Sp] = block_c9klw_info;
           R1 = _s9j0T::I64;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 24;
       c9knz: // global
           I64[Hp - 40] = sat_s9j0Z_info;
           I64[Hp - 24] = I64[Sp + 8];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Event.Internal.$fShowEvent11_closure;
           P64[Hp] = Hp - 40;
           I64[Sp + 8] = block_c9knv_info;
           R2 = Hp - 14;
           Sp = Sp + 8;
           call Data.OldList.intercalate1_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 _c9klw() //  [R1]
         { info_tbl: [(c9klw,
                       label: block_c9klw_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9klw: // global
           I64[Sp] = R1;
           call _c9klx() args: 0, res: 0, upd: 0;
     }
 },
 _c9knv() //  [R1]
         { info_tbl: [(c9knv,
                       label: block_c9knv_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9knv: // global
           R3 = GHC.Event.Internal.$fShowEvent4_closure;
           R2 = R1;
           Sp = Sp + 8;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 _c9kmL() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kmL: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c9knN; else goto c9knM;
       c9knN: // global
           HpAlloc = 48;
           _s9j12::I64 = I64[Sp];
           I64[Sp] = block_c9kmK_info;
           R1 = _s9j12::I64;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 24;
       c9knM: // global
           I64[Hp - 40] = sat_s9j14_info;
           I64[Hp - 24] = I64[Sp + 8];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Event.Internal.$fShowEvent7_closure;
           P64[Hp] = Hp - 40;
           I64[Sp + 8] = block_c9knI_info;
           R2 = Hp - 14;
           Sp = Sp + 8;
           call Data.OldList.intercalate1_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 _c9kmK() //  [R1]
         { info_tbl: [(c9kmK,
                       label: block_c9kmK_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kmK: // global
           I64[Sp] = R1;
           call _c9kmL() args: 0, res: 0, upd: 0;
     }
 },
 _c9knI() //  [R1]
         { info_tbl: [(c9knI,
                       label: block_c9knI_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9knI: // global
           R3 = GHC.Event.Internal.$fShowEvent4_closure;
           R2 = R1;
           Sp = Sp + 8;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 _c9knh() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9knh: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c9ko0; else goto c9knZ;
       c9ko0: // global
           HpAlloc = 40;
           _s9j17::I64 = I64[Sp];
           I64[Sp] = block_c9kng_info;
           R1 = _s9j17::I64;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 24;
       c9knZ: // global
           I64[Hp - 32] = sat_s9j18_info;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Event.Internal.$fShowEvent2_closure;
           P64[Hp] = Hp - 32;
           I64[Sp] = block_c9knV_info;
           R2 = Hp - 14;
           call Data.OldList.intercalate1_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 _c9kng() //  [R1]
         { info_tbl: [(c9kng,
                       label: block_c9kng_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kng: // global
           I64[Sp] = R1;
           call _c9knh() args: 0, res: 0, upd: 0;
     }
 },
 _c9knV() //  [R1]
         { info_tbl: [(c9knV,
                       label: block_c9knV_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9knV: // global
           R3 = GHC.Event.Internal.$fShowEvent4_closure;
           R2 = R1;
           Sp = Sp + 8;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 GHC.Event.Internal.$w$cshow_entry() //  [R2]
         { info_tbl: [(c9koo,
                       label: GHC.Event.Internal.$w$cshow_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9koo: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9kos; else goto c9kor;
       c9kos: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = GHC.Event.Internal.$w$cshow_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9kor: // global
           I64[Hp - 16] = sat_s9j1b_info;
           P64[Hp] = R2;
           R2 = Hp - 16;
           R1 = GHC.Event.Internal.$fShowEvent13_closure+1;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:27.163621998 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent_$cshow_closure" {
     GHC.Event.Internal.$fShowEvent_$cshow_closure:
         const GHC.Event.Internal.$fShowEvent_$cshow_info;
         const 0;
 },
 GHC.Event.Internal.$fShowEvent_$cshow_entry() //  [R2]
         { info_tbl: [(c9kpM,
                       label: GHC.Event.Internal.$fShowEvent_$cshow_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kpM: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9kpN; else goto c9kpO;
       c9kpN: // global
           R2 = R2;
           R1 = GHC.Event.Internal.$fShowEvent_$cshow_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9kpO: // global
           I64[Sp - 8] = block_c9kpJ_info;
           R2 = R2;
           Sp = Sp - 8;
           call GHC.Event.Internal.$w$cshow_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9kpJ() //  [R1, R2]
         { info_tbl: [(c9kpJ,
                       label: block_c9kpJ_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kpJ: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9kpR; else goto c9kpQ;
       c9kpR: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 8;
       c9kpQ: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:27.169574052 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent_$cshowsPrec_closure" {
     GHC.Event.Internal.$fShowEvent_$cshowsPrec_closure:
         const GHC.Event.Internal.$fShowEvent_$cshowsPrec_info;
         const 0;
 },
 GHC.Event.Internal.$fShowEvent_$cshowsPrec_entry() //  [R2, R3, R4]
         { info_tbl: [(c9kq8,
                       label: GHC.Event.Internal.$fShowEvent_$cshowsPrec_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kq8: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9kq9; else goto c9kqa;
       c9kq9: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fShowEvent_$cshowsPrec_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9kqa: // global
           I64[Sp - 16] = block_c9kq5_info;
           R2 = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 16;
           call GHC.Event.Internal.$w$cshow_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9kq5() //  [R1, R2]
         { info_tbl: [(c9kq5,
                       label: block_c9kq5_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kq5: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9kqd; else goto c9kqc;
       c9kqd: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 8;
       c9kqc: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R3 = P64[Sp + 8];
           R2 = Hp - 14;
           Sp = Sp + 16;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:27.175753061 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent1_closure" {
     GHC.Event.Internal.$fShowEvent1_closure:
         const GHC.Event.Internal.$fShowEvent1_info;
         const 0;
 },
 GHC.Event.Internal.$fShowEvent1_entry() //  [R2, R3]
         { info_tbl: [(c9kqt,
                       label: GHC.Event.Internal.$fShowEvent1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kqt: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9kqu; else goto c9kqv;
       c9kqu: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fShowEvent1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9kqv: // global
           I64[Sp - 16] = block_c9kqq_info;
           R2 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           call GHC.Event.Internal.$w$cshow_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9kqq() //  [R1, R2]
         { info_tbl: [(c9kqq,
                       label: block_c9kqq_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kqq: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9kqy; else goto c9kqx;
       c9kqy: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 8;
       c9kqx: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R3 = P64[Sp + 8];
           R2 = Hp - 14;
           Sp = Sp + 16;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:27.18173856 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent_$cshowList_closure" {
     GHC.Event.Internal.$fShowEvent_$cshowList_closure:
         const GHC.Event.Internal.$fShowEvent_$cshowList_info;
         const 0;
 },
 GHC.Event.Internal.$fShowEvent_$cshowList_entry() //  [R2, R3]
         { info_tbl: [(c9kqL,
                       label: GHC.Event.Internal.$fShowEvent_$cshowList_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kqL: // global
           R4 = R3;
           R3 = R2;
           R2 = GHC.Event.Internal.$fShowEvent1_closure+2;
           call GHC.Show.showList___entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:27.184902824 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent_closure" {
     GHC.Event.Internal.$fShowEvent_closure:
         const GHC.Show.C:Show_con_info;
         const GHC.Event.Internal.$fShowEvent_$cshowsPrec_closure+3;
         const GHC.Event.Internal.$fShowEvent_$cshow_closure+1;
         const GHC.Event.Internal.$fShowEvent_$cshowList_closure+2;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:27.186858257 UTC

[section ""data" . GHC.Event.Internal.Backend_closure" {
     GHC.Event.Internal.Backend_closure:
         const GHC.Event.Internal.Backend_info;
 },
 GHC.Event.Internal.Backend_entry() //  [R2, R3, R4, R5, R6]
         { info_tbl: [(c9kqY,
                       label: GHC.Event.Internal.Backend_info
                       rep:HeapRep static { Fun {arity: 5 fun_type: ArgSpec 25} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kqY: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c9kr2; else goto c9kr1;
       c9kr2: // global
           HpAlloc = 48;
           R6 = R6;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.Backend_closure;
           call (stg_gc_fun)(R6, R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9kr1: // global
           I64[Hp - 40] = GHC.Event.Internal.Backend_con_info;
           P64[Hp - 32] = R2;
           P64[Hp - 24] = R3;
           P64[Hp - 16] = R4;
           P64[Hp - 8] = R5;
           P64[Hp] = R6;
           R1 = Hp - 39;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:27.190902663 UTC

[section ""data" . GHC.Event.Internal.Timeout_closure" {
     GHC.Event.Internal.Timeout_closure:
         const GHC.Event.Internal.Timeout_info;
 },
 GHC.Event.Internal.Timeout_entry() //  [R2]
         { info_tbl: [(c9krd,
                       label: GHC.Event.Internal.Timeout_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9krd: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9krh; else goto c9krg;
       c9krh: // global
           HpAlloc = 16;
           R2 = R2;
           R1 = GHC.Event.Internal.Timeout_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9krg: // global
           I64[Hp - 8] = GHC.Event.Internal.Timeout_con_info;
           I64[Hp] = R2;
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:27.19438991 UTC

[section ""data" . GHC.Event.Internal.Forever_closure" {
     GHC.Event.Internal.Forever_closure:
         const GHC.Event.Internal.Forever_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:27.196009846 UTC

[section ""data" . GHC.Event.Internal.OneShot_closure" {
     GHC.Event.Internal.OneShot_closure:
         const GHC.Event.Internal.OneShot_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:27.197690916 UTC

[section ""data" . GHC.Event.Internal.MultiShot_closure" {
     GHC.Event.Internal.MultiShot_closure:
         const GHC.Event.Internal.MultiShot_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:27.199366638 UTC

[GHC.Event.Internal.Backend_con_entry() //  [R1]
         { info_tbl: [(c9krq,
                       label: GHC.Event.Internal.Backend_con_info
                       rep:HeapRep 5 ptrs {
                             Con {tag: 0
                                  descr:[98,97,115,101,58,71,72,67,46,69,118,101,110,116,46,73,110,116,101,114,110,97,108,46,66,97,99,107,101,110,100]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9krq: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:27.202689126 UTC

[GHC.Event.Internal.Timeout_con_entry() //  [R1]
         { info_tbl: [(c9krw,
                       label: GHC.Event.Internal.Timeout_con_info
                       rep:HeapRep 1 nonptrs {
                             Con {tag: 0
                                  descr:[98,97,115,101,58,71,72,67,46,69,118,101,110,116,46,73,110,116,101,114,110,97,108,46,84,105,109,101,111,117,116]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9krw: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:27.206272145 UTC

[GHC.Event.Internal.Forever_con_entry() //  [R1]
         { info_tbl: [(c9krC,
                       label: GHC.Event.Internal.Forever_con_info
                       rep:HeapRep 1 nonptrs {
                             Con {tag: 1
                                  descr:[98,97,115,101,58,71,72,67,46,69,118,101,110,116,46,73,110,116,101,114,110,97,108,46,70,111,114,101,118,101,114]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9krC: // global
           R1 = R1 + 2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:27.20932709 UTC

[section ""relreadonly" . GHC.Event.Internal.Lifetime_closure_tbl" {
     GHC.Event.Internal.Lifetime_closure_tbl:
         const GHC.Event.Internal.OneShot_closure+1;
         const GHC.Event.Internal.MultiShot_closure+2;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:27.210977622 UTC

[GHC.Event.Internal.OneShot_con_entry() //  [R1]
         { info_tbl: [(c9krJ,
                       label: GHC.Event.Internal.OneShot_con_info
                       rep:HeapRep 1 nonptrs {
                             Con {tag: 0
                                  descr:[98,97,115,101,58,71,72,67,46,69,118,101,110,116,46,73,110,116,101,114,110,97,108,46,79,110,101,83,104,111,116]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9krJ: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:27.214516664 UTC

[GHC.Event.Internal.MultiShot_con_entry() //  [R1]
         { info_tbl: [(c9krP,
                       label: GHC.Event.Internal.MultiShot_con_info
                       rep:HeapRep 1 nonptrs {
                             Con {tag: 1
                                  descr:[98,97,115,101,58,71,72,67,46,69,118,101,110,116,46,73,110,116,101,114,110,97,108,46,77,117,108,116,105,83,104,111,116]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9krP: // global
           R1 = R1 + 2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:27.218455764 UTC

[section ""relreadonly" . S9j2f_srt" {
     S9j2f_srt:
         const GHC.Event.Internal.$fShowTimeout3_closure;
         const GHC.Show.$w$cshowsPrec4_closure;
         const GHC.Event.Internal.$fShowTimeout_$cshowsPrec_closure;
         const GHC.Event.Internal.$fShowTimeout2_closure;
         const GHC.Event.Internal.$fShowTimeout_$cshow_closure;
         const GHC.Event.Internal.$fShowTimeout1_closure;
         const GHC.Event.Internal.$fShowLifetime2_closure;
         const GHC.Event.Internal.$fShowLifetime4_closure;
         const GHC.Event.Internal.$fShowLifetime_$cshowsPrec_closure;
         const GHC.Event.Internal.$fShowLifetime_$cshow_closure;
         const GHC.Event.Internal.$fShowLifetime1_closure;
         const Data.Semigroup.Internal.stimesMonoid_closure;
         const GHC.Event.Internal.$fMonoidLifetime_closure;
         const sat_s9iZu_closure;
         const GHC.Event.Internal.throwErrnoIfMinus1NoRetry3_closure;
         const GHC.Event.Internal.throwErrnoIfMinus1NoRetry2_closure;
         const Foreign.C.Error.throwErrno1_closure;
         const GHC.Event.Internal.throwErrnoIfMinus1NoRetry1_closure;
         const Data.Semigroup.Internal.stimesDefault_closure;
         const GHC.Event.Internal.$fSemigroupEventLifetime_closure;
         const GHC.Event.Internal.evtNothing_closure;
         const GHC.Event.Internal.$fMonoidEvent_closure;
         const GHC.Event.Internal.$fShowEvent6_closure;
         const GHC.Event.Internal.$fShowEvent7_closure;
         const GHC.Event.Internal.$fShowEvent9_closure;
         const GHC.Event.Internal.$fShowEvent2_closure;
         const GHC.Event.Internal.$fShowEvent4_closure;
         const GHC.Event.Internal.$fShowEvent11_closure;
         const GHC.Event.Internal.$w$cshow_closure;
         const GHC.Event.Internal.$fShowEvent_$cshow_closure;
         const GHC.Event.Internal.$fShowEvent_$cshowsPrec_closure;
         const GHC.Event.Internal.$fShowEvent1_closure;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.29504214 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:04:28.296855152 UTC

[section ""data" . GHC.Event.Internal.$WBackend_closure" {
     GHC.Event.Internal.$WBackend_closure:
         const GHC.Event.Internal.$WBackend_info;
 },
 GHC.Event.Internal.$WBackend_entry() //  [R2, R3, R4, R5, R6]
         { info_tbl: [(c9kwB,
                       label: GHC.Event.Internal.$WBackend_info
                       rep:HeapRep static { Fun {arity: 5 fun_type: ArgSpec 25} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kwB: // global
           if ((Sp + -40) < SpLim) (likely: False) goto c9kwC; else goto c9kwD;
       c9kwC: // global
           R6 = R6;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$WBackend_closure;
           call (stg_gc_fun)(R6, R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9kwD: // global
           I64[Sp - 40] = block_c9kwy_info;
           R1 = R2;
           P64[Sp - 32] = R3;
           P64[Sp - 24] = R4;
           P64[Sp - 16] = R5;
           P64[Sp - 8] = R6;
           Sp = Sp - 40;
           call stg_ap_0_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9kwy() //  [R1]
         { info_tbl: [(c9kwy,
                       label: block_c9kwy_info
                       rep:StackRep [False, False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kwy: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c9kwG; else goto c9kwF;
       c9kwG: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9kwF: // global
           I64[Hp - 40] = GHC.Event.Internal.Backend_con_info;
           P64[Hp - 32] = R1;
           P64[Hp - 24] = P64[Sp + 8];
           P64[Hp - 16] = P64[Sp + 16];
           P64[Hp - 8] = P64[Sp + 24];
           P64[Hp] = P64[Sp + 32];
           R1 = Hp - 39;
           Sp = Sp + 40;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.303492655 UTC

[section ""data" . GHC.Event.Internal.$WTimeout_closure" {
     GHC.Event.Internal.$WTimeout_closure:
         const GHC.Event.Internal.$WTimeout_info;
 },
 GHC.Event.Internal.$WTimeout_entry() //  [R2]
         { info_tbl: [(c9kx3,
                       label: GHC.Event.Internal.$WTimeout_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kx3: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9kx7; else goto c9kx8;
       c9kx7: // global
           R2 = R2;
           R1 = GHC.Event.Internal.$WTimeout_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9kx8: // global
           I64[Sp - 8] = block_c9kx0_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9kxc; else goto c9kx1;
       u9kxc: // global
           call _c9kx0(R1) args: 0, res: 0, upd: 0;
       c9kx1: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9kx0() //  [R1]
         { info_tbl: [(c9kx0,
                       label: block_c9kx0_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kx0: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9kxb; else goto c9kxa;
       c9kxb: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9kxa: // global
           _s9ks4::I64 = I64[R1 + 7];
           I64[Hp - 8] = GHC.Event.Internal.Timeout_con_info;
           I64[Hp] = _s9ks4::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.309605967 UTC

[section ""data" . GHC.Event.Internal.$fMonoidEventLifetime1_closure" {
     GHC.Event.Internal.$fMonoidEventLifetime1_closure:
         const GHC.Types.I#_con_info;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.311575299 UTC

[section ""cstring" . GHC.Event.Internal.$fShowTimeout4_bytes" {
     GHC.Event.Internal.$fShowTimeout4_bytes:
         I8[] [70,111,114,101,118,101,114]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.313948303 UTC

[section ""data" . GHC.Event.Internal.$fShowTimeout3_closure" {
     GHC.Event.Internal.$fShowTimeout3_closure:
         const GHC.Event.Internal.$fShowTimeout3_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Internal.$fShowTimeout3_entry() //  [R1]
         { info_tbl: [(c9kxx,
                       label: GHC.Event.Internal.$fShowTimeout3_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kxx: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9kxy; else goto c9kxz;
       c9kxy: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9kxz: // global
           (_c9kxu::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9kxu::I64 == 0) goto c9kxw; else goto c9kxv;
       c9kxw: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9kxv: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9kxu::I64;
           R2 = GHC.Event.Internal.$fShowTimeout4_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.318370595 UTC

[section ""data" . GHC.Event.Internal.$fShowTimeout2_closure" {
     GHC.Event.Internal.$fShowTimeout2_closure:
         const GHC.Event.Internal.$fShowTimeout2_info;
         const 0;
 },
 GHC.Event.Internal.$fShowTimeout2_entry() //  [R2]
         { info_tbl: [(c9kxM,
                       label: GHC.Event.Internal.$fShowTimeout2_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kxM: // global
           R3 = R2;
           R2 = GHC.Event.Internal.$fShowTimeout3_closure;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.32213433 UTC

[section ""cstring" . GHC.Event.Internal.$fShowTimeout5_bytes" {
     GHC.Event.Internal.$fShowTimeout5_bytes:
         I8[] [84,105,109,101,111,117,116,32]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.326358121 UTC

[section ""data" . GHC.Event.Internal.$fShowTimeout_$cshowsPrec_closure" {
     GHC.Event.Internal.$fShowTimeout_$cshowsPrec_closure:
         const GHC.Event.Internal.$fShowTimeout_$cshowsPrec_info;
         const 0;
 },
 w1_s9ksb_entry() //  [R1]
         { info_tbl: [(c9kyf,
                       label: w1_s9ksb_info
                       rep:HeapRep 1 nonptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kyf: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9kyg; else goto c9kyn;
       c9kyg: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9kyn: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           _s9ks8::I64 = I64[R1 + 16];
           if (%MO_S_Lt_W64(_s9ks8::I64, 0)) goto c9kyl; else goto c9kym;
       c9kyl: // global
           R2 = _s9ks8::I64;
           Sp = Sp - 16;
           call GHC.Integer.Type.wordToInteger_entry(R2) args: 24, res: 0, upd: 24;
       c9kym: // global
           R2 = _s9ks8::I64;
           Sp = Sp - 16;
           call GHC.Integer.Type.smallInteger_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 sat_s9ksj_entry() //  [R1]
         { info_tbl: [(c9kyD,
                       label: sat_s9ksj_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kyD: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9kyE; else goto c9kyF;
       c9kyE: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9kyF: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c9kyA_info;
           R4 = P64[R1 + 24];
           R3 = P64[R1 + 16];
           R2 = 11;
           Sp = Sp - 24;
           call GHC.Show.$w$cshowsPrec4_entry(R4,
                                              R3,
                                              R2) args: 8, res: 8, upd: 24;
     }
 },
 _c9kyA() //  [R1, R2]
         { info_tbl: [(c9kyA,
                       label: block_c9kyA_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kyA: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9kyI; else goto c9kyH;
       c9kyI: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c9kyH: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 sat_s9ksk_entry() //  [R1, R2]
         { info_tbl: [(c9kyJ,
                       label: sat_s9ksk_info
                       rep:HeapRep 1 ptrs { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kyJ: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c9kyN; else goto c9kyM;
       c9kyN: // global
           HpAlloc = 32;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9kyM: // global
           _s9ksb::P64 = P64[R1 + 7];
           I64[Hp - 24] = sat_s9ksj_info;
           P64[Hp - 8] = _s9ksb::P64;
           P64[Hp] = R2;
           R3 = Hp - 24;
           R2 = GHC.Event.Internal.$fShowTimeout5_bytes;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 sat_s9ksq_entry() //  [R1]
         { info_tbl: [(c9kz6,
                       label: sat_s9ksq_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kz6: // global
           _s9ksq::P64 = R1;
           if ((Sp + -24) < SpLim) (likely: False) goto c9kz7; else goto c9kz8;
       c9kz8: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9kza; else goto c9kz9;
       c9kza: // global
           HpAlloc = 24;
           goto c9kz7;
       c9kz7: // global
           R1 = _s9ksq::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9kz9: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s9ksq::P64;
           _s9ksb::P64 = P64[_s9ksq::P64 + 16];
           _s9ksl::P64 = P64[_s9ksq::P64 + 24];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.$fShow(,)2_closure;
           P64[Hp] = _s9ksl::P64;
           I64[Sp - 24] = block_c9kz3_info;
           R4 = Hp - 14;
           R3 = _s9ksb::P64;
           R2 = 11;
           Sp = Sp - 24;
           call GHC.Show.$w$cshowsPrec4_entry(R4,
                                              R3,
                                              R2) args: 8, res: 8, upd: 24;
     }
 },
 _c9kz3() //  [R1, R2]
         { info_tbl: [(c9kz3,
                       label: block_c9kz3_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kz3: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9kzd; else goto c9kzc;
       c9kzd: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c9kzc: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 sat_s9ksr_entry() //  [R1]
         { info_tbl: [(c9kze,
                       label: sat_s9ksr_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kze: // global
           _s9ksr::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9kzf; else goto c9kzg;
       c9kzg: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c9kzi; else goto c9kzh;
       c9kzi: // global
           HpAlloc = 32;
           goto c9kzf;
       c9kzf: // global
           R1 = _s9ksr::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9kzh: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s9ksr::P64;
           _s9ksb::P64 = P64[_s9ksr::P64 + 16];
           _s9ksl::P64 = P64[_s9ksr::P64 + 24];
           I64[Hp - 24] = sat_s9ksq_info;
           P64[Hp - 8] = _s9ksb::P64;
           P64[Hp] = _s9ksl::P64;
           R3 = Hp - 24;
           R2 = GHC.Event.Internal.$fShowTimeout5_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 24, res: 0, upd: 24;
     }
 },
 sat_s9kss_entry() //  [R1, R2]
         { info_tbl: [(c9kzk,
                       label: sat_s9kss_info
                       rep:HeapRep 1 ptrs { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kzk: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c9kzo; else goto c9kzn;
       c9kzo: // global
           HpAlloc = 56;
           R2 = R2;
           R1 = R1;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9kzn: // global
           _s9ksb::P64 = P64[R1 + 7];
           I64[Hp - 48] = sat_s9ksr_info;
           P64[Hp - 32] = _s9ksb::P64;
           P64[Hp - 24] = R2;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.$fShow(,)4_closure;
           P64[Hp] = Hp - 48;
           R1 = Hp - 14;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.Event.Internal.$fShowTimeout_$cshowsPrec_entry() //  [R2, R3]
         { info_tbl: [(c9kzt,
                       label: GHC.Event.Internal.$fShowTimeout_$cshowsPrec_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kzt: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9kzu; else goto c9kzv;
       c9kzu: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fShowTimeout_$cshowsPrec_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9kzv: // global
           I64[Sp - 16] = block_c9kxZ_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9kzH; else goto c9ky0;
       u9kzH: // global
           call _c9kxZ(R1) args: 0, res: 0, upd: 0;
       c9ky0: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9kxZ() //  [R1]
         { info_tbl: [(c9kxZ,
                       label: block_c9kxZ_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kxZ: // global
           if (R1 & 7 == 1) goto c9kzq; else goto c9kzr;
       c9kzq: // global
           I64[Sp] = block_c9ky4_info;
           _s9ks8::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9ks8::I64;
           if (R1 & 7 != 0) goto u9kzG; else goto c9ky5;
       u9kzG: // global
           call _c9ky4(R1) args: 0, res: 0, upd: 0;
       c9ky5: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c9kzr: // global
           R1 = GHC.Event.Internal.$fShowTimeout2_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9ky4() //  [R1]
         { info_tbl: [(c9ky4,
                       label: block_c9ky4_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ky4: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c9kzz; else goto c9kzy;
       c9kzz: // global
           HpAlloc = 40;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9kzy: // global
           _s9ksa::I64 = I64[R1 + 7];
           I64[Hp - 32] = w1_s9ksb_info;
           I64[Hp - 16] = I64[Sp + 8];
           _c9ky9::P64 = Hp - 32;
           if (%MO_S_Lt_W64(_s9ksa::I64, 11)) goto c9kzB; else goto c9kzC;
       c9kzB: // global
           I64[Hp - 8] = sat_s9ksk_info;
           P64[Hp] = _c9ky9::P64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9kzC: // global
           I64[Hp - 8] = sat_s9kss_info;
           P64[Hp] = _c9ky9::P64;
           R1 = Hp - 7;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.355635723 UTC

[section ""data" . GHC.Event.Internal.$fShowTimeout_$cshow_closure" {
     GHC.Event.Internal.$fShowTimeout_$cshow_closure:
         const GHC.Event.Internal.$fShowTimeout_$cshow_info;
         const 0;
 },
 sat_s9ksG_entry() //  [R1]
         { info_tbl: [(c9kB6,
                       label: sat_s9ksG_info
                       rep:HeapRep 1 nonptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kB6: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9kB7; else goto c9kBC;
       c9kB7: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9kBC: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           _s9ksv::I64 = I64[R1 + 16];
           if (%MO_S_Lt_W64(_s9ksv::I64, 0)) goto c9kBk; else goto c9kBx;
       c9kBk: // global
           I64[Sp - 24] = block_c9kBc_info;
           R2 = _s9ksv::I64;
           Sp = Sp - 24;
           call GHC.Integer.Type.wordToInteger_entry(R2) args: 8, res: 8, upd: 24;
       c9kBx: // global
           I64[Sp - 24] = block_c9kBq_info;
           R2 = _s9ksv::I64;
           Sp = Sp - 24;
           call GHC.Integer.Type.smallInteger_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 _c9kBc() //  [R1]
         { info_tbl: [(c9kBc,
                       label: block_c9kBc_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kBc: // global
           I64[Sp] = block_c9kBg_info;
           R4 = GHC.Types.[]_closure+1;
           R3 = R1;
           R2 = 11;
           call GHC.Show.$w$cshowsPrec4_entry(R4,
                                              R3,
                                              R2) args: 8, res: 8, upd: 24;
     }
 },
 _c9kBg() //  [R1, R2]
         { info_tbl: [(c9kBg,
                       label: block_c9kBg_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kBg: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9kBo; else goto c9kBn;
       c9kBo: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c9kBn: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 _c9kBq() //  [R1]
         { info_tbl: [(c9kBq,
                       label: block_c9kBq_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kBq: // global
           I64[Sp] = block_c9kBu_info;
           R4 = GHC.Types.[]_closure+1;
           R3 = R1;
           R2 = 11;
           call GHC.Show.$w$cshowsPrec4_entry(R4,
                                              R3,
                                              R2) args: 8, res: 8, upd: 24;
     }
 },
 _c9kBu() //  [R1, R2]
         { info_tbl: [(c9kBu,
                       label: block_c9kBu_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kBu: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9kBB; else goto c9kBA;
       c9kBB: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c9kBA: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 GHC.Event.Internal.$fShowTimeout_$cshow_entry() //  [R2]
         { info_tbl: [(c9kBH,
                       label: GHC.Event.Internal.$fShowTimeout_$cshow_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kBH: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9kBI; else goto c9kBJ;
       c9kBI: // global
           R2 = R2;
           R1 = GHC.Event.Internal.$fShowTimeout_$cshow_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9kBJ: // global
           I64[Sp - 8] = block_c9kAV_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9kBQ; else goto c9kAW;
       u9kBQ: // global
           call _c9kAV(R1) args: 0, res: 0, upd: 0;
       c9kAW: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9kAV() //  [R1]
         { info_tbl: [(c9kAV,
                       label: block_c9kAV_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kAV: // global
           if (R1 & 7 == 1) goto c9kBE; else goto c9kBF;
       c9kBE: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9kBM; else goto c9kBL;
       c9kBM: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9kBL: // global
           _s9ksv::I64 = I64[R1 + 7];
           I64[Hp - 16] = sat_s9ksG_info;
           I64[Hp] = _s9ksv::I64;
           R3 = Hp - 16;
           R2 = GHC.Event.Internal.$fShowTimeout5_bytes;
           Sp = Sp + 8;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
       c9kBF: // global
           R1 = GHC.Event.Internal.$fShowTimeout3_closure;
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.373320847 UTC

[section ""data" . GHC.Event.Internal.$fShowTimeout1_closure" {
     GHC.Event.Internal.$fShowTimeout1_closure:
         const GHC.Event.Internal.$fShowTimeout1_info;
         const 0;
 },
 GHC.Event.Internal.$fShowTimeout1_entry() //  [R2]
         { info_tbl: [(c9kCA,
                       label: GHC.Event.Internal.$fShowTimeout1_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kCA: // global
           R3 = R2;
           R2 = GHC.Event.Internal.$fMonoidEventLifetime1_closure+1;
           call GHC.Event.Internal.$fShowTimeout_$cshowsPrec_entry(R3,
                                                                   R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.377138106 UTC

[section ""data" . GHC.Event.Internal.$fShowTimeout_$cshowList_closure" {
     GHC.Event.Internal.$fShowTimeout_$cshowList_closure:
         const GHC.Event.Internal.$fShowTimeout_$cshowList_info;
         const 0;
 },
 GHC.Event.Internal.$fShowTimeout_$cshowList_entry() //  [R2, R3]
         { info_tbl: [(c9kCL,
                       label: GHC.Event.Internal.$fShowTimeout_$cshowList_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kCL: // global
           R4 = R3;
           R3 = R2;
           R2 = GHC.Event.Internal.$fShowTimeout1_closure+1;
           call GHC.Show.showList___entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.380781794 UTC

[section ""data" . GHC.Event.Internal.$fShowTimeout_closure" {
     GHC.Event.Internal.$fShowTimeout_closure:
         const GHC.Show.C:Show_con_info;
         const GHC.Event.Internal.$fShowTimeout_$cshowsPrec_closure+2;
         const GHC.Event.Internal.$fShowTimeout_$cshow_closure+1;
         const GHC.Event.Internal.$fShowTimeout_$cshowList_closure+2;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.383014933 UTC

[section ""cstring" . GHC.Event.Internal.$fShowEventLifetime2_bytes" {
     GHC.Event.Internal.$fShowEventLifetime2_bytes:
         I8[] [69,76,32]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.386360092 UTC

[section ""data" . GHC.Event.Internal.$w$cshowsPrec_closure" {
     GHC.Event.Internal.$w$cshowsPrec_closure:
         const GHC.Event.Internal.$w$cshowsPrec_info;
 },
 sat_s9ksS_entry() //  [R1]
         { info_tbl: [(c9kD8,
                       label: sat_s9ksS_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kD8: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c9kDe; else goto c9kDf;
       c9kDe: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9kDf: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 32] = block_c9kD5_info;
           _s9ksL::P64 = P64[R1 + 24];
           R1 = P64[R1 + 16];
           P64[Sp - 24] = _s9ksL::P64;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u9kDk; else goto c9kD6;
       u9kDk: // global
           call _c9kD5(R1) args: 0, res: 0, upd: 0;
       c9kD6: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 _c9kD5() //  [R1]
         { info_tbl: [(c9kD5,
                       label: block_c9kD5_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kD5: // global
           _s9ksL::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c9kDb_info;
           R4 = _s9ksL::P64;
           R3 = I64[R1 + 7];
           R2 = 11;
           Sp = Sp + 8;
           call GHC.Show.$wshowSignedInt_entry(R4,
                                               R3,
                                               R2) args: 8, res: 8, upd: 24;
     }
 },
 _c9kDb() //  [R1, R2]
         { info_tbl: [(c9kDb,
                       label: block_c9kDb_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kDb: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9kDj; else goto c9kDi;
       c9kDj: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c9kDi: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 sat_s9ksZ_entry() //  [R1]
         { info_tbl: [(c9kDx,
                       label: sat_s9ksZ_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kDx: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c9kDE; else goto c9kDF;
       c9kDE: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9kDF: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 32] = block_c9kDu_info;
           _s9ksL::P64 = P64[R1 + 24];
           R1 = P64[R1 + 16];
           P64[Sp - 24] = _s9ksL::P64;
           Sp = Sp - 32;
           if (R1 & 7 != 0) goto u9kDM; else goto c9kDv;
       u9kDM: // global
           call _c9kDu(R1) args: 0, res: 0, upd: 0;
       c9kDv: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 _c9kDu() //  [R1]
         { info_tbl: [(c9kDu,
                       label: block_c9kDu_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kDu: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9kDI; else goto c9kDH;
       c9kDI: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 24;
       c9kDH: // global
           _s9ksU::I64 = I64[R1 + 7];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.$fShow(,)2_closure;
           P64[Hp] = P64[Sp + 8];
           I64[Sp + 8] = block_c9kDB_info;
           R4 = Hp - 14;
           R3 = _s9ksU::I64;
           R2 = 11;
           Sp = Sp + 8;
           call GHC.Show.$wshowSignedInt_entry(R4,
                                               R3,
                                               R2) args: 8, res: 8, upd: 24;
     }
 },
 _c9kDB() //  [R1, R2]
         { info_tbl: [(c9kDB,
                       label: block_c9kDB_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kDB: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9kDL; else goto c9kDK;
       c9kDL: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c9kDK: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 sat_s9kt0_entry() //  [R1]
         { info_tbl: [(c9kDN,
                       label: sat_s9kt0_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kDN: // global
           _s9kt0::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c9kDO; else goto c9kDP;
       c9kDP: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c9kDR; else goto c9kDQ;
       c9kDR: // global
           HpAlloc = 32;
           goto c9kDO;
       c9kDO: // global
           R1 = _s9kt0::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9kDQ: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s9kt0::P64;
           _s9ksK::P64 = P64[_s9kt0::P64 + 16];
           _s9ksL::P64 = P64[_s9kt0::P64 + 24];
           I64[Hp - 24] = sat_s9ksZ_info;
           P64[Hp - 8] = _s9ksK::P64;
           P64[Hp] = _s9ksL::P64;
           R3 = Hp - 24;
           R2 = GHC.Event.Internal.$fShowEventLifetime2_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 24, res: 0, upd: 24;
     }
 },
 GHC.Event.Internal.$w$cshowsPrec_entry() //  [R2, R3, R4]
         { info_tbl: [(c9kDV,
                       label: GHC.Event.Internal.$w$cshowsPrec_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 19} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kDV: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c9kDZ; else goto c9kDY;
       c9kDZ: // global
           HpAlloc = 56;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$w$cshowsPrec_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9kDY: // global
           if (%MO_S_Lt_W64(R2, 11)) goto c9kDT; else goto c9kDU;
       c9kDT: // global
           I64[Hp - 48] = sat_s9ksS_info;
           P64[Hp - 32] = R3;
           P64[Hp - 24] = R4;
           _c9kD1::P64 = Hp - 48;
           Hp = Hp - 24;
           R3 = _c9kD1::P64;
           R2 = GHC.Event.Internal.$fShowEventLifetime2_bytes;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
       c9kDU: // global
           I64[Hp - 48] = sat_s9kt0_info;
           P64[Hp - 32] = R3;
           P64[Hp - 24] = R4;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.$fShow(,)4_closure;
           P64[Hp] = Hp - 48;
           R1 = Hp - 14;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.40793285 UTC

[section ""data" . GHC.Event.Internal.$fShowEventLifetime_$cshowsPrec_closure" {
     GHC.Event.Internal.$fShowEventLifetime_$cshowsPrec_closure:
         const GHC.Event.Internal.$fShowEventLifetime_$cshowsPrec_info;
 },
 GHC.Event.Internal.$fShowEventLifetime_$cshowsPrec_entry() //  [R2,
                                                                 R3, R4]
         { info_tbl: [(c9kEX,
                       label: GHC.Event.Internal.$fShowEventLifetime_$cshowsPrec_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kEX: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9kEY; else goto c9kEZ;
       c9kEY: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fShowEventLifetime_$cshowsPrec_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9kEZ: // global
           I64[Sp - 24] = block_c9kEU_info;
           R1 = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9kF3; else goto c9kEV;
       u9kF3: // global
           call _c9kEU(R1) args: 0, res: 0, upd: 0;
       c9kEV: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9kEU() //  [R1]
         { info_tbl: [(c9kEU,
                       label: block_c9kEU_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kEU: // global
           R4 = P64[Sp + 16];
           R3 = P64[Sp + 8];
           R2 = I64[R1 + 7];
           Sp = Sp + 24;
           call GHC.Event.Internal.$w$cshowsPrec_entry(R4,
                                                       R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.414564753 UTC

[section ""data" . GHC.Event.Internal.$fShowEventLifetime_$cshow_closure" {
     GHC.Event.Internal.$fShowEventLifetime_$cshow_closure:
         const GHC.Event.Internal.$fShowEventLifetime_$cshow_info;
 },
 sat_s9ktc_entry() //  [R1]
         { info_tbl: [(c9kFp,
                       label: sat_s9ktc_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kFp: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9kFv; else goto c9kFw;
       c9kFv: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9kFw: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c9kFm_info;
           R1 = P64[R1 + 16];
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9kFB; else goto c9kFn;
       u9kFB: // global
           call _c9kFm(R1) args: 0, res: 0, upd: 0;
       c9kFn: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 _c9kFm() //  [R1]
         { info_tbl: [(c9kFm,
                       label: block_c9kFm_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kFm: // global
           I64[Sp] = block_c9kFs_info;
           R4 = GHC.Types.[]_closure+1;
           R3 = I64[R1 + 7];
           R2 = 11;
           call GHC.Show.$wshowSignedInt_entry(R4,
                                               R3,
                                               R2) args: 8, res: 8, upd: 24;
     }
 },
 _c9kFs() //  [R1, R2]
         { info_tbl: [(c9kFs,
                       label: block_c9kFs_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kFs: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9kFA; else goto c9kFz;
       c9kFA: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 24;
       c9kFz: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 GHC.Event.Internal.$fShowEventLifetime_$cshow_entry() //  [R2]
         { info_tbl: [(c9kFC,
                       label: GHC.Event.Internal.$fShowEventLifetime_$cshow_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kFC: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9kFG; else goto c9kFF;
       c9kFG: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = GHC.Event.Internal.$fShowEventLifetime_$cshow_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9kFF: // global
           I64[Hp - 16] = sat_s9ktc_info;
           P64[Hp] = R2;
           R3 = Hp - 16;
           R2 = GHC.Event.Internal.$fShowEventLifetime2_bytes;
           call GHC.CString.unpackAppendCString#_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.42500055 UTC

[section ""data" . GHC.Event.Internal.$fShowEventLifetime1_closure" {
     GHC.Event.Internal.$fShowEventLifetime1_closure:
         const GHC.Event.Internal.$fShowEventLifetime1_info;
 },
 GHC.Event.Internal.$fShowEventLifetime1_entry() //  [R2, R3]
         { info_tbl: [(c9kG7,
                       label: GHC.Event.Internal.$fShowEventLifetime1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kG7: // global
           R4 = R3;
           R3 = R2;
           R2 = 0;
           call GHC.Event.Internal.$w$cshowsPrec_entry(R4,
                                                       R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.42979808 UTC

[section ""data" . GHC.Event.Internal.$fShowEventLifetime_$cshowList_closure" {
     GHC.Event.Internal.$fShowEventLifetime_$cshowList_closure:
         const GHC.Event.Internal.$fShowEventLifetime_$cshowList_info;
 },
 GHC.Event.Internal.$fShowEventLifetime_$cshowList_entry() //  [R2,
                                                                R3]
         { info_tbl: [(c9kGi,
                       label: GHC.Event.Internal.$fShowEventLifetime_$cshowList_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kGi: // global
           R4 = R3;
           R3 = R2;
           R2 = GHC.Event.Internal.$fShowEventLifetime1_closure+2;
           call GHC.Show.showList___entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.43334011 UTC

[section ""data" . GHC.Event.Internal.$fShowEventLifetime_closure" {
     GHC.Event.Internal.$fShowEventLifetime_closure:
         const GHC.Show.C:Show_con_info;
         const GHC.Event.Internal.$fShowEventLifetime_$cshowsPrec_closure+3;
         const GHC.Event.Internal.$fShowEventLifetime_$cshow_closure+1;
         const GHC.Event.Internal.$fShowEventLifetime_$cshowList_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.435754478 UTC

[section ""data" . GHC.Event.Internal.$fEqLifetime_$c==_closure" {
     GHC.Event.Internal.$fEqLifetime_$c==_closure:
         const GHC.Event.Internal.$fEqLifetime_$c==_info;
 },
 GHC.Event.Internal.$fEqLifetime_$c==_entry() //  [R2, R3]
         { info_tbl: [(c9kGB,
                       label: GHC.Event.Internal.$fEqLifetime_$c==_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kGB: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9kGC; else goto c9kGD;
       c9kGC: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fEqLifetime_$c==_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9kGD: // global
           I64[Sp - 16] = block_c9kGu_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9kHg; else goto c9kGv;
       u9kHg: // global
           call _c9kGu(R1) args: 0, res: 0, upd: 0;
       c9kGv: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9kGu() //  [R1]
         { info_tbl: [(c9kGu,
                       label: block_c9kGu_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kGu: // global
           _s9kti::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c9kGy; else goto c9kGz;
       c9kGy: // global
           I64[Sp + 8] = block_c9kGG_info;
           R1 = _s9kti::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u9kHe; else goto c9kGI;
       u9kHe: // global
           call _c9kGG(R1) args: 0, res: 0, upd: 0;
       c9kGI: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c9kGz: // global
           I64[Sp + 8] = block_c9kGV_info;
           R1 = _s9kti::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u9kHf; else goto c9kGX;
       u9kHf: // global
           call _c9kGV(R1) args: 0, res: 0, upd: 0;
       c9kGX: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9kGG() //  [R1]
         { info_tbl: [(c9kGG,
                       label: block_c9kGG_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kGG: // global
           if (R1 & 7 == 1) goto u9kHc; else goto u9kHd;
       u9kHc: // global
           Sp = Sp + 8;
           call _c9kH7() args: 0, res: 0, upd: 0;
       u9kHd: // global
           Sp = Sp + 8;
           call _c9kH3() args: 0, res: 0, upd: 0;
     }
 },
 _c9kGV() //  [R1]
         { info_tbl: [(c9kGV,
                       label: block_c9kGV_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kGV: // global
           if (R1 & 7 == 1) goto u9kHa; else goto u9kHb;
       u9kHa: // global
           Sp = Sp + 8;
           call _c9kH3() args: 0, res: 0, upd: 0;
       u9kHb: // global
           Sp = Sp + 8;
           call _c9kH7() args: 0, res: 0, upd: 0;
     }
 },
 _c9kH3() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kH3: // global
           R1 = GHC.Types.False_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9kH7() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kH7: // global
           R1 = GHC.Types.True_closure+2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.448126567 UTC

[section ""data" . GHC.Event.Internal.$fEqLifetime_$c/=_closure" {
     GHC.Event.Internal.$fEqLifetime_$c/=_closure:
         const GHC.Event.Internal.$fEqLifetime_$c/=_info;
 },
 GHC.Event.Internal.$fEqLifetime_$c/=_entry() //  [R2, R3]
         { info_tbl: [(c9kI4,
                       label: GHC.Event.Internal.$fEqLifetime_$c/=_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kI4: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9kI5; else goto c9kI6;
       c9kI5: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fEqLifetime_$c/=_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9kI6: // global
           I64[Sp - 16] = block_c9kHX_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9kIJ; else goto c9kHY;
       u9kIJ: // global
           call _c9kHX(R1) args: 0, res: 0, upd: 0;
       c9kHY: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9kHX() //  [R1]
         { info_tbl: [(c9kHX,
                       label: block_c9kHX_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kHX: // global
           _s9ktn::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c9kI1; else goto c9kI2;
       c9kI1: // global
           I64[Sp + 8] = block_c9kI9_info;
           R1 = _s9ktn::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u9kIH; else goto c9kIb;
       u9kIH: // global
           call _c9kI9(R1) args: 0, res: 0, upd: 0;
       c9kIb: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
       c9kI2: // global
           I64[Sp + 8] = block_c9kIo_info;
           R1 = _s9ktn::P64;
           Sp = Sp + 8;
           if (R1 & 7 != 0) goto u9kII; else goto c9kIq;
       u9kII: // global
           call _c9kIo(R1) args: 0, res: 0, upd: 0;
       c9kIq: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9kI9() //  [R1]
         { info_tbl: [(c9kI9,
                       label: block_c9kI9_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kI9: // global
           if (R1 & 7 == 1) goto u9kIF; else goto u9kIG;
       u9kIF: // global
           Sp = Sp + 8;
           call _c9kIA() args: 0, res: 0, upd: 0;
       u9kIG: // global
           Sp = Sp + 8;
           call _c9kIw() args: 0, res: 0, upd: 0;
     }
 },
 _c9kIo() //  [R1]
         { info_tbl: [(c9kIo,
                       label: block_c9kIo_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kIo: // global
           if (R1 & 7 == 1) goto u9kID; else goto u9kIE;
       u9kID: // global
           Sp = Sp + 8;
           call _c9kIw() args: 0, res: 0, upd: 0;
       u9kIE: // global
           Sp = Sp + 8;
           call _c9kIA() args: 0, res: 0, upd: 0;
     }
 },
 _c9kIw() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kIw: // global
           R1 = GHC.Types.True_closure+2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9kIA() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kIA: // global
           R1 = GHC.Types.False_closure+1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.46076227 UTC

[section ""data" . GHC.Event.Internal.$fEqLifetime_closure" {
     GHC.Event.Internal.$fEqLifetime_closure:
         const GHC.Classes.C:Eq_con_info;
         const GHC.Event.Internal.$fEqLifetime_$c==_closure+2;
         const GHC.Event.Internal.$fEqLifetime_$c/=_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.46257361 UTC

[section ""cstring" . GHC.Event.Internal.$fShowLifetime5_bytes" {
     GHC.Event.Internal.$fShowLifetime5_bytes:
         I8[] [79,110,101,83,104,111,116]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.464717913 UTC

[section ""data" . GHC.Event.Internal.$fShowLifetime4_closure" {
     GHC.Event.Internal.$fShowLifetime4_closure:
         const GHC.Event.Internal.$fShowLifetime4_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Internal.$fShowLifetime4_entry() //  [R1]
         { info_tbl: [(c9kJu,
                       label: GHC.Event.Internal.$fShowLifetime4_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kJu: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9kJv; else goto c9kJw;
       c9kJv: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9kJw: // global
           (_c9kJr::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9kJr::I64 == 0) goto c9kJt; else goto c9kJs;
       c9kJt: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9kJs: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9kJr::I64;
           R2 = GHC.Event.Internal.$fShowLifetime5_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.471044652 UTC

[section ""cstring" . GHC.Event.Internal.$fShowLifetime3_bytes" {
     GHC.Event.Internal.$fShowLifetime3_bytes:
         I8[] [77,117,108,116,105,83,104,111,116]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.473052221 UTC

[section ""data" . GHC.Event.Internal.$fShowLifetime2_closure" {
     GHC.Event.Internal.$fShowLifetime2_closure:
         const GHC.Event.Internal.$fShowLifetime2_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Internal.$fShowLifetime2_entry() //  [R1]
         { info_tbl: [(c9kJM,
                       label: GHC.Event.Internal.$fShowLifetime2_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kJM: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9kJN; else goto c9kJO;
       c9kJN: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9kJO: // global
           (_c9kJJ::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9kJJ::I64 == 0) goto c9kJL; else goto c9kJK;
       c9kJL: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9kJK: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9kJJ::I64;
           R2 = GHC.Event.Internal.$fShowLifetime3_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.477262776 UTC

[section ""data" . GHC.Event.Internal.$fShowLifetime_$cshowsPrec_closure" {
     GHC.Event.Internal.$fShowLifetime_$cshowsPrec_closure:
         const GHC.Event.Internal.$fShowLifetime_$cshowsPrec_info;
         const 0;
 },
 GHC.Event.Internal.$fShowLifetime_$cshowsPrec_entry() //  [R2, R3,
                                                            R4]
         { info_tbl: [(c9kK8,
                       label: GHC.Event.Internal.$fShowLifetime_$cshowsPrec_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kK8: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9kK9; else goto c9kKa;
       c9kK9: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fShowLifetime_$cshowsPrec_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9kKa: // global
           I64[Sp - 16] = block_c9kK1_info;
           R1 = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9kKh; else goto c9kK2;
       u9kKh: // global
           call _c9kK1(R1) args: 0, res: 0, upd: 0;
       c9kK2: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9kK1() //  [R1]
         { info_tbl: [(c9kK1,
                       label: block_c9kK1_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kK1: // global
           _s9ktt::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c9kK5; else goto c9kK6;
       c9kK5: // global
           R3 = _s9ktt::P64;
           R2 = GHC.Event.Internal.$fShowLifetime4_closure;
           Sp = Sp + 16;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
       c9kK6: // global
           R3 = _s9ktt::P64;
           R2 = GHC.Event.Internal.$fShowLifetime2_closure;
           Sp = Sp + 16;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.483427655 UTC

[section ""data" . GHC.Event.Internal.$fShowLifetime_$cshow_closure" {
     GHC.Event.Internal.$fShowLifetime_$cshow_closure:
         const GHC.Event.Internal.$fShowLifetime_$cshow_info;
         const 0;
 },
 GHC.Event.Internal.$fShowLifetime_$cshow_entry() //  [R2]
         { info_tbl: [(c9kKF,
                       label: GHC.Event.Internal.$fShowLifetime_$cshow_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kKF: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9kKG; else goto c9kKH;
       c9kKG: // global
           R2 = R2;
           R1 = GHC.Event.Internal.$fShowLifetime_$cshow_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9kKH: // global
           I64[Sp - 8] = block_c9kKy_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9kKO; else goto c9kKz;
       u9kKO: // global
           call _c9kKy(R1) args: 0, res: 0, upd: 0;
       c9kKz: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9kKy() //  [R1]
         { info_tbl: [(c9kKy,
                       label: block_c9kKy_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kKy: // global
           if (R1 & 7 == 1) goto c9kKC; else goto c9kKD;
       c9kKC: // global
           R1 = GHC.Event.Internal.$fShowLifetime4_closure;
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c9kKD: // global
           R1 = GHC.Event.Internal.$fShowLifetime2_closure;
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.489503536 UTC

[section ""data" . GHC.Event.Internal.$fShowLifetime1_closure" {
     GHC.Event.Internal.$fShowLifetime1_closure:
         const GHC.Event.Internal.$fShowLifetime1_info;
         const 0;
 },
 GHC.Event.Internal.$fShowLifetime1_entry() //  [R2, R3]
         { info_tbl: [(c9kLe,
                       label: GHC.Event.Internal.$fShowLifetime1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kLe: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9kLf; else goto c9kLg;
       c9kLf: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fShowLifetime1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9kLg: // global
           I64[Sp - 16] = block_c9kL7_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9kLn; else goto c9kL8;
       u9kLn: // global
           call _c9kL7(R1) args: 0, res: 0, upd: 0;
       c9kL8: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9kL7() //  [R1]
         { info_tbl: [(c9kL7,
                       label: block_c9kL7_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kL7: // global
           _s9kty::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c9kLb; else goto c9kLc;
       c9kLb: // global
           R3 = _s9kty::P64;
           R2 = GHC.Event.Internal.$fShowLifetime4_closure;
           Sp = Sp + 16;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
       c9kLc: // global
           R3 = _s9kty::P64;
           R2 = GHC.Event.Internal.$fShowLifetime2_closure;
           Sp = Sp + 16;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.496564436 UTC

[section ""data" . GHC.Event.Internal.$fShowLifetime_$cshowList_closure" {
     GHC.Event.Internal.$fShowLifetime_$cshowList_closure:
         const GHC.Event.Internal.$fShowLifetime_$cshowList_info;
         const 0;
 },
 GHC.Event.Internal.$fShowLifetime_$cshowList_entry() //  [R2, R3]
         { info_tbl: [(c9kLE,
                       label: GHC.Event.Internal.$fShowLifetime_$cshowList_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kLE: // global
           R4 = R3;
           R3 = R2;
           R2 = GHC.Event.Internal.$fShowLifetime1_closure+2;
           call GHC.Show.showList___entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.500295978 UTC

[section ""data" . GHC.Event.Internal.$fShowLifetime_closure" {
     GHC.Event.Internal.$fShowLifetime_closure:
         const GHC.Show.C:Show_con_info;
         const GHC.Event.Internal.$fShowLifetime_$cshowsPrec_closure+3;
         const GHC.Event.Internal.$fShowLifetime_$cshow_closure+1;
         const GHC.Event.Internal.$fShowLifetime_$cshowList_closure+2;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.502175329 UTC

[section ""data" . GHC.Event.Internal._beDelete_closure" {
     GHC.Event.Internal._beDelete_closure:
         const ()_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.504004627 UTC

[section ""data" . GHC.Event.Internal._beModifyFdOnce_closure" {
     GHC.Event.Internal._beModifyFdOnce_closure:
         const ()_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.505889064 UTC

[section ""data" . GHC.Event.Internal._beModifyFd_closure" {
     GHC.Event.Internal._beModifyFd_closure:
         const ()_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.50764107 UTC

[section ""data" . GHC.Event.Internal._bePoll_closure" {
     GHC.Event.Internal._bePoll_closure:
         const ()_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.509376415 UTC

[section ""data" . GHC.Event.Internal._beState_closure" {
     GHC.Event.Internal._beState_closure:
         const ()_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.511037463 UTC

[section ""data" . GHC.Event.Internal.evtNothing_closure" {
     GHC.Event.Internal.evtNothing_closure:
         const stg_IND_STATIC_info;
         const GHC.Event.Internal.$fMonoidEventLifetime1_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.512815181 UTC

[section ""data" . evtRead1_r9iWk_closure" {
     evtRead1_r9iWk_closure:
         const GHC.Types.I#_con_info;
         const 1;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.514571842 UTC

[section ""data" . GHC.Event.Internal.evtRead_closure" {
     GHC.Event.Internal.evtRead_closure:
         const stg_IND_STATIC_info;
         const evtRead1_r9iWk_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.516415068 UTC

[section ""data" . evtWrite1_r9iWl_closure" {
     evtWrite1_r9iWl_closure:
         const GHC.Types.I#_con_info;
         const 2;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.518210204 UTC

[section ""data" . GHC.Event.Internal.evtWrite_closure" {
     GHC.Event.Internal.evtWrite_closure:
         const stg_IND_STATIC_info;
         const evtWrite1_r9iWl_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.520097951 UTC

[section ""data" . evtClose1_r9iWm_closure" {
     evtClose1_r9iWm_closure:
         const GHC.Types.I#_con_info;
         const 4;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.522443149 UTC

[section ""data" . GHC.Event.Internal.evtClose_closure" {
     GHC.Event.Internal.evtClose_closure:
         const stg_IND_STATIC_info;
         const evtClose1_r9iWm_closure+1;
         const 0;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.524877832 UTC

[section ""data" . GHC.Event.Internal.elSupremum_closure" {
     GHC.Event.Internal.elSupremum_closure:
         const GHC.Event.Internal.elSupremum_info;
 },
 GHC.Event.Internal.elSupremum_entry() //  [R2, R3]
         { info_tbl: [(c9kM9,
                       label: GHC.Event.Internal.elSupremum_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kM9: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9kMa; else goto c9kMb;
       c9kMa: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.elSupremum_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9kMb: // global
           I64[Sp - 16] = block_c9kM2_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9kMi; else goto c9kM3;
       u9kMi: // global
           call _c9kM2(R1) args: 0, res: 0, upd: 0;
       c9kM3: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9kM2() //  [R1]
         { info_tbl: [(c9kM2,
                       label: block_c9kM2_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kM2: // global
           if (R1 & 7 == 1) goto c9kM6; else goto c9kM7;
       c9kM6: // global
           R1 = P64[Sp + 8] & (-8);
           Sp = Sp + 16;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c9kM7: // global
           R1 = GHC.Event.Internal.MultiShot_closure+2;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.531961554 UTC

[section ""data" . GHC.Event.Internal.$fSemigroupLifetime_go_closure" {
     GHC.Event.Internal.$fSemigroupLifetime_go_closure:
         const GHC.Event.Internal.$fSemigroupLifetime_go_info;
 },
 GHC.Event.Internal.$fSemigroupLifetime_go_entry() //  [R2, R3]
         { info_tbl: [(c9kMJ,
                       label: GHC.Event.Internal.$fSemigroupLifetime_go_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kMJ: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9kMK; else goto u9kN5;
       c9kMK: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fSemigroupLifetime_go_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       u9kN5: // global
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           call _c9kMz() args: 0, res: 0, upd: 0;
     }
 },
 _c9kMz() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kMz: // global
           I64[Sp - 8] = block_c9kMC_info;
           R1 = P64[Sp + 8];
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9kN7; else goto c9kMD;
       u9kN7: // global
           call _c9kMC(R1) args: 0, res: 0, upd: 0;
       c9kMD: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9kMC() //  [R1]
         { info_tbl: [(c9kMC,
                       label: block_c9kMC_info
                       rep:StackRep [False, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kMC: // global
           _s9ktF::P64 = P64[Sp + 8];
           if (R1 & 7 == 1) goto c9kMG; else goto c9kMH;
       c9kMG: // global
           R1 = _s9ktF::P64 & (-8);
           Sp = Sp + 24;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c9kMH: // global
           I64[Sp] = block_c9kMR_info;
           _s9ktI::P64 = P64[R1 + 6];
           _s9ktJ::P64 = P64[R1 + 14];
           R1 = _s9ktF::P64;
           P64[Sp + 8] = _s9ktJ::P64;
           P64[Sp + 16] = _s9ktI::P64;
           if (R1 & 7 != 0) goto u9kN8; else goto c9kMT;
       u9kN8: // global
           call _c9kMR(R1) args: 0, res: 0, upd: 0;
       c9kMT: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9kMR() //  [R1]
         { info_tbl: [(c9kMR,
                       label: block_c9kMR_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kMR: // global
           if (R1 & 7 == 1) goto c9kMZ; else goto c9kN3;
       c9kMZ: // global
           _s9ktG::P64 = P64[Sp + 8];
           P64[Sp + 8] = P64[Sp + 16];
           P64[Sp + 16] = _s9ktG::P64;
           Sp = Sp + 8;
           call _c9kMz() args: 0, res: 0, upd: 0;
       c9kN3: // global
           R1 = GHC.Event.Internal.MultiShot_closure+2;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.541504151 UTC

[section ""data" . GHC.Event.Internal.$fSemigroupLifetime_$csconcat_closure" {
     GHC.Event.Internal.$fSemigroupLifetime_$csconcat_closure:
         const GHC.Event.Internal.$fSemigroupLifetime_$csconcat_info;
 },
 GHC.Event.Internal.$fSemigroupLifetime_$csconcat_entry() //  [R2]
         { info_tbl: [(c9kNH,
                       label: GHC.Event.Internal.$fSemigroupLifetime_$csconcat_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kNH: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9kNI; else goto c9kNJ;
       c9kNI: // global
           R2 = R2;
           R1 = GHC.Event.Internal.$fSemigroupLifetime_$csconcat_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9kNJ: // global
           I64[Sp - 8] = block_c9kNE_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9kNN; else goto c9kNF;
       u9kNN: // global
           call _c9kNE(R1) args: 0, res: 0, upd: 0;
       c9kNF: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9kNE() //  [R1]
         { info_tbl: [(c9kNE,
                       label: block_c9kNE_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kNE: // global
           R3 = P64[R1 + 15];
           R2 = P64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Event.Internal.$fSemigroupLifetime_go_entry(R3,
                                                                R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.547576864 UTC

[section ""data" . GHC.Event.Internal.$fMonoidLifetime_go_closure" {
     GHC.Event.Internal.$fMonoidLifetime_go_closure:
         const GHC.Event.Internal.$fMonoidLifetime_go_info;
 },
 GHC.Event.Internal.$fMonoidLifetime_go_entry() //  [R2]
         { info_tbl: [(c9kO9,
                       label: GHC.Event.Internal.$fMonoidLifetime_go_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kO9: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9kOa; else goto u9kOv;
       c9kOa: // global
           R2 = R2;
           R1 = GHC.Event.Internal.$fMonoidLifetime_go_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       u9kOv: // global
           P64[Sp - 8] = R2;
           Sp = Sp - 8;
           call _c9kNZ() args: 0, res: 0, upd: 0;
     }
 },
 _c9kNZ() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kNZ: // global
           _s9ktP::P64 = P64[Sp];
           I64[Sp] = block_c9kO2_info;
           R1 = _s9ktP::P64;
           if (R1 & 7 != 0) goto u9kOx; else goto c9kO3;
       u9kOx: // global
           call _c9kO2(R1) args: 0, res: 0, upd: 0;
       c9kO3: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9kO2() //  [R1]
         { info_tbl: [(c9kO2,
                       label: block_c9kO2_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kO2: // global
           if (R1 & 7 == 1) goto c9kO6; else goto c9kO7;
       c9kO6: // global
           R1 = GHC.Event.Internal.OneShot_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9kO7: // global
           I64[Sp - 8] = block_c9kOh_info;
           _s9ktS::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp] = _s9ktS::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9kOy; else goto c9kOj;
       u9kOy: // global
           call _c9kOh(R1) args: 0, res: 0, upd: 0;
       c9kOj: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9kOh() //  [R1]
         { info_tbl: [(c9kOh,
                       label: block_c9kOh_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kOh: // global
           if (R1 & 7 == 1) goto c9kOp; else goto c9kOt;
       c9kOp: // global
           P64[Sp + 8] = P64[Sp + 8];
           Sp = Sp + 8;
           call _c9kNZ() args: 0, res: 0, upd: 0;
       c9kOt: // global
           R1 = GHC.Event.Internal.MultiShot_closure+2;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.556427186 UTC

[section ""data" . GHC.Event.Internal.$fSemigroupLifetime_closure" {
     GHC.Event.Internal.$fSemigroupLifetime_closure:
         const GHC.Base.C:Semigroup_con_info;
         const GHC.Event.Internal.elSupremum_closure+2;
         const GHC.Event.Internal.$fSemigroupLifetime_$csconcat_closure+1;
         const GHC.Event.Internal.$fSemigroupLifetime_$cstimes_closure+3;
         const 0;
 },
 section ""data" . GHC.Event.Internal.$fMonoidLifetime_closure" {
     GHC.Event.Internal.$fMonoidLifetime_closure:
         const GHC.Base.C:Monoid_con_info;
         const GHC.Event.Internal.$fSemigroupLifetime_closure+1;
         const GHC.Event.Internal.OneShot_closure+1;
         const GHC.Event.Internal.elSupremum_closure+2;
         const GHC.Event.Internal.$fMonoidLifetime_go_closure+1;
         const 0;
 },
 section ""data" . GHC.Event.Internal.$fSemigroupLifetime_$cstimes_closure" {
     GHC.Event.Internal.$fSemigroupLifetime_$cstimes_closure:
         const GHC.Event.Internal.$fSemigroupLifetime_$cstimes_info;
         const 0;
 },
 GHC.Event.Internal.$fSemigroupLifetime_$cstimes_entry() //  [R2,
                                                              R3, R4]
         { info_tbl: [(c9kP3,
                       label: GHC.Event.Internal.$fSemigroupLifetime_$cstimes_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kP3: // global
           R5 = R4;
           R4 = R3;
           R3 = GHC.Event.Internal.$fMonoidLifetime_closure+1;
           R2 = R2;
           call Data.Semigroup.Internal.stimesMonoid_entry(R5,
                                                           R4,
                                                           R3,
                                                           R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.561399313 UTC

[section ""data" . GHC.Event.Internal.backend_closure" {
     GHC.Event.Internal.backend_closure:
         const GHC.Event.Internal.backend_info;
 },
 GHC.Event.Internal.backend_entry() //  [R2, R3, R4, R5, R6]
         { info_tbl: [(c9kPg,
                       label: GHC.Event.Internal.backend_info
                       rep:HeapRep static { Fun {arity: 5 fun_type: ArgSpec 25} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kPg: // global
           _s9ktZ::P64 = R6;
           R6 = R5;
           R5 = R4;
           R4 = R3;
           R3 = R2;
           R2 = _s9ktZ::P64;
           call GHC.Event.Internal.$WBackend_entry(R6,
                                                   R5,
                                                   R4,
                                                   R3,
                                                   R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.564926623 UTC

[section ""data" . GHC.Event.Internal.poll_closure" {
     GHC.Event.Internal.poll_closure:
         const GHC.Event.Internal.poll_info;
 },
 GHC.Event.Internal.poll_entry() //  [R2]
         { info_tbl: [(c9kPu,
                       label: GHC.Event.Internal.poll_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kPu: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9kPv; else goto c9kPw;
       c9kPv: // global
           R2 = R2;
           R1 = GHC.Event.Internal.poll_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9kPw: // global
           I64[Sp - 8] = block_c9kPr_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9kPA; else goto c9kPs;
       u9kPA: // global
           call _c9kPr(R1) args: 0, res: 0, upd: 0;
       c9kPs: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9kPr() //  [R1]
         { info_tbl: [(c9kPr,
                       label: block_c9kPr_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kPr: // global
           R2 = P64[R1 + 7];
           R1 = P64[R1 + 15];
           Sp = Sp + 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.570449087 UTC

[section ""data" . GHC.Event.Internal.modifyFd_closure" {
     GHC.Event.Internal.modifyFd_closure:
         const GHC.Event.Internal.modifyFd_info;
 },
 GHC.Event.Internal.modifyFd_entry() //  [R2]
         { info_tbl: [(c9kPS,
                       label: GHC.Event.Internal.modifyFd_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kPS: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9kPT; else goto c9kPU;
       c9kPT: // global
           R2 = R2;
           R1 = GHC.Event.Internal.modifyFd_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9kPU: // global
           I64[Sp - 8] = block_c9kPP_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9kPY; else goto c9kPQ;
       u9kPY: // global
           call _c9kPP(R1) args: 0, res: 0, upd: 0;
       c9kPQ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9kPP() //  [R1]
         { info_tbl: [(c9kPP,
                       label: block_c9kPP_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kPP: // global
           R2 = P64[R1 + 7];
           R1 = P64[R1 + 23];
           Sp = Sp + 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.575809439 UTC

[section ""data" . GHC.Event.Internal.modifyFdOnce_closure" {
     GHC.Event.Internal.modifyFdOnce_closure:
         const GHC.Event.Internal.modifyFdOnce_info;
 },
 GHC.Event.Internal.modifyFdOnce_entry() //  [R2]
         { info_tbl: [(c9kQg,
                       label: GHC.Event.Internal.modifyFdOnce_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kQg: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9kQh; else goto c9kQi;
       c9kQh: // global
           R2 = R2;
           R1 = GHC.Event.Internal.modifyFdOnce_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9kQi: // global
           I64[Sp - 8] = block_c9kQd_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9kQm; else goto c9kQe;
       u9kQm: // global
           call _c9kQd(R1) args: 0, res: 0, upd: 0;
       c9kQe: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9kQd() //  [R1]
         { info_tbl: [(c9kQd,
                       label: block_c9kQd_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kQd: // global
           R2 = P64[R1 + 7];
           R1 = P64[R1 + 31];
           Sp = Sp + 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.581418935 UTC

[section ""data" . GHC.Event.Internal.delete_closure" {
     GHC.Event.Internal.delete_closure:
         const GHC.Event.Internal.delete_info;
 },
 GHC.Event.Internal.delete_entry() //  [R2]
         { info_tbl: [(c9kQE,
                       label: GHC.Event.Internal.delete_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kQE: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9kQF; else goto c9kQG;
       c9kQF: // global
           R2 = R2;
           R1 = GHC.Event.Internal.delete_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9kQG: // global
           I64[Sp - 8] = block_c9kQB_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9kQK; else goto c9kQC;
       u9kQK: // global
           call _c9kQB(R1) args: 0, res: 0, upd: 0;
       c9kQC: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9kQB() //  [R1]
         { info_tbl: [(c9kQB,
                       label: block_c9kQB_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kQB: // global
           R2 = P64[R1 + 7];
           R1 = P64[R1 + 39];
           Sp = Sp + 8;
           call stg_ap_p_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.587968805 UTC

[section ""data" . GHC.Event.Internal.throwErrnoIfMinus1NoRetry2_closure" {
     GHC.Event.Internal.throwErrnoIfMinus1NoRetry2_closure:
         const GHC.Event.Internal.throwErrnoIfMinus1NoRetry2_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Internal.throwErrnoIfMinus1NoRetry2_entry() //  [R1]
         { info_tbl: [(c9kR1,
                       label: GHC.Event.Internal.throwErrnoIfMinus1NoRetry2_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kR1: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9kR2; else goto c9kR3;
       c9kR2: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9kR3: // global
           (_c9kQY::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9kQY::I64 == 0) goto c9kR0; else goto c9kQZ;
       c9kR0: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9kQZ: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9kQY::I64;
           R3 = GHC.Types.[]_closure+1;
           R2 = GHC.Types.True_closure+2;
           Sp = Sp - 16;
           call GHC.Integer.Type.mkInteger_entry(R3,
                                                 R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.591986875 UTC

[section ""data" . sat_s9kus_closure" {
     sat_s9kus_closure:
         const GHC.Types.I#_con_info;
         const 1;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.593606018 UTC

[section ""data" . sat_s9kut_closure" {
     sat_s9kut_closure:
         const :_con_info;
         const sat_s9kus_closure+1;
         const GHC.Types.[]_closure+1;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.595516586 UTC

[section ""data" . GHC.Event.Internal.throwErrnoIfMinus1NoRetry3_closure" {
     GHC.Event.Internal.throwErrnoIfMinus1NoRetry3_closure:
         const GHC.Event.Internal.throwErrnoIfMinus1NoRetry3_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Internal.throwErrnoIfMinus1NoRetry3_entry() //  [R1]
         { info_tbl: [(c9kRm,
                       label: GHC.Event.Internal.throwErrnoIfMinus1NoRetry3_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kRm: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9kRn; else goto c9kRo;
       c9kRn: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9kRo: // global
           (_c9kRj::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9kRj::I64 == 0) goto c9kRl; else goto c9kRk;
       c9kRl: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9kRk: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9kRj::I64;
           R3 = sat_s9kut_closure+2;
           R2 = GHC.Types.True_closure+2;
           Sp = Sp - 16;
           call GHC.Integer.Type.mkInteger_entry(R3,
                                                 R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.601298742 UTC

[section ""data" . GHC.Event.Internal.throwErrnoIfMinus1NoRetry1_closure" {
     GHC.Event.Internal.throwErrnoIfMinus1NoRetry1_closure:
         const GHC.Event.Internal.throwErrnoIfMinus1NoRetry1_info;
         const 0;
 },
 sat_s9kuC_entry() //  [R1]
         { info_tbl: [(c9kRM,
                       label: sat_s9kuC_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kRM: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c9kRN; else goto c9kRO;
       c9kRN: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9kRO: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = GHC.Event.Internal.throwErrnoIfMinus1NoRetry3_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 sat_s9kuD_entry() //  [R1]
         { info_tbl: [(c9kRP,
                       label: sat_s9kuD_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kRP: // global
           _s9kuD::P64 = R1;
           if ((Sp + -32) < SpLim) (likely: False) goto c9kRQ; else goto c9kRR;
       c9kRR: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9kRT; else goto c9kRS;
       c9kRT: // global
           HpAlloc = 24;
           goto c9kRQ;
       c9kRQ: // global
           R1 = _s9kuD::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9kRS: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s9kuD::P64;
           _s9kuv::P64 = P64[_s9kuD::P64 + 16];
           I64[Hp - 16] = sat_s9kuC_info;
           P64[Hp] = _s9kuv::P64;
           R2 = _s9kuv::P64;
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = Hp - 16;
           Sp = Sp - 32;
           call GHC.Num.negate_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 sat_s9kuK_entry() //  [R1]
         { info_tbl: [(c9kSb,
                       label: sat_s9kuK_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kSb: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c9kSc; else goto c9kSd;
       c9kSc: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9kSd: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           I64[Sp - 32] = stg_ap_p_info;
           P64[Sp - 24] = GHC.Event.Internal.throwErrnoIfMinus1NoRetry2_closure;
           Sp = Sp - 32;
           call GHC.Num.fromInteger_entry(R2) args: 40, res: 0, upd: 24;
     }
 },
 GHC.Event.Internal.throwErrnoIfMinus1NoRetry1_entry() //  [R2, R3,
                                                            R4, R5]
         { info_tbl: [(c9kSi,
                       label: GHC.Event.Internal.throwErrnoIfMinus1NoRetry1_info
                       rep:HeapRep static { Fun {arity: 5 fun_type: ArgSpec 24} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kSi: // global
           if ((Sp + -56) < SpLim) (likely: False) goto c9kSj; else goto c9kSk;
       c9kSj: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.throwErrnoIfMinus1NoRetry1_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9kSk: // global
           I64[Sp - 32] = block_c9kRC_info;
           R1 = R5;
           P64[Sp - 24] = R2;
           P64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 32;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9kRC() //  [R1]
         { info_tbl: [(c9kRC,
                       label: block_c9kRC_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kRC: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9kSn; else goto c9kSm;
       c9kSn: // global
           HpAlloc = 24;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9kSm: // global
           I64[Hp - 16] = sat_s9kuD_info;
           P64[Hp] = P64[Sp + 16];
           I64[Sp] = block_c9kRU_info;
           R2 = P64[Sp + 8];
           I64[Sp - 24] = stg_ap_pp_info;
           P64[Sp - 16] = R1;
           P64[Sp - 8] = Hp - 16;
           P64[Sp + 8] = R1;
           Sp = Sp - 24;
           call GHC.Classes.==_entry(R2) args: 32, res: 8, upd: 8;
     }
 },
 _c9kRU() //  [R1]
         { info_tbl: [(c9kRU,
                       label: block_c9kRU_info
                       rep:StackRep [False, False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kRU: // global
           if (R1 & 7 == 1) goto c9kSf; else goto c9kSg;
       c9kSf: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9kSg: // global
           _s9kuw::P64 = P64[Sp + 24];
           (_s9kuI::I64) = call "ccall" arg hints:  []  result hints:  [‘signed’] __hscore_get_errno();
           _s9kuJ::I64 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(_s9kuI::I64));
           if (_s9kuJ::I64 != 4) goto c9kSt; else goto u9kSB;
       c9kSt: // global
           R2 = _s9kuw::P64;
           Sp = Sp + 32;
           call Foreign.C.Error.throwErrno1_entry(R2) args: 8, res: 0, upd: 8;
       u9kSB: // global
           I64[Sp + 24] = _s9kuJ::I64;
           Sp = Sp + 16;
           call _c9kS5() args: 0, res: 0, upd: 0;
     }
 },
 _c9kS5() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kS5: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9kSA; else goto c9kSz;
       c9kSA: // global
           HpAlloc = 24;
           I64[Sp - 8] = block_c9kS4_info;
           R1 = I64[Sp + 8];
           Sp = Sp - 8;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9kSz: // global
           I64[Hp - 16] = sat_s9kuK_info;
           P64[Hp] = P64[Sp];
           R1 = Hp - 16;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 _c9kS4() //  [R1]
         { info_tbl: [(c9kS4,
                       label: block_c9kS4_info
                       rep:StackRep [False, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kS4: // global
           I64[Sp + 16] = R1;
           Sp = Sp + 8;
           call _c9kS5() args: 0, res: 0, upd: 0;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.620461681 UTC

[section ""data" . GHC.Event.Internal.throwErrnoIfMinus1NoRetry_closure" {
     GHC.Event.Internal.throwErrnoIfMinus1NoRetry_closure:
         const GHC.Event.Internal.throwErrnoIfMinus1NoRetry_info;
         const 0;
 },
 GHC.Event.Internal.throwErrnoIfMinus1NoRetry_entry() //  [R2, R3,
                                                           R4, R5]
         { info_tbl: [(c9kTy,
                       label: GHC.Event.Internal.throwErrnoIfMinus1NoRetry_info
                       rep:HeapRep static { Fun {arity: 5 fun_type: ArgSpec 24} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kTy: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           call GHC.Event.Internal.throwErrnoIfMinus1NoRetry1_entry(R5,
                                                                    R4,
                                                                    R3,
                                                                    R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.624171072 UTC

[section ""cstring" . GHC.Event.Internal.$trModule4_bytes" {
     GHC.Event.Internal.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.625999729 UTC

[section ""data" . GHC.Event.Internal.$trModule3_closure" {
     GHC.Event.Internal.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.627902033 UTC

[section ""cstring" . GHC.Event.Internal.$trModule2_bytes" {
     GHC.Event.Internal.$trModule2_bytes:
         I8[] [71,72,67,46,69,118,101,110,116,46,73,110,116,101,114,110,97,108]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.62981255 UTC

[section ""data" . GHC.Event.Internal.$trModule1_closure" {
     GHC.Event.Internal.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.631768232 UTC

[section ""data" . GHC.Event.Internal.$trModule_closure" {
     GHC.Event.Internal.$trModule_closure:
         const GHC.Types.Module_con_info;
         const GHC.Event.Internal.$trModule3_closure+1;
         const GHC.Event.Internal.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.633610094 UTC

[section ""data" . $krep_r9iWn_closure" {
     $krep_r9iWn_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Word.$tcWord64_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.635362189 UTC

[section ""data" . $krep1_r9iWo_closure" {
     $krep1_r9iWo_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcBool_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.637084702 UTC

[section ""data" . $krep2_r9iWp_closure" {
     $krep2_r9iWp_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcInt_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.638902342 UTC

[section ""data" . $krep3_r9iWq_closure" {
     $krep3_r9iWq_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Tuple.$tc()_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.640802664 UTC

[section ""data" . $krep4_r9iWr_closure" {
     $krep4_r9iWr_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const System.Posix.Types.$tcFd_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.642711702 UTC

[section ""data" . $krep5_r9iWs_closure" {
     $krep5_r9iWs_closure:
         const :_con_info;
         const $krep1_r9iWo_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.645055353 UTC

[section ""data" . $krep6_r9iWt_closure" {
     $krep6_r9iWt_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcIO_closure;
         const $krep5_r9iWs_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.647303876 UTC

[section ""data" . $krep7_r9iWu_closure" {
     $krep7_r9iWu_closure:
         const :_con_info;
         const $krep2_r9iWp_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.649152619 UTC

[section ""data" . $krep8_r9iWv_closure" {
     $krep8_r9iWv_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcIO_closure;
         const $krep7_r9iWu_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.651076756 UTC

[section ""data" . $krep9_r9iWw_closure" {
     $krep9_r9iWw_closure:
         const :_con_info;
         const $krep3_r9iWq_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.652938627 UTC

[section ""data" . $krep10_r9iWx_closure" {
     $krep10_r9iWx_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcIO_closure;
         const $krep9_r9iWw_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.654872483 UTC

[section ""data" . $krep11_r9iWy_closure" {
     $krep11_r9iWy_closure:
         const GHC.Types.KindRepVar_con_info;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.656793486 UTC

[section ""data" . $krep12_r9iWz_closure" {
     $krep12_r9iWz_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep11_r9iWy_closure+2;
         const $krep10_r9iWx_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.658554288 UTC

[section ""cstring" . GHC.Event.Internal.$tcEvent2_bytes" {
     GHC.Event.Internal.$tcEvent2_bytes:
         I8[] [69,118,101,110,116]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.660205819 UTC

[section ""data" . GHC.Event.Internal.$tcEvent1_closure" {
     GHC.Event.Internal.$tcEvent1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tcEvent2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.661993009 UTC

[section ""data" . GHC.Event.Internal.$tcEvent_closure" {
     GHC.Event.Internal.$tcEvent_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tcEvent1_closure+1;
         const GHC.Types.krep$*_closure;
         const 6453162546660085965;
         const 4509047211634842293;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.663910049 UTC

[section ""data" . $krep13_r9iWA_closure" {
     $krep13_r9iWA_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Event.Internal.$tcEvent_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.665715932 UTC

[section ""data" . $krep14_r9iWB_closure" {
     $krep14_r9iWB_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep13_r9iWA_closure+1;
         const $krep10_r9iWx_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.667393907 UTC

[section ""data" . $krep15_r9iWC_closure" {
     $krep15_r9iWC_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep4_r9iWr_closure+1;
         const $krep14_r9iWB_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.669191001 UTC

[section ""data" . $krep16_r9iWD_closure" {
     $krep16_r9iWD_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep15_r9iWC_closure+4;
         const $krep8_r9iWv_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.671585798 UTC

[section ""data" . $krep17_r9iWE_closure" {
     $krep17_r9iWE_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep13_r9iWA_closure+1;
         const $krep6_r9iWt_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.673461429 UTC

[section ""data" . $krep18_r9iWF_closure" {
     $krep18_r9iWF_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep13_r9iWA_closure+1;
         const $krep17_r9iWE_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.675321176 UTC

[section ""data" . $krep19_r9iWG_closure" {
     $krep19_r9iWG_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep4_r9iWr_closure+1;
         const $krep18_r9iWF_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.677190817 UTC

[section ""data" . $krep20_r9iWH_closure" {
     $krep20_r9iWH_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep11_r9iWy_closure+2;
         const $krep19_r9iWG_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.679085174 UTC

[section ""data" . $krep21_r9iWI_closure" {
     $krep21_r9iWI_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep4_r9iWr_closure+1;
         const $krep17_r9iWE_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.680894107 UTC

[section ""data" . $krep22_r9iWJ_closure" {
     $krep22_r9iWJ_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep11_r9iWy_closure+2;
         const $krep21_r9iWI_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.682850941 UTC

[section ""data" . GHC.Event.Internal.$tc'Event1_closure" {
     GHC.Event.Internal.$tc'Event1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep2_r9iWp_closure+1;
         const $krep13_r9iWA_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.68464322 UTC

[section ""cstring" . GHC.Event.Internal.$tc'Event3_bytes" {
     GHC.Event.Internal.$tc'Event3_bytes:
         I8[] [39,69,118,101,110,116]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.686469822 UTC

[section ""data" . GHC.Event.Internal.$tc'Event2_closure" {
     GHC.Event.Internal.$tc'Event2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tc'Event3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.688330991 UTC

[section ""data" . GHC.Event.Internal.$tc'Event_closure" {
     GHC.Event.Internal.$tc'Event_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tc'Event2_closure+1;
         const GHC.Event.Internal.$tc'Event1_closure+4;
         const 3843507504600839845;
         const 12172955723408562945;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.69034635 UTC

[section ""cstring" . GHC.Event.Internal.$tcLifetime2_bytes" {
     GHC.Event.Internal.$tcLifetime2_bytes:
         I8[] [76,105,102,101,116,105,109,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.692003078 UTC

[section ""data" . GHC.Event.Internal.$tcLifetime1_closure" {
     GHC.Event.Internal.$tcLifetime1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tcLifetime2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.693692458 UTC

[section ""data" . GHC.Event.Internal.$tcLifetime_closure" {
     GHC.Event.Internal.$tcLifetime_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tcLifetime1_closure+1;
         const GHC.Types.krep$*_closure;
         const 16879554565198773712;
         const 8198822807138459060;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.695576046 UTC

[section ""data" . GHC.Event.Internal.$tc'MultiShot1_closure" {
     GHC.Event.Internal.$tc'MultiShot1_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Event.Internal.$tcLifetime_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.697894098 UTC

[section ""cstring" . GHC.Event.Internal.$tc'OneShot2_bytes" {
     GHC.Event.Internal.$tc'OneShot2_bytes:
         I8[] [39,79,110,101,83,104,111,116]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.699602293 UTC

[section ""data" . GHC.Event.Internal.$tc'OneShot1_closure" {
     GHC.Event.Internal.$tc'OneShot1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tc'OneShot2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.701409721 UTC

[section ""data" . GHC.Event.Internal.$tc'OneShot_closure" {
     GHC.Event.Internal.$tc'OneShot_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tc'OneShot1_closure+1;
         const GHC.Event.Internal.$tc'MultiShot1_closure+1;
         const 4428239562170783460;
         const 11248279118174204528;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.70342463 UTC

[section ""cstring" . GHC.Event.Internal.$tc'MultiShot3_bytes" {
     GHC.Event.Internal.$tc'MultiShot3_bytes:
         I8[] [39,77,117,108,116,105,83,104,111,116]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.705273965 UTC

[section ""data" . GHC.Event.Internal.$tc'MultiShot2_closure" {
     GHC.Event.Internal.$tc'MultiShot2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tc'MultiShot3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.707110974 UTC

[section ""data" . GHC.Event.Internal.$tc'MultiShot_closure" {
     GHC.Event.Internal.$tc'MultiShot_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tc'MultiShot2_closure+1;
         const GHC.Event.Internal.$tc'MultiShot1_closure+1;
         const 963080519453727549;
         const 5499435804578671723;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.709070801 UTC

[section ""cstring" . GHC.Event.Internal.$tcEventLifetime2_bytes" {
     GHC.Event.Internal.$tcEventLifetime2_bytes:
         I8[] [69,118,101,110,116,76,105,102,101,116,105,109,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.710826928 UTC

[section ""data" . GHC.Event.Internal.$tcEventLifetime1_closure" {
     GHC.Event.Internal.$tcEventLifetime1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tcEventLifetime2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.712717857 UTC

[section ""data" . GHC.Event.Internal.$tcEventLifetime_closure" {
     GHC.Event.Internal.$tcEventLifetime_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tcEventLifetime1_closure+1;
         const GHC.Types.krep$*_closure;
         const 11472987326402547198;
         const 14676184191233842558;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.71488534 UTC

[section ""data" . $krep23_r9iWK_closure" {
     $krep23_r9iWK_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Event.Internal.$tcEventLifetime_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.716849373 UTC

[section ""data" . GHC.Event.Internal.$tc'EL1_closure" {
     GHC.Event.Internal.$tc'EL1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep2_r9iWp_closure+1;
         const $krep23_r9iWK_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.718762647 UTC

[section ""cstring" . GHC.Event.Internal.$tc'EL3_bytes" {
     GHC.Event.Internal.$tc'EL3_bytes:
         I8[] [39,69,76]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.720642195 UTC

[section ""data" . GHC.Event.Internal.$tc'EL2_closure" {
     GHC.Event.Internal.$tc'EL2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tc'EL3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.722505181 UTC

[section ""data" . GHC.Event.Internal.$tc'EL_closure" {
     GHC.Event.Internal.$tc'EL_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tc'EL2_closure+1;
         const GHC.Event.Internal.$tc'EL1_closure+4;
         const 13328424765260461560;
         const 17004947518967325218;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.72457152 UTC

[section ""cstring" . GHC.Event.Internal.$tcTimeout2_bytes" {
     GHC.Event.Internal.$tcTimeout2_bytes:
         I8[] [84,105,109,101,111,117,116]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.727452611 UTC

[section ""data" . GHC.Event.Internal.$tcTimeout1_closure" {
     GHC.Event.Internal.$tcTimeout1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tcTimeout2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.729275273 UTC

[section ""data" . GHC.Event.Internal.$tcTimeout_closure" {
     GHC.Event.Internal.$tcTimeout_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tcTimeout1_closure+1;
         const GHC.Types.krep$*_closure;
         const 3071157695468345159;
         const 2371669836431867052;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.731214788 UTC

[section ""data" . GHC.Event.Internal.$tc'Forever1_closure" {
     GHC.Event.Internal.$tc'Forever1_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Event.Internal.$tcTimeout_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.733066773 UTC

[section ""cstring" . GHC.Event.Internal.$tc'Forever3_bytes" {
     GHC.Event.Internal.$tc'Forever3_bytes:
         I8[] [39,70,111,114,101,118,101,114]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.734892111 UTC

[section ""data" . GHC.Event.Internal.$tc'Forever2_closure" {
     GHC.Event.Internal.$tc'Forever2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tc'Forever3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.736713394 UTC

[section ""data" . GHC.Event.Internal.$tc'Forever_closure" {
     GHC.Event.Internal.$tc'Forever_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tc'Forever2_closure+1;
         const GHC.Event.Internal.$tc'Forever1_closure+1;
         const 15890326801882711521;
         const 6940845280791152844;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.739119257 UTC

[section ""data" . GHC.Event.Internal.$tc'Timeout1_closure" {
     GHC.Event.Internal.$tc'Timeout1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep_r9iWn_closure+1;
         const GHC.Event.Internal.$tc'Forever1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.740972542 UTC

[section ""cstring" . GHC.Event.Internal.$tc'Timeout3_bytes" {
     GHC.Event.Internal.$tc'Timeout3_bytes:
         I8[] [39,84,105,109,101,111,117,116]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.742930172 UTC

[section ""data" . GHC.Event.Internal.$tc'Timeout2_closure" {
     GHC.Event.Internal.$tc'Timeout2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tc'Timeout3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.744804727 UTC

[section ""data" . GHC.Event.Internal.$tc'Timeout_closure" {
     GHC.Event.Internal.$tc'Timeout_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tc'Timeout2_closure+1;
         const GHC.Event.Internal.$tc'Timeout1_closure+4;
         const 11507111740173521793;
         const 14582130137848061687;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.746879822 UTC

[section ""data" . $krep24_r9iWL_closure" {
     $krep24_r9iWL_closure:
         const :_con_info;
         const GHC.Event.Internal.$tc'Forever1_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.748645513 UTC

[section ""data" . $krep25_r9iWM_closure" {
     $krep25_r9iWM_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Base.$tcMaybe_closure;
         const $krep24_r9iWL_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.750459719 UTC

[section ""data" . $krep26_r9iWN_closure" {
     $krep26_r9iWN_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep25_r9iWM_closure+1;
         const $krep16_r9iWD_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.75226984 UTC

[section ""data" . $krep27_r9iWO_closure" {
     $krep27_r9iWO_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep11_r9iWy_closure+2;
         const $krep26_r9iWN_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.754494395 UTC

[section ""cstring" . GHC.Event.Internal.$tcBackend2_bytes" {
     GHC.Event.Internal.$tcBackend2_bytes:
         I8[] [66,97,99,107,101,110,100]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.756180056 UTC

[section ""data" . GHC.Event.Internal.$tcBackend1_closure" {
     GHC.Event.Internal.$tcBackend1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tcBackend2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.757857673 UTC

[section ""data" . GHC.Event.Internal.$tcBackend_closure" {
     GHC.Event.Internal.$tcBackend_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tcBackend1_closure+1;
         const GHC.Types.krep$*_closure;
         const 5241936179624485302;
         const 3407160178235461245;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.759694249 UTC

[section ""data" . $krep28_r9iWP_closure" {
     $krep28_r9iWP_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Event.Internal.$tcBackend_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.761616649 UTC

[section ""data" . $krep29_r9iWQ_closure" {
     $krep29_r9iWQ_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep12_r9iWz_closure+4;
         const $krep28_r9iWP_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.763338204 UTC

[section ""data" . $krep30_r9iWR_closure" {
     $krep30_r9iWR_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep22_r9iWJ_closure+4;
         const $krep29_r9iWQ_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.765031093 UTC

[section ""data" . $krep31_r9iWS_closure" {
     $krep31_r9iWS_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep20_r9iWH_closure+4;
         const $krep30_r9iWR_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.766816919 UTC

[section ""data" . $krep32_r9iWT_closure" {
     $krep32_r9iWT_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep27_r9iWO_closure+4;
         const $krep31_r9iWS_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.768646807 UTC

[section ""data" . GHC.Event.Internal.$tc'Backend1_closure" {
     GHC.Event.Internal.$tc'Backend1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep11_r9iWy_closure+2;
         const $krep32_r9iWT_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.771063136 UTC

[section ""cstring" . GHC.Event.Internal.$tc'Backend3_bytes" {
     GHC.Event.Internal.$tc'Backend3_bytes:
         I8[] [39,66,97,99,107,101,110,100]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.774068333 UTC

[section ""data" . GHC.Event.Internal.$tc'Backend2_closure" {
     GHC.Event.Internal.$tc'Backend2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Event.Internal.$tc'Backend3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.776395326 UTC

[section ""data" . GHC.Event.Internal.$tc'Backend_closure" {
     GHC.Event.Internal.$tc'Backend_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Event.Internal.$trModule_closure+1;
         const GHC.Event.Internal.$tc'Backend2_closure+1;
         const GHC.Event.Internal.$tc'Backend1_closure+4;
         const 2097061961478251755;
         const 1358985482759746540;
         const 1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.779026794 UTC

[section ""data" . GHC.Event.Internal.$fEqEvent_closure" {
     GHC.Event.Internal.$fEqEvent_closure:
         const GHC.Classes.C:Eq_con_info;
         const GHC.Classes.eqInt_closure+2;
         const GHC.Classes.neInt_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.781606365 UTC

[section ""data" . GHC.Event.Internal.$fEqEventLifetime_closure" {
     GHC.Event.Internal.$fEqEventLifetime_closure:
         const GHC.Classes.C:Eq_con_info;
         const GHC.Classes.eqInt_closure+2;
         const GHC.Classes.neInt_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.7852009 UTC

[section ""data" . elEvent1_r9iWU_closure" {
     elEvent1_r9iWU_closure:
         const elEvent1_r9iWU_info;
 },
 elEvent1_r9iWU_entry() //  [R2]
         { info_tbl: [(c9kV6,
                       label: elEvent1_r9iWU_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kV6: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9kVd; else goto c9kVe;
       c9kVd: // global
           R2 = R2;
           R1 = elEvent1_r9iWU_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9kVe: // global
           I64[Sp - 8] = block_c9kV3_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9kVi; else goto c9kV4;
       u9kVi: // global
           call _c9kV3(R1) args: 0, res: 0, upd: 0;
       c9kV4: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9kV3() //  [R1]
         { info_tbl: [(c9kV3,
                       label: block_c9kV3_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kV3: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9kVh; else goto c9kVg;
       c9kVh: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9kVg: // global
           _s9kuO::I64 = I64[R1 + 7] & 7;
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = _s9kuO::I64;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.792884594 UTC

[section ""data" . GHC.Event.Internal.elEvent_closure" {
     GHC.Event.Internal.elEvent_closure:
         const GHC.Event.Internal.elEvent_info;
 },
 GHC.Event.Internal.elEvent_entry() //  [R2]
         { info_tbl: [(c9kVA,
                       label: GHC.Event.Internal.elEvent_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kVA: // global
           R2 = R2;
           call elEvent1_r9iWU_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.797774584 UTC

[section ""data" . GHC.Event.Internal.$wgo2_closure" {
     GHC.Event.Internal.$wgo2_closure:
         const GHC.Event.Internal.$wgo2_info;
 },
 GHC.Event.Internal.$wgo2_entry() //  [R2, R3]
         { info_tbl: [(c9kVS,
                       label: GHC.Event.Internal.$wgo2_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 13} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kVS: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9kVT; else goto c9kVU;
       c9kVT: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$wgo2_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9kVU: // global
           I64[Sp - 16] = block_c9kVL_info;
           R1 = R3;
           I64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9kWe; else goto c9kVM;
       u9kWe: // global
           call _c9kVL(R1) args: 0, res: 0, upd: 0;
       c9kVM: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9kVL() //  [R1]
         { info_tbl: [(c9kVL,
                       label: block_c9kVL_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kVL: // global
           if (R1 & 7 == 1) goto c9kVP; else goto c9kVQ;
       c9kVP: // global
           R1 = I64[Sp + 8];
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9kVQ: // global
           I64[Sp - 8] = block_c9kW0_info;
           _s9kuT::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp] = _s9kuT::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9kWd; else goto c9kW1;
       u9kWd: // global
           call _c9kW0(R1) args: 0, res: 0, upd: 0;
       c9kW1: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9kW0() //  [R1]
         { info_tbl: [(c9kW0,
                       label: block_c9kW0_info
                       rep:StackRep [False, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kW0: // global
           _s9kuT::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c9kW5_info;
           R3 = _s9kuT::P64;
           R2 = I64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Event.Internal.$wgo2_entry(R3,
                                               R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9kW5() //  [R1]
         { info_tbl: [(c9kW5,
                       label: block_c9kW5_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kW5: // global
           R1 = I64[Sp + 8] | R1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.81014454 UTC

[section ""data" . GHC.Event.Internal.$fSemigroupEventLifetime_go_closure" {
     GHC.Event.Internal.$fSemigroupEventLifetime_go_closure:
         const GHC.Event.Internal.$fSemigroupEventLifetime_go_info;
 },
 GHC.Event.Internal.$fSemigroupEventLifetime_go_entry() //  [R2, R3]
         { info_tbl: [(c9kWK,
                       label: GHC.Event.Internal.$fSemigroupEventLifetime_go_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kWK: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9kWS; else goto c9kWT;
       c9kWS: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fSemigroupEventLifetime_go_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9kWT: // global
           I64[Sp - 16] = block_c9kWH_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9kWY; else goto c9kWI;
       u9kWY: // global
           call _c9kWH(R1) args: 0, res: 0, upd: 0;
       c9kWI: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9kWH() //  [R1]
         { info_tbl: [(c9kWH,
                       label: block_c9kWH_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kWH: // global
           _s9kuY::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c9kWN_info;
           R3 = _s9kuY::P64;
           R2 = I64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Event.Internal.$wgo2_entry(R3,
                                               R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9kWN() //  [R1]
         { info_tbl: [(c9kWN,
                       label: block_c9kWN_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kWN: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9kWX; else goto c9kWW;
       c9kWX: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9kWW: // global
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = R1;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.819793399 UTC

[section ""data" . GHC.Event.Internal.$fSemigroupEventLifetime_$csconcat_closure" {
     GHC.Event.Internal.$fSemigroupEventLifetime_$csconcat_closure:
         const GHC.Event.Internal.$fSemigroupEventLifetime_$csconcat_info;
 },
 GHC.Event.Internal.$fSemigroupEventLifetime_$csconcat_entry() //  [R2]
         { info_tbl: [(c9kXm,
                       label: GHC.Event.Internal.$fSemigroupEventLifetime_$csconcat_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kXm: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9kXn; else goto c9kXo;
       c9kXn: // global
           R2 = R2;
           R1 = GHC.Event.Internal.$fSemigroupEventLifetime_$csconcat_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9kXo: // global
           I64[Sp - 8] = block_c9kXj_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9kXs; else goto c9kXk;
       u9kXs: // global
           call _c9kXj(R1) args: 0, res: 0, upd: 0;
       c9kXk: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9kXj() //  [R1]
         { info_tbl: [(c9kXj,
                       label: block_c9kXj_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kXj: // global
           R3 = P64[R1 + 15];
           R2 = P64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Event.Internal.$fSemigroupEventLifetime_go_entry(R3,
                                                                     R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.826410859 UTC

[section ""data" . GHC.Event.Internal.$fSemigroupEventLifetime_closure" {
     GHC.Event.Internal.$fSemigroupEventLifetime_closure:
         const GHC.Base.C:Semigroup_con_info;
         const Data.Bits.$fBitsInt_$c.|._closure+2;
         const GHC.Event.Internal.$fSemigroupEventLifetime_$csconcat_closure+1;
         const GHC.Event.Internal.$fSemigroupEventLifetime_$cstimes_closure+1;
         const 0;
 },
 section ""data" . GHC.Event.Internal.$fSemigroupEventLifetime_$cstimes_closure" {
     GHC.Event.Internal.$fSemigroupEventLifetime_$cstimes_closure:
         const GHC.Event.Internal.$fSemigroupEventLifetime_$cstimes_info;
         const 0;
 },
 GHC.Event.Internal.$fSemigroupEventLifetime_$cstimes_entry() //  [R2]
         { info_tbl: [(c9kXH,
                       label: GHC.Event.Internal.$fSemigroupEventLifetime_$cstimes_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kXH: // global
           R3 = GHC.Event.Internal.$fSemigroupEventLifetime_closure+1;
           R2 = R2;
           R1 = Data.Semigroup.Internal.stimesDefault_closure+4;
           call stg_ap_pp_fast(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.83102246 UTC

[section ""data" . GHC.Event.Internal.$wgo1_closure" {
     GHC.Event.Internal.$wgo1_closure:
         const GHC.Event.Internal.$wgo1_info;
 },
 GHC.Event.Internal.$wgo1_entry() //  [R2]
         { info_tbl: [(c9kY1,
                       label: GHC.Event.Internal.$wgo1_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kY1: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9kY2; else goto c9kY3;
       c9kY2: // global
           R2 = R2;
           R1 = GHC.Event.Internal.$wgo1_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9kY3: // global
           I64[Sp - 8] = block_c9kXU_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9kYn; else goto c9kXV;
       u9kYn: // global
           call _c9kXU(R1) args: 0, res: 0, upd: 0;
       c9kXV: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9kXU() //  [R1]
         { info_tbl: [(c9kXU,
                       label: block_c9kXU_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kXU: // global
           if (R1 & 7 == 1) goto c9kXY; else goto c9kXZ;
       c9kXY: // global
           R1 = 0;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9kXZ: // global
           I64[Sp - 8] = block_c9kY9_info;
           _s9kva::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp] = _s9kva::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9kYm; else goto c9kYa;
       u9kYm: // global
           call _c9kY9(R1) args: 0, res: 0, upd: 0;
       c9kYa: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9kY9() //  [R1]
         { info_tbl: [(c9kY9,
                       label: block_c9kY9_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kY9: // global
           I64[Sp] = block_c9kYe_info;
           R2 = P64[Sp + 8];
           I64[Sp + 8] = I64[R1 + 7];
           call GHC.Event.Internal.$wgo1_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9kYe() //  [R1]
         { info_tbl: [(c9kYe,
                       label: block_c9kYe_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kYe: // global
           R1 = I64[Sp + 8] | R1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.839876244 UTC

[section ""data" . GHC.Event.Internal.$fMonoidEventLifetime_go_closure" {
     GHC.Event.Internal.$fMonoidEventLifetime_go_closure:
         const GHC.Event.Internal.$fMonoidEventLifetime_go_info;
 },
 GHC.Event.Internal.$fMonoidEventLifetime_go_entry() //  [R2]
         { info_tbl: [(c9kYT,
                       label: GHC.Event.Internal.$fMonoidEventLifetime_go_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kYT: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9kYX; else goto c9kYY;
       c9kYX: // global
           R2 = R2;
           R1 = GHC.Event.Internal.$fMonoidEventLifetime_go_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9kYY: // global
           I64[Sp - 8] = block_c9kYR_info;
           R2 = R2;
           Sp = Sp - 8;
           call GHC.Event.Internal.$wgo1_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9kYR() //  [R1]
         { info_tbl: [(c9kYR,
                       label: block_c9kYR_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kYR: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9kZ1; else goto c9kZ0;
       c9kZ1: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9kZ0: // global
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = R1;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.845359093 UTC

[section ""data" . GHC.Event.Internal.$fMonoidEventLifetime_closure" {
     GHC.Event.Internal.$fMonoidEventLifetime_closure:
         const GHC.Base.C:Monoid_con_info;
         const GHC.Event.Internal.$fSemigroupEventLifetime_closure+1;
         const GHC.Event.Internal.$fMonoidEventLifetime1_closure+1;
         const Data.Bits.$fBitsInt_$c.|._closure+2;
         const GHC.Event.Internal.$fMonoidEventLifetime_go_closure+1;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.847460711 UTC

[section ""data" . GHC.Event.Internal.elLifetime_closure" {
     GHC.Event.Internal.elLifetime_closure:
         const GHC.Event.Internal.elLifetime_info;
 },
 GHC.Event.Internal.elLifetime_entry() //  [R2]
         { info_tbl: [(c9kZl,
                       label: GHC.Event.Internal.elLifetime_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kZl: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9kZm; else goto c9kZn;
       c9kZm: // global
           R2 = R2;
           R1 = GHC.Event.Internal.elLifetime_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9kZn: // global
           I64[Sp - 8] = block_c9kZi_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9kZG; else goto c9kZj;
       u9kZG: // global
           call _c9kZi(R1) args: 0, res: 0, upd: 0;
       c9kZj: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9kZi() //  [R1]
         { info_tbl: [(c9kZi,
                       label: block_c9kZi_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kZi: // global
           if (I64[R1 + 7] & 8 == 0) goto c9kZC; else goto c9kZw;
       c9kZC: // global
           R1 = GHC.Event.Internal.OneShot_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9kZw: // global
           R1 = GHC.Event.Internal.MultiShot_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.854261884 UTC

[section ""data" . eventLifetime1_r9iWV_closure" {
     eventLifetime1_r9iWV_closure:
         const eventLifetime1_r9iWV_info;
 },
 eventLifetime1_r9iWV_entry() //  [R2, R3]
         { info_tbl: [(c9l01,
                       label: eventLifetime1_r9iWV_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9l01: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9l02; else goto c9l03;
       c9l02: // global
           R3 = R3;
           R2 = R2;
           R1 = eventLifetime1_r9iWV_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9l03: // global
           I64[Sp - 16] = block_c9kZY_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9l0r; else goto c9kZZ;
       u9l0r: // global
           call _c9kZY(R1) args: 0, res: 0, upd: 0;
       c9kZZ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9kZY() //  [R1]
         { info_tbl: [(c9kZY,
                       label: block_c9kZY_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9kZY: // global
           I64[Sp - 8] = block_c9l06_info;
           _s9kvm::P64 = R1;
           _s9kvn::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp] = _s9kvn::I64;
           P64[Sp + 8] = _s9kvm::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9l0q; else goto c9l08;
       u9l0q: // global
           call _c9l06(R1) args: 0, res: 0, upd: 0;
       c9l08: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9l06() //  [R1]
         { info_tbl: [(c9l06,
                       label: block_c9l06_info
                       rep:StackRep [True, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9l06: // global
           if (R1 & 7 == 1) goto c9l0e; else goto c9l0l;
       c9l0e: // global
           R1 = P64[Sp + 16] & (-8);
           Sp = Sp + 24;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c9l0l: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9l0o; else goto c9l0n;
       c9l0o: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c9l0n: // global
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = I64[Sp + 8] | 8;
           R1 = Hp - 7;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.861843997 UTC

[section ""data" . GHC.Event.Internal.eventLifetime_closure" {
     GHC.Event.Internal.eventLifetime_closure:
         const GHC.Event.Internal.eventLifetime_info;
 },
 GHC.Event.Internal.eventLifetime_entry() //  [R2, R3]
         { info_tbl: [(c9l0T,
                       label: GHC.Event.Internal.eventLifetime_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9l0T: // global
           R3 = R3;
           R2 = R2;
           call eventLifetime1_r9iWV_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.865068979 UTC

[section ""data" . GHC.Event.Internal.evtCombine_closure" {
     GHC.Event.Internal.evtCombine_closure:
         const GHC.Event.Internal.evtCombine_info;
 },
 GHC.Event.Internal.evtCombine_entry() //  [R2, R3]
         { info_tbl: [(c9l14,
                       label: GHC.Event.Internal.evtCombine_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9l14: // global
           R3 = R3;
           R2 = R2;
           call Data.Bits.$fBitsInt_$c.|._entry(R3,
                                                R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.868847093 UTC

[section ""data" . GHC.Event.Internal.evtConcat_closure" {
     GHC.Event.Internal.evtConcat_closure:
         const GHC.Event.Internal.evtConcat_info;
         const 0;
 },
 GHC.Event.Internal.evtConcat_entry() //  [R2]
         { info_tbl: [(c9l1f,
                       label: GHC.Event.Internal.evtConcat_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9l1f: // global
           R4 = R2;
           R3 = GHC.Event.Internal.evtNothing_closure;
           R2 = GHC.Event.Internal.evtCombine_closure+2;
           call GHC.List.foldl'_entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.872723088 UTC

[section ""data" . GHC.Event.Internal.$wgo_closure" {
     GHC.Event.Internal.$wgo_closure:
         const GHC.Event.Internal.$wgo_info;
 },
 GHC.Event.Internal.$wgo_entry() //  [R2, R3]
         { info_tbl: [(c9l1x,
                       label: GHC.Event.Internal.$wgo_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 13} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9l1x: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c9l1y; else goto c9l1z;
       c9l1y: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$wgo_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9l1z: // global
           I64[Sp - 16] = block_c9l1q_info;
           R1 = R3;
           I64[Sp - 8] = R2;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9l1T; else goto c9l1r;
       u9l1T: // global
           call _c9l1q(R1) args: 0, res: 0, upd: 0;
       c9l1r: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9l1q() //  [R1]
         { info_tbl: [(c9l1q,
                       label: block_c9l1q_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9l1q: // global
           if (R1 & 7 == 1) goto c9l1u; else goto c9l1v;
       c9l1u: // global
           R1 = I64[Sp + 8];
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9l1v: // global
           I64[Sp - 8] = block_c9l1F_info;
           _s9kvu::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp] = _s9kvu::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9l1S; else goto c9l1G;
       u9l1S: // global
           call _c9l1F(R1) args: 0, res: 0, upd: 0;
       c9l1G: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9l1F() //  [R1]
         { info_tbl: [(c9l1F,
                       label: block_c9l1F_info
                       rep:StackRep [False, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9l1F: // global
           _s9kvu::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c9l1K_info;
           R3 = _s9kvu::P64;
           R2 = I64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Event.Internal.$wgo_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9l1K() //  [R1]
         { info_tbl: [(c9l1K,
                       label: block_c9l1K_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9l1K: // global
           R1 = I64[Sp + 8] | R1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.882433072 UTC

[section ""data" . GHC.Event.Internal.$fSemigroupEvent_go_closure" {
     GHC.Event.Internal.$fSemigroupEvent_go_closure:
         const GHC.Event.Internal.$fSemigroupEvent_go_info;
 },
 GHC.Event.Internal.$fSemigroupEvent_go_entry() //  [R2, R3]
         { info_tbl: [(c9l2p,
                       label: GHC.Event.Internal.$fSemigroupEvent_go_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9l2p: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9l2x; else goto c9l2y;
       c9l2x: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fSemigroupEvent_go_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9l2y: // global
           I64[Sp - 16] = block_c9l2m_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9l2D; else goto c9l2n;
       u9l2D: // global
           call _c9l2m(R1) args: 0, res: 0, upd: 0;
       c9l2n: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9l2m() //  [R1]
         { info_tbl: [(c9l2m,
                       label: block_c9l2m_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9l2m: // global
           _s9kvz::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c9l2s_info;
           R3 = _s9kvz::P64;
           R2 = I64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Event.Internal.$wgo_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9l2s() //  [R1]
         { info_tbl: [(c9l2s,
                       label: block_c9l2s_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9l2s: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9l2C; else goto c9l2B;
       c9l2C: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c9l2B: // global
           I64[Hp - 8] = GHC.Types.I#_con_info;
           I64[Hp] = R1;
           R1 = Hp - 7;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.891296226 UTC

[section ""data" . GHC.Event.Internal.$fSemigroupEvent_$csconcat_closure" {
     GHC.Event.Internal.$fSemigroupEvent_$csconcat_closure:
         const GHC.Event.Internal.$fSemigroupEvent_$csconcat_info;
 },
 GHC.Event.Internal.$fSemigroupEvent_$csconcat_entry() //  [R2]
         { info_tbl: [(c9l31,
                       label: GHC.Event.Internal.$fSemigroupEvent_$csconcat_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9l31: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9l32; else goto c9l33;
       c9l32: // global
           R2 = R2;
           R1 = GHC.Event.Internal.$fSemigroupEvent_$csconcat_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9l33: // global
           I64[Sp - 8] = block_c9l2Y_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u9l37; else goto c9l2Z;
       u9l37: // global
           call _c9l2Y(R1) args: 0, res: 0, upd: 0;
       c9l2Z: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9l2Y() //  [R1]
         { info_tbl: [(c9l2Y,
                       label: block_c9l2Y_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9l2Y: // global
           R3 = P64[R1 + 15];
           R2 = P64[R1 + 7];
           Sp = Sp + 8;
           call GHC.Event.Internal.$fSemigroupEvent_go_entry(R3,
                                                             R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.897156281 UTC

[section ""data" . GHC.Event.Internal.$fSemigroupEvent_closure" {
     GHC.Event.Internal.$fSemigroupEvent_closure:
         const GHC.Base.C:Semigroup_con_info;
         const GHC.Event.Internal.evtCombine_closure+2;
         const GHC.Event.Internal.$fSemigroupEvent_$csconcat_closure+1;
         const GHC.Event.Internal.$fSemigroupEvent_$cstimes_closure+3;
         const 0;
 },
 section ""data" . GHC.Event.Internal.$fMonoidEvent_closure" {
     GHC.Event.Internal.$fMonoidEvent_closure:
         const GHC.Base.C:Monoid_con_info;
         const GHC.Event.Internal.$fSemigroupEvent_closure+1;
         const GHC.Event.Internal.evtNothing_closure;
         const GHC.Event.Internal.evtCombine_closure+2;
         const GHC.Event.Internal.evtConcat_closure+1;
         const 0;
 },
 section ""data" . GHC.Event.Internal.$fSemigroupEvent_$cstimes_closure" {
     GHC.Event.Internal.$fSemigroupEvent_$cstimes_closure:
         const GHC.Event.Internal.$fSemigroupEvent_$cstimes_info;
         const 0;
 },
 GHC.Event.Internal.$fSemigroupEvent_$cstimes_entry() //  [R2, R3,
                                                           R4]
         { info_tbl: [(c9l3m,
                       label: GHC.Event.Internal.$fSemigroupEvent_$cstimes_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9l3m: // global
           R5 = R4;
           R4 = R3;
           R3 = GHC.Event.Internal.$fMonoidEvent_closure+1;
           R2 = R2;
           call Data.Semigroup.Internal.stimesMonoid_entry(R5,
                                                           R4,
                                                           R3,
                                                           R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.903074796 UTC

[section ""data" . GHC.Event.Internal.eventIs_closure" {
     GHC.Event.Internal.eventIs_closure:
         const GHC.Event.Internal.eventIs_info;
 },
 GHC.Event.Internal.eventIs_entry() //  [R2, R3]
         { info_tbl: [(c9l3C,
                       label: GHC.Event.Internal.eventIs_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9l3C: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9l3G; else goto c9l3H;
       c9l3G: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.eventIs_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9l3H: // global
           I64[Sp - 16] = block_c9l3z_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u9l44; else goto c9l3A;
       u9l44: // global
           call _c9l3z(R1) args: 0, res: 0, upd: 0;
       c9l3A: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9l3z() //  [R1]
         { info_tbl: [(c9l3z,
                       label: block_c9l3z_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9l3z: // global
           I64[Sp] = block_c9l3F_info;
           _s9kvL::I64 = I64[R1 + 7];
           R1 = P64[Sp + 8];
           I64[Sp + 8] = _s9kvL::I64;
           if (R1 & 7 != 0) goto u9l43; else goto c9l3J;
       u9l43: // global
           call _c9l3F(R1) args: 0, res: 0, upd: 0;
       c9l3J: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c9l3F() //  [R1]
         { info_tbl: [(c9l3F,
                       label: block_c9l3F_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9l3F: // global
           if (I64[Sp + 8] & I64[R1 + 7] == 0) goto c9l3Z; else goto c9l3T;
       c9l3Z: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c9l3T: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.9108877 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent13_closure" {
     GHC.Event.Internal.$fShowEvent13_closure:
         const GHC.Types.C#_con_info;
         const 91;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.912667392 UTC

[section ""cstring" . GHC.Event.Internal.$fShowEvent5_bytes" {
     GHC.Event.Internal.$fShowEvent5_bytes:
         I8[] [93]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.914283188 UTC

[section ""cstring" . GHC.Event.Internal.$fShowEvent10_bytes" {
     GHC.Event.Internal.$fShowEvent10_bytes:
         I8[] [44]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.916533104 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent9_closure" {
     GHC.Event.Internal.$fShowEvent9_closure:
         const GHC.Event.Internal.$fShowEvent9_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Internal.$fShowEvent9_entry() //  [R1]
         { info_tbl: [(c9l4A,
                       label: GHC.Event.Internal.$fShowEvent9_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9l4A: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9l4B; else goto c9l4C;
       c9l4B: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9l4C: // global
           (_c9l4x::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9l4x::I64 == 0) goto c9l4z; else goto c9l4y;
       c9l4z: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9l4y: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9l4x::I64;
           R2 = GHC.Event.Internal.$fShowEvent10_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.92045715 UTC

[section ""cstring" . GHC.Event.Internal.$fShowEvent12_bytes" {
     GHC.Event.Internal.$fShowEvent12_bytes:
         I8[] [101,118,116,82,101,97,100]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.922352688 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent11_closure" {
     GHC.Event.Internal.$fShowEvent11_closure:
         const GHC.Event.Internal.$fShowEvent11_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Internal.$fShowEvent11_entry() //  [R1]
         { info_tbl: [(c9l4S,
                       label: GHC.Event.Internal.$fShowEvent11_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9l4S: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9l4T; else goto c9l4U;
       c9l4T: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9l4U: // global
           (_c9l4P::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9l4P::I64 == 0) goto c9l4R; else goto c9l4Q;
       c9l4R: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9l4Q: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9l4P::I64;
           R2 = GHC.Event.Internal.$fShowEvent12_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.926221246 UTC

[section ""cstring" . GHC.Event.Internal.$fShowEvent8_bytes" {
     GHC.Event.Internal.$fShowEvent8_bytes:
         I8[] [101,118,116,87,114,105,116,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.928049093 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent7_closure" {
     GHC.Event.Internal.$fShowEvent7_closure:
         const GHC.Event.Internal.$fShowEvent7_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Internal.$fShowEvent7_entry() //  [R1]
         { info_tbl: [(c9l5a,
                       label: GHC.Event.Internal.$fShowEvent7_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9l5a: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9l5b; else goto c9l5c;
       c9l5b: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9l5c: // global
           (_c9l57::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9l57::I64 == 0) goto c9l59; else goto c9l58;
       c9l59: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9l58: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9l57::I64;
           R2 = GHC.Event.Internal.$fShowEvent8_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.932087919 UTC

[section ""cstring" . GHC.Event.Internal.$fShowEvent3_bytes" {
     GHC.Event.Internal.$fShowEvent3_bytes:
         I8[] [101,118,116,67,108,111,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.934037278 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent2_closure" {
     GHC.Event.Internal.$fShowEvent2_closure:
         const GHC.Event.Internal.$fShowEvent2_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Internal.$fShowEvent2_entry() //  [R1]
         { info_tbl: [(c9l5s,
                       label: GHC.Event.Internal.$fShowEvent2_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9l5s: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9l5t; else goto c9l5u;
       c9l5t: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9l5u: // global
           (_c9l5p::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9l5p::I64 == 0) goto c9l5r; else goto c9l5q;
       c9l5r: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9l5q: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9l5p::I64;
           R2 = GHC.Event.Internal.$fShowEvent3_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.938177412 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent4_closure" {
     GHC.Event.Internal.$fShowEvent4_closure:
         const GHC.Event.Internal.$fShowEvent4_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.Event.Internal.$fShowEvent4_entry() //  [R1]
         { info_tbl: [(c9l5J,
                       label: GHC.Event.Internal.$fShowEvent4_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9l5J: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9l5K; else goto c9l5L;
       c9l5K: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9l5L: // global
           (_c9l5G::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c9l5G::I64 == 0) goto c9l5I; else goto c9l5H;
       c9l5I: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c9l5H: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c9l5G::I64;
           R2 = GHC.Event.Internal.$fShowEvent5_bytes;
           Sp = Sp - 16;
           call GHC.CString.unpackCString#_entry(R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.942249844 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent6_closure" {
     GHC.Event.Internal.$fShowEvent6_closure:
         const :_con_info;
         const GHC.Event.Internal.$fShowEvent2_closure;
         const GHC.Types.[]_closure+1;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.947079415 UTC

[section ""data" . GHC.Event.Internal.$w$cshow_closure" {
     GHC.Event.Internal.$w$cshow_closure:
         const GHC.Event.Internal.$w$cshow_info;
         const 0;
 },
 sat_s9kvV_entry() //  [R1]
         { info_tbl: [(c9l6x,
                       label: sat_s9kvV_info
                       rep:HeapRep 1 nonptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9l6x: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9l6y; else goto c9l6J;
       c9l6y: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9l6J: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           if (I64[R1 + 16] & 4 == 0) goto c9l6w; else goto c9l6v;
       c9l6w: // global
           R1 = []_closure+1;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
       c9l6v: // global
           R1 = GHC.Event.Internal.$fShowEvent6_closure+2;
           Sp = Sp - 16;
           call (I64[P64[Sp]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 sat_s9kvY_entry() //  [R1]
         { info_tbl: [(c9l6N,
                       label: sat_s9kvY_info
                       rep:HeapRep 1 nonptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9l6N: // global
           if ((Sp + -40) < SpLim) (likely: False) goto c9l6O; else goto c9l7d;
       c9l6O: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9l7d: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           _s9kvR::I64 = I64[R1 + 16];
           _s9kvT::I64 = _s9kvR::I64 & 2;
           if (_s9kvT::I64 != 0) goto u9l7e; else goto c9l6M;
       u9l7e: // global
           I64[Sp - 32] = _s9kvR::I64;
           I64[Sp - 24] = _s9kvT::I64;
           Sp = Sp - 32;
           call _c9l6m() args: 0, res: 0, upd: 0;
       c9l6M: // global
           if (_s9kvR::I64 & 4 == 0) goto c9l79; else goto c9l73;
       c9l79: // global
           R3 = GHC.Types.[]_closure+1;
           R2 = GHC.Event.Internal.$fShowEvent9_closure;
           Sp = Sp - 16;
           call Data.OldList.prependToAll_entry(R3,
                                                R2) args: 24, res: 0, upd: 24;
       c9l73: // global
           R3 = GHC.Event.Internal.$fShowEvent6_closure+2;
           R2 = GHC.Event.Internal.$fShowEvent9_closure;
           Sp = Sp - 16;
           call Data.OldList.prependToAll_entry(R3,
                                                R2) args: 24, res: 0, upd: 24;
     }
 },
 _c9l6m() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9l6m: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c9l6S; else goto c9l6R;
       c9l6S: // global
           HpAlloc = 48;
           I64[Sp - 8] = block_c9l6l_info;
           R1 = I64[Sp + 8];
           Sp = Sp - 8;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 24;
       c9l6R: // global
           I64[Hp - 40] = sat_s9kvV_info;
           I64[Hp - 24] = I64[Sp];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Event.Internal.$fShowEvent7_closure;
           P64[Hp] = Hp - 40;
           R3 = Hp - 14;
           R2 = GHC.Event.Internal.$fShowEvent9_closure;
           Sp = Sp + 16;
           call Data.OldList.prependToAll_entry(R3,
                                                R2) args: 24, res: 0, upd: 24;
     }
 },
 _c9l6l() //  [R1]
         { info_tbl: [(c9l6l,
                       label: block_c9l6l_info
                       rep:StackRep [True, True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9l6l: // global
           I64[Sp + 16] = R1;
           Sp = Sp + 8;
           call _c9l6m() args: 0, res: 0, upd: 0;
     }
 },
 sat_s9kw3_entry() //  [R1]
         { info_tbl: [(c9l7B,
                       label: sat_s9kw3_info
                       rep:HeapRep 1 nonptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9l7B: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9l7C; else goto c9l7N;
       c9l7C: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9l7N: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           if (I64[R1 + 16] & 4 == 0) goto c9l7A; else goto c9l7z;
       c9l7A: // global
           R3 = GHC.Types.[]_closure+1;
           R2 = GHC.Event.Internal.$fShowEvent9_closure;
           Sp = Sp - 16;
           call Data.OldList.prependToAll_entry(R3,
                                                R2) args: 24, res: 0, upd: 24;
       c9l7z: // global
           R3 = GHC.Event.Internal.$fShowEvent6_closure+2;
           R2 = GHC.Event.Internal.$fShowEvent9_closure;
           Sp = Sp - 16;
           call Data.OldList.prependToAll_entry(R3,
                                                R2) args: 24, res: 0, upd: 24;
     }
 },
 sat_s9kw7_entry() //  [R1]
         { info_tbl: [(c9l82,
                       label: sat_s9kw7_info
                       rep:HeapRep { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9l82: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9l83; else goto c9l84;
       c9l83: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9l84: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = GHC.Types.[]_closure+1;
           R2 = GHC.Event.Internal.$fShowEvent9_closure;
           Sp = Sp - 16;
           call Data.OldList.prependToAll_entry(R3,
                                                R2) args: 24, res: 0, upd: 24;
     }
 },
 sat_s9kwa_entry() //  [R1]
         { info_tbl: [(c9l85,
                       label: sat_s9kwa_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9l85: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c9l86; else goto c9l87;
       c9l86: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c9l87: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           I64[Sp - 24] = block_c9l63_info;
           R1 = P64[R1 + 16];
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u9l92; else goto c9l64;
       u9l92: // global
           call _c9l63(R1) args: 0, res: 0, upd: 0;
       c9l64: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 24;
     }
 },
 _c9l63() //  [R1]
         { info_tbl: [(c9l63,
                       label: block_c9l63_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9l63: // global
           _s9kvR::I64 = I64[R1 + 7];
           _s9kvS::I64 = _s9kvR::I64 & 1;
           if (_s9kvS::I64 != 0) goto u9l8Q; else goto c9l8k;
       u9l8Q: // global
           I64[Sp - 8] = _s9kvS::I64;
           I64[Sp] = _s9kvR::I64;
           Sp = Sp - 8;
           call _c9l6c() args: 0, res: 0, upd: 0;
       c9l8k: // global
           _s9kw1::I64 = _s9kvR::I64 & 2;
           if (_s9kw1::I64 != 0) goto u9l8S; else goto c9l8x;
       u9l8S: // global
           I64[Sp - 8] = _s9kw1::I64;
           I64[Sp] = _s9kvR::I64;
           Sp = Sp - 8;
           call _c9l7q() args: 0, res: 0, upd: 0;
       c9l8x: // global
           _s9kw6::I64 = _s9kvR::I64 & 4;
           if (_s9kw6::I64 != 0) goto u9l8U; else goto c9l8M;
       u9l8U: // global
           I64[Sp] = _s9kw6::I64;
           call _c9l7W() args: 0, res: 0, upd: 0;
       c9l8M: // global
           R1 = GHC.Event.Internal.$fShowEvent4_closure;
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 24, res: 0, upd: 24;
     }
 },
 _c9l6c() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9l6c: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c9l8f; else goto c9l8e;
       c9l8f: // global
           HpAlloc = 48;
           _s9kvS::I64 = I64[Sp];
           I64[Sp] = block_c9l6b_info;
           R1 = _s9kvS::I64;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 24;
       c9l8e: // global
           I64[Hp - 40] = sat_s9kvY_info;
           I64[Hp - 24] = I64[Sp + 8];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Event.Internal.$fShowEvent11_closure;
           P64[Hp] = Hp - 40;
           I64[Sp + 8] = block_c9l8a_info;
           R2 = Hp - 14;
           Sp = Sp + 8;
           call Data.OldList.intercalate1_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 _c9l6b() //  [R1]
         { info_tbl: [(c9l6b,
                       label: block_c9l6b_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9l6b: // global
           I64[Sp] = R1;
           call _c9l6c() args: 0, res: 0, upd: 0;
     }
 },
 _c9l8a() //  [R1]
         { info_tbl: [(c9l8a,
                       label: block_c9l8a_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9l8a: // global
           R3 = GHC.Event.Internal.$fShowEvent4_closure;
           R2 = R1;
           Sp = Sp + 8;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 _c9l7q() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9l7q: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c9l8s; else goto c9l8r;
       c9l8s: // global
           HpAlloc = 48;
           _s9kw1::I64 = I64[Sp];
           I64[Sp] = block_c9l7p_info;
           R1 = _s9kw1::I64;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 24;
       c9l8r: // global
           I64[Hp - 40] = sat_s9kw3_info;
           I64[Hp - 24] = I64[Sp + 8];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Event.Internal.$fShowEvent7_closure;
           P64[Hp] = Hp - 40;
           I64[Sp + 8] = block_c9l8n_info;
           R2 = Hp - 14;
           Sp = Sp + 8;
           call Data.OldList.intercalate1_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 _c9l7p() //  [R1]
         { info_tbl: [(c9l7p,
                       label: block_c9l7p_info
                       rep:StackRep [True])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9l7p: // global
           I64[Sp] = R1;
           call _c9l7q() args: 0, res: 0, upd: 0;
     }
 },
 _c9l8n() //  [R1]
         { info_tbl: [(c9l8n,
                       label: block_c9l8n_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9l8n: // global
           R3 = GHC.Event.Internal.$fShowEvent4_closure;
           R2 = R1;
           Sp = Sp + 8;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 _c9l7W() //  []
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9l7W: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto c9l8F; else goto c9l8E;
       c9l8F: // global
           HpAlloc = 40;
           _s9kw6::I64 = I64[Sp];
           I64[Sp] = block_c9l7V_info;
           R1 = _s9kw6::I64;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 24;
       c9l8E: // global
           I64[Hp - 32] = sat_s9kw7_info;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Event.Internal.$fShowEvent2_closure;
           P64[Hp] = Hp - 32;
           I64[Sp] = block_c9l8A_info;
           R2 = Hp - 14;
           call Data.OldList.intercalate1_entry(R2) args: 8, res: 8, upd: 24;
     }
 },
 _c9l7V() //  [R1]
         { info_tbl: [(c9l7V,
                       label: block_c9l7V_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9l7V: // global
           I64[Sp] = R1;
           call _c9l7W() args: 0, res: 0, upd: 0;
     }
 },
 _c9l8A() //  [R1]
         { info_tbl: [(c9l8A,
                       label: block_c9l8A_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9l8A: // global
           R3 = GHC.Event.Internal.$fShowEvent4_closure;
           R2 = R1;
           Sp = Sp + 8;
           call GHC.Base.++_entry(R3, R2) args: 24, res: 0, upd: 24;
     }
 },
 GHC.Event.Internal.$w$cshow_entry() //  [R2]
         { info_tbl: [(c9l93,
                       label: GHC.Event.Internal.$w$cshow_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9l93: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9l97; else goto c9l96;
       c9l97: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = GHC.Event.Internal.$w$cshow_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9l96: // global
           I64[Hp - 16] = sat_s9kwa_info;
           P64[Hp] = R2;
           R2 = Hp - 16;
           R1 = GHC.Event.Internal.$fShowEvent13_closure+1;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.986385227 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent_$cshow_closure" {
     GHC.Event.Internal.$fShowEvent_$cshow_closure:
         const GHC.Event.Internal.$fShowEvent_$cshow_info;
         const 0;
 },
 GHC.Event.Internal.$fShowEvent_$cshow_entry() //  [R2]
         { info_tbl: [(c9laV,
                       label: GHC.Event.Internal.$fShowEvent_$cshow_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9laV: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c9laW; else goto c9laX;
       c9laW: // global
           R2 = R2;
           R1 = GHC.Event.Internal.$fShowEvent_$cshow_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9laX: // global
           I64[Sp - 8] = block_c9laS_info;
           R2 = R2;
           Sp = Sp - 8;
           call GHC.Event.Internal.$w$cshow_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9laS() //  [R1, R2]
         { info_tbl: [(c9laS,
                       label: block_c9laS_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9laS: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9lb0; else goto c9laZ;
       c9lb0: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 8;
       c9laZ: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:28.994415541 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent_$cshowsPrec_closure" {
     GHC.Event.Internal.$fShowEvent_$cshowsPrec_closure:
         const GHC.Event.Internal.$fShowEvent_$cshowsPrec_info;
         const 0;
 },
 GHC.Event.Internal.$fShowEvent_$cshowsPrec_entry() //  [R2, R3, R4]
         { info_tbl: [(c9lbj,
                       label: GHC.Event.Internal.$fShowEvent_$cshowsPrec_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9lbj: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9lbk; else goto c9lbl;
       c9lbk: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fShowEvent_$cshowsPrec_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9lbl: // global
           I64[Sp - 16] = block_c9lbg_info;
           R2 = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 16;
           call GHC.Event.Internal.$w$cshow_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9lbg() //  [R1, R2]
         { info_tbl: [(c9lbg,
                       label: block_c9lbg_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9lbg: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9lbo; else goto c9lbn;
       c9lbo: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 8;
       c9lbn: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R3 = P64[Sp + 8];
           R2 = Hp - 14;
           Sp = Sp + 16;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:29.001725175 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent1_closure" {
     GHC.Event.Internal.$fShowEvent1_closure:
         const GHC.Event.Internal.$fShowEvent1_info;
         const 0;
 },
 GHC.Event.Internal.$fShowEvent1_entry() //  [R2, R3]
         { info_tbl: [(c9lbG,
                       label: GHC.Event.Internal.$fShowEvent1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9lbG: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c9lbH; else goto c9lbI;
       c9lbH: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.$fShowEvent1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c9lbI: // global
           I64[Sp - 16] = block_c9lbD_info;
           R2 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           call GHC.Event.Internal.$w$cshow_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 _c9lbD() //  [R1, R2]
         { info_tbl: [(c9lbD,
                       label: block_c9lbD_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9lbD: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c9lbL; else goto c9lbK;
       c9lbL: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 8;
       c9lbK: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R3 = P64[Sp + 8];
           R2 = Hp - 14;
           Sp = Sp + 16;
           call GHC.Base.++_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:29.009607872 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent_$cshowList_closure" {
     GHC.Event.Internal.$fShowEvent_$cshowList_closure:
         const GHC.Event.Internal.$fShowEvent_$cshowList_info;
         const 0;
 },
 GHC.Event.Internal.$fShowEvent_$cshowList_entry() //  [R2, R3]
         { info_tbl: [(c9lc0,
                       label: GHC.Event.Internal.$fShowEvent_$cshowList_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9lc0: // global
           R4 = R3;
           R3 = R2;
           R2 = GHC.Event.Internal.$fShowEvent1_closure+2;
           call GHC.Show.showList___entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:29.014001948 UTC

[section ""data" . GHC.Event.Internal.$fShowEvent_closure" {
     GHC.Event.Internal.$fShowEvent_closure:
         const GHC.Show.C:Show_con_info;
         const GHC.Event.Internal.$fShowEvent_$cshowsPrec_closure+3;
         const GHC.Event.Internal.$fShowEvent_$cshow_closure+1;
         const GHC.Event.Internal.$fShowEvent_$cshowList_closure+2;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:29.016792441 UTC

[section ""data" . GHC.Event.Internal.Backend_closure" {
     GHC.Event.Internal.Backend_closure:
         const GHC.Event.Internal.Backend_info;
 },
 GHC.Event.Internal.Backend_entry() //  [R2, R3, R4, R5, R6]
         { info_tbl: [(c9lcd,
                       label: GHC.Event.Internal.Backend_info
                       rep:HeapRep static { Fun {arity: 5 fun_type: ArgSpec 25} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9lcd: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c9lch; else goto c9lcg;
       c9lch: // global
           HpAlloc = 48;
           R6 = R6;
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Event.Internal.Backend_closure;
           call (stg_gc_fun)(R6, R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c9lcg: // global
           I64[Hp - 40] = GHC.Event.Internal.Backend_con_info;
           P64[Hp - 32] = R2;
           P64[Hp - 24] = R3;
           P64[Hp - 16] = R4;
           P64[Hp - 8] = R5;
           P64[Hp] = R6;
           R1 = Hp - 39;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:29.02278452 UTC

[section ""data" . GHC.Event.Internal.Timeout_closure" {
     GHC.Event.Internal.Timeout_closure:
         const GHC.Event.Internal.Timeout_info;
 },
 GHC.Event.Internal.Timeout_entry() //  [R2]
         { info_tbl: [(c9lct,
                       label: GHC.Event.Internal.Timeout_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9lct: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c9lcx; else goto c9lcw;
       c9lcx: // global
           HpAlloc = 16;
           R2 = R2;
           R1 = GHC.Event.Internal.Timeout_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c9lcw: // global
           I64[Hp - 8] = GHC.Event.Internal.Timeout_con_info;
           I64[Hp] = R2;
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:29.02820269 UTC

[section ""data" . GHC.Event.Internal.Forever_closure" {
     GHC.Event.Internal.Forever_closure:
         const GHC.Event.Internal.Forever_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:29.029955478 UTC

[section ""data" . GHC.Event.Internal.OneShot_closure" {
     GHC.Event.Internal.OneShot_closure:
         const GHC.Event.Internal.OneShot_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:29.031715976 UTC

[section ""data" . GHC.Event.Internal.MultiShot_closure" {
     GHC.Event.Internal.MultiShot_closure:
         const GHC.Event.Internal.MultiShot_con_info;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:29.03335617 UTC

[GHC.Event.Internal.Backend_con_entry() //  [R1]
         { info_tbl: [(c9lcH,
                       label: GHC.Event.Internal.Backend_con_info
                       rep:HeapRep 5 ptrs {
                             Con {tag: 0
                                  descr:[98,97,115,101,58,71,72,67,46,69,118,101,110,116,46,73,110,116,101,114,110,97,108,46,66,97,99,107,101,110,100]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9lcH: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:29.036453905 UTC

[GHC.Event.Internal.Timeout_con_entry() //  [R1]
         { info_tbl: [(c9lcO,
                       label: GHC.Event.Internal.Timeout_con_info
                       rep:HeapRep 1 nonptrs {
                             Con {tag: 0
                                  descr:[98,97,115,101,58,71,72,67,46,69,118,101,110,116,46,73,110,116,101,114,110,97,108,46,84,105,109,101,111,117,116]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9lcO: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:29.039765696 UTC

[GHC.Event.Internal.Forever_con_entry() //  [R1]
         { info_tbl: [(c9lcV,
                       label: GHC.Event.Internal.Forever_con_info
                       rep:HeapRep 1 nonptrs {
                             Con {tag: 1
                                  descr:[98,97,115,101,58,71,72,67,46,69,118,101,110,116,46,73,110,116,101,114,110,97,108,46,70,111,114,101,118,101,114]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9lcV: // global
           R1 = R1 + 2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:29.042941214 UTC

[section ""relreadonly" . GHC.Event.Internal.Lifetime_closure_tbl" {
     GHC.Event.Internal.Lifetime_closure_tbl:
         const GHC.Event.Internal.OneShot_closure+1;
         const GHC.Event.Internal.MultiShot_closure+2;
 }]


==================== Output Cmm ====================
2018-03-16 16:04:29.044621899 UTC

[GHC.Event.Internal.OneShot_con_entry() //  [R1]
         { info_tbl: [(c9ld3,
                       label: GHC.Event.Internal.OneShot_con_info
                       rep:HeapRep 1 nonptrs {
                             Con {tag: 0
                                  descr:[98,97,115,101,58,71,72,67,46,69,118,101,110,116,46,73,110,116,101,114,110,97,108,46,79,110,101,83,104,111,116]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9ld3: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:29.047700208 UTC

[GHC.Event.Internal.MultiShot_con_entry() //  [R1]
         { info_tbl: [(c9lda,
                       label: GHC.Event.Internal.MultiShot_con_info
                       rep:HeapRep 1 nonptrs {
                             Con {tag: 1
                                  descr:[98,97,115,101,58,71,72,67,46,69,118,101,110,116,46,73,110,116,101,114,110,97,108,46,77,117,108,116,105,83,104,111,116]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c9lda: // global
           R1 = R1 + 2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:04:29.051368913 UTC

[section ""relreadonly" . S9kxP_srt" {
     S9kxP_srt:
         const GHC.Event.Internal.$fShowTimeout3_closure;
         const GHC.Show.$w$cshowsPrec4_closure;
         const GHC.Event.Internal.$fShowTimeout_$cshowsPrec_closure;
         const GHC.Event.Internal.$fShowTimeout2_closure;
         const GHC.Event.Internal.$fShowTimeout_$cshow_closure;
         const GHC.Event.Internal.$fShowTimeout1_closure;
         const GHC.Event.Internal.$fShowLifetime2_closure;
         const GHC.Event.Internal.$fShowLifetime4_closure;
         const GHC.Event.Internal.$fShowLifetime_$cshowsPrec_closure;
         const GHC.Event.Internal.$fShowLifetime_$cshow_closure;
         const GHC.Event.Internal.$fShowLifetime1_closure;
         const Data.Semigroup.Internal.stimesMonoid_closure;
         const GHC.Event.Internal.$fMonoidLifetime_closure;
         const sat_s9kut_closure;
         const GHC.Event.Internal.throwErrnoIfMinus1NoRetry3_closure;
         const GHC.Event.Internal.throwErrnoIfMinus1NoRetry2_closure;
         const Foreign.C.Error.throwErrno1_closure;
         const GHC.Event.Internal.throwErrnoIfMinus1NoRetry1_closure;
         const Data.Semigroup.Internal.stimesDefault_closure;
         const GHC.Event.Internal.$fSemigroupEventLifetime_closure;
         const GHC.Event.Internal.evtNothing_closure;
         const GHC.Event.Internal.$fMonoidEvent_closure;
         const GHC.Event.Internal.$fShowEvent6_closure;
         const GHC.Event.Internal.$fShowEvent7_closure;
         const GHC.Event.Internal.$fShowEvent9_closure;
         const GHC.Event.Internal.$fShowEvent2_closure;
         const GHC.Event.Internal.$fShowEvent4_closure;
         const GHC.Event.Internal.$fShowEvent11_closure;
         const GHC.Event.Internal.$w$cshow_closure;
         const GHC.Event.Internal.$fShowEvent_$cshow_closure;
         const GHC.Event.Internal.$fShowEvent_$cshowsPrec_closure;
         const GHC.Event.Internal.$fShowEvent1_closure;
 }]

