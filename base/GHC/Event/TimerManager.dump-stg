
==================== Pre unarise: ====================
2018-03-16 16:05:27.172681755 UTC

GHC.Event.TimerManager.$WTimerManager [InlPrag=INLINE[2]]
  :: GHC.Event.Internal.Backend
     -> GHC.IORef.IORef GHC.Event.TimerManager.TimeoutQueue
     -> GHC.IORef.IORef GHC.Event.TimerManager.State
     -> GHC.Event.Unique.UniqueSource
     -> GHC.Event.Control.Control
     -> GHC.Event.TimerManager.TimerManager
[GblId[DataConWrapper],
 Arity=5,
 Caf=NoCafRefs,
 Str=<S,U><S,U><S,U><S,U><S,U>m,
 Unf=OtherCon []] =
    [] \r [dt_sasE0 dt_sasE1 dt_sasE2 dt_sasE3 dt_sasE4]
        case dt_sasE0 of dt_sasE5 {
          __DEFAULT ->
              case dt_sasE1 of {
                GHC.STRef.STRef dt_sasE7 [Occ=Once] ->
                    case dt_sasE2 of {
                      GHC.STRef.STRef dt_sasE9 [Occ=Once] ->
                          case dt_sasE3 of {
                            GHC.Event.Unique.US dt_sasEb [Occ=Once] ->
                                case dt_sasE4 of {
                                  GHC.Event.Control.W dt_sasEd [Occ=Once]
                                                      dt_sasEe [Occ=Once]
                                                      dt_sasEf [Occ=Once]
                                                      dt_sasEg [Occ=Once]
                                                      dt_sasEh [Occ=Once] ->
                                      GHC.Event.TimerManager.TimerManager [dt_sasE5
                                                                           dt_sasE7
                                                                           dt_sasE9
                                                                           dt_sasEb
                                                                           dt_sasEd
                                                                           dt_sasEe
                                                                           dt_sasEf
                                                                           dt_sasEg
                                                                           dt_sasEh];
                                };
                          };
                    };
              };
        };

GHC.Event.TimerManager.$fShowState8 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Created"#;

GHC.Event.TimerManager.$fShowState7 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# GHC.Event.TimerManager.$fShowState8;

GHC.Event.TimerManager.$fShowState6 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Running"#;

GHC.Event.TimerManager.$fShowState5 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# GHC.Event.TimerManager.$fShowState6;

GHC.Event.TimerManager.$fShowState4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Dying"#;

GHC.Event.TimerManager.$fShowState3 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# GHC.Event.TimerManager.$fShowState4;

GHC.Event.TimerManager.$fShowState2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Finished"#;

GHC.Event.TimerManager.$fShowState1 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# GHC.Event.TimerManager.$fShowState2;

GHC.Event.TimerManager.$w$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: GHC.Event.TimerManager.State
     -> GHC.Base.String -> GHC.Base.String
[GblId, Arity=2, Str=<S,1*U><L,1*U>, Unf=OtherCon []] =
    [] \r [w_sasEi w1_sasEj]
        case w_sasEi of {
          GHC.Event.TimerManager.Created ->
              GHC.Base.++ GHC.Event.TimerManager.$fShowState7 w1_sasEj;
          GHC.Event.TimerManager.Running ->
              GHC.Base.++ GHC.Event.TimerManager.$fShowState5 w1_sasEj;
          GHC.Event.TimerManager.Dying ->
              GHC.Base.++ GHC.Event.TimerManager.$fShowState3 w1_sasEj;
          GHC.Event.TimerManager.Finished ->
              GHC.Base.++ GHC.Event.TimerManager.$fShowState1 w1_sasEj;
        };

GHC.Event.TimerManager.$fShowState_$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Int -> GHC.Event.TimerManager.State -> GHC.Show.ShowS
[GblId, Arity=3, Str=<L,A><S,1*U><L,1*U>, Unf=OtherCon []] =
    [] \r [w_sasEl w1_sasEm w2_sasEn]
        GHC.Event.TimerManager.$w$cshowsPrec w1_sasEm w2_sasEn;

GHC.Event.TimerManager.$fEqState_$c==
  :: GHC.Event.TimerManager.State
     -> GHC.Event.TimerManager.State -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [ds_sasEo ds1_sasEp]
        case ds_sasEo of {
          GHC.Event.TimerManager.Created ->
              case ds1_sasEp of {
                __DEFAULT -> GHC.Types.False [];
                GHC.Event.TimerManager.Created -> GHC.Types.True [];
              };
          GHC.Event.TimerManager.Running ->
              case ds1_sasEp of {
                __DEFAULT -> GHC.Types.False [];
                GHC.Event.TimerManager.Running -> GHC.Types.True [];
              };
          GHC.Event.TimerManager.Dying ->
              case ds1_sasEp of {
                __DEFAULT -> GHC.Types.False [];
                GHC.Event.TimerManager.Dying -> GHC.Types.True [];
              };
          GHC.Event.TimerManager.Finished ->
              case ds1_sasEp of {
                __DEFAULT -> GHC.Types.False [];
                GHC.Event.TimerManager.Finished -> GHC.Types.True [];
              };
        };

GHC.Event.TimerManager.$fEqTimeoutKey [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq GHC.Event.TimerManager.TimeoutKey
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Classes.eqInt
                                     GHC.Classes.neInt];

GHC.Event.TimerManager.emControl
  :: GHC.Event.TimerManager.TimerManager -> GHC.Event.Control.Control
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLLSSSSS),1*U(A,A,A,A,U,U,U,U,U)>m,
 Unf=OtherCon []] =
    [] \r [ds_sasEv]
        case ds_sasEv of {
          GHC.Event.TimerManager.TimerManager _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              dt3_sasEB [Occ=Once]
                                              dt4_sasEC [Occ=Once]
                                              dt5_sasED [Occ=Once]
                                              dt6_sasEE [Occ=Once]
                                              dt7_sasEF [Occ=Once] ->
              GHC.Event.Control.W [dt3_sasEB
                                   dt4_sasEC
                                   dt5_sasED
                                   dt6_sasEE
                                   dt7_sasEF];
        };

GHC.Event.TimerManager.emUniqueSource
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Event.Unique.UniqueSource
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLSLLLLL),1*U(A,A,A,U,A,A,A,A,A)>m,
 Unf=OtherCon []] =
    [] \r [ds_sasEG]
        case ds_sasEG of {
          GHC.Event.TimerManager.TimerManager _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              dt2_sasEL [Occ=Once]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead] ->
              GHC.Event.Unique.US [dt2_sasEL];
        };

GHC.Event.TimerManager.emState
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.IORef.IORef GHC.Event.TimerManager.State
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLSLLLLLL),1*U(A,A,U,A,A,A,A,A,A)>m,
 Unf=OtherCon []] =
    [] \r [ds_sasER]
        case ds_sasER of {
          GHC.Event.TimerManager.TimerManager _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              dt1_sasEV [Occ=Once]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead] ->
              GHC.STRef.STRef [dt1_sasEV];
        };

GHC.Event.TimerManager.emTimeouts
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.IORef.IORef GHC.Event.TimerManager.TimeoutQueue
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LSLLLLLLL),1*U(A,U,A,A,A,A,A,A,A)>m,
 Unf=OtherCon []] =
    [] \r [ds_sasF2]
        case ds_sasF2 of {
          GHC.Event.TimerManager.TimerManager _ [Occ=Dead]
                                              dt_sasF5 [Occ=Once]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead] ->
              GHC.STRef.STRef [dt_sasF5];
        };

GHC.Event.TimerManager.emBackend
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Event.Internal.Backend
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SLLLLLLLL),1*U(U,A,A,A,A,A,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [ds_sasFd]
        case ds_sasFd of {
          GHC.Event.TimerManager.TimerManager ds1_sasFf [Occ=Once]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead] ->
              ds1_sasFf;
        };

GHC.Event.TimerManager.newDefaultBackend
  :: GHC.Types.IO GHC.Event.Internal.Backend
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [eta_B1] GHC.Event.Poll.new1 eta_B1;

GHC.Event.TimerManager.wakeManager1
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=2,
 Str=<S(LLLLLLSLS),1*U(A,A,A,A,A,A,U,A,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [mgr_sasFo eta_sasFp]
        case mgr_sasFo of {
          GHC.Event.TimerManager.TimerManager _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              dt5_sasFx [Occ=Once]
                                              _ [Occ=Dead]
                                              dt7_sasFz [Occ=Once] ->
              GHC.Event.Control.$wsendWakeup dt5_sasFx dt7_sasFz eta_sasFp;
        };

GHC.Event.TimerManager.wakeManager
  :: GHC.Event.TimerManager.TimerManager -> GHC.Types.IO ()
[GblId,
 Arity=2,
 Str=<S(LLLLLLSLS),1*U(A,A,A,A,A,A,U,A,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1]
        GHC.Event.TimerManager.wakeManager1 eta_B2 eta_B1;

GHC.Event.TimerManager.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

GHC.Event.TimerManager.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.TimerManager.$trModule4];

GHC.Event.TimerManager.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.Event.TimerManager"#;

GHC.Event.TimerManager.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.TimerManager.$trModule2];

GHC.Event.TimerManager.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [GHC.Event.TimerManager.$trModule3
                                     GHC.Event.TimerManager.$trModule1];

$krep_rasDC :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.Unique.$tcUnique
                                              GHC.Types.[]];

$krep1_rasDD :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.Control.$tcControl
                                              GHC.Types.[]];

$krep2_rasDE :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.Unique.$tcUniqueSource
                                              GHC.Types.[]];

$krep3_rasDF :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Tuple.$tc()
                                              GHC.Types.[]];

$krep4_rasDG :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.Internal.$tcBackend
                                              GHC.Types.[]];

$krep5_rasDH :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep3_rasDF GHC.Types.[]];

$krep6_rasDI :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcIO
                                              $krep5_rasDH];

$krep7_rasDJ :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep6_rasDI GHC.Types.[]];

$krep8_rasDK :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.PSQ.$tcIntPSQ
                                              $krep7_rasDJ];

$krep9_rasDL :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep8_rasDK GHC.Types.[]];

$krep10_rasDM :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.IORef.$tcIORef
                                              $krep9_rasDL];

GHC.Event.TimerManager.$tcTimeoutKey2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "TimeoutKey"#;

GHC.Event.TimerManager.$tcTimeoutKey1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.TimerManager.$tcTimeoutKey2];

GHC.Event.TimerManager.$tcTimeoutKey :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [11465769786694886755##
                                    8841886228133799087##
                                    GHC.Event.TimerManager.$trModule
                                    GHC.Event.TimerManager.$tcTimeoutKey1
                                    0#
                                    GHC.Types.krep$*];

$krep11_rasDN :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.TimerManager.$tcTimeoutKey
                                              GHC.Types.[]];

GHC.Event.TimerManager.$tc'TK1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_rasDC $krep11_rasDN];

GHC.Event.TimerManager.$tc'TK3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'TK"#;

GHC.Event.TimerManager.$tc'TK2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.TimerManager.$tc'TK3];

GHC.Event.TimerManager.$tc'TK :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [4362213157428095811##
                                    13641506162182658721##
                                    GHC.Event.TimerManager.$trModule
                                    GHC.Event.TimerManager.$tc'TK2
                                    0#
                                    GHC.Event.TimerManager.$tc'TK1];

GHC.Event.TimerManager.$tcState2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "State"#;

GHC.Event.TimerManager.$tcState1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.TimerManager.$tcState2];

GHC.Event.TimerManager.$tcState :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [10067362680685980057##
                                    6560547589611231606##
                                    GHC.Event.TimerManager.$trModule
                                    GHC.Event.TimerManager.$tcState1
                                    0#
                                    GHC.Types.krep$*];

GHC.Event.TimerManager.$tc'Created1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.TimerManager.$tcState
                                              GHC.Types.[]];

GHC.Event.TimerManager.$tc'Created3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Created"#;

GHC.Event.TimerManager.$tc'Created2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.TimerManager.$tc'Created3];

GHC.Event.TimerManager.$tc'Created :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [7473777249114724674##
                                    2904627795268885228##
                                    GHC.Event.TimerManager.$trModule
                                    GHC.Event.TimerManager.$tc'Created2
                                    0#
                                    GHC.Event.TimerManager.$tc'Created1];

GHC.Event.TimerManager.$tc'Running2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Running"#;

GHC.Event.TimerManager.$tc'Running1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.TimerManager.$tc'Running2];

GHC.Event.TimerManager.$tc'Running :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [15425377252641674582##
                                    12404533232809671740##
                                    GHC.Event.TimerManager.$trModule
                                    GHC.Event.TimerManager.$tc'Running1
                                    0#
                                    GHC.Event.TimerManager.$tc'Created1];

GHC.Event.TimerManager.$tc'Dying2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Dying"#;

GHC.Event.TimerManager.$tc'Dying1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.TimerManager.$tc'Dying2];

GHC.Event.TimerManager.$tc'Dying :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [13405772281963838681##
                                    437803396301020926##
                                    GHC.Event.TimerManager.$trModule
                                    GHC.Event.TimerManager.$tc'Dying1
                                    0#
                                    GHC.Event.TimerManager.$tc'Created1];

GHC.Event.TimerManager.$tc'Finished2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Finished"#;

GHC.Event.TimerManager.$tc'Finished1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.TimerManager.$tc'Finished2];

GHC.Event.TimerManager.$tc'Finished :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [1288208730452846229##
                                    15347214930365004647##
                                    GHC.Event.TimerManager.$trModule
                                    GHC.Event.TimerManager.$tc'Finished1
                                    0#
                                    GHC.Event.TimerManager.$tc'Created1];

$krep12_rasDO :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [GHC.Event.TimerManager.$tc'Created1
                      GHC.Types.[]];

$krep13_rasDP :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.IORef.$tcIORef
                                              $krep12_rasDO];

GHC.Event.TimerManager.$tcTimerManager2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "TimerManager"#;

GHC.Event.TimerManager.$tcTimerManager1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.TimerManager.$tcTimerManager2];

GHC.Event.TimerManager.$tcTimerManager :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [3987042711794726631##
                                    6993782799294290901##
                                    GHC.Event.TimerManager.$trModule
                                    GHC.Event.TimerManager.$tcTimerManager1
                                    0#
                                    GHC.Types.krep$*];

$krep14_rasDQ :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.TimerManager.$tcTimerManager
                                              GHC.Types.[]];

$krep15_rasDR :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep1_rasDD $krep14_rasDQ];

$krep16_rasDS :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_rasDE $krep15_rasDR];

$krep17_rasDT :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep13_rasDP $krep16_rasDS];

$krep18_rasDU :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep10_rasDM $krep17_rasDT];

GHC.Event.TimerManager.$tc'TimerManager1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep4_rasDG $krep18_rasDU];

GHC.Event.TimerManager.$tc'TimerManager3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'TimerManager"#;

GHC.Event.TimerManager.$tc'TimerManager2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.TimerManager.$tc'TimerManager3];

GHC.Event.TimerManager.$tc'TimerManager :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [451007785877958328##
                                    8145550165147362681##
                                    GHC.Event.TimerManager.$trModule
                                    GHC.Event.TimerManager.$tc'TimerManager2
                                    0#
                                    GHC.Event.TimerManager.$tc'TimerManager1];

GHC.Event.TimerManager.$fShowState_$cshow
  :: GHC.Event.TimerManager.State -> GHC.Base.String
[GblId, Arity=1, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [x_sasFA]
        case x_sasFA of {
          GHC.Event.TimerManager.Created ->
              GHC.Event.TimerManager.$fShowState7;
          GHC.Event.TimerManager.Running ->
              GHC.Event.TimerManager.$fShowState5;
          GHC.Event.TimerManager.Dying ->
              GHC.Event.TimerManager.$fShowState3;
          GHC.Event.TimerManager.Finished ->
              GHC.Event.TimerManager.$fShowState1;
        };

GHC.Event.TimerManager.$fShowState_$cshowList
  :: [GHC.Event.TimerManager.State] -> GHC.Show.ShowS
[GblId, Arity=2, Str=<S,1*U><L,U>, Unf=OtherCon []] =
    [] \r [ls_sasFC s_sasFD]
        GHC.Show.showList__
            GHC.Event.TimerManager.$w$cshowsPrec ls_sasFC s_sasFD;

GHC.Event.TimerManager.$fShowState [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show GHC.Event.TimerManager.State
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Event.TimerManager.$fShowState_$cshowsPrec
                                    GHC.Event.TimerManager.$fShowState_$cshow
                                    GHC.Event.TimerManager.$fShowState_$cshowList];

GHC.Event.TimerManager.$fEqState_$c/= [InlPrag=INLINE (sat-args=2)]
  :: GHC.Event.TimerManager.State
     -> GHC.Event.TimerManager.State -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [eta_sasFE eta1_sasFF]
        case eta_sasFE of {
          GHC.Event.TimerManager.Created ->
              case eta1_sasFF of {
                __DEFAULT -> GHC.Types.True [];
                GHC.Event.TimerManager.Created -> GHC.Types.False [];
              };
          GHC.Event.TimerManager.Running ->
              case eta1_sasFF of {
                __DEFAULT -> GHC.Types.True [];
                GHC.Event.TimerManager.Running -> GHC.Types.False [];
              };
          GHC.Event.TimerManager.Dying ->
              case eta1_sasFF of {
                __DEFAULT -> GHC.Types.True [];
                GHC.Event.TimerManager.Dying -> GHC.Types.False [];
              };
          GHC.Event.TimerManager.Finished ->
              case eta1_sasFF of {
                __DEFAULT -> GHC.Types.True [];
                GHC.Event.TimerManager.Finished -> GHC.Types.False [];
              };
        };

GHC.Event.TimerManager.$fEqState [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq GHC.Event.TimerManager.State
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Event.TimerManager.$fEqState_$c==
                                     GHC.Event.TimerManager.$fEqState_$c/=];

GHC.Event.TimerManager.$weditTimeouts [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.MutVar#
       GHC.Prim.RealWorld GHC.Event.TimerManager.TimeoutQueue
     -> GHC.Prim.MutVar# GHC.Prim.RealWorld GHC.Event.TimerManager.State
     -> GHC.Prim.MutableByteArray# GHC.Prim.RealWorld
     -> GHC.Prim.Int#
     -> GHC.Prim.MutVar# GHC.Prim.RealWorld GHC.Types.Bool
     -> GHC.Event.TimerManager.TimeoutEdit
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=7,
 Str=<S,U><L,A><L,A><L,U><L,U><L,C(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ww_sasFL
           ww1_sasFM
           ww2_sasFN
           ww3_sasFO
           ww4_sasFP
           w_sasFQ
           w1_sasFR]
        let {
          sat_sasGt [Occ=Once]
            :: GHC.Event.TimerManager.TimeoutQueue
               -> (GHC.Event.TimerManager.TimeoutQueue, GHC.Types.Bool)
          [LclId] =
              [w_sasFQ] \r [a1_sasFS]
                  case w_sasFQ a1_sasFS of a'1_sasFT {
                    __DEFAULT ->
                        let {
                          sat_sasGs [Occ=Once] :: GHC.Types.Bool
                          [LclId] =
                              [a1_sasFS a'1_sasFT] \u []
                                  case a1_sasFS of {
                                    GHC.Event.PSQ.Bin _ [Occ=Dead]
                                                      dt1_sasFW [Occ=Once*]
                                                      _ [Occ=Dead]
                                                      _ [Occ=Dead]
                                                      _ [Occ=Dead]
                                                      _ [Occ=Dead] ->
                                        case a'1_sasFT of {
                                          GHC.Event.PSQ.Bin _ [Occ=Dead]
                                                            dt5_sasG3 [Occ=Once]
                                                            _ [Occ=Dead]
                                                            _ [Occ=Dead]
                                                            _ [Occ=Dead]
                                                            _ [Occ=Dead] ->
                                              case neWord# [dt1_sasFW dt5_sasG3] of sat_sasG8 {
                                                __DEFAULT -> tagToEnum# [sat_sasG8];
                                              };
                                          GHC.Event.PSQ.Tip _ [Occ=Dead]
                                                            dt5_sasGa [Occ=Once]
                                                            _ [Occ=Dead] ->
                                              case neWord# [dt1_sasFW dt5_sasGa] of sat_sasGc {
                                                __DEFAULT -> tagToEnum# [sat_sasGc];
                                              };
                                          GHC.Event.PSQ.Nil -> GHC.Types.True [];
                                        };
                                    GHC.Event.PSQ.Tip _ [Occ=Dead]
                                                      dt1_sasGe [Occ=Once*]
                                                      _ [Occ=Dead] ->
                                        case a'1_sasFT of {
                                          GHC.Event.PSQ.Bin _ [Occ=Dead]
                                                            dt3_sasGi [Occ=Once]
                                                            _ [Occ=Dead]
                                                            _ [Occ=Dead]
                                                            _ [Occ=Dead]
                                                            _ [Occ=Dead] ->
                                              case neWord# [dt1_sasGe dt3_sasGi] of sat_sasGn {
                                                __DEFAULT -> tagToEnum# [sat_sasGn];
                                              };
                                          GHC.Event.PSQ.Tip _ [Occ=Dead]
                                                            dt3_sasGp [Occ=Once]
                                                            _ [Occ=Dead] ->
                                              case neWord# [dt1_sasGe dt3_sasGp] of sat_sasGr {
                                                __DEFAULT -> tagToEnum# [sat_sasGr];
                                              };
                                          GHC.Event.PSQ.Nil -> GHC.Types.True [];
                                        };
                                    GHC.Event.PSQ.Nil -> GHC.Types.True [];
                                  };
                        } in  (,) [a'1_sasFT sat_sasGs];
                  };
        } in 
          case atomicModifyMutVar# [ww_sasFL sat_sasGt w1_sasFR] of {
            (#,#) ipv_sasGv [Occ=Once*] ipv1_sasGw [Occ=Once!] ->
                case ipv1_sasGw of {
                  GHC.Types.False -> (#,#) [ipv_sasGv GHC.Tuple.()];
                  GHC.Types.True ->
                      GHC.Event.Control.$wsendWakeup ww3_sasFO ww4_sasFP ipv_sasGv;
                };
          };

GHC.Event.TimerManager.unregisterTimeout2 [InlPrag=NOUSERINLINE[0]]
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Event.TimerManager.TimeoutEdit
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=3,
 Str=<S(LSSSLLSLS),1*U(A,U,1*U,1*U,A,A,U,A,U)><L,C(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sasGy w1_sasGz w2_sasGA]
        case w_sasGy of {
          GHC.Event.TimerManager.TimerManager _ [Occ=Dead]
                                              ww2_sasGD [Occ=Once]
                                              ww3_sasGE [Occ=Once]
                                              ww4_sasGF [Occ=Once]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              ww7_sasGI [Occ=Once]
                                              _ [Occ=Dead]
                                              ww9_sasGK [Occ=Once] ->
              GHC.Event.TimerManager.$weditTimeouts
                  ww2_sasGD
                  ww3_sasGE
                  ww4_sasGF
                  ww7_sasGI
                  ww9_sasGK
                  w1_sasGz
                  w2_sasGA;
        };

GHC.Event.TimerManager.unregisterTimeout1
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Event.TimerManager.TimeoutKey
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=3,
 Str=<S(LSLLLLLLL),1*U(A,U,A,A,A,A,U,A,U)><L,U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [mgr_sasGL ds_sasGM eta_sasGN]
        case mgr_sasGL of {
          GHC.Event.TimerManager.TimerManager _ [Occ=Dead]
                                              ww2_sasGQ [Occ=Once]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              ww7_sasGV [Occ=Once]
                                              _ [Occ=Dead]
                                              ww9_sasGX [Occ=Once] ->
              let {
                sat_sasHz [Occ=Once]
                  :: GHC.Event.TimerManager.TimeoutQueue
                     -> (GHC.Event.TimerManager.TimeoutQueue, GHC.Types.Bool)
                [LclId] =
                    [ds_sasGM] \r [a1_sasGY]
                        case GHC.Event.PSQ.delete ds_sasGM a1_sasGY of a'1_sasGZ {
                          __DEFAULT ->
                              let {
                                sat_sasHy [Occ=Once] :: GHC.Types.Bool
                                [LclId] =
                                    [a1_sasGY a'1_sasGZ] \u []
                                        case a1_sasGY of {
                                          GHC.Event.PSQ.Bin _ [Occ=Dead]
                                                            dt1_sasH2 [Occ=Once*]
                                                            _ [Occ=Dead]
                                                            _ [Occ=Dead]
                                                            _ [Occ=Dead]
                                                            _ [Occ=Dead] ->
                                              case a'1_sasGZ of {
                                                GHC.Event.PSQ.Bin _ [Occ=Dead]
                                                                  dt5_sasH9 [Occ=Once]
                                                                  _ [Occ=Dead]
                                                                  _ [Occ=Dead]
                                                                  _ [Occ=Dead]
                                                                  _ [Occ=Dead] ->
                                                    case
                                                        neWord# [dt1_sasH2 dt5_sasH9]
                                                    of
                                                    sat_sasHe
                                                    { __DEFAULT -> tagToEnum# [sat_sasHe];
                                                    };
                                                GHC.Event.PSQ.Tip _ [Occ=Dead]
                                                                  dt5_sasHg [Occ=Once]
                                                                  _ [Occ=Dead] ->
                                                    case
                                                        neWord# [dt1_sasH2 dt5_sasHg]
                                                    of
                                                    sat_sasHi
                                                    { __DEFAULT -> tagToEnum# [sat_sasHi];
                                                    };
                                                GHC.Event.PSQ.Nil -> GHC.Types.True [];
                                              };
                                          GHC.Event.PSQ.Tip _ [Occ=Dead]
                                                            dt1_sasHk [Occ=Once*]
                                                            _ [Occ=Dead] ->
                                              case a'1_sasGZ of {
                                                GHC.Event.PSQ.Bin _ [Occ=Dead]
                                                                  dt3_sasHo [Occ=Once]
                                                                  _ [Occ=Dead]
                                                                  _ [Occ=Dead]
                                                                  _ [Occ=Dead]
                                                                  _ [Occ=Dead] ->
                                                    case
                                                        neWord# [dt1_sasHk dt3_sasHo]
                                                    of
                                                    sat_sasHt
                                                    { __DEFAULT -> tagToEnum# [sat_sasHt];
                                                    };
                                                GHC.Event.PSQ.Tip _ [Occ=Dead]
                                                                  dt3_sasHv [Occ=Once]
                                                                  _ [Occ=Dead] ->
                                                    case
                                                        neWord# [dt1_sasHk dt3_sasHv]
                                                    of
                                                    sat_sasHx
                                                    { __DEFAULT -> tagToEnum# [sat_sasHx];
                                                    };
                                                GHC.Event.PSQ.Nil -> GHC.Types.True [];
                                              };
                                          GHC.Event.PSQ.Nil -> GHC.Types.True [];
                                        };
                              } in  (,) [a'1_sasGZ sat_sasHy];
                        };
              } in 
                case atomicModifyMutVar# [ww2_sasGQ sat_sasHz eta_sasGN] of {
                  (#,#) ipv_sasHB [Occ=Once*] ipv1_sasHC [Occ=Once!] ->
                      case ipv1_sasHC of {
                        GHC.Types.False -> (#,#) [ipv_sasHB GHC.Tuple.()];
                        GHC.Types.True ->
                            GHC.Event.Control.$wsendWakeup ww7_sasGV ww9_sasGX ipv_sasHB;
                      };
                };
        };

GHC.Event.TimerManager.unregisterTimeout
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Event.TimerManager.TimeoutKey -> GHC.Types.IO ()
[GblId,
 Arity=3,
 Str=<S(LSLLLLLLL),1*U(A,U,A,A,A,A,U,A,U)><L,U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.Event.TimerManager.unregisterTimeout1 eta_B3 eta_B2 eta_B1;

GHC.Event.TimerManager.$wregisterTimeout [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.MutVar#
       GHC.Prim.RealWorld GHC.Event.TimerManager.TimeoutQueue
     -> GHC.Prim.MutVar# GHC.Prim.RealWorld GHC.Event.TimerManager.State
     -> GHC.Prim.MutableByteArray# GHC.Prim.RealWorld
     -> GHC.Prim.Int#
     -> GHC.Prim.MutVar# GHC.Prim.RealWorld GHC.Types.Bool
     -> GHC.Prim.Int#
     -> GHC.Event.TimerManager.TimeoutCallback
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Event.TimerManager.TimeoutKey #)
[GblId,
 Arity=8,
 Str=<L,U><L,A><S,U><L,U><L,U><S,U><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [ww_sasHE
           ww1_sasHF
           ww2_sasHG
           ww3_sasHH
           ww4_sasHI
           ww5_sasHJ
           w_sasHK
           w1_sasHL]
        case fetchAddIntArray# [ww2_sasHG 0# 1# w1_sasHL] of {
          (#,#) ipv_sasHN [Occ=Once*] ipv1_sasHO ->
              let {
                ipv2_sasHP [Dmd=<L,U(U)>] :: GHC.Types.Int
                [LclId, Unf=OtherCon []] =
                    CCCS GHC.Types.I#! [ipv1_sasHO];
              } in 
                case <=# [ww5_sasHJ 0#] of {
                  __DEFAULT ->
                      case __pkg_ccall base-4.11.0.0 [ipv_sasHN] of {
                        (#,#) ds2_sasHT [Occ=Once] ds3_sasHU [Occ=Once] ->
                            case int2Word# [ww5_sasHJ] of sat_sasHW {
                              __DEFAULT ->
                                  case timesWord# [sat_sasHW 1000##] of sat_sasHX {
                                    __DEFAULT ->
                                        case plusWord# [sat_sasHX ds3_sasHU] of p_sasHV {
                                          __DEFAULT ->
                                              let {
                                                sat_sasIA [Occ=Once]
                                                  :: GHC.Event.TimerManager.TimeoutQueue
                                                     -> (GHC.Event.TimerManager.TimeoutQueue,
                                                         GHC.Types.Bool)
                                                [LclId] =
                                                    [w_sasHK
                                                     ipv1_sasHO
                                                     ipv2_sasHP
                                                     p_sasHV] \r [a1_sasHY]
                                                        case
                                                            GHC.Event.PSQ.delete ipv2_sasHP a1_sasHY
                                                        of
                                                        sat_sasHZ
                                                        { __DEFAULT ->
                                                              case
                                                                  GHC.Event.PSQ.$wunsafeInsertNew
                                                                      ipv1_sasHO
                                                                      p_sasHV
                                                                      w_sasHK
                                                                      sat_sasHZ
                                                              of
                                                              a'1_sasI0
                                                              { __DEFAULT ->
                                                                    let {
                                                                      sat_sasIz [Occ=Once]
                                                                        :: GHC.Types.Bool
                                                                      [LclId] =
                                                                          [a1_sasHY a'1_sasI0] \u []
                                                                              case a1_sasHY of {
                                                                                GHC.Event.PSQ.Bin _ [Occ=Dead]
                                                                                                  dt1_sasI3 [Occ=Once*]
                                                                                                  _ [Occ=Dead]
                                                                                                  _ [Occ=Dead]
                                                                                                  _ [Occ=Dead]
                                                                                                  _ [Occ=Dead] ->
                                                                                    case
                                                                                        a'1_sasI0
                                                                                    of
                                                                                    { GHC.Event.PSQ.Bin _ [Occ=Dead]
                                                                                                        dt5_sasIa [Occ=Once]
                                                                                                        _ [Occ=Dead]
                                                                                                        _ [Occ=Dead]
                                                                                                        _ [Occ=Dead]
                                                                                                        _ [Occ=Dead] ->
                                                                                          case
                                                                                              neWord# [dt1_sasI3
                                                                                                       dt5_sasIa]
                                                                                          of
                                                                                          sat_sasIf
                                                                                          { __DEFAULT ->
                                                                                                tagToEnum# [sat_sasIf];
                                                                                          };
                                                                                      GHC.Event.PSQ.Tip _ [Occ=Dead]
                                                                                                        dt5_sasIh [Occ=Once]
                                                                                                        _ [Occ=Dead] ->
                                                                                          case
                                                                                              neWord# [dt1_sasI3
                                                                                                       dt5_sasIh]
                                                                                          of
                                                                                          sat_sasIj
                                                                                          { __DEFAULT ->
                                                                                                tagToEnum# [sat_sasIj];
                                                                                          };
                                                                                      GHC.Event.PSQ.Nil ->
                                                                                          GHC.Types.True [];
                                                                                    };
                                                                                GHC.Event.PSQ.Tip _ [Occ=Dead]
                                                                                                  dt1_sasIl [Occ=Once*]
                                                                                                  _ [Occ=Dead] ->
                                                                                    case
                                                                                        a'1_sasI0
                                                                                    of
                                                                                    { GHC.Event.PSQ.Bin _ [Occ=Dead]
                                                                                                        dt3_sasIp [Occ=Once]
                                                                                                        _ [Occ=Dead]
                                                                                                        _ [Occ=Dead]
                                                                                                        _ [Occ=Dead]
                                                                                                        _ [Occ=Dead] ->
                                                                                          case
                                                                                              neWord# [dt1_sasIl
                                                                                                       dt3_sasIp]
                                                                                          of
                                                                                          sat_sasIu
                                                                                          { __DEFAULT ->
                                                                                                tagToEnum# [sat_sasIu];
                                                                                          };
                                                                                      GHC.Event.PSQ.Tip _ [Occ=Dead]
                                                                                                        dt3_sasIw [Occ=Once]
                                                                                                        _ [Occ=Dead] ->
                                                                                          case
                                                                                              neWord# [dt1_sasIl
                                                                                                       dt3_sasIw]
                                                                                          of
                                                                                          sat_sasIy
                                                                                          { __DEFAULT ->
                                                                                                tagToEnum# [sat_sasIy];
                                                                                          };
                                                                                      GHC.Event.PSQ.Nil ->
                                                                                          GHC.Types.True [];
                                                                                    };
                                                                                GHC.Event.PSQ.Nil ->
                                                                                    GHC.Types.True [];
                                                                              };
                                                                    } in  (,) [a'1_sasI0 sat_sasIz];
                                                              };
                                                        };
                                              } in 
                                                case
                                                    atomicModifyMutVar# [ww_sasHE
                                                                         sat_sasIA
                                                                         ds2_sasHT]
                                                of
                                                { (#,#) ipv3_sasIC [Occ=Once*]
                                                        ipv4_sasID [Occ=Once!] ->
                                                      case ipv4_sasID of {
                                                        GHC.Types.False ->
                                                            (#,#) [ipv3_sasIC ipv2_sasHP];
                                                        GHC.Types.True ->
                                                            case
                                                                narrow32Int# [ww3_sasHH]
                                                            of
                                                            sat_sasIG
                                                            { __DEFAULT ->
                                                                  case
                                                                      __pkg_ccall base-4.11.0.0 [sat_sasIG
                                                                                                 1##
                                                                                                 ipv3_sasIC]
                                                                  of
                                                                  { (#,#) ds_sasII [Occ=Once*]
                                                                          ds5_sasIJ [Occ=Once] ->
                                                                        case
                                                                            narrow32Int# [ds5_sasIJ]
                                                                        of
                                                                        { __DEFAULT ->
                                                                              case
                                                                                  __pkg_ccall base-4.11.0.0 [ds_sasII]
                                                                              of
                                                                              { (#,#) ds6_sasIN [Occ=Once]
                                                                                      ds7_sasIO [Occ=Once] ->
                                                                                    case
                                                                                        readMutVar# [ww4_sasHI
                                                                                                     ds6_sasIN]
                                                                                    of
                                                                                    { (#,#) ipv5_sasIQ [Occ=Once*]
                                                                                            ipv6_sasIR [Occ=Once!] ->
                                                                                          case
                                                                                              ipv6_sasIR
                                                                                          of
                                                                                          { GHC.Types.False ->
                                                                                                case
                                                                                                    Foreign.C.Error.throwErrno1
                                                                                                        GHC.Event.Control.sendWakeup2
                                                                                                        ipv5_sasIQ
                                                                                                of
                                                                                                { (#,#) ipv7_sasIU [Occ=Once]
                                                                                                        _ [Occ=Dead] ->
                                                                                                      (#,#) [ipv7_sasIU
                                                                                                             ipv2_sasHP];
                                                                                                };
                                                                                            GHC.Types.True ->
                                                                                                case
                                                                                                    narrow32Int# [ds7_sasIO]
                                                                                                of
                                                                                                { __DEFAULT ->
                                                                                                      case
                                                                                                          Foreign.C.Error.throwErrno1
                                                                                                              GHC.Event.Control.sendWakeup2
                                                                                                              ipv5_sasIQ
                                                                                                      of
                                                                                                      { (#,#) ipv7_sasIY [Occ=Once]
                                                                                                              _ [Occ=Dead] ->
                                                                                                            (#,#) [ipv7_sasIY
                                                                                                                   ipv2_sasHP];
                                                                                                      };
                                                                                                  9# ->
                                                                                                      (#,#) [ipv5_sasIQ
                                                                                                             ipv2_sasHP];
                                                                                                };
                                                                                          };
                                                                                    };
                                                                              };
                                                                          0# ->
                                                                              (#,#) [ds_sasII
                                                                                     ipv2_sasHP];
                                                                        };
                                                                  };
                                                            };
                                                      };
                                                };
                                        };
                                  };
                            };
                      };
                  1# ->
                      case w_sasHK ipv_sasHN of {
                        (#,#) ipv3_sasJ1 [Occ=Once] _ [Occ=Dead] ->
                            (#,#) [ipv3_sasJ1 ipv2_sasHP];
                      };
                };
        };

GHC.Event.TimerManager.registerTimeout1 [InlPrag=NOUSERINLINE[0]]
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Types.Int
     -> GHC.Event.TimerManager.TimeoutCallback
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Event.TimerManager.TimeoutKey #)
[GblId,
 Arity=4,
 Str=<S(LSSSLLSLS),1*U(A,U,1*U,U,A,A,U,A,U)><S(S),1*U(U)><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sasJ3 w1_sasJ4 w2_sasJ5 w3_sasJ6]
        case w_sasJ3 of {
          GHC.Event.TimerManager.TimerManager _ [Occ=Dead]
                                              ww2_sasJ9 [Occ=Once]
                                              ww3_sasJa [Occ=Once]
                                              ww4_sasJb [Occ=Once]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              ww7_sasJe [Occ=Once]
                                              _ [Occ=Dead]
                                              ww9_sasJg [Occ=Once] ->
              case w1_sasJ4 of {
                GHC.Types.I# ww11_sasJi [Occ=Once] ->
                    GHC.Event.TimerManager.$wregisterTimeout
                        ww2_sasJ9
                        ww3_sasJa
                        ww4_sasJb
                        ww7_sasJe
                        ww9_sasJg
                        ww11_sasJi
                        w2_sasJ5
                        w3_sasJ6;
              };
        };

GHC.Event.TimerManager.registerTimeout
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Types.Int
     -> GHC.Event.TimerManager.TimeoutCallback
     -> GHC.Types.IO GHC.Event.TimerManager.TimeoutKey
[GblId,
 Arity=4,
 Str=<S(LSSSLLSLS),1*U(A,U,1*U,U,A,A,U,A,U)><S(S),1*U(U)><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.Event.TimerManager.registerTimeout1
            eta_B4 eta_B3 eta_B2 eta_B1;

GHC.Event.TimerManager.updateTimeout1
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Event.TimerManager.TimeoutKey
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Str=<L,1*U(A,U,A,A,A,A,U,A,U)><L,U(U)><L,1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [mgr_sasJj ds_sasJk us_sasJl s_sasJm]
        case __pkg_ccall base-4.11.0.0 [s_sasJm] of {
          (#,#) ds1_sasJp [Occ=Once] ds2_sasJq [Occ=Once] ->
              case mgr_sasJj of {
                GHC.Event.TimerManager.TimerManager _ [Occ=Dead]
                                                    ww2_sasJt [Occ=Once]
                                                    _ [Occ=Dead]
                                                    _ [Occ=Dead]
                                                    _ [Occ=Dead]
                                                    _ [Occ=Dead]
                                                    ww7_sasJy [Occ=Once]
                                                    _ [Occ=Dead]
                                                    ww9_sasJA [Occ=Once] ->
                    let {
                      x_sasJB [Occ=OnceL!, Dmd=<L,U(U)>] :: GHC.Word.Word64
                      [LclId] =
                          [us_sasJl ds2_sasJq] \u []
                              case us_sasJl of {
                                GHC.Types.I# x#_sasJD [Occ=Once] ->
                                    case int2Word# [x#_sasJD] of sat_sasJE {
                                      __DEFAULT ->
                                          case timesWord# [sat_sasJE 1000##] of sat_sasJF {
                                            __DEFAULT ->
                                                case plusWord# [sat_sasJF ds2_sasJq] of sat_sasJG {
                                                  __DEFAULT -> GHC.Word.W64# [sat_sasJG];
                                                };
                                          };
                                    };
                              }; } in
                    let {
                      sat_sasKv [Occ=Once]
                        :: GHC.Event.TimerManager.TimeoutQueue
                           -> (GHC.Event.TimerManager.TimeoutQueue, GHC.Types.Bool)
                      [LclId] =
                          [ds_sasJk x_sasJB] \r [a1_sasJH]
                              case GHC.Event.PSQ.deleteView ds_sasJk a1_sasJH of {
                                GHC.Base.Nothing ->
                                    case a1_sasJH of a'1_sasJJ {
                                      __DEFAULT ->
                                          let {
                                            sat_sasJL [Occ=Once] :: GHC.Types.Bool
                                            [LclId] =
                                                [a'1_sasJJ] \u []
                                                    case a'1_sasJJ of {
                                                      __DEFAULT -> GHC.Types.False [];
                                                      GHC.Event.PSQ.Nil -> GHC.Types.True [];
                                                    };
                                          } in  (,) [a'1_sasJJ sat_sasJL];
                                    };
                                GHC.Base.Just ds4_sasJM [Occ=Once!] ->
                                    case ds4_sasJM of {
                                      (,,) _ [Occ=Dead] v_sasJP [Occ=Once] t0'_sasJQ [Occ=Once] ->
                                          case ds_sasJk of {
                                            GHC.Types.I# ww11_sasJS [Occ=Once] ->
                                                case x_sasJB of {
                                                  GHC.Word.W64# ww13_sasJU [Occ=Once] ->
                                                      case
                                                          GHC.Event.PSQ.$wunsafeInsertNew
                                                              ww11_sasJS
                                                              ww13_sasJU
                                                              v_sasJP
                                                              t0'_sasJQ
                                                      of
                                                      a'1_sasJV
                                                      { __DEFAULT ->
                                                            let {
                                                              sat_sasKu [Occ=Once] :: GHC.Types.Bool
                                                              [LclId] =
                                                                  [a1_sasJH a'1_sasJV] \u []
                                                                      case a1_sasJH of {
                                                                        GHC.Event.PSQ.Bin _ [Occ=Dead]
                                                                                          dt1_sasJY [Occ=Once*]
                                                                                          _ [Occ=Dead]
                                                                                          _ [Occ=Dead]
                                                                                          _ [Occ=Dead]
                                                                                          _ [Occ=Dead] ->
                                                                            case a'1_sasJV of {
                                                                              GHC.Event.PSQ.Bin _ [Occ=Dead]
                                                                                                dt5_sasK5 [Occ=Once]
                                                                                                _ [Occ=Dead]
                                                                                                _ [Occ=Dead]
                                                                                                _ [Occ=Dead]
                                                                                                _ [Occ=Dead] ->
                                                                                  case
                                                                                      neWord# [dt1_sasJY
                                                                                               dt5_sasK5]
                                                                                  of
                                                                                  sat_sasKa
                                                                                  { __DEFAULT ->
                                                                                        tagToEnum# [sat_sasKa];
                                                                                  };
                                                                              GHC.Event.PSQ.Tip _ [Occ=Dead]
                                                                                                dt5_sasKc [Occ=Once]
                                                                                                _ [Occ=Dead] ->
                                                                                  case
                                                                                      neWord# [dt1_sasJY
                                                                                               dt5_sasKc]
                                                                                  of
                                                                                  sat_sasKe
                                                                                  { __DEFAULT ->
                                                                                        tagToEnum# [sat_sasKe];
                                                                                  };
                                                                              GHC.Event.PSQ.Nil ->
                                                                                  GHC.Types.True [];
                                                                            };
                                                                        GHC.Event.PSQ.Tip _ [Occ=Dead]
                                                                                          dt1_sasKg [Occ=Once*]
                                                                                          _ [Occ=Dead] ->
                                                                            case a'1_sasJV of {
                                                                              GHC.Event.PSQ.Bin _ [Occ=Dead]
                                                                                                dt3_sasKk [Occ=Once]
                                                                                                _ [Occ=Dead]
                                                                                                _ [Occ=Dead]
                                                                                                _ [Occ=Dead]
                                                                                                _ [Occ=Dead] ->
                                                                                  case
                                                                                      neWord# [dt1_sasKg
                                                                                               dt3_sasKk]
                                                                                  of
                                                                                  sat_sasKp
                                                                                  { __DEFAULT ->
                                                                                        tagToEnum# [sat_sasKp];
                                                                                  };
                                                                              GHC.Event.PSQ.Tip _ [Occ=Dead]
                                                                                                dt3_sasKr [Occ=Once]
                                                                                                _ [Occ=Dead] ->
                                                                                  case
                                                                                      neWord# [dt1_sasKg
                                                                                               dt3_sasKr]
                                                                                  of
                                                                                  sat_sasKt
                                                                                  { __DEFAULT ->
                                                                                        tagToEnum# [sat_sasKt];
                                                                                  };
                                                                              GHC.Event.PSQ.Nil ->
                                                                                  GHC.Types.True [];
                                                                            };
                                                                        GHC.Event.PSQ.Nil ->
                                                                            GHC.Types.True [];
                                                                      };
                                                            } in  (,) [a'1_sasJV sat_sasKu];
                                                      };
                                                };
                                          };
                                    };
                              };
                    } in 
                      case atomicModifyMutVar# [ww2_sasJt sat_sasKv ds1_sasJp] of {
                        (#,#) ipv_sasKx [Occ=Once*] ipv1_sasKy [Occ=Once!] ->
                            case ipv1_sasKy of {
                              GHC.Types.False -> (#,#) [ipv_sasKx GHC.Tuple.()];
                              GHC.Types.True ->
                                  GHC.Event.Control.$wsendWakeup ww7_sasJy ww9_sasJA ipv_sasKx;
                            };
                      };
              };
        };

GHC.Event.TimerManager.updateTimeout
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Event.TimerManager.TimeoutKey
     -> GHC.Types.Int
     -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Str=<L,1*U(A,U,A,A,A,A,U,A,U)><L,U(U)><L,1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.Event.TimerManager.updateTimeout1 eta_B4 eta_B3 eta_B2 eta_B1;

GHC.Event.TimerManager.cleanup1 [InlPrag=NOUSERINLINE[0]]
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SLSLLLLSL),1*U(U,A,U,A,U,U,U,U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sasKA w1_sasKB]
        case w_sasKA of {
          GHC.Event.TimerManager.TimerManager ww1_sasKD [Occ=Once!]
                                              _ [Occ=Dead]
                                              ww3_sasKF [Occ=Once]
                                              _ [Occ=Dead]
                                              ww5_sasKH [Occ=Once]
                                              ww6_sasKI [Occ=Once]
                                              ww7_sasKJ [Occ=Once*]
                                              ww8_sasKK [Occ=Once!]
                                              ww9_sasKL [Occ=Once] ->
              case ww1_sasKD of {
                GHC.Event.Internal.Backend bState_sasKN [Occ=Once]
                                           _ [Occ=Dead]
                                           _ [Occ=Dead]
                                           _ [Occ=Dead]
                                           bDelete_sasKR [Occ=Once!] ->
                    case
                        writeMutVar# [ww3_sasKF GHC.Event.TimerManager.Finished w1_sasKB]
                    of
                    s2#_sasKS
                    { __DEFAULT ->
                          case bDelete_sasKR bState_sasKN s2#_sasKS of {
                            (#,#) ipv_sasKU [Occ=Once] _ [Occ=Dead] ->
                                case
                                    atomicModifyMutVar# [ww9_sasKL
                                                         GHC.Event.Control.closeControl2
                                                         ipv_sasKU]
                                of
                                { (#,#) ipv2_sasKX [Occ=Once] _ [Occ=Dead] ->
                                      case narrow32Int# [ww5_sasKH] of sat_sasL0 {
                                        __DEFAULT ->
                                            case
                                                __pkg_ccall base-4.11.0.0 [sat_sasL0 ipv2_sasKX]
                                            of
                                            { (#,#) ds6_sasL2 [Occ=Once] _ [Occ=Dead] ->
                                                  case narrow32Int# [ww6_sasKI] of sat_sasL5 {
                                                    __DEFAULT ->
                                                        case
                                                            __pkg_ccall base-4.11.0.0 [sat_sasL5
                                                                                       ds6_sasL2]
                                                        of
                                                        { (#,#) ds8_sasL7 [Occ=Once*]
                                                                _ [Occ=Dead] ->
                                                              case ww8_sasKK of {
                                                                GHC.Types.False ->
                                                                    case
                                                                        narrow32Int# [ww7_sasKJ]
                                                                    of
                                                                    sat_sasLb
                                                                    { __DEFAULT ->
                                                                          case
                                                                              __pkg_ccall base-4.11.0.0 [sat_sasLb
                                                                                                         ds8_sasL7]
                                                                          of
                                                                          { (#,#) ds10_sasLd [Occ=Once]
                                                                                  _ [Occ=Dead] ->
                                                                                (#,#) [ds10_sasLd
                                                                                       GHC.Tuple.()];
                                                                          };
                                                                    };
                                                                GHC.Types.True ->
                                                                    case
                                                                        __pkg_ccall base-4.11.0.0 [-1#
                                                                                                   ds8_sasL7]
                                                                    of
                                                                    { Unit# ds_sasLh [Occ=Once] ->
                                                                          case
                                                                              narrow32Int# [ww7_sasKJ]
                                                                          of
                                                                          sat_sasLj
                                                                          { __DEFAULT ->
                                                                                case
                                                                                    __pkg_ccall base-4.11.0.0 [sat_sasLj
                                                                                                               ds_sasLh]
                                                                                of
                                                                                { (#,#) ds10_sasLl [Occ=Once]
                                                                                        _ [Occ=Dead] ->
                                                                                      (#,#) [ds10_sasLl
                                                                                             GHC.Tuple.()];
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.Event.TimerManager.cleanup
  :: GHC.Event.TimerManager.TimerManager -> GHC.Types.IO ()
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SLSLLLLSL),1*U(U,A,U,A,U,U,U,U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1]
        GHC.Event.TimerManager.cleanup1 eta_B2 eta_B1;

GHC.Event.TimerManager.finished1
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(LLSLLLLLL),1*U(A,A,U,A,A,A,A,A,A)><S,U>,
 Unf=OtherCon []] =
    [] \r [mgr_sasLn s_sasLo]
        case mgr_sasLn of {
          GHC.Event.TimerManager.TimerManager _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              dt1_sasLs [Occ=Once]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead] ->
              case readMutVar# [dt1_sasLs s_sasLo] of {
                (#,#) ipv_sasLA [Occ=Once] ipv1_sasLB [Occ=Once!] ->
                    let {
                      sat_sasLD [Occ=Once] :: GHC.Types.Bool
                      [LclId] =
                          [ipv1_sasLB] \u []
                              case ipv1_sasLB of {
                                __DEFAULT -> GHC.Types.False [];
                                GHC.Event.TimerManager.Finished -> GHC.Types.True [];
                              };
                    } in  (#,#) [ipv_sasLA sat_sasLD];
              };
        };

GHC.Event.TimerManager.finished
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Types.IO GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(LLSLLLLLL),1*U(A,A,U,A,A,A,A,A,A)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1]
        GHC.Event.TimerManager.finished1 eta_B2 eta_B1;

GHC.Event.TimerManager.shutdown2
  :: GHC.Event.TimerManager.State
     -> (GHC.Event.TimerManager.State, GHC.Event.TimerManager.State)
[GblId, Arity=1, Caf=NoCafRefs, Str=<L,U>m, Unf=OtherCon []] =
    [] \r [a1_sasLE] (,) [GHC.Event.TimerManager.Dying a1_sasLE];

GHC.Event.TimerManager.shutdown1
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=2,
 Str=<S(LLSLLLLLL),1*U(A,A,U,A,A,U,A,A,1*U)><S,U>,
 Unf=OtherCon []] =
    [] \r [mgr_sasLF s_sasLG]
        case mgr_sasLF of {
          GHC.Event.TimerManager.TimerManager _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              dt1_sasLK [Occ=Once]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              dt4_sasLN [Occ=Once]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              dt7_sasLQ [Occ=Once] ->
              case
                  atomicModifyMutVar# [dt1_sasLK
                                       GHC.Event.TimerManager.shutdown2
                                       s_sasLG]
              of
              { (#,#) ipv_sasLS [Occ=Once*] ipv1_sasLT [Occ=Once!] ->
                    case ipv1_sasLT of {
                      __DEFAULT -> (#,#) [ipv_sasLS GHC.Tuple.()];
                      GHC.Event.TimerManager.Running ->
                          GHC.Event.Control.$wsendDie dt4_sasLN dt7_sasLQ ipv_sasLS;
                    };
              };
        };

GHC.Event.TimerManager.shutdown
  :: GHC.Event.TimerManager.TimerManager -> GHC.Types.IO ()
[GblId,
 Arity=2,
 Str=<S(LLSLLLLLL),1*U(A,A,U,A,A,U,A,A,1*U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1]
        GHC.Event.TimerManager.shutdown1 eta_B2 eta_B1;

GHC.Event.TimerManager.new3
  :: GHC.Event.TimerManager.State
     -> (GHC.Event.TimerManager.State, GHC.Event.TimerManager.State)
[GblId, Arity=1, Caf=NoCafRefs, Str=<L,U>m, Unf=OtherCon []] =
    [] \r [a1_sasLV] (,) [GHC.Event.TimerManager.Finished a1_sasLV];

GHC.Event.TimerManager.new2
  :: GHC.Event.Internal.Backend
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Event.TimerManager.TimerManager #)
[GblId, Arity=2, Str=<L,U><S,U>, Unf=OtherCon []] =
    [] \r [be_sasLW s_sasLX]
        case newMutVar# [GHC.Event.PSQ.Nil s_sasLX] of {
          (#,#) ipv_sasLZ [Occ=Once] ipv1_sasM0 [Occ=Once] ->
              case GHC.Event.Control.newControl1 GHC.Types.True ipv_sasLZ of {
                (#,#) ipv2_sasM2 [Occ=Once] ipv3_sasM3 ->
                    case newMutVar# [GHC.Event.TimerManager.Created ipv2_sasM2] of {
                      (#,#) ipv4_sasM5 [Occ=Once] ipv5_sasM6 ->
                          case newByteArray# [8# ipv4_sasM5] of {
                            (#,#) ipv6_sasM8 [Occ=Once] ipv7_sasM9 [Occ=Once] ->
                                let {
                                  sat_sasMp [Occ=Once]
                                    :: GHC.Prim.State# GHC.Prim.RealWorld
                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                  [LclId] =
                                      [be_sasLW ipv3_sasM3 ipv5_sasM6] \r [s1_sasMb]
                                          case
                                              atomicModifyMutVar# [ipv5_sasM6
                                                                   GHC.Event.TimerManager.new3
                                                                   s1_sasMb]
                                          of
                                          { (#,#) ipv8_sasMd [Occ=Once*] ipv9_sasMe [Occ=Once!] ->
                                                case ipv9_sasMe of {
                                                  __DEFAULT ->
                                                      case be_sasLW of {
                                                        GHC.Event.Internal.Backend bState_sasMh [Occ=Once]
                                                                                   _ [Occ=Dead]
                                                                                   _ [Occ=Dead]
                                                                                   _ [Occ=Dead]
                                                                                   bDelete_sasMl [Occ=Once!] ->
                                                            case
                                                                bDelete_sasMl
                                                                    bState_sasMh ipv8_sasMd
                                                            of
                                                            { (#,#) ipv10_sasMn [Occ=Once]
                                                                    _ [Occ=Dead] ->
                                                                  GHC.Event.Control.closeControl1
                                                                      ipv3_sasM3 ipv10_sasMn;
                                                            };
                                                      };
                                                  GHC.Event.TimerManager.Finished ->
                                                      (#,#) [ipv8_sasMd GHC.Tuple.()];
                                                };
                                          }; } in
                                let {
                                  sat_sasMa [Occ=Once]
                                    :: GHC.IORef.IORef GHC.Event.TimerManager.State
                                  [LclId] =
                                      CCCS GHC.STRef.STRef! [ipv5_sasM6];
                                } in 
                                  case mkWeak# [ipv5_sasM6 sat_sasMa sat_sasMp ipv6_sasM8] of {
                                    (#,#) ipv8_sasMr [Occ=Once] _ [Occ=Dead] ->
                                        case be_sasLW of wild_sasMt {
                                          GHC.Event.Internal.Backend bState_sasMu
                                                                     _ [Occ=Dead]
                                                                     bModifyFd_sasMw
                                                                     _ [Occ=Dead]
                                                                     _ [Occ=Dead] ->
                                              let {
                                                sat_sasMz [Occ=Once] :: System.Posix.Types.Fd
                                                [LclId] =
                                                    [ipv3_sasM3] \u []
                                                        GHC.Event.Control.controlReadFd ipv3_sasM3;
                                              } in 
                                                case
                                                    bModifyFd_sasMw
                                                        bState_sasMu
                                                        sat_sasMz
                                                        GHC.Event.Internal.evtNothing
                                                        GHC.Event.Internal.evtRead
                                                        ipv8_sasMr
                                                of
                                                { (#,#) ipv10_sasMB [Occ=Once] _ [Occ=Dead] ->
                                                      let {
                                                        sat_sasMD [Occ=Once]
                                                          :: System.Posix.Types.Fd
                                                        [LclId] =
                                                            [ipv3_sasM3] \u []
                                                                GHC.Event.Control.controlEventFd
                                                                    ipv3_sasM3;
                                                      } in 
                                                        case
                                                            bModifyFd_sasMw
                                                                bState_sasMu
                                                                sat_sasMD
                                                                GHC.Event.Internal.evtNothing
                                                                GHC.Event.Internal.evtRead
                                                                ipv10_sasMB
                                                        of
                                                        { (#,#) ipv12_sasMF [Occ=Once]
                                                                _ [Occ=Dead] ->
                                                              let {
                                                                sat_sasMN [Occ=Once]
                                                                  :: GHC.Event.TimerManager.TimerManager
                                                                [LclId] =
                                                                    [ipv1_sasM0
                                                                     ipv3_sasM3
                                                                     ipv5_sasM6
                                                                     ipv7_sasM9
                                                                     wild_sasMt] \u []
                                                                        case ipv3_sasM3 of {
                                                                          GHC.Event.Control.W dt1_sasMI [Occ=Once]
                                                                                              dt2_sasMJ [Occ=Once]
                                                                                              dt3_sasMK [Occ=Once]
                                                                                              dt4_sasML [Occ=Once]
                                                                                              dt5_sasMM [Occ=Once] ->
                                                                              GHC.Event.TimerManager.TimerManager [wild_sasMt
                                                                                                                   ipv1_sasM0
                                                                                                                   ipv5_sasM6
                                                                                                                   ipv7_sasM9
                                                                                                                   dt1_sasMI
                                                                                                                   dt2_sasMJ
                                                                                                                   dt3_sasMK
                                                                                                                   dt4_sasML
                                                                                                                   dt5_sasMM];
                                                                        };
                                                              } in  (#,#) [ipv12_sasMF sat_sasMN];
                                                        };
                                                };
                                        };
                                  };
                          };
                    };
              };
        };

GHC.Event.TimerManager.newWith
  :: GHC.Event.Internal.Backend
     -> GHC.Types.IO GHC.Event.TimerManager.TimerManager
[GblId, Arity=2, Str=<L,U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] GHC.Event.TimerManager.new2 eta_B2 eta_B1;

GHC.Event.TimerManager.new1
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Event.TimerManager.TimerManager #)
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [s_sasMO]
        case GHC.Event.Poll.new1 s_sasMO of {
          (#,#) ipv_sasMQ [Occ=Once] ipv1_sasMR [Occ=Once] ->
              GHC.Event.TimerManager.new2 ipv1_sasMR ipv_sasMQ;
        };

GHC.Event.TimerManager.new
  :: GHC.Types.IO GHC.Event.TimerManager.TimerManager
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [eta_B1] GHC.Event.TimerManager.new1 eta_B1;

GHC.Event.TimerManager.step1
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
[GblId,
 Arity=2,
 Str=<L,1*U(U,U,U,A,A,A,U,A,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [mgr_sasMS s_sasMT]
        case __pkg_ccall base-4.11.0.0 [s_sasMT] of {
          (#,#) ds1_sasMW [Occ=Once] ds2_sasMX ->
              case mgr_sasMS of {
                GHC.Event.TimerManager.TimerManager ds_sasMZ [Occ=Once!]
                                                    dt_sasN0 [Occ=Once]
                                                    dt1_sasN1
                                                    _ [Occ=Dead]
                                                    _ [Occ=Dead]
                                                    _ [Occ=Dead]
                                                    dt5_sasN5 [Occ=OnceL]
                                                    _ [Occ=Dead]
                                                    dt7_sasN7 [Occ=OnceL] ->
                    case ds_sasMZ of {
                      GHC.Event.Internal.Backend bState_sasN9 [Occ=Once]
                                                 bPoll_sasNa [Occ=Once!]
                                                 _ [Occ=Dead]
                                                 _ [Occ=Dead]
                                                 _ [Occ=Dead] ->
                          let {
                            ipv1_sasNe [Occ=OnceL, Dmd=<L,U(U)>] :: GHC.Word.Word64
                            [LclId, Unf=OtherCon []] =
                                CCCS GHC.Word.W64#! [ds2_sasMX]; } in
                          let {
                            sat_sasNy [Occ=Once]
                              :: GHC.Event.TimerManager.TimeoutQueue
                                 -> (GHC.Event.TimerManager.TimeoutQueue,
                                     ([GHC.Event.PSQ.Elem GHC.Event.TimerManager.TimeoutCallback],
                                      GHC.Event.Internal.Timeout))
                            [LclId] =
                                [ds2_sasMX ipv1_sasNe] \r [a1_sasNf]
                                    case GHC.Event.PSQ.$watMost ipv1_sasNe a1_sasNf of {
                                      (#,#) ww1_sasNh [Occ=Once] ww2_sasNi [Occ=Once] ->
                                          case ww2_sasNi of a'1_sasNj {
                                            __DEFAULT ->
                                                let {
                                                  sat_sasNw [Occ=Once] :: GHC.Event.Internal.Timeout
                                                  [LclId] =
                                                      [ds2_sasMX a'1_sasNj] \u []
                                                          case a'1_sasNj of {
                                                            GHC.Event.PSQ.Bin _ [Occ=Dead]
                                                                              dt9_sasNm [Occ=Once]
                                                                              _ [Occ=Dead]
                                                                              _ [Occ=Dead]
                                                                              _ [Occ=Dead]
                                                                              _ [Occ=Dead] ->
                                                                case
                                                                    minusWord# [dt9_sasNm ds2_sasMX]
                                                                of
                                                                sat_sasNr
                                                                { __DEFAULT ->
                                                                      GHC.Event.Internal.Timeout [sat_sasNr];
                                                                };
                                                            GHC.Event.PSQ.Tip _ [Occ=Dead]
                                                                              dt9_sasNt [Occ=Once]
                                                                              _ [Occ=Dead] ->
                                                                case
                                                                    minusWord# [dt9_sasNt ds2_sasMX]
                                                                of
                                                                sat_sasNv
                                                                { __DEFAULT ->
                                                                      GHC.Event.Internal.Timeout [sat_sasNv];
                                                                };
                                                            GHC.Event.PSQ.Nil ->
                                                                GHC.Event.Internal.Forever [];
                                                          }; } in
                                                let {
                                                  sat_sasNx [Occ=Once]
                                                    :: ([GHC.Event.PSQ.Elem
                                                           GHC.Event.TimerManager.TimeoutCallback],
                                                        GHC.Event.Internal.Timeout)
                                                  [LclId] =
                                                      CCCS (,)! [ww1_sasNh sat_sasNw];
                                                } in  (,) [a'1_sasNj sat_sasNx];
                                          };
                                    };
                          } in 
                            case atomicModifyMutVar# [dt_sasN0 sat_sasNy ds1_sasMW] of {
                              (#,#) ipv_sasNA [Occ=Once] ipv2_sasNB [Occ=Once!] ->
                                  case ipv2_sasNB of {
                                    (,) ipv3_sasND [Occ=Once] ipv4_sasNE [Occ=Once] ->
                                        let-no-escape {
                                          $w$j_sasNF [InlPrag=NOUSERINLINE[0],
                                                      Occ=OnceL!T[1],
                                                      Dmd=<L,C(U(U,U))>]
                                            :: GHC.Prim.State# GHC.Prim.RealWorld
                                               -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                     GHC.Types.Bool #)
                                          [LclId[JoinId(1)], Arity=1, Str=<S,U>, Unf=OtherCon []] =
                                              sat-only [dt1_sasN1
                                                        dt5_sasN5
                                                        dt7_sasN7
                                                        bState_sasN9
                                                        bPoll_sasNa
                                                        ipv4_sasNE] \r [w_sasNG]
                                                  let {
                                                    sat_sasNX [Occ=Once]
                                                      :: System.Posix.Types.Fd
                                                         -> GHC.Event.Internal.Event
                                                         -> GHC.Types.IO ()
                                                    [LclId] =
                                                        [dt1_sasN1 dt5_sasN5 dt7_sasN7] \r [fd_sasNI
                                                                                            _evt_sasNJ
                                                                                            s1_sasNK]
                                                            case fd_sasNI of {
                                                              GHC.Int.I32# ww7_sasNM [Occ=Once] ->
                                                                  case
                                                                      GHC.Event.Control.$wreadControlMessage
                                                                          dt5_sasN5
                                                                          dt7_sasN7
                                                                          ww7_sasNM
                                                                          s1_sasNK
                                                                  of
                                                                  { (#,#) ipv5_sasNO [Occ=Once*]
                                                                          ipv6_sasNP [Occ=Once!] ->
                                                                        case ipv6_sasNP of {
                                                                          GHC.Event.Control.CMsgWakeup ->
                                                                              (#,#) [ipv5_sasNO
                                                                                     GHC.Tuple.()];
                                                                          GHC.Event.Control.CMsgDie ->
                                                                              case
                                                                                  writeMutVar# [dt1_sasN1
                                                                                                GHC.Event.TimerManager.Finished
                                                                                                ipv5_sasNO]
                                                                              of
                                                                              s2#_sasNR
                                                                              { __DEFAULT ->
                                                                                    (#,#) [s2#_sasNR
                                                                                           GHC.Tuple.()];
                                                                              };
                                                                          GHC.Event.Control.CMsgSignal dt8_sasNS [Occ=Once]
                                                                                                       dt9_sasNT [Occ=Once]
                                                                                                       dt10_sasNU [Occ=Once] ->
                                                                              let {
                                                                                sat_sasNW [Occ=Once]
                                                                                  :: GHC.Conc.Signal.Signal
                                                                                [LclId] =
                                                                                    CCCS GHC.Int.I32#! [dt10_sasNU]; } in
                                                                              let {
                                                                                sat_sasNV [Occ=Once]
                                                                                  :: GHC.ForeignPtr.ForeignPtr
                                                                                       GHC.Word.Word8
                                                                                [LclId] =
                                                                                    CCCS GHC.ForeignPtr.ForeignPtr! [dt8_sasNS
                                                                                                                     dt9_sasNT];
                                                                              } in 
                                                                                GHC.Conc.Signal.runHandlers1
                                                                                    sat_sasNV
                                                                                    sat_sasNW
                                                                                    ipv5_sasNO;
                                                                        };
                                                                  };
                                                            }; } in
                                                  let {
                                                    sat_sasNH [Occ=Once]
                                                      :: GHC.Base.Maybe GHC.Event.Internal.Timeout
                                                    [LclId] =
                                                        CCCS GHC.Base.Just! [ipv4_sasNE];
                                                  } in 
                                                    case
                                                        bPoll_sasNa
                                                            bState_sasN9 sat_sasNH sat_sasNX w_sasNG
                                                    of
                                                    { (#,#) ipv5_sasNZ [Occ=Once] _ [Occ=Dead] ->
                                                          case
                                                              readMutVar# [dt1_sasN1 ipv5_sasNZ]
                                                          of
                                                          { (#,#) ipv7_sasO2 [Occ=Once]
                                                                  ipv8_sasO3 [Occ=Once] ->
                                                                case ipv8_sasO3 of state_sasO4 {
                                                                  __DEFAULT ->
                                                                      let {
                                                                        sat_sasO6 [Occ=Once]
                                                                          :: GHC.Types.Bool
                                                                        [LclId] =
                                                                            [state_sasO4] \u []
                                                                                case
                                                                                    state_sasO4
                                                                                of
                                                                                { __DEFAULT ->
                                                                                      GHC.Types.False [];
                                                                                  GHC.Event.TimerManager.Running ->
                                                                                      GHC.Types.True [];
                                                                                };
                                                                      } in 
                                                                        (#,#) [ipv7_sasO2
                                                                               sat_sasO6];
                                                                };
                                                          };
                                                    };
                                        } in 
                                          let-no-escape {
                                            go_sasO7 [Occ=LoopBreakerT[2]]
                                              :: [GHC.Event.PSQ.Elem
                                                    GHC.Event.TimerManager.TimeoutCallback]
                                                 -> GHC.Prim.State# GHC.Prim.RealWorld
                                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                       GHC.Types.Bool #)
                                            [LclId[JoinId(2)],
                                             Arity=2,
                                             Str=<S,1*U><S,U>,
                                             Unf=OtherCon []] =
                                                sat-only [$w$j_sasNF go_sasO7] \r [ds7_sasO8
                                                                                   eta_sasO9]
                                                    case ds7_sasO8 of {
                                                      [] -> $w$j_sasNF eta_sasO9;
                                                      : y_sasOb [Occ=Once!] ys_sasOc [Occ=Once] ->
                                                          case y_sasOb of {
                                                            GHC.Event.PSQ.E _ [Occ=Dead]
                                                                            _ [Occ=Dead]
                                                                            ds8_sasOg [Occ=Once] ->
                                                                case ds8_sasOg eta_sasO9 of {
                                                                  (#,#) ipv5_sasOi [Occ=Once]
                                                                        _ [Occ=Dead] ->
                                                                      go_sasO7 ys_sasOc ipv5_sasOi;
                                                                };
                                                          };
                                                    };
                                          } in  go_sasO7 ipv3_sasND ipv_sasNA;
                                  };
                            };
                    };
              };
        };

GHC.Event.TimerManager.step
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Types.IO GHC.Types.Bool
[GblId,
 Arity=2,
 Str=<L,1*U(U,U,U,A,A,A,U,A,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] GHC.Event.TimerManager.step1 eta_B2 eta_B1;

lvl_rasDV :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.Event.Manager.loop: state is already "#;

lvl1_rasDW :: GHC.Event.TimerManager.State -> GHC.Types.IO ()
[GblId, Arity=1, Str=<B,1*U>x, Unf=OtherCon []] =
    sat-only [] \r [ipv1_sasOk]
        let {
          sat_sasOm [Occ=Once] :: [GHC.Types.Char]
          [LclId] =
              [ipv1_sasOk] \u []
                  case ipv1_sasOk of {
                    __DEFAULT -> GHC.Event.TimerManager.$fShowState5;
                    GHC.Event.TimerManager.Finished ->
                        GHC.Event.TimerManager.$fShowState1;
                  };
        } in 
          case
              GHC.CString.unpackAppendCString# lvl_rasDV sat_sasOm
          of
          sat_sasOn
          { __DEFAULT -> GHC.Err.errorWithoutStackTrace sat_sasOn;
          };

lvl2_rasDX
  :: (GHC.Event.TimerManager.State, GHC.Event.TimerManager.State)
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE (,)! [GHC.Event.TimerManager.Running
                        GHC.Event.TimerManager.Created];

lvl3_rasDY
  :: GHC.Event.TimerManager.State
     -> (GHC.Event.TimerManager.State, GHC.Event.TimerManager.State)
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>m, Unf=OtherCon []] =
    [] \r [a1_sasOo]
        case a1_sasOo of wild_sasOp {
          __DEFAULT -> (,) [wild_sasOp wild_sasOp];
          GHC.Event.TimerManager.Created -> lvl2_rasDX;
        };

GHC.Event.TimerManager.$wloop [InlPrag=NOUSERINLINE[0]]
  :: GHC.Event.Internal.Backend
     -> GHC.Prim.MutVar#
          GHC.Prim.RealWorld GHC.Event.TimerManager.TimeoutQueue
     -> GHC.Prim.MutVar# GHC.Prim.RealWorld GHC.Event.TimerManager.State
     -> GHC.Prim.MutableByteArray# GHC.Prim.RealWorld
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Types.Bool
     -> GHC.Prim.MutVar# GHC.Prim.RealWorld GHC.Types.Bool
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=10,
 Str=<S,1*U><L,U><S,U><L,U><L,U><L,U><L,U><L,U><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [ww_sasOq
           ww1_sasOr
           ww2_sasOs
           ww3_sasOt
           ww4_sasOu
           ww5_sasOv
           ww6_sasOw
           ww7_sasOx
           ww8_sasOy
           w_sasOz]
        case ww_sasOq of wild_sasOA {
          GHC.Event.Internal.Backend bState_sasOB
                                     _ [Occ=Dead]
                                     _ [Occ=Dead]
                                     _ [Occ=Dead]
                                     bDelete_sasOF ->
              case atomicModifyMutVar# [ww2_sasOs lvl3_rasDY w_sasOz] of {
                (#,#) ipv_sasOH [Occ=Once*] ipv1_sasOI [Occ=Once!] ->
                    case ipv1_sasOI of b1_sasOJ {
                      __DEFAULT ->
                          case
                              writeMutVar# [ww2_sasOs GHC.Event.TimerManager.Finished ipv_sasOH]
                          of
                          s2#_sasOK
                          { __DEFAULT ->
                                case bDelete_sasOF bState_sasOB s2#_sasOK of {
                                  (#,#) ipv2_sasOM [Occ=Once] _ [Occ=Dead] ->
                                      case
                                          atomicModifyMutVar# [ww8_sasOy
                                                               GHC.Event.Control.closeControl2
                                                               ipv2_sasOM]
                                      of
                                      { (#,#) ipv4_sasOP [Occ=Once] _ [Occ=Dead] ->
                                            case narrow32Int# [ww4_sasOu] of sat_sasOS {
                                              __DEFAULT ->
                                                  case
                                                      __pkg_ccall base-4.11.0.0 [sat_sasOS
                                                                                 ipv4_sasOP]
                                                  of
                                                  { (#,#) ds7_sasOU [Occ=Once] _ [Occ=Dead] ->
                                                        case narrow32Int# [ww5_sasOv] of sat_sasOX {
                                                          __DEFAULT ->
                                                              case
                                                                  __pkg_ccall base-4.11.0.0 [sat_sasOX
                                                                                             ds7_sasOU]
                                                              of
                                                              { (#,#) ds9_sasOZ [Occ=Once*]
                                                                      _ [Occ=Dead] ->
                                                                    case ww7_sasOx of {
                                                                      GHC.Types.False ->
                                                                          case
                                                                              narrow32Int# [ww6_sasOw]
                                                                          of
                                                                          sat_sasP3
                                                                          { __DEFAULT ->
                                                                                case
                                                                                    __pkg_ccall base-4.11.0.0 [sat_sasP3
                                                                                                               ds9_sasOZ]
                                                                                of
                                                                                { (#,#) _ [Occ=Dead]
                                                                                        _ [Occ=Dead] ->
                                                                                      lvl1_rasDW
                                                                                          b1_sasOJ;
                                                                                };
                                                                          };
                                                                      GHC.Types.True ->
                                                                          case
                                                                              __pkg_ccall base-4.11.0.0 [-1#
                                                                                                         ds9_sasOZ]
                                                                          of
                                                                          { Unit# ds_sasPa [Occ=Once] ->
                                                                                case
                                                                                    narrow32Int# [ww6_sasOw]
                                                                                of
                                                                                sat_sasPc
                                                                                { __DEFAULT ->
                                                                                      case
                                                                                          __pkg_ccall base-4.11.0.0 [sat_sasPc
                                                                                                                     ds_sasPa]
                                                                                      of
                                                                                      { (#,#) _ [Occ=Dead]
                                                                                              _ [Occ=Dead] ->
                                                                                            lvl1_rasDW
                                                                                                b1_sasOJ;
                                                                                      };
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                                };
                          };
                      GHC.Event.TimerManager.Created ->
                          case getMaskingState# [ipv_sasOH] of {
                            (#,#) ipv2_sasPi [Occ=Once*] ipv3_sasPj [Occ=Once!] ->
                                let {
                                  go_sasPk [Occ=LoopBreaker]
                                    :: GHC.Prim.State# GHC.Prim.RealWorld
                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                  [LclId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
                                      [ww1_sasOr
                                       ww2_sasOs
                                       ww3_sasOt
                                       ww4_sasOu
                                       ww5_sasOv
                                       ww6_sasOw
                                       ww7_sasOx
                                       ww8_sasOy
                                       wild_sasOA
                                       go_sasPk] \r [s_sasPl]
                                          let {
                                            sat_sasPm [Occ=Once]
                                              :: GHC.Event.TimerManager.TimerManager
                                            [LclId] =
                                                CCCS GHC.Event.TimerManager.TimerManager! [wild_sasOA
                                                                                           ww1_sasOr
                                                                                           ww2_sasOs
                                                                                           ww3_sasOt
                                                                                           ww4_sasOu
                                                                                           ww5_sasOv
                                                                                           ww6_sasOw
                                                                                           ww7_sasOx
                                                                                           ww8_sasOy];
                                          } in 
                                            case GHC.Event.TimerManager.step1 sat_sasPm s_sasPl of {
                                              (#,#) ipv4_sasPo [Occ=Once*] ipv5_sasPp [Occ=Once!] ->
                                                  case ipv5_sasPp of {
                                                    GHC.Types.False ->
                                                        (#,#) [ipv4_sasPo GHC.Tuple.()];
                                                    GHC.Types.True -> go_sasPk ipv4_sasPo;
                                                  };
                                            };
                                } in 
                                  case ipv3_sasPj of {
                                    __DEFAULT ->
                                        let {
                                          sat_sasQ0 [Occ=Once]
                                            :: GHC.Exception.SomeException
                                               -> GHC.Prim.State# GHC.Prim.RealWorld
                                               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                          [LclId] =
                                              [ww2_sasOs
                                               ww4_sasOu
                                               ww5_sasOv
                                               ww6_sasOw
                                               ww7_sasOx
                                               ww8_sasOy
                                               bState_sasOB
                                               bDelete_sasOF] \r [e1_sasPt s_sasPu]
                                                  case
                                                      writeMutVar# [ww2_sasOs
                                                                    GHC.Event.TimerManager.Finished
                                                                    s_sasPu]
                                                  of
                                                  s2#_sasPv
                                                  { __DEFAULT ->
                                                        case
                                                            bDelete_sasOF bState_sasOB s2#_sasPv
                                                        of
                                                        { (#,#) ipv4_sasPx [Occ=Once]
                                                                _ [Occ=Dead] ->
                                                              case
                                                                  atomicModifyMutVar# [ww8_sasOy
                                                                                       GHC.Event.Control.closeControl2
                                                                                       ipv4_sasPx]
                                                              of
                                                              { (#,#) ipv6_sasPA [Occ=Once]
                                                                      _ [Occ=Dead] ->
                                                                    case
                                                                        narrow32Int# [ww4_sasOu]
                                                                    of
                                                                    sat_sasPD
                                                                    { __DEFAULT ->
                                                                          case
                                                                              __pkg_ccall base-4.11.0.0 [sat_sasPD
                                                                                                         ipv6_sasPA]
                                                                          of
                                                                          { (#,#) ds8_sasPF [Occ=Once]
                                                                                  _ [Occ=Dead] ->
                                                                                case
                                                                                    narrow32Int# [ww5_sasOv]
                                                                                of
                                                                                sat_sasPI
                                                                                { __DEFAULT ->
                                                                                      case
                                                                                          __pkg_ccall base-4.11.0.0 [sat_sasPI
                                                                                                                     ds8_sasPF]
                                                                                      of
                                                                                      { (#,#) ds10_sasPK [Occ=Once*]
                                                                                              _ [Occ=Dead] ->
                                                                                            case
                                                                                                ww7_sasOx
                                                                                            of
                                                                                            { GHC.Types.False ->
                                                                                                  case
                                                                                                      narrow32Int# [ww6_sasOw]
                                                                                                  of
                                                                                                  sat_sasPO
                                                                                                  { __DEFAULT ->
                                                                                                        case
                                                                                                            __pkg_ccall base-4.11.0.0 [sat_sasPO
                                                                                                                                       ds10_sasPK]
                                                                                                        of
                                                                                                        { (#,#) ds12_sasPQ [Occ=Once]
                                                                                                                _ [Occ=Dead] ->
                                                                                                              raiseIO# [e1_sasPt
                                                                                                                        ds12_sasPQ];
                                                                                                        };
                                                                                                  };
                                                                                              GHC.Types.True ->
                                                                                                  case
                                                                                                      __pkg_ccall base-4.11.0.0 [-1#
                                                                                                                                 ds10_sasPK]
                                                                                                  of
                                                                                                  { Unit# ds12_sasPU [Occ=Once] ->
                                                                                                        case
                                                                                                            narrow32Int# [ww6_sasOw]
                                                                                                        of
                                                                                                        sat_sasPW
                                                                                                        { __DEFAULT ->
                                                                                                              case
                                                                                                                  __pkg_ccall base-4.11.0.0 [sat_sasPW
                                                                                                                                             ds12_sasPU]
                                                                                                              of
                                                                                                              { (#,#) ds13_sasPY [Occ=Once]
                                                                                                                      _ [Occ=Dead] ->
                                                                                                                    raiseIO# [e1_sasPt
                                                                                                                              ds13_sasPY];
                                                                                                              };
                                                                                                        };
                                                                                                  };
                                                                                            };
                                                                                      };
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  }; } in
                                        let {
                                          sat_sasPs [Occ=Once]
                                            :: GHC.Prim.State# GHC.Prim.RealWorld
                                               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                          [LclId] =
                                              [go_sasPk] \r [eta_B1]
                                                  maskAsyncExceptions# [go_sasPk eta_B1];
                                        } in 
                                          case catch# [sat_sasPs sat_sasQ0 ipv2_sasPi] of {
                                            (#,#) ipv4_sasQ2 [Occ=Once] ipv5_sasQ3 [Occ=Once*] ->
                                                case
                                                    writeMutVar# [ww2_sasOs
                                                                  GHC.Event.TimerManager.Finished
                                                                  ipv4_sasQ2]
                                                of
                                                s2#_sasQ4
                                                { __DEFAULT ->
                                                      case bDelete_sasOF bState_sasOB s2#_sasQ4 of {
                                                        (#,#) ipv6_sasQ6 [Occ=Once] _ [Occ=Dead] ->
                                                            case
                                                                atomicModifyMutVar# [ww8_sasOy
                                                                                     GHC.Event.Control.closeControl2
                                                                                     ipv6_sasQ6]
                                                            of
                                                            { (#,#) ipv8_sasQ9 [Occ=Once]
                                                                    _ [Occ=Dead] ->
                                                                  case
                                                                      narrow32Int# [ww4_sasOu]
                                                                  of
                                                                  sat_sasQc
                                                                  { __DEFAULT ->
                                                                        case
                                                                            __pkg_ccall base-4.11.0.0 [sat_sasQc
                                                                                                       ipv8_sasQ9]
                                                                        of
                                                                        { (#,#) ds9_sasQe [Occ=Once]
                                                                                _ [Occ=Dead] ->
                                                                              case
                                                                                  narrow32Int# [ww5_sasOv]
                                                                              of
                                                                              sat_sasQh
                                                                              { __DEFAULT ->
                                                                                    case
                                                                                        __pkg_ccall base-4.11.0.0 [sat_sasQh
                                                                                                                   ds9_sasQe]
                                                                                    of
                                                                                    { (#,#) ds11_sasQj [Occ=Once*]
                                                                                            _ [Occ=Dead] ->
                                                                                          case
                                                                                              ww7_sasOx
                                                                                          of
                                                                                          { GHC.Types.False ->
                                                                                                case
                                                                                                    narrow32Int# [ww6_sasOw]
                                                                                                of
                                                                                                sat_sasQn
                                                                                                { __DEFAULT ->
                                                                                                      case
                                                                                                          __pkg_ccall base-4.11.0.0 [sat_sasQn
                                                                                                                                     ds11_sasQj]
                                                                                                      of
                                                                                                      { (#,#) ds13_sasQp [Occ=Once]
                                                                                                              _ [Occ=Dead] ->
                                                                                                            (#,#) [ds13_sasQp
                                                                                                                   ipv5_sasQ3];
                                                                                                      };
                                                                                                };
                                                                                            GHC.Types.True ->
                                                                                                case
                                                                                                    __pkg_ccall base-4.11.0.0 [-1#
                                                                                                                               ds11_sasQj]
                                                                                                of
                                                                                                { Unit# ds13_sasQt [Occ=Once] ->
                                                                                                      case
                                                                                                          narrow32Int# [ww6_sasOw]
                                                                                                      of
                                                                                                      sat_sasQv
                                                                                                      { __DEFAULT ->
                                                                                                            case
                                                                                                                __pkg_ccall base-4.11.0.0 [sat_sasQv
                                                                                                                                           ds13_sasQt]
                                                                                                            of
                                                                                                            { (#,#) ds14_sasQx [Occ=Once]
                                                                                                                    _ [Occ=Dead] ->
                                                                                                                  (#,#) [ds14_sasQx
                                                                                                                         ipv5_sasQ3];
                                                                                                            };
                                                                                                      };
                                                                                                };
                                                                                          };
                                                                                    };
                                                                              };
                                                                        };
                                                                  };
                                                            };
                                                      };
                                                };
                                          };
                                    0# ->
                                        let {
                                          sat_sasRH [Occ=Once]
                                            :: GHC.Prim.State# GHC.Prim.RealWorld
                                               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                          [LclId] =
                                              [ww2_sasOs
                                               ww4_sasOu
                                               ww5_sasOv
                                               ww6_sasOw
                                               ww7_sasOx
                                               ww8_sasOy
                                               bState_sasOB
                                               bDelete_sasOF
                                               go_sasPk] \r [s_sasQz]
                                                  let {
                                                    sat_sasR8 [Occ=Once]
                                                      :: GHC.Exception.SomeException
                                                         -> GHC.Prim.State# GHC.Prim.RealWorld
                                                         -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                               () #)
                                                    [LclId] =
                                                        [ww2_sasOs
                                                         ww4_sasOu
                                                         ww5_sasOv
                                                         ww6_sasOw
                                                         ww7_sasOx
                                                         ww8_sasOy
                                                         bState_sasOB
                                                         bDelete_sasOF] \r [e1_sasQB s1_sasQC]
                                                            case
                                                                writeMutVar# [ww2_sasOs
                                                                              GHC.Event.TimerManager.Finished
                                                                              s1_sasQC]
                                                            of
                                                            s2#_sasQD
                                                            { __DEFAULT ->
                                                                  case
                                                                      bDelete_sasOF
                                                                          bState_sasOB s2#_sasQD
                                                                  of
                                                                  { (#,#) ipv4_sasQF [Occ=Once]
                                                                          _ [Occ=Dead] ->
                                                                        case
                                                                            atomicModifyMutVar# [ww8_sasOy
                                                                                                 GHC.Event.Control.closeControl2
                                                                                                 ipv4_sasQF]
                                                                        of
                                                                        { (#,#) ipv6_sasQI [Occ=Once]
                                                                                _ [Occ=Dead] ->
                                                                              case
                                                                                  narrow32Int# [ww4_sasOu]
                                                                              of
                                                                              sat_sasQL
                                                                              { __DEFAULT ->
                                                                                    case
                                                                                        __pkg_ccall base-4.11.0.0 [sat_sasQL
                                                                                                                   ipv6_sasQI]
                                                                                    of
                                                                                    { (#,#) ds8_sasQN [Occ=Once]
                                                                                            _ [Occ=Dead] ->
                                                                                          case
                                                                                              narrow32Int# [ww5_sasOv]
                                                                                          of
                                                                                          sat_sasQQ
                                                                                          { __DEFAULT ->
                                                                                                case
                                                                                                    __pkg_ccall base-4.11.0.0 [sat_sasQQ
                                                                                                                               ds8_sasQN]
                                                                                                of
                                                                                                { (#,#) ds10_sasQS [Occ=Once*]
                                                                                                        _ [Occ=Dead] ->
                                                                                                      case
                                                                                                          ww7_sasOx
                                                                                                      of
                                                                                                      { GHC.Types.False ->
                                                                                                            case
                                                                                                                narrow32Int# [ww6_sasOw]
                                                                                                            of
                                                                                                            sat_sasQW
                                                                                                            { __DEFAULT ->
                                                                                                                  case
                                                                                                                      __pkg_ccall base-4.11.0.0 [sat_sasQW
                                                                                                                                                 ds10_sasQS]
                                                                                                                  of
                                                                                                                  { (#,#) ds12_sasQY [Occ=Once]
                                                                                                                          _ [Occ=Dead] ->
                                                                                                                        raiseIO# [e1_sasQB
                                                                                                                                  ds12_sasQY];
                                                                                                                  };
                                                                                                            };
                                                                                                        GHC.Types.True ->
                                                                                                            case
                                                                                                                __pkg_ccall base-4.11.0.0 [-1#
                                                                                                                                           ds10_sasQS]
                                                                                                            of
                                                                                                            { Unit# ds12_sasR2 [Occ=Once] ->
                                                                                                                  case
                                                                                                                      narrow32Int# [ww6_sasOw]
                                                                                                                  of
                                                                                                                  sat_sasR4
                                                                                                                  { __DEFAULT ->
                                                                                                                        case
                                                                                                                            __pkg_ccall base-4.11.0.0 [sat_sasR4
                                                                                                                                                       ds12_sasR2]
                                                                                                                        of
                                                                                                                        { (#,#) ds13_sasR6 [Occ=Once]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              raiseIO# [e1_sasQB
                                                                                                                                        ds13_sasR6];
                                                                                                                        };
                                                                                                                  };
                                                                                                            };
                                                                                                      };
                                                                                                };
                                                                                          };
                                                                                    };
                                                                              };
                                                                        };
                                                                  };
                                                            }; } in
                                                  let {
                                                    sat_sasQA [Occ=Once]
                                                      :: GHC.Prim.State# GHC.Prim.RealWorld
                                                         -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                               () #)
                                                    [LclId] =
                                                        [go_sasPk] \r [eta_B1]
                                                            unmaskAsyncExceptions# [go_sasPk
                                                                                    eta_B1];
                                                  } in 
                                                    case catch# [sat_sasQA sat_sasR8 s_sasQz] of {
                                                      (#,#) ipv4_sasRa [Occ=Once]
                                                            ipv5_sasRb [Occ=Once*] ->
                                                          case
                                                              writeMutVar# [ww2_sasOs
                                                                            GHC.Event.TimerManager.Finished
                                                                            ipv4_sasRa]
                                                          of
                                                          s2#_sasRc
                                                          { __DEFAULT ->
                                                                case
                                                                    bDelete_sasOF
                                                                        bState_sasOB s2#_sasRc
                                                                of
                                                                { (#,#) ipv6_sasRe [Occ=Once]
                                                                        _ [Occ=Dead] ->
                                                                      case
                                                                          atomicModifyMutVar# [ww8_sasOy
                                                                                               GHC.Event.Control.closeControl2
                                                                                               ipv6_sasRe]
                                                                      of
                                                                      { (#,#) ipv8_sasRh [Occ=Once]
                                                                              _ [Occ=Dead] ->
                                                                            case
                                                                                narrow32Int# [ww4_sasOu]
                                                                            of
                                                                            sat_sasRk
                                                                            { __DEFAULT ->
                                                                                  case
                                                                                      __pkg_ccall base-4.11.0.0 [sat_sasRk
                                                                                                                 ipv8_sasRh]
                                                                                  of
                                                                                  { (#,#) ds9_sasRm [Occ=Once]
                                                                                          _ [Occ=Dead] ->
                                                                                        case
                                                                                            narrow32Int# [ww5_sasOv]
                                                                                        of
                                                                                        sat_sasRp
                                                                                        { __DEFAULT ->
                                                                                              case
                                                                                                  __pkg_ccall base-4.11.0.0 [sat_sasRp
                                                                                                                             ds9_sasRm]
                                                                                              of
                                                                                              { (#,#) ds11_sasRr [Occ=Once*]
                                                                                                      _ [Occ=Dead] ->
                                                                                                    case
                                                                                                        ww7_sasOx
                                                                                                    of
                                                                                                    { GHC.Types.False ->
                                                                                                          case
                                                                                                              narrow32Int# [ww6_sasOw]
                                                                                                          of
                                                                                                          sat_sasRv
                                                                                                          { __DEFAULT ->
                                                                                                                case
                                                                                                                    __pkg_ccall base-4.11.0.0 [sat_sasRv
                                                                                                                                               ds11_sasRr]
                                                                                                                of
                                                                                                                { (#,#) ds13_sasRx [Occ=Once]
                                                                                                                        _ [Occ=Dead] ->
                                                                                                                      (#,#) [ds13_sasRx
                                                                                                                             ipv5_sasRb];
                                                                                                                };
                                                                                                          };
                                                                                                      GHC.Types.True ->
                                                                                                          case
                                                                                                              __pkg_ccall base-4.11.0.0 [-1#
                                                                                                                                         ds11_sasRr]
                                                                                                          of
                                                                                                          { Unit# ds13_sasRB [Occ=Once] ->
                                                                                                                case
                                                                                                                    narrow32Int# [ww6_sasOw]
                                                                                                                of
                                                                                                                sat_sasRD
                                                                                                                { __DEFAULT ->
                                                                                                                      case
                                                                                                                          __pkg_ccall base-4.11.0.0 [sat_sasRD
                                                                                                                                                     ds13_sasRB]
                                                                                                                      of
                                                                                                                      { (#,#) ds14_sasRF [Occ=Once]
                                                                                                                              _ [Occ=Dead] ->
                                                                                                                            (#,#) [ds14_sasRF
                                                                                                                                   ipv5_sasRb];
                                                                                                                      };
                                                                                                                };
                                                                                                          };
                                                                                                    };
                                                                                              };
                                                                                        };
                                                                                  };
                                                                            };
                                                                      };
                                                                };
                                                          };
                                                    };
                                        } in  maskAsyncExceptions# [sat_sasRH ipv2_sasPi];
                                    1# ->
                                        let {
                                          sat_sasSg [Occ=Once]
                                            :: GHC.Exception.SomeException
                                               -> GHC.Prim.State# GHC.Prim.RealWorld
                                               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                          [LclId] =
                                              [ww2_sasOs
                                               ww4_sasOu
                                               ww5_sasOv
                                               ww6_sasOw
                                               ww7_sasOx
                                               ww8_sasOy
                                               bState_sasOB
                                               bDelete_sasOF] \r [e1_sasRJ s_sasRK]
                                                  case
                                                      writeMutVar# [ww2_sasOs
                                                                    GHC.Event.TimerManager.Finished
                                                                    s_sasRK]
                                                  of
                                                  s2#_sasRL
                                                  { __DEFAULT ->
                                                        case
                                                            bDelete_sasOF bState_sasOB s2#_sasRL
                                                        of
                                                        { (#,#) ipv4_sasRN [Occ=Once]
                                                                _ [Occ=Dead] ->
                                                              case
                                                                  atomicModifyMutVar# [ww8_sasOy
                                                                                       GHC.Event.Control.closeControl2
                                                                                       ipv4_sasRN]
                                                              of
                                                              { (#,#) ipv6_sasRQ [Occ=Once]
                                                                      _ [Occ=Dead] ->
                                                                    case
                                                                        narrow32Int# [ww4_sasOu]
                                                                    of
                                                                    sat_sasRT
                                                                    { __DEFAULT ->
                                                                          case
                                                                              __pkg_ccall base-4.11.0.0 [sat_sasRT
                                                                                                         ipv6_sasRQ]
                                                                          of
                                                                          { (#,#) ds8_sasRV [Occ=Once]
                                                                                  _ [Occ=Dead] ->
                                                                                case
                                                                                    narrow32Int# [ww5_sasOv]
                                                                                of
                                                                                sat_sasRY
                                                                                { __DEFAULT ->
                                                                                      case
                                                                                          __pkg_ccall base-4.11.0.0 [sat_sasRY
                                                                                                                     ds8_sasRV]
                                                                                      of
                                                                                      { (#,#) ds10_sasS0 [Occ=Once*]
                                                                                              _ [Occ=Dead] ->
                                                                                            case
                                                                                                ww7_sasOx
                                                                                            of
                                                                                            { GHC.Types.False ->
                                                                                                  case
                                                                                                      narrow32Int# [ww6_sasOw]
                                                                                                  of
                                                                                                  sat_sasS4
                                                                                                  { __DEFAULT ->
                                                                                                        case
                                                                                                            __pkg_ccall base-4.11.0.0 [sat_sasS4
                                                                                                                                       ds10_sasS0]
                                                                                                        of
                                                                                                        { (#,#) ds12_sasS6 [Occ=Once]
                                                                                                                _ [Occ=Dead] ->
                                                                                                              raiseIO# [e1_sasRJ
                                                                                                                        ds12_sasS6];
                                                                                                        };
                                                                                                  };
                                                                                              GHC.Types.True ->
                                                                                                  case
                                                                                                      __pkg_ccall base-4.11.0.0 [-1#
                                                                                                                                 ds10_sasS0]
                                                                                                  of
                                                                                                  { Unit# ds12_sasSa [Occ=Once] ->
                                                                                                        case
                                                                                                            narrow32Int# [ww6_sasOw]
                                                                                                        of
                                                                                                        sat_sasSc
                                                                                                        { __DEFAULT ->
                                                                                                              case
                                                                                                                  __pkg_ccall base-4.11.0.0 [sat_sasSc
                                                                                                                                             ds12_sasSa]
                                                                                                              of
                                                                                                              { (#,#) ds13_sasSe [Occ=Once]
                                                                                                                      _ [Occ=Dead] ->
                                                                                                                    raiseIO# [e1_sasRJ
                                                                                                                              ds13_sasSe];
                                                                                                              };
                                                                                                        };
                                                                                                  };
                                                                                            };
                                                                                      };
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  }; } in
                                        let {
                                          sat_sasRI [Occ=Once]
                                            :: GHC.Prim.State# GHC.Prim.RealWorld
                                               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                          [LclId] =
                                              [go_sasPk] \r [eta_B1]
                                                  maskUninterruptible# [go_sasPk eta_B1];
                                        } in 
                                          case catch# [sat_sasRI sat_sasSg ipv2_sasPi] of {
                                            (#,#) ipv4_sasSi [Occ=Once] ipv5_sasSj [Occ=Once*] ->
                                                case
                                                    writeMutVar# [ww2_sasOs
                                                                  GHC.Event.TimerManager.Finished
                                                                  ipv4_sasSi]
                                                of
                                                s2#_sasSk
                                                { __DEFAULT ->
                                                      case bDelete_sasOF bState_sasOB s2#_sasSk of {
                                                        (#,#) ipv6_sasSm [Occ=Once] _ [Occ=Dead] ->
                                                            case
                                                                atomicModifyMutVar# [ww8_sasOy
                                                                                     GHC.Event.Control.closeControl2
                                                                                     ipv6_sasSm]
                                                            of
                                                            { (#,#) ipv8_sasSp [Occ=Once]
                                                                    _ [Occ=Dead] ->
                                                                  case
                                                                      narrow32Int# [ww4_sasOu]
                                                                  of
                                                                  sat_sasSs
                                                                  { __DEFAULT ->
                                                                        case
                                                                            __pkg_ccall base-4.11.0.0 [sat_sasSs
                                                                                                       ipv8_sasSp]
                                                                        of
                                                                        { (#,#) ds9_sasSu [Occ=Once]
                                                                                _ [Occ=Dead] ->
                                                                              case
                                                                                  narrow32Int# [ww5_sasOv]
                                                                              of
                                                                              sat_sasSx
                                                                              { __DEFAULT ->
                                                                                    case
                                                                                        __pkg_ccall base-4.11.0.0 [sat_sasSx
                                                                                                                   ds9_sasSu]
                                                                                    of
                                                                                    { (#,#) ds11_sasSz [Occ=Once*]
                                                                                            _ [Occ=Dead] ->
                                                                                          case
                                                                                              ww7_sasOx
                                                                                          of
                                                                                          { GHC.Types.False ->
                                                                                                case
                                                                                                    narrow32Int# [ww6_sasOw]
                                                                                                of
                                                                                                sat_sasSD
                                                                                                { __DEFAULT ->
                                                                                                      case
                                                                                                          __pkg_ccall base-4.11.0.0 [sat_sasSD
                                                                                                                                     ds11_sasSz]
                                                                                                      of
                                                                                                      { (#,#) ds13_sasSF [Occ=Once]
                                                                                                              _ [Occ=Dead] ->
                                                                                                            (#,#) [ds13_sasSF
                                                                                                                   ipv5_sasSj];
                                                                                                      };
                                                                                                };
                                                                                            GHC.Types.True ->
                                                                                                case
                                                                                                    __pkg_ccall base-4.11.0.0 [-1#
                                                                                                                               ds11_sasSz]
                                                                                                of
                                                                                                { Unit# ds13_sasSJ [Occ=Once] ->
                                                                                                      case
                                                                                                          narrow32Int# [ww6_sasOw]
                                                                                                      of
                                                                                                      sat_sasSL
                                                                                                      { __DEFAULT ->
                                                                                                            case
                                                                                                                __pkg_ccall base-4.11.0.0 [sat_sasSL
                                                                                                                                           ds13_sasSJ]
                                                                                                            of
                                                                                                            { (#,#) ds14_sasSN [Occ=Once]
                                                                                                                    _ [Occ=Dead] ->
                                                                                                                  (#,#) [ds14_sasSN
                                                                                                                         ipv5_sasSj];
                                                                                                            };
                                                                                                      };
                                                                                                };
                                                                                          };
                                                                                    };
                                                                              };
                                                                        };
                                                                  };
                                                            };
                                                      };
                                                };
                                          };
                                  };
                          };
                      GHC.Event.TimerManager.Dying ->
                          case
                              writeMutVar# [ww2_sasOs GHC.Event.TimerManager.Finished ipv_sasOH]
                          of
                          s2#_sasSP
                          { __DEFAULT ->
                                case bDelete_sasOF bState_sasOB s2#_sasSP of {
                                  (#,#) ipv2_sasSR [Occ=Once] _ [Occ=Dead] ->
                                      case
                                          atomicModifyMutVar# [ww8_sasOy
                                                               GHC.Event.Control.closeControl2
                                                               ipv2_sasSR]
                                      of
                                      { (#,#) ipv4_sasSU [Occ=Once] _ [Occ=Dead] ->
                                            case narrow32Int# [ww4_sasOu] of sat_sasSX {
                                              __DEFAULT ->
                                                  case
                                                      __pkg_ccall base-4.11.0.0 [sat_sasSX
                                                                                 ipv4_sasSU]
                                                  of
                                                  { (#,#) ds7_sasSZ [Occ=Once] _ [Occ=Dead] ->
                                                        case narrow32Int# [ww5_sasOv] of sat_sasT2 {
                                                          __DEFAULT ->
                                                              case
                                                                  __pkg_ccall base-4.11.0.0 [sat_sasT2
                                                                                             ds7_sasSZ]
                                                              of
                                                              { (#,#) ds9_sasT4 [Occ=Once*]
                                                                      _ [Occ=Dead] ->
                                                                    case ww7_sasOx of {
                                                                      GHC.Types.False ->
                                                                          case
                                                                              narrow32Int# [ww6_sasOw]
                                                                          of
                                                                          sat_sasT8
                                                                          { __DEFAULT ->
                                                                                case
                                                                                    __pkg_ccall base-4.11.0.0 [sat_sasT8
                                                                                                               ds9_sasT4]
                                                                                of
                                                                                { (#,#) ds11_sasTa [Occ=Once]
                                                                                        _ [Occ=Dead] ->
                                                                                      (#,#) [ds11_sasTa
                                                                                             GHC.Tuple.()];
                                                                                };
                                                                          };
                                                                      GHC.Types.True ->
                                                                          case
                                                                              __pkg_ccall base-4.11.0.0 [-1#
                                                                                                         ds9_sasT4]
                                                                          of
                                                                          { Unit# ds_sasTe [Occ=Once] ->
                                                                                case
                                                                                    narrow32Int# [ww6_sasOw]
                                                                                of
                                                                                sat_sasTg
                                                                                { __DEFAULT ->
                                                                                      case
                                                                                          __pkg_ccall base-4.11.0.0 [sat_sasTg
                                                                                                                     ds_sasTe]
                                                                                      of
                                                                                      { (#,#) ds11_sasTi [Occ=Once]
                                                                                              _ [Occ=Dead] ->
                                                                                            (#,#) [ds11_sasTi
                                                                                                   GHC.Tuple.()];
                                                                                      };
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.Event.TimerManager.loop1 [InlPrag=NOUSERINLINE[0]]
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=2,
 Str=<S(SSSSSSSSS),1*U(U,U,U,U,U,U,U,U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sasTk w1_sasTl]
        case w_sasTk of {
          GHC.Event.TimerManager.TimerManager ww1_sasTn [Occ=Once]
                                              ww2_sasTo [Occ=Once]
                                              ww3_sasTp [Occ=Once]
                                              ww4_sasTq [Occ=Once]
                                              ww5_sasTr [Occ=Once]
                                              ww6_sasTs [Occ=Once]
                                              ww7_sasTt [Occ=Once]
                                              ww8_sasTu [Occ=Once]
                                              ww9_sasTv [Occ=Once] ->
              GHC.Event.TimerManager.$wloop
                  ww1_sasTn
                  ww2_sasTo
                  ww3_sasTp
                  ww4_sasTq
                  ww5_sasTr
                  ww6_sasTs
                  ww7_sasTt
                  ww8_sasTu
                  ww9_sasTv
                  w1_sasTl;
        };

GHC.Event.TimerManager.loop
  :: GHC.Event.TimerManager.TimerManager -> GHC.Types.IO ()
[GblId,
 Arity=2,
 Str=<S(SSSSSSSSS),1*U(U,U,U,U,U,U,U,U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] GHC.Event.TimerManager.loop1 eta_B2 eta_B1;

GHC.Event.TimerManager.TimerManager
  :: GHC.Event.Internal.Backend
     -> GHC.Prim.MutVar#
          GHC.Prim.RealWorld GHC.Event.TimerManager.TimeoutQueue
     -> GHC.Prim.MutVar# GHC.Prim.RealWorld GHC.Event.TimerManager.State
     -> GHC.Prim.MutableByteArray# GHC.Prim.RealWorld
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Types.Bool
     -> GHC.Prim.MutVar# GHC.Prim.RealWorld GHC.Types.Bool
     -> GHC.Event.TimerManager.TimerManager
[GblId[DataCon],
 Arity=9,
 Caf=NoCafRefs,
 Str=<L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>m,
 Unf=OtherCon []] =
    [] \r [eta_B9
           eta_B8
           eta_B7
           eta_B6
           eta_B5
           eta_B4
           eta_B3
           eta_B2
           eta_B1]
        GHC.Event.TimerManager.TimerManager [eta_B9
                                             eta_B8
                                             eta_B7
                                             eta_B6
                                             eta_B5
                                             eta_B4
                                             eta_B3
                                             eta_B2
                                             eta_B1];

GHC.Event.TimerManager.Created :: GHC.Event.TimerManager.State
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Event.TimerManager.Created! [];

GHC.Event.TimerManager.Running :: GHC.Event.TimerManager.State
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Event.TimerManager.Running! [];

GHC.Event.TimerManager.Dying :: GHC.Event.TimerManager.State
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Event.TimerManager.Dying! [];

GHC.Event.TimerManager.Finished :: GHC.Event.TimerManager.State
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Event.TimerManager.Finished! [];


==================== STG syntax: ====================
2018-03-16 16:05:27.211907502 UTC

GHC.Event.TimerManager.$WTimerManager [InlPrag=INLINE[2]]
  :: GHC.Event.Internal.Backend
     -> GHC.IORef.IORef GHC.Event.TimerManager.TimeoutQueue
     -> GHC.IORef.IORef GHC.Event.TimerManager.State
     -> GHC.Event.Unique.UniqueSource
     -> GHC.Event.Control.Control
     -> GHC.Event.TimerManager.TimerManager
[GblId[DataConWrapper],
 Arity=5,
 Caf=NoCafRefs,
 Str=<S,U><S,U><S,U><S,U><S,U>m,
 Unf=OtherCon []] =
    [] \r [dt_sasE0 dt_sasE1 dt_sasE2 dt_sasE3 dt_sasE4]
        case dt_sasE0 of dt_sasE5 {
          __DEFAULT ->
              case dt_sasE1 of {
                GHC.STRef.STRef dt_sasE7 [Occ=Once] ->
                    case dt_sasE2 of {
                      GHC.STRef.STRef dt_sasE9 [Occ=Once] ->
                          case dt_sasE3 of {
                            GHC.Event.Unique.US dt_sasEb [Occ=Once] ->
                                case dt_sasE4 of {
                                  GHC.Event.Control.W dt_sasEd [Occ=Once]
                                                      dt_sasEe [Occ=Once]
                                                      dt_sasEf [Occ=Once]
                                                      dt_sasEg [Occ=Once]
                                                      dt_sasEh [Occ=Once] ->
                                      GHC.Event.TimerManager.TimerManager [dt_sasE5
                                                                           dt_sasE7
                                                                           dt_sasE9
                                                                           dt_sasEb
                                                                           dt_sasEd
                                                                           dt_sasEe
                                                                           dt_sasEf
                                                                           dt_sasEg
                                                                           dt_sasEh];
                                };
                          };
                    };
              };
        };

GHC.Event.TimerManager.$fShowState8 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Created"#;

GHC.Event.TimerManager.$fShowState7 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# GHC.Event.TimerManager.$fShowState8;

GHC.Event.TimerManager.$fShowState6 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Running"#;

GHC.Event.TimerManager.$fShowState5 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# GHC.Event.TimerManager.$fShowState6;

GHC.Event.TimerManager.$fShowState4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Dying"#;

GHC.Event.TimerManager.$fShowState3 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# GHC.Event.TimerManager.$fShowState4;

GHC.Event.TimerManager.$fShowState2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Finished"#;

GHC.Event.TimerManager.$fShowState1 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# GHC.Event.TimerManager.$fShowState2;

GHC.Event.TimerManager.$w$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: GHC.Event.TimerManager.State
     -> GHC.Base.String -> GHC.Base.String
[GblId, Arity=2, Str=<S,1*U><L,1*U>, Unf=OtherCon []] =
    [] \r [w_sasEi w1_sasEj]
        case w_sasEi of {
          GHC.Event.TimerManager.Created ->
              GHC.Base.++ GHC.Event.TimerManager.$fShowState7 w1_sasEj;
          GHC.Event.TimerManager.Running ->
              GHC.Base.++ GHC.Event.TimerManager.$fShowState5 w1_sasEj;
          GHC.Event.TimerManager.Dying ->
              GHC.Base.++ GHC.Event.TimerManager.$fShowState3 w1_sasEj;
          GHC.Event.TimerManager.Finished ->
              GHC.Base.++ GHC.Event.TimerManager.$fShowState1 w1_sasEj;
        };

GHC.Event.TimerManager.$fShowState_$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Int -> GHC.Event.TimerManager.State -> GHC.Show.ShowS
[GblId, Arity=3, Str=<L,A><S,1*U><L,1*U>, Unf=OtherCon []] =
    [] \r [w_sasEl w1_sasEm w2_sasEn]
        GHC.Event.TimerManager.$w$cshowsPrec w1_sasEm w2_sasEn;

GHC.Event.TimerManager.$fEqState_$c==
  :: GHC.Event.TimerManager.State
     -> GHC.Event.TimerManager.State -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [ds_sasEo ds1_sasEp]
        case ds_sasEo of {
          GHC.Event.TimerManager.Created ->
              case ds1_sasEp of {
                __DEFAULT -> GHC.Types.False [];
                GHC.Event.TimerManager.Created -> GHC.Types.True [];
              };
          GHC.Event.TimerManager.Running ->
              case ds1_sasEp of {
                __DEFAULT -> GHC.Types.False [];
                GHC.Event.TimerManager.Running -> GHC.Types.True [];
              };
          GHC.Event.TimerManager.Dying ->
              case ds1_sasEp of {
                __DEFAULT -> GHC.Types.False [];
                GHC.Event.TimerManager.Dying -> GHC.Types.True [];
              };
          GHC.Event.TimerManager.Finished ->
              case ds1_sasEp of {
                __DEFAULT -> GHC.Types.False [];
                GHC.Event.TimerManager.Finished -> GHC.Types.True [];
              };
        };

GHC.Event.TimerManager.$fEqTimeoutKey [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq GHC.Event.TimerManager.TimeoutKey
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Classes.eqInt
                                     GHC.Classes.neInt];

GHC.Event.TimerManager.emControl
  :: GHC.Event.TimerManager.TimerManager -> GHC.Event.Control.Control
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLLSSSSS),1*U(A,A,A,A,U,U,U,U,U)>m,
 Unf=OtherCon []] =
    [] \r [ds_sasEv]
        case ds_sasEv of {
          GHC.Event.TimerManager.TimerManager _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              dt3_sasEB [Occ=Once]
                                              dt4_sasEC [Occ=Once]
                                              dt5_sasED [Occ=Once]
                                              dt6_sasEE [Occ=Once]
                                              dt7_sasEF [Occ=Once] ->
              GHC.Event.Control.W [dt3_sasEB
                                   dt4_sasEC
                                   dt5_sasED
                                   dt6_sasEE
                                   dt7_sasEF];
        };

GHC.Event.TimerManager.emUniqueSource
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Event.Unique.UniqueSource
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLSLLLLL),1*U(A,A,A,U,A,A,A,A,A)>m,
 Unf=OtherCon []] =
    [] \r [ds_sasEG]
        case ds_sasEG of {
          GHC.Event.TimerManager.TimerManager _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              dt2_sasEL [Occ=Once]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead] ->
              GHC.Event.Unique.US [dt2_sasEL];
        };

GHC.Event.TimerManager.emState
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.IORef.IORef GHC.Event.TimerManager.State
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLSLLLLLL),1*U(A,A,U,A,A,A,A,A,A)>m,
 Unf=OtherCon []] =
    [] \r [ds_sasER]
        case ds_sasER of {
          GHC.Event.TimerManager.TimerManager _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              dt1_sasEV [Occ=Once]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead] ->
              GHC.STRef.STRef [dt1_sasEV];
        };

GHC.Event.TimerManager.emTimeouts
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.IORef.IORef GHC.Event.TimerManager.TimeoutQueue
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LSLLLLLLL),1*U(A,U,A,A,A,A,A,A,A)>m,
 Unf=OtherCon []] =
    [] \r [ds_sasF2]
        case ds_sasF2 of {
          GHC.Event.TimerManager.TimerManager _ [Occ=Dead]
                                              dt_sasF5 [Occ=Once]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead] ->
              GHC.STRef.STRef [dt_sasF5];
        };

GHC.Event.TimerManager.emBackend
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Event.Internal.Backend
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SLLLLLLLL),1*U(U,A,A,A,A,A,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [ds_sasFd]
        case ds_sasFd of {
          GHC.Event.TimerManager.TimerManager ds1_sasFf [Occ=Once]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead] ->
              ds1_sasFf;
        };

GHC.Event.TimerManager.newDefaultBackend
  :: GHC.Types.IO GHC.Event.Internal.Backend
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [void_0E] GHC.Event.Poll.new1 GHC.Prim.void#;

GHC.Event.TimerManager.wakeManager1
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=2,
 Str=<S(LLLLLLSLS),1*U(A,A,A,A,A,A,U,A,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [mgr_sasFo void_0E]
        case mgr_sasFo of {
          GHC.Event.TimerManager.TimerManager _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              dt5_sasFx [Occ=Once]
                                              _ [Occ=Dead]
                                              dt7_sasFz [Occ=Once] ->
              GHC.Event.Control.$wsendWakeup dt5_sasFx dt7_sasFz GHC.Prim.void#;
        };

GHC.Event.TimerManager.wakeManager
  :: GHC.Event.TimerManager.TimerManager -> GHC.Types.IO ()
[GblId,
 Arity=2,
 Str=<S(LLLLLLSLS),1*U(A,A,A,A,A,A,U,A,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 void_0E]
        GHC.Event.TimerManager.wakeManager1 eta_B2 GHC.Prim.void#;

GHC.Event.TimerManager.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

GHC.Event.TimerManager.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.TimerManager.$trModule4];

GHC.Event.TimerManager.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.Event.TimerManager"#;

GHC.Event.TimerManager.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.TimerManager.$trModule2];

GHC.Event.TimerManager.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [GHC.Event.TimerManager.$trModule3
                                     GHC.Event.TimerManager.$trModule1];

$krep_rasDC :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.Unique.$tcUnique
                                              GHC.Types.[]];

$krep1_rasDD :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.Control.$tcControl
                                              GHC.Types.[]];

$krep2_rasDE :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.Unique.$tcUniqueSource
                                              GHC.Types.[]];

$krep3_rasDF :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Tuple.$tc()
                                              GHC.Types.[]];

$krep4_rasDG :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.Internal.$tcBackend
                                              GHC.Types.[]];

$krep5_rasDH :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep3_rasDF GHC.Types.[]];

$krep6_rasDI :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcIO
                                              $krep5_rasDH];

$krep7_rasDJ :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep6_rasDI GHC.Types.[]];

$krep8_rasDK :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.PSQ.$tcIntPSQ
                                              $krep7_rasDJ];

$krep9_rasDL :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep8_rasDK GHC.Types.[]];

$krep10_rasDM :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.IORef.$tcIORef
                                              $krep9_rasDL];

GHC.Event.TimerManager.$tcTimeoutKey2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "TimeoutKey"#;

GHC.Event.TimerManager.$tcTimeoutKey1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.TimerManager.$tcTimeoutKey2];

GHC.Event.TimerManager.$tcTimeoutKey :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [11465769786694886755##
                                    8841886228133799087##
                                    GHC.Event.TimerManager.$trModule
                                    GHC.Event.TimerManager.$tcTimeoutKey1
                                    0#
                                    GHC.Types.krep$*];

$krep11_rasDN :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.TimerManager.$tcTimeoutKey
                                              GHC.Types.[]];

GHC.Event.TimerManager.$tc'TK1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_rasDC $krep11_rasDN];

GHC.Event.TimerManager.$tc'TK3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'TK"#;

GHC.Event.TimerManager.$tc'TK2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.TimerManager.$tc'TK3];

GHC.Event.TimerManager.$tc'TK :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [4362213157428095811##
                                    13641506162182658721##
                                    GHC.Event.TimerManager.$trModule
                                    GHC.Event.TimerManager.$tc'TK2
                                    0#
                                    GHC.Event.TimerManager.$tc'TK1];

GHC.Event.TimerManager.$tcState2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "State"#;

GHC.Event.TimerManager.$tcState1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.TimerManager.$tcState2];

GHC.Event.TimerManager.$tcState :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [10067362680685980057##
                                    6560547589611231606##
                                    GHC.Event.TimerManager.$trModule
                                    GHC.Event.TimerManager.$tcState1
                                    0#
                                    GHC.Types.krep$*];

GHC.Event.TimerManager.$tc'Created1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.TimerManager.$tcState
                                              GHC.Types.[]];

GHC.Event.TimerManager.$tc'Created3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Created"#;

GHC.Event.TimerManager.$tc'Created2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.TimerManager.$tc'Created3];

GHC.Event.TimerManager.$tc'Created :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [7473777249114724674##
                                    2904627795268885228##
                                    GHC.Event.TimerManager.$trModule
                                    GHC.Event.TimerManager.$tc'Created2
                                    0#
                                    GHC.Event.TimerManager.$tc'Created1];

GHC.Event.TimerManager.$tc'Running2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Running"#;

GHC.Event.TimerManager.$tc'Running1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.TimerManager.$tc'Running2];

GHC.Event.TimerManager.$tc'Running :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [15425377252641674582##
                                    12404533232809671740##
                                    GHC.Event.TimerManager.$trModule
                                    GHC.Event.TimerManager.$tc'Running1
                                    0#
                                    GHC.Event.TimerManager.$tc'Created1];

GHC.Event.TimerManager.$tc'Dying2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Dying"#;

GHC.Event.TimerManager.$tc'Dying1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.TimerManager.$tc'Dying2];

GHC.Event.TimerManager.$tc'Dying :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [13405772281963838681##
                                    437803396301020926##
                                    GHC.Event.TimerManager.$trModule
                                    GHC.Event.TimerManager.$tc'Dying1
                                    0#
                                    GHC.Event.TimerManager.$tc'Created1];

GHC.Event.TimerManager.$tc'Finished2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Finished"#;

GHC.Event.TimerManager.$tc'Finished1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.TimerManager.$tc'Finished2];

GHC.Event.TimerManager.$tc'Finished :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [1288208730452846229##
                                    15347214930365004647##
                                    GHC.Event.TimerManager.$trModule
                                    GHC.Event.TimerManager.$tc'Finished1
                                    0#
                                    GHC.Event.TimerManager.$tc'Created1];

$krep12_rasDO :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [GHC.Event.TimerManager.$tc'Created1
                      GHC.Types.[]];

$krep13_rasDP :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.IORef.$tcIORef
                                              $krep12_rasDO];

GHC.Event.TimerManager.$tcTimerManager2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "TimerManager"#;

GHC.Event.TimerManager.$tcTimerManager1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.TimerManager.$tcTimerManager2];

GHC.Event.TimerManager.$tcTimerManager :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [3987042711794726631##
                                    6993782799294290901##
                                    GHC.Event.TimerManager.$trModule
                                    GHC.Event.TimerManager.$tcTimerManager1
                                    0#
                                    GHC.Types.krep$*];

$krep14_rasDQ :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.TimerManager.$tcTimerManager
                                              GHC.Types.[]];

$krep15_rasDR :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep1_rasDD $krep14_rasDQ];

$krep16_rasDS :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_rasDE $krep15_rasDR];

$krep17_rasDT :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep13_rasDP $krep16_rasDS];

$krep18_rasDU :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep10_rasDM $krep17_rasDT];

GHC.Event.TimerManager.$tc'TimerManager1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep4_rasDG $krep18_rasDU];

GHC.Event.TimerManager.$tc'TimerManager3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'TimerManager"#;

GHC.Event.TimerManager.$tc'TimerManager2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.TimerManager.$tc'TimerManager3];

GHC.Event.TimerManager.$tc'TimerManager :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [451007785877958328##
                                    8145550165147362681##
                                    GHC.Event.TimerManager.$trModule
                                    GHC.Event.TimerManager.$tc'TimerManager2
                                    0#
                                    GHC.Event.TimerManager.$tc'TimerManager1];

GHC.Event.TimerManager.$fShowState_$cshow
  :: GHC.Event.TimerManager.State -> GHC.Base.String
[GblId, Arity=1, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [x_sasFA]
        case x_sasFA of {
          GHC.Event.TimerManager.Created ->
              GHC.Event.TimerManager.$fShowState7;
          GHC.Event.TimerManager.Running ->
              GHC.Event.TimerManager.$fShowState5;
          GHC.Event.TimerManager.Dying ->
              GHC.Event.TimerManager.$fShowState3;
          GHC.Event.TimerManager.Finished ->
              GHC.Event.TimerManager.$fShowState1;
        };

GHC.Event.TimerManager.$fShowState_$cshowList
  :: [GHC.Event.TimerManager.State] -> GHC.Show.ShowS
[GblId, Arity=2, Str=<S,1*U><L,U>, Unf=OtherCon []] =
    [] \r [ls_sasFC s_sasFD]
        GHC.Show.showList__
            GHC.Event.TimerManager.$w$cshowsPrec ls_sasFC s_sasFD;

GHC.Event.TimerManager.$fShowState [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show GHC.Event.TimerManager.State
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Event.TimerManager.$fShowState_$cshowsPrec
                                    GHC.Event.TimerManager.$fShowState_$cshow
                                    GHC.Event.TimerManager.$fShowState_$cshowList];

GHC.Event.TimerManager.$fEqState_$c/= [InlPrag=INLINE (sat-args=2)]
  :: GHC.Event.TimerManager.State
     -> GHC.Event.TimerManager.State -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [eta_sasFE eta1_sasFF]
        case eta_sasFE of {
          GHC.Event.TimerManager.Created ->
              case eta1_sasFF of {
                __DEFAULT -> GHC.Types.True [];
                GHC.Event.TimerManager.Created -> GHC.Types.False [];
              };
          GHC.Event.TimerManager.Running ->
              case eta1_sasFF of {
                __DEFAULT -> GHC.Types.True [];
                GHC.Event.TimerManager.Running -> GHC.Types.False [];
              };
          GHC.Event.TimerManager.Dying ->
              case eta1_sasFF of {
                __DEFAULT -> GHC.Types.True [];
                GHC.Event.TimerManager.Dying -> GHC.Types.False [];
              };
          GHC.Event.TimerManager.Finished ->
              case eta1_sasFF of {
                __DEFAULT -> GHC.Types.True [];
                GHC.Event.TimerManager.Finished -> GHC.Types.False [];
              };
        };

GHC.Event.TimerManager.$fEqState [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq GHC.Event.TimerManager.State
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Event.TimerManager.$fEqState_$c==
                                     GHC.Event.TimerManager.$fEqState_$c/=];

GHC.Event.TimerManager.$weditTimeouts [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.MutVar#
       GHC.Prim.RealWorld GHC.Event.TimerManager.TimeoutQueue
     -> GHC.Prim.MutVar# GHC.Prim.RealWorld GHC.Event.TimerManager.State
     -> GHC.Prim.MutableByteArray# GHC.Prim.RealWorld
     -> GHC.Prim.Int#
     -> GHC.Prim.MutVar# GHC.Prim.RealWorld GHC.Types.Bool
     -> GHC.Event.TimerManager.TimeoutEdit
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=7,
 Str=<S,U><L,A><L,A><L,U><L,U><L,C(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ww_sasFL
           ww1_sasFM
           ww2_sasFN
           ww3_sasFO
           ww4_sasFP
           w_sasFQ
           void_0E]
        let {
          sat_sasGt [Occ=Once]
            :: GHC.Event.TimerManager.TimeoutQueue
               -> (GHC.Event.TimerManager.TimeoutQueue, GHC.Types.Bool)
          [LclId] =
              [w_sasFQ] \r [a1_sasFS]
                  case w_sasFQ a1_sasFS of a'1_sasFT {
                    __DEFAULT ->
                        let {
                          sat_sasGs [Occ=Once] :: GHC.Types.Bool
                          [LclId] =
                              [a1_sasFS a'1_sasFT] \u []
                                  case a1_sasFS of {
                                    GHC.Event.PSQ.Bin _ [Occ=Dead]
                                                      dt1_sasFW [Occ=Once*]
                                                      _ [Occ=Dead]
                                                      _ [Occ=Dead]
                                                      _ [Occ=Dead]
                                                      _ [Occ=Dead] ->
                                        case a'1_sasFT of {
                                          GHC.Event.PSQ.Bin _ [Occ=Dead]
                                                            dt5_sasG3 [Occ=Once]
                                                            _ [Occ=Dead]
                                                            _ [Occ=Dead]
                                                            _ [Occ=Dead]
                                                            _ [Occ=Dead] ->
                                              case neWord# [dt1_sasFW dt5_sasG3] of sat_sasG8 {
                                                __DEFAULT -> tagToEnum# [sat_sasG8];
                                              };
                                          GHC.Event.PSQ.Tip _ [Occ=Dead]
                                                            dt5_sasGa [Occ=Once]
                                                            _ [Occ=Dead] ->
                                              case neWord# [dt1_sasFW dt5_sasGa] of sat_sasGc {
                                                __DEFAULT -> tagToEnum# [sat_sasGc];
                                              };
                                          GHC.Event.PSQ.Nil -> GHC.Types.True [];
                                        };
                                    GHC.Event.PSQ.Tip _ [Occ=Dead]
                                                      dt1_sasGe [Occ=Once*]
                                                      _ [Occ=Dead] ->
                                        case a'1_sasFT of {
                                          GHC.Event.PSQ.Bin _ [Occ=Dead]
                                                            dt3_sasGi [Occ=Once]
                                                            _ [Occ=Dead]
                                                            _ [Occ=Dead]
                                                            _ [Occ=Dead]
                                                            _ [Occ=Dead] ->
                                              case neWord# [dt1_sasGe dt3_sasGi] of sat_sasGn {
                                                __DEFAULT -> tagToEnum# [sat_sasGn];
                                              };
                                          GHC.Event.PSQ.Tip _ [Occ=Dead]
                                                            dt3_sasGp [Occ=Once]
                                                            _ [Occ=Dead] ->
                                              case neWord# [dt1_sasGe dt3_sasGp] of sat_sasGr {
                                                __DEFAULT -> tagToEnum# [sat_sasGr];
                                              };
                                          GHC.Event.PSQ.Nil -> GHC.Types.True [];
                                        };
                                    GHC.Event.PSQ.Nil -> GHC.Types.True [];
                                  };
                        } in  (,) [a'1_sasFT sat_sasGs];
                  };
        } in 
          case atomicModifyMutVar# [ww_sasFL sat_sasGt GHC.Prim.void#] of {
            Unit# ipv1_sasGw [Occ=Once!] ->
                case ipv1_sasGw of {
                  GHC.Types.False -> Unit# [GHC.Tuple.()];
                  GHC.Types.True ->
                      GHC.Event.Control.$wsendWakeup ww3_sasFO ww4_sasFP GHC.Prim.void#;
                };
          };

GHC.Event.TimerManager.unregisterTimeout2 [InlPrag=NOUSERINLINE[0]]
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Event.TimerManager.TimeoutEdit
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=3,
 Str=<S(LSSSLLSLS),1*U(A,U,1*U,1*U,A,A,U,A,U)><L,C(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sasGy w1_sasGz void_0E]
        case w_sasGy of {
          GHC.Event.TimerManager.TimerManager _ [Occ=Dead]
                                              ww2_sasGD [Occ=Once]
                                              ww3_sasGE [Occ=Once]
                                              ww4_sasGF [Occ=Once]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              ww7_sasGI [Occ=Once]
                                              _ [Occ=Dead]
                                              ww9_sasGK [Occ=Once] ->
              GHC.Event.TimerManager.$weditTimeouts
                  ww2_sasGD
                  ww3_sasGE
                  ww4_sasGF
                  ww7_sasGI
                  ww9_sasGK
                  w1_sasGz
                  GHC.Prim.void#;
        };

GHC.Event.TimerManager.unregisterTimeout1
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Event.TimerManager.TimeoutKey
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=3,
 Str=<S(LSLLLLLLL),1*U(A,U,A,A,A,A,U,A,U)><L,U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [mgr_sasGL ds_sasGM void_0E]
        case mgr_sasGL of {
          GHC.Event.TimerManager.TimerManager _ [Occ=Dead]
                                              ww2_sasGQ [Occ=Once]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              ww7_sasGV [Occ=Once]
                                              _ [Occ=Dead]
                                              ww9_sasGX [Occ=Once] ->
              let {
                sat_sasHz [Occ=Once]
                  :: GHC.Event.TimerManager.TimeoutQueue
                     -> (GHC.Event.TimerManager.TimeoutQueue, GHC.Types.Bool)
                [LclId] =
                    [ds_sasGM] \r [a1_sasGY]
                        case GHC.Event.PSQ.delete ds_sasGM a1_sasGY of a'1_sasGZ {
                          __DEFAULT ->
                              let {
                                sat_sasHy [Occ=Once] :: GHC.Types.Bool
                                [LclId] =
                                    [a1_sasGY a'1_sasGZ] \u []
                                        case a1_sasGY of {
                                          GHC.Event.PSQ.Bin _ [Occ=Dead]
                                                            dt1_sasH2 [Occ=Once*]
                                                            _ [Occ=Dead]
                                                            _ [Occ=Dead]
                                                            _ [Occ=Dead]
                                                            _ [Occ=Dead] ->
                                              case a'1_sasGZ of {
                                                GHC.Event.PSQ.Bin _ [Occ=Dead]
                                                                  dt5_sasH9 [Occ=Once]
                                                                  _ [Occ=Dead]
                                                                  _ [Occ=Dead]
                                                                  _ [Occ=Dead]
                                                                  _ [Occ=Dead] ->
                                                    case
                                                        neWord# [dt1_sasH2 dt5_sasH9]
                                                    of
                                                    sat_sasHe
                                                    { __DEFAULT -> tagToEnum# [sat_sasHe];
                                                    };
                                                GHC.Event.PSQ.Tip _ [Occ=Dead]
                                                                  dt5_sasHg [Occ=Once]
                                                                  _ [Occ=Dead] ->
                                                    case
                                                        neWord# [dt1_sasH2 dt5_sasHg]
                                                    of
                                                    sat_sasHi
                                                    { __DEFAULT -> tagToEnum# [sat_sasHi];
                                                    };
                                                GHC.Event.PSQ.Nil -> GHC.Types.True [];
                                              };
                                          GHC.Event.PSQ.Tip _ [Occ=Dead]
                                                            dt1_sasHk [Occ=Once*]
                                                            _ [Occ=Dead] ->
                                              case a'1_sasGZ of {
                                                GHC.Event.PSQ.Bin _ [Occ=Dead]
                                                                  dt3_sasHo [Occ=Once]
                                                                  _ [Occ=Dead]
                                                                  _ [Occ=Dead]
                                                                  _ [Occ=Dead]
                                                                  _ [Occ=Dead] ->
                                                    case
                                                        neWord# [dt1_sasHk dt3_sasHo]
                                                    of
                                                    sat_sasHt
                                                    { __DEFAULT -> tagToEnum# [sat_sasHt];
                                                    };
                                                GHC.Event.PSQ.Tip _ [Occ=Dead]
                                                                  dt3_sasHv [Occ=Once]
                                                                  _ [Occ=Dead] ->
                                                    case
                                                        neWord# [dt1_sasHk dt3_sasHv]
                                                    of
                                                    sat_sasHx
                                                    { __DEFAULT -> tagToEnum# [sat_sasHx];
                                                    };
                                                GHC.Event.PSQ.Nil -> GHC.Types.True [];
                                              };
                                          GHC.Event.PSQ.Nil -> GHC.Types.True [];
                                        };
                              } in  (,) [a'1_sasGZ sat_sasHy];
                        };
              } in 
                case atomicModifyMutVar# [ww2_sasGQ sat_sasHz GHC.Prim.void#] of {
                  Unit# ipv1_sasHC [Occ=Once!] ->
                      case ipv1_sasHC of {
                        GHC.Types.False -> Unit# [GHC.Tuple.()];
                        GHC.Types.True ->
                            GHC.Event.Control.$wsendWakeup ww7_sasGV ww9_sasGX GHC.Prim.void#;
                      };
                };
        };

GHC.Event.TimerManager.unregisterTimeout
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Event.TimerManager.TimeoutKey -> GHC.Types.IO ()
[GblId,
 Arity=3,
 Str=<S(LSLLLLLLL),1*U(A,U,A,A,A,A,U,A,U)><L,U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        GHC.Event.TimerManager.unregisterTimeout1
            eta_B3 eta_B2 GHC.Prim.void#;

GHC.Event.TimerManager.$wregisterTimeout [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.MutVar#
       GHC.Prim.RealWorld GHC.Event.TimerManager.TimeoutQueue
     -> GHC.Prim.MutVar# GHC.Prim.RealWorld GHC.Event.TimerManager.State
     -> GHC.Prim.MutableByteArray# GHC.Prim.RealWorld
     -> GHC.Prim.Int#
     -> GHC.Prim.MutVar# GHC.Prim.RealWorld GHC.Types.Bool
     -> GHC.Prim.Int#
     -> GHC.Event.TimerManager.TimeoutCallback
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Event.TimerManager.TimeoutKey #)
[GblId,
 Arity=8,
 Str=<L,U><L,A><S,U><L,U><L,U><S,U><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [ww_sasHE
           ww1_sasHF
           ww2_sasHG
           ww3_sasHH
           ww4_sasHI
           ww5_sasHJ
           w_sasHK
           void_0E]
        case fetchAddIntArray# [ww2_sasHG 0# 1# GHC.Prim.void#] of {
          Unit# ipv1_sasHO ->
              let {
                ipv2_sasHP [Dmd=<L,U(U)>] :: GHC.Types.Int
                [LclId, Unf=OtherCon []] =
                    CCCS GHC.Types.I#! [ipv1_sasHO];
              } in 
                case <=# [ww5_sasHJ 0#] of {
                  __DEFAULT ->
                      case __pkg_ccall base-4.11.0.0 [GHC.Prim.void#] of {
                        Unit# ds3_sasHU [Occ=Once] ->
                            case int2Word# [ww5_sasHJ] of sat_sasHW {
                              __DEFAULT ->
                                  case timesWord# [sat_sasHW 1000##] of sat_sasHX {
                                    __DEFAULT ->
                                        case plusWord# [sat_sasHX ds3_sasHU] of p_sasHV {
                                          __DEFAULT ->
                                              let {
                                                sat_sasIA [Occ=Once]
                                                  :: GHC.Event.TimerManager.TimeoutQueue
                                                     -> (GHC.Event.TimerManager.TimeoutQueue,
                                                         GHC.Types.Bool)
                                                [LclId] =
                                                    [w_sasHK
                                                     ipv1_sasHO
                                                     ipv2_sasHP
                                                     p_sasHV] \r [a1_sasHY]
                                                        case
                                                            GHC.Event.PSQ.delete ipv2_sasHP a1_sasHY
                                                        of
                                                        sat_sasHZ
                                                        { __DEFAULT ->
                                                              case
                                                                  GHC.Event.PSQ.$wunsafeInsertNew
                                                                      ipv1_sasHO
                                                                      p_sasHV
                                                                      w_sasHK
                                                                      sat_sasHZ
                                                              of
                                                              a'1_sasI0
                                                              { __DEFAULT ->
                                                                    let {
                                                                      sat_sasIz [Occ=Once]
                                                                        :: GHC.Types.Bool
                                                                      [LclId] =
                                                                          [a1_sasHY a'1_sasI0] \u []
                                                                              case a1_sasHY of {
                                                                                GHC.Event.PSQ.Bin _ [Occ=Dead]
                                                                                                  dt1_sasI3 [Occ=Once*]
                                                                                                  _ [Occ=Dead]
                                                                                                  _ [Occ=Dead]
                                                                                                  _ [Occ=Dead]
                                                                                                  _ [Occ=Dead] ->
                                                                                    case
                                                                                        a'1_sasI0
                                                                                    of
                                                                                    { GHC.Event.PSQ.Bin _ [Occ=Dead]
                                                                                                        dt5_sasIa [Occ=Once]
                                                                                                        _ [Occ=Dead]
                                                                                                        _ [Occ=Dead]
                                                                                                        _ [Occ=Dead]
                                                                                                        _ [Occ=Dead] ->
                                                                                          case
                                                                                              neWord# [dt1_sasI3
                                                                                                       dt5_sasIa]
                                                                                          of
                                                                                          sat_sasIf
                                                                                          { __DEFAULT ->
                                                                                                tagToEnum# [sat_sasIf];
                                                                                          };
                                                                                      GHC.Event.PSQ.Tip _ [Occ=Dead]
                                                                                                        dt5_sasIh [Occ=Once]
                                                                                                        _ [Occ=Dead] ->
                                                                                          case
                                                                                              neWord# [dt1_sasI3
                                                                                                       dt5_sasIh]
                                                                                          of
                                                                                          sat_sasIj
                                                                                          { __DEFAULT ->
                                                                                                tagToEnum# [sat_sasIj];
                                                                                          };
                                                                                      GHC.Event.PSQ.Nil ->
                                                                                          GHC.Types.True [];
                                                                                    };
                                                                                GHC.Event.PSQ.Tip _ [Occ=Dead]
                                                                                                  dt1_sasIl [Occ=Once*]
                                                                                                  _ [Occ=Dead] ->
                                                                                    case
                                                                                        a'1_sasI0
                                                                                    of
                                                                                    { GHC.Event.PSQ.Bin _ [Occ=Dead]
                                                                                                        dt3_sasIp [Occ=Once]
                                                                                                        _ [Occ=Dead]
                                                                                                        _ [Occ=Dead]
                                                                                                        _ [Occ=Dead]
                                                                                                        _ [Occ=Dead] ->
                                                                                          case
                                                                                              neWord# [dt1_sasIl
                                                                                                       dt3_sasIp]
                                                                                          of
                                                                                          sat_sasIu
                                                                                          { __DEFAULT ->
                                                                                                tagToEnum# [sat_sasIu];
                                                                                          };
                                                                                      GHC.Event.PSQ.Tip _ [Occ=Dead]
                                                                                                        dt3_sasIw [Occ=Once]
                                                                                                        _ [Occ=Dead] ->
                                                                                          case
                                                                                              neWord# [dt1_sasIl
                                                                                                       dt3_sasIw]
                                                                                          of
                                                                                          sat_sasIy
                                                                                          { __DEFAULT ->
                                                                                                tagToEnum# [sat_sasIy];
                                                                                          };
                                                                                      GHC.Event.PSQ.Nil ->
                                                                                          GHC.Types.True [];
                                                                                    };
                                                                                GHC.Event.PSQ.Nil ->
                                                                                    GHC.Types.True [];
                                                                              };
                                                                    } in  (,) [a'1_sasI0 sat_sasIz];
                                                              };
                                                        };
                                              } in 
                                                case
                                                    atomicModifyMutVar# [ww_sasHE
                                                                         sat_sasIA
                                                                         GHC.Prim.void#]
                                                of
                                                { Unit# ipv4_sasID [Occ=Once!] ->
                                                      case ipv4_sasID of {
                                                        GHC.Types.False -> Unit# [ipv2_sasHP];
                                                        GHC.Types.True ->
                                                            case
                                                                narrow32Int# [ww3_sasHH]
                                                            of
                                                            sat_sasIG
                                                            { __DEFAULT ->
                                                                  case
                                                                      __pkg_ccall base-4.11.0.0 [sat_sasIG
                                                                                                 1##
                                                                                                 GHC.Prim.void#]
                                                                  of
                                                                  { Unit# ds5_sasIJ [Occ=Once] ->
                                                                        case
                                                                            narrow32Int# [ds5_sasIJ]
                                                                        of
                                                                        { __DEFAULT ->
                                                                              case
                                                                                  __pkg_ccall base-4.11.0.0 [GHC.Prim.void#]
                                                                              of
                                                                              { Unit# ds7_sasIO [Occ=Once] ->
                                                                                    case
                                                                                        readMutVar# [ww4_sasHI
                                                                                                     GHC.Prim.void#]
                                                                                    of
                                                                                    { Unit# ipv6_sasIR [Occ=Once!] ->
                                                                                          case
                                                                                              ipv6_sasIR
                                                                                          of
                                                                                          { GHC.Types.False ->
                                                                                                case
                                                                                                    Foreign.C.Error.throwErrno1
                                                                                                        GHC.Event.Control.sendWakeup2
                                                                                                        GHC.Prim.void#
                                                                                                of
                                                                                                { Unit# _ [Occ=Dead] ->
                                                                                                      Unit# [ipv2_sasHP];
                                                                                                };
                                                                                            GHC.Types.True ->
                                                                                                case
                                                                                                    narrow32Int# [ds7_sasIO]
                                                                                                of
                                                                                                { __DEFAULT ->
                                                                                                      case
                                                                                                          Foreign.C.Error.throwErrno1
                                                                                                              GHC.Event.Control.sendWakeup2
                                                                                                              GHC.Prim.void#
                                                                                                      of
                                                                                                      { Unit# _ [Occ=Dead] ->
                                                                                                            Unit# [ipv2_sasHP];
                                                                                                      };
                                                                                                  9# ->
                                                                                                      Unit# [ipv2_sasHP];
                                                                                                };
                                                                                          };
                                                                                    };
                                                                              };
                                                                          0# -> Unit# [ipv2_sasHP];
                                                                        };
                                                                  };
                                                            };
                                                      };
                                                };
                                        };
                                  };
                            };
                      };
                  1# ->
                      case w_sasHK GHC.Prim.void# of {
                        Unit# _ [Occ=Dead] -> Unit# [ipv2_sasHP];
                      };
                };
        };

GHC.Event.TimerManager.registerTimeout1 [InlPrag=NOUSERINLINE[0]]
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Types.Int
     -> GHC.Event.TimerManager.TimeoutCallback
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Event.TimerManager.TimeoutKey #)
[GblId,
 Arity=4,
 Str=<S(LSSSLLSLS),1*U(A,U,1*U,U,A,A,U,A,U)><S(S),1*U(U)><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sasJ3 w1_sasJ4 w2_sasJ5 void_0E]
        case w_sasJ3 of {
          GHC.Event.TimerManager.TimerManager _ [Occ=Dead]
                                              ww2_sasJ9 [Occ=Once]
                                              ww3_sasJa [Occ=Once]
                                              ww4_sasJb [Occ=Once]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              ww7_sasJe [Occ=Once]
                                              _ [Occ=Dead]
                                              ww9_sasJg [Occ=Once] ->
              case w1_sasJ4 of {
                GHC.Types.I# ww11_sasJi [Occ=Once] ->
                    GHC.Event.TimerManager.$wregisterTimeout
                        ww2_sasJ9
                        ww3_sasJa
                        ww4_sasJb
                        ww7_sasJe
                        ww9_sasJg
                        ww11_sasJi
                        w2_sasJ5
                        GHC.Prim.void#;
              };
        };

GHC.Event.TimerManager.registerTimeout
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Types.Int
     -> GHC.Event.TimerManager.TimeoutCallback
     -> GHC.Types.IO GHC.Event.TimerManager.TimeoutKey
[GblId,
 Arity=4,
 Str=<S(LSSSLLSLS),1*U(A,U,1*U,U,A,A,U,A,U)><S(S),1*U(U)><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        GHC.Event.TimerManager.registerTimeout1
            eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Event.TimerManager.updateTimeout1
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Event.TimerManager.TimeoutKey
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Str=<L,1*U(A,U,A,A,A,A,U,A,U)><L,U(U)><L,1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [mgr_sasJj ds_sasJk us_sasJl void_0E]
        case __pkg_ccall base-4.11.0.0 [GHC.Prim.void#] of {
          Unit# ds2_sasJq [Occ=Once] ->
              case mgr_sasJj of {
                GHC.Event.TimerManager.TimerManager _ [Occ=Dead]
                                                    ww2_sasJt [Occ=Once]
                                                    _ [Occ=Dead]
                                                    _ [Occ=Dead]
                                                    _ [Occ=Dead]
                                                    _ [Occ=Dead]
                                                    ww7_sasJy [Occ=Once]
                                                    _ [Occ=Dead]
                                                    ww9_sasJA [Occ=Once] ->
                    let {
                      x_sasJB [Occ=OnceL!, Dmd=<L,U(U)>] :: GHC.Word.Word64
                      [LclId] =
                          [us_sasJl ds2_sasJq] \u []
                              case us_sasJl of {
                                GHC.Types.I# x#_sasJD [Occ=Once] ->
                                    case int2Word# [x#_sasJD] of sat_sasJE {
                                      __DEFAULT ->
                                          case timesWord# [sat_sasJE 1000##] of sat_sasJF {
                                            __DEFAULT ->
                                                case plusWord# [sat_sasJF ds2_sasJq] of sat_sasJG {
                                                  __DEFAULT -> GHC.Word.W64# [sat_sasJG];
                                                };
                                          };
                                    };
                              }; } in
                    let {
                      sat_sasKv [Occ=Once]
                        :: GHC.Event.TimerManager.TimeoutQueue
                           -> (GHC.Event.TimerManager.TimeoutQueue, GHC.Types.Bool)
                      [LclId] =
                          [ds_sasJk x_sasJB] \r [a1_sasJH]
                              case GHC.Event.PSQ.deleteView ds_sasJk a1_sasJH of {
                                GHC.Base.Nothing ->
                                    case a1_sasJH of a'1_sasJJ {
                                      __DEFAULT ->
                                          let {
                                            sat_sasJL [Occ=Once] :: GHC.Types.Bool
                                            [LclId] =
                                                [a'1_sasJJ] \u []
                                                    case a'1_sasJJ of {
                                                      __DEFAULT -> GHC.Types.False [];
                                                      GHC.Event.PSQ.Nil -> GHC.Types.True [];
                                                    };
                                          } in  (,) [a'1_sasJJ sat_sasJL];
                                    };
                                GHC.Base.Just ds4_sasJM [Occ=Once!] ->
                                    case ds4_sasJM of {
                                      (,,) _ [Occ=Dead] v_sasJP [Occ=Once] t0'_sasJQ [Occ=Once] ->
                                          case ds_sasJk of {
                                            GHC.Types.I# ww11_sasJS [Occ=Once] ->
                                                case x_sasJB of {
                                                  GHC.Word.W64# ww13_sasJU [Occ=Once] ->
                                                      case
                                                          GHC.Event.PSQ.$wunsafeInsertNew
                                                              ww11_sasJS
                                                              ww13_sasJU
                                                              v_sasJP
                                                              t0'_sasJQ
                                                      of
                                                      a'1_sasJV
                                                      { __DEFAULT ->
                                                            let {
                                                              sat_sasKu [Occ=Once] :: GHC.Types.Bool
                                                              [LclId] =
                                                                  [a1_sasJH a'1_sasJV] \u []
                                                                      case a1_sasJH of {
                                                                        GHC.Event.PSQ.Bin _ [Occ=Dead]
                                                                                          dt1_sasJY [Occ=Once*]
                                                                                          _ [Occ=Dead]
                                                                                          _ [Occ=Dead]
                                                                                          _ [Occ=Dead]
                                                                                          _ [Occ=Dead] ->
                                                                            case a'1_sasJV of {
                                                                              GHC.Event.PSQ.Bin _ [Occ=Dead]
                                                                                                dt5_sasK5 [Occ=Once]
                                                                                                _ [Occ=Dead]
                                                                                                _ [Occ=Dead]
                                                                                                _ [Occ=Dead]
                                                                                                _ [Occ=Dead] ->
                                                                                  case
                                                                                      neWord# [dt1_sasJY
                                                                                               dt5_sasK5]
                                                                                  of
                                                                                  sat_sasKa
                                                                                  { __DEFAULT ->
                                                                                        tagToEnum# [sat_sasKa];
                                                                                  };
                                                                              GHC.Event.PSQ.Tip _ [Occ=Dead]
                                                                                                dt5_sasKc [Occ=Once]
                                                                                                _ [Occ=Dead] ->
                                                                                  case
                                                                                      neWord# [dt1_sasJY
                                                                                               dt5_sasKc]
                                                                                  of
                                                                                  sat_sasKe
                                                                                  { __DEFAULT ->
                                                                                        tagToEnum# [sat_sasKe];
                                                                                  };
                                                                              GHC.Event.PSQ.Nil ->
                                                                                  GHC.Types.True [];
                                                                            };
                                                                        GHC.Event.PSQ.Tip _ [Occ=Dead]
                                                                                          dt1_sasKg [Occ=Once*]
                                                                                          _ [Occ=Dead] ->
                                                                            case a'1_sasJV of {
                                                                              GHC.Event.PSQ.Bin _ [Occ=Dead]
                                                                                                dt3_sasKk [Occ=Once]
                                                                                                _ [Occ=Dead]
                                                                                                _ [Occ=Dead]
                                                                                                _ [Occ=Dead]
                                                                                                _ [Occ=Dead] ->
                                                                                  case
                                                                                      neWord# [dt1_sasKg
                                                                                               dt3_sasKk]
                                                                                  of
                                                                                  sat_sasKp
                                                                                  { __DEFAULT ->
                                                                                        tagToEnum# [sat_sasKp];
                                                                                  };
                                                                              GHC.Event.PSQ.Tip _ [Occ=Dead]
                                                                                                dt3_sasKr [Occ=Once]
                                                                                                _ [Occ=Dead] ->
                                                                                  case
                                                                                      neWord# [dt1_sasKg
                                                                                               dt3_sasKr]
                                                                                  of
                                                                                  sat_sasKt
                                                                                  { __DEFAULT ->
                                                                                        tagToEnum# [sat_sasKt];
                                                                                  };
                                                                              GHC.Event.PSQ.Nil ->
                                                                                  GHC.Types.True [];
                                                                            };
                                                                        GHC.Event.PSQ.Nil ->
                                                                            GHC.Types.True [];
                                                                      };
                                                            } in  (,) [a'1_sasJV sat_sasKu];
                                                      };
                                                };
                                          };
                                    };
                              };
                    } in 
                      case atomicModifyMutVar# [ww2_sasJt sat_sasKv GHC.Prim.void#] of {
                        Unit# ipv1_sasKy [Occ=Once!] ->
                            case ipv1_sasKy of {
                              GHC.Types.False -> Unit# [GHC.Tuple.()];
                              GHC.Types.True ->
                                  GHC.Event.Control.$wsendWakeup ww7_sasJy ww9_sasJA GHC.Prim.void#;
                            };
                      };
              };
        };

GHC.Event.TimerManager.updateTimeout
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Event.TimerManager.TimeoutKey
     -> GHC.Types.Int
     -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Str=<L,1*U(A,U,A,A,A,A,U,A,U)><L,U(U)><L,1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        GHC.Event.TimerManager.updateTimeout1
            eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Event.TimerManager.cleanup1 [InlPrag=NOUSERINLINE[0]]
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SLSLLLLSL),1*U(U,A,U,A,U,U,U,U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sasKA void_0E]
        case w_sasKA of {
          GHC.Event.TimerManager.TimerManager ww1_sasKD [Occ=Once!]
                                              _ [Occ=Dead]
                                              ww3_sasKF [Occ=Once]
                                              _ [Occ=Dead]
                                              ww5_sasKH [Occ=Once]
                                              ww6_sasKI [Occ=Once]
                                              ww7_sasKJ [Occ=Once*]
                                              ww8_sasKK [Occ=Once!]
                                              ww9_sasKL [Occ=Once] ->
              case ww1_sasKD of {
                GHC.Event.Internal.Backend bState_sasKN [Occ=Once]
                                           _ [Occ=Dead]
                                           _ [Occ=Dead]
                                           _ [Occ=Dead]
                                           bDelete_sasKR [Occ=Once!] ->
                    case
                        writeMutVar# [ww3_sasKF
                                      GHC.Event.TimerManager.Finished
                                      GHC.Prim.void#]
                    of
                    s2#_sasKS
                    { (##) ->
                          case bDelete_sasKR bState_sasKN GHC.Prim.void# of {
                            Unit# _ [Occ=Dead] ->
                                case
                                    atomicModifyMutVar# [ww9_sasKL
                                                         GHC.Event.Control.closeControl2
                                                         GHC.Prim.void#]
                                of
                                { Unit# _ [Occ=Dead] ->
                                      case narrow32Int# [ww5_sasKH] of sat_sasL0 {
                                        __DEFAULT ->
                                            case
                                                __pkg_ccall base-4.11.0.0 [sat_sasL0 GHC.Prim.void#]
                                            of
                                            { Unit# _ [Occ=Dead] ->
                                                  case narrow32Int# [ww6_sasKI] of sat_sasL5 {
                                                    __DEFAULT ->
                                                        case
                                                            __pkg_ccall base-4.11.0.0 [sat_sasL5
                                                                                       GHC.Prim.void#]
                                                        of
                                                        { Unit# _ [Occ=Dead] ->
                                                              case ww8_sasKK of {
                                                                GHC.Types.False ->
                                                                    case
                                                                        narrow32Int# [ww7_sasKJ]
                                                                    of
                                                                    sat_sasLb
                                                                    { __DEFAULT ->
                                                                          case
                                                                              __pkg_ccall base-4.11.0.0 [sat_sasLb
                                                                                                         GHC.Prim.void#]
                                                                          of
                                                                          { Unit# _ [Occ=Dead] ->
                                                                                Unit# [GHC.Tuple.()];
                                                                          };
                                                                    };
                                                                GHC.Types.True ->
                                                                    case
                                                                        __pkg_ccall base-4.11.0.0 [-1#
                                                                                                   GHC.Prim.void#]
                                                                    of
                                                                    { (##) ->
                                                                          case
                                                                              narrow32Int# [ww7_sasKJ]
                                                                          of
                                                                          sat_sasLj
                                                                          { __DEFAULT ->
                                                                                case
                                                                                    __pkg_ccall base-4.11.0.0 [sat_sasLj
                                                                                                               GHC.Prim.void#]
                                                                                of
                                                                                { Unit# _ [Occ=Dead] ->
                                                                                      Unit# [GHC.Tuple.()];
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.Event.TimerManager.cleanup
  :: GHC.Event.TimerManager.TimerManager -> GHC.Types.IO ()
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SLSLLLLSL),1*U(U,A,U,A,U,U,U,U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 void_0E]
        GHC.Event.TimerManager.cleanup1 eta_B2 GHC.Prim.void#;

GHC.Event.TimerManager.finished1
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(LLSLLLLLL),1*U(A,A,U,A,A,A,A,A,A)><S,U>,
 Unf=OtherCon []] =
    [] \r [mgr_sasLn void_0E]
        case mgr_sasLn of {
          GHC.Event.TimerManager.TimerManager _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              dt1_sasLs [Occ=Once]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead] ->
              case readMutVar# [dt1_sasLs GHC.Prim.void#] of {
                Unit# ipv1_sasLB [Occ=Once!] ->
                    let {
                      sat_sasLD [Occ=Once] :: GHC.Types.Bool
                      [LclId] =
                          [ipv1_sasLB] \u []
                              case ipv1_sasLB of {
                                __DEFAULT -> GHC.Types.False [];
                                GHC.Event.TimerManager.Finished -> GHC.Types.True [];
                              };
                    } in  Unit# [sat_sasLD];
              };
        };

GHC.Event.TimerManager.finished
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Types.IO GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(LLSLLLLLL),1*U(A,A,U,A,A,A,A,A,A)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 void_0E]
        GHC.Event.TimerManager.finished1 eta_B2 GHC.Prim.void#;

GHC.Event.TimerManager.shutdown2
  :: GHC.Event.TimerManager.State
     -> (GHC.Event.TimerManager.State, GHC.Event.TimerManager.State)
[GblId, Arity=1, Caf=NoCafRefs, Str=<L,U>m, Unf=OtherCon []] =
    [] \r [a1_sasLE] (,) [GHC.Event.TimerManager.Dying a1_sasLE];

GHC.Event.TimerManager.shutdown1
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=2,
 Str=<S(LLSLLLLLL),1*U(A,A,U,A,A,U,A,A,1*U)><S,U>,
 Unf=OtherCon []] =
    [] \r [mgr_sasLF void_0E]
        case mgr_sasLF of {
          GHC.Event.TimerManager.TimerManager _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              dt1_sasLK [Occ=Once]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              dt4_sasLN [Occ=Once]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              dt7_sasLQ [Occ=Once] ->
              case
                  atomicModifyMutVar# [dt1_sasLK
                                       GHC.Event.TimerManager.shutdown2
                                       GHC.Prim.void#]
              of
              { Unit# ipv1_sasLT [Occ=Once!] ->
                    case ipv1_sasLT of {
                      __DEFAULT -> Unit# [GHC.Tuple.()];
                      GHC.Event.TimerManager.Running ->
                          GHC.Event.Control.$wsendDie dt4_sasLN dt7_sasLQ GHC.Prim.void#;
                    };
              };
        };

GHC.Event.TimerManager.shutdown
  :: GHC.Event.TimerManager.TimerManager -> GHC.Types.IO ()
[GblId,
 Arity=2,
 Str=<S(LLSLLLLLL),1*U(A,A,U,A,A,U,A,A,1*U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 void_0E]
        GHC.Event.TimerManager.shutdown1 eta_B2 GHC.Prim.void#;

GHC.Event.TimerManager.new3
  :: GHC.Event.TimerManager.State
     -> (GHC.Event.TimerManager.State, GHC.Event.TimerManager.State)
[GblId, Arity=1, Caf=NoCafRefs, Str=<L,U>m, Unf=OtherCon []] =
    [] \r [a1_sasLV] (,) [GHC.Event.TimerManager.Finished a1_sasLV];

GHC.Event.TimerManager.new2
  :: GHC.Event.Internal.Backend
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Event.TimerManager.TimerManager #)
[GblId, Arity=2, Str=<L,U><S,U>, Unf=OtherCon []] =
    [] \r [be_sasLW void_0E]
        case newMutVar# [GHC.Event.PSQ.Nil GHC.Prim.void#] of {
          Unit# ipv1_sasM0 [Occ=Once] ->
              case
                  GHC.Event.Control.newControl1 GHC.Types.True GHC.Prim.void#
              of
              { Unit# ipv3_sasM3 ->
                    case
                        newMutVar# [GHC.Event.TimerManager.Created GHC.Prim.void#]
                    of
                    { Unit# ipv5_sasM6 ->
                          case newByteArray# [8# GHC.Prim.void#] of {
                            Unit# ipv7_sasM9 [Occ=Once] ->
                                let {
                                  sat_sasMp [Occ=Once]
                                    :: GHC.Prim.State# GHC.Prim.RealWorld
                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                  [LclId] =
                                      [be_sasLW ipv3_sasM3 ipv5_sasM6] \r [void_0E]
                                          case
                                              atomicModifyMutVar# [ipv5_sasM6
                                                                   GHC.Event.TimerManager.new3
                                                                   GHC.Prim.void#]
                                          of
                                          { Unit# ipv9_sasMe [Occ=Once!] ->
                                                case ipv9_sasMe of {
                                                  __DEFAULT ->
                                                      case be_sasLW of {
                                                        GHC.Event.Internal.Backend bState_sasMh [Occ=Once]
                                                                                   _ [Occ=Dead]
                                                                                   _ [Occ=Dead]
                                                                                   _ [Occ=Dead]
                                                                                   bDelete_sasMl [Occ=Once!] ->
                                                            case
                                                                bDelete_sasMl
                                                                    bState_sasMh GHC.Prim.void#
                                                            of
                                                            { Unit# _ [Occ=Dead] ->
                                                                  GHC.Event.Control.closeControl1
                                                                      ipv3_sasM3 GHC.Prim.void#;
                                                            };
                                                      };
                                                  GHC.Event.TimerManager.Finished ->
                                                      Unit# [GHC.Tuple.()];
                                                };
                                          }; } in
                                let {
                                  sat_sasMa [Occ=Once]
                                    :: GHC.IORef.IORef GHC.Event.TimerManager.State
                                  [LclId] =
                                      CCCS GHC.STRef.STRef! [ipv5_sasM6];
                                } in 
                                  case mkWeak# [ipv5_sasM6 sat_sasMa sat_sasMp GHC.Prim.void#] of {
                                    Unit# _ [Occ=Dead] ->
                                        case be_sasLW of wild_sasMt {
                                          GHC.Event.Internal.Backend bState_sasMu
                                                                     _ [Occ=Dead]
                                                                     bModifyFd_sasMw
                                                                     _ [Occ=Dead]
                                                                     _ [Occ=Dead] ->
                                              let {
                                                sat_sasMz [Occ=Once] :: System.Posix.Types.Fd
                                                [LclId] =
                                                    [ipv3_sasM3] \u []
                                                        GHC.Event.Control.controlReadFd ipv3_sasM3;
                                              } in 
                                                case
                                                    bModifyFd_sasMw
                                                        bState_sasMu
                                                        sat_sasMz
                                                        GHC.Event.Internal.evtNothing
                                                        GHC.Event.Internal.evtRead
                                                        GHC.Prim.void#
                                                of
                                                { Unit# _ [Occ=Dead] ->
                                                      let {
                                                        sat_sasMD [Occ=Once]
                                                          :: System.Posix.Types.Fd
                                                        [LclId] =
                                                            [ipv3_sasM3] \u []
                                                                GHC.Event.Control.controlEventFd
                                                                    ipv3_sasM3;
                                                      } in 
                                                        case
                                                            bModifyFd_sasMw
                                                                bState_sasMu
                                                                sat_sasMD
                                                                GHC.Event.Internal.evtNothing
                                                                GHC.Event.Internal.evtRead
                                                                GHC.Prim.void#
                                                        of
                                                        { Unit# _ [Occ=Dead] ->
                                                              let {
                                                                sat_sasMN [Occ=Once]
                                                                  :: GHC.Event.TimerManager.TimerManager
                                                                [LclId] =
                                                                    [ipv1_sasM0
                                                                     ipv3_sasM3
                                                                     ipv5_sasM6
                                                                     ipv7_sasM9
                                                                     wild_sasMt] \u []
                                                                        case ipv3_sasM3 of {
                                                                          GHC.Event.Control.W dt1_sasMI [Occ=Once]
                                                                                              dt2_sasMJ [Occ=Once]
                                                                                              dt3_sasMK [Occ=Once]
                                                                                              dt4_sasML [Occ=Once]
                                                                                              dt5_sasMM [Occ=Once] ->
                                                                              GHC.Event.TimerManager.TimerManager [wild_sasMt
                                                                                                                   ipv1_sasM0
                                                                                                                   ipv5_sasM6
                                                                                                                   ipv7_sasM9
                                                                                                                   dt1_sasMI
                                                                                                                   dt2_sasMJ
                                                                                                                   dt3_sasMK
                                                                                                                   dt4_sasML
                                                                                                                   dt5_sasMM];
                                                                        };
                                                              } in  Unit# [sat_sasMN];
                                                        };
                                                };
                                        };
                                  };
                          };
                    };
              };
        };

GHC.Event.TimerManager.newWith
  :: GHC.Event.Internal.Backend
     -> GHC.Types.IO GHC.Event.TimerManager.TimerManager
[GblId, Arity=2, Str=<L,U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 void_0E]
        GHC.Event.TimerManager.new2 eta_B2 GHC.Prim.void#;

GHC.Event.TimerManager.new1
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Event.TimerManager.TimerManager #)
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [void_0E]
        case GHC.Event.Poll.new1 GHC.Prim.void# of {
          Unit# ipv1_sasMR [Occ=Once] ->
              GHC.Event.TimerManager.new2 ipv1_sasMR GHC.Prim.void#;
        };

GHC.Event.TimerManager.new
  :: GHC.Types.IO GHC.Event.TimerManager.TimerManager
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [void_0E] GHC.Event.TimerManager.new1 GHC.Prim.void#;

GHC.Event.TimerManager.step1
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
[GblId,
 Arity=2,
 Str=<L,1*U(U,U,U,A,A,A,U,A,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [mgr_sasMS void_0E]
        case __pkg_ccall base-4.11.0.0 [GHC.Prim.void#] of {
          Unit# ds2_sasMX ->
              case mgr_sasMS of {
                GHC.Event.TimerManager.TimerManager ds_sasMZ [Occ=Once!]
                                                    dt_sasN0 [Occ=Once]
                                                    dt1_sasN1
                                                    _ [Occ=Dead]
                                                    _ [Occ=Dead]
                                                    _ [Occ=Dead]
                                                    dt5_sasN5 [Occ=OnceL]
                                                    _ [Occ=Dead]
                                                    dt7_sasN7 [Occ=OnceL] ->
                    case ds_sasMZ of {
                      GHC.Event.Internal.Backend bState_sasN9 [Occ=Once]
                                                 bPoll_sasNa [Occ=Once!]
                                                 _ [Occ=Dead]
                                                 _ [Occ=Dead]
                                                 _ [Occ=Dead] ->
                          let {
                            ipv1_sasNe [Occ=OnceL, Dmd=<L,U(U)>] :: GHC.Word.Word64
                            [LclId, Unf=OtherCon []] =
                                CCCS GHC.Word.W64#! [ds2_sasMX]; } in
                          let {
                            sat_sasNy [Occ=Once]
                              :: GHC.Event.TimerManager.TimeoutQueue
                                 -> (GHC.Event.TimerManager.TimeoutQueue,
                                     ([GHC.Event.PSQ.Elem GHC.Event.TimerManager.TimeoutCallback],
                                      GHC.Event.Internal.Timeout))
                            [LclId] =
                                [ds2_sasMX ipv1_sasNe] \r [a1_sasNf]
                                    case GHC.Event.PSQ.$watMost ipv1_sasNe a1_sasNf of {
                                      (#,#) ww1_sasNh [Occ=Once] ww2_sasNi [Occ=Once] ->
                                          case ww2_sasNi of a'1_sasNj {
                                            __DEFAULT ->
                                                let {
                                                  sat_sasNw [Occ=Once] :: GHC.Event.Internal.Timeout
                                                  [LclId] =
                                                      [ds2_sasMX a'1_sasNj] \u []
                                                          case a'1_sasNj of {
                                                            GHC.Event.PSQ.Bin _ [Occ=Dead]
                                                                              dt9_sasNm [Occ=Once]
                                                                              _ [Occ=Dead]
                                                                              _ [Occ=Dead]
                                                                              _ [Occ=Dead]
                                                                              _ [Occ=Dead] ->
                                                                case
                                                                    minusWord# [dt9_sasNm ds2_sasMX]
                                                                of
                                                                sat_sasNr
                                                                { __DEFAULT ->
                                                                      GHC.Event.Internal.Timeout [sat_sasNr];
                                                                };
                                                            GHC.Event.PSQ.Tip _ [Occ=Dead]
                                                                              dt9_sasNt [Occ=Once]
                                                                              _ [Occ=Dead] ->
                                                                case
                                                                    minusWord# [dt9_sasNt ds2_sasMX]
                                                                of
                                                                sat_sasNv
                                                                { __DEFAULT ->
                                                                      GHC.Event.Internal.Timeout [sat_sasNv];
                                                                };
                                                            GHC.Event.PSQ.Nil ->
                                                                GHC.Event.Internal.Forever [];
                                                          }; } in
                                                let {
                                                  sat_sasNx [Occ=Once]
                                                    :: ([GHC.Event.PSQ.Elem
                                                           GHC.Event.TimerManager.TimeoutCallback],
                                                        GHC.Event.Internal.Timeout)
                                                  [LclId] =
                                                      CCCS (,)! [ww1_sasNh sat_sasNw];
                                                } in  (,) [a'1_sasNj sat_sasNx];
                                          };
                                    };
                          } in 
                            case atomicModifyMutVar# [dt_sasN0 sat_sasNy GHC.Prim.void#] of {
                              Unit# ipv2_sasNB [Occ=Once!] ->
                                  case ipv2_sasNB of {
                                    (,) ipv3_sasND [Occ=Once] ipv4_sasNE [Occ=Once] ->
                                        let-no-escape {
                                          $w$j_sasNF [InlPrag=NOUSERINLINE[0],
                                                      Occ=OnceL!T[1],
                                                      Dmd=<L,C(U(U,U))>]
                                            :: GHC.Prim.State# GHC.Prim.RealWorld
                                               -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                     GHC.Types.Bool #)
                                          [LclId[JoinId(1)], Arity=1, Str=<S,U>, Unf=OtherCon []] =
                                              sat-only [dt1_sasN1
                                                        dt5_sasN5
                                                        dt7_sasN7
                                                        bState_sasN9
                                                        bPoll_sasNa
                                                        ipv4_sasNE] \r [void_0E]
                                                  let {
                                                    sat_sasNX [Occ=Once]
                                                      :: System.Posix.Types.Fd
                                                         -> GHC.Event.Internal.Event
                                                         -> GHC.Types.IO ()
                                                    [LclId] =
                                                        [dt1_sasN1 dt5_sasN5 dt7_sasN7] \r [fd_sasNI
                                                                                            _evt_sasNJ
                                                                                            void_0E]
                                                            case fd_sasNI of {
                                                              GHC.Int.I32# ww7_sasNM [Occ=Once] ->
                                                                  case
                                                                      GHC.Event.Control.$wreadControlMessage
                                                                          dt5_sasN5
                                                                          dt7_sasN7
                                                                          ww7_sasNM
                                                                          GHC.Prim.void#
                                                                  of
                                                                  { Unit# ipv6_sasNP [Occ=Once!] ->
                                                                        case ipv6_sasNP of {
                                                                          GHC.Event.Control.CMsgWakeup ->
                                                                              Unit# [GHC.Tuple.()];
                                                                          GHC.Event.Control.CMsgDie ->
                                                                              case
                                                                                  writeMutVar# [dt1_sasN1
                                                                                                GHC.Event.TimerManager.Finished
                                                                                                GHC.Prim.void#]
                                                                              of
                                                                              s2#_sasNR
                                                                              { (##) ->
                                                                                    Unit# [GHC.Tuple.()];
                                                                              };
                                                                          GHC.Event.Control.CMsgSignal dt8_sasNS [Occ=Once]
                                                                                                       dt9_sasNT [Occ=Once]
                                                                                                       dt10_sasNU [Occ=Once] ->
                                                                              let {
                                                                                sat_sasNW [Occ=Once]
                                                                                  :: GHC.Conc.Signal.Signal
                                                                                [LclId] =
                                                                                    CCCS GHC.Int.I32#! [dt10_sasNU]; } in
                                                                              let {
                                                                                sat_sasNV [Occ=Once]
                                                                                  :: GHC.ForeignPtr.ForeignPtr
                                                                                       GHC.Word.Word8
                                                                                [LclId] =
                                                                                    CCCS GHC.ForeignPtr.ForeignPtr! [dt8_sasNS
                                                                                                                     dt9_sasNT];
                                                                              } in 
                                                                                GHC.Conc.Signal.runHandlers1
                                                                                    sat_sasNV
                                                                                    sat_sasNW
                                                                                    GHC.Prim.void#;
                                                                        };
                                                                  };
                                                            }; } in
                                                  let {
                                                    sat_sasNH [Occ=Once]
                                                      :: GHC.Base.Maybe GHC.Event.Internal.Timeout
                                                    [LclId] =
                                                        CCCS GHC.Base.Just! [ipv4_sasNE];
                                                  } in 
                                                    case
                                                        bPoll_sasNa
                                                            bState_sasN9
                                                            sat_sasNH
                                                            sat_sasNX
                                                            GHC.Prim.void#
                                                    of
                                                    { Unit# _ [Occ=Dead] ->
                                                          case
                                                              readMutVar# [dt1_sasN1 GHC.Prim.void#]
                                                          of
                                                          { Unit# ipv8_sasO3 [Occ=Once] ->
                                                                case ipv8_sasO3 of state_sasO4 {
                                                                  __DEFAULT ->
                                                                      let {
                                                                        sat_sasO6 [Occ=Once]
                                                                          :: GHC.Types.Bool
                                                                        [LclId] =
                                                                            [state_sasO4] \u []
                                                                                case
                                                                                    state_sasO4
                                                                                of
                                                                                { __DEFAULT ->
                                                                                      GHC.Types.False [];
                                                                                  GHC.Event.TimerManager.Running ->
                                                                                      GHC.Types.True [];
                                                                                };
                                                                      } in  Unit# [sat_sasO6];
                                                                };
                                                          };
                                                    };
                                        } in 
                                          let-no-escape {
                                            go_sasO7 [Occ=LoopBreakerT[2]]
                                              :: [GHC.Event.PSQ.Elem
                                                    GHC.Event.TimerManager.TimeoutCallback]
                                                 -> GHC.Prim.State# GHC.Prim.RealWorld
                                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                       GHC.Types.Bool #)
                                            [LclId[JoinId(2)],
                                             Arity=2,
                                             Str=<S,1*U><S,U>,
                                             Unf=OtherCon []] =
                                                sat-only [$w$j_sasNF go_sasO7] \r [ds7_sasO8
                                                                                   void_0E]
                                                    case ds7_sasO8 of {
                                                      [] -> $w$j_sasNF GHC.Prim.void#;
                                                      : y_sasOb [Occ=Once!] ys_sasOc [Occ=Once] ->
                                                          case y_sasOb of {
                                                            GHC.Event.PSQ.E _ [Occ=Dead]
                                                                            _ [Occ=Dead]
                                                                            ds8_sasOg [Occ=Once] ->
                                                                case ds8_sasOg GHC.Prim.void# of {
                                                                  Unit# _ [Occ=Dead] ->
                                                                      go_sasO7
                                                                          ys_sasOc GHC.Prim.void#;
                                                                };
                                                          };
                                                    };
                                          } in  go_sasO7 ipv3_sasND GHC.Prim.void#;
                                  };
                            };
                    };
              };
        };

GHC.Event.TimerManager.step
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Types.IO GHC.Types.Bool
[GblId,
 Arity=2,
 Str=<L,1*U(U,U,U,A,A,A,U,A,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 void_0E]
        GHC.Event.TimerManager.step1 eta_B2 GHC.Prim.void#;

lvl_rasDV :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.Event.Manager.loop: state is already "#;

lvl1_rasDW :: GHC.Event.TimerManager.State -> GHC.Types.IO ()
[GblId, Arity=1, Str=<B,1*U>x, Unf=OtherCon []] =
    sat-only [] \r [ipv1_sasOk]
        let {
          sat_sasOm [Occ=Once] :: [GHC.Types.Char]
          [LclId] =
              [ipv1_sasOk] \u []
                  case ipv1_sasOk of {
                    __DEFAULT -> GHC.Event.TimerManager.$fShowState5;
                    GHC.Event.TimerManager.Finished ->
                        GHC.Event.TimerManager.$fShowState1;
                  };
        } in 
          case
              GHC.CString.unpackAppendCString# lvl_rasDV sat_sasOm
          of
          sat_sasOn
          { __DEFAULT -> GHC.Err.errorWithoutStackTrace sat_sasOn;
          };

lvl2_rasDX
  :: (GHC.Event.TimerManager.State, GHC.Event.TimerManager.State)
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE (,)! [GHC.Event.TimerManager.Running
                        GHC.Event.TimerManager.Created];

lvl3_rasDY
  :: GHC.Event.TimerManager.State
     -> (GHC.Event.TimerManager.State, GHC.Event.TimerManager.State)
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>m, Unf=OtherCon []] =
    [] \r [a1_sasOo]
        case a1_sasOo of wild_sasOp {
          __DEFAULT -> (,) [wild_sasOp wild_sasOp];
          GHC.Event.TimerManager.Created -> lvl2_rasDX;
        };

GHC.Event.TimerManager.$wloop [InlPrag=NOUSERINLINE[0]]
  :: GHC.Event.Internal.Backend
     -> GHC.Prim.MutVar#
          GHC.Prim.RealWorld GHC.Event.TimerManager.TimeoutQueue
     -> GHC.Prim.MutVar# GHC.Prim.RealWorld GHC.Event.TimerManager.State
     -> GHC.Prim.MutableByteArray# GHC.Prim.RealWorld
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Types.Bool
     -> GHC.Prim.MutVar# GHC.Prim.RealWorld GHC.Types.Bool
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=10,
 Str=<S,1*U><L,U><S,U><L,U><L,U><L,U><L,U><L,U><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [ww_sasOq
           ww1_sasOr
           ww2_sasOs
           ww3_sasOt
           ww4_sasOu
           ww5_sasOv
           ww6_sasOw
           ww7_sasOx
           ww8_sasOy
           void_0E]
        case ww_sasOq of wild_sasOA {
          GHC.Event.Internal.Backend bState_sasOB
                                     _ [Occ=Dead]
                                     _ [Occ=Dead]
                                     _ [Occ=Dead]
                                     bDelete_sasOF ->
              case atomicModifyMutVar# [ww2_sasOs lvl3_rasDY GHC.Prim.void#] of {
                Unit# ipv1_sasOI [Occ=Once!] ->
                    case ipv1_sasOI of b1_sasOJ {
                      __DEFAULT ->
                          case
                              writeMutVar# [ww2_sasOs
                                            GHC.Event.TimerManager.Finished
                                            GHC.Prim.void#]
                          of
                          s2#_sasOK
                          { (##) ->
                                case bDelete_sasOF bState_sasOB GHC.Prim.void# of {
                                  Unit# _ [Occ=Dead] ->
                                      case
                                          atomicModifyMutVar# [ww8_sasOy
                                                               GHC.Event.Control.closeControl2
                                                               GHC.Prim.void#]
                                      of
                                      { Unit# _ [Occ=Dead] ->
                                            case narrow32Int# [ww4_sasOu] of sat_sasOS {
                                              __DEFAULT ->
                                                  case
                                                      __pkg_ccall base-4.11.0.0 [sat_sasOS
                                                                                 GHC.Prim.void#]
                                                  of
                                                  { Unit# _ [Occ=Dead] ->
                                                        case narrow32Int# [ww5_sasOv] of sat_sasOX {
                                                          __DEFAULT ->
                                                              case
                                                                  __pkg_ccall base-4.11.0.0 [sat_sasOX
                                                                                             GHC.Prim.void#]
                                                              of
                                                              { Unit# _ [Occ=Dead] ->
                                                                    case ww7_sasOx of {
                                                                      GHC.Types.False ->
                                                                          case
                                                                              narrow32Int# [ww6_sasOw]
                                                                          of
                                                                          sat_sasP3
                                                                          { __DEFAULT ->
                                                                                case
                                                                                    __pkg_ccall base-4.11.0.0 [sat_sasP3
                                                                                                               GHC.Prim.void#]
                                                                                of
                                                                                { Unit# _ [Occ=Dead] ->
                                                                                      lvl1_rasDW
                                                                                          b1_sasOJ;
                                                                                };
                                                                          };
                                                                      GHC.Types.True ->
                                                                          case
                                                                              __pkg_ccall base-4.11.0.0 [-1#
                                                                                                         GHC.Prim.void#]
                                                                          of
                                                                          { (##) ->
                                                                                case
                                                                                    narrow32Int# [ww6_sasOw]
                                                                                of
                                                                                sat_sasPc
                                                                                { __DEFAULT ->
                                                                                      case
                                                                                          __pkg_ccall base-4.11.0.0 [sat_sasPc
                                                                                                                     GHC.Prim.void#]
                                                                                      of
                                                                                      { Unit# _ [Occ=Dead] ->
                                                                                            lvl1_rasDW
                                                                                                b1_sasOJ;
                                                                                      };
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                                };
                          };
                      GHC.Event.TimerManager.Created ->
                          case getMaskingState# [GHC.Prim.void#] of {
                            Unit# ipv3_sasPj [Occ=Once!] ->
                                let {
                                  go_sasPk [Occ=LoopBreaker]
                                    :: GHC.Prim.State# GHC.Prim.RealWorld
                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                  [LclId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
                                      [ww1_sasOr
                                       ww2_sasOs
                                       ww3_sasOt
                                       ww4_sasOu
                                       ww5_sasOv
                                       ww6_sasOw
                                       ww7_sasOx
                                       ww8_sasOy
                                       wild_sasOA
                                       go_sasPk] \r [void_0E]
                                          let {
                                            sat_sasPm [Occ=Once]
                                              :: GHC.Event.TimerManager.TimerManager
                                            [LclId] =
                                                CCCS GHC.Event.TimerManager.TimerManager! [wild_sasOA
                                                                                           ww1_sasOr
                                                                                           ww2_sasOs
                                                                                           ww3_sasOt
                                                                                           ww4_sasOu
                                                                                           ww5_sasOv
                                                                                           ww6_sasOw
                                                                                           ww7_sasOx
                                                                                           ww8_sasOy];
                                          } in 
                                            case
                                                GHC.Event.TimerManager.step1
                                                    sat_sasPm GHC.Prim.void#
                                            of
                                            { Unit# ipv5_sasPp [Occ=Once!] ->
                                                  case ipv5_sasPp of {
                                                    GHC.Types.False -> Unit# [GHC.Tuple.()];
                                                    GHC.Types.True -> go_sasPk GHC.Prim.void#;
                                                  };
                                            };
                                } in 
                                  case ipv3_sasPj of {
                                    __DEFAULT ->
                                        let {
                                          sat_sasQ0 [Occ=Once]
                                            :: GHC.Exception.SomeException
                                               -> GHC.Prim.State# GHC.Prim.RealWorld
                                               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                          [LclId] =
                                              [ww2_sasOs
                                               ww4_sasOu
                                               ww5_sasOv
                                               ww6_sasOw
                                               ww7_sasOx
                                               ww8_sasOy
                                               bState_sasOB
                                               bDelete_sasOF] \r [e1_sasPt void_0E]
                                                  case
                                                      writeMutVar# [ww2_sasOs
                                                                    GHC.Event.TimerManager.Finished
                                                                    GHC.Prim.void#]
                                                  of
                                                  s2#_sasPv
                                                  { (##) ->
                                                        case
                                                            bDelete_sasOF
                                                                bState_sasOB GHC.Prim.void#
                                                        of
                                                        { Unit# _ [Occ=Dead] ->
                                                              case
                                                                  atomicModifyMutVar# [ww8_sasOy
                                                                                       GHC.Event.Control.closeControl2
                                                                                       GHC.Prim.void#]
                                                              of
                                                              { Unit# _ [Occ=Dead] ->
                                                                    case
                                                                        narrow32Int# [ww4_sasOu]
                                                                    of
                                                                    sat_sasPD
                                                                    { __DEFAULT ->
                                                                          case
                                                                              __pkg_ccall base-4.11.0.0 [sat_sasPD
                                                                                                         GHC.Prim.void#]
                                                                          of
                                                                          { Unit# _ [Occ=Dead] ->
                                                                                case
                                                                                    narrow32Int# [ww5_sasOv]
                                                                                of
                                                                                sat_sasPI
                                                                                { __DEFAULT ->
                                                                                      case
                                                                                          __pkg_ccall base-4.11.0.0 [sat_sasPI
                                                                                                                     GHC.Prim.void#]
                                                                                      of
                                                                                      { Unit# _ [Occ=Dead] ->
                                                                                            case
                                                                                                ww7_sasOx
                                                                                            of
                                                                                            { GHC.Types.False ->
                                                                                                  case
                                                                                                      narrow32Int# [ww6_sasOw]
                                                                                                  of
                                                                                                  sat_sasPO
                                                                                                  { __DEFAULT ->
                                                                                                        case
                                                                                                            __pkg_ccall base-4.11.0.0 [sat_sasPO
                                                                                                                                       GHC.Prim.void#]
                                                                                                        of
                                                                                                        { Unit# _ [Occ=Dead] ->
                                                                                                              raiseIO# [e1_sasPt
                                                                                                                        GHC.Prim.void#];
                                                                                                        };
                                                                                                  };
                                                                                              GHC.Types.True ->
                                                                                                  case
                                                                                                      __pkg_ccall base-4.11.0.0 [-1#
                                                                                                                                 GHC.Prim.void#]
                                                                                                  of
                                                                                                  { (##) ->
                                                                                                        case
                                                                                                            narrow32Int# [ww6_sasOw]
                                                                                                        of
                                                                                                        sat_sasPW
                                                                                                        { __DEFAULT ->
                                                                                                              case
                                                                                                                  __pkg_ccall base-4.11.0.0 [sat_sasPW
                                                                                                                                             GHC.Prim.void#]
                                                                                                              of
                                                                                                              { Unit# _ [Occ=Dead] ->
                                                                                                                    raiseIO# [e1_sasPt
                                                                                                                              GHC.Prim.void#];
                                                                                                              };
                                                                                                        };
                                                                                                  };
                                                                                            };
                                                                                      };
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  }; } in
                                        let {
                                          sat_sasPs [Occ=Once]
                                            :: GHC.Prim.State# GHC.Prim.RealWorld
                                               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                          [LclId] =
                                              [go_sasPk] \r [void_0E]
                                                  maskAsyncExceptions# [go_sasPk GHC.Prim.void#];
                                        } in 
                                          case catch# [sat_sasPs sat_sasQ0 GHC.Prim.void#] of {
                                            Unit# ipv5_sasQ3 [Occ=Once*] ->
                                                case
                                                    writeMutVar# [ww2_sasOs
                                                                  GHC.Event.TimerManager.Finished
                                                                  GHC.Prim.void#]
                                                of
                                                s2#_sasQ4
                                                { (##) ->
                                                      case
                                                          bDelete_sasOF bState_sasOB GHC.Prim.void#
                                                      of
                                                      { Unit# _ [Occ=Dead] ->
                                                            case
                                                                atomicModifyMutVar# [ww8_sasOy
                                                                                     GHC.Event.Control.closeControl2
                                                                                     GHC.Prim.void#]
                                                            of
                                                            { Unit# _ [Occ=Dead] ->
                                                                  case
                                                                      narrow32Int# [ww4_sasOu]
                                                                  of
                                                                  sat_sasQc
                                                                  { __DEFAULT ->
                                                                        case
                                                                            __pkg_ccall base-4.11.0.0 [sat_sasQc
                                                                                                       GHC.Prim.void#]
                                                                        of
                                                                        { Unit# _ [Occ=Dead] ->
                                                                              case
                                                                                  narrow32Int# [ww5_sasOv]
                                                                              of
                                                                              sat_sasQh
                                                                              { __DEFAULT ->
                                                                                    case
                                                                                        __pkg_ccall base-4.11.0.0 [sat_sasQh
                                                                                                                   GHC.Prim.void#]
                                                                                    of
                                                                                    { Unit# _ [Occ=Dead] ->
                                                                                          case
                                                                                              ww7_sasOx
                                                                                          of
                                                                                          { GHC.Types.False ->
                                                                                                case
                                                                                                    narrow32Int# [ww6_sasOw]
                                                                                                of
                                                                                                sat_sasQn
                                                                                                { __DEFAULT ->
                                                                                                      case
                                                                                                          __pkg_ccall base-4.11.0.0 [sat_sasQn
                                                                                                                                     GHC.Prim.void#]
                                                                                                      of
                                                                                                      { Unit# _ [Occ=Dead] ->
                                                                                                            Unit# [ipv5_sasQ3];
                                                                                                      };
                                                                                                };
                                                                                            GHC.Types.True ->
                                                                                                case
                                                                                                    __pkg_ccall base-4.11.0.0 [-1#
                                                                                                                               GHC.Prim.void#]
                                                                                                of
                                                                                                { (##) ->
                                                                                                      case
                                                                                                          narrow32Int# [ww6_sasOw]
                                                                                                      of
                                                                                                      sat_sasQv
                                                                                                      { __DEFAULT ->
                                                                                                            case
                                                                                                                __pkg_ccall base-4.11.0.0 [sat_sasQv
                                                                                                                                           GHC.Prim.void#]
                                                                                                            of
                                                                                                            { Unit# _ [Occ=Dead] ->
                                                                                                                  Unit# [ipv5_sasQ3];
                                                                                                            };
                                                                                                      };
                                                                                                };
                                                                                          };
                                                                                    };
                                                                              };
                                                                        };
                                                                  };
                                                            };
                                                      };
                                                };
                                          };
                                    0# ->
                                        let {
                                          sat_sasRH [Occ=Once]
                                            :: GHC.Prim.State# GHC.Prim.RealWorld
                                               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                          [LclId] =
                                              [ww2_sasOs
                                               ww4_sasOu
                                               ww5_sasOv
                                               ww6_sasOw
                                               ww7_sasOx
                                               ww8_sasOy
                                               bState_sasOB
                                               bDelete_sasOF
                                               go_sasPk] \r [void_0E]
                                                  let {
                                                    sat_sasR8 [Occ=Once]
                                                      :: GHC.Exception.SomeException
                                                         -> GHC.Prim.State# GHC.Prim.RealWorld
                                                         -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                               () #)
                                                    [LclId] =
                                                        [ww2_sasOs
                                                         ww4_sasOu
                                                         ww5_sasOv
                                                         ww6_sasOw
                                                         ww7_sasOx
                                                         ww8_sasOy
                                                         bState_sasOB
                                                         bDelete_sasOF] \r [e1_sasQB void_0E]
                                                            case
                                                                writeMutVar# [ww2_sasOs
                                                                              GHC.Event.TimerManager.Finished
                                                                              GHC.Prim.void#]
                                                            of
                                                            s2#_sasQD
                                                            { (##) ->
                                                                  case
                                                                      bDelete_sasOF
                                                                          bState_sasOB
                                                                          GHC.Prim.void#
                                                                  of
                                                                  { Unit# _ [Occ=Dead] ->
                                                                        case
                                                                            atomicModifyMutVar# [ww8_sasOy
                                                                                                 GHC.Event.Control.closeControl2
                                                                                                 GHC.Prim.void#]
                                                                        of
                                                                        { Unit# _ [Occ=Dead] ->
                                                                              case
                                                                                  narrow32Int# [ww4_sasOu]
                                                                              of
                                                                              sat_sasQL
                                                                              { __DEFAULT ->
                                                                                    case
                                                                                        __pkg_ccall base-4.11.0.0 [sat_sasQL
                                                                                                                   GHC.Prim.void#]
                                                                                    of
                                                                                    { Unit# _ [Occ=Dead] ->
                                                                                          case
                                                                                              narrow32Int# [ww5_sasOv]
                                                                                          of
                                                                                          sat_sasQQ
                                                                                          { __DEFAULT ->
                                                                                                case
                                                                                                    __pkg_ccall base-4.11.0.0 [sat_sasQQ
                                                                                                                               GHC.Prim.void#]
                                                                                                of
                                                                                                { Unit# _ [Occ=Dead] ->
                                                                                                      case
                                                                                                          ww7_sasOx
                                                                                                      of
                                                                                                      { GHC.Types.False ->
                                                                                                            case
                                                                                                                narrow32Int# [ww6_sasOw]
                                                                                                            of
                                                                                                            sat_sasQW
                                                                                                            { __DEFAULT ->
                                                                                                                  case
                                                                                                                      __pkg_ccall base-4.11.0.0 [sat_sasQW
                                                                                                                                                 GHC.Prim.void#]
                                                                                                                  of
                                                                                                                  { Unit# _ [Occ=Dead] ->
                                                                                                                        raiseIO# [e1_sasQB
                                                                                                                                  GHC.Prim.void#];
                                                                                                                  };
                                                                                                            };
                                                                                                        GHC.Types.True ->
                                                                                                            case
                                                                                                                __pkg_ccall base-4.11.0.0 [-1#
                                                                                                                                           GHC.Prim.void#]
                                                                                                            of
                                                                                                            { (##) ->
                                                                                                                  case
                                                                                                                      narrow32Int# [ww6_sasOw]
                                                                                                                  of
                                                                                                                  sat_sasR4
                                                                                                                  { __DEFAULT ->
                                                                                                                        case
                                                                                                                            __pkg_ccall base-4.11.0.0 [sat_sasR4
                                                                                                                                                       GHC.Prim.void#]
                                                                                                                        of
                                                                                                                        { Unit# _ [Occ=Dead] ->
                                                                                                                              raiseIO# [e1_sasQB
                                                                                                                                        GHC.Prim.void#];
                                                                                                                        };
                                                                                                                  };
                                                                                                            };
                                                                                                      };
                                                                                                };
                                                                                          };
                                                                                    };
                                                                              };
                                                                        };
                                                                  };
                                                            }; } in
                                                  let {
                                                    sat_sasQA [Occ=Once]
                                                      :: GHC.Prim.State# GHC.Prim.RealWorld
                                                         -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                               () #)
                                                    [LclId] =
                                                        [go_sasPk] \r [void_0E]
                                                            unmaskAsyncExceptions# [go_sasPk
                                                                                    GHC.Prim.void#];
                                                  } in 
                                                    case
                                                        catch# [sat_sasQA sat_sasR8 GHC.Prim.void#]
                                                    of
                                                    { Unit# ipv5_sasRb [Occ=Once*] ->
                                                          case
                                                              writeMutVar# [ww2_sasOs
                                                                            GHC.Event.TimerManager.Finished
                                                                            GHC.Prim.void#]
                                                          of
                                                          s2#_sasRc
                                                          { (##) ->
                                                                case
                                                                    bDelete_sasOF
                                                                        bState_sasOB GHC.Prim.void#
                                                                of
                                                                { Unit# _ [Occ=Dead] ->
                                                                      case
                                                                          atomicModifyMutVar# [ww8_sasOy
                                                                                               GHC.Event.Control.closeControl2
                                                                                               GHC.Prim.void#]
                                                                      of
                                                                      { Unit# _ [Occ=Dead] ->
                                                                            case
                                                                                narrow32Int# [ww4_sasOu]
                                                                            of
                                                                            sat_sasRk
                                                                            { __DEFAULT ->
                                                                                  case
                                                                                      __pkg_ccall base-4.11.0.0 [sat_sasRk
                                                                                                                 GHC.Prim.void#]
                                                                                  of
                                                                                  { Unit# _ [Occ=Dead] ->
                                                                                        case
                                                                                            narrow32Int# [ww5_sasOv]
                                                                                        of
                                                                                        sat_sasRp
                                                                                        { __DEFAULT ->
                                                                                              case
                                                                                                  __pkg_ccall base-4.11.0.0 [sat_sasRp
                                                                                                                             GHC.Prim.void#]
                                                                                              of
                                                                                              { Unit# _ [Occ=Dead] ->
                                                                                                    case
                                                                                                        ww7_sasOx
                                                                                                    of
                                                                                                    { GHC.Types.False ->
                                                                                                          case
                                                                                                              narrow32Int# [ww6_sasOw]
                                                                                                          of
                                                                                                          sat_sasRv
                                                                                                          { __DEFAULT ->
                                                                                                                case
                                                                                                                    __pkg_ccall base-4.11.0.0 [sat_sasRv
                                                                                                                                               GHC.Prim.void#]
                                                                                                                of
                                                                                                                { Unit# _ [Occ=Dead] ->
                                                                                                                      Unit# [ipv5_sasRb];
                                                                                                                };
                                                                                                          };
                                                                                                      GHC.Types.True ->
                                                                                                          case
                                                                                                              __pkg_ccall base-4.11.0.0 [-1#
                                                                                                                                         GHC.Prim.void#]
                                                                                                          of
                                                                                                          { (##) ->
                                                                                                                case
                                                                                                                    narrow32Int# [ww6_sasOw]
                                                                                                                of
                                                                                                                sat_sasRD
                                                                                                                { __DEFAULT ->
                                                                                                                      case
                                                                                                                          __pkg_ccall base-4.11.0.0 [sat_sasRD
                                                                                                                                                     GHC.Prim.void#]
                                                                                                                      of
                                                                                                                      { Unit# _ [Occ=Dead] ->
                                                                                                                            Unit# [ipv5_sasRb];
                                                                                                                      };
                                                                                                                };
                                                                                                          };
                                                                                                    };
                                                                                              };
                                                                                        };
                                                                                  };
                                                                            };
                                                                      };
                                                                };
                                                          };
                                                    };
                                        } in  maskAsyncExceptions# [sat_sasRH GHC.Prim.void#];
                                    1# ->
                                        let {
                                          sat_sasSg [Occ=Once]
                                            :: GHC.Exception.SomeException
                                               -> GHC.Prim.State# GHC.Prim.RealWorld
                                               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                          [LclId] =
                                              [ww2_sasOs
                                               ww4_sasOu
                                               ww5_sasOv
                                               ww6_sasOw
                                               ww7_sasOx
                                               ww8_sasOy
                                               bState_sasOB
                                               bDelete_sasOF] \r [e1_sasRJ void_0E]
                                                  case
                                                      writeMutVar# [ww2_sasOs
                                                                    GHC.Event.TimerManager.Finished
                                                                    GHC.Prim.void#]
                                                  of
                                                  s2#_sasRL
                                                  { (##) ->
                                                        case
                                                            bDelete_sasOF
                                                                bState_sasOB GHC.Prim.void#
                                                        of
                                                        { Unit# _ [Occ=Dead] ->
                                                              case
                                                                  atomicModifyMutVar# [ww8_sasOy
                                                                                       GHC.Event.Control.closeControl2
                                                                                       GHC.Prim.void#]
                                                              of
                                                              { Unit# _ [Occ=Dead] ->
                                                                    case
                                                                        narrow32Int# [ww4_sasOu]
                                                                    of
                                                                    sat_sasRT
                                                                    { __DEFAULT ->
                                                                          case
                                                                              __pkg_ccall base-4.11.0.0 [sat_sasRT
                                                                                                         GHC.Prim.void#]
                                                                          of
                                                                          { Unit# _ [Occ=Dead] ->
                                                                                case
                                                                                    narrow32Int# [ww5_sasOv]
                                                                                of
                                                                                sat_sasRY
                                                                                { __DEFAULT ->
                                                                                      case
                                                                                          __pkg_ccall base-4.11.0.0 [sat_sasRY
                                                                                                                     GHC.Prim.void#]
                                                                                      of
                                                                                      { Unit# _ [Occ=Dead] ->
                                                                                            case
                                                                                                ww7_sasOx
                                                                                            of
                                                                                            { GHC.Types.False ->
                                                                                                  case
                                                                                                      narrow32Int# [ww6_sasOw]
                                                                                                  of
                                                                                                  sat_sasS4
                                                                                                  { __DEFAULT ->
                                                                                                        case
                                                                                                            __pkg_ccall base-4.11.0.0 [sat_sasS4
                                                                                                                                       GHC.Prim.void#]
                                                                                                        of
                                                                                                        { Unit# _ [Occ=Dead] ->
                                                                                                              raiseIO# [e1_sasRJ
                                                                                                                        GHC.Prim.void#];
                                                                                                        };
                                                                                                  };
                                                                                              GHC.Types.True ->
                                                                                                  case
                                                                                                      __pkg_ccall base-4.11.0.0 [-1#
                                                                                                                                 GHC.Prim.void#]
                                                                                                  of
                                                                                                  { (##) ->
                                                                                                        case
                                                                                                            narrow32Int# [ww6_sasOw]
                                                                                                        of
                                                                                                        sat_sasSc
                                                                                                        { __DEFAULT ->
                                                                                                              case
                                                                                                                  __pkg_ccall base-4.11.0.0 [sat_sasSc
                                                                                                                                             GHC.Prim.void#]
                                                                                                              of
                                                                                                              { Unit# _ [Occ=Dead] ->
                                                                                                                    raiseIO# [e1_sasRJ
                                                                                                                              GHC.Prim.void#];
                                                                                                              };
                                                                                                        };
                                                                                                  };
                                                                                            };
                                                                                      };
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  }; } in
                                        let {
                                          sat_sasRI [Occ=Once]
                                            :: GHC.Prim.State# GHC.Prim.RealWorld
                                               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                          [LclId] =
                                              [go_sasPk] \r [void_0E]
                                                  maskUninterruptible# [go_sasPk GHC.Prim.void#];
                                        } in 
                                          case catch# [sat_sasRI sat_sasSg GHC.Prim.void#] of {
                                            Unit# ipv5_sasSj [Occ=Once*] ->
                                                case
                                                    writeMutVar# [ww2_sasOs
                                                                  GHC.Event.TimerManager.Finished
                                                                  GHC.Prim.void#]
                                                of
                                                s2#_sasSk
                                                { (##) ->
                                                      case
                                                          bDelete_sasOF bState_sasOB GHC.Prim.void#
                                                      of
                                                      { Unit# _ [Occ=Dead] ->
                                                            case
                                                                atomicModifyMutVar# [ww8_sasOy
                                                                                     GHC.Event.Control.closeControl2
                                                                                     GHC.Prim.void#]
                                                            of
                                                            { Unit# _ [Occ=Dead] ->
                                                                  case
                                                                      narrow32Int# [ww4_sasOu]
                                                                  of
                                                                  sat_sasSs
                                                                  { __DEFAULT ->
                                                                        case
                                                                            __pkg_ccall base-4.11.0.0 [sat_sasSs
                                                                                                       GHC.Prim.void#]
                                                                        of
                                                                        { Unit# _ [Occ=Dead] ->
                                                                              case
                                                                                  narrow32Int# [ww5_sasOv]
                                                                              of
                                                                              sat_sasSx
                                                                              { __DEFAULT ->
                                                                                    case
                                                                                        __pkg_ccall base-4.11.0.0 [sat_sasSx
                                                                                                                   GHC.Prim.void#]
                                                                                    of
                                                                                    { Unit# _ [Occ=Dead] ->
                                                                                          case
                                                                                              ww7_sasOx
                                                                                          of
                                                                                          { GHC.Types.False ->
                                                                                                case
                                                                                                    narrow32Int# [ww6_sasOw]
                                                                                                of
                                                                                                sat_sasSD
                                                                                                { __DEFAULT ->
                                                                                                      case
                                                                                                          __pkg_ccall base-4.11.0.0 [sat_sasSD
                                                                                                                                     GHC.Prim.void#]
                                                                                                      of
                                                                                                      { Unit# _ [Occ=Dead] ->
                                                                                                            Unit# [ipv5_sasSj];
                                                                                                      };
                                                                                                };
                                                                                            GHC.Types.True ->
                                                                                                case
                                                                                                    __pkg_ccall base-4.11.0.0 [-1#
                                                                                                                               GHC.Prim.void#]
                                                                                                of
                                                                                                { (##) ->
                                                                                                      case
                                                                                                          narrow32Int# [ww6_sasOw]
                                                                                                      of
                                                                                                      sat_sasSL
                                                                                                      { __DEFAULT ->
                                                                                                            case
                                                                                                                __pkg_ccall base-4.11.0.0 [sat_sasSL
                                                                                                                                           GHC.Prim.void#]
                                                                                                            of
                                                                                                            { Unit# _ [Occ=Dead] ->
                                                                                                                  Unit# [ipv5_sasSj];
                                                                                                            };
                                                                                                      };
                                                                                                };
                                                                                          };
                                                                                    };
                                                                              };
                                                                        };
                                                                  };
                                                            };
                                                      };
                                                };
                                          };
                                  };
                          };
                      GHC.Event.TimerManager.Dying ->
                          case
                              writeMutVar# [ww2_sasOs
                                            GHC.Event.TimerManager.Finished
                                            GHC.Prim.void#]
                          of
                          s2#_sasSP
                          { (##) ->
                                case bDelete_sasOF bState_sasOB GHC.Prim.void# of {
                                  Unit# _ [Occ=Dead] ->
                                      case
                                          atomicModifyMutVar# [ww8_sasOy
                                                               GHC.Event.Control.closeControl2
                                                               GHC.Prim.void#]
                                      of
                                      { Unit# _ [Occ=Dead] ->
                                            case narrow32Int# [ww4_sasOu] of sat_sasSX {
                                              __DEFAULT ->
                                                  case
                                                      __pkg_ccall base-4.11.0.0 [sat_sasSX
                                                                                 GHC.Prim.void#]
                                                  of
                                                  { Unit# _ [Occ=Dead] ->
                                                        case narrow32Int# [ww5_sasOv] of sat_sasT2 {
                                                          __DEFAULT ->
                                                              case
                                                                  __pkg_ccall base-4.11.0.0 [sat_sasT2
                                                                                             GHC.Prim.void#]
                                                              of
                                                              { Unit# _ [Occ=Dead] ->
                                                                    case ww7_sasOx of {
                                                                      GHC.Types.False ->
                                                                          case
                                                                              narrow32Int# [ww6_sasOw]
                                                                          of
                                                                          sat_sasT8
                                                                          { __DEFAULT ->
                                                                                case
                                                                                    __pkg_ccall base-4.11.0.0 [sat_sasT8
                                                                                                               GHC.Prim.void#]
                                                                                of
                                                                                { Unit# _ [Occ=Dead] ->
                                                                                      Unit# [GHC.Tuple.()];
                                                                                };
                                                                          };
                                                                      GHC.Types.True ->
                                                                          case
                                                                              __pkg_ccall base-4.11.0.0 [-1#
                                                                                                         GHC.Prim.void#]
                                                                          of
                                                                          { (##) ->
                                                                                case
                                                                                    narrow32Int# [ww6_sasOw]
                                                                                of
                                                                                sat_sasTg
                                                                                { __DEFAULT ->
                                                                                      case
                                                                                          __pkg_ccall base-4.11.0.0 [sat_sasTg
                                                                                                                     GHC.Prim.void#]
                                                                                      of
                                                                                      { Unit# _ [Occ=Dead] ->
                                                                                            Unit# [GHC.Tuple.()];
                                                                                      };
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.Event.TimerManager.loop1 [InlPrag=NOUSERINLINE[0]]
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=2,
 Str=<S(SSSSSSSSS),1*U(U,U,U,U,U,U,U,U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sasTk void_0E]
        case w_sasTk of {
          GHC.Event.TimerManager.TimerManager ww1_sasTn [Occ=Once]
                                              ww2_sasTo [Occ=Once]
                                              ww3_sasTp [Occ=Once]
                                              ww4_sasTq [Occ=Once]
                                              ww5_sasTr [Occ=Once]
                                              ww6_sasTs [Occ=Once]
                                              ww7_sasTt [Occ=Once]
                                              ww8_sasTu [Occ=Once]
                                              ww9_sasTv [Occ=Once] ->
              GHC.Event.TimerManager.$wloop
                  ww1_sasTn
                  ww2_sasTo
                  ww3_sasTp
                  ww4_sasTq
                  ww5_sasTr
                  ww6_sasTs
                  ww7_sasTt
                  ww8_sasTu
                  ww9_sasTv
                  GHC.Prim.void#;
        };

GHC.Event.TimerManager.loop
  :: GHC.Event.TimerManager.TimerManager -> GHC.Types.IO ()
[GblId,
 Arity=2,
 Str=<S(SSSSSSSSS),1*U(U,U,U,U,U,U,U,U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 void_0E]
        GHC.Event.TimerManager.loop1 eta_B2 GHC.Prim.void#;

GHC.Event.TimerManager.TimerManager
  :: GHC.Event.Internal.Backend
     -> GHC.Prim.MutVar#
          GHC.Prim.RealWorld GHC.Event.TimerManager.TimeoutQueue
     -> GHC.Prim.MutVar# GHC.Prim.RealWorld GHC.Event.TimerManager.State
     -> GHC.Prim.MutableByteArray# GHC.Prim.RealWorld
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Types.Bool
     -> GHC.Prim.MutVar# GHC.Prim.RealWorld GHC.Types.Bool
     -> GHC.Event.TimerManager.TimerManager
[GblId[DataCon],
 Arity=9,
 Caf=NoCafRefs,
 Str=<L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>m,
 Unf=OtherCon []] =
    [] \r [eta_B9
           eta_B8
           eta_B7
           eta_B6
           eta_B5
           eta_B4
           eta_B3
           eta_B2
           eta_B1]
        GHC.Event.TimerManager.TimerManager [eta_B9
                                             eta_B8
                                             eta_B7
                                             eta_B6
                                             eta_B5
                                             eta_B4
                                             eta_B3
                                             eta_B2
                                             eta_B1];

GHC.Event.TimerManager.Created :: GHC.Event.TimerManager.State
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Event.TimerManager.Created! [];

GHC.Event.TimerManager.Running :: GHC.Event.TimerManager.State
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Event.TimerManager.Running! [];

GHC.Event.TimerManager.Dying :: GHC.Event.TimerManager.State
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Event.TimerManager.Dying! [];

GHC.Event.TimerManager.Finished :: GHC.Event.TimerManager.State
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Event.TimerManager.Finished! [];


==================== Pre unarise: ====================
2018-03-16 16:05:30.34403339 UTC

GHC.Event.TimerManager.$WTimerManager [InlPrag=INLINE[2]]
  :: GHC.Event.Internal.Backend
     -> GHC.IORef.IORef GHC.Event.TimerManager.TimeoutQueue
     -> GHC.IORef.IORef GHC.Event.TimerManager.State
     -> GHC.Event.Unique.UniqueSource
     -> GHC.Event.Control.Control
     -> GHC.Event.TimerManager.TimerManager
[GblId[DataConWrapper],
 Arity=5,
 Caf=NoCafRefs,
 Str=<S,U><S,U><S,U><S,U><S,U>m,
 Unf=OtherCon []] =
    [] \r [dt_sav2L dt_sav2M dt_sav2N dt_sav2O dt_sav2P]
        case dt_sav2L of dt_sav2Q {
          __DEFAULT ->
              case dt_sav2M of {
                GHC.STRef.STRef dt_sav2S [Occ=Once] ->
                    case dt_sav2N of {
                      GHC.STRef.STRef dt_sav2U [Occ=Once] ->
                          case dt_sav2O of {
                            GHC.Event.Unique.US dt_sav2W [Occ=Once] ->
                                case dt_sav2P of {
                                  GHC.Event.Control.W dt_sav2Y [Occ=Once]
                                                      dt_sav2Z [Occ=Once]
                                                      dt_sav30 [Occ=Once]
                                                      dt_sav31 [Occ=Once]
                                                      dt_sav32 [Occ=Once] ->
                                      GHC.Event.TimerManager.TimerManager [dt_sav2Q
                                                                           dt_sav2S
                                                                           dt_sav2U
                                                                           dt_sav2W
                                                                           dt_sav2Y
                                                                           dt_sav2Z
                                                                           dt_sav30
                                                                           dt_sav31
                                                                           dt_sav32];
                                };
                          };
                    };
              };
        };

GHC.Event.TimerManager.$fShowState8 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Created"#;

GHC.Event.TimerManager.$fShowState7 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# GHC.Event.TimerManager.$fShowState8;

GHC.Event.TimerManager.$fShowState6 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Running"#;

GHC.Event.TimerManager.$fShowState5 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# GHC.Event.TimerManager.$fShowState6;

GHC.Event.TimerManager.$fShowState4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Dying"#;

GHC.Event.TimerManager.$fShowState3 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# GHC.Event.TimerManager.$fShowState4;

GHC.Event.TimerManager.$fShowState2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Finished"#;

GHC.Event.TimerManager.$fShowState1 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# GHC.Event.TimerManager.$fShowState2;

GHC.Event.TimerManager.$w$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: GHC.Event.TimerManager.State
     -> GHC.Base.String -> GHC.Base.String
[GblId, Arity=2, Str=<S,1*U><L,1*U>, Unf=OtherCon []] =
    [] \r [w_sav33 w1_sav34]
        case w_sav33 of {
          GHC.Event.TimerManager.Created ->
              GHC.Base.++ GHC.Event.TimerManager.$fShowState7 w1_sav34;
          GHC.Event.TimerManager.Running ->
              GHC.Base.++ GHC.Event.TimerManager.$fShowState5 w1_sav34;
          GHC.Event.TimerManager.Dying ->
              GHC.Base.++ GHC.Event.TimerManager.$fShowState3 w1_sav34;
          GHC.Event.TimerManager.Finished ->
              GHC.Base.++ GHC.Event.TimerManager.$fShowState1 w1_sav34;
        };

GHC.Event.TimerManager.$fShowState_$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Int -> GHC.Event.TimerManager.State -> GHC.Show.ShowS
[GblId, Arity=3, Str=<L,A><S,1*U><L,1*U>, Unf=OtherCon []] =
    [] \r [w_sav36 w1_sav37 w2_sav38]
        GHC.Event.TimerManager.$w$cshowsPrec w1_sav37 w2_sav38;

GHC.Event.TimerManager.$fEqState_$c==
  :: GHC.Event.TimerManager.State
     -> GHC.Event.TimerManager.State -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [ds_sav39 ds1_sav3a]
        case ds_sav39 of {
          GHC.Event.TimerManager.Created ->
              case ds1_sav3a of {
                __DEFAULT -> GHC.Types.False [];
                GHC.Event.TimerManager.Created -> GHC.Types.True [];
              };
          GHC.Event.TimerManager.Running ->
              case ds1_sav3a of {
                __DEFAULT -> GHC.Types.False [];
                GHC.Event.TimerManager.Running -> GHC.Types.True [];
              };
          GHC.Event.TimerManager.Dying ->
              case ds1_sav3a of {
                __DEFAULT -> GHC.Types.False [];
                GHC.Event.TimerManager.Dying -> GHC.Types.True [];
              };
          GHC.Event.TimerManager.Finished ->
              case ds1_sav3a of {
                __DEFAULT -> GHC.Types.False [];
                GHC.Event.TimerManager.Finished -> GHC.Types.True [];
              };
        };

GHC.Event.TimerManager.$fEqTimeoutKey [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq GHC.Event.TimerManager.TimeoutKey
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Classes.eqInt
                                     GHC.Classes.neInt];

GHC.Event.TimerManager.emControl
  :: GHC.Event.TimerManager.TimerManager -> GHC.Event.Control.Control
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLLSSSSS),1*U(A,A,A,A,U,U,U,U,U)>m,
 Unf=OtherCon []] =
    [] \r [ds_sav3g]
        case ds_sav3g of {
          GHC.Event.TimerManager.TimerManager _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              dt3_sav3m [Occ=Once]
                                              dt4_sav3n [Occ=Once]
                                              dt5_sav3o [Occ=Once]
                                              dt6_sav3p [Occ=Once]
                                              dt7_sav3q [Occ=Once] ->
              GHC.Event.Control.W [dt3_sav3m
                                   dt4_sav3n
                                   dt5_sav3o
                                   dt6_sav3p
                                   dt7_sav3q];
        };

GHC.Event.TimerManager.emUniqueSource
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Event.Unique.UniqueSource
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLSLLLLL),1*U(A,A,A,U,A,A,A,A,A)>m,
 Unf=OtherCon []] =
    [] \r [ds_sav3r]
        case ds_sav3r of {
          GHC.Event.TimerManager.TimerManager _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              dt2_sav3w [Occ=Once]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead] ->
              GHC.Event.Unique.US [dt2_sav3w];
        };

GHC.Event.TimerManager.emState
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.IORef.IORef GHC.Event.TimerManager.State
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLSLLLLLL),1*U(A,A,U,A,A,A,A,A,A)>m,
 Unf=OtherCon []] =
    [] \r [ds_sav3C]
        case ds_sav3C of {
          GHC.Event.TimerManager.TimerManager _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              dt1_sav3G [Occ=Once]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead] ->
              GHC.STRef.STRef [dt1_sav3G];
        };

GHC.Event.TimerManager.emTimeouts
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.IORef.IORef GHC.Event.TimerManager.TimeoutQueue
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LSLLLLLLL),1*U(A,U,A,A,A,A,A,A,A)>m,
 Unf=OtherCon []] =
    [] \r [ds_sav3N]
        case ds_sav3N of {
          GHC.Event.TimerManager.TimerManager _ [Occ=Dead]
                                              dt_sav3Q [Occ=Once]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead] ->
              GHC.STRef.STRef [dt_sav3Q];
        };

GHC.Event.TimerManager.emBackend
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Event.Internal.Backend
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SLLLLLLLL),1*U(U,A,A,A,A,A,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [ds_sav3Y]
        case ds_sav3Y of {
          GHC.Event.TimerManager.TimerManager ds1_sav40 [Occ=Once]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead] ->
              ds1_sav40;
        };

GHC.Event.TimerManager.newDefaultBackend
  :: GHC.Types.IO GHC.Event.Internal.Backend
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [eta_B1] GHC.Event.Poll.new1 eta_B1;

GHC.Event.TimerManager.wakeManager1
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=2,
 Str=<S(LLLLLLSLS),1*U(A,A,A,A,A,A,U,A,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [mgr_sav49 eta_sav4a]
        case mgr_sav49 of {
          GHC.Event.TimerManager.TimerManager _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              dt5_sav4i [Occ=Once]
                                              _ [Occ=Dead]
                                              dt7_sav4k [Occ=Once] ->
              GHC.Event.Control.$wsendWakeup dt5_sav4i dt7_sav4k eta_sav4a;
        };

GHC.Event.TimerManager.wakeManager
  :: GHC.Event.TimerManager.TimerManager -> GHC.Types.IO ()
[GblId,
 Arity=2,
 Str=<S(LLLLLLSLS),1*U(A,A,A,A,A,A,U,A,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1]
        GHC.Event.TimerManager.wakeManager1 eta_B2 eta_B1;

GHC.Event.TimerManager.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

GHC.Event.TimerManager.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.TimerManager.$trModule4];

GHC.Event.TimerManager.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.Event.TimerManager"#;

GHC.Event.TimerManager.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.TimerManager.$trModule2];

GHC.Event.TimerManager.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [GHC.Event.TimerManager.$trModule3
                                     GHC.Event.TimerManager.$trModule1];

$krep_rasDC :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.Unique.$tcUnique
                                              GHC.Types.[]];

$krep1_rasDD :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.Control.$tcControl
                                              GHC.Types.[]];

$krep2_rasDE :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.Unique.$tcUniqueSource
                                              GHC.Types.[]];

$krep3_rasDF :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Tuple.$tc()
                                              GHC.Types.[]];

$krep4_rasDG :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.Internal.$tcBackend
                                              GHC.Types.[]];

$krep5_rasDH :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep3_rasDF GHC.Types.[]];

$krep6_rasDI :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcIO
                                              $krep5_rasDH];

$krep7_rasDJ :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep6_rasDI GHC.Types.[]];

$krep8_rasDK :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.PSQ.$tcIntPSQ
                                              $krep7_rasDJ];

$krep9_rasDL :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep8_rasDK GHC.Types.[]];

$krep10_rasDM :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.IORef.$tcIORef
                                              $krep9_rasDL];

GHC.Event.TimerManager.$tcTimeoutKey2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "TimeoutKey"#;

GHC.Event.TimerManager.$tcTimeoutKey1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.TimerManager.$tcTimeoutKey2];

GHC.Event.TimerManager.$tcTimeoutKey :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [11465769786694886755##
                                    8841886228133799087##
                                    GHC.Event.TimerManager.$trModule
                                    GHC.Event.TimerManager.$tcTimeoutKey1
                                    0#
                                    GHC.Types.krep$*];

$krep11_rasDN :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.TimerManager.$tcTimeoutKey
                                              GHC.Types.[]];

GHC.Event.TimerManager.$tc'TK1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_rasDC $krep11_rasDN];

GHC.Event.TimerManager.$tc'TK3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'TK"#;

GHC.Event.TimerManager.$tc'TK2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.TimerManager.$tc'TK3];

GHC.Event.TimerManager.$tc'TK :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [4362213157428095811##
                                    13641506162182658721##
                                    GHC.Event.TimerManager.$trModule
                                    GHC.Event.TimerManager.$tc'TK2
                                    0#
                                    GHC.Event.TimerManager.$tc'TK1];

GHC.Event.TimerManager.$tcState2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "State"#;

GHC.Event.TimerManager.$tcState1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.TimerManager.$tcState2];

GHC.Event.TimerManager.$tcState :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [10067362680685980057##
                                    6560547589611231606##
                                    GHC.Event.TimerManager.$trModule
                                    GHC.Event.TimerManager.$tcState1
                                    0#
                                    GHC.Types.krep$*];

GHC.Event.TimerManager.$tc'Created1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.TimerManager.$tcState
                                              GHC.Types.[]];

GHC.Event.TimerManager.$tc'Created3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Created"#;

GHC.Event.TimerManager.$tc'Created2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.TimerManager.$tc'Created3];

GHC.Event.TimerManager.$tc'Created :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [7473777249114724674##
                                    2904627795268885228##
                                    GHC.Event.TimerManager.$trModule
                                    GHC.Event.TimerManager.$tc'Created2
                                    0#
                                    GHC.Event.TimerManager.$tc'Created1];

GHC.Event.TimerManager.$tc'Running2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Running"#;

GHC.Event.TimerManager.$tc'Running1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.TimerManager.$tc'Running2];

GHC.Event.TimerManager.$tc'Running :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [15425377252641674582##
                                    12404533232809671740##
                                    GHC.Event.TimerManager.$trModule
                                    GHC.Event.TimerManager.$tc'Running1
                                    0#
                                    GHC.Event.TimerManager.$tc'Created1];

GHC.Event.TimerManager.$tc'Dying2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Dying"#;

GHC.Event.TimerManager.$tc'Dying1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.TimerManager.$tc'Dying2];

GHC.Event.TimerManager.$tc'Dying :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [13405772281963838681##
                                    437803396301020926##
                                    GHC.Event.TimerManager.$trModule
                                    GHC.Event.TimerManager.$tc'Dying1
                                    0#
                                    GHC.Event.TimerManager.$tc'Created1];

GHC.Event.TimerManager.$tc'Finished2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Finished"#;

GHC.Event.TimerManager.$tc'Finished1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.TimerManager.$tc'Finished2];

GHC.Event.TimerManager.$tc'Finished :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [1288208730452846229##
                                    15347214930365004647##
                                    GHC.Event.TimerManager.$trModule
                                    GHC.Event.TimerManager.$tc'Finished1
                                    0#
                                    GHC.Event.TimerManager.$tc'Created1];

$krep12_rasDO :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [GHC.Event.TimerManager.$tc'Created1
                      GHC.Types.[]];

$krep13_rasDP :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.IORef.$tcIORef
                                              $krep12_rasDO];

GHC.Event.TimerManager.$tcTimerManager2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "TimerManager"#;

GHC.Event.TimerManager.$tcTimerManager1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.TimerManager.$tcTimerManager2];

GHC.Event.TimerManager.$tcTimerManager :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [3987042711794726631##
                                    6993782799294290901##
                                    GHC.Event.TimerManager.$trModule
                                    GHC.Event.TimerManager.$tcTimerManager1
                                    0#
                                    GHC.Types.krep$*];

$krep14_rasDQ :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.TimerManager.$tcTimerManager
                                              GHC.Types.[]];

$krep15_rasDR :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep1_rasDD $krep14_rasDQ];

$krep16_rasDS :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_rasDE $krep15_rasDR];

$krep17_rasDT :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep13_rasDP $krep16_rasDS];

$krep18_rasDU :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep10_rasDM $krep17_rasDT];

GHC.Event.TimerManager.$tc'TimerManager1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep4_rasDG $krep18_rasDU];

GHC.Event.TimerManager.$tc'TimerManager3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'TimerManager"#;

GHC.Event.TimerManager.$tc'TimerManager2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.TimerManager.$tc'TimerManager3];

GHC.Event.TimerManager.$tc'TimerManager :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [451007785877958328##
                                    8145550165147362681##
                                    GHC.Event.TimerManager.$trModule
                                    GHC.Event.TimerManager.$tc'TimerManager2
                                    0#
                                    GHC.Event.TimerManager.$tc'TimerManager1];

GHC.Event.TimerManager.$fShowState_$cshow
  :: GHC.Event.TimerManager.State -> GHC.Base.String
[GblId, Arity=1, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [x_sav4l]
        case x_sav4l of {
          GHC.Event.TimerManager.Created ->
              GHC.Event.TimerManager.$fShowState7;
          GHC.Event.TimerManager.Running ->
              GHC.Event.TimerManager.$fShowState5;
          GHC.Event.TimerManager.Dying ->
              GHC.Event.TimerManager.$fShowState3;
          GHC.Event.TimerManager.Finished ->
              GHC.Event.TimerManager.$fShowState1;
        };

GHC.Event.TimerManager.$fShowState_$cshowList
  :: [GHC.Event.TimerManager.State] -> GHC.Show.ShowS
[GblId, Arity=2, Str=<S,1*U><L,U>, Unf=OtherCon []] =
    [] \r [ls_sav4n s_sav4o]
        GHC.Show.showList__
            GHC.Event.TimerManager.$w$cshowsPrec ls_sav4n s_sav4o;

GHC.Event.TimerManager.$fShowState [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show GHC.Event.TimerManager.State
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Event.TimerManager.$fShowState_$cshowsPrec
                                    GHC.Event.TimerManager.$fShowState_$cshow
                                    GHC.Event.TimerManager.$fShowState_$cshowList];

GHC.Event.TimerManager.$fEqState_$c/= [InlPrag=INLINE (sat-args=2)]
  :: GHC.Event.TimerManager.State
     -> GHC.Event.TimerManager.State -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [eta_sav4p eta1_sav4q]
        case eta_sav4p of {
          GHC.Event.TimerManager.Created ->
              case eta1_sav4q of {
                __DEFAULT -> GHC.Types.True [];
                GHC.Event.TimerManager.Created -> GHC.Types.False [];
              };
          GHC.Event.TimerManager.Running ->
              case eta1_sav4q of {
                __DEFAULT -> GHC.Types.True [];
                GHC.Event.TimerManager.Running -> GHC.Types.False [];
              };
          GHC.Event.TimerManager.Dying ->
              case eta1_sav4q of {
                __DEFAULT -> GHC.Types.True [];
                GHC.Event.TimerManager.Dying -> GHC.Types.False [];
              };
          GHC.Event.TimerManager.Finished ->
              case eta1_sav4q of {
                __DEFAULT -> GHC.Types.True [];
                GHC.Event.TimerManager.Finished -> GHC.Types.False [];
              };
        };

GHC.Event.TimerManager.$fEqState [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq GHC.Event.TimerManager.State
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Event.TimerManager.$fEqState_$c==
                                     GHC.Event.TimerManager.$fEqState_$c/=];

GHC.Event.TimerManager.$weditTimeouts [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.MutVar#
       GHC.Prim.RealWorld GHC.Event.TimerManager.TimeoutQueue
     -> GHC.Prim.MutVar# GHC.Prim.RealWorld GHC.Event.TimerManager.State
     -> GHC.Prim.MutableByteArray# GHC.Prim.RealWorld
     -> GHC.Prim.Int#
     -> GHC.Prim.MutVar# GHC.Prim.RealWorld GHC.Types.Bool
     -> GHC.Event.TimerManager.TimeoutEdit
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=7,
 Str=<S,U><L,A><L,A><L,U><L,U><L,C(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ww_sav4w
           ww1_sav4x
           ww2_sav4y
           ww3_sav4z
           ww4_sav4A
           w_sav4B
           w1_sav4C]
        let {
          sat_sav5e [Occ=Once]
            :: GHC.Event.TimerManager.TimeoutQueue
               -> (GHC.Event.TimerManager.TimeoutQueue, GHC.Types.Bool)
          [LclId] =
              [w_sav4B] \r [a1_sav4D]
                  case w_sav4B a1_sav4D of a'1_sav4E {
                    __DEFAULT ->
                        let {
                          sat_sav5d [Occ=Once] :: GHC.Types.Bool
                          [LclId] =
                              [a1_sav4D a'1_sav4E] \u []
                                  case a1_sav4D of {
                                    GHC.Event.PSQ.Bin _ [Occ=Dead]
                                                      dt1_sav4H [Occ=Once*]
                                                      _ [Occ=Dead]
                                                      _ [Occ=Dead]
                                                      _ [Occ=Dead]
                                                      _ [Occ=Dead] ->
                                        case a'1_sav4E of {
                                          GHC.Event.PSQ.Bin _ [Occ=Dead]
                                                            dt5_sav4O [Occ=Once]
                                                            _ [Occ=Dead]
                                                            _ [Occ=Dead]
                                                            _ [Occ=Dead]
                                                            _ [Occ=Dead] ->
                                              case neWord# [dt1_sav4H dt5_sav4O] of sat_sav4T {
                                                __DEFAULT -> tagToEnum# [sat_sav4T];
                                              };
                                          GHC.Event.PSQ.Tip _ [Occ=Dead]
                                                            dt5_sav4V [Occ=Once]
                                                            _ [Occ=Dead] ->
                                              case neWord# [dt1_sav4H dt5_sav4V] of sat_sav4X {
                                                __DEFAULT -> tagToEnum# [sat_sav4X];
                                              };
                                          GHC.Event.PSQ.Nil -> GHC.Types.True [];
                                        };
                                    GHC.Event.PSQ.Tip _ [Occ=Dead]
                                                      dt1_sav4Z [Occ=Once*]
                                                      _ [Occ=Dead] ->
                                        case a'1_sav4E of {
                                          GHC.Event.PSQ.Bin _ [Occ=Dead]
                                                            dt3_sav53 [Occ=Once]
                                                            _ [Occ=Dead]
                                                            _ [Occ=Dead]
                                                            _ [Occ=Dead]
                                                            _ [Occ=Dead] ->
                                              case neWord# [dt1_sav4Z dt3_sav53] of sat_sav58 {
                                                __DEFAULT -> tagToEnum# [sat_sav58];
                                              };
                                          GHC.Event.PSQ.Tip _ [Occ=Dead]
                                                            dt3_sav5a [Occ=Once]
                                                            _ [Occ=Dead] ->
                                              case neWord# [dt1_sav4Z dt3_sav5a] of sat_sav5c {
                                                __DEFAULT -> tagToEnum# [sat_sav5c];
                                              };
                                          GHC.Event.PSQ.Nil -> GHC.Types.True [];
                                        };
                                    GHC.Event.PSQ.Nil -> GHC.Types.True [];
                                  };
                        } in  (,) [a'1_sav4E sat_sav5d];
                  };
        } in 
          case atomicModifyMutVar# [ww_sav4w sat_sav5e w1_sav4C] of {
            (#,#) ipv_sav5g [Occ=Once*] ipv1_sav5h [Occ=Once!] ->
                case ipv1_sav5h of {
                  GHC.Types.False -> (#,#) [ipv_sav5g GHC.Tuple.()];
                  GHC.Types.True ->
                      GHC.Event.Control.$wsendWakeup ww3_sav4z ww4_sav4A ipv_sav5g;
                };
          };

GHC.Event.TimerManager.unregisterTimeout2 [InlPrag=NOUSERINLINE[0]]
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Event.TimerManager.TimeoutEdit
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=3,
 Str=<S(LSSSLLSLS),1*U(A,U,1*U,1*U,A,A,U,A,U)><L,C(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sav5j w1_sav5k w2_sav5l]
        case w_sav5j of {
          GHC.Event.TimerManager.TimerManager _ [Occ=Dead]
                                              ww2_sav5o [Occ=Once]
                                              ww3_sav5p [Occ=Once]
                                              ww4_sav5q [Occ=Once]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              ww7_sav5t [Occ=Once]
                                              _ [Occ=Dead]
                                              ww9_sav5v [Occ=Once] ->
              GHC.Event.TimerManager.$weditTimeouts
                  ww2_sav5o
                  ww3_sav5p
                  ww4_sav5q
                  ww7_sav5t
                  ww9_sav5v
                  w1_sav5k
                  w2_sav5l;
        };

GHC.Event.TimerManager.unregisterTimeout1
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Event.TimerManager.TimeoutKey
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=3,
 Str=<S(LSLLLLLLL),1*U(A,U,A,A,A,A,U,A,U)><L,U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [mgr_sav5w ds_sav5x eta_sav5y]
        case mgr_sav5w of {
          GHC.Event.TimerManager.TimerManager _ [Occ=Dead]
                                              ww2_sav5B [Occ=Once]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              ww7_sav5G [Occ=Once]
                                              _ [Occ=Dead]
                                              ww9_sav5I [Occ=Once] ->
              let {
                sat_sav6k [Occ=Once]
                  :: GHC.Event.TimerManager.TimeoutQueue
                     -> (GHC.Event.TimerManager.TimeoutQueue, GHC.Types.Bool)
                [LclId] =
                    [ds_sav5x] \r [a1_sav5J]
                        case GHC.Event.PSQ.delete ds_sav5x a1_sav5J of a'1_sav5K {
                          __DEFAULT ->
                              let {
                                sat_sav6j [Occ=Once] :: GHC.Types.Bool
                                [LclId] =
                                    [a1_sav5J a'1_sav5K] \u []
                                        case a1_sav5J of {
                                          GHC.Event.PSQ.Bin _ [Occ=Dead]
                                                            dt1_sav5N [Occ=Once*]
                                                            _ [Occ=Dead]
                                                            _ [Occ=Dead]
                                                            _ [Occ=Dead]
                                                            _ [Occ=Dead] ->
                                              case a'1_sav5K of {
                                                GHC.Event.PSQ.Bin _ [Occ=Dead]
                                                                  dt5_sav5U [Occ=Once]
                                                                  _ [Occ=Dead]
                                                                  _ [Occ=Dead]
                                                                  _ [Occ=Dead]
                                                                  _ [Occ=Dead] ->
                                                    case
                                                        neWord# [dt1_sav5N dt5_sav5U]
                                                    of
                                                    sat_sav5Z
                                                    { __DEFAULT -> tagToEnum# [sat_sav5Z];
                                                    };
                                                GHC.Event.PSQ.Tip _ [Occ=Dead]
                                                                  dt5_sav61 [Occ=Once]
                                                                  _ [Occ=Dead] ->
                                                    case
                                                        neWord# [dt1_sav5N dt5_sav61]
                                                    of
                                                    sat_sav63
                                                    { __DEFAULT -> tagToEnum# [sat_sav63];
                                                    };
                                                GHC.Event.PSQ.Nil -> GHC.Types.True [];
                                              };
                                          GHC.Event.PSQ.Tip _ [Occ=Dead]
                                                            dt1_sav65 [Occ=Once*]
                                                            _ [Occ=Dead] ->
                                              case a'1_sav5K of {
                                                GHC.Event.PSQ.Bin _ [Occ=Dead]
                                                                  dt3_sav69 [Occ=Once]
                                                                  _ [Occ=Dead]
                                                                  _ [Occ=Dead]
                                                                  _ [Occ=Dead]
                                                                  _ [Occ=Dead] ->
                                                    case
                                                        neWord# [dt1_sav65 dt3_sav69]
                                                    of
                                                    sat_sav6e
                                                    { __DEFAULT -> tagToEnum# [sat_sav6e];
                                                    };
                                                GHC.Event.PSQ.Tip _ [Occ=Dead]
                                                                  dt3_sav6g [Occ=Once]
                                                                  _ [Occ=Dead] ->
                                                    case
                                                        neWord# [dt1_sav65 dt3_sav6g]
                                                    of
                                                    sat_sav6i
                                                    { __DEFAULT -> tagToEnum# [sat_sav6i];
                                                    };
                                                GHC.Event.PSQ.Nil -> GHC.Types.True [];
                                              };
                                          GHC.Event.PSQ.Nil -> GHC.Types.True [];
                                        };
                              } in  (,) [a'1_sav5K sat_sav6j];
                        };
              } in 
                case atomicModifyMutVar# [ww2_sav5B sat_sav6k eta_sav5y] of {
                  (#,#) ipv_sav6m [Occ=Once*] ipv1_sav6n [Occ=Once!] ->
                      case ipv1_sav6n of {
                        GHC.Types.False -> (#,#) [ipv_sav6m GHC.Tuple.()];
                        GHC.Types.True ->
                            GHC.Event.Control.$wsendWakeup ww7_sav5G ww9_sav5I ipv_sav6m;
                      };
                };
        };

GHC.Event.TimerManager.unregisterTimeout
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Event.TimerManager.TimeoutKey -> GHC.Types.IO ()
[GblId,
 Arity=3,
 Str=<S(LSLLLLLLL),1*U(A,U,A,A,A,A,U,A,U)><L,U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 eta_B1]
        GHC.Event.TimerManager.unregisterTimeout1 eta_B3 eta_B2 eta_B1;

GHC.Event.TimerManager.$wregisterTimeout [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.MutVar#
       GHC.Prim.RealWorld GHC.Event.TimerManager.TimeoutQueue
     -> GHC.Prim.MutVar# GHC.Prim.RealWorld GHC.Event.TimerManager.State
     -> GHC.Prim.MutableByteArray# GHC.Prim.RealWorld
     -> GHC.Prim.Int#
     -> GHC.Prim.MutVar# GHC.Prim.RealWorld GHC.Types.Bool
     -> GHC.Prim.Int#
     -> GHC.Event.TimerManager.TimeoutCallback
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Event.TimerManager.TimeoutKey #)
[GblId,
 Arity=8,
 Str=<L,U><L,A><S,U><L,U><L,U><S,U><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [ww_sav6p
           ww1_sav6q
           ww2_sav6r
           ww3_sav6s
           ww4_sav6t
           ww5_sav6u
           w_sav6v
           w1_sav6w]
        case fetchAddIntArray# [ww2_sav6r 0# 1# w1_sav6w] of {
          (#,#) ipv_sav6y [Occ=Once*] ipv1_sav6z ->
              let {
                ipv2_sav6A [Dmd=<L,U(U)>] :: GHC.Types.Int
                [LclId, Unf=OtherCon []] =
                    CCCS GHC.Types.I#! [ipv1_sav6z];
              } in 
                case <=# [ww5_sav6u 0#] of {
                  __DEFAULT ->
                      case __pkg_ccall base-4.11.0.0 [ipv_sav6y] of {
                        (#,#) ds2_sav6E [Occ=Once] ds3_sav6F [Occ=Once] ->
                            case int2Word# [ww5_sav6u] of sat_sav6H {
                              __DEFAULT ->
                                  case timesWord# [sat_sav6H 1000##] of sat_sav6I {
                                    __DEFAULT ->
                                        case plusWord# [sat_sav6I ds3_sav6F] of p_sav6G {
                                          __DEFAULT ->
                                              let {
                                                sat_sav7l [Occ=Once]
                                                  :: GHC.Event.TimerManager.TimeoutQueue
                                                     -> (GHC.Event.TimerManager.TimeoutQueue,
                                                         GHC.Types.Bool)
                                                [LclId] =
                                                    [w_sav6v
                                                     ipv1_sav6z
                                                     ipv2_sav6A
                                                     p_sav6G] \r [a1_sav6J]
                                                        case
                                                            GHC.Event.PSQ.delete ipv2_sav6A a1_sav6J
                                                        of
                                                        sat_sav6K
                                                        { __DEFAULT ->
                                                              case
                                                                  GHC.Event.PSQ.$wunsafeInsertNew
                                                                      ipv1_sav6z
                                                                      p_sav6G
                                                                      w_sav6v
                                                                      sat_sav6K
                                                              of
                                                              a'1_sav6L
                                                              { __DEFAULT ->
                                                                    let {
                                                                      sat_sav7k [Occ=Once]
                                                                        :: GHC.Types.Bool
                                                                      [LclId] =
                                                                          [a1_sav6J a'1_sav6L] \u []
                                                                              case a1_sav6J of {
                                                                                GHC.Event.PSQ.Bin _ [Occ=Dead]
                                                                                                  dt1_sav6O [Occ=Once*]
                                                                                                  _ [Occ=Dead]
                                                                                                  _ [Occ=Dead]
                                                                                                  _ [Occ=Dead]
                                                                                                  _ [Occ=Dead] ->
                                                                                    case
                                                                                        a'1_sav6L
                                                                                    of
                                                                                    { GHC.Event.PSQ.Bin _ [Occ=Dead]
                                                                                                        dt5_sav6V [Occ=Once]
                                                                                                        _ [Occ=Dead]
                                                                                                        _ [Occ=Dead]
                                                                                                        _ [Occ=Dead]
                                                                                                        _ [Occ=Dead] ->
                                                                                          case
                                                                                              neWord# [dt1_sav6O
                                                                                                       dt5_sav6V]
                                                                                          of
                                                                                          sat_sav70
                                                                                          { __DEFAULT ->
                                                                                                tagToEnum# [sat_sav70];
                                                                                          };
                                                                                      GHC.Event.PSQ.Tip _ [Occ=Dead]
                                                                                                        dt5_sav72 [Occ=Once]
                                                                                                        _ [Occ=Dead] ->
                                                                                          case
                                                                                              neWord# [dt1_sav6O
                                                                                                       dt5_sav72]
                                                                                          of
                                                                                          sat_sav74
                                                                                          { __DEFAULT ->
                                                                                                tagToEnum# [sat_sav74];
                                                                                          };
                                                                                      GHC.Event.PSQ.Nil ->
                                                                                          GHC.Types.True [];
                                                                                    };
                                                                                GHC.Event.PSQ.Tip _ [Occ=Dead]
                                                                                                  dt1_sav76 [Occ=Once*]
                                                                                                  _ [Occ=Dead] ->
                                                                                    case
                                                                                        a'1_sav6L
                                                                                    of
                                                                                    { GHC.Event.PSQ.Bin _ [Occ=Dead]
                                                                                                        dt3_sav7a [Occ=Once]
                                                                                                        _ [Occ=Dead]
                                                                                                        _ [Occ=Dead]
                                                                                                        _ [Occ=Dead]
                                                                                                        _ [Occ=Dead] ->
                                                                                          case
                                                                                              neWord# [dt1_sav76
                                                                                                       dt3_sav7a]
                                                                                          of
                                                                                          sat_sav7f
                                                                                          { __DEFAULT ->
                                                                                                tagToEnum# [sat_sav7f];
                                                                                          };
                                                                                      GHC.Event.PSQ.Tip _ [Occ=Dead]
                                                                                                        dt3_sav7h [Occ=Once]
                                                                                                        _ [Occ=Dead] ->
                                                                                          case
                                                                                              neWord# [dt1_sav76
                                                                                                       dt3_sav7h]
                                                                                          of
                                                                                          sat_sav7j
                                                                                          { __DEFAULT ->
                                                                                                tagToEnum# [sat_sav7j];
                                                                                          };
                                                                                      GHC.Event.PSQ.Nil ->
                                                                                          GHC.Types.True [];
                                                                                    };
                                                                                GHC.Event.PSQ.Nil ->
                                                                                    GHC.Types.True [];
                                                                              };
                                                                    } in  (,) [a'1_sav6L sat_sav7k];
                                                              };
                                                        };
                                              } in 
                                                case
                                                    atomicModifyMutVar# [ww_sav6p
                                                                         sat_sav7l
                                                                         ds2_sav6E]
                                                of
                                                { (#,#) ipv3_sav7n [Occ=Once*]
                                                        ipv4_sav7o [Occ=Once!] ->
                                                      case ipv4_sav7o of {
                                                        GHC.Types.False ->
                                                            (#,#) [ipv3_sav7n ipv2_sav6A];
                                                        GHC.Types.True ->
                                                            case
                                                                narrow32Int# [ww3_sav6s]
                                                            of
                                                            sat_sav7r
                                                            { __DEFAULT ->
                                                                  case
                                                                      __pkg_ccall base-4.11.0.0 [sat_sav7r
                                                                                                 1##
                                                                                                 ipv3_sav7n]
                                                                  of
                                                                  { (#,#) ds_sav7t [Occ=Once*]
                                                                          ds5_sav7u [Occ=Once] ->
                                                                        case
                                                                            narrow32Int# [ds5_sav7u]
                                                                        of
                                                                        { __DEFAULT ->
                                                                              case
                                                                                  __pkg_ccall base-4.11.0.0 [ds_sav7t]
                                                                              of
                                                                              { (#,#) ds6_sav7y [Occ=Once]
                                                                                      ds7_sav7z [Occ=Once] ->
                                                                                    case
                                                                                        readMutVar# [ww4_sav6t
                                                                                                     ds6_sav7y]
                                                                                    of
                                                                                    { (#,#) ipv5_sav7B [Occ=Once*]
                                                                                            ipv6_sav7C [Occ=Once!] ->
                                                                                          case
                                                                                              ipv6_sav7C
                                                                                          of
                                                                                          { GHC.Types.False ->
                                                                                                case
                                                                                                    Foreign.C.Error.throwErrno1
                                                                                                        GHC.Event.Control.sendWakeup2
                                                                                                        ipv5_sav7B
                                                                                                of
                                                                                                { (#,#) ipv7_sav7F [Occ=Once]
                                                                                                        _ [Occ=Dead] ->
                                                                                                      (#,#) [ipv7_sav7F
                                                                                                             ipv2_sav6A];
                                                                                                };
                                                                                            GHC.Types.True ->
                                                                                                case
                                                                                                    narrow32Int# [ds7_sav7z]
                                                                                                of
                                                                                                { __DEFAULT ->
                                                                                                      case
                                                                                                          Foreign.C.Error.throwErrno1
                                                                                                              GHC.Event.Control.sendWakeup2
                                                                                                              ipv5_sav7B
                                                                                                      of
                                                                                                      { (#,#) ipv7_sav7J [Occ=Once]
                                                                                                              _ [Occ=Dead] ->
                                                                                                            (#,#) [ipv7_sav7J
                                                                                                                   ipv2_sav6A];
                                                                                                      };
                                                                                                  9# ->
                                                                                                      (#,#) [ipv5_sav7B
                                                                                                             ipv2_sav6A];
                                                                                                };
                                                                                          };
                                                                                    };
                                                                              };
                                                                          0# ->
                                                                              (#,#) [ds_sav7t
                                                                                     ipv2_sav6A];
                                                                        };
                                                                  };
                                                            };
                                                      };
                                                };
                                        };
                                  };
                            };
                      };
                  1# ->
                      case w_sav6v ipv_sav6y of {
                        (#,#) ipv3_sav7M [Occ=Once] _ [Occ=Dead] ->
                            (#,#) [ipv3_sav7M ipv2_sav6A];
                      };
                };
        };

GHC.Event.TimerManager.registerTimeout1 [InlPrag=NOUSERINLINE[0]]
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Types.Int
     -> GHC.Event.TimerManager.TimeoutCallback
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Event.TimerManager.TimeoutKey #)
[GblId,
 Arity=4,
 Str=<S(LSSSLLSLS),1*U(A,U,1*U,U,A,A,U,A,U)><S(S),1*U(U)><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sav7O w1_sav7P w2_sav7Q w3_sav7R]
        case w_sav7O of {
          GHC.Event.TimerManager.TimerManager _ [Occ=Dead]
                                              ww2_sav7U [Occ=Once]
                                              ww3_sav7V [Occ=Once]
                                              ww4_sav7W [Occ=Once]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              ww7_sav7Z [Occ=Once]
                                              _ [Occ=Dead]
                                              ww9_sav81 [Occ=Once] ->
              case w1_sav7P of {
                GHC.Types.I# ww11_sav83 [Occ=Once] ->
                    GHC.Event.TimerManager.$wregisterTimeout
                        ww2_sav7U
                        ww3_sav7V
                        ww4_sav7W
                        ww7_sav7Z
                        ww9_sav81
                        ww11_sav83
                        w2_sav7Q
                        w3_sav7R;
              };
        };

GHC.Event.TimerManager.registerTimeout
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Types.Int
     -> GHC.Event.TimerManager.TimeoutCallback
     -> GHC.Types.IO GHC.Event.TimerManager.TimeoutKey
[GblId,
 Arity=4,
 Str=<S(LSSSLLSLS),1*U(A,U,1*U,U,A,A,U,A,U)><S(S),1*U(U)><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.Event.TimerManager.registerTimeout1
            eta_B4 eta_B3 eta_B2 eta_B1;

GHC.Event.TimerManager.updateTimeout1
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Event.TimerManager.TimeoutKey
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Str=<L,1*U(A,U,A,A,A,A,U,A,U)><L,U(U)><L,1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [mgr_sav84 ds_sav85 us_sav86 s_sav87]
        case __pkg_ccall base-4.11.0.0 [s_sav87] of {
          (#,#) ds1_sav8a [Occ=Once] ds2_sav8b [Occ=Once] ->
              case mgr_sav84 of {
                GHC.Event.TimerManager.TimerManager _ [Occ=Dead]
                                                    ww2_sav8e [Occ=Once]
                                                    _ [Occ=Dead]
                                                    _ [Occ=Dead]
                                                    _ [Occ=Dead]
                                                    _ [Occ=Dead]
                                                    ww7_sav8j [Occ=Once]
                                                    _ [Occ=Dead]
                                                    ww9_sav8l [Occ=Once] ->
                    let {
                      x_sav8m [Occ=OnceL!, Dmd=<L,U(U)>] :: GHC.Word.Word64
                      [LclId] =
                          [us_sav86 ds2_sav8b] \u []
                              case us_sav86 of {
                                GHC.Types.I# x#_sav8o [Occ=Once] ->
                                    case int2Word# [x#_sav8o] of sat_sav8p {
                                      __DEFAULT ->
                                          case timesWord# [sat_sav8p 1000##] of sat_sav8q {
                                            __DEFAULT ->
                                                case plusWord# [sat_sav8q ds2_sav8b] of sat_sav8r {
                                                  __DEFAULT -> GHC.Word.W64# [sat_sav8r];
                                                };
                                          };
                                    };
                              }; } in
                    let {
                      sat_sav9g [Occ=Once]
                        :: GHC.Event.TimerManager.TimeoutQueue
                           -> (GHC.Event.TimerManager.TimeoutQueue, GHC.Types.Bool)
                      [LclId] =
                          [ds_sav85 x_sav8m] \r [a1_sav8s]
                              case GHC.Event.PSQ.deleteView ds_sav85 a1_sav8s of {
                                GHC.Base.Nothing ->
                                    case a1_sav8s of a'1_sav8u {
                                      __DEFAULT ->
                                          let {
                                            sat_sav8w [Occ=Once] :: GHC.Types.Bool
                                            [LclId] =
                                                [a'1_sav8u] \u []
                                                    case a'1_sav8u of {
                                                      __DEFAULT -> GHC.Types.False [];
                                                      GHC.Event.PSQ.Nil -> GHC.Types.True [];
                                                    };
                                          } in  (,) [a'1_sav8u sat_sav8w];
                                    };
                                GHC.Base.Just ds4_sav8x [Occ=Once!] ->
                                    case ds4_sav8x of {
                                      (,,) _ [Occ=Dead] v_sav8A [Occ=Once] t0'_sav8B [Occ=Once] ->
                                          case ds_sav85 of {
                                            GHC.Types.I# ww11_sav8D [Occ=Once] ->
                                                case x_sav8m of {
                                                  GHC.Word.W64# ww13_sav8F [Occ=Once] ->
                                                      case
                                                          GHC.Event.PSQ.$wunsafeInsertNew
                                                              ww11_sav8D
                                                              ww13_sav8F
                                                              v_sav8A
                                                              t0'_sav8B
                                                      of
                                                      a'1_sav8G
                                                      { __DEFAULT ->
                                                            let {
                                                              sat_sav9f [Occ=Once] :: GHC.Types.Bool
                                                              [LclId] =
                                                                  [a1_sav8s a'1_sav8G] \u []
                                                                      case a1_sav8s of {
                                                                        GHC.Event.PSQ.Bin _ [Occ=Dead]
                                                                                          dt1_sav8J [Occ=Once*]
                                                                                          _ [Occ=Dead]
                                                                                          _ [Occ=Dead]
                                                                                          _ [Occ=Dead]
                                                                                          _ [Occ=Dead] ->
                                                                            case a'1_sav8G of {
                                                                              GHC.Event.PSQ.Bin _ [Occ=Dead]
                                                                                                dt5_sav8Q [Occ=Once]
                                                                                                _ [Occ=Dead]
                                                                                                _ [Occ=Dead]
                                                                                                _ [Occ=Dead]
                                                                                                _ [Occ=Dead] ->
                                                                                  case
                                                                                      neWord# [dt1_sav8J
                                                                                               dt5_sav8Q]
                                                                                  of
                                                                                  sat_sav8V
                                                                                  { __DEFAULT ->
                                                                                        tagToEnum# [sat_sav8V];
                                                                                  };
                                                                              GHC.Event.PSQ.Tip _ [Occ=Dead]
                                                                                                dt5_sav8X [Occ=Once]
                                                                                                _ [Occ=Dead] ->
                                                                                  case
                                                                                      neWord# [dt1_sav8J
                                                                                               dt5_sav8X]
                                                                                  of
                                                                                  sat_sav8Z
                                                                                  { __DEFAULT ->
                                                                                        tagToEnum# [sat_sav8Z];
                                                                                  };
                                                                              GHC.Event.PSQ.Nil ->
                                                                                  GHC.Types.True [];
                                                                            };
                                                                        GHC.Event.PSQ.Tip _ [Occ=Dead]
                                                                                          dt1_sav91 [Occ=Once*]
                                                                                          _ [Occ=Dead] ->
                                                                            case a'1_sav8G of {
                                                                              GHC.Event.PSQ.Bin _ [Occ=Dead]
                                                                                                dt3_sav95 [Occ=Once]
                                                                                                _ [Occ=Dead]
                                                                                                _ [Occ=Dead]
                                                                                                _ [Occ=Dead]
                                                                                                _ [Occ=Dead] ->
                                                                                  case
                                                                                      neWord# [dt1_sav91
                                                                                               dt3_sav95]
                                                                                  of
                                                                                  sat_sav9a
                                                                                  { __DEFAULT ->
                                                                                        tagToEnum# [sat_sav9a];
                                                                                  };
                                                                              GHC.Event.PSQ.Tip _ [Occ=Dead]
                                                                                                dt3_sav9c [Occ=Once]
                                                                                                _ [Occ=Dead] ->
                                                                                  case
                                                                                      neWord# [dt1_sav91
                                                                                               dt3_sav9c]
                                                                                  of
                                                                                  sat_sav9e
                                                                                  { __DEFAULT ->
                                                                                        tagToEnum# [sat_sav9e];
                                                                                  };
                                                                              GHC.Event.PSQ.Nil ->
                                                                                  GHC.Types.True [];
                                                                            };
                                                                        GHC.Event.PSQ.Nil ->
                                                                            GHC.Types.True [];
                                                                      };
                                                            } in  (,) [a'1_sav8G sat_sav9f];
                                                      };
                                                };
                                          };
                                    };
                              };
                    } in 
                      case atomicModifyMutVar# [ww2_sav8e sat_sav9g ds1_sav8a] of {
                        (#,#) ipv_sav9i [Occ=Once*] ipv1_sav9j [Occ=Once!] ->
                            case ipv1_sav9j of {
                              GHC.Types.False -> (#,#) [ipv_sav9i GHC.Tuple.()];
                              GHC.Types.True ->
                                  GHC.Event.Control.$wsendWakeup ww7_sav8j ww9_sav8l ipv_sav9i;
                            };
                      };
              };
        };

GHC.Event.TimerManager.updateTimeout
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Event.TimerManager.TimeoutKey
     -> GHC.Types.Int
     -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Str=<L,1*U(A,U,A,A,A,A,U,A,U)><L,U(U)><L,1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 eta_B1]
        GHC.Event.TimerManager.updateTimeout1 eta_B4 eta_B3 eta_B2 eta_B1;

GHC.Event.TimerManager.cleanup1 [InlPrag=NOUSERINLINE[0]]
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SLSLLLLSL),1*U(U,A,U,A,U,U,U,U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sav9l w1_sav9m]
        case w_sav9l of {
          GHC.Event.TimerManager.TimerManager ww1_sav9o [Occ=Once!]
                                              _ [Occ=Dead]
                                              ww3_sav9q [Occ=Once]
                                              _ [Occ=Dead]
                                              ww5_sav9s [Occ=Once]
                                              ww6_sav9t [Occ=Once]
                                              ww7_sav9u [Occ=Once*]
                                              ww8_sav9v [Occ=Once!]
                                              ww9_sav9w [Occ=Once] ->
              case ww1_sav9o of {
                GHC.Event.Internal.Backend bState_sav9y [Occ=Once]
                                           _ [Occ=Dead]
                                           _ [Occ=Dead]
                                           _ [Occ=Dead]
                                           bDelete_sav9C [Occ=Once!] ->
                    case
                        writeMutVar# [ww3_sav9q GHC.Event.TimerManager.Finished w1_sav9m]
                    of
                    s2#_sav9D
                    { __DEFAULT ->
                          case bDelete_sav9C bState_sav9y s2#_sav9D of {
                            (#,#) ipv_sav9F [Occ=Once] _ [Occ=Dead] ->
                                case
                                    atomicModifyMutVar# [ww9_sav9w
                                                         GHC.Event.Control.closeControl2
                                                         ipv_sav9F]
                                of
                                { (#,#) ipv2_sav9I [Occ=Once] _ [Occ=Dead] ->
                                      case narrow32Int# [ww5_sav9s] of sat_sav9L {
                                        __DEFAULT ->
                                            case
                                                __pkg_ccall base-4.11.0.0 [sat_sav9L ipv2_sav9I]
                                            of
                                            { (#,#) ds6_sav9N [Occ=Once] _ [Occ=Dead] ->
                                                  case narrow32Int# [ww6_sav9t] of sat_sav9Q {
                                                    __DEFAULT ->
                                                        case
                                                            __pkg_ccall base-4.11.0.0 [sat_sav9Q
                                                                                       ds6_sav9N]
                                                        of
                                                        { (#,#) ds8_sav9S [Occ=Once*]
                                                                _ [Occ=Dead] ->
                                                              case ww8_sav9v of {
                                                                GHC.Types.False ->
                                                                    case
                                                                        narrow32Int# [ww7_sav9u]
                                                                    of
                                                                    sat_sav9W
                                                                    { __DEFAULT ->
                                                                          case
                                                                              __pkg_ccall base-4.11.0.0 [sat_sav9W
                                                                                                         ds8_sav9S]
                                                                          of
                                                                          { (#,#) ds10_sav9Y [Occ=Once]
                                                                                  _ [Occ=Dead] ->
                                                                                (#,#) [ds10_sav9Y
                                                                                       GHC.Tuple.()];
                                                                          };
                                                                    };
                                                                GHC.Types.True ->
                                                                    case
                                                                        __pkg_ccall base-4.11.0.0 [-1#
                                                                                                   ds8_sav9S]
                                                                    of
                                                                    { Unit# ds_sava2 [Occ=Once] ->
                                                                          case
                                                                              narrow32Int# [ww7_sav9u]
                                                                          of
                                                                          sat_sava4
                                                                          { __DEFAULT ->
                                                                                case
                                                                                    __pkg_ccall base-4.11.0.0 [sat_sava4
                                                                                                               ds_sava2]
                                                                                of
                                                                                { (#,#) ds10_sava6 [Occ=Once]
                                                                                        _ [Occ=Dead] ->
                                                                                      (#,#) [ds10_sava6
                                                                                             GHC.Tuple.()];
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.Event.TimerManager.cleanup
  :: GHC.Event.TimerManager.TimerManager -> GHC.Types.IO ()
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SLSLLLLSL),1*U(U,A,U,A,U,U,U,U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1]
        GHC.Event.TimerManager.cleanup1 eta_B2 eta_B1;

GHC.Event.TimerManager.finished1
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(LLSLLLLLL),1*U(A,A,U,A,A,A,A,A,A)><S,U>,
 Unf=OtherCon []] =
    [] \r [mgr_sava8 s_sava9]
        case mgr_sava8 of {
          GHC.Event.TimerManager.TimerManager _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              dt1_savad [Occ=Once]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead] ->
              case readMutVar# [dt1_savad s_sava9] of {
                (#,#) ipv_saval [Occ=Once] ipv1_savam [Occ=Once!] ->
                    let {
                      sat_savao [Occ=Once] :: GHC.Types.Bool
                      [LclId] =
                          [ipv1_savam] \u []
                              case ipv1_savam of {
                                __DEFAULT -> GHC.Types.False [];
                                GHC.Event.TimerManager.Finished -> GHC.Types.True [];
                              };
                    } in  (#,#) [ipv_saval sat_savao];
              };
        };

GHC.Event.TimerManager.finished
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Types.IO GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(LLSLLLLLL),1*U(A,A,U,A,A,A,A,A,A)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1]
        GHC.Event.TimerManager.finished1 eta_B2 eta_B1;

GHC.Event.TimerManager.shutdown2
  :: GHC.Event.TimerManager.State
     -> (GHC.Event.TimerManager.State, GHC.Event.TimerManager.State)
[GblId, Arity=1, Caf=NoCafRefs, Str=<L,U>m, Unf=OtherCon []] =
    [] \r [a1_savap] (,) [GHC.Event.TimerManager.Dying a1_savap];

GHC.Event.TimerManager.shutdown1
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=2,
 Str=<S(LLSLLLLLL),1*U(A,A,U,A,A,U,A,A,1*U)><S,U>,
 Unf=OtherCon []] =
    [] \r [mgr_savaq s_savar]
        case mgr_savaq of {
          GHC.Event.TimerManager.TimerManager _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              dt1_savav [Occ=Once]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              dt4_savay [Occ=Once]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              dt7_savaB [Occ=Once] ->
              case
                  atomicModifyMutVar# [dt1_savav
                                       GHC.Event.TimerManager.shutdown2
                                       s_savar]
              of
              { (#,#) ipv_savaD [Occ=Once*] ipv1_savaE [Occ=Once!] ->
                    case ipv1_savaE of {
                      __DEFAULT -> (#,#) [ipv_savaD GHC.Tuple.()];
                      GHC.Event.TimerManager.Running ->
                          GHC.Event.Control.$wsendDie dt4_savay dt7_savaB ipv_savaD;
                    };
              };
        };

GHC.Event.TimerManager.shutdown
  :: GHC.Event.TimerManager.TimerManager -> GHC.Types.IO ()
[GblId,
 Arity=2,
 Str=<S(LLSLLLLLL),1*U(A,A,U,A,A,U,A,A,1*U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1]
        GHC.Event.TimerManager.shutdown1 eta_B2 eta_B1;

GHC.Event.TimerManager.new3
  :: GHC.Event.TimerManager.State
     -> (GHC.Event.TimerManager.State, GHC.Event.TimerManager.State)
[GblId, Arity=1, Caf=NoCafRefs, Str=<L,U>m, Unf=OtherCon []] =
    [] \r [a1_savaG] (,) [GHC.Event.TimerManager.Finished a1_savaG];

GHC.Event.TimerManager.new2
  :: GHC.Event.Internal.Backend
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Event.TimerManager.TimerManager #)
[GblId, Arity=2, Str=<L,U><S,U>, Unf=OtherCon []] =
    [] \r [be_savaH s_savaI]
        case newMutVar# [GHC.Event.PSQ.Nil s_savaI] of {
          (#,#) ipv_savaK [Occ=Once] ipv1_savaL [Occ=Once] ->
              case GHC.Event.Control.newControl1 GHC.Types.True ipv_savaK of {
                (#,#) ipv2_savaN [Occ=Once] ipv3_savaO ->
                    case newMutVar# [GHC.Event.TimerManager.Created ipv2_savaN] of {
                      (#,#) ipv4_savaQ [Occ=Once] ipv5_savaR ->
                          case newByteArray# [8# ipv4_savaQ] of {
                            (#,#) ipv6_savaT [Occ=Once] ipv7_savaU [Occ=Once] ->
                                let {
                                  sat_savba [Occ=Once]
                                    :: GHC.Prim.State# GHC.Prim.RealWorld
                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                  [LclId] =
                                      [be_savaH ipv3_savaO ipv5_savaR] \r [s1_savaW]
                                          case
                                              atomicModifyMutVar# [ipv5_savaR
                                                                   GHC.Event.TimerManager.new3
                                                                   s1_savaW]
                                          of
                                          { (#,#) ipv8_savaY [Occ=Once*] ipv9_savaZ [Occ=Once!] ->
                                                case ipv9_savaZ of {
                                                  __DEFAULT ->
                                                      case be_savaH of {
                                                        GHC.Event.Internal.Backend bState_savb2 [Occ=Once]
                                                                                   _ [Occ=Dead]
                                                                                   _ [Occ=Dead]
                                                                                   _ [Occ=Dead]
                                                                                   bDelete_savb6 [Occ=Once!] ->
                                                            case
                                                                bDelete_savb6
                                                                    bState_savb2 ipv8_savaY
                                                            of
                                                            { (#,#) ipv10_savb8 [Occ=Once]
                                                                    _ [Occ=Dead] ->
                                                                  GHC.Event.Control.closeControl1
                                                                      ipv3_savaO ipv10_savb8;
                                                            };
                                                      };
                                                  GHC.Event.TimerManager.Finished ->
                                                      (#,#) [ipv8_savaY GHC.Tuple.()];
                                                };
                                          }; } in
                                let {
                                  sat_savaV [Occ=Once]
                                    :: GHC.IORef.IORef GHC.Event.TimerManager.State
                                  [LclId] =
                                      CCCS GHC.STRef.STRef! [ipv5_savaR];
                                } in 
                                  case mkWeak# [ipv5_savaR sat_savaV sat_savba ipv6_savaT] of {
                                    (#,#) ipv8_savbc [Occ=Once] _ [Occ=Dead] ->
                                        case be_savaH of wild_savbe {
                                          GHC.Event.Internal.Backend bState_savbf
                                                                     _ [Occ=Dead]
                                                                     bModifyFd_savbh
                                                                     _ [Occ=Dead]
                                                                     _ [Occ=Dead] ->
                                              let {
                                                sat_savbk [Occ=Once] :: System.Posix.Types.Fd
                                                [LclId] =
                                                    [ipv3_savaO] \u []
                                                        GHC.Event.Control.controlReadFd ipv3_savaO;
                                              } in 
                                                case
                                                    bModifyFd_savbh
                                                        bState_savbf
                                                        sat_savbk
                                                        GHC.Event.Internal.evtNothing
                                                        GHC.Event.Internal.evtRead
                                                        ipv8_savbc
                                                of
                                                { (#,#) ipv10_savbm [Occ=Once] _ [Occ=Dead] ->
                                                      let {
                                                        sat_savbo [Occ=Once]
                                                          :: System.Posix.Types.Fd
                                                        [LclId] =
                                                            [ipv3_savaO] \u []
                                                                GHC.Event.Control.controlEventFd
                                                                    ipv3_savaO;
                                                      } in 
                                                        case
                                                            bModifyFd_savbh
                                                                bState_savbf
                                                                sat_savbo
                                                                GHC.Event.Internal.evtNothing
                                                                GHC.Event.Internal.evtRead
                                                                ipv10_savbm
                                                        of
                                                        { (#,#) ipv12_savbq [Occ=Once]
                                                                _ [Occ=Dead] ->
                                                              let {
                                                                sat_savby [Occ=Once]
                                                                  :: GHC.Event.TimerManager.TimerManager
                                                                [LclId] =
                                                                    [ipv1_savaL
                                                                     ipv3_savaO
                                                                     ipv5_savaR
                                                                     ipv7_savaU
                                                                     wild_savbe] \u []
                                                                        case ipv3_savaO of {
                                                                          GHC.Event.Control.W dt1_savbt [Occ=Once]
                                                                                              dt2_savbu [Occ=Once]
                                                                                              dt3_savbv [Occ=Once]
                                                                                              dt4_savbw [Occ=Once]
                                                                                              dt5_savbx [Occ=Once] ->
                                                                              GHC.Event.TimerManager.TimerManager [wild_savbe
                                                                                                                   ipv1_savaL
                                                                                                                   ipv5_savaR
                                                                                                                   ipv7_savaU
                                                                                                                   dt1_savbt
                                                                                                                   dt2_savbu
                                                                                                                   dt3_savbv
                                                                                                                   dt4_savbw
                                                                                                                   dt5_savbx];
                                                                        };
                                                              } in  (#,#) [ipv12_savbq sat_savby];
                                                        };
                                                };
                                        };
                                  };
                          };
                    };
              };
        };

GHC.Event.TimerManager.newWith
  :: GHC.Event.Internal.Backend
     -> GHC.Types.IO GHC.Event.TimerManager.TimerManager
[GblId, Arity=2, Str=<L,U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] GHC.Event.TimerManager.new2 eta_B2 eta_B1;

GHC.Event.TimerManager.new1
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Event.TimerManager.TimerManager #)
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [s_savbz]
        case GHC.Event.Poll.new1 s_savbz of {
          (#,#) ipv_savbB [Occ=Once] ipv1_savbC [Occ=Once] ->
              GHC.Event.TimerManager.new2 ipv1_savbC ipv_savbB;
        };

GHC.Event.TimerManager.new
  :: GHC.Types.IO GHC.Event.TimerManager.TimerManager
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [eta_B1] GHC.Event.TimerManager.new1 eta_B1;

GHC.Event.TimerManager.step1
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
[GblId,
 Arity=2,
 Str=<L,1*U(U,U,U,A,A,A,U,A,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [mgr_savbD s_savbE]
        case __pkg_ccall base-4.11.0.0 [s_savbE] of {
          (#,#) ds1_savbH [Occ=Once] ds2_savbI ->
              case mgr_savbD of {
                GHC.Event.TimerManager.TimerManager ds_savbK [Occ=Once!]
                                                    dt_savbL [Occ=Once]
                                                    dt1_savbM
                                                    _ [Occ=Dead]
                                                    _ [Occ=Dead]
                                                    _ [Occ=Dead]
                                                    dt5_savbQ [Occ=OnceL]
                                                    _ [Occ=Dead]
                                                    dt7_savbS [Occ=OnceL] ->
                    case ds_savbK of {
                      GHC.Event.Internal.Backend bState_savbU [Occ=Once]
                                                 bPoll_savbV [Occ=Once!]
                                                 _ [Occ=Dead]
                                                 _ [Occ=Dead]
                                                 _ [Occ=Dead] ->
                          let {
                            ipv1_savbZ [Occ=OnceL, Dmd=<L,U(U)>] :: GHC.Word.Word64
                            [LclId, Unf=OtherCon []] =
                                CCCS GHC.Word.W64#! [ds2_savbI]; } in
                          let {
                            sat_savcj [Occ=Once]
                              :: GHC.Event.TimerManager.TimeoutQueue
                                 -> (GHC.Event.TimerManager.TimeoutQueue,
                                     ([GHC.Event.PSQ.Elem GHC.Event.TimerManager.TimeoutCallback],
                                      GHC.Event.Internal.Timeout))
                            [LclId] =
                                [ds2_savbI ipv1_savbZ] \r [a1_savc0]
                                    case GHC.Event.PSQ.$watMost ipv1_savbZ a1_savc0 of {
                                      (#,#) ww1_savc2 [Occ=Once] ww2_savc3 [Occ=Once] ->
                                          case ww2_savc3 of a'1_savc4 {
                                            __DEFAULT ->
                                                let {
                                                  sat_savch [Occ=Once] :: GHC.Event.Internal.Timeout
                                                  [LclId] =
                                                      [ds2_savbI a'1_savc4] \u []
                                                          case a'1_savc4 of {
                                                            GHC.Event.PSQ.Bin _ [Occ=Dead]
                                                                              dt9_savc7 [Occ=Once]
                                                                              _ [Occ=Dead]
                                                                              _ [Occ=Dead]
                                                                              _ [Occ=Dead]
                                                                              _ [Occ=Dead] ->
                                                                case
                                                                    minusWord# [dt9_savc7 ds2_savbI]
                                                                of
                                                                sat_savcc
                                                                { __DEFAULT ->
                                                                      GHC.Event.Internal.Timeout [sat_savcc];
                                                                };
                                                            GHC.Event.PSQ.Tip _ [Occ=Dead]
                                                                              dt9_savce [Occ=Once]
                                                                              _ [Occ=Dead] ->
                                                                case
                                                                    minusWord# [dt9_savce ds2_savbI]
                                                                of
                                                                sat_savcg
                                                                { __DEFAULT ->
                                                                      GHC.Event.Internal.Timeout [sat_savcg];
                                                                };
                                                            GHC.Event.PSQ.Nil ->
                                                                GHC.Event.Internal.Forever [];
                                                          }; } in
                                                let {
                                                  sat_savci [Occ=Once]
                                                    :: ([GHC.Event.PSQ.Elem
                                                           GHC.Event.TimerManager.TimeoutCallback],
                                                        GHC.Event.Internal.Timeout)
                                                  [LclId] =
                                                      CCCS (,)! [ww1_savc2 sat_savch];
                                                } in  (,) [a'1_savc4 sat_savci];
                                          };
                                    };
                          } in 
                            case atomicModifyMutVar# [dt_savbL sat_savcj ds1_savbH] of {
                              (#,#) ipv_savcl [Occ=Once] ipv2_savcm [Occ=Once!] ->
                                  case ipv2_savcm of {
                                    (,) ipv3_savco [Occ=Once] ipv4_savcp [Occ=Once] ->
                                        let-no-escape {
                                          $w$j_savcq [InlPrag=NOUSERINLINE[0],
                                                      Occ=OnceL!T[1],
                                                      Dmd=<L,C(U(U,U))>]
                                            :: GHC.Prim.State# GHC.Prim.RealWorld
                                               -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                     GHC.Types.Bool #)
                                          [LclId[JoinId(1)], Arity=1, Str=<S,U>, Unf=OtherCon []] =
                                              sat-only [dt1_savbM
                                                        dt5_savbQ
                                                        dt7_savbS
                                                        bState_savbU
                                                        bPoll_savbV
                                                        ipv4_savcp] \r [w_savcr]
                                                  let {
                                                    sat_savcI [Occ=Once]
                                                      :: System.Posix.Types.Fd
                                                         -> GHC.Event.Internal.Event
                                                         -> GHC.Types.IO ()
                                                    [LclId] =
                                                        [dt1_savbM dt5_savbQ dt7_savbS] \r [fd_savct
                                                                                            _evt_savcu
                                                                                            s1_savcv]
                                                            case fd_savct of {
                                                              GHC.Int.I32# ww7_savcx [Occ=Once] ->
                                                                  case
                                                                      GHC.Event.Control.$wreadControlMessage
                                                                          dt5_savbQ
                                                                          dt7_savbS
                                                                          ww7_savcx
                                                                          s1_savcv
                                                                  of
                                                                  { (#,#) ipv5_savcz [Occ=Once*]
                                                                          ipv6_savcA [Occ=Once!] ->
                                                                        case ipv6_savcA of {
                                                                          GHC.Event.Control.CMsgWakeup ->
                                                                              (#,#) [ipv5_savcz
                                                                                     GHC.Tuple.()];
                                                                          GHC.Event.Control.CMsgDie ->
                                                                              case
                                                                                  writeMutVar# [dt1_savbM
                                                                                                GHC.Event.TimerManager.Finished
                                                                                                ipv5_savcz]
                                                                              of
                                                                              s2#_savcC
                                                                              { __DEFAULT ->
                                                                                    (#,#) [s2#_savcC
                                                                                           GHC.Tuple.()];
                                                                              };
                                                                          GHC.Event.Control.CMsgSignal dt8_savcD [Occ=Once]
                                                                                                       dt9_savcE [Occ=Once]
                                                                                                       dt10_savcF [Occ=Once] ->
                                                                              let {
                                                                                sat_savcH [Occ=Once]
                                                                                  :: GHC.Conc.Signal.Signal
                                                                                [LclId] =
                                                                                    CCCS GHC.Int.I32#! [dt10_savcF]; } in
                                                                              let {
                                                                                sat_savcG [Occ=Once]
                                                                                  :: GHC.ForeignPtr.ForeignPtr
                                                                                       GHC.Word.Word8
                                                                                [LclId] =
                                                                                    CCCS GHC.ForeignPtr.ForeignPtr! [dt8_savcD
                                                                                                                     dt9_savcE];
                                                                              } in 
                                                                                GHC.Conc.Signal.runHandlers1
                                                                                    sat_savcG
                                                                                    sat_savcH
                                                                                    ipv5_savcz;
                                                                        };
                                                                  };
                                                            }; } in
                                                  let {
                                                    sat_savcs [Occ=Once]
                                                      :: GHC.Base.Maybe GHC.Event.Internal.Timeout
                                                    [LclId] =
                                                        CCCS GHC.Base.Just! [ipv4_savcp];
                                                  } in 
                                                    case
                                                        bPoll_savbV
                                                            bState_savbU sat_savcs sat_savcI w_savcr
                                                    of
                                                    { (#,#) ipv5_savcK [Occ=Once] _ [Occ=Dead] ->
                                                          case
                                                              readMutVar# [dt1_savbM ipv5_savcK]
                                                          of
                                                          { (#,#) ipv7_savcN [Occ=Once]
                                                                  ipv8_savcO [Occ=Once] ->
                                                                case ipv8_savcO of state_savcP {
                                                                  __DEFAULT ->
                                                                      let {
                                                                        sat_savcR [Occ=Once]
                                                                          :: GHC.Types.Bool
                                                                        [LclId] =
                                                                            [state_savcP] \u []
                                                                                case
                                                                                    state_savcP
                                                                                of
                                                                                { __DEFAULT ->
                                                                                      GHC.Types.False [];
                                                                                  GHC.Event.TimerManager.Running ->
                                                                                      GHC.Types.True [];
                                                                                };
                                                                      } in 
                                                                        (#,#) [ipv7_savcN
                                                                               sat_savcR];
                                                                };
                                                          };
                                                    };
                                        } in 
                                          let-no-escape {
                                            go_savcS [Occ=LoopBreakerT[2]]
                                              :: [GHC.Event.PSQ.Elem
                                                    GHC.Event.TimerManager.TimeoutCallback]
                                                 -> GHC.Prim.State# GHC.Prim.RealWorld
                                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                       GHC.Types.Bool #)
                                            [LclId[JoinId(2)],
                                             Arity=2,
                                             Str=<S,1*U><S,U>,
                                             Unf=OtherCon []] =
                                                sat-only [$w$j_savcq go_savcS] \r [ds7_savcT
                                                                                   eta_savcU]
                                                    case ds7_savcT of {
                                                      [] -> $w$j_savcq eta_savcU;
                                                      : y_savcW [Occ=Once!] ys_savcX [Occ=Once] ->
                                                          case y_savcW of {
                                                            GHC.Event.PSQ.E _ [Occ=Dead]
                                                                            _ [Occ=Dead]
                                                                            ds8_savd1 [Occ=Once] ->
                                                                case ds8_savd1 eta_savcU of {
                                                                  (#,#) ipv5_savd3 [Occ=Once]
                                                                        _ [Occ=Dead] ->
                                                                      go_savcS ys_savcX ipv5_savd3;
                                                                };
                                                          };
                                                    };
                                          } in  go_savcS ipv3_savco ipv_savcl;
                                  };
                            };
                    };
              };
        };

GHC.Event.TimerManager.step
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Types.IO GHC.Types.Bool
[GblId,
 Arity=2,
 Str=<L,1*U(U,U,U,A,A,A,U,A,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] GHC.Event.TimerManager.step1 eta_B2 eta_B1;

lvl_rasDV :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.Event.Manager.loop: state is already "#;

lvl1_rasDW :: GHC.Event.TimerManager.State -> GHC.Types.IO ()
[GblId, Arity=1, Str=<B,1*U>x, Unf=OtherCon []] =
    sat-only [] \r [ipv1_savd5]
        let {
          sat_savd7 [Occ=Once] :: [GHC.Types.Char]
          [LclId] =
              [ipv1_savd5] \u []
                  case ipv1_savd5 of {
                    __DEFAULT -> GHC.Event.TimerManager.$fShowState5;
                    GHC.Event.TimerManager.Finished ->
                        GHC.Event.TimerManager.$fShowState1;
                  };
        } in 
          case
              GHC.CString.unpackAppendCString# lvl_rasDV sat_savd7
          of
          sat_savd8
          { __DEFAULT -> GHC.Err.errorWithoutStackTrace sat_savd8;
          };

lvl2_rasDX
  :: (GHC.Event.TimerManager.State, GHC.Event.TimerManager.State)
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE (,)! [GHC.Event.TimerManager.Running
                        GHC.Event.TimerManager.Created];

lvl3_rasDY
  :: GHC.Event.TimerManager.State
     -> (GHC.Event.TimerManager.State, GHC.Event.TimerManager.State)
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>m, Unf=OtherCon []] =
    [] \r [a1_savd9]
        case a1_savd9 of wild_savda {
          __DEFAULT -> (,) [wild_savda wild_savda];
          GHC.Event.TimerManager.Created -> lvl2_rasDX;
        };

GHC.Event.TimerManager.$wloop [InlPrag=NOUSERINLINE[0]]
  :: GHC.Event.Internal.Backend
     -> GHC.Prim.MutVar#
          GHC.Prim.RealWorld GHC.Event.TimerManager.TimeoutQueue
     -> GHC.Prim.MutVar# GHC.Prim.RealWorld GHC.Event.TimerManager.State
     -> GHC.Prim.MutableByteArray# GHC.Prim.RealWorld
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Types.Bool
     -> GHC.Prim.MutVar# GHC.Prim.RealWorld GHC.Types.Bool
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=10,
 Str=<S,1*U><L,U><S,U><L,U><L,U><L,U><L,U><L,U><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [ww_savdb
           ww1_savdc
           ww2_savdd
           ww3_savde
           ww4_savdf
           ww5_savdg
           ww6_savdh
           ww7_savdi
           ww8_savdj
           w_savdk]
        case ww_savdb of wild_savdl {
          GHC.Event.Internal.Backend bState_savdm
                                     _ [Occ=Dead]
                                     _ [Occ=Dead]
                                     _ [Occ=Dead]
                                     bDelete_savdq ->
              case atomicModifyMutVar# [ww2_savdd lvl3_rasDY w_savdk] of {
                (#,#) ipv_savds [Occ=Once*] ipv1_savdt [Occ=Once!] ->
                    case ipv1_savdt of b1_savdu {
                      __DEFAULT ->
                          case
                              writeMutVar# [ww2_savdd GHC.Event.TimerManager.Finished ipv_savds]
                          of
                          s2#_savdv
                          { __DEFAULT ->
                                case bDelete_savdq bState_savdm s2#_savdv of {
                                  (#,#) ipv2_savdx [Occ=Once] _ [Occ=Dead] ->
                                      case
                                          atomicModifyMutVar# [ww8_savdj
                                                               GHC.Event.Control.closeControl2
                                                               ipv2_savdx]
                                      of
                                      { (#,#) ipv4_savdA [Occ=Once] _ [Occ=Dead] ->
                                            case narrow32Int# [ww4_savdf] of sat_savdD {
                                              __DEFAULT ->
                                                  case
                                                      __pkg_ccall base-4.11.0.0 [sat_savdD
                                                                                 ipv4_savdA]
                                                  of
                                                  { (#,#) ds7_savdF [Occ=Once] _ [Occ=Dead] ->
                                                        case narrow32Int# [ww5_savdg] of sat_savdI {
                                                          __DEFAULT ->
                                                              case
                                                                  __pkg_ccall base-4.11.0.0 [sat_savdI
                                                                                             ds7_savdF]
                                                              of
                                                              { (#,#) ds9_savdK [Occ=Once*]
                                                                      _ [Occ=Dead] ->
                                                                    case ww7_savdi of {
                                                                      GHC.Types.False ->
                                                                          case
                                                                              narrow32Int# [ww6_savdh]
                                                                          of
                                                                          sat_savdO
                                                                          { __DEFAULT ->
                                                                                case
                                                                                    __pkg_ccall base-4.11.0.0 [sat_savdO
                                                                                                               ds9_savdK]
                                                                                of
                                                                                { (#,#) _ [Occ=Dead]
                                                                                        _ [Occ=Dead] ->
                                                                                      lvl1_rasDW
                                                                                          b1_savdu;
                                                                                };
                                                                          };
                                                                      GHC.Types.True ->
                                                                          case
                                                                              __pkg_ccall base-4.11.0.0 [-1#
                                                                                                         ds9_savdK]
                                                                          of
                                                                          { Unit# ds_savdV [Occ=Once] ->
                                                                                case
                                                                                    narrow32Int# [ww6_savdh]
                                                                                of
                                                                                sat_savdX
                                                                                { __DEFAULT ->
                                                                                      case
                                                                                          __pkg_ccall base-4.11.0.0 [sat_savdX
                                                                                                                     ds_savdV]
                                                                                      of
                                                                                      { (#,#) _ [Occ=Dead]
                                                                                              _ [Occ=Dead] ->
                                                                                            lvl1_rasDW
                                                                                                b1_savdu;
                                                                                      };
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                                };
                          };
                      GHC.Event.TimerManager.Created ->
                          case getMaskingState# [ipv_savds] of {
                            (#,#) ipv2_save3 [Occ=Once*] ipv3_save4 [Occ=Once!] ->
                                let {
                                  go_save5 [Occ=LoopBreaker]
                                    :: GHC.Prim.State# GHC.Prim.RealWorld
                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                  [LclId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
                                      [ww1_savdc
                                       ww2_savdd
                                       ww3_savde
                                       ww4_savdf
                                       ww5_savdg
                                       ww6_savdh
                                       ww7_savdi
                                       ww8_savdj
                                       wild_savdl
                                       go_save5] \r [s_save6]
                                          let {
                                            sat_save7 [Occ=Once]
                                              :: GHC.Event.TimerManager.TimerManager
                                            [LclId] =
                                                CCCS GHC.Event.TimerManager.TimerManager! [wild_savdl
                                                                                           ww1_savdc
                                                                                           ww2_savdd
                                                                                           ww3_savde
                                                                                           ww4_savdf
                                                                                           ww5_savdg
                                                                                           ww6_savdh
                                                                                           ww7_savdi
                                                                                           ww8_savdj];
                                          } in 
                                            case GHC.Event.TimerManager.step1 sat_save7 s_save6 of {
                                              (#,#) ipv4_save9 [Occ=Once*] ipv5_savea [Occ=Once!] ->
                                                  case ipv5_savea of {
                                                    GHC.Types.False ->
                                                        (#,#) [ipv4_save9 GHC.Tuple.()];
                                                    GHC.Types.True -> go_save5 ipv4_save9;
                                                  };
                                            };
                                } in 
                                  case ipv3_save4 of {
                                    __DEFAULT ->
                                        let {
                                          sat_saveL [Occ=Once]
                                            :: GHC.Exception.SomeException
                                               -> GHC.Prim.State# GHC.Prim.RealWorld
                                               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                          [LclId] =
                                              [ww2_savdd
                                               ww4_savdf
                                               ww5_savdg
                                               ww6_savdh
                                               ww7_savdi
                                               ww8_savdj
                                               bState_savdm
                                               bDelete_savdq] \r [e1_savee s_savef]
                                                  case
                                                      writeMutVar# [ww2_savdd
                                                                    GHC.Event.TimerManager.Finished
                                                                    s_savef]
                                                  of
                                                  s2#_saveg
                                                  { __DEFAULT ->
                                                        case
                                                            bDelete_savdq bState_savdm s2#_saveg
                                                        of
                                                        { (#,#) ipv4_savei [Occ=Once]
                                                                _ [Occ=Dead] ->
                                                              case
                                                                  atomicModifyMutVar# [ww8_savdj
                                                                                       GHC.Event.Control.closeControl2
                                                                                       ipv4_savei]
                                                              of
                                                              { (#,#) ipv6_savel [Occ=Once]
                                                                      _ [Occ=Dead] ->
                                                                    case
                                                                        narrow32Int# [ww4_savdf]
                                                                    of
                                                                    sat_saveo
                                                                    { __DEFAULT ->
                                                                          case
                                                                              __pkg_ccall base-4.11.0.0 [sat_saveo
                                                                                                         ipv6_savel]
                                                                          of
                                                                          { (#,#) ds8_saveq [Occ=Once]
                                                                                  _ [Occ=Dead] ->
                                                                                case
                                                                                    narrow32Int# [ww5_savdg]
                                                                                of
                                                                                sat_savet
                                                                                { __DEFAULT ->
                                                                                      case
                                                                                          __pkg_ccall base-4.11.0.0 [sat_savet
                                                                                                                     ds8_saveq]
                                                                                      of
                                                                                      { (#,#) ds10_savev [Occ=Once*]
                                                                                              _ [Occ=Dead] ->
                                                                                            case
                                                                                                ww7_savdi
                                                                                            of
                                                                                            { GHC.Types.False ->
                                                                                                  case
                                                                                                      narrow32Int# [ww6_savdh]
                                                                                                  of
                                                                                                  sat_savez
                                                                                                  { __DEFAULT ->
                                                                                                        case
                                                                                                            __pkg_ccall base-4.11.0.0 [sat_savez
                                                                                                                                       ds10_savev]
                                                                                                        of
                                                                                                        { (#,#) ds12_saveB [Occ=Once]
                                                                                                                _ [Occ=Dead] ->
                                                                                                              raiseIO# [e1_savee
                                                                                                                        ds12_saveB];
                                                                                                        };
                                                                                                  };
                                                                                              GHC.Types.True ->
                                                                                                  case
                                                                                                      __pkg_ccall base-4.11.0.0 [-1#
                                                                                                                                 ds10_savev]
                                                                                                  of
                                                                                                  { Unit# ds12_saveF [Occ=Once] ->
                                                                                                        case
                                                                                                            narrow32Int# [ww6_savdh]
                                                                                                        of
                                                                                                        sat_saveH
                                                                                                        { __DEFAULT ->
                                                                                                              case
                                                                                                                  __pkg_ccall base-4.11.0.0 [sat_saveH
                                                                                                                                             ds12_saveF]
                                                                                                              of
                                                                                                              { (#,#) ds13_saveJ [Occ=Once]
                                                                                                                      _ [Occ=Dead] ->
                                                                                                                    raiseIO# [e1_savee
                                                                                                                              ds13_saveJ];
                                                                                                              };
                                                                                                        };
                                                                                                  };
                                                                                            };
                                                                                      };
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  }; } in
                                        let {
                                          sat_saved [Occ=Once]
                                            :: GHC.Prim.State# GHC.Prim.RealWorld
                                               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                          [LclId] =
                                              [go_save5] \r [eta_B1]
                                                  maskAsyncExceptions# [go_save5 eta_B1];
                                        } in 
                                          case catch# [sat_saved sat_saveL ipv2_save3] of {
                                            (#,#) ipv4_saveN [Occ=Once] ipv5_saveO [Occ=Once*] ->
                                                case
                                                    writeMutVar# [ww2_savdd
                                                                  GHC.Event.TimerManager.Finished
                                                                  ipv4_saveN]
                                                of
                                                s2#_saveP
                                                { __DEFAULT ->
                                                      case bDelete_savdq bState_savdm s2#_saveP of {
                                                        (#,#) ipv6_saveR [Occ=Once] _ [Occ=Dead] ->
                                                            case
                                                                atomicModifyMutVar# [ww8_savdj
                                                                                     GHC.Event.Control.closeControl2
                                                                                     ipv6_saveR]
                                                            of
                                                            { (#,#) ipv8_saveU [Occ=Once]
                                                                    _ [Occ=Dead] ->
                                                                  case
                                                                      narrow32Int# [ww4_savdf]
                                                                  of
                                                                  sat_saveX
                                                                  { __DEFAULT ->
                                                                        case
                                                                            __pkg_ccall base-4.11.0.0 [sat_saveX
                                                                                                       ipv8_saveU]
                                                                        of
                                                                        { (#,#) ds9_saveZ [Occ=Once]
                                                                                _ [Occ=Dead] ->
                                                                              case
                                                                                  narrow32Int# [ww5_savdg]
                                                                              of
                                                                              sat_savf2
                                                                              { __DEFAULT ->
                                                                                    case
                                                                                        __pkg_ccall base-4.11.0.0 [sat_savf2
                                                                                                                   ds9_saveZ]
                                                                                    of
                                                                                    { (#,#) ds11_savf4 [Occ=Once*]
                                                                                            _ [Occ=Dead] ->
                                                                                          case
                                                                                              ww7_savdi
                                                                                          of
                                                                                          { GHC.Types.False ->
                                                                                                case
                                                                                                    narrow32Int# [ww6_savdh]
                                                                                                of
                                                                                                sat_savf8
                                                                                                { __DEFAULT ->
                                                                                                      case
                                                                                                          __pkg_ccall base-4.11.0.0 [sat_savf8
                                                                                                                                     ds11_savf4]
                                                                                                      of
                                                                                                      { (#,#) ds13_savfa [Occ=Once]
                                                                                                              _ [Occ=Dead] ->
                                                                                                            (#,#) [ds13_savfa
                                                                                                                   ipv5_saveO];
                                                                                                      };
                                                                                                };
                                                                                            GHC.Types.True ->
                                                                                                case
                                                                                                    __pkg_ccall base-4.11.0.0 [-1#
                                                                                                                               ds11_savf4]
                                                                                                of
                                                                                                { Unit# ds13_savfe [Occ=Once] ->
                                                                                                      case
                                                                                                          narrow32Int# [ww6_savdh]
                                                                                                      of
                                                                                                      sat_savfg
                                                                                                      { __DEFAULT ->
                                                                                                            case
                                                                                                                __pkg_ccall base-4.11.0.0 [sat_savfg
                                                                                                                                           ds13_savfe]
                                                                                                            of
                                                                                                            { (#,#) ds14_savfi [Occ=Once]
                                                                                                                    _ [Occ=Dead] ->
                                                                                                                  (#,#) [ds14_savfi
                                                                                                                         ipv5_saveO];
                                                                                                            };
                                                                                                      };
                                                                                                };
                                                                                          };
                                                                                    };
                                                                              };
                                                                        };
                                                                  };
                                                            };
                                                      };
                                                };
                                          };
                                    0# ->
                                        let {
                                          sat_savgs [Occ=Once]
                                            :: GHC.Prim.State# GHC.Prim.RealWorld
                                               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                          [LclId] =
                                              [ww2_savdd
                                               ww4_savdf
                                               ww5_savdg
                                               ww6_savdh
                                               ww7_savdi
                                               ww8_savdj
                                               bState_savdm
                                               bDelete_savdq
                                               go_save5] \r [s_savfk]
                                                  let {
                                                    sat_savfT [Occ=Once]
                                                      :: GHC.Exception.SomeException
                                                         -> GHC.Prim.State# GHC.Prim.RealWorld
                                                         -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                               () #)
                                                    [LclId] =
                                                        [ww2_savdd
                                                         ww4_savdf
                                                         ww5_savdg
                                                         ww6_savdh
                                                         ww7_savdi
                                                         ww8_savdj
                                                         bState_savdm
                                                         bDelete_savdq] \r [e1_savfm s1_savfn]
                                                            case
                                                                writeMutVar# [ww2_savdd
                                                                              GHC.Event.TimerManager.Finished
                                                                              s1_savfn]
                                                            of
                                                            s2#_savfo
                                                            { __DEFAULT ->
                                                                  case
                                                                      bDelete_savdq
                                                                          bState_savdm s2#_savfo
                                                                  of
                                                                  { (#,#) ipv4_savfq [Occ=Once]
                                                                          _ [Occ=Dead] ->
                                                                        case
                                                                            atomicModifyMutVar# [ww8_savdj
                                                                                                 GHC.Event.Control.closeControl2
                                                                                                 ipv4_savfq]
                                                                        of
                                                                        { (#,#) ipv6_savft [Occ=Once]
                                                                                _ [Occ=Dead] ->
                                                                              case
                                                                                  narrow32Int# [ww4_savdf]
                                                                              of
                                                                              sat_savfw
                                                                              { __DEFAULT ->
                                                                                    case
                                                                                        __pkg_ccall base-4.11.0.0 [sat_savfw
                                                                                                                   ipv6_savft]
                                                                                    of
                                                                                    { (#,#) ds8_savfy [Occ=Once]
                                                                                            _ [Occ=Dead] ->
                                                                                          case
                                                                                              narrow32Int# [ww5_savdg]
                                                                                          of
                                                                                          sat_savfB
                                                                                          { __DEFAULT ->
                                                                                                case
                                                                                                    __pkg_ccall base-4.11.0.0 [sat_savfB
                                                                                                                               ds8_savfy]
                                                                                                of
                                                                                                { (#,#) ds10_savfD [Occ=Once*]
                                                                                                        _ [Occ=Dead] ->
                                                                                                      case
                                                                                                          ww7_savdi
                                                                                                      of
                                                                                                      { GHC.Types.False ->
                                                                                                            case
                                                                                                                narrow32Int# [ww6_savdh]
                                                                                                            of
                                                                                                            sat_savfH
                                                                                                            { __DEFAULT ->
                                                                                                                  case
                                                                                                                      __pkg_ccall base-4.11.0.0 [sat_savfH
                                                                                                                                                 ds10_savfD]
                                                                                                                  of
                                                                                                                  { (#,#) ds12_savfJ [Occ=Once]
                                                                                                                          _ [Occ=Dead] ->
                                                                                                                        raiseIO# [e1_savfm
                                                                                                                                  ds12_savfJ];
                                                                                                                  };
                                                                                                            };
                                                                                                        GHC.Types.True ->
                                                                                                            case
                                                                                                                __pkg_ccall base-4.11.0.0 [-1#
                                                                                                                                           ds10_savfD]
                                                                                                            of
                                                                                                            { Unit# ds12_savfN [Occ=Once] ->
                                                                                                                  case
                                                                                                                      narrow32Int# [ww6_savdh]
                                                                                                                  of
                                                                                                                  sat_savfP
                                                                                                                  { __DEFAULT ->
                                                                                                                        case
                                                                                                                            __pkg_ccall base-4.11.0.0 [sat_savfP
                                                                                                                                                       ds12_savfN]
                                                                                                                        of
                                                                                                                        { (#,#) ds13_savfR [Occ=Once]
                                                                                                                                _ [Occ=Dead] ->
                                                                                                                              raiseIO# [e1_savfm
                                                                                                                                        ds13_savfR];
                                                                                                                        };
                                                                                                                  };
                                                                                                            };
                                                                                                      };
                                                                                                };
                                                                                          };
                                                                                    };
                                                                              };
                                                                        };
                                                                  };
                                                            }; } in
                                                  let {
                                                    sat_savfl [Occ=Once]
                                                      :: GHC.Prim.State# GHC.Prim.RealWorld
                                                         -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                               () #)
                                                    [LclId] =
                                                        [go_save5] \r [eta_B1]
                                                            unmaskAsyncExceptions# [go_save5
                                                                                    eta_B1];
                                                  } in 
                                                    case catch# [sat_savfl sat_savfT s_savfk] of {
                                                      (#,#) ipv4_savfV [Occ=Once]
                                                            ipv5_savfW [Occ=Once*] ->
                                                          case
                                                              writeMutVar# [ww2_savdd
                                                                            GHC.Event.TimerManager.Finished
                                                                            ipv4_savfV]
                                                          of
                                                          s2#_savfX
                                                          { __DEFAULT ->
                                                                case
                                                                    bDelete_savdq
                                                                        bState_savdm s2#_savfX
                                                                of
                                                                { (#,#) ipv6_savfZ [Occ=Once]
                                                                        _ [Occ=Dead] ->
                                                                      case
                                                                          atomicModifyMutVar# [ww8_savdj
                                                                                               GHC.Event.Control.closeControl2
                                                                                               ipv6_savfZ]
                                                                      of
                                                                      { (#,#) ipv8_savg2 [Occ=Once]
                                                                              _ [Occ=Dead] ->
                                                                            case
                                                                                narrow32Int# [ww4_savdf]
                                                                            of
                                                                            sat_savg5
                                                                            { __DEFAULT ->
                                                                                  case
                                                                                      __pkg_ccall base-4.11.0.0 [sat_savg5
                                                                                                                 ipv8_savg2]
                                                                                  of
                                                                                  { (#,#) ds9_savg7 [Occ=Once]
                                                                                          _ [Occ=Dead] ->
                                                                                        case
                                                                                            narrow32Int# [ww5_savdg]
                                                                                        of
                                                                                        sat_savga
                                                                                        { __DEFAULT ->
                                                                                              case
                                                                                                  __pkg_ccall base-4.11.0.0 [sat_savga
                                                                                                                             ds9_savg7]
                                                                                              of
                                                                                              { (#,#) ds11_savgc [Occ=Once*]
                                                                                                      _ [Occ=Dead] ->
                                                                                                    case
                                                                                                        ww7_savdi
                                                                                                    of
                                                                                                    { GHC.Types.False ->
                                                                                                          case
                                                                                                              narrow32Int# [ww6_savdh]
                                                                                                          of
                                                                                                          sat_savgg
                                                                                                          { __DEFAULT ->
                                                                                                                case
                                                                                                                    __pkg_ccall base-4.11.0.0 [sat_savgg
                                                                                                                                               ds11_savgc]
                                                                                                                of
                                                                                                                { (#,#) ds13_savgi [Occ=Once]
                                                                                                                        _ [Occ=Dead] ->
                                                                                                                      (#,#) [ds13_savgi
                                                                                                                             ipv5_savfW];
                                                                                                                };
                                                                                                          };
                                                                                                      GHC.Types.True ->
                                                                                                          case
                                                                                                              __pkg_ccall base-4.11.0.0 [-1#
                                                                                                                                         ds11_savgc]
                                                                                                          of
                                                                                                          { Unit# ds13_savgm [Occ=Once] ->
                                                                                                                case
                                                                                                                    narrow32Int# [ww6_savdh]
                                                                                                                of
                                                                                                                sat_savgo
                                                                                                                { __DEFAULT ->
                                                                                                                      case
                                                                                                                          __pkg_ccall base-4.11.0.0 [sat_savgo
                                                                                                                                                     ds13_savgm]
                                                                                                                      of
                                                                                                                      { (#,#) ds14_savgq [Occ=Once]
                                                                                                                              _ [Occ=Dead] ->
                                                                                                                            (#,#) [ds14_savgq
                                                                                                                                   ipv5_savfW];
                                                                                                                      };
                                                                                                                };
                                                                                                          };
                                                                                                    };
                                                                                              };
                                                                                        };
                                                                                  };
                                                                            };
                                                                      };
                                                                };
                                                          };
                                                    };
                                        } in  maskAsyncExceptions# [sat_savgs ipv2_save3];
                                    1# ->
                                        let {
                                          sat_savh1 [Occ=Once]
                                            :: GHC.Exception.SomeException
                                               -> GHC.Prim.State# GHC.Prim.RealWorld
                                               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                          [LclId] =
                                              [ww2_savdd
                                               ww4_savdf
                                               ww5_savdg
                                               ww6_savdh
                                               ww7_savdi
                                               ww8_savdj
                                               bState_savdm
                                               bDelete_savdq] \r [e1_savgu s_savgv]
                                                  case
                                                      writeMutVar# [ww2_savdd
                                                                    GHC.Event.TimerManager.Finished
                                                                    s_savgv]
                                                  of
                                                  s2#_savgw
                                                  { __DEFAULT ->
                                                        case
                                                            bDelete_savdq bState_savdm s2#_savgw
                                                        of
                                                        { (#,#) ipv4_savgy [Occ=Once]
                                                                _ [Occ=Dead] ->
                                                              case
                                                                  atomicModifyMutVar# [ww8_savdj
                                                                                       GHC.Event.Control.closeControl2
                                                                                       ipv4_savgy]
                                                              of
                                                              { (#,#) ipv6_savgB [Occ=Once]
                                                                      _ [Occ=Dead] ->
                                                                    case
                                                                        narrow32Int# [ww4_savdf]
                                                                    of
                                                                    sat_savgE
                                                                    { __DEFAULT ->
                                                                          case
                                                                              __pkg_ccall base-4.11.0.0 [sat_savgE
                                                                                                         ipv6_savgB]
                                                                          of
                                                                          { (#,#) ds8_savgG [Occ=Once]
                                                                                  _ [Occ=Dead] ->
                                                                                case
                                                                                    narrow32Int# [ww5_savdg]
                                                                                of
                                                                                sat_savgJ
                                                                                { __DEFAULT ->
                                                                                      case
                                                                                          __pkg_ccall base-4.11.0.0 [sat_savgJ
                                                                                                                     ds8_savgG]
                                                                                      of
                                                                                      { (#,#) ds10_savgL [Occ=Once*]
                                                                                              _ [Occ=Dead] ->
                                                                                            case
                                                                                                ww7_savdi
                                                                                            of
                                                                                            { GHC.Types.False ->
                                                                                                  case
                                                                                                      narrow32Int# [ww6_savdh]
                                                                                                  of
                                                                                                  sat_savgP
                                                                                                  { __DEFAULT ->
                                                                                                        case
                                                                                                            __pkg_ccall base-4.11.0.0 [sat_savgP
                                                                                                                                       ds10_savgL]
                                                                                                        of
                                                                                                        { (#,#) ds12_savgR [Occ=Once]
                                                                                                                _ [Occ=Dead] ->
                                                                                                              raiseIO# [e1_savgu
                                                                                                                        ds12_savgR];
                                                                                                        };
                                                                                                  };
                                                                                              GHC.Types.True ->
                                                                                                  case
                                                                                                      __pkg_ccall base-4.11.0.0 [-1#
                                                                                                                                 ds10_savgL]
                                                                                                  of
                                                                                                  { Unit# ds12_savgV [Occ=Once] ->
                                                                                                        case
                                                                                                            narrow32Int# [ww6_savdh]
                                                                                                        of
                                                                                                        sat_savgX
                                                                                                        { __DEFAULT ->
                                                                                                              case
                                                                                                                  __pkg_ccall base-4.11.0.0 [sat_savgX
                                                                                                                                             ds12_savgV]
                                                                                                              of
                                                                                                              { (#,#) ds13_savgZ [Occ=Once]
                                                                                                                      _ [Occ=Dead] ->
                                                                                                                    raiseIO# [e1_savgu
                                                                                                                              ds13_savgZ];
                                                                                                              };
                                                                                                        };
                                                                                                  };
                                                                                            };
                                                                                      };
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  }; } in
                                        let {
                                          sat_savgt [Occ=Once]
                                            :: GHC.Prim.State# GHC.Prim.RealWorld
                                               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                          [LclId] =
                                              [go_save5] \r [eta_B1]
                                                  maskUninterruptible# [go_save5 eta_B1];
                                        } in 
                                          case catch# [sat_savgt sat_savh1 ipv2_save3] of {
                                            (#,#) ipv4_savh3 [Occ=Once] ipv5_savh4 [Occ=Once*] ->
                                                case
                                                    writeMutVar# [ww2_savdd
                                                                  GHC.Event.TimerManager.Finished
                                                                  ipv4_savh3]
                                                of
                                                s2#_savh5
                                                { __DEFAULT ->
                                                      case bDelete_savdq bState_savdm s2#_savh5 of {
                                                        (#,#) ipv6_savh7 [Occ=Once] _ [Occ=Dead] ->
                                                            case
                                                                atomicModifyMutVar# [ww8_savdj
                                                                                     GHC.Event.Control.closeControl2
                                                                                     ipv6_savh7]
                                                            of
                                                            { (#,#) ipv8_savha [Occ=Once]
                                                                    _ [Occ=Dead] ->
                                                                  case
                                                                      narrow32Int# [ww4_savdf]
                                                                  of
                                                                  sat_savhd
                                                                  { __DEFAULT ->
                                                                        case
                                                                            __pkg_ccall base-4.11.0.0 [sat_savhd
                                                                                                       ipv8_savha]
                                                                        of
                                                                        { (#,#) ds9_savhf [Occ=Once]
                                                                                _ [Occ=Dead] ->
                                                                              case
                                                                                  narrow32Int# [ww5_savdg]
                                                                              of
                                                                              sat_savhi
                                                                              { __DEFAULT ->
                                                                                    case
                                                                                        __pkg_ccall base-4.11.0.0 [sat_savhi
                                                                                                                   ds9_savhf]
                                                                                    of
                                                                                    { (#,#) ds11_savhk [Occ=Once*]
                                                                                            _ [Occ=Dead] ->
                                                                                          case
                                                                                              ww7_savdi
                                                                                          of
                                                                                          { GHC.Types.False ->
                                                                                                case
                                                                                                    narrow32Int# [ww6_savdh]
                                                                                                of
                                                                                                sat_savho
                                                                                                { __DEFAULT ->
                                                                                                      case
                                                                                                          __pkg_ccall base-4.11.0.0 [sat_savho
                                                                                                                                     ds11_savhk]
                                                                                                      of
                                                                                                      { (#,#) ds13_savhq [Occ=Once]
                                                                                                              _ [Occ=Dead] ->
                                                                                                            (#,#) [ds13_savhq
                                                                                                                   ipv5_savh4];
                                                                                                      };
                                                                                                };
                                                                                            GHC.Types.True ->
                                                                                                case
                                                                                                    __pkg_ccall base-4.11.0.0 [-1#
                                                                                                                               ds11_savhk]
                                                                                                of
                                                                                                { Unit# ds13_savhu [Occ=Once] ->
                                                                                                      case
                                                                                                          narrow32Int# [ww6_savdh]
                                                                                                      of
                                                                                                      sat_savhw
                                                                                                      { __DEFAULT ->
                                                                                                            case
                                                                                                                __pkg_ccall base-4.11.0.0 [sat_savhw
                                                                                                                                           ds13_savhu]
                                                                                                            of
                                                                                                            { (#,#) ds14_savhy [Occ=Once]
                                                                                                                    _ [Occ=Dead] ->
                                                                                                                  (#,#) [ds14_savhy
                                                                                                                         ipv5_savh4];
                                                                                                            };
                                                                                                      };
                                                                                                };
                                                                                          };
                                                                                    };
                                                                              };
                                                                        };
                                                                  };
                                                            };
                                                      };
                                                };
                                          };
                                  };
                          };
                      GHC.Event.TimerManager.Dying ->
                          case
                              writeMutVar# [ww2_savdd GHC.Event.TimerManager.Finished ipv_savds]
                          of
                          s2#_savhA
                          { __DEFAULT ->
                                case bDelete_savdq bState_savdm s2#_savhA of {
                                  (#,#) ipv2_savhC [Occ=Once] _ [Occ=Dead] ->
                                      case
                                          atomicModifyMutVar# [ww8_savdj
                                                               GHC.Event.Control.closeControl2
                                                               ipv2_savhC]
                                      of
                                      { (#,#) ipv4_savhF [Occ=Once] _ [Occ=Dead] ->
                                            case narrow32Int# [ww4_savdf] of sat_savhI {
                                              __DEFAULT ->
                                                  case
                                                      __pkg_ccall base-4.11.0.0 [sat_savhI
                                                                                 ipv4_savhF]
                                                  of
                                                  { (#,#) ds7_savhK [Occ=Once] _ [Occ=Dead] ->
                                                        case narrow32Int# [ww5_savdg] of sat_savhN {
                                                          __DEFAULT ->
                                                              case
                                                                  __pkg_ccall base-4.11.0.0 [sat_savhN
                                                                                             ds7_savhK]
                                                              of
                                                              { (#,#) ds9_savhP [Occ=Once*]
                                                                      _ [Occ=Dead] ->
                                                                    case ww7_savdi of {
                                                                      GHC.Types.False ->
                                                                          case
                                                                              narrow32Int# [ww6_savdh]
                                                                          of
                                                                          sat_savhT
                                                                          { __DEFAULT ->
                                                                                case
                                                                                    __pkg_ccall base-4.11.0.0 [sat_savhT
                                                                                                               ds9_savhP]
                                                                                of
                                                                                { (#,#) ds11_savhV [Occ=Once]
                                                                                        _ [Occ=Dead] ->
                                                                                      (#,#) [ds11_savhV
                                                                                             GHC.Tuple.()];
                                                                                };
                                                                          };
                                                                      GHC.Types.True ->
                                                                          case
                                                                              __pkg_ccall base-4.11.0.0 [-1#
                                                                                                         ds9_savhP]
                                                                          of
                                                                          { Unit# ds_savhZ [Occ=Once] ->
                                                                                case
                                                                                    narrow32Int# [ww6_savdh]
                                                                                of
                                                                                sat_savi1
                                                                                { __DEFAULT ->
                                                                                      case
                                                                                          __pkg_ccall base-4.11.0.0 [sat_savi1
                                                                                                                     ds_savhZ]
                                                                                      of
                                                                                      { (#,#) ds11_savi3 [Occ=Once]
                                                                                              _ [Occ=Dead] ->
                                                                                            (#,#) [ds11_savi3
                                                                                                   GHC.Tuple.()];
                                                                                      };
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.Event.TimerManager.loop1 [InlPrag=NOUSERINLINE[0]]
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=2,
 Str=<S(SSSSSSSSS),1*U(U,U,U,U,U,U,U,U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_savi5 w1_savi6]
        case w_savi5 of {
          GHC.Event.TimerManager.TimerManager ww1_savi8 [Occ=Once]
                                              ww2_savi9 [Occ=Once]
                                              ww3_savia [Occ=Once]
                                              ww4_savib [Occ=Once]
                                              ww5_savic [Occ=Once]
                                              ww6_savid [Occ=Once]
                                              ww7_savie [Occ=Once]
                                              ww8_savif [Occ=Once]
                                              ww9_savig [Occ=Once] ->
              GHC.Event.TimerManager.$wloop
                  ww1_savi8
                  ww2_savi9
                  ww3_savia
                  ww4_savib
                  ww5_savic
                  ww6_savid
                  ww7_savie
                  ww8_savif
                  ww9_savig
                  w1_savi6;
        };

GHC.Event.TimerManager.loop
  :: GHC.Event.TimerManager.TimerManager -> GHC.Types.IO ()
[GblId,
 Arity=2,
 Str=<S(SSSSSSSSS),1*U(U,U,U,U,U,U,U,U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 eta_B1] GHC.Event.TimerManager.loop1 eta_B2 eta_B1;

GHC.Event.TimerManager.TimerManager
  :: GHC.Event.Internal.Backend
     -> GHC.Prim.MutVar#
          GHC.Prim.RealWorld GHC.Event.TimerManager.TimeoutQueue
     -> GHC.Prim.MutVar# GHC.Prim.RealWorld GHC.Event.TimerManager.State
     -> GHC.Prim.MutableByteArray# GHC.Prim.RealWorld
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Types.Bool
     -> GHC.Prim.MutVar# GHC.Prim.RealWorld GHC.Types.Bool
     -> GHC.Event.TimerManager.TimerManager
[GblId[DataCon],
 Arity=9,
 Caf=NoCafRefs,
 Str=<L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>m,
 Unf=OtherCon []] =
    [] \r [eta_B9
           eta_B8
           eta_B7
           eta_B6
           eta_B5
           eta_B4
           eta_B3
           eta_B2
           eta_B1]
        GHC.Event.TimerManager.TimerManager [eta_B9
                                             eta_B8
                                             eta_B7
                                             eta_B6
                                             eta_B5
                                             eta_B4
                                             eta_B3
                                             eta_B2
                                             eta_B1];

GHC.Event.TimerManager.Created :: GHC.Event.TimerManager.State
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Event.TimerManager.Created! [];

GHC.Event.TimerManager.Running :: GHC.Event.TimerManager.State
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Event.TimerManager.Running! [];

GHC.Event.TimerManager.Dying :: GHC.Event.TimerManager.State
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Event.TimerManager.Dying! [];

GHC.Event.TimerManager.Finished :: GHC.Event.TimerManager.State
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Event.TimerManager.Finished! [];


==================== STG syntax: ====================
2018-03-16 16:05:30.383647331 UTC

GHC.Event.TimerManager.$WTimerManager [InlPrag=INLINE[2]]
  :: GHC.Event.Internal.Backend
     -> GHC.IORef.IORef GHC.Event.TimerManager.TimeoutQueue
     -> GHC.IORef.IORef GHC.Event.TimerManager.State
     -> GHC.Event.Unique.UniqueSource
     -> GHC.Event.Control.Control
     -> GHC.Event.TimerManager.TimerManager
[GblId[DataConWrapper],
 Arity=5,
 Caf=NoCafRefs,
 Str=<S,U><S,U><S,U><S,U><S,U>m,
 Unf=OtherCon []] =
    [] \r [dt_sav2L dt_sav2M dt_sav2N dt_sav2O dt_sav2P]
        case dt_sav2L of dt_sav2Q {
          __DEFAULT ->
              case dt_sav2M of {
                GHC.STRef.STRef dt_sav2S [Occ=Once] ->
                    case dt_sav2N of {
                      GHC.STRef.STRef dt_sav2U [Occ=Once] ->
                          case dt_sav2O of {
                            GHC.Event.Unique.US dt_sav2W [Occ=Once] ->
                                case dt_sav2P of {
                                  GHC.Event.Control.W dt_sav2Y [Occ=Once]
                                                      dt_sav2Z [Occ=Once]
                                                      dt_sav30 [Occ=Once]
                                                      dt_sav31 [Occ=Once]
                                                      dt_sav32 [Occ=Once] ->
                                      GHC.Event.TimerManager.TimerManager [dt_sav2Q
                                                                           dt_sav2S
                                                                           dt_sav2U
                                                                           dt_sav2W
                                                                           dt_sav2Y
                                                                           dt_sav2Z
                                                                           dt_sav30
                                                                           dt_sav31
                                                                           dt_sav32];
                                };
                          };
                    };
              };
        };

GHC.Event.TimerManager.$fShowState8 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Created"#;

GHC.Event.TimerManager.$fShowState7 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# GHC.Event.TimerManager.$fShowState8;

GHC.Event.TimerManager.$fShowState6 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Running"#;

GHC.Event.TimerManager.$fShowState5 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# GHC.Event.TimerManager.$fShowState6;

GHC.Event.TimerManager.$fShowState4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Dying"#;

GHC.Event.TimerManager.$fShowState3 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# GHC.Event.TimerManager.$fShowState4;

GHC.Event.TimerManager.$fShowState2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "Finished"#;

GHC.Event.TimerManager.$fShowState1 :: [GHC.Types.Char]
[GblId] =
    [] \u []
        GHC.CString.unpackCString# GHC.Event.TimerManager.$fShowState2;

GHC.Event.TimerManager.$w$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: GHC.Event.TimerManager.State
     -> GHC.Base.String -> GHC.Base.String
[GblId, Arity=2, Str=<S,1*U><L,1*U>, Unf=OtherCon []] =
    [] \r [w_sav33 w1_sav34]
        case w_sav33 of {
          GHC.Event.TimerManager.Created ->
              GHC.Base.++ GHC.Event.TimerManager.$fShowState7 w1_sav34;
          GHC.Event.TimerManager.Running ->
              GHC.Base.++ GHC.Event.TimerManager.$fShowState5 w1_sav34;
          GHC.Event.TimerManager.Dying ->
              GHC.Base.++ GHC.Event.TimerManager.$fShowState3 w1_sav34;
          GHC.Event.TimerManager.Finished ->
              GHC.Base.++ GHC.Event.TimerManager.$fShowState1 w1_sav34;
        };

GHC.Event.TimerManager.$fShowState_$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: GHC.Types.Int -> GHC.Event.TimerManager.State -> GHC.Show.ShowS
[GblId, Arity=3, Str=<L,A><S,1*U><L,1*U>, Unf=OtherCon []] =
    [] \r [w_sav36 w1_sav37 w2_sav38]
        GHC.Event.TimerManager.$w$cshowsPrec w1_sav37 w2_sav38;

GHC.Event.TimerManager.$fEqState_$c==
  :: GHC.Event.TimerManager.State
     -> GHC.Event.TimerManager.State -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [ds_sav39 ds1_sav3a]
        case ds_sav39 of {
          GHC.Event.TimerManager.Created ->
              case ds1_sav3a of {
                __DEFAULT -> GHC.Types.False [];
                GHC.Event.TimerManager.Created -> GHC.Types.True [];
              };
          GHC.Event.TimerManager.Running ->
              case ds1_sav3a of {
                __DEFAULT -> GHC.Types.False [];
                GHC.Event.TimerManager.Running -> GHC.Types.True [];
              };
          GHC.Event.TimerManager.Dying ->
              case ds1_sav3a of {
                __DEFAULT -> GHC.Types.False [];
                GHC.Event.TimerManager.Dying -> GHC.Types.True [];
              };
          GHC.Event.TimerManager.Finished ->
              case ds1_sav3a of {
                __DEFAULT -> GHC.Types.False [];
                GHC.Event.TimerManager.Finished -> GHC.Types.True [];
              };
        };

GHC.Event.TimerManager.$fEqTimeoutKey [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq GHC.Event.TimerManager.TimeoutKey
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Classes.eqInt
                                     GHC.Classes.neInt];

GHC.Event.TimerManager.emControl
  :: GHC.Event.TimerManager.TimerManager -> GHC.Event.Control.Control
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLLSSSSS),1*U(A,A,A,A,U,U,U,U,U)>m,
 Unf=OtherCon []] =
    [] \r [ds_sav3g]
        case ds_sav3g of {
          GHC.Event.TimerManager.TimerManager _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              dt3_sav3m [Occ=Once]
                                              dt4_sav3n [Occ=Once]
                                              dt5_sav3o [Occ=Once]
                                              dt6_sav3p [Occ=Once]
                                              dt7_sav3q [Occ=Once] ->
              GHC.Event.Control.W [dt3_sav3m
                                   dt4_sav3n
                                   dt5_sav3o
                                   dt6_sav3p
                                   dt7_sav3q];
        };

GHC.Event.TimerManager.emUniqueSource
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Event.Unique.UniqueSource
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLSLLLLL),1*U(A,A,A,U,A,A,A,A,A)>m,
 Unf=OtherCon []] =
    [] \r [ds_sav3r]
        case ds_sav3r of {
          GHC.Event.TimerManager.TimerManager _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              dt2_sav3w [Occ=Once]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead] ->
              GHC.Event.Unique.US [dt2_sav3w];
        };

GHC.Event.TimerManager.emState
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.IORef.IORef GHC.Event.TimerManager.State
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLSLLLLLL),1*U(A,A,U,A,A,A,A,A,A)>m,
 Unf=OtherCon []] =
    [] \r [ds_sav3C]
        case ds_sav3C of {
          GHC.Event.TimerManager.TimerManager _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              dt1_sav3G [Occ=Once]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead] ->
              GHC.STRef.STRef [dt1_sav3G];
        };

GHC.Event.TimerManager.emTimeouts
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.IORef.IORef GHC.Event.TimerManager.TimeoutQueue
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LSLLLLLLL),1*U(A,U,A,A,A,A,A,A,A)>m,
 Unf=OtherCon []] =
    [] \r [ds_sav3N]
        case ds_sav3N of {
          GHC.Event.TimerManager.TimerManager _ [Occ=Dead]
                                              dt_sav3Q [Occ=Once]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead] ->
              GHC.STRef.STRef [dt_sav3Q];
        };

GHC.Event.TimerManager.emBackend
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Event.Internal.Backend
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SLLLLLLLL),1*U(U,A,A,A,A,A,A,A,A)>,
 Unf=OtherCon []] =
    [] \r [ds_sav3Y]
        case ds_sav3Y of {
          GHC.Event.TimerManager.TimerManager ds1_sav40 [Occ=Once]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead] ->
              ds1_sav40;
        };

GHC.Event.TimerManager.newDefaultBackend
  :: GHC.Types.IO GHC.Event.Internal.Backend
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [void_0E] GHC.Event.Poll.new1 GHC.Prim.void#;

GHC.Event.TimerManager.wakeManager1
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=2,
 Str=<S(LLLLLLSLS),1*U(A,A,A,A,A,A,U,A,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [mgr_sav49 void_0E]
        case mgr_sav49 of {
          GHC.Event.TimerManager.TimerManager _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              dt5_sav4i [Occ=Once]
                                              _ [Occ=Dead]
                                              dt7_sav4k [Occ=Once] ->
              GHC.Event.Control.$wsendWakeup dt5_sav4i dt7_sav4k GHC.Prim.void#;
        };

GHC.Event.TimerManager.wakeManager
  :: GHC.Event.TimerManager.TimerManager -> GHC.Types.IO ()
[GblId,
 Arity=2,
 Str=<S(LLLLLLSLS),1*U(A,A,A,A,A,A,U,A,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 void_0E]
        GHC.Event.TimerManager.wakeManager1 eta_B2 GHC.Prim.void#;

GHC.Event.TimerManager.$trModule4 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "base"#;

GHC.Event.TimerManager.$trModule3 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.TimerManager.$trModule4];

GHC.Event.TimerManager.$trModule2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.Event.TimerManager"#;

GHC.Event.TimerManager.$trModule1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.TimerManager.$trModule2];

GHC.Event.TimerManager.$trModule :: GHC.Types.Module
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.Module! [GHC.Event.TimerManager.$trModule3
                                     GHC.Event.TimerManager.$trModule1];

$krep_rasDC :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.Unique.$tcUnique
                                              GHC.Types.[]];

$krep1_rasDD :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.Control.$tcControl
                                              GHC.Types.[]];

$krep2_rasDE :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.Unique.$tcUniqueSource
                                              GHC.Types.[]];

$krep3_rasDF :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Tuple.$tc()
                                              GHC.Types.[]];

$krep4_rasDG :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.Internal.$tcBackend
                                              GHC.Types.[]];

$krep5_rasDH :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep3_rasDF GHC.Types.[]];

$krep6_rasDI :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Types.$tcIO
                                              $krep5_rasDH];

$krep7_rasDJ :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep6_rasDI GHC.Types.[]];

$krep8_rasDK :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.PSQ.$tcIntPSQ
                                              $krep7_rasDJ];

$krep9_rasDL :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [$krep8_rasDK GHC.Types.[]];

$krep10_rasDM :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.IORef.$tcIORef
                                              $krep9_rasDL];

GHC.Event.TimerManager.$tcTimeoutKey2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "TimeoutKey"#;

GHC.Event.TimerManager.$tcTimeoutKey1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.TimerManager.$tcTimeoutKey2];

GHC.Event.TimerManager.$tcTimeoutKey :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [11465769786694886755##
                                    8841886228133799087##
                                    GHC.Event.TimerManager.$trModule
                                    GHC.Event.TimerManager.$tcTimeoutKey1
                                    0#
                                    GHC.Types.krep$*];

$krep11_rasDN :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.TimerManager.$tcTimeoutKey
                                              GHC.Types.[]];

GHC.Event.TimerManager.$tc'TK1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep_rasDC $krep11_rasDN];

GHC.Event.TimerManager.$tc'TK3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'TK"#;

GHC.Event.TimerManager.$tc'TK2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.TimerManager.$tc'TK3];

GHC.Event.TimerManager.$tc'TK :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [4362213157428095811##
                                    13641506162182658721##
                                    GHC.Event.TimerManager.$trModule
                                    GHC.Event.TimerManager.$tc'TK2
                                    0#
                                    GHC.Event.TimerManager.$tc'TK1];

GHC.Event.TimerManager.$tcState2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "State"#;

GHC.Event.TimerManager.$tcState1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.TimerManager.$tcState2];

GHC.Event.TimerManager.$tcState :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [10067362680685980057##
                                    6560547589611231606##
                                    GHC.Event.TimerManager.$trModule
                                    GHC.Event.TimerManager.$tcState1
                                    0#
                                    GHC.Types.krep$*];

GHC.Event.TimerManager.$tc'Created1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.TimerManager.$tcState
                                              GHC.Types.[]];

GHC.Event.TimerManager.$tc'Created3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Created"#;

GHC.Event.TimerManager.$tc'Created2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.TimerManager.$tc'Created3];

GHC.Event.TimerManager.$tc'Created :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [7473777249114724674##
                                    2904627795268885228##
                                    GHC.Event.TimerManager.$trModule
                                    GHC.Event.TimerManager.$tc'Created2
                                    0#
                                    GHC.Event.TimerManager.$tc'Created1];

GHC.Event.TimerManager.$tc'Running2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Running"#;

GHC.Event.TimerManager.$tc'Running1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.TimerManager.$tc'Running2];

GHC.Event.TimerManager.$tc'Running :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [15425377252641674582##
                                    12404533232809671740##
                                    GHC.Event.TimerManager.$trModule
                                    GHC.Event.TimerManager.$tc'Running1
                                    0#
                                    GHC.Event.TimerManager.$tc'Created1];

GHC.Event.TimerManager.$tc'Dying2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Dying"#;

GHC.Event.TimerManager.$tc'Dying1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.TimerManager.$tc'Dying2];

GHC.Event.TimerManager.$tc'Dying :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [13405772281963838681##
                                    437803396301020926##
                                    GHC.Event.TimerManager.$trModule
                                    GHC.Event.TimerManager.$tc'Dying1
                                    0#
                                    GHC.Event.TimerManager.$tc'Created1];

GHC.Event.TimerManager.$tc'Finished2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'Finished"#;

GHC.Event.TimerManager.$tc'Finished1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.TimerManager.$tc'Finished2];

GHC.Event.TimerManager.$tc'Finished :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [1288208730452846229##
                                    15347214930365004647##
                                    GHC.Event.TimerManager.$trModule
                                    GHC.Event.TimerManager.$tc'Finished1
                                    0#
                                    GHC.Event.TimerManager.$tc'Created1];

$krep12_rasDO :: [GHC.Types.KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []] =
    CCS_DONT_CARE :! [GHC.Event.TimerManager.$tc'Created1
                      GHC.Types.[]];

$krep13_rasDP :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.IORef.$tcIORef
                                              $krep12_rasDO];

GHC.Event.TimerManager.$tcTimerManager2 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "TimerManager"#;

GHC.Event.TimerManager.$tcTimerManager1 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.TimerManager.$tcTimerManager2];

GHC.Event.TimerManager.$tcTimerManager :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [3987042711794726631##
                                    6993782799294290901##
                                    GHC.Event.TimerManager.$trModule
                                    GHC.Event.TimerManager.$tcTimerManager1
                                    0#
                                    GHC.Types.krep$*];

$krep14_rasDQ :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepTyConApp! [GHC.Event.TimerManager.$tcTimerManager
                                              GHC.Types.[]];

$krep15_rasDR :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep1_rasDD $krep14_rasDQ];

$krep16_rasDS :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep2_rasDE $krep15_rasDR];

$krep17_rasDT :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep13_rasDP $krep16_rasDS];

$krep18_rasDU :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep10_rasDM $krep17_rasDT];

GHC.Event.TimerManager.$tc'TimerManager1 [InlPrag=NOUSERINLINE[~]]
  :: GHC.Types.KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.KindRepFun! [$krep4_rasDG $krep18_rasDU];

GHC.Event.TimerManager.$tc'TimerManager3 :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "'TimerManager"#;

GHC.Event.TimerManager.$tc'TimerManager2 :: GHC.Types.TrName
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TrNameS! [GHC.Event.TimerManager.$tc'TimerManager3];

GHC.Event.TimerManager.$tc'TimerManager :: GHC.Types.TyCon
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Types.TyCon! [451007785877958328##
                                    8145550165147362681##
                                    GHC.Event.TimerManager.$trModule
                                    GHC.Event.TimerManager.$tc'TimerManager2
                                    0#
                                    GHC.Event.TimerManager.$tc'TimerManager1];

GHC.Event.TimerManager.$fShowState_$cshow
  :: GHC.Event.TimerManager.State -> GHC.Base.String
[GblId, Arity=1, Str=<S,1*U>, Unf=OtherCon []] =
    [] \r [x_sav4l]
        case x_sav4l of {
          GHC.Event.TimerManager.Created ->
              GHC.Event.TimerManager.$fShowState7;
          GHC.Event.TimerManager.Running ->
              GHC.Event.TimerManager.$fShowState5;
          GHC.Event.TimerManager.Dying ->
              GHC.Event.TimerManager.$fShowState3;
          GHC.Event.TimerManager.Finished ->
              GHC.Event.TimerManager.$fShowState1;
        };

GHC.Event.TimerManager.$fShowState_$cshowList
  :: [GHC.Event.TimerManager.State] -> GHC.Show.ShowS
[GblId, Arity=2, Str=<S,1*U><L,U>, Unf=OtherCon []] =
    [] \r [ls_sav4n s_sav4o]
        GHC.Show.showList__
            GHC.Event.TimerManager.$w$cshowsPrec ls_sav4n s_sav4o;

GHC.Event.TimerManager.$fShowState [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Show.Show GHC.Event.TimerManager.State
[GblId[DFunId], Str=m] =
    CCS_DONT_CARE GHC.Show.C:Show! [GHC.Event.TimerManager.$fShowState_$cshowsPrec
                                    GHC.Event.TimerManager.$fShowState_$cshow
                                    GHC.Event.TimerManager.$fShowState_$cshowList];

GHC.Event.TimerManager.$fEqState_$c/= [InlPrag=INLINE (sat-args=2)]
  :: GHC.Event.TimerManager.State
     -> GHC.Event.TimerManager.State -> GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><S,1*U>,
 Unf=OtherCon []] =
    [] \r [eta_sav4p eta1_sav4q]
        case eta_sav4p of {
          GHC.Event.TimerManager.Created ->
              case eta1_sav4q of {
                __DEFAULT -> GHC.Types.True [];
                GHC.Event.TimerManager.Created -> GHC.Types.False [];
              };
          GHC.Event.TimerManager.Running ->
              case eta1_sav4q of {
                __DEFAULT -> GHC.Types.True [];
                GHC.Event.TimerManager.Running -> GHC.Types.False [];
              };
          GHC.Event.TimerManager.Dying ->
              case eta1_sav4q of {
                __DEFAULT -> GHC.Types.True [];
                GHC.Event.TimerManager.Dying -> GHC.Types.False [];
              };
          GHC.Event.TimerManager.Finished ->
              case eta1_sav4q of {
                __DEFAULT -> GHC.Types.True [];
                GHC.Event.TimerManager.Finished -> GHC.Types.False [];
              };
        };

GHC.Event.TimerManager.$fEqState [InlPrag=NOUSERINLINE CONLIKE]
  :: GHC.Classes.Eq GHC.Event.TimerManager.State
[GblId[DFunId], Caf=NoCafRefs, Str=m] =
    CCS_DONT_CARE GHC.Classes.C:Eq! [GHC.Event.TimerManager.$fEqState_$c==
                                     GHC.Event.TimerManager.$fEqState_$c/=];

GHC.Event.TimerManager.$weditTimeouts [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.MutVar#
       GHC.Prim.RealWorld GHC.Event.TimerManager.TimeoutQueue
     -> GHC.Prim.MutVar# GHC.Prim.RealWorld GHC.Event.TimerManager.State
     -> GHC.Prim.MutableByteArray# GHC.Prim.RealWorld
     -> GHC.Prim.Int#
     -> GHC.Prim.MutVar# GHC.Prim.RealWorld GHC.Types.Bool
     -> GHC.Event.TimerManager.TimeoutEdit
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=7,
 Str=<S,U><L,A><L,A><L,U><L,U><L,C(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [ww_sav4w
           ww1_sav4x
           ww2_sav4y
           ww3_sav4z
           ww4_sav4A
           w_sav4B
           void_0E]
        let {
          sat_sav5e [Occ=Once]
            :: GHC.Event.TimerManager.TimeoutQueue
               -> (GHC.Event.TimerManager.TimeoutQueue, GHC.Types.Bool)
          [LclId] =
              [w_sav4B] \r [a1_sav4D]
                  case w_sav4B a1_sav4D of a'1_sav4E {
                    __DEFAULT ->
                        let {
                          sat_sav5d [Occ=Once] :: GHC.Types.Bool
                          [LclId] =
                              [a1_sav4D a'1_sav4E] \u []
                                  case a1_sav4D of {
                                    GHC.Event.PSQ.Bin _ [Occ=Dead]
                                                      dt1_sav4H [Occ=Once*]
                                                      _ [Occ=Dead]
                                                      _ [Occ=Dead]
                                                      _ [Occ=Dead]
                                                      _ [Occ=Dead] ->
                                        case a'1_sav4E of {
                                          GHC.Event.PSQ.Bin _ [Occ=Dead]
                                                            dt5_sav4O [Occ=Once]
                                                            _ [Occ=Dead]
                                                            _ [Occ=Dead]
                                                            _ [Occ=Dead]
                                                            _ [Occ=Dead] ->
                                              case neWord# [dt1_sav4H dt5_sav4O] of sat_sav4T {
                                                __DEFAULT -> tagToEnum# [sat_sav4T];
                                              };
                                          GHC.Event.PSQ.Tip _ [Occ=Dead]
                                                            dt5_sav4V [Occ=Once]
                                                            _ [Occ=Dead] ->
                                              case neWord# [dt1_sav4H dt5_sav4V] of sat_sav4X {
                                                __DEFAULT -> tagToEnum# [sat_sav4X];
                                              };
                                          GHC.Event.PSQ.Nil -> GHC.Types.True [];
                                        };
                                    GHC.Event.PSQ.Tip _ [Occ=Dead]
                                                      dt1_sav4Z [Occ=Once*]
                                                      _ [Occ=Dead] ->
                                        case a'1_sav4E of {
                                          GHC.Event.PSQ.Bin _ [Occ=Dead]
                                                            dt3_sav53 [Occ=Once]
                                                            _ [Occ=Dead]
                                                            _ [Occ=Dead]
                                                            _ [Occ=Dead]
                                                            _ [Occ=Dead] ->
                                              case neWord# [dt1_sav4Z dt3_sav53] of sat_sav58 {
                                                __DEFAULT -> tagToEnum# [sat_sav58];
                                              };
                                          GHC.Event.PSQ.Tip _ [Occ=Dead]
                                                            dt3_sav5a [Occ=Once]
                                                            _ [Occ=Dead] ->
                                              case neWord# [dt1_sav4Z dt3_sav5a] of sat_sav5c {
                                                __DEFAULT -> tagToEnum# [sat_sav5c];
                                              };
                                          GHC.Event.PSQ.Nil -> GHC.Types.True [];
                                        };
                                    GHC.Event.PSQ.Nil -> GHC.Types.True [];
                                  };
                        } in  (,) [a'1_sav4E sat_sav5d];
                  };
        } in 
          case atomicModifyMutVar# [ww_sav4w sat_sav5e GHC.Prim.void#] of {
            Unit# ipv1_sav5h [Occ=Once!] ->
                case ipv1_sav5h of {
                  GHC.Types.False -> Unit# [GHC.Tuple.()];
                  GHC.Types.True ->
                      GHC.Event.Control.$wsendWakeup ww3_sav4z ww4_sav4A GHC.Prim.void#;
                };
          };

GHC.Event.TimerManager.unregisterTimeout2 [InlPrag=NOUSERINLINE[0]]
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Event.TimerManager.TimeoutEdit
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=3,
 Str=<S(LSSSLLSLS),1*U(A,U,1*U,1*U,A,A,U,A,U)><L,C(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sav5j w1_sav5k void_0E]
        case w_sav5j of {
          GHC.Event.TimerManager.TimerManager _ [Occ=Dead]
                                              ww2_sav5o [Occ=Once]
                                              ww3_sav5p [Occ=Once]
                                              ww4_sav5q [Occ=Once]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              ww7_sav5t [Occ=Once]
                                              _ [Occ=Dead]
                                              ww9_sav5v [Occ=Once] ->
              GHC.Event.TimerManager.$weditTimeouts
                  ww2_sav5o
                  ww3_sav5p
                  ww4_sav5q
                  ww7_sav5t
                  ww9_sav5v
                  w1_sav5k
                  GHC.Prim.void#;
        };

GHC.Event.TimerManager.unregisterTimeout1
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Event.TimerManager.TimeoutKey
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=3,
 Str=<S(LSLLLLLLL),1*U(A,U,A,A,A,A,U,A,U)><L,U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [mgr_sav5w ds_sav5x void_0E]
        case mgr_sav5w of {
          GHC.Event.TimerManager.TimerManager _ [Occ=Dead]
                                              ww2_sav5B [Occ=Once]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              ww7_sav5G [Occ=Once]
                                              _ [Occ=Dead]
                                              ww9_sav5I [Occ=Once] ->
              let {
                sat_sav6k [Occ=Once]
                  :: GHC.Event.TimerManager.TimeoutQueue
                     -> (GHC.Event.TimerManager.TimeoutQueue, GHC.Types.Bool)
                [LclId] =
                    [ds_sav5x] \r [a1_sav5J]
                        case GHC.Event.PSQ.delete ds_sav5x a1_sav5J of a'1_sav5K {
                          __DEFAULT ->
                              let {
                                sat_sav6j [Occ=Once] :: GHC.Types.Bool
                                [LclId] =
                                    [a1_sav5J a'1_sav5K] \u []
                                        case a1_sav5J of {
                                          GHC.Event.PSQ.Bin _ [Occ=Dead]
                                                            dt1_sav5N [Occ=Once*]
                                                            _ [Occ=Dead]
                                                            _ [Occ=Dead]
                                                            _ [Occ=Dead]
                                                            _ [Occ=Dead] ->
                                              case a'1_sav5K of {
                                                GHC.Event.PSQ.Bin _ [Occ=Dead]
                                                                  dt5_sav5U [Occ=Once]
                                                                  _ [Occ=Dead]
                                                                  _ [Occ=Dead]
                                                                  _ [Occ=Dead]
                                                                  _ [Occ=Dead] ->
                                                    case
                                                        neWord# [dt1_sav5N dt5_sav5U]
                                                    of
                                                    sat_sav5Z
                                                    { __DEFAULT -> tagToEnum# [sat_sav5Z];
                                                    };
                                                GHC.Event.PSQ.Tip _ [Occ=Dead]
                                                                  dt5_sav61 [Occ=Once]
                                                                  _ [Occ=Dead] ->
                                                    case
                                                        neWord# [dt1_sav5N dt5_sav61]
                                                    of
                                                    sat_sav63
                                                    { __DEFAULT -> tagToEnum# [sat_sav63];
                                                    };
                                                GHC.Event.PSQ.Nil -> GHC.Types.True [];
                                              };
                                          GHC.Event.PSQ.Tip _ [Occ=Dead]
                                                            dt1_sav65 [Occ=Once*]
                                                            _ [Occ=Dead] ->
                                              case a'1_sav5K of {
                                                GHC.Event.PSQ.Bin _ [Occ=Dead]
                                                                  dt3_sav69 [Occ=Once]
                                                                  _ [Occ=Dead]
                                                                  _ [Occ=Dead]
                                                                  _ [Occ=Dead]
                                                                  _ [Occ=Dead] ->
                                                    case
                                                        neWord# [dt1_sav65 dt3_sav69]
                                                    of
                                                    sat_sav6e
                                                    { __DEFAULT -> tagToEnum# [sat_sav6e];
                                                    };
                                                GHC.Event.PSQ.Tip _ [Occ=Dead]
                                                                  dt3_sav6g [Occ=Once]
                                                                  _ [Occ=Dead] ->
                                                    case
                                                        neWord# [dt1_sav65 dt3_sav6g]
                                                    of
                                                    sat_sav6i
                                                    { __DEFAULT -> tagToEnum# [sat_sav6i];
                                                    };
                                                GHC.Event.PSQ.Nil -> GHC.Types.True [];
                                              };
                                          GHC.Event.PSQ.Nil -> GHC.Types.True [];
                                        };
                              } in  (,) [a'1_sav5K sat_sav6j];
                        };
              } in 
                case atomicModifyMutVar# [ww2_sav5B sat_sav6k GHC.Prim.void#] of {
                  Unit# ipv1_sav6n [Occ=Once!] ->
                      case ipv1_sav6n of {
                        GHC.Types.False -> Unit# [GHC.Tuple.()];
                        GHC.Types.True ->
                            GHC.Event.Control.$wsendWakeup ww7_sav5G ww9_sav5I GHC.Prim.void#;
                      };
                };
        };

GHC.Event.TimerManager.unregisterTimeout
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Event.TimerManager.TimeoutKey -> GHC.Types.IO ()
[GblId,
 Arity=3,
 Str=<S(LSLLLLLLL),1*U(A,U,A,A,A,A,U,A,U)><L,U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B3 eta_B2 void_0E]
        GHC.Event.TimerManager.unregisterTimeout1
            eta_B3 eta_B2 GHC.Prim.void#;

GHC.Event.TimerManager.$wregisterTimeout [InlPrag=NOUSERINLINE[0]]
  :: GHC.Prim.MutVar#
       GHC.Prim.RealWorld GHC.Event.TimerManager.TimeoutQueue
     -> GHC.Prim.MutVar# GHC.Prim.RealWorld GHC.Event.TimerManager.State
     -> GHC.Prim.MutableByteArray# GHC.Prim.RealWorld
     -> GHC.Prim.Int#
     -> GHC.Prim.MutVar# GHC.Prim.RealWorld GHC.Types.Bool
     -> GHC.Prim.Int#
     -> GHC.Event.TimerManager.TimeoutCallback
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Event.TimerManager.TimeoutKey #)
[GblId,
 Arity=8,
 Str=<L,U><L,A><S,U><L,U><L,U><S,U><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [ww_sav6p
           ww1_sav6q
           ww2_sav6r
           ww3_sav6s
           ww4_sav6t
           ww5_sav6u
           w_sav6v
           void_0E]
        case fetchAddIntArray# [ww2_sav6r 0# 1# GHC.Prim.void#] of {
          Unit# ipv1_sav6z ->
              let {
                ipv2_sav6A [Dmd=<L,U(U)>] :: GHC.Types.Int
                [LclId, Unf=OtherCon []] =
                    CCCS GHC.Types.I#! [ipv1_sav6z];
              } in 
                case <=# [ww5_sav6u 0#] of {
                  __DEFAULT ->
                      case __pkg_ccall base-4.11.0.0 [GHC.Prim.void#] of {
                        Unit# ds3_sav6F [Occ=Once] ->
                            case int2Word# [ww5_sav6u] of sat_sav6H {
                              __DEFAULT ->
                                  case timesWord# [sat_sav6H 1000##] of sat_sav6I {
                                    __DEFAULT ->
                                        case plusWord# [sat_sav6I ds3_sav6F] of p_sav6G {
                                          __DEFAULT ->
                                              let {
                                                sat_sav7l [Occ=Once]
                                                  :: GHC.Event.TimerManager.TimeoutQueue
                                                     -> (GHC.Event.TimerManager.TimeoutQueue,
                                                         GHC.Types.Bool)
                                                [LclId] =
                                                    [w_sav6v
                                                     ipv1_sav6z
                                                     ipv2_sav6A
                                                     p_sav6G] \r [a1_sav6J]
                                                        case
                                                            GHC.Event.PSQ.delete ipv2_sav6A a1_sav6J
                                                        of
                                                        sat_sav6K
                                                        { __DEFAULT ->
                                                              case
                                                                  GHC.Event.PSQ.$wunsafeInsertNew
                                                                      ipv1_sav6z
                                                                      p_sav6G
                                                                      w_sav6v
                                                                      sat_sav6K
                                                              of
                                                              a'1_sav6L
                                                              { __DEFAULT ->
                                                                    let {
                                                                      sat_sav7k [Occ=Once]
                                                                        :: GHC.Types.Bool
                                                                      [LclId] =
                                                                          [a1_sav6J a'1_sav6L] \u []
                                                                              case a1_sav6J of {
                                                                                GHC.Event.PSQ.Bin _ [Occ=Dead]
                                                                                                  dt1_sav6O [Occ=Once*]
                                                                                                  _ [Occ=Dead]
                                                                                                  _ [Occ=Dead]
                                                                                                  _ [Occ=Dead]
                                                                                                  _ [Occ=Dead] ->
                                                                                    case
                                                                                        a'1_sav6L
                                                                                    of
                                                                                    { GHC.Event.PSQ.Bin _ [Occ=Dead]
                                                                                                        dt5_sav6V [Occ=Once]
                                                                                                        _ [Occ=Dead]
                                                                                                        _ [Occ=Dead]
                                                                                                        _ [Occ=Dead]
                                                                                                        _ [Occ=Dead] ->
                                                                                          case
                                                                                              neWord# [dt1_sav6O
                                                                                                       dt5_sav6V]
                                                                                          of
                                                                                          sat_sav70
                                                                                          { __DEFAULT ->
                                                                                                tagToEnum# [sat_sav70];
                                                                                          };
                                                                                      GHC.Event.PSQ.Tip _ [Occ=Dead]
                                                                                                        dt5_sav72 [Occ=Once]
                                                                                                        _ [Occ=Dead] ->
                                                                                          case
                                                                                              neWord# [dt1_sav6O
                                                                                                       dt5_sav72]
                                                                                          of
                                                                                          sat_sav74
                                                                                          { __DEFAULT ->
                                                                                                tagToEnum# [sat_sav74];
                                                                                          };
                                                                                      GHC.Event.PSQ.Nil ->
                                                                                          GHC.Types.True [];
                                                                                    };
                                                                                GHC.Event.PSQ.Tip _ [Occ=Dead]
                                                                                                  dt1_sav76 [Occ=Once*]
                                                                                                  _ [Occ=Dead] ->
                                                                                    case
                                                                                        a'1_sav6L
                                                                                    of
                                                                                    { GHC.Event.PSQ.Bin _ [Occ=Dead]
                                                                                                        dt3_sav7a [Occ=Once]
                                                                                                        _ [Occ=Dead]
                                                                                                        _ [Occ=Dead]
                                                                                                        _ [Occ=Dead]
                                                                                                        _ [Occ=Dead] ->
                                                                                          case
                                                                                              neWord# [dt1_sav76
                                                                                                       dt3_sav7a]
                                                                                          of
                                                                                          sat_sav7f
                                                                                          { __DEFAULT ->
                                                                                                tagToEnum# [sat_sav7f];
                                                                                          };
                                                                                      GHC.Event.PSQ.Tip _ [Occ=Dead]
                                                                                                        dt3_sav7h [Occ=Once]
                                                                                                        _ [Occ=Dead] ->
                                                                                          case
                                                                                              neWord# [dt1_sav76
                                                                                                       dt3_sav7h]
                                                                                          of
                                                                                          sat_sav7j
                                                                                          { __DEFAULT ->
                                                                                                tagToEnum# [sat_sav7j];
                                                                                          };
                                                                                      GHC.Event.PSQ.Nil ->
                                                                                          GHC.Types.True [];
                                                                                    };
                                                                                GHC.Event.PSQ.Nil ->
                                                                                    GHC.Types.True [];
                                                                              };
                                                                    } in  (,) [a'1_sav6L sat_sav7k];
                                                              };
                                                        };
                                              } in 
                                                case
                                                    atomicModifyMutVar# [ww_sav6p
                                                                         sat_sav7l
                                                                         GHC.Prim.void#]
                                                of
                                                { Unit# ipv4_sav7o [Occ=Once!] ->
                                                      case ipv4_sav7o of {
                                                        GHC.Types.False -> Unit# [ipv2_sav6A];
                                                        GHC.Types.True ->
                                                            case
                                                                narrow32Int# [ww3_sav6s]
                                                            of
                                                            sat_sav7r
                                                            { __DEFAULT ->
                                                                  case
                                                                      __pkg_ccall base-4.11.0.0 [sat_sav7r
                                                                                                 1##
                                                                                                 GHC.Prim.void#]
                                                                  of
                                                                  { Unit# ds5_sav7u [Occ=Once] ->
                                                                        case
                                                                            narrow32Int# [ds5_sav7u]
                                                                        of
                                                                        { __DEFAULT ->
                                                                              case
                                                                                  __pkg_ccall base-4.11.0.0 [GHC.Prim.void#]
                                                                              of
                                                                              { Unit# ds7_sav7z [Occ=Once] ->
                                                                                    case
                                                                                        readMutVar# [ww4_sav6t
                                                                                                     GHC.Prim.void#]
                                                                                    of
                                                                                    { Unit# ipv6_sav7C [Occ=Once!] ->
                                                                                          case
                                                                                              ipv6_sav7C
                                                                                          of
                                                                                          { GHC.Types.False ->
                                                                                                case
                                                                                                    Foreign.C.Error.throwErrno1
                                                                                                        GHC.Event.Control.sendWakeup2
                                                                                                        GHC.Prim.void#
                                                                                                of
                                                                                                { Unit# _ [Occ=Dead] ->
                                                                                                      Unit# [ipv2_sav6A];
                                                                                                };
                                                                                            GHC.Types.True ->
                                                                                                case
                                                                                                    narrow32Int# [ds7_sav7z]
                                                                                                of
                                                                                                { __DEFAULT ->
                                                                                                      case
                                                                                                          Foreign.C.Error.throwErrno1
                                                                                                              GHC.Event.Control.sendWakeup2
                                                                                                              GHC.Prim.void#
                                                                                                      of
                                                                                                      { Unit# _ [Occ=Dead] ->
                                                                                                            Unit# [ipv2_sav6A];
                                                                                                      };
                                                                                                  9# ->
                                                                                                      Unit# [ipv2_sav6A];
                                                                                                };
                                                                                          };
                                                                                    };
                                                                              };
                                                                          0# -> Unit# [ipv2_sav6A];
                                                                        };
                                                                  };
                                                            };
                                                      };
                                                };
                                        };
                                  };
                            };
                      };
                  1# ->
                      case w_sav6v GHC.Prim.void# of {
                        Unit# _ [Occ=Dead] -> Unit# [ipv2_sav6A];
                      };
                };
        };

GHC.Event.TimerManager.registerTimeout1 [InlPrag=NOUSERINLINE[0]]
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Types.Int
     -> GHC.Event.TimerManager.TimeoutCallback
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Event.TimerManager.TimeoutKey #)
[GblId,
 Arity=4,
 Str=<S(LSSSLLSLS),1*U(A,U,1*U,U,A,A,U,A,U)><S(S),1*U(U)><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sav7O w1_sav7P w2_sav7Q void_0E]
        case w_sav7O of {
          GHC.Event.TimerManager.TimerManager _ [Occ=Dead]
                                              ww2_sav7U [Occ=Once]
                                              ww3_sav7V [Occ=Once]
                                              ww4_sav7W [Occ=Once]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              ww7_sav7Z [Occ=Once]
                                              _ [Occ=Dead]
                                              ww9_sav81 [Occ=Once] ->
              case w1_sav7P of {
                GHC.Types.I# ww11_sav83 [Occ=Once] ->
                    GHC.Event.TimerManager.$wregisterTimeout
                        ww2_sav7U
                        ww3_sav7V
                        ww4_sav7W
                        ww7_sav7Z
                        ww9_sav81
                        ww11_sav83
                        w2_sav7Q
                        GHC.Prim.void#;
              };
        };

GHC.Event.TimerManager.registerTimeout
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Types.Int
     -> GHC.Event.TimerManager.TimeoutCallback
     -> GHC.Types.IO GHC.Event.TimerManager.TimeoutKey
[GblId,
 Arity=4,
 Str=<S(LSSSLLSLS),1*U(A,U,1*U,U,A,A,U,A,U)><S(S),1*U(U)><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        GHC.Event.TimerManager.registerTimeout1
            eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Event.TimerManager.updateTimeout1
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Event.TimerManager.TimeoutKey
     -> GHC.Types.Int
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=4,
 Str=<L,1*U(A,U,A,A,A,A,U,A,U)><L,U(U)><L,1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [mgr_sav84 ds_sav85 us_sav86 void_0E]
        case __pkg_ccall base-4.11.0.0 [GHC.Prim.void#] of {
          Unit# ds2_sav8b [Occ=Once] ->
              case mgr_sav84 of {
                GHC.Event.TimerManager.TimerManager _ [Occ=Dead]
                                                    ww2_sav8e [Occ=Once]
                                                    _ [Occ=Dead]
                                                    _ [Occ=Dead]
                                                    _ [Occ=Dead]
                                                    _ [Occ=Dead]
                                                    ww7_sav8j [Occ=Once]
                                                    _ [Occ=Dead]
                                                    ww9_sav8l [Occ=Once] ->
                    let {
                      x_sav8m [Occ=OnceL!, Dmd=<L,U(U)>] :: GHC.Word.Word64
                      [LclId] =
                          [us_sav86 ds2_sav8b] \u []
                              case us_sav86 of {
                                GHC.Types.I# x#_sav8o [Occ=Once] ->
                                    case int2Word# [x#_sav8o] of sat_sav8p {
                                      __DEFAULT ->
                                          case timesWord# [sat_sav8p 1000##] of sat_sav8q {
                                            __DEFAULT ->
                                                case plusWord# [sat_sav8q ds2_sav8b] of sat_sav8r {
                                                  __DEFAULT -> GHC.Word.W64# [sat_sav8r];
                                                };
                                          };
                                    };
                              }; } in
                    let {
                      sat_sav9g [Occ=Once]
                        :: GHC.Event.TimerManager.TimeoutQueue
                           -> (GHC.Event.TimerManager.TimeoutQueue, GHC.Types.Bool)
                      [LclId] =
                          [ds_sav85 x_sav8m] \r [a1_sav8s]
                              case GHC.Event.PSQ.deleteView ds_sav85 a1_sav8s of {
                                GHC.Base.Nothing ->
                                    case a1_sav8s of a'1_sav8u {
                                      __DEFAULT ->
                                          let {
                                            sat_sav8w [Occ=Once] :: GHC.Types.Bool
                                            [LclId] =
                                                [a'1_sav8u] \u []
                                                    case a'1_sav8u of {
                                                      __DEFAULT -> GHC.Types.False [];
                                                      GHC.Event.PSQ.Nil -> GHC.Types.True [];
                                                    };
                                          } in  (,) [a'1_sav8u sat_sav8w];
                                    };
                                GHC.Base.Just ds4_sav8x [Occ=Once!] ->
                                    case ds4_sav8x of {
                                      (,,) _ [Occ=Dead] v_sav8A [Occ=Once] t0'_sav8B [Occ=Once] ->
                                          case ds_sav85 of {
                                            GHC.Types.I# ww11_sav8D [Occ=Once] ->
                                                case x_sav8m of {
                                                  GHC.Word.W64# ww13_sav8F [Occ=Once] ->
                                                      case
                                                          GHC.Event.PSQ.$wunsafeInsertNew
                                                              ww11_sav8D
                                                              ww13_sav8F
                                                              v_sav8A
                                                              t0'_sav8B
                                                      of
                                                      a'1_sav8G
                                                      { __DEFAULT ->
                                                            let {
                                                              sat_sav9f [Occ=Once] :: GHC.Types.Bool
                                                              [LclId] =
                                                                  [a1_sav8s a'1_sav8G] \u []
                                                                      case a1_sav8s of {
                                                                        GHC.Event.PSQ.Bin _ [Occ=Dead]
                                                                                          dt1_sav8J [Occ=Once*]
                                                                                          _ [Occ=Dead]
                                                                                          _ [Occ=Dead]
                                                                                          _ [Occ=Dead]
                                                                                          _ [Occ=Dead] ->
                                                                            case a'1_sav8G of {
                                                                              GHC.Event.PSQ.Bin _ [Occ=Dead]
                                                                                                dt5_sav8Q [Occ=Once]
                                                                                                _ [Occ=Dead]
                                                                                                _ [Occ=Dead]
                                                                                                _ [Occ=Dead]
                                                                                                _ [Occ=Dead] ->
                                                                                  case
                                                                                      neWord# [dt1_sav8J
                                                                                               dt5_sav8Q]
                                                                                  of
                                                                                  sat_sav8V
                                                                                  { __DEFAULT ->
                                                                                        tagToEnum# [sat_sav8V];
                                                                                  };
                                                                              GHC.Event.PSQ.Tip _ [Occ=Dead]
                                                                                                dt5_sav8X [Occ=Once]
                                                                                                _ [Occ=Dead] ->
                                                                                  case
                                                                                      neWord# [dt1_sav8J
                                                                                               dt5_sav8X]
                                                                                  of
                                                                                  sat_sav8Z
                                                                                  { __DEFAULT ->
                                                                                        tagToEnum# [sat_sav8Z];
                                                                                  };
                                                                              GHC.Event.PSQ.Nil ->
                                                                                  GHC.Types.True [];
                                                                            };
                                                                        GHC.Event.PSQ.Tip _ [Occ=Dead]
                                                                                          dt1_sav91 [Occ=Once*]
                                                                                          _ [Occ=Dead] ->
                                                                            case a'1_sav8G of {
                                                                              GHC.Event.PSQ.Bin _ [Occ=Dead]
                                                                                                dt3_sav95 [Occ=Once]
                                                                                                _ [Occ=Dead]
                                                                                                _ [Occ=Dead]
                                                                                                _ [Occ=Dead]
                                                                                                _ [Occ=Dead] ->
                                                                                  case
                                                                                      neWord# [dt1_sav91
                                                                                               dt3_sav95]
                                                                                  of
                                                                                  sat_sav9a
                                                                                  { __DEFAULT ->
                                                                                        tagToEnum# [sat_sav9a];
                                                                                  };
                                                                              GHC.Event.PSQ.Tip _ [Occ=Dead]
                                                                                                dt3_sav9c [Occ=Once]
                                                                                                _ [Occ=Dead] ->
                                                                                  case
                                                                                      neWord# [dt1_sav91
                                                                                               dt3_sav9c]
                                                                                  of
                                                                                  sat_sav9e
                                                                                  { __DEFAULT ->
                                                                                        tagToEnum# [sat_sav9e];
                                                                                  };
                                                                              GHC.Event.PSQ.Nil ->
                                                                                  GHC.Types.True [];
                                                                            };
                                                                        GHC.Event.PSQ.Nil ->
                                                                            GHC.Types.True [];
                                                                      };
                                                            } in  (,) [a'1_sav8G sat_sav9f];
                                                      };
                                                };
                                          };
                                    };
                              };
                    } in 
                      case atomicModifyMutVar# [ww2_sav8e sat_sav9g GHC.Prim.void#] of {
                        Unit# ipv1_sav9j [Occ=Once!] ->
                            case ipv1_sav9j of {
                              GHC.Types.False -> Unit# [GHC.Tuple.()];
                              GHC.Types.True ->
                                  GHC.Event.Control.$wsendWakeup ww7_sav8j ww9_sav8l GHC.Prim.void#;
                            };
                      };
              };
        };

GHC.Event.TimerManager.updateTimeout
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Event.TimerManager.TimeoutKey
     -> GHC.Types.Int
     -> GHC.Types.IO ()
[GblId,
 Arity=4,
 Str=<L,1*U(A,U,A,A,A,A,U,A,U)><L,U(U)><L,1*U(U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B4 eta_B3 eta_B2 void_0E]
        GHC.Event.TimerManager.updateTimeout1
            eta_B4 eta_B3 eta_B2 GHC.Prim.void#;

GHC.Event.TimerManager.cleanup1 [InlPrag=NOUSERINLINE[0]]
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SLSLLLLSL),1*U(U,A,U,A,U,U,U,U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_sav9l void_0E]
        case w_sav9l of {
          GHC.Event.TimerManager.TimerManager ww1_sav9o [Occ=Once!]
                                              _ [Occ=Dead]
                                              ww3_sav9q [Occ=Once]
                                              _ [Occ=Dead]
                                              ww5_sav9s [Occ=Once]
                                              ww6_sav9t [Occ=Once]
                                              ww7_sav9u [Occ=Once*]
                                              ww8_sav9v [Occ=Once!]
                                              ww9_sav9w [Occ=Once] ->
              case ww1_sav9o of {
                GHC.Event.Internal.Backend bState_sav9y [Occ=Once]
                                           _ [Occ=Dead]
                                           _ [Occ=Dead]
                                           _ [Occ=Dead]
                                           bDelete_sav9C [Occ=Once!] ->
                    case
                        writeMutVar# [ww3_sav9q
                                      GHC.Event.TimerManager.Finished
                                      GHC.Prim.void#]
                    of
                    s2#_sav9D
                    { (##) ->
                          case bDelete_sav9C bState_sav9y GHC.Prim.void# of {
                            Unit# _ [Occ=Dead] ->
                                case
                                    atomicModifyMutVar# [ww9_sav9w
                                                         GHC.Event.Control.closeControl2
                                                         GHC.Prim.void#]
                                of
                                { Unit# _ [Occ=Dead] ->
                                      case narrow32Int# [ww5_sav9s] of sat_sav9L {
                                        __DEFAULT ->
                                            case
                                                __pkg_ccall base-4.11.0.0 [sat_sav9L GHC.Prim.void#]
                                            of
                                            { Unit# _ [Occ=Dead] ->
                                                  case narrow32Int# [ww6_sav9t] of sat_sav9Q {
                                                    __DEFAULT ->
                                                        case
                                                            __pkg_ccall base-4.11.0.0 [sat_sav9Q
                                                                                       GHC.Prim.void#]
                                                        of
                                                        { Unit# _ [Occ=Dead] ->
                                                              case ww8_sav9v of {
                                                                GHC.Types.False ->
                                                                    case
                                                                        narrow32Int# [ww7_sav9u]
                                                                    of
                                                                    sat_sav9W
                                                                    { __DEFAULT ->
                                                                          case
                                                                              __pkg_ccall base-4.11.0.0 [sat_sav9W
                                                                                                         GHC.Prim.void#]
                                                                          of
                                                                          { Unit# _ [Occ=Dead] ->
                                                                                Unit# [GHC.Tuple.()];
                                                                          };
                                                                    };
                                                                GHC.Types.True ->
                                                                    case
                                                                        __pkg_ccall base-4.11.0.0 [-1#
                                                                                                   GHC.Prim.void#]
                                                                    of
                                                                    { (##) ->
                                                                          case
                                                                              narrow32Int# [ww7_sav9u]
                                                                          of
                                                                          sat_sava4
                                                                          { __DEFAULT ->
                                                                                case
                                                                                    __pkg_ccall base-4.11.0.0 [sat_sava4
                                                                                                               GHC.Prim.void#]
                                                                                of
                                                                                { Unit# _ [Occ=Dead] ->
                                                                                      Unit# [GHC.Tuple.()];
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.Event.TimerManager.cleanup
  :: GHC.Event.TimerManager.TimerManager -> GHC.Types.IO ()
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SLSLLLLSL),1*U(U,A,U,A,U,U,U,U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 void_0E]
        GHC.Event.TimerManager.cleanup1 eta_B2 GHC.Prim.void#;

GHC.Event.TimerManager.finished1
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(LLSLLLLLL),1*U(A,A,U,A,A,A,A,A,A)><S,U>,
 Unf=OtherCon []] =
    [] \r [mgr_sava8 void_0E]
        case mgr_sava8 of {
          GHC.Event.TimerManager.TimerManager _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              dt1_savad [Occ=Once]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead] ->
              case readMutVar# [dt1_savad GHC.Prim.void#] of {
                Unit# ipv1_savam [Occ=Once!] ->
                    let {
                      sat_savao [Occ=Once] :: GHC.Types.Bool
                      [LclId] =
                          [ipv1_savam] \u []
                              case ipv1_savam of {
                                __DEFAULT -> GHC.Types.False [];
                                GHC.Event.TimerManager.Finished -> GHC.Types.True [];
                              };
                    } in  Unit# [sat_savao];
              };
        };

GHC.Event.TimerManager.finished
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Types.IO GHC.Types.Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(LLSLLLLLL),1*U(A,A,U,A,A,A,A,A,A)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 void_0E]
        GHC.Event.TimerManager.finished1 eta_B2 GHC.Prim.void#;

GHC.Event.TimerManager.shutdown2
  :: GHC.Event.TimerManager.State
     -> (GHC.Event.TimerManager.State, GHC.Event.TimerManager.State)
[GblId, Arity=1, Caf=NoCafRefs, Str=<L,U>m, Unf=OtherCon []] =
    [] \r [a1_savap] (,) [GHC.Event.TimerManager.Dying a1_savap];

GHC.Event.TimerManager.shutdown1
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=2,
 Str=<S(LLSLLLLLL),1*U(A,A,U,A,A,U,A,A,1*U)><S,U>,
 Unf=OtherCon []] =
    [] \r [mgr_savaq void_0E]
        case mgr_savaq of {
          GHC.Event.TimerManager.TimerManager _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              dt1_savav [Occ=Once]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              dt4_savay [Occ=Once]
                                              _ [Occ=Dead]
                                              _ [Occ=Dead]
                                              dt7_savaB [Occ=Once] ->
              case
                  atomicModifyMutVar# [dt1_savav
                                       GHC.Event.TimerManager.shutdown2
                                       GHC.Prim.void#]
              of
              { Unit# ipv1_savaE [Occ=Once!] ->
                    case ipv1_savaE of {
                      __DEFAULT -> Unit# [GHC.Tuple.()];
                      GHC.Event.TimerManager.Running ->
                          GHC.Event.Control.$wsendDie dt4_savay dt7_savaB GHC.Prim.void#;
                    };
              };
        };

GHC.Event.TimerManager.shutdown
  :: GHC.Event.TimerManager.TimerManager -> GHC.Types.IO ()
[GblId,
 Arity=2,
 Str=<S(LLSLLLLLL),1*U(A,A,U,A,A,U,A,A,1*U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 void_0E]
        GHC.Event.TimerManager.shutdown1 eta_B2 GHC.Prim.void#;

GHC.Event.TimerManager.new3
  :: GHC.Event.TimerManager.State
     -> (GHC.Event.TimerManager.State, GHC.Event.TimerManager.State)
[GblId, Arity=1, Caf=NoCafRefs, Str=<L,U>m, Unf=OtherCon []] =
    [] \r [a1_savaG] (,) [GHC.Event.TimerManager.Finished a1_savaG];

GHC.Event.TimerManager.new2
  :: GHC.Event.Internal.Backend
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Event.TimerManager.TimerManager #)
[GblId, Arity=2, Str=<L,U><S,U>, Unf=OtherCon []] =
    [] \r [be_savaH void_0E]
        case newMutVar# [GHC.Event.PSQ.Nil GHC.Prim.void#] of {
          Unit# ipv1_savaL [Occ=Once] ->
              case
                  GHC.Event.Control.newControl1 GHC.Types.True GHC.Prim.void#
              of
              { Unit# ipv3_savaO ->
                    case
                        newMutVar# [GHC.Event.TimerManager.Created GHC.Prim.void#]
                    of
                    { Unit# ipv5_savaR ->
                          case newByteArray# [8# GHC.Prim.void#] of {
                            Unit# ipv7_savaU [Occ=Once] ->
                                let {
                                  sat_savba [Occ=Once]
                                    :: GHC.Prim.State# GHC.Prim.RealWorld
                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                  [LclId] =
                                      [be_savaH ipv3_savaO ipv5_savaR] \r [void_0E]
                                          case
                                              atomicModifyMutVar# [ipv5_savaR
                                                                   GHC.Event.TimerManager.new3
                                                                   GHC.Prim.void#]
                                          of
                                          { Unit# ipv9_savaZ [Occ=Once!] ->
                                                case ipv9_savaZ of {
                                                  __DEFAULT ->
                                                      case be_savaH of {
                                                        GHC.Event.Internal.Backend bState_savb2 [Occ=Once]
                                                                                   _ [Occ=Dead]
                                                                                   _ [Occ=Dead]
                                                                                   _ [Occ=Dead]
                                                                                   bDelete_savb6 [Occ=Once!] ->
                                                            case
                                                                bDelete_savb6
                                                                    bState_savb2 GHC.Prim.void#
                                                            of
                                                            { Unit# _ [Occ=Dead] ->
                                                                  GHC.Event.Control.closeControl1
                                                                      ipv3_savaO GHC.Prim.void#;
                                                            };
                                                      };
                                                  GHC.Event.TimerManager.Finished ->
                                                      Unit# [GHC.Tuple.()];
                                                };
                                          }; } in
                                let {
                                  sat_savaV [Occ=Once]
                                    :: GHC.IORef.IORef GHC.Event.TimerManager.State
                                  [LclId] =
                                      CCCS GHC.STRef.STRef! [ipv5_savaR];
                                } in 
                                  case mkWeak# [ipv5_savaR sat_savaV sat_savba GHC.Prim.void#] of {
                                    Unit# _ [Occ=Dead] ->
                                        case be_savaH of wild_savbe {
                                          GHC.Event.Internal.Backend bState_savbf
                                                                     _ [Occ=Dead]
                                                                     bModifyFd_savbh
                                                                     _ [Occ=Dead]
                                                                     _ [Occ=Dead] ->
                                              let {
                                                sat_savbk [Occ=Once] :: System.Posix.Types.Fd
                                                [LclId] =
                                                    [ipv3_savaO] \u []
                                                        GHC.Event.Control.controlReadFd ipv3_savaO;
                                              } in 
                                                case
                                                    bModifyFd_savbh
                                                        bState_savbf
                                                        sat_savbk
                                                        GHC.Event.Internal.evtNothing
                                                        GHC.Event.Internal.evtRead
                                                        GHC.Prim.void#
                                                of
                                                { Unit# _ [Occ=Dead] ->
                                                      let {
                                                        sat_savbo [Occ=Once]
                                                          :: System.Posix.Types.Fd
                                                        [LclId] =
                                                            [ipv3_savaO] \u []
                                                                GHC.Event.Control.controlEventFd
                                                                    ipv3_savaO;
                                                      } in 
                                                        case
                                                            bModifyFd_savbh
                                                                bState_savbf
                                                                sat_savbo
                                                                GHC.Event.Internal.evtNothing
                                                                GHC.Event.Internal.evtRead
                                                                GHC.Prim.void#
                                                        of
                                                        { Unit# _ [Occ=Dead] ->
                                                              let {
                                                                sat_savby [Occ=Once]
                                                                  :: GHC.Event.TimerManager.TimerManager
                                                                [LclId] =
                                                                    [ipv1_savaL
                                                                     ipv3_savaO
                                                                     ipv5_savaR
                                                                     ipv7_savaU
                                                                     wild_savbe] \u []
                                                                        case ipv3_savaO of {
                                                                          GHC.Event.Control.W dt1_savbt [Occ=Once]
                                                                                              dt2_savbu [Occ=Once]
                                                                                              dt3_savbv [Occ=Once]
                                                                                              dt4_savbw [Occ=Once]
                                                                                              dt5_savbx [Occ=Once] ->
                                                                              GHC.Event.TimerManager.TimerManager [wild_savbe
                                                                                                                   ipv1_savaL
                                                                                                                   ipv5_savaR
                                                                                                                   ipv7_savaU
                                                                                                                   dt1_savbt
                                                                                                                   dt2_savbu
                                                                                                                   dt3_savbv
                                                                                                                   dt4_savbw
                                                                                                                   dt5_savbx];
                                                                        };
                                                              } in  Unit# [sat_savby];
                                                        };
                                                };
                                        };
                                  };
                          };
                    };
              };
        };

GHC.Event.TimerManager.newWith
  :: GHC.Event.Internal.Backend
     -> GHC.Types.IO GHC.Event.TimerManager.TimerManager
[GblId, Arity=2, Str=<L,U><S,U>, Unf=OtherCon []] =
    [] \r [eta_B2 void_0E]
        GHC.Event.TimerManager.new2 eta_B2 GHC.Prim.void#;

GHC.Event.TimerManager.new1
  :: GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld,
           GHC.Event.TimerManager.TimerManager #)
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [void_0E]
        case GHC.Event.Poll.new1 GHC.Prim.void# of {
          Unit# ipv1_savbC [Occ=Once] ->
              GHC.Event.TimerManager.new2 ipv1_savbC GHC.Prim.void#;
        };

GHC.Event.TimerManager.new
  :: GHC.Types.IO GHC.Event.TimerManager.TimerManager
[GblId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
    [] \r [void_0E] GHC.Event.TimerManager.new1 GHC.Prim.void#;

GHC.Event.TimerManager.step1
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
[GblId,
 Arity=2,
 Str=<L,1*U(U,U,U,A,A,A,U,A,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [mgr_savbD void_0E]
        case __pkg_ccall base-4.11.0.0 [GHC.Prim.void#] of {
          Unit# ds2_savbI ->
              case mgr_savbD of {
                GHC.Event.TimerManager.TimerManager ds_savbK [Occ=Once!]
                                                    dt_savbL [Occ=Once]
                                                    dt1_savbM
                                                    _ [Occ=Dead]
                                                    _ [Occ=Dead]
                                                    _ [Occ=Dead]
                                                    dt5_savbQ [Occ=OnceL]
                                                    _ [Occ=Dead]
                                                    dt7_savbS [Occ=OnceL] ->
                    case ds_savbK of {
                      GHC.Event.Internal.Backend bState_savbU [Occ=Once]
                                                 bPoll_savbV [Occ=Once!]
                                                 _ [Occ=Dead]
                                                 _ [Occ=Dead]
                                                 _ [Occ=Dead] ->
                          let {
                            ipv1_savbZ [Occ=OnceL, Dmd=<L,U(U)>] :: GHC.Word.Word64
                            [LclId, Unf=OtherCon []] =
                                CCCS GHC.Word.W64#! [ds2_savbI]; } in
                          let {
                            sat_savcj [Occ=Once]
                              :: GHC.Event.TimerManager.TimeoutQueue
                                 -> (GHC.Event.TimerManager.TimeoutQueue,
                                     ([GHC.Event.PSQ.Elem GHC.Event.TimerManager.TimeoutCallback],
                                      GHC.Event.Internal.Timeout))
                            [LclId] =
                                [ds2_savbI ipv1_savbZ] \r [a1_savc0]
                                    case GHC.Event.PSQ.$watMost ipv1_savbZ a1_savc0 of {
                                      (#,#) ww1_savc2 [Occ=Once] ww2_savc3 [Occ=Once] ->
                                          case ww2_savc3 of a'1_savc4 {
                                            __DEFAULT ->
                                                let {
                                                  sat_savch [Occ=Once] :: GHC.Event.Internal.Timeout
                                                  [LclId] =
                                                      [ds2_savbI a'1_savc4] \u []
                                                          case a'1_savc4 of {
                                                            GHC.Event.PSQ.Bin _ [Occ=Dead]
                                                                              dt9_savc7 [Occ=Once]
                                                                              _ [Occ=Dead]
                                                                              _ [Occ=Dead]
                                                                              _ [Occ=Dead]
                                                                              _ [Occ=Dead] ->
                                                                case
                                                                    minusWord# [dt9_savc7 ds2_savbI]
                                                                of
                                                                sat_savcc
                                                                { __DEFAULT ->
                                                                      GHC.Event.Internal.Timeout [sat_savcc];
                                                                };
                                                            GHC.Event.PSQ.Tip _ [Occ=Dead]
                                                                              dt9_savce [Occ=Once]
                                                                              _ [Occ=Dead] ->
                                                                case
                                                                    minusWord# [dt9_savce ds2_savbI]
                                                                of
                                                                sat_savcg
                                                                { __DEFAULT ->
                                                                      GHC.Event.Internal.Timeout [sat_savcg];
                                                                };
                                                            GHC.Event.PSQ.Nil ->
                                                                GHC.Event.Internal.Forever [];
                                                          }; } in
                                                let {
                                                  sat_savci [Occ=Once]
                                                    :: ([GHC.Event.PSQ.Elem
                                                           GHC.Event.TimerManager.TimeoutCallback],
                                                        GHC.Event.Internal.Timeout)
                                                  [LclId] =
                                                      CCCS (,)! [ww1_savc2 sat_savch];
                                                } in  (,) [a'1_savc4 sat_savci];
                                          };
                                    };
                          } in 
                            case atomicModifyMutVar# [dt_savbL sat_savcj GHC.Prim.void#] of {
                              Unit# ipv2_savcm [Occ=Once!] ->
                                  case ipv2_savcm of {
                                    (,) ipv3_savco [Occ=Once] ipv4_savcp [Occ=Once] ->
                                        let-no-escape {
                                          $w$j_savcq [InlPrag=NOUSERINLINE[0],
                                                      Occ=OnceL!T[1],
                                                      Dmd=<L,C(U(U,U))>]
                                            :: GHC.Prim.State# GHC.Prim.RealWorld
                                               -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                     GHC.Types.Bool #)
                                          [LclId[JoinId(1)], Arity=1, Str=<S,U>, Unf=OtherCon []] =
                                              sat-only [dt1_savbM
                                                        dt5_savbQ
                                                        dt7_savbS
                                                        bState_savbU
                                                        bPoll_savbV
                                                        ipv4_savcp] \r [void_0E]
                                                  let {
                                                    sat_savcI [Occ=Once]
                                                      :: System.Posix.Types.Fd
                                                         -> GHC.Event.Internal.Event
                                                         -> GHC.Types.IO ()
                                                    [LclId] =
                                                        [dt1_savbM dt5_savbQ dt7_savbS] \r [fd_savct
                                                                                            _evt_savcu
                                                                                            void_0E]
                                                            case fd_savct of {
                                                              GHC.Int.I32# ww7_savcx [Occ=Once] ->
                                                                  case
                                                                      GHC.Event.Control.$wreadControlMessage
                                                                          dt5_savbQ
                                                                          dt7_savbS
                                                                          ww7_savcx
                                                                          GHC.Prim.void#
                                                                  of
                                                                  { Unit# ipv6_savcA [Occ=Once!] ->
                                                                        case ipv6_savcA of {
                                                                          GHC.Event.Control.CMsgWakeup ->
                                                                              Unit# [GHC.Tuple.()];
                                                                          GHC.Event.Control.CMsgDie ->
                                                                              case
                                                                                  writeMutVar# [dt1_savbM
                                                                                                GHC.Event.TimerManager.Finished
                                                                                                GHC.Prim.void#]
                                                                              of
                                                                              s2#_savcC
                                                                              { (##) ->
                                                                                    Unit# [GHC.Tuple.()];
                                                                              };
                                                                          GHC.Event.Control.CMsgSignal dt8_savcD [Occ=Once]
                                                                                                       dt9_savcE [Occ=Once]
                                                                                                       dt10_savcF [Occ=Once] ->
                                                                              let {
                                                                                sat_savcH [Occ=Once]
                                                                                  :: GHC.Conc.Signal.Signal
                                                                                [LclId] =
                                                                                    CCCS GHC.Int.I32#! [dt10_savcF]; } in
                                                                              let {
                                                                                sat_savcG [Occ=Once]
                                                                                  :: GHC.ForeignPtr.ForeignPtr
                                                                                       GHC.Word.Word8
                                                                                [LclId] =
                                                                                    CCCS GHC.ForeignPtr.ForeignPtr! [dt8_savcD
                                                                                                                     dt9_savcE];
                                                                              } in 
                                                                                GHC.Conc.Signal.runHandlers1
                                                                                    sat_savcG
                                                                                    sat_savcH
                                                                                    GHC.Prim.void#;
                                                                        };
                                                                  };
                                                            }; } in
                                                  let {
                                                    sat_savcs [Occ=Once]
                                                      :: GHC.Base.Maybe GHC.Event.Internal.Timeout
                                                    [LclId] =
                                                        CCCS GHC.Base.Just! [ipv4_savcp];
                                                  } in 
                                                    case
                                                        bPoll_savbV
                                                            bState_savbU
                                                            sat_savcs
                                                            sat_savcI
                                                            GHC.Prim.void#
                                                    of
                                                    { Unit# _ [Occ=Dead] ->
                                                          case
                                                              readMutVar# [dt1_savbM GHC.Prim.void#]
                                                          of
                                                          { Unit# ipv8_savcO [Occ=Once] ->
                                                                case ipv8_savcO of state_savcP {
                                                                  __DEFAULT ->
                                                                      let {
                                                                        sat_savcR [Occ=Once]
                                                                          :: GHC.Types.Bool
                                                                        [LclId] =
                                                                            [state_savcP] \u []
                                                                                case
                                                                                    state_savcP
                                                                                of
                                                                                { __DEFAULT ->
                                                                                      GHC.Types.False [];
                                                                                  GHC.Event.TimerManager.Running ->
                                                                                      GHC.Types.True [];
                                                                                };
                                                                      } in  Unit# [sat_savcR];
                                                                };
                                                          };
                                                    };
                                        } in 
                                          let-no-escape {
                                            go_savcS [Occ=LoopBreakerT[2]]
                                              :: [GHC.Event.PSQ.Elem
                                                    GHC.Event.TimerManager.TimeoutCallback]
                                                 -> GHC.Prim.State# GHC.Prim.RealWorld
                                                 -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                       GHC.Types.Bool #)
                                            [LclId[JoinId(2)],
                                             Arity=2,
                                             Str=<S,1*U><S,U>,
                                             Unf=OtherCon []] =
                                                sat-only [$w$j_savcq go_savcS] \r [ds7_savcT
                                                                                   void_0E]
                                                    case ds7_savcT of {
                                                      [] -> $w$j_savcq GHC.Prim.void#;
                                                      : y_savcW [Occ=Once!] ys_savcX [Occ=Once] ->
                                                          case y_savcW of {
                                                            GHC.Event.PSQ.E _ [Occ=Dead]
                                                                            _ [Occ=Dead]
                                                                            ds8_savd1 [Occ=Once] ->
                                                                case ds8_savd1 GHC.Prim.void# of {
                                                                  Unit# _ [Occ=Dead] ->
                                                                      go_savcS
                                                                          ys_savcX GHC.Prim.void#;
                                                                };
                                                          };
                                                    };
                                          } in  go_savcS ipv3_savco GHC.Prim.void#;
                                  };
                            };
                    };
              };
        };

GHC.Event.TimerManager.step
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Types.IO GHC.Types.Bool
[GblId,
 Arity=2,
 Str=<L,1*U(U,U,U,A,A,A,U,A,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 void_0E]
        GHC.Event.TimerManager.step1 eta_B2 GHC.Prim.void#;

lvl_rasDV :: GHC.Prim.Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []] =
    "GHC.Event.Manager.loop: state is already "#;

lvl1_rasDW :: GHC.Event.TimerManager.State -> GHC.Types.IO ()
[GblId, Arity=1, Str=<B,1*U>x, Unf=OtherCon []] =
    sat-only [] \r [ipv1_savd5]
        let {
          sat_savd7 [Occ=Once] :: [GHC.Types.Char]
          [LclId] =
              [ipv1_savd5] \u []
                  case ipv1_savd5 of {
                    __DEFAULT -> GHC.Event.TimerManager.$fShowState5;
                    GHC.Event.TimerManager.Finished ->
                        GHC.Event.TimerManager.$fShowState1;
                  };
        } in 
          case
              GHC.CString.unpackAppendCString# lvl_rasDV sat_savd7
          of
          sat_savd8
          { __DEFAULT -> GHC.Err.errorWithoutStackTrace sat_savd8;
          };

lvl2_rasDX
  :: (GHC.Event.TimerManager.State, GHC.Event.TimerManager.State)
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []] =
    CCS_DONT_CARE (,)! [GHC.Event.TimerManager.Running
                        GHC.Event.TimerManager.Created];

lvl3_rasDY
  :: GHC.Event.TimerManager.State
     -> (GHC.Event.TimerManager.State, GHC.Event.TimerManager.State)
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,1*U>m, Unf=OtherCon []] =
    [] \r [a1_savd9]
        case a1_savd9 of wild_savda {
          __DEFAULT -> (,) [wild_savda wild_savda];
          GHC.Event.TimerManager.Created -> lvl2_rasDX;
        };

GHC.Event.TimerManager.$wloop [InlPrag=NOUSERINLINE[0]]
  :: GHC.Event.Internal.Backend
     -> GHC.Prim.MutVar#
          GHC.Prim.RealWorld GHC.Event.TimerManager.TimeoutQueue
     -> GHC.Prim.MutVar# GHC.Prim.RealWorld GHC.Event.TimerManager.State
     -> GHC.Prim.MutableByteArray# GHC.Prim.RealWorld
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Types.Bool
     -> GHC.Prim.MutVar# GHC.Prim.RealWorld GHC.Types.Bool
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=10,
 Str=<S,1*U><L,U><S,U><L,U><L,U><L,U><L,U><L,U><L,U><S,U>,
 Unf=OtherCon []] =
    [] \r [ww_savdb
           ww1_savdc
           ww2_savdd
           ww3_savde
           ww4_savdf
           ww5_savdg
           ww6_savdh
           ww7_savdi
           ww8_savdj
           void_0E]
        case ww_savdb of wild_savdl {
          GHC.Event.Internal.Backend bState_savdm
                                     _ [Occ=Dead]
                                     _ [Occ=Dead]
                                     _ [Occ=Dead]
                                     bDelete_savdq ->
              case atomicModifyMutVar# [ww2_savdd lvl3_rasDY GHC.Prim.void#] of {
                Unit# ipv1_savdt [Occ=Once!] ->
                    case ipv1_savdt of b1_savdu {
                      __DEFAULT ->
                          case
                              writeMutVar# [ww2_savdd
                                            GHC.Event.TimerManager.Finished
                                            GHC.Prim.void#]
                          of
                          s2#_savdv
                          { (##) ->
                                case bDelete_savdq bState_savdm GHC.Prim.void# of {
                                  Unit# _ [Occ=Dead] ->
                                      case
                                          atomicModifyMutVar# [ww8_savdj
                                                               GHC.Event.Control.closeControl2
                                                               GHC.Prim.void#]
                                      of
                                      { Unit# _ [Occ=Dead] ->
                                            case narrow32Int# [ww4_savdf] of sat_savdD {
                                              __DEFAULT ->
                                                  case
                                                      __pkg_ccall base-4.11.0.0 [sat_savdD
                                                                                 GHC.Prim.void#]
                                                  of
                                                  { Unit# _ [Occ=Dead] ->
                                                        case narrow32Int# [ww5_savdg] of sat_savdI {
                                                          __DEFAULT ->
                                                              case
                                                                  __pkg_ccall base-4.11.0.0 [sat_savdI
                                                                                             GHC.Prim.void#]
                                                              of
                                                              { Unit# _ [Occ=Dead] ->
                                                                    case ww7_savdi of {
                                                                      GHC.Types.False ->
                                                                          case
                                                                              narrow32Int# [ww6_savdh]
                                                                          of
                                                                          sat_savdO
                                                                          { __DEFAULT ->
                                                                                case
                                                                                    __pkg_ccall base-4.11.0.0 [sat_savdO
                                                                                                               GHC.Prim.void#]
                                                                                of
                                                                                { Unit# _ [Occ=Dead] ->
                                                                                      lvl1_rasDW
                                                                                          b1_savdu;
                                                                                };
                                                                          };
                                                                      GHC.Types.True ->
                                                                          case
                                                                              __pkg_ccall base-4.11.0.0 [-1#
                                                                                                         GHC.Prim.void#]
                                                                          of
                                                                          { (##) ->
                                                                                case
                                                                                    narrow32Int# [ww6_savdh]
                                                                                of
                                                                                sat_savdX
                                                                                { __DEFAULT ->
                                                                                      case
                                                                                          __pkg_ccall base-4.11.0.0 [sat_savdX
                                                                                                                     GHC.Prim.void#]
                                                                                      of
                                                                                      { Unit# _ [Occ=Dead] ->
                                                                                            lvl1_rasDW
                                                                                                b1_savdu;
                                                                                      };
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                                };
                          };
                      GHC.Event.TimerManager.Created ->
                          case getMaskingState# [GHC.Prim.void#] of {
                            Unit# ipv3_save4 [Occ=Once!] ->
                                let {
                                  go_save5 [Occ=LoopBreaker]
                                    :: GHC.Prim.State# GHC.Prim.RealWorld
                                       -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                  [LclId, Arity=1, Str=<S,U>, Unf=OtherCon []] =
                                      [ww1_savdc
                                       ww2_savdd
                                       ww3_savde
                                       ww4_savdf
                                       ww5_savdg
                                       ww6_savdh
                                       ww7_savdi
                                       ww8_savdj
                                       wild_savdl
                                       go_save5] \r [void_0E]
                                          let {
                                            sat_save7 [Occ=Once]
                                              :: GHC.Event.TimerManager.TimerManager
                                            [LclId] =
                                                CCCS GHC.Event.TimerManager.TimerManager! [wild_savdl
                                                                                           ww1_savdc
                                                                                           ww2_savdd
                                                                                           ww3_savde
                                                                                           ww4_savdf
                                                                                           ww5_savdg
                                                                                           ww6_savdh
                                                                                           ww7_savdi
                                                                                           ww8_savdj];
                                          } in 
                                            case
                                                GHC.Event.TimerManager.step1
                                                    sat_save7 GHC.Prim.void#
                                            of
                                            { Unit# ipv5_savea [Occ=Once!] ->
                                                  case ipv5_savea of {
                                                    GHC.Types.False -> Unit# [GHC.Tuple.()];
                                                    GHC.Types.True -> go_save5 GHC.Prim.void#;
                                                  };
                                            };
                                } in 
                                  case ipv3_save4 of {
                                    __DEFAULT ->
                                        let {
                                          sat_saveL [Occ=Once]
                                            :: GHC.Exception.SomeException
                                               -> GHC.Prim.State# GHC.Prim.RealWorld
                                               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                          [LclId] =
                                              [ww2_savdd
                                               ww4_savdf
                                               ww5_savdg
                                               ww6_savdh
                                               ww7_savdi
                                               ww8_savdj
                                               bState_savdm
                                               bDelete_savdq] \r [e1_savee void_0E]
                                                  case
                                                      writeMutVar# [ww2_savdd
                                                                    GHC.Event.TimerManager.Finished
                                                                    GHC.Prim.void#]
                                                  of
                                                  s2#_saveg
                                                  { (##) ->
                                                        case
                                                            bDelete_savdq
                                                                bState_savdm GHC.Prim.void#
                                                        of
                                                        { Unit# _ [Occ=Dead] ->
                                                              case
                                                                  atomicModifyMutVar# [ww8_savdj
                                                                                       GHC.Event.Control.closeControl2
                                                                                       GHC.Prim.void#]
                                                              of
                                                              { Unit# _ [Occ=Dead] ->
                                                                    case
                                                                        narrow32Int# [ww4_savdf]
                                                                    of
                                                                    sat_saveo
                                                                    { __DEFAULT ->
                                                                          case
                                                                              __pkg_ccall base-4.11.0.0 [sat_saveo
                                                                                                         GHC.Prim.void#]
                                                                          of
                                                                          { Unit# _ [Occ=Dead] ->
                                                                                case
                                                                                    narrow32Int# [ww5_savdg]
                                                                                of
                                                                                sat_savet
                                                                                { __DEFAULT ->
                                                                                      case
                                                                                          __pkg_ccall base-4.11.0.0 [sat_savet
                                                                                                                     GHC.Prim.void#]
                                                                                      of
                                                                                      { Unit# _ [Occ=Dead] ->
                                                                                            case
                                                                                                ww7_savdi
                                                                                            of
                                                                                            { GHC.Types.False ->
                                                                                                  case
                                                                                                      narrow32Int# [ww6_savdh]
                                                                                                  of
                                                                                                  sat_savez
                                                                                                  { __DEFAULT ->
                                                                                                        case
                                                                                                            __pkg_ccall base-4.11.0.0 [sat_savez
                                                                                                                                       GHC.Prim.void#]
                                                                                                        of
                                                                                                        { Unit# _ [Occ=Dead] ->
                                                                                                              raiseIO# [e1_savee
                                                                                                                        GHC.Prim.void#];
                                                                                                        };
                                                                                                  };
                                                                                              GHC.Types.True ->
                                                                                                  case
                                                                                                      __pkg_ccall base-4.11.0.0 [-1#
                                                                                                                                 GHC.Prim.void#]
                                                                                                  of
                                                                                                  { (##) ->
                                                                                                        case
                                                                                                            narrow32Int# [ww6_savdh]
                                                                                                        of
                                                                                                        sat_saveH
                                                                                                        { __DEFAULT ->
                                                                                                              case
                                                                                                                  __pkg_ccall base-4.11.0.0 [sat_saveH
                                                                                                                                             GHC.Prim.void#]
                                                                                                              of
                                                                                                              { Unit# _ [Occ=Dead] ->
                                                                                                                    raiseIO# [e1_savee
                                                                                                                              GHC.Prim.void#];
                                                                                                              };
                                                                                                        };
                                                                                                  };
                                                                                            };
                                                                                      };
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  }; } in
                                        let {
                                          sat_saved [Occ=Once]
                                            :: GHC.Prim.State# GHC.Prim.RealWorld
                                               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                          [LclId] =
                                              [go_save5] \r [void_0E]
                                                  maskAsyncExceptions# [go_save5 GHC.Prim.void#];
                                        } in 
                                          case catch# [sat_saved sat_saveL GHC.Prim.void#] of {
                                            Unit# ipv5_saveO [Occ=Once*] ->
                                                case
                                                    writeMutVar# [ww2_savdd
                                                                  GHC.Event.TimerManager.Finished
                                                                  GHC.Prim.void#]
                                                of
                                                s2#_saveP
                                                { (##) ->
                                                      case
                                                          bDelete_savdq bState_savdm GHC.Prim.void#
                                                      of
                                                      { Unit# _ [Occ=Dead] ->
                                                            case
                                                                atomicModifyMutVar# [ww8_savdj
                                                                                     GHC.Event.Control.closeControl2
                                                                                     GHC.Prim.void#]
                                                            of
                                                            { Unit# _ [Occ=Dead] ->
                                                                  case
                                                                      narrow32Int# [ww4_savdf]
                                                                  of
                                                                  sat_saveX
                                                                  { __DEFAULT ->
                                                                        case
                                                                            __pkg_ccall base-4.11.0.0 [sat_saveX
                                                                                                       GHC.Prim.void#]
                                                                        of
                                                                        { Unit# _ [Occ=Dead] ->
                                                                              case
                                                                                  narrow32Int# [ww5_savdg]
                                                                              of
                                                                              sat_savf2
                                                                              { __DEFAULT ->
                                                                                    case
                                                                                        __pkg_ccall base-4.11.0.0 [sat_savf2
                                                                                                                   GHC.Prim.void#]
                                                                                    of
                                                                                    { Unit# _ [Occ=Dead] ->
                                                                                          case
                                                                                              ww7_savdi
                                                                                          of
                                                                                          { GHC.Types.False ->
                                                                                                case
                                                                                                    narrow32Int# [ww6_savdh]
                                                                                                of
                                                                                                sat_savf8
                                                                                                { __DEFAULT ->
                                                                                                      case
                                                                                                          __pkg_ccall base-4.11.0.0 [sat_savf8
                                                                                                                                     GHC.Prim.void#]
                                                                                                      of
                                                                                                      { Unit# _ [Occ=Dead] ->
                                                                                                            Unit# [ipv5_saveO];
                                                                                                      };
                                                                                                };
                                                                                            GHC.Types.True ->
                                                                                                case
                                                                                                    __pkg_ccall base-4.11.0.0 [-1#
                                                                                                                               GHC.Prim.void#]
                                                                                                of
                                                                                                { (##) ->
                                                                                                      case
                                                                                                          narrow32Int# [ww6_savdh]
                                                                                                      of
                                                                                                      sat_savfg
                                                                                                      { __DEFAULT ->
                                                                                                            case
                                                                                                                __pkg_ccall base-4.11.0.0 [sat_savfg
                                                                                                                                           GHC.Prim.void#]
                                                                                                            of
                                                                                                            { Unit# _ [Occ=Dead] ->
                                                                                                                  Unit# [ipv5_saveO];
                                                                                                            };
                                                                                                      };
                                                                                                };
                                                                                          };
                                                                                    };
                                                                              };
                                                                        };
                                                                  };
                                                            };
                                                      };
                                                };
                                          };
                                    0# ->
                                        let {
                                          sat_savgs [Occ=Once]
                                            :: GHC.Prim.State# GHC.Prim.RealWorld
                                               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                          [LclId] =
                                              [ww2_savdd
                                               ww4_savdf
                                               ww5_savdg
                                               ww6_savdh
                                               ww7_savdi
                                               ww8_savdj
                                               bState_savdm
                                               bDelete_savdq
                                               go_save5] \r [void_0E]
                                                  let {
                                                    sat_savfT [Occ=Once]
                                                      :: GHC.Exception.SomeException
                                                         -> GHC.Prim.State# GHC.Prim.RealWorld
                                                         -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                               () #)
                                                    [LclId] =
                                                        [ww2_savdd
                                                         ww4_savdf
                                                         ww5_savdg
                                                         ww6_savdh
                                                         ww7_savdi
                                                         ww8_savdj
                                                         bState_savdm
                                                         bDelete_savdq] \r [e1_savfm void_0E]
                                                            case
                                                                writeMutVar# [ww2_savdd
                                                                              GHC.Event.TimerManager.Finished
                                                                              GHC.Prim.void#]
                                                            of
                                                            s2#_savfo
                                                            { (##) ->
                                                                  case
                                                                      bDelete_savdq
                                                                          bState_savdm
                                                                          GHC.Prim.void#
                                                                  of
                                                                  { Unit# _ [Occ=Dead] ->
                                                                        case
                                                                            atomicModifyMutVar# [ww8_savdj
                                                                                                 GHC.Event.Control.closeControl2
                                                                                                 GHC.Prim.void#]
                                                                        of
                                                                        { Unit# _ [Occ=Dead] ->
                                                                              case
                                                                                  narrow32Int# [ww4_savdf]
                                                                              of
                                                                              sat_savfw
                                                                              { __DEFAULT ->
                                                                                    case
                                                                                        __pkg_ccall base-4.11.0.0 [sat_savfw
                                                                                                                   GHC.Prim.void#]
                                                                                    of
                                                                                    { Unit# _ [Occ=Dead] ->
                                                                                          case
                                                                                              narrow32Int# [ww5_savdg]
                                                                                          of
                                                                                          sat_savfB
                                                                                          { __DEFAULT ->
                                                                                                case
                                                                                                    __pkg_ccall base-4.11.0.0 [sat_savfB
                                                                                                                               GHC.Prim.void#]
                                                                                                of
                                                                                                { Unit# _ [Occ=Dead] ->
                                                                                                      case
                                                                                                          ww7_savdi
                                                                                                      of
                                                                                                      { GHC.Types.False ->
                                                                                                            case
                                                                                                                narrow32Int# [ww6_savdh]
                                                                                                            of
                                                                                                            sat_savfH
                                                                                                            { __DEFAULT ->
                                                                                                                  case
                                                                                                                      __pkg_ccall base-4.11.0.0 [sat_savfH
                                                                                                                                                 GHC.Prim.void#]
                                                                                                                  of
                                                                                                                  { Unit# _ [Occ=Dead] ->
                                                                                                                        raiseIO# [e1_savfm
                                                                                                                                  GHC.Prim.void#];
                                                                                                                  };
                                                                                                            };
                                                                                                        GHC.Types.True ->
                                                                                                            case
                                                                                                                __pkg_ccall base-4.11.0.0 [-1#
                                                                                                                                           GHC.Prim.void#]
                                                                                                            of
                                                                                                            { (##) ->
                                                                                                                  case
                                                                                                                      narrow32Int# [ww6_savdh]
                                                                                                                  of
                                                                                                                  sat_savfP
                                                                                                                  { __DEFAULT ->
                                                                                                                        case
                                                                                                                            __pkg_ccall base-4.11.0.0 [sat_savfP
                                                                                                                                                       GHC.Prim.void#]
                                                                                                                        of
                                                                                                                        { Unit# _ [Occ=Dead] ->
                                                                                                                              raiseIO# [e1_savfm
                                                                                                                                        GHC.Prim.void#];
                                                                                                                        };
                                                                                                                  };
                                                                                                            };
                                                                                                      };
                                                                                                };
                                                                                          };
                                                                                    };
                                                                              };
                                                                        };
                                                                  };
                                                            }; } in
                                                  let {
                                                    sat_savfl [Occ=Once]
                                                      :: GHC.Prim.State# GHC.Prim.RealWorld
                                                         -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                               () #)
                                                    [LclId] =
                                                        [go_save5] \r [void_0E]
                                                            unmaskAsyncExceptions# [go_save5
                                                                                    GHC.Prim.void#];
                                                  } in 
                                                    case
                                                        catch# [sat_savfl sat_savfT GHC.Prim.void#]
                                                    of
                                                    { Unit# ipv5_savfW [Occ=Once*] ->
                                                          case
                                                              writeMutVar# [ww2_savdd
                                                                            GHC.Event.TimerManager.Finished
                                                                            GHC.Prim.void#]
                                                          of
                                                          s2#_savfX
                                                          { (##) ->
                                                                case
                                                                    bDelete_savdq
                                                                        bState_savdm GHC.Prim.void#
                                                                of
                                                                { Unit# _ [Occ=Dead] ->
                                                                      case
                                                                          atomicModifyMutVar# [ww8_savdj
                                                                                               GHC.Event.Control.closeControl2
                                                                                               GHC.Prim.void#]
                                                                      of
                                                                      { Unit# _ [Occ=Dead] ->
                                                                            case
                                                                                narrow32Int# [ww4_savdf]
                                                                            of
                                                                            sat_savg5
                                                                            { __DEFAULT ->
                                                                                  case
                                                                                      __pkg_ccall base-4.11.0.0 [sat_savg5
                                                                                                                 GHC.Prim.void#]
                                                                                  of
                                                                                  { Unit# _ [Occ=Dead] ->
                                                                                        case
                                                                                            narrow32Int# [ww5_savdg]
                                                                                        of
                                                                                        sat_savga
                                                                                        { __DEFAULT ->
                                                                                              case
                                                                                                  __pkg_ccall base-4.11.0.0 [sat_savga
                                                                                                                             GHC.Prim.void#]
                                                                                              of
                                                                                              { Unit# _ [Occ=Dead] ->
                                                                                                    case
                                                                                                        ww7_savdi
                                                                                                    of
                                                                                                    { GHC.Types.False ->
                                                                                                          case
                                                                                                              narrow32Int# [ww6_savdh]
                                                                                                          of
                                                                                                          sat_savgg
                                                                                                          { __DEFAULT ->
                                                                                                                case
                                                                                                                    __pkg_ccall base-4.11.0.0 [sat_savgg
                                                                                                                                               GHC.Prim.void#]
                                                                                                                of
                                                                                                                { Unit# _ [Occ=Dead] ->
                                                                                                                      Unit# [ipv5_savfW];
                                                                                                                };
                                                                                                          };
                                                                                                      GHC.Types.True ->
                                                                                                          case
                                                                                                              __pkg_ccall base-4.11.0.0 [-1#
                                                                                                                                         GHC.Prim.void#]
                                                                                                          of
                                                                                                          { (##) ->
                                                                                                                case
                                                                                                                    narrow32Int# [ww6_savdh]
                                                                                                                of
                                                                                                                sat_savgo
                                                                                                                { __DEFAULT ->
                                                                                                                      case
                                                                                                                          __pkg_ccall base-4.11.0.0 [sat_savgo
                                                                                                                                                     GHC.Prim.void#]
                                                                                                                      of
                                                                                                                      { Unit# _ [Occ=Dead] ->
                                                                                                                            Unit# [ipv5_savfW];
                                                                                                                      };
                                                                                                                };
                                                                                                          };
                                                                                                    };
                                                                                              };
                                                                                        };
                                                                                  };
                                                                            };
                                                                      };
                                                                };
                                                          };
                                                    };
                                        } in  maskAsyncExceptions# [sat_savgs GHC.Prim.void#];
                                    1# ->
                                        let {
                                          sat_savh1 [Occ=Once]
                                            :: GHC.Exception.SomeException
                                               -> GHC.Prim.State# GHC.Prim.RealWorld
                                               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                          [LclId] =
                                              [ww2_savdd
                                               ww4_savdf
                                               ww5_savdg
                                               ww6_savdh
                                               ww7_savdi
                                               ww8_savdj
                                               bState_savdm
                                               bDelete_savdq] \r [e1_savgu void_0E]
                                                  case
                                                      writeMutVar# [ww2_savdd
                                                                    GHC.Event.TimerManager.Finished
                                                                    GHC.Prim.void#]
                                                  of
                                                  s2#_savgw
                                                  { (##) ->
                                                        case
                                                            bDelete_savdq
                                                                bState_savdm GHC.Prim.void#
                                                        of
                                                        { Unit# _ [Occ=Dead] ->
                                                              case
                                                                  atomicModifyMutVar# [ww8_savdj
                                                                                       GHC.Event.Control.closeControl2
                                                                                       GHC.Prim.void#]
                                                              of
                                                              { Unit# _ [Occ=Dead] ->
                                                                    case
                                                                        narrow32Int# [ww4_savdf]
                                                                    of
                                                                    sat_savgE
                                                                    { __DEFAULT ->
                                                                          case
                                                                              __pkg_ccall base-4.11.0.0 [sat_savgE
                                                                                                         GHC.Prim.void#]
                                                                          of
                                                                          { Unit# _ [Occ=Dead] ->
                                                                                case
                                                                                    narrow32Int# [ww5_savdg]
                                                                                of
                                                                                sat_savgJ
                                                                                { __DEFAULT ->
                                                                                      case
                                                                                          __pkg_ccall base-4.11.0.0 [sat_savgJ
                                                                                                                     GHC.Prim.void#]
                                                                                      of
                                                                                      { Unit# _ [Occ=Dead] ->
                                                                                            case
                                                                                                ww7_savdi
                                                                                            of
                                                                                            { GHC.Types.False ->
                                                                                                  case
                                                                                                      narrow32Int# [ww6_savdh]
                                                                                                  of
                                                                                                  sat_savgP
                                                                                                  { __DEFAULT ->
                                                                                                        case
                                                                                                            __pkg_ccall base-4.11.0.0 [sat_savgP
                                                                                                                                       GHC.Prim.void#]
                                                                                                        of
                                                                                                        { Unit# _ [Occ=Dead] ->
                                                                                                              raiseIO# [e1_savgu
                                                                                                                        GHC.Prim.void#];
                                                                                                        };
                                                                                                  };
                                                                                              GHC.Types.True ->
                                                                                                  case
                                                                                                      __pkg_ccall base-4.11.0.0 [-1#
                                                                                                                                 GHC.Prim.void#]
                                                                                                  of
                                                                                                  { (##) ->
                                                                                                        case
                                                                                                            narrow32Int# [ww6_savdh]
                                                                                                        of
                                                                                                        sat_savgX
                                                                                                        { __DEFAULT ->
                                                                                                              case
                                                                                                                  __pkg_ccall base-4.11.0.0 [sat_savgX
                                                                                                                                             GHC.Prim.void#]
                                                                                                              of
                                                                                                              { Unit# _ [Occ=Dead] ->
                                                                                                                    raiseIO# [e1_savgu
                                                                                                                              GHC.Prim.void#];
                                                                                                              };
                                                                                                        };
                                                                                                  };
                                                                                            };
                                                                                      };
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  }; } in
                                        let {
                                          sat_savgt [Occ=Once]
                                            :: GHC.Prim.State# GHC.Prim.RealWorld
                                               -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                                          [LclId] =
                                              [go_save5] \r [void_0E]
                                                  maskUninterruptible# [go_save5 GHC.Prim.void#];
                                        } in 
                                          case catch# [sat_savgt sat_savh1 GHC.Prim.void#] of {
                                            Unit# ipv5_savh4 [Occ=Once*] ->
                                                case
                                                    writeMutVar# [ww2_savdd
                                                                  GHC.Event.TimerManager.Finished
                                                                  GHC.Prim.void#]
                                                of
                                                s2#_savh5
                                                { (##) ->
                                                      case
                                                          bDelete_savdq bState_savdm GHC.Prim.void#
                                                      of
                                                      { Unit# _ [Occ=Dead] ->
                                                            case
                                                                atomicModifyMutVar# [ww8_savdj
                                                                                     GHC.Event.Control.closeControl2
                                                                                     GHC.Prim.void#]
                                                            of
                                                            { Unit# _ [Occ=Dead] ->
                                                                  case
                                                                      narrow32Int# [ww4_savdf]
                                                                  of
                                                                  sat_savhd
                                                                  { __DEFAULT ->
                                                                        case
                                                                            __pkg_ccall base-4.11.0.0 [sat_savhd
                                                                                                       GHC.Prim.void#]
                                                                        of
                                                                        { Unit# _ [Occ=Dead] ->
                                                                              case
                                                                                  narrow32Int# [ww5_savdg]
                                                                              of
                                                                              sat_savhi
                                                                              { __DEFAULT ->
                                                                                    case
                                                                                        __pkg_ccall base-4.11.0.0 [sat_savhi
                                                                                                                   GHC.Prim.void#]
                                                                                    of
                                                                                    { Unit# _ [Occ=Dead] ->
                                                                                          case
                                                                                              ww7_savdi
                                                                                          of
                                                                                          { GHC.Types.False ->
                                                                                                case
                                                                                                    narrow32Int# [ww6_savdh]
                                                                                                of
                                                                                                sat_savho
                                                                                                { __DEFAULT ->
                                                                                                      case
                                                                                                          __pkg_ccall base-4.11.0.0 [sat_savho
                                                                                                                                     GHC.Prim.void#]
                                                                                                      of
                                                                                                      { Unit# _ [Occ=Dead] ->
                                                                                                            Unit# [ipv5_savh4];
                                                                                                      };
                                                                                                };
                                                                                            GHC.Types.True ->
                                                                                                case
                                                                                                    __pkg_ccall base-4.11.0.0 [-1#
                                                                                                                               GHC.Prim.void#]
                                                                                                of
                                                                                                { (##) ->
                                                                                                      case
                                                                                                          narrow32Int# [ww6_savdh]
                                                                                                      of
                                                                                                      sat_savhw
                                                                                                      { __DEFAULT ->
                                                                                                            case
                                                                                                                __pkg_ccall base-4.11.0.0 [sat_savhw
                                                                                                                                           GHC.Prim.void#]
                                                                                                            of
                                                                                                            { Unit# _ [Occ=Dead] ->
                                                                                                                  Unit# [ipv5_savh4];
                                                                                                            };
                                                                                                      };
                                                                                                };
                                                                                          };
                                                                                    };
                                                                              };
                                                                        };
                                                                  };
                                                            };
                                                      };
                                                };
                                          };
                                  };
                          };
                      GHC.Event.TimerManager.Dying ->
                          case
                              writeMutVar# [ww2_savdd
                                            GHC.Event.TimerManager.Finished
                                            GHC.Prim.void#]
                          of
                          s2#_savhA
                          { (##) ->
                                case bDelete_savdq bState_savdm GHC.Prim.void# of {
                                  Unit# _ [Occ=Dead] ->
                                      case
                                          atomicModifyMutVar# [ww8_savdj
                                                               GHC.Event.Control.closeControl2
                                                               GHC.Prim.void#]
                                      of
                                      { Unit# _ [Occ=Dead] ->
                                            case narrow32Int# [ww4_savdf] of sat_savhI {
                                              __DEFAULT ->
                                                  case
                                                      __pkg_ccall base-4.11.0.0 [sat_savhI
                                                                                 GHC.Prim.void#]
                                                  of
                                                  { Unit# _ [Occ=Dead] ->
                                                        case narrow32Int# [ww5_savdg] of sat_savhN {
                                                          __DEFAULT ->
                                                              case
                                                                  __pkg_ccall base-4.11.0.0 [sat_savhN
                                                                                             GHC.Prim.void#]
                                                              of
                                                              { Unit# _ [Occ=Dead] ->
                                                                    case ww7_savdi of {
                                                                      GHC.Types.False ->
                                                                          case
                                                                              narrow32Int# [ww6_savdh]
                                                                          of
                                                                          sat_savhT
                                                                          { __DEFAULT ->
                                                                                case
                                                                                    __pkg_ccall base-4.11.0.0 [sat_savhT
                                                                                                               GHC.Prim.void#]
                                                                                of
                                                                                { Unit# _ [Occ=Dead] ->
                                                                                      Unit# [GHC.Tuple.()];
                                                                                };
                                                                          };
                                                                      GHC.Types.True ->
                                                                          case
                                                                              __pkg_ccall base-4.11.0.0 [-1#
                                                                                                         GHC.Prim.void#]
                                                                          of
                                                                          { (##) ->
                                                                                case
                                                                                    narrow32Int# [ww6_savdh]
                                                                                of
                                                                                sat_savi1
                                                                                { __DEFAULT ->
                                                                                      case
                                                                                          __pkg_ccall base-4.11.0.0 [sat_savi1
                                                                                                                     GHC.Prim.void#]
                                                                                      of
                                                                                      { Unit# _ [Occ=Dead] ->
                                                                                            Unit# [GHC.Tuple.()];
                                                                                      };
                                                                                };
                                                                          };
                                                                    };
                                                              };
                                                        };
                                                  };
                                            };
                                      };
                                };
                          };
                    };
              };
        };

GHC.Event.TimerManager.loop1 [InlPrag=NOUSERINLINE[0]]
  :: GHC.Event.TimerManager.TimerManager
     -> GHC.Prim.State# GHC.Prim.RealWorld
     -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
[GblId,
 Arity=2,
 Str=<S(SSSSSSSSS),1*U(U,U,U,U,U,U,U,U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [w_savi5 void_0E]
        case w_savi5 of {
          GHC.Event.TimerManager.TimerManager ww1_savi8 [Occ=Once]
                                              ww2_savi9 [Occ=Once]
                                              ww3_savia [Occ=Once]
                                              ww4_savib [Occ=Once]
                                              ww5_savic [Occ=Once]
                                              ww6_savid [Occ=Once]
                                              ww7_savie [Occ=Once]
                                              ww8_savif [Occ=Once]
                                              ww9_savig [Occ=Once] ->
              GHC.Event.TimerManager.$wloop
                  ww1_savi8
                  ww2_savi9
                  ww3_savia
                  ww4_savib
                  ww5_savic
                  ww6_savid
                  ww7_savie
                  ww8_savif
                  ww9_savig
                  GHC.Prim.void#;
        };

GHC.Event.TimerManager.loop
  :: GHC.Event.TimerManager.TimerManager -> GHC.Types.IO ()
[GblId,
 Arity=2,
 Str=<S(SSSSSSSSS),1*U(U,U,U,U,U,U,U,U,U)><S,U>,
 Unf=OtherCon []] =
    [] \r [eta_B2 void_0E]
        GHC.Event.TimerManager.loop1 eta_B2 GHC.Prim.void#;

GHC.Event.TimerManager.TimerManager
  :: GHC.Event.Internal.Backend
     -> GHC.Prim.MutVar#
          GHC.Prim.RealWorld GHC.Event.TimerManager.TimeoutQueue
     -> GHC.Prim.MutVar# GHC.Prim.RealWorld GHC.Event.TimerManager.State
     -> GHC.Prim.MutableByteArray# GHC.Prim.RealWorld
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Prim.Int#
     -> GHC.Types.Bool
     -> GHC.Prim.MutVar# GHC.Prim.RealWorld GHC.Types.Bool
     -> GHC.Event.TimerManager.TimerManager
[GblId[DataCon],
 Arity=9,
 Caf=NoCafRefs,
 Str=<L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U><L,U>m,
 Unf=OtherCon []] =
    [] \r [eta_B9
           eta_B8
           eta_B7
           eta_B6
           eta_B5
           eta_B4
           eta_B3
           eta_B2
           eta_B1]
        GHC.Event.TimerManager.TimerManager [eta_B9
                                             eta_B8
                                             eta_B7
                                             eta_B6
                                             eta_B5
                                             eta_B4
                                             eta_B3
                                             eta_B2
                                             eta_B1];

GHC.Event.TimerManager.Created :: GHC.Event.TimerManager.State
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Event.TimerManager.Created! [];

GHC.Event.TimerManager.Running :: GHC.Event.TimerManager.State
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Event.TimerManager.Running! [];

GHC.Event.TimerManager.Dying :: GHC.Event.TimerManager.State
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Event.TimerManager.Dying! [];

GHC.Event.TimerManager.Finished :: GHC.Event.TimerManager.State
[GblId[DataCon], Caf=NoCafRefs, Unf=OtherCon []] =
    CCS_DONT_CARE GHC.Event.TimerManager.Finished! [];

