
==================== Tidy Core ====================
2018-03-16 16:05:31.912126786 UTC

Result size of Tidy Core
  = {terms: 3,909, types: 6,456, coercions: 371, joins: 16/55}

-- RHS size: {terms: 38, types: 50, coercions: 2, joins: 0/0}
GHC.Event.Manager.$WEventManager [InlPrag=INLINE[2]]
  :: Backend
     -> Array Int (MVar (IntTable [FdData]))
     -> IORef State
     -> UniqueSource
     -> Control
     -> MVar ()
     -> EventManager
[GblId[DataConWrapper],
 Arity=6,
 Caf=NoCafRefs,
 Str=<S,U><S,U><S,U><S,U><S,U><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=6,unsat_ok=True,boring_ok=False)
         Tmpl= \ (dt_aawoV [Occ=Once] :: Backend)
                 (dt_aawoW [Occ=Once!] :: Array Int (MVar (IntTable [FdData])))
                 (dt_aawoX [Occ=Once] :: IORef State)
                 (dt_aawoY [Occ=Once!] :: UniqueSource)
                 (dt_aawoZ [Occ=Once!] :: Control)
                 (dt_aawp0 [Occ=Once!] :: MVar ()) ->
                 case dt_aawoV of dt_Xawp2 { __DEFAULT ->
                 case dt_aawoW of
                 { GHC.Arr.Array dt_aawp7 [Occ=Once] dt_aawp8 [Occ=Once]
                                 dt_aawp9 [Occ=Once] dt_aawpa [Occ=Once] ->
                 case dt_aawoX
                      `cast` (GHC.IORef.N:IORef[0] <State>_N
                              :: (IORef State :: *) ~R# (GHC.STRef.STRef RealWorld State :: *))
                 of
                 { GHC.STRef.STRef dt_aawpc [Occ=Once] ->
                 case dt_aawoY of { GHC.Event.Unique.US dt_aawpd [Occ=Once] ->
                 case dt_aawoZ of
                 { GHC.Event.Control.W dt_aawpe [Occ=Once] dt_aawpf [Occ=Once]
                                       dt_aawpg [Occ=Once] dt_aawph [Occ=Once]
                                       dt_aawpi [Occ=Once] ->
                 case dt_aawp0 of { GHC.MVar.MVar dt_aawpj [Occ=Once] ->
                 GHC.Event.Manager.EventManager
                   dt_Xawp2
                   dt_aawp7
                   dt_aawp8
                   dt_aawp9
                   dt_aawpa
                   dt_aawpc
                   dt_aawpd
                   dt_aawpe
                   dt_aawpf
                   dt_aawpg
                   dt_aawph
                   dt_aawpi
                   dt_aawpj
                 }
                 }
                 }
                 }
                 }
                 }}]
GHC.Event.Manager.$WEventManager
  = \ (dt_aawoV [Occ=Once] :: Backend)
      (dt_aawoW [Occ=Once!] :: Array Int (MVar (IntTable [FdData])))
      (dt_aawoX [Occ=Once] :: IORef State)
      (dt_aawoY [Occ=Once!] :: UniqueSource)
      (dt_aawoZ [Occ=Once!] :: Control)
      (dt_aawp0 [Occ=Once!] :: MVar ()) ->
      case dt_aawoV of dt_Xawp2 { __DEFAULT ->
      case dt_aawoW of
      { GHC.Arr.Array dt_aawp7 [Occ=Once] dt_aawp8 [Occ=Once]
                      dt_aawp9 [Occ=Once] dt_aawpa [Occ=Once] ->
      case dt_aawoX
           `cast` (GHC.IORef.N:IORef[0] <State>_N
                   :: (IORef State :: *) ~R# (GHC.STRef.STRef RealWorld State :: *))
      of
      { GHC.STRef.STRef dt_aawpc [Occ=Once] ->
      case dt_aawoY of { GHC.Event.Unique.US dt_aawpd [Occ=Once] ->
      case dt_aawoZ of
      { GHC.Event.Control.W dt_aawpe [Occ=Once] dt_aawpf [Occ=Once]
                            dt_aawpg [Occ=Once] dt_aawph [Occ=Once] dt_aawpi [Occ=Once] ->
      case dt_aawp0 of { GHC.MVar.MVar dt_aawpj [Occ=Once] ->
      GHC.Event.Manager.EventManager
        dt_Xawp2
        dt_aawp7
        dt_aawp8
        dt_aawp9
        dt_aawpa
        dt_aawpc
        dt_aawpd
        dt_aawpe
        dt_aawpf
        dt_aawpg
        dt_aawph
        dt_aawpi
        dt_aawpj
      }
      }
      }
      }
      }
      }

-- RHS size: {terms: 11, types: 6, coercions: 4, joins: 0/0}
GHC.Event.Manager.$WFdKey [InlPrag=INLINE[2]]
  :: Fd -> Unique -> FdKey
[GblId[DataConWrapper],
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,U><S,U>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (dt_aawmM [Occ=Once] :: Fd)
                 (dt_aawmN [Occ=Once] :: Unique) ->
                 case dt_aawmM
                      `cast` (System.Posix.Types.N:Fd[0] ; Foreign.C.Types.N:CInt[0]
                              :: (Fd :: *) ~R# (GHC.Int.Int32 :: *))
                 of
                 { GHC.Int.I32# dt_aawmP [Occ=Once] ->
                 case dt_aawmN
                      `cast` (GHC.Event.Unique.N:Unique[0]
                              :: (Unique :: *) ~R# (Int :: *))
                 of
                 { I# dt_aawmR [Occ=Once] ->
                 GHC.Event.Manager.FdKey dt_aawmP dt_aawmR
                 }
                 }}]
GHC.Event.Manager.$WFdKey
  = \ (dt_aawmM [Occ=Once] :: Fd) (dt_aawmN [Occ=Once] :: Unique) ->
      case dt_aawmM
           `cast` (System.Posix.Types.N:Fd[0] ; Foreign.C.Types.N:CInt[0]
                   :: (Fd :: *) ~R# (GHC.Int.Int32 :: *))
      of
      { GHC.Int.I32# dt_aawmP [Occ=Once] ->
      case dt_aawmN
           `cast` (GHC.Event.Unique.N:Unique[0]
                   :: (Unique :: *) ~R# (Int :: *))
      of
      { I# dt_aawmR [Occ=Once] ->
      GHC.Event.Manager.FdKey dt_aawmP dt_aawmR
      }
      }

-- RHS size: {terms: 17, types: 9, coercions: 1, joins: 0/0}
GHC.Event.Manager.$WFdData [InlPrag=INLINE[2]]
  :: FdKey -> EventLifetime -> IOCallback -> FdData
[GblId[DataConWrapper],
 Arity=3,
 Caf=NoCafRefs,
 Str=<S,U><S,U><S,U>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=False)
         Tmpl= \ (dt_aawnt [Occ=Once!] :: FdKey)
                 (dt_aawnu [Occ=Once] :: EventLifetime)
                 (dt_aawnv [Occ=Once] :: IOCallback) ->
                 case dt_aawnt of { FdKey dt_aawnw [Occ=Once] dt_aawnx [Occ=Once] ->
                 case dt_aawnu
                      `cast` (GHC.Event.Internal.N:EventLifetime[0]
                              :: (EventLifetime :: *) ~R# (Int :: *))
                 of
                 { I# dt_aawnA [Occ=Once] ->
                 case dt_aawnv of dt_XawnE { __DEFAULT ->
                 GHC.Event.Manager.FdData dt_aawnw dt_aawnx dt_aawnA dt_XawnE
                 }
                 }
                 }}]
GHC.Event.Manager.$WFdData
  = \ (dt_aawnt [Occ=Once!] :: FdKey)
      (dt_aawnu [Occ=Once] :: EventLifetime)
      (dt_aawnv [Occ=Once] :: IOCallback) ->
      case dt_aawnt of { FdKey dt_aawnw [Occ=Once] dt_aawnx [Occ=Once] ->
      case dt_aawnu
           `cast` (GHC.Event.Internal.N:EventLifetime[0]
                   :: (EventLifetime :: *) ~R# (Int :: *))
      of
      { I# dt_aawnA [Occ=Once] ->
      case dt_aawnv of dt_XawnE { __DEFAULT ->
      GHC.Event.Manager.FdData dt_aawnw dt_aawnx dt_aawnA dt_XawnE
      }
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Event.Manager.$fShowState10 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
GHC.Event.Manager.$fShowState10 = "Created"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Event.Manager.$fShowState9 :: [Char]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=True,
         WorkFree=False, Expandable=True, Guidance=IF_ARGS [] 20 0}]
GHC.Event.Manager.$fShowState9
  = unpackCString# GHC.Event.Manager.$fShowState10

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Event.Manager.$fShowState8 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
GHC.Event.Manager.$fShowState8 = "Running"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Event.Manager.$fShowState7 :: [Char]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=True,
         WorkFree=False, Expandable=True, Guidance=IF_ARGS [] 20 0}]
GHC.Event.Manager.$fShowState7
  = unpackCString# GHC.Event.Manager.$fShowState8

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Event.Manager.$fShowState6 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
GHC.Event.Manager.$fShowState6 = "Dying"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Event.Manager.$fShowState5 :: [Char]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=True,
         WorkFree=False, Expandable=True, Guidance=IF_ARGS [] 20 0}]
GHC.Event.Manager.$fShowState5
  = unpackCString# GHC.Event.Manager.$fShowState6

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Event.Manager.$fShowState4 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 40 0}]
GHC.Event.Manager.$fShowState4 = "Releasing"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Event.Manager.$fShowState3 :: [Char]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=True,
         WorkFree=False, Expandable=True, Guidance=IF_ARGS [] 20 0}]
GHC.Event.Manager.$fShowState3
  = unpackCString# GHC.Event.Manager.$fShowState4

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Event.Manager.$fShowState2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
GHC.Event.Manager.$fShowState2 = "Finished"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Event.Manager.$fShowState1 :: [Char]
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=True,
         WorkFree=False, Expandable=True, Guidance=IF_ARGS [] 20 0}]
GHC.Event.Manager.$fShowState1
  = unpackCString# GHC.Event.Manager.$fShowState2

-- RHS size: {terms: 24, types: 8, coercions: 0, joins: 0/0}
GHC.Event.Manager.$w$cshowsPrec1 [InlPrag=NOUSERINLINE[0]]
  :: State -> String -> String
[GblId,
 Arity=2,
 Str=<S,1*U><L,1*U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [180 0] 200 0}]
GHC.Event.Manager.$w$cshowsPrec1
  = \ (w_sazqe :: State) (w1_sazqf :: String) ->
      case w_sazqe of {
        Created -> ++ @ Char GHC.Event.Manager.$fShowState9 w1_sazqf;
        Running -> ++ @ Char GHC.Event.Manager.$fShowState7 w1_sazqf;
        Dying -> ++ @ Char GHC.Event.Manager.$fShowState5 w1_sazqf;
        Releasing -> ++ @ Char GHC.Event.Manager.$fShowState3 w1_sazqf;
        Finished -> ++ @ Char GHC.Event.Manager.$fShowState1 w1_sazqf
      }

-- RHS size: {terms: 6, types: 3, coercions: 0, joins: 0/0}
GHC.Event.Manager.$fShowState_$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: Int -> State -> GHC.Show.ShowS
[GblId,
 Arity=3,
 Str=<L,A><S,1*U><L,1*U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=True)
         Tmpl= \ _ [Occ=Dead]
                 (w1_sazqe [Occ=Once] :: State)
                 (w2_sazqf [Occ=Once] :: String) ->
                 GHC.Event.Manager.$w$cshowsPrec1 w1_sazqe w2_sazqf}]
GHC.Event.Manager.$fShowState_$cshowsPrec
  = \ _ [Occ=Dead] (w1_sazqe :: State) (w2_sazqf :: String) ->
      GHC.Event.Manager.$w$cshowsPrec1 w1_sazqe w2_sazqf

-- RHS size: {terms: 39, types: 8, coercions: 0, joins: 0/0}
GHC.Event.Manager.$fEqState_$c== :: State -> State -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><S,1*U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=IF_ARGS [140 150] 150 100}]
GHC.Event.Manager.$fEqState_$c==
  = \ (ds_dawWH :: State) (ds1_dawWI :: State) ->
      case ds_dawWH of {
        Created ->
          case ds1_dawWI of {
            __DEFAULT -> GHC.Types.False;
            Created -> GHC.Types.True
          };
        Running ->
          case ds1_dawWI of {
            __DEFAULT -> GHC.Types.False;
            Running -> GHC.Types.True
          };
        Dying ->
          case ds1_dawWI of {
            __DEFAULT -> GHC.Types.False;
            Dying -> GHC.Types.True
          };
        Releasing ->
          case ds1_dawWI of {
            __DEFAULT -> GHC.Types.False;
            Releasing -> GHC.Types.True
          };
        Finished ->
          case ds1_dawWI of {
            __DEFAULT -> GHC.Types.False;
            Finished -> GHC.Types.True
          }
      }

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Event.Manager.$fShowFdKey5 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
GHC.Event.Manager.$fShowFdKey5 = "FdKey {"#

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Event.Manager.$fShowFdKey4 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
GHC.Event.Manager.$fShowFdKey4 = "keyFd = "#

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Event.Manager.$fShowFdKey3 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 40 0}]
GHC.Event.Manager.$fShowFdKey3 = "keyUnique = "#

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Event.Manager.$fShowFdKey2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
GHC.Event.Manager.$fShowFdKey2 = "}"#

-- RHS size: {terms: 49, types: 32, coercions: 0, joins: 0/1}
GHC.Event.Manager.$w$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: Int# -> Int# -> Int# -> String -> String
[GblId,
 Arity=4,
 Str=<S,U><L,U><L,U><L,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [0 0 0 0] 401 30}]
GHC.Event.Manager.$w$cshowsPrec
  = \ (ww_sazqp :: Int#)
      (ww1_sazqt :: Int#)
      (ww2_sazqu :: Int#)
      (w_sazqm :: String) ->
      let {
        p_saxAv [Dmd=<L,1*C1(U)>] :: GHC.Show.ShowS
        [LclId, Arity=1, Str=<L,U>, Unf=OtherCon []]
        p_saxAv
          = \ (x1_X7RzC [OS=OneShot] :: String) ->
              unpackAppendCString#
                GHC.Event.Manager.$fShowFdKey5
                (unpackAppendCString#
                   GHC.Event.Manager.$fShowFdKey4
                   (case GHC.Show.$wshowSignedInt
                           0#
                           ww1_sazqt
                           (++
                              @ Char
                              GHC.Show.showCommaSpace1
                              (unpackAppendCString#
                                 GHC.Event.Manager.$fShowFdKey3
                                 (case GHC.Show.$wshowSignedInt 0# ww2_sazqu (GHC.Types.[] @ Char)
                                  of
                                  { (# ww5_iax05, ww6_iax06 #) ->
                                  ++
                                    @ Char
                                    (GHC.Types.: @ Char ww5_iax05 ww6_iax06)
                                    (unpackAppendCString# GHC.Event.Manager.$fShowFdKey2 x1_X7RzC)
                                  })))
                    of
                    { (# ww5_i9gZ0, ww6_i9gZ1 #) ->
                    GHC.Types.: @ Char ww5_i9gZ0 ww6_i9gZ1
                    })) } in
      case >=# ww_sazqp 11# of {
        __DEFAULT -> p_saxAv w_sazqm;
        1# ->
          GHC.Types.:
            @ Char
            GHC.Show.$fShow(,)4
            (p_saxAv (GHC.Types.: @ Char GHC.Show.$fShow(,)2 w_sazqm))
      }

-- RHS size: {terms: 14, types: 8, coercions: 0, joins: 0/0}
GHC.Event.Manager.$fShowFdKey_$cshowsPrec [InlPrag=NOUSERINLINE[0]]
  :: Int -> FdKey -> GHC.Show.ShowS
[GblId,
 Arity=3,
 Str=<S(S),1*U(U)><S(SS),1*U(U,U)><L,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_sazqk [Occ=Once!] :: Int)
                 (w1_sazql [Occ=Once!] :: FdKey)
                 (w2_sazqm [Occ=Once] :: String) ->
                 case w_sazqk of { I# ww1_sazqp [Occ=Once] ->
                 case w1_sazql of
                 { FdKey ww3_sazqt [Occ=Once] ww4_sazqu [Occ=Once] ->
                 GHC.Event.Manager.$w$cshowsPrec
                   ww1_sazqp ww3_sazqt ww4_sazqu w2_sazqm
                 }
                 }}]
GHC.Event.Manager.$fShowFdKey_$cshowsPrec
  = \ (w_sazqk :: Int) (w1_sazql :: FdKey) (w2_sazqm :: String) ->
      case w_sazqk of { I# ww1_sazqp ->
      case w1_sazql of { FdKey ww3_sazqt ww4_sazqu ->
      GHC.Event.Manager.$w$cshowsPrec
        ww1_sazqp ww3_sazqt ww4_sazqu w2_sazqm
      }
      }

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Event.Manager.$fShowFdKey6 :: Int
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Event.Manager.$fShowFdKey6 = GHC.Types.I# 0#

-- RHS size: {terms: 9, types: 5, coercions: 0, joins: 0/0}
GHC.Event.Manager.$fShowFdKey_$cshow :: FdKey -> String
[GblId,
 Arity=1,
 Str=<S(SS),1*U(U,U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (x1_i7Jay [Occ=Once] :: FdKey) ->
                 GHC.Event.Manager.$fShowFdKey_$cshowsPrec
                   GHC.Event.Manager.$fShowFdKey6 x1_i7Jay (GHC.Types.[] @ Char)}]
GHC.Event.Manager.$fShowFdKey_$cshow
  = \ (x1_i7Jay :: FdKey) ->
      case x1_i7Jay of { FdKey ww1_sazqt ww2_sazqu ->
      GHC.Event.Manager.$w$cshowsPrec
        0# ww1_sazqt ww2_sazqu (GHC.Types.[] @ Char)
      }

-- RHS size: {terms: 10, types: 5, coercions: 0, joins: 0/0}
GHC.Event.Manager.$fShowFdKey1 :: FdKey -> GHC.Show.ShowS
[GblId,
 Arity=2,
 Str=<S(SS),1*U(U,U)><L,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [20 0] 60 0}]
GHC.Event.Manager.$fShowFdKey1
  = \ (w_sazql :: FdKey) (w1_sazqm :: String) ->
      case w_sazql of { FdKey ww1_sazqt ww2_sazqu ->
      GHC.Event.Manager.$w$cshowsPrec 0# ww1_sazqt ww2_sazqu w1_sazqm
      }

-- RHS size: {terms: 6, types: 4, coercions: 0, joins: 0/0}
GHC.Event.Manager.$fShowFdKey_$cshowList
  :: [FdKey] -> GHC.Show.ShowS
[GblId,
 Arity=2,
 Str=<S,1*U><L,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ls_i7JaB [Occ=Once] :: [FdKey])
                 (s_i7JaC [Occ=Once] :: String) ->
                 GHC.Show.showList__
                   @ FdKey GHC.Event.Manager.$fShowFdKey1 ls_i7JaB s_i7JaC}]
GHC.Event.Manager.$fShowFdKey_$cshowList
  = \ (ls_i7JaB :: [FdKey]) (s_i7JaC :: String) ->
      GHC.Show.showList__
        @ FdKey GHC.Event.Manager.$fShowFdKey1 ls_i7JaB s_i7JaC

-- RHS size: {terms: 4, types: 1, coercions: 0, joins: 0/0}
GHC.Event.Manager.$fShowFdKey [InlPrag=NOUSERINLINE CONLIKE]
  :: Show FdKey
[GblId[DFunId],
 Str=m,
 Unf=DFun: \ ->
       GHC.Show.C:Show TYPE: FdKey
                       GHC.Event.Manager.$fShowFdKey_$cshowsPrec
                       GHC.Event.Manager.$fShowFdKey_$cshow
                       GHC.Event.Manager.$fShowFdKey_$cshowList]
GHC.Event.Manager.$fShowFdKey
  = GHC.Show.C:Show
      @ FdKey
      GHC.Event.Manager.$fShowFdKey_$cshowsPrec
      GHC.Event.Manager.$fShowFdKey_$cshow
      GHC.Event.Manager.$fShowFdKey_$cshowList

-- RHS size: {terms: 6, types: 4, coercions: 2, joins: 0/0}
keyUnique :: FdKey -> Unique
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LS),1*U(A,U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_dawWx [Occ=Once!] :: FdKey) ->
                 case ds_dawWx of { FdKey _ [Occ=Dead] dt1_dawZu [Occ=Once] ->
                 (GHC.Types.I# dt1_dawZu)
                 `cast` (Sym (GHC.Event.Unique.N:Unique[0])
                         :: (Int :: *) ~R# (Unique :: *))
                 }}]
keyUnique
  = \ (ds_dawWx :: FdKey) ->
      case ds_dawWx of { FdKey dt_dawZt dt1_dawZu ->
      (GHC.Types.I# dt1_dawZu)
      `cast` (Sym (GHC.Event.Unique.N:Unique[0])
              :: (Int :: *) ~R# (Unique :: *))
      }

-- RHS size: {terms: 6, types: 4, coercions: 5, joins: 0/0}
keyFd :: FdKey -> Fd
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,A)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_dawWt [Occ=Once!] :: FdKey) ->
                 case ds_dawWt of { FdKey dt_dawZr [Occ=Once] _ [Occ=Dead] ->
                 (GHC.Int.I32# dt_dawZr)
                 `cast` (Sym (Foreign.C.Types.N:CInt[0]) ; Sym (System.Posix.Types.N:Fd[0])
                         :: (GHC.Int.Int32 :: *) ~R# (Fd :: *))
                 }}]
keyFd
  = \ (ds_dawWt :: FdKey) ->
      case ds_dawWt of { FdKey dt_dawZr dt1_dawZs ->
      (GHC.Int.I32# dt_dawZr)
      `cast` (Sym (Foreign.C.Types.N:CInt[0]) ; Sym (System.Posix.Types.N:Fd[0])
              :: (GHC.Int.Int32 :: *) ~R# (Fd :: *))
      }

-- RHS size: {terms: 5, types: 6, coercions: 0, joins: 0/0}
_fdCallback :: FdData -> IOCallback
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLS),1*U(A,A,A,U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_dawWo [Occ=Once!] :: FdData) ->
                 case ds_dawWo of
                 { FdData _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead]
                          ds1_dawWr [Occ=Once] ->
                 ds1_dawWr
                 }}]
_fdCallback
  = \ (ds_dawWo :: FdData) ->
      case ds_dawWo of { FdData dt_dawZo dt1_dawZp dt2_dawZq ds1_dawWr ->
      ds1_dawWr
      }

-- RHS size: {terms: 6, types: 6, coercions: 2, joins: 0/0}
fdEvents :: FdData -> EventLifetime
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLSL),1*U(A,A,U,A)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_dawWj [Occ=Once!] :: FdData) ->
                 case ds_dawWj of
                 { FdData _ [Occ=Dead] _ [Occ=Dead] dt2_dawZn [Occ=Once]
                          _ [Occ=Dead] ->
                 (GHC.Types.I# dt2_dawZn)
                 `cast` (Sym (GHC.Event.Internal.N:EventLifetime[0])
                         :: (Int :: *) ~R# (EventLifetime :: *))
                 }}]
fdEvents
  = \ (ds_dawWj :: FdData) ->
      case ds_dawWj of { FdData dt_dawZl dt1_dawZm dt2_dawZn ds1_dawWm ->
      (GHC.Types.I# dt2_dawZn)
      `cast` (Sym (GHC.Event.Internal.N:EventLifetime[0])
              :: (Int :: *) ~R# (EventLifetime :: *))
      }

-- RHS size: {terms: 7, types: 6, coercions: 0, joins: 0/0}
fdKey :: FdData -> FdKey
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SSLL),1*U(U,U,A,A)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_dawWe [Occ=Once!] :: FdData) ->
                 case ds_dawWe of
                 { FdData dt_dawZi [Occ=Once] dt1_dawZj [Occ=Once] _ [Occ=Dead]
                          _ [Occ=Dead] ->
                 GHC.Event.Manager.FdKey dt_dawZi dt1_dawZj
                 }}]
fdKey
  = \ (ds_dawWe :: FdData) ->
      case ds_dawWe of { FdData dt_dawZi dt1_dawZj dt2_dawZk ds1_dawWh ->
      GHC.Event.Manager.FdKey dt_dawZi dt1_dawZj
      }

-- RHS size: {terms: 6, types: 27, coercions: 0, joins: 0/0}
emLock :: EventManager -> MVar ()
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLLLLLLLLLLS),1*U(A,A,A,A,A,A,A,A,A,A,A,A,U)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_dawW6 [Occ=Once!] :: EventManager) ->
                 case ds_dawW6 of
                 { EventManager _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead]
                                _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead]
                                _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] dt11_dawZh [Occ=Once] ->
                 GHC.MVar.MVar @ () dt11_dawZh
                 }}]
emLock
  = \ (ds_dawW6 :: EventManager) ->
      case ds_dawW6 of
      { EventManager ds1_dawW7 dt_dawZ6 dt1_dawZ7 dt2_dawZ8 dt3_dawZ9
                     dt4_dawZa dt5_dawZb dt6_dawZc dt7_dawZd dt8_dawZe dt9_dawZf
                     dt10_dawZg dt11_dawZh ->
      GHC.MVar.MVar @ () dt11_dawZh
      }

-- RHS size: {terms: 10, types: 26, coercions: 0, joins: 0/0}
emControl :: EventManager -> Control
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLLLLLSSSSSL),1*U(A,A,A,A,A,A,A,U,U,U,U,U,A)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_dawVY [Occ=Once!] :: EventManager) ->
                 case ds_dawVY of
                 { EventManager _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead]
                                _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] dt6_dawZ0 [Occ=Once]
                                dt7_dawZ1 [Occ=Once] dt8_dawZ2 [Occ=Once] dt9_dawZ3 [Occ=Once]
                                dt10_dawZ4 [Occ=Once] _ [Occ=Dead] ->
                 GHC.Event.Control.W
                   dt6_dawZ0 dt7_dawZ1 dt8_dawZ2 dt9_dawZ3 dt10_dawZ4
                 }}]
emControl
  = \ (ds_dawVY :: EventManager) ->
      case ds_dawVY of
      { EventManager ds1_dawVZ dt_dawYU dt1_dawYV dt2_dawYW dt3_dawYX
                     dt4_dawYY dt5_dawYZ dt6_dawZ0 dt7_dawZ1 dt8_dawZ2 dt9_dawZ3
                     dt10_dawZ4 dt11_dawZ5 ->
      GHC.Event.Control.W
        dt6_dawZ0 dt7_dawZ1 dt8_dawZ2 dt9_dawZ3 dt10_dawZ4
      }

-- RHS size: {terms: 6, types: 26, coercions: 0, joins: 0/0}
emUniqueSource :: EventManager -> UniqueSource
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLLLLSLLLLLL),1*U(A,A,A,A,A,A,U,A,A,A,A,A,A)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_dawVQ [Occ=Once!] :: EventManager) ->
                 case ds_dawVQ of
                 { EventManager _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead]
                                _ [Occ=Dead] _ [Occ=Dead] dt5_dawYN [Occ=Once] _ [Occ=Dead]
                                _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] ->
                 GHC.Event.Unique.US dt5_dawYN
                 }}]
emUniqueSource
  = \ (ds_dawVQ :: EventManager) ->
      case ds_dawVQ of
      { EventManager ds1_dawVR dt_dawYI dt1_dawYJ dt2_dawYK dt3_dawYL
                     dt4_dawYM dt5_dawYN dt6_dawYO dt7_dawYP dt8_dawYQ dt9_dawYR
                     dt10_dawYS dt11_dawYT ->
      GHC.Event.Unique.US dt5_dawYN
      }

-- RHS size: {terms: 6, types: 28, coercions: 3, joins: 0/0}
emState :: EventManager -> IORef State
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLLLLSLLLLLLL),1*U(A,A,A,A,A,U,A,A,A,A,A,A,A)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_dawVI [Occ=Once!] :: EventManager) ->
                 case ds_dawVI of
                 { EventManager _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead]
                                _ [Occ=Dead] dt4_dawYA [Occ=Once] _ [Occ=Dead] _ [Occ=Dead]
                                _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] ->
                 (GHC.STRef.STRef @ RealWorld @ State dt4_dawYA)
                 `cast` (Sym (GHC.IORef.N:IORef[0]) <State>_N
                         :: (GHC.STRef.STRef RealWorld State :: *) ~R# (IORef State :: *))
                 }}]
emState
  = \ (ds_dawVI :: EventManager) ->
      case ds_dawVI of
      { EventManager ds1_dawVJ dt_dawYw dt1_dawYx dt2_dawYy dt3_dawYz
                     dt4_dawYA dt5_dawYB dt6_dawYC dt7_dawYD dt8_dawYE dt9_dawYF
                     dt10_dawYG dt11_dawYH ->
      (GHC.STRef.STRef @ RealWorld @ State dt4_dawYA)
      `cast` (Sym (GHC.IORef.N:IORef[0]) <State>_N
              :: (GHC.STRef.STRef RealWorld State :: *) ~R# (IORef State :: *))
      }

-- RHS size: {terms: 9, types: 31, coercions: 0, joins: 0/0}
emFds :: EventManager -> Array Int (MVar (IntTable [FdData]))
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LSSSSLLLLLLLL),1*U(A,U,U,U,U,A,A,A,A,A,A,A,A)>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_dawVA [Occ=Once!] :: EventManager) ->
                 case ds_dawVA of
                 { EventManager _ [Occ=Dead] dt_dawYk [Occ=Once]
                                dt1_dawYl [Occ=Once] dt2_dawYm [Occ=Once] dt3_dawYn [Occ=Once]
                                _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead]
                                _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] ->
                 GHC.Arr.Array
                   @ Int
                   @ (MVar (IntTable [FdData]))
                   dt_dawYk
                   dt1_dawYl
                   dt2_dawYm
                   dt3_dawYn
                 }}]
emFds
  = \ (ds_dawVA :: EventManager) ->
      case ds_dawVA of
      { EventManager ds1_dawVB dt_dawYk dt1_dawYl dt2_dawYm dt3_dawYn
                     dt4_dawYo dt5_dawYp dt6_dawYq dt7_dawYr dt8_dawYs dt9_dawYt
                     dt10_dawYu dt11_dawYv ->
      GHC.Arr.Array
        @ Int
        @ (MVar (IntTable [FdData]))
        dt_dawYk
        dt1_dawYl
        dt2_dawYm
        dt3_dawYn
      }

-- RHS size: {terms: 5, types: 26, coercions: 0, joins: 0/0}
emBackend :: EventManager -> Backend
[GblId[[RecSel]],
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(SLLLLLLLLLLLL),1*U(U,A,A,A,A,A,A,A,A,A,A,A,A)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_dawVs [Occ=Once!] :: EventManager) ->
                 case ds_dawVs of
                 { EventManager ds1_dawVt [Occ=Once] _ [Occ=Dead] _ [Occ=Dead]
                                _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead]
                                _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] ->
                 ds1_dawVt
                 }}]
emBackend
  = \ (ds_dawVs :: EventManager) ->
      case ds_dawVs of
      { EventManager ds1_dawVt dt_dawY8 dt1_dawY9 dt2_dawYa dt3_dawYb
                     dt4_dawYc dt5_dawYd dt6_dawYe dt7_dawYf dt8_dawYg dt9_dawYh
                     dt10_dawYi dt11_dawYj ->
      ds1_dawVt
      }

-- RHS size: {terms: 1, types: 0, coercions: 3, joins: 0/0}
newDefaultBackend :: IO Backend
[GblId,
 Arity=1,
 Str=<S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.Event.EPoll.new1
               `cast` (Sym (GHC.Types.N:IO[0] <Backend>_R)
                       :: (State# RealWorld -> (# State# RealWorld, Backend #) :: *)
                          ~R# (IO Backend :: *))}]
newDefaultBackend
  = GHC.Event.EPoll.new1
    `cast` (Sym (GHC.Types.N:IO[0] <Backend>_R)
            :: (State# RealWorld -> (# State# RealWorld, Backend #) :: *)
               ~R# (IO Backend :: *))

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Event.Manager.$trModule4 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
GHC.Event.Manager.$trModule4 = "base"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Event.Manager.$trModule3 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Event.Manager.$trModule3
  = GHC.Types.TrNameS GHC.Event.Manager.$trModule4

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Event.Manager.$trModule2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 60 0}]
GHC.Event.Manager.$trModule2 = "GHC.Event.Manager"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Event.Manager.$trModule1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Event.Manager.$trModule1
  = GHC.Types.TrNameS GHC.Event.Manager.$trModule2

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
GHC.Event.Manager.$trModule :: Module
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
GHC.Event.Manager.$trModule
  = GHC.Types.Module
      GHC.Event.Manager.$trModule3 GHC.Event.Manager.$trModule1

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep_raAtw :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep_raAtw
  = GHC.Types.KindRepTyConApp
      GHC.Event.Unique.$tcUnique (GHC.Types.[] @ KindRep)

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep1_raAtx :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep1_raAtx
  = GHC.Types.KindRepTyConApp
      System.Posix.Types.$tcFd (GHC.Types.[] @ KindRep)

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep2_raAty :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep2_raAty
  = GHC.Types.KindRepTyConApp
      GHC.Event.Internal.$tcEvent (GHC.Types.[] @ KindRep)

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep3_raAtz :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep3_raAtz
  = GHC.Types.KindRepTyConApp
      GHC.Event.Internal.$tcEventLifetime (GHC.Types.[] @ KindRep)

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep4_raAtA :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep4_raAtA
  = GHC.Types.KindRepTyConApp
      GHC.Tuple.$tc() (GHC.Types.[] @ KindRep)

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep5_raAtB :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep5_raAtB
  = GHC.Types.KindRepTyConApp
      GHC.Event.Control.$tcControl (GHC.Types.[] @ KindRep)

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep6_raAtC :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep6_raAtC
  = GHC.Types.KindRepTyConApp
      GHC.Event.Unique.$tcUniqueSource (GHC.Types.[] @ KindRep)

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep7_raAtD :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep7_raAtD
  = GHC.Types.KindRepTyConApp
      GHC.Types.$tcInt (GHC.Types.[] @ KindRep)

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep8_raAtE :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep8_raAtE
  = GHC.Types.KindRepTyConApp
      GHC.Event.Internal.$tcBackend (GHC.Types.[] @ KindRep)

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
$krep9_raAtF :: [KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep9_raAtF
  = GHC.Types.: @ KindRep $krep4_raAtA (GHC.Types.[] @ KindRep)

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep10_raAtG :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep10_raAtG
  = GHC.Types.KindRepTyConApp GHC.Types.$tcIO $krep9_raAtF

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep11_raAtH :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep11_raAtH
  = GHC.Types.KindRepTyConApp GHC.MVar.$tcMVar $krep9_raAtF

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep12_raAtI :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep12_raAtI = GHC.Types.KindRepFun $krep2_raAty $krep10_raAtG

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Event.Manager.$tcFdKey2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
GHC.Event.Manager.$tcFdKey2 = "FdKey"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Event.Manager.$tcFdKey1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Event.Manager.$tcFdKey1
  = GHC.Types.TrNameS GHC.Event.Manager.$tcFdKey2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.Event.Manager.$tcFdKey :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.Event.Manager.$tcFdKey
  = GHC.Types.TyCon
      11469896173097407196##
      6069269054622812669##
      GHC.Event.Manager.$trModule
      GHC.Event.Manager.$tcFdKey1
      0#
      GHC.Types.krep$*

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep13_raAtJ :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep13_raAtJ
  = GHC.Types.KindRepTyConApp
      GHC.Event.Manager.$tcFdKey (GHC.Types.[] @ KindRep)

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep14_raAtK :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep14_raAtK = GHC.Types.KindRepFun $krep13_raAtJ $krep12_raAtI

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep15_raAtL :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep15_raAtL = GHC.Types.KindRepFun $krep_raAtw $krep13_raAtJ

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
GHC.Event.Manager.$tc'FdKey1 [InlPrag=NOUSERINLINE[~]] :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
GHC.Event.Manager.$tc'FdKey1
  = GHC.Types.KindRepFun $krep1_raAtx $krep15_raAtL

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Event.Manager.$tc'FdKey3 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
GHC.Event.Manager.$tc'FdKey3 = "'FdKey"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Event.Manager.$tc'FdKey2 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Event.Manager.$tc'FdKey2
  = GHC.Types.TrNameS GHC.Event.Manager.$tc'FdKey3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.Event.Manager.$tc'FdKey :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.Event.Manager.$tc'FdKey
  = GHC.Types.TyCon
      5122964525573573781##
      3523266410810375450##
      GHC.Event.Manager.$trModule
      GHC.Event.Manager.$tc'FdKey2
      0#
      GHC.Event.Manager.$tc'FdKey1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Event.Manager.$tcFdData2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
GHC.Event.Manager.$tcFdData2 = "FdData"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Event.Manager.$tcFdData1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Event.Manager.$tcFdData1
  = GHC.Types.TrNameS GHC.Event.Manager.$tcFdData2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.Event.Manager.$tcFdData :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.Event.Manager.$tcFdData
  = GHC.Types.TyCon
      9572952300930290737##
      248149994861342082##
      GHC.Event.Manager.$trModule
      GHC.Event.Manager.$tcFdData1
      0#
      GHC.Types.krep$*

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep16_raAtM :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep16_raAtM
  = GHC.Types.KindRepTyConApp
      GHC.Event.Manager.$tcFdData (GHC.Types.[] @ KindRep)

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep17_raAtN :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep17_raAtN = GHC.Types.KindRepFun $krep14_raAtK $krep16_raAtM

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep18_raAtO :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep18_raAtO = GHC.Types.KindRepFun $krep3_raAtz $krep17_raAtN

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
GHC.Event.Manager.$tc'FdData1 [InlPrag=NOUSERINLINE[~]] :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
GHC.Event.Manager.$tc'FdData1
  = GHC.Types.KindRepFun $krep13_raAtJ $krep18_raAtO

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Event.Manager.$tc'FdData3 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
GHC.Event.Manager.$tc'FdData3 = "'FdData"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Event.Manager.$tc'FdData2 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Event.Manager.$tc'FdData2
  = GHC.Types.TrNameS GHC.Event.Manager.$tc'FdData3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.Event.Manager.$tc'FdData :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.Event.Manager.$tc'FdData
  = GHC.Types.TyCon
      13006093439393452327##
      3623098721817739111##
      GHC.Event.Manager.$trModule
      GHC.Event.Manager.$tc'FdData2
      0#
      GHC.Event.Manager.$tc'FdData1

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
$krep19_raAtP :: [KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep19_raAtP
  = GHC.Types.: @ KindRep $krep16_raAtM (GHC.Types.[] @ KindRep)

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep20_raAtQ :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep20_raAtQ
  = GHC.Types.KindRepTyConApp GHC.Types.$tc[] $krep19_raAtP

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
$krep21_raAtR :: [KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep21_raAtR
  = GHC.Types.: @ KindRep $krep20_raAtQ (GHC.Types.[] @ KindRep)

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep22_raAtS :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep22_raAtS
  = GHC.Types.KindRepTyConApp
      GHC.Event.IntTable.$tcIntTable $krep21_raAtR

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
$krep23_raAtT :: [KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep23_raAtT
  = GHC.Types.: @ KindRep $krep22_raAtS (GHC.Types.[] @ KindRep)

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep24_raAtU :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep24_raAtU
  = GHC.Types.KindRepTyConApp GHC.MVar.$tcMVar $krep23_raAtT

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
$krep25_raAtV :: [KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep25_raAtV
  = GHC.Types.: @ KindRep $krep24_raAtU (GHC.Types.[] @ KindRep)

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep26_raAtW :: [KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep26_raAtW = GHC.Types.: @ KindRep $krep7_raAtD $krep25_raAtV

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep27_raAtX :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep27_raAtX
  = GHC.Types.KindRepTyConApp GHC.Arr.$tcArray $krep26_raAtW

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Event.Manager.$tcState2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
GHC.Event.Manager.$tcState2 = "State"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Event.Manager.$tcState1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Event.Manager.$tcState1
  = GHC.Types.TrNameS GHC.Event.Manager.$tcState2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.Event.Manager.$tcState :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.Event.Manager.$tcState
  = GHC.Types.TyCon
      7442518771887689078##
      3049393439281173903##
      GHC.Event.Manager.$trModule
      GHC.Event.Manager.$tcState1
      0#
      GHC.Types.krep$*

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
GHC.Event.Manager.$tc'Created1 [InlPrag=NOUSERINLINE[~]] :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
GHC.Event.Manager.$tc'Created1
  = GHC.Types.KindRepTyConApp
      GHC.Event.Manager.$tcState (GHC.Types.[] @ KindRep)

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Event.Manager.$tc'Created3 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
GHC.Event.Manager.$tc'Created3 = "'Created"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Event.Manager.$tc'Created2 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Event.Manager.$tc'Created2
  = GHC.Types.TrNameS GHC.Event.Manager.$tc'Created3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.Event.Manager.$tc'Created :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.Event.Manager.$tc'Created
  = GHC.Types.TyCon
      17846748838152018769##
      13865095201560943193##
      GHC.Event.Manager.$trModule
      GHC.Event.Manager.$tc'Created2
      0#
      GHC.Event.Manager.$tc'Created1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Event.Manager.$tc'Running2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
GHC.Event.Manager.$tc'Running2 = "'Running"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Event.Manager.$tc'Running1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Event.Manager.$tc'Running1
  = GHC.Types.TrNameS GHC.Event.Manager.$tc'Running2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.Event.Manager.$tc'Running :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.Event.Manager.$tc'Running
  = GHC.Types.TyCon
      8784511774161450304##
      13551584807303205071##
      GHC.Event.Manager.$trModule
      GHC.Event.Manager.$tc'Running1
      0#
      GHC.Event.Manager.$tc'Created1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Event.Manager.$tc'Dying2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
GHC.Event.Manager.$tc'Dying2 = "'Dying"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Event.Manager.$tc'Dying1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Event.Manager.$tc'Dying1
  = GHC.Types.TrNameS GHC.Event.Manager.$tc'Dying2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.Event.Manager.$tc'Dying :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.Event.Manager.$tc'Dying
  = GHC.Types.TyCon
      10564881478355389136##
      3106847497763432300##
      GHC.Event.Manager.$trModule
      GHC.Event.Manager.$tc'Dying1
      0#
      GHC.Event.Manager.$tc'Created1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Event.Manager.$tc'Releasing2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 40 0}]
GHC.Event.Manager.$tc'Releasing2 = "'Releasing"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Event.Manager.$tc'Releasing1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Event.Manager.$tc'Releasing1
  = GHC.Types.TrNameS GHC.Event.Manager.$tc'Releasing2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.Event.Manager.$tc'Releasing :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.Event.Manager.$tc'Releasing
  = GHC.Types.TyCon
      3204716164798465120##
      4205553053946559474##
      GHC.Event.Manager.$trModule
      GHC.Event.Manager.$tc'Releasing1
      0#
      GHC.Event.Manager.$tc'Created1

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Event.Manager.$tc'Finished2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 40 0}]
GHC.Event.Manager.$tc'Finished2 = "'Finished"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Event.Manager.$tc'Finished1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Event.Manager.$tc'Finished1
  = GHC.Types.TrNameS GHC.Event.Manager.$tc'Finished2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.Event.Manager.$tc'Finished :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.Event.Manager.$tc'Finished
  = GHC.Types.TyCon
      8866864364616799312##
      2451390217632909923##
      GHC.Event.Manager.$trModule
      GHC.Event.Manager.$tc'Finished1
      0#
      GHC.Event.Manager.$tc'Created1

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
$krep28_raAtY :: [KindRep]
[GblId, Caf=NoCafRefs, Str=m2, Unf=OtherCon []]
$krep28_raAtY
  = GHC.Types.:
      @ KindRep GHC.Event.Manager.$tc'Created1 (GHC.Types.[] @ KindRep)

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep29_raAtZ :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep29_raAtZ
  = GHC.Types.KindRepTyConApp GHC.IORef.$tcIORef $krep28_raAtY

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Event.Manager.$tcEventManager2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 40 0}]
GHC.Event.Manager.$tcEventManager2 = "EventManager"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Event.Manager.$tcEventManager1 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Event.Manager.$tcEventManager1
  = GHC.Types.TrNameS GHC.Event.Manager.$tcEventManager2

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.Event.Manager.$tcEventManager :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.Event.Manager.$tcEventManager
  = GHC.Types.TyCon
      16777685112477180948##
      1210110422135437783##
      GHC.Event.Manager.$trModule
      GHC.Event.Manager.$tcEventManager1
      0#
      GHC.Types.krep$*

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
$krep30_raAu0 :: KindRep
[GblId, Caf=NoCafRefs, Str=m1, Unf=OtherCon []]
$krep30_raAu0
  = GHC.Types.KindRepTyConApp
      GHC.Event.Manager.$tcEventManager (GHC.Types.[] @ KindRep)

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep31_raAu1 :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep31_raAu1 = GHC.Types.KindRepFun $krep11_raAtH $krep30_raAu0

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep32_raAu2 :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep32_raAu2 = GHC.Types.KindRepFun $krep5_raAtB $krep31_raAu1

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep33_raAu3 :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep33_raAu3 = GHC.Types.KindRepFun $krep6_raAtC $krep32_raAu2

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep34_raAu4 :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep34_raAu4 = GHC.Types.KindRepFun $krep29_raAtZ $krep33_raAu3

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
$krep35_raAu5 :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
$krep35_raAu5 = GHC.Types.KindRepFun $krep27_raAtX $krep34_raAu4

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
GHC.Event.Manager.$tc'EventManager1 [InlPrag=NOUSERINLINE[~]]
  :: KindRep
[GblId, Caf=NoCafRefs, Str=m4, Unf=OtherCon []]
GHC.Event.Manager.$tc'EventManager1
  = GHC.Types.KindRepFun $krep8_raAtE $krep35_raAu5

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Event.Manager.$tc'EventManager3 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 50 0}]
GHC.Event.Manager.$tc'EventManager3 = "'EventManager"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Event.Manager.$tc'EventManager2 :: TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Event.Manager.$tc'EventManager2
  = GHC.Types.TrNameS GHC.Event.Manager.$tc'EventManager3

-- RHS size: {terms: 7, types: 0, coercions: 0, joins: 0/0}
GHC.Event.Manager.$tc'EventManager :: TyCon
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 70}]
GHC.Event.Manager.$tc'EventManager
  = GHC.Types.TyCon
      13274036699047731538##
      394780277405469411##
      GHC.Event.Manager.$trModule
      GHC.Event.Manager.$tc'EventManager2
      0#
      GHC.Event.Manager.$tc'EventManager1

-- RHS size: {terms: 13, types: 2, coercions: 0, joins: 0/0}
GHC.Event.Manager.$fShowState_$cshow :: State -> String
[GblId,
 Arity=1,
 Str=<S,1*U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (x1_i7Jay [Occ=Once!] :: State) ->
                 case x1_i7Jay of {
                   Created -> GHC.Event.Manager.$fShowState9;
                   Running -> GHC.Event.Manager.$fShowState7;
                   Dying -> GHC.Event.Manager.$fShowState5;
                   Releasing -> GHC.Event.Manager.$fShowState3;
                   Finished -> GHC.Event.Manager.$fShowState1
                 }}]
GHC.Event.Manager.$fShowState_$cshow
  = \ (x1_i7Jay :: State) ->
      case x1_i7Jay of {
        Created -> GHC.Event.Manager.$fShowState9;
        Running -> GHC.Event.Manager.$fShowState7;
        Dying -> GHC.Event.Manager.$fShowState5;
        Releasing -> GHC.Event.Manager.$fShowState3;
        Finished -> GHC.Event.Manager.$fShowState1
      }

-- RHS size: {terms: 6, types: 4, coercions: 0, joins: 0/0}
GHC.Event.Manager.$fShowState_$cshowList
  :: [State] -> GHC.Show.ShowS
[GblId,
 Arity=2,
 Str=<S,1*U><L,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ls_i7JaB [Occ=Once] :: [State])
                 (s_i7JaC [Occ=Once] :: String) ->
                 GHC.Show.showList__
                   @ State GHC.Event.Manager.$w$cshowsPrec1 ls_i7JaB s_i7JaC}]
GHC.Event.Manager.$fShowState_$cshowList
  = \ (ls_i7JaB :: [State]) (s_i7JaC :: String) ->
      GHC.Show.showList__
        @ State GHC.Event.Manager.$w$cshowsPrec1 ls_i7JaB s_i7JaC

-- RHS size: {terms: 4, types: 1, coercions: 0, joins: 0/0}
GHC.Event.Manager.$fShowState [InlPrag=NOUSERINLINE CONLIKE]
  :: Show State
[GblId[DFunId],
 Str=m,
 Unf=DFun: \ ->
       GHC.Show.C:Show TYPE: State
                       GHC.Event.Manager.$fShowState_$cshowsPrec
                       GHC.Event.Manager.$fShowState_$cshow
                       GHC.Event.Manager.$fShowState_$cshowList]
GHC.Event.Manager.$fShowState
  = GHC.Show.C:Show
      @ State
      GHC.Event.Manager.$fShowState_$cshowsPrec
      GHC.Event.Manager.$fShowState_$cshow
      GHC.Event.Manager.$fShowState_$cshowList

-- RHS size: {terms: 19, types: 10, coercions: 0, joins: 0/0}
GHC.Event.Manager.$fEqFdKey_$c== :: FdKey -> FdKey -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(SL),1*U(U,U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_dawWB [Occ=Once!] :: FdKey)
                 (ds1_dawWC [Occ=Once!] :: FdKey) ->
                 case ds_dawWB of
                 { FdKey dt_dawZv [Occ=Once] dt1_dawZw [Occ=Once] ->
                 case ds1_dawWC of
                 { FdKey dt2_dawZx [Occ=Once] dt3_dawZy [Occ=Once] ->
                 case ==# dt_dawZv dt2_dawZx of {
                   __DEFAULT -> GHC.Types.False;
                   1# -> tagToEnum# @ Bool (==# dt1_dawZw dt3_dawZy)
                 }
                 }
                 }}]
GHC.Event.Manager.$fEqFdKey_$c==
  = \ (ds_dawWB :: FdKey) (ds1_dawWC :: FdKey) ->
      case ds_dawWB of { FdKey dt_dawZv dt1_dawZw ->
      case ds1_dawWC of { FdKey dt2_dawZx dt3_dawZy ->
      case ==# dt_dawZv dt2_dawZx of {
        __DEFAULT -> GHC.Types.False;
        1# -> tagToEnum# @ Bool (==# dt1_dawZw dt3_dawZy)
      }
      }
      }

-- RHS size: {terms: 23, types: 10, coercions: 0, joins: 0/0}
GHC.Event.Manager.$fEqFdKey_$c/= [InlPrag=INLINE (sat-args=2)]
  :: FdKey -> FdKey -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SL),1*U(U,U)><S(SL),1*U(U,U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=False,boring_ok=False)
         Tmpl= \ (x1_a22b [Occ=Once!] :: FdKey)
                 (y_a22c [Occ=Once!] :: FdKey) ->
                 case x1_a22b of { FdKey dt_dawZv [Occ=Once] dt1_dawZw [Occ=Once] ->
                 case y_a22c of { FdKey dt2_dawZx [Occ=Once] dt3_dawZy [Occ=Once] ->
                 case ==# dt_dawZv dt2_dawZx of {
                   __DEFAULT -> GHC.Types.True;
                   1# ->
                     case ==# dt1_dawZw dt3_dawZy of {
                       __DEFAULT -> GHC.Types.True;
                       1# -> GHC.Types.False
                     }
                 }
                 }
                 }}]
GHC.Event.Manager.$fEqFdKey_$c/=
  = \ (eta_B2 :: FdKey) (eta1_B1 :: FdKey) ->
      case eta_B2 of { FdKey dt_dawZv dt1_dawZw ->
      case eta1_B1 of { FdKey dt2_dawZx dt3_dawZy ->
      case ==# dt_dawZv dt2_dawZx of {
        __DEFAULT -> GHC.Types.True;
        1# ->
          case ==# dt1_dawZw dt3_dawZy of {
            __DEFAULT -> GHC.Types.True;
            1# -> GHC.Types.False
          }
      }
      }
      }

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
GHC.Event.Manager.$fEqFdKey [InlPrag=NOUSERINLINE CONLIKE]
  :: Eq FdKey
[GblId[DFunId],
 Caf=NoCafRefs,
 Str=m,
 Unf=DFun: \ ->
       GHC.Classes.C:Eq TYPE: FdKey
                        GHC.Event.Manager.$fEqFdKey_$c==
                        GHC.Event.Manager.$fEqFdKey_$c/=]
GHC.Event.Manager.$fEqFdKey
  = GHC.Classes.C:Eq
      @ FdKey
      GHC.Event.Manager.$fEqFdKey_$c==
      GHC.Event.Manager.$fEqFdKey_$c/=

-- RHS size: {terms: 39, types: 8, coercions: 0, joins: 0/0}
GHC.Event.Manager.$fEqState_$c/= [InlPrag=INLINE (sat-args=2)]
  :: State -> State -> Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S,1*U><S,1*U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=False,boring_ok=False)
         Tmpl= \ (x1_a22b [Occ=Once!] :: State)
                 (y_a22c [Occ=Once*!] :: State) ->
                 case x1_a22b of {
                   Created ->
                     case y_a22c of {
                       __DEFAULT -> GHC.Types.True;
                       Created -> GHC.Types.False
                     };
                   Running ->
                     case y_a22c of {
                       __DEFAULT -> GHC.Types.True;
                       Running -> GHC.Types.False
                     };
                   Dying ->
                     case y_a22c of {
                       __DEFAULT -> GHC.Types.True;
                       Dying -> GHC.Types.False
                     };
                   Releasing ->
                     case y_a22c of {
                       __DEFAULT -> GHC.Types.True;
                       Releasing -> GHC.Types.False
                     };
                   Finished ->
                     case y_a22c of {
                       __DEFAULT -> GHC.Types.True;
                       Finished -> GHC.Types.False
                     }
                 }}]
GHC.Event.Manager.$fEqState_$c/=
  = \ (eta_B2 :: State) (eta1_B1 :: State) ->
      case eta_B2 of {
        Created ->
          case eta1_B1 of {
            __DEFAULT -> GHC.Types.True;
            Created -> GHC.Types.False
          };
        Running ->
          case eta1_B1 of {
            __DEFAULT -> GHC.Types.True;
            Running -> GHC.Types.False
          };
        Dying ->
          case eta1_B1 of {
            __DEFAULT -> GHC.Types.True;
            Dying -> GHC.Types.False
          };
        Releasing ->
          case eta1_B1 of {
            __DEFAULT -> GHC.Types.True;
            Releasing -> GHC.Types.False
          };
        Finished ->
          case eta1_B1 of {
            __DEFAULT -> GHC.Types.True;
            Finished -> GHC.Types.False
          }
      }

-- RHS size: {terms: 3, types: 1, coercions: 0, joins: 0/0}
GHC.Event.Manager.$fEqState [InlPrag=NOUSERINLINE CONLIKE]
  :: Eq State
[GblId[DFunId],
 Caf=NoCafRefs,
 Str=m,
 Unf=DFun: \ ->
       GHC.Classes.C:Eq TYPE: State
                        GHC.Event.Manager.$fEqState_$c==
                        GHC.Event.Manager.$fEqState_$c/=]
GHC.Event.Manager.$fEqState
  = GHC.Classes.C:Eq
      @ State
      GHC.Event.Manager.$fEqState_$c==
      GHC.Event.Manager.$fEqState_$c/=

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl1_raAu6 :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl1_raAu6 = "Int"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl2_raAu7 :: [Char]
[GblId]
lvl2_raAu7 = unpackCString# lvl1_raAu6

-- RHS size: {terms: 10, types: 5, coercions: 0, joins: 0/0}
lvl3_raAu8 :: Int -> Int -> Int# -> Int
[GblId, Arity=3, Str=<B,U><B,U><B,U>x, Unf=OtherCon []]
lvl3_raAu8
  = \ (dt_dawYl :: Int) (dt1_dawYk :: Int) (i1_iax2r :: Int#) ->
      GHC.Arr.$windexError
        @ Int
        @ Int
        GHC.Show.$fShowInt
        dt1_dawYk
        dt_dawYl
        (GHC.Types.I# i1_iax2r)
        lvl2_raAu7

-- RHS size: {terms: 48, types: 52, coercions: 3, joins: 0/1}
callbackTableVar [InlPrag=INLINE (sat-args=2)]
  :: EventManager -> Fd -> MVar (IntTable [FdData])
[GblId,
 Arity=2,
 Str=<S(LS(S)S(S)LSLLLLLLLL),1*U(A,U(U),U(U),A,U,A,A,A,A,A,A,A,A)><S(S),1*U(U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=False,boring_ok=False)
         Tmpl= \ (mgr_aawjO [Occ=Once!] :: EventManager)
                 (fd_aawjP [Occ=Once] :: Fd) ->
                 case mgr_aawjO of
                 { EventManager _ [Occ=Dead] dt_dawYk [Occ=Once!]
                                dt1_dawYl [Occ=Once!] _ [Occ=Dead] dt3_dawYn [Occ=Once]
                                _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead]
                                _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] ->
                 case dt_dawYk of wild1_iax2d { I# m_iax2f ->
                 case dt1_dawYl of wild2_iax2h { I# n_iax2j [Occ=Once] ->
                 case fromIntegral
                        @ Fd
                        @ Int
                        System.Posix.Types.$fIntegralFd
                        GHC.Num.$fNumInt
                        fd_aawjP
                 of
                 { I# x#_i7Sgh [Occ=Once] ->
                 let {
                   i1_iax2r :: Int#
                   [LclId]
                   i1_iax2r = andI# x#_i7Sgh 31# } in
                 join {
                   $j_iax2n [Occ=Once*T[0]] :: MVar (IntTable [FdData])
                   [LclId[JoinId(0)]]
                   $j_iax2n
                     = case GHC.Arr.indexError
                              @ Int
                              @ Int
                              GHC.Show.$fShowInt
                              (wild1_iax2d, wild2_iax2h)
                              (GHC.Types.I# i1_iax2r)
                              (build
                                 @ Char (\ (@ b1_iax2t) -> unpackFoldrCString# @ b1_iax2t "Int"#))
                       of {
                       } } in
                 case <=# m_iax2f i1_iax2r of {
                   __DEFAULT -> jump $j_iax2n;
                   1# ->
                     case <=# i1_iax2r n_iax2j of {
                       __DEFAULT -> jump $j_iax2n;
                       1# ->
                         case indexArray#
                                @ (MVar (IntTable [FdData])) dt3_dawYn (-# i1_iax2r m_iax2f)
                         of
                         { (# ipv_iawOK [Occ=Once] #) ->
                         ipv_iawOK
                         }
                     }
                 }
                 }
                 }
                 }
                 }}]
callbackTableVar
  = \ (mgr_aawjO :: EventManager) (fd_aawjP :: Fd) ->
      case mgr_aawjO of
      { EventManager ds_dawVB dt_dawYk dt1_dawYl dt2_dawYm dt3_dawYn
                     dt4_dawYo dt5_dawYp dt6_dawYq dt7_dawYr dt8_dawYs dt9_dawYt
                     dt10_dawYu dt11_dawYv ->
      case dt_dawYk of wild1_sazXZ { I# m_sazY0 ->
      case dt1_dawYl of wild2_sazY2 { I# n_sazY3 ->
      case fd_aawjP
           `cast` (System.Posix.Types.N:Fd[0] ; Foreign.C.Types.N:CInt[0]
                   :: (Fd :: *) ~R# (GHC.Int.Int32 :: *))
      of
      { GHC.Int.I32# x#_i9h2V ->
      let {
        i1_iax2r [Dmd=<S,U>] :: Int#
        [LclId]
        i1_iax2r = andI# x#_i9h2V 31# } in
      case <=# m_sazY0 i1_iax2r of {
        __DEFAULT ->
          case lvl3_raAu8 wild2_sazY2 wild1_sazXZ i1_iax2r of wild5_00 { };
        1# ->
          case <=# i1_iax2r n_sazY3 of {
            __DEFAULT ->
              case lvl3_raAu8 wild2_sazY2 wild1_sazXZ i1_iax2r of wild5_00 { };
            1# ->
              case indexArray#
                     @ (MVar (IntTable [FdData])) dt3_dawYn (-# i1_iax2r m_sazY0)
              of
              { (# ipv_iawOK #) ->
              ipv_iawOK
              }
          }
      }
      }
      }
      }
      }

-- RHS size: {terms: 5, types: 10, coercions: 0, joins: 0/0}
GHC.Event.Manager.wakeManager1
  :: EventManager -> State# RealWorld -> (# State# RealWorld, () #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,A><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=True)
         Tmpl= \ _ [Occ=Dead] (s_i7IAV [Occ=Once] :: State# RealWorld) ->
                 (# s_i7IAV, GHC.Tuple.() #)}]
GHC.Event.Manager.wakeManager1
  = \ _ [Occ=Dead] (s_i7IAV :: State# RealWorld) ->
      (# s_i7IAV, GHC.Tuple.() #)

-- RHS size: {terms: 1, types: 0, coercions: 5, joins: 0/0}
wakeManager :: EventManager -> IO ()
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<L,A><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.Event.Manager.wakeManager1
               `cast` (<EventManager>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
                       :: (EventManager
                           -> State# RealWorld -> (# State# RealWorld, () #) :: *)
                          ~R# (EventManager -> IO () :: *))}]
wakeManager
  = GHC.Event.Manager.wakeManager1
    `cast` (<EventManager>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
            :: (EventManager
                -> State# RealWorld -> (# State# RealWorld, () #) :: *)
               ~R# (EventManager -> IO () :: *))

-- RHS size: {terms: 70, types: 167, coercions: 2, joins: 0/0}
GHC.Event.Manager.cleanup1
  :: EventManager -> State# RealWorld -> (# State# RealWorld, () #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SLLLLSLLLLSLS),1*U(U,A,A,A,A,U,A,U,U,U,U,U,U)><S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [20 0] 206 60}]
GHC.Event.Manager.cleanup1
  = \ (ds_dawNp :: EventManager) (eta_B1 :: State# RealWorld) ->
      case ds_dawNp of
      { EventManager ds1_dawNB dt_dawWQ dt1_dawWR dt2_dawWS dt3_dawWT
                     dt4_dawWU dt5_dawWV dt6_dawWW dt7_dawWX dt8_dawWY dt9_dawWZ
                     dt10_dawX0 dt11_dawX1 ->
      case ds1_dawNB of
      { GHC.Event.Internal.Backend @ a_sazY8 bState_sazY9 ds2_sazYa
                                   ds3_sazYb ds4_sazYc bDelete_sazYd ->
      case writeMutVar#
             @ RealWorld @ State dt4_dawWU GHC.Event.Manager.Finished eta_B1
      of s2#_i7IBe
      { __DEFAULT ->
      case tryPutMVar# @ RealWorld @ () dt11_dawX1 GHC.Tuple.() s2#_i7IBe
      of
      { (# ipv_iax3e, ipv1_iax3f #) ->
      case ((bDelete_sazYd bState_sazY9)
            `cast` (GHC.Types.N:IO[0] <()>_R
                    :: (IO () :: *)
                       ~R# (State# RealWorld -> (# State# RealWorld, () #) :: *)))
             ipv_iax3e
      of
      { (# ipv2_X7JmM, ipv3_X7JmO #) ->
      case atomicModifyMutVar#
             @ RealWorld
             @ Bool
             @ (Bool, ())
             @ ()
             dt10_dawX0
             GHC.Event.Control.closeControl2
             ipv2_X7JmM
      of
      { (# ipv4_i7JiK, ipv5_i7JiL #) ->
      case {__pkg_ccall base-4.11.0.0 Int#
                           -> State# RealWorld -> (# State# RealWorld, Int# #)}_iao5C
             (narrow32Int# dt6_dawWW) ipv4_i7JiK
      of
      { (# ds8_iao5H, ds9_iao5I #) ->
      case {__pkg_ccall base-4.11.0.0 Int#
                           -> State# RealWorld -> (# State# RealWorld, Int# #)}_iao5C
             (narrow32Int# dt7_dawWX) ds8_iao5H
      of
      { (# ds10_Xao9L, ds11_Xao9N #) ->
      case dt9_dawWZ of {
        False ->
          case {__pkg_ccall base-4.11.0.0 Int#
                           -> State# RealWorld -> (# State# RealWorld, Int# #)}_iao5C
                 (narrow32Int# dt8_dawWY) ds10_Xao9L
          of
          { (# ds12_Xaoa2, ds13_Xaoa4 #) ->
          (# ds12_Xaoa2, GHC.Tuple.() #)
          };
        True ->
          case {__pkg_ccall base-4.11.0.0 Int#
                           -> State# RealWorld -> (# State# RealWorld #)}_dao8Y
                 -1# ds10_Xao9L
          of
          { (# ds12_dao8W #) ->
          case {__pkg_ccall base-4.11.0.0 Int#
                           -> State# RealWorld -> (# State# RealWorld, Int# #)}_iao5C
                 (narrow32Int# dt8_dawWY) ds12_dao8W
          of
          { (# ds13_Xaoa2, ds14_Xaoa4 #) ->
          (# ds13_Xaoa2, GHC.Tuple.() #)
          }
          }
      }
      }
      }
      }
      }
      }
      }
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 5, joins: 0/0}
cleanup :: EventManager -> IO ()
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(SLLLLSLLLLSLS),1*U(U,A,A,A,A,U,A,U,U,U,U,U,U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.Event.Manager.cleanup1
               `cast` (<EventManager>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
                       :: (EventManager
                           -> State# RealWorld -> (# State# RealWorld, () #) :: *)
                          ~R# (EventManager -> IO () :: *))}]
cleanup
  = GHC.Event.Manager.cleanup1
    `cast` (<EventManager>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
            :: (EventManager
                -> State# RealWorld -> (# State# RealWorld, () #) :: *)
               ~R# (EventManager -> IO () :: *))

-- RHS size: {terms: 18, types: 49, coercions: 0, joins: 0/0}
GHC.Event.Manager.finished1
  :: EventManager -> State# RealWorld -> (# State# RealWorld, Bool #)
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(LLLLLSLLLLLLL),1*U(A,A,A,A,A,U,A,A,A,A,A,A,A)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (mgr_aawkp [Occ=Once!] :: EventManager)
                 (s_i7IAv [Occ=Once] :: State# RealWorld) ->
                 case mgr_aawkp of
                 { EventManager _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead]
                                _ [Occ=Dead] dt4_dawYA [Occ=Once] _ [Occ=Dead] _ [Occ=Dead]
                                _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] ->
                 case readMutVar# @ RealWorld @ State dt4_dawYA s_i7IAv of
                 { (# ipv_i7IAy [Occ=Once], ipv1_i7IAz [Occ=Once!] #) ->
                 (# ipv_i7IAy,
                    case ipv1_i7IAz of {
                      __DEFAULT -> GHC.Types.False;
                      Finished -> GHC.Types.True
                    } #)
                 }
                 }}]
GHC.Event.Manager.finished1
  = \ (mgr_aawkp :: EventManager) (s_i7IAv :: State# RealWorld) ->
      case mgr_aawkp of
      { EventManager ds_dawVJ dt_dawYw dt1_dawYx dt2_dawYy dt3_dawYz
                     dt4_dawYA dt5_dawYB dt6_dawYC dt7_dawYD dt8_dawYE dt9_dawYF
                     dt10_dawYG dt11_dawYH ->
      case readMutVar# @ RealWorld @ State dt4_dawYA s_i7IAv of
      { (# ipv_i7IAy, ipv1_i7IAz #) ->
      (# ipv_i7IAy,
         case ipv1_i7IAz of {
           __DEFAULT -> GHC.Types.False;
           Finished -> GHC.Types.True
         } #)
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 5, joins: 0/0}
finished :: EventManager -> IO Bool
[GblId,
 Arity=2,
 Caf=NoCafRefs,
 Str=<S(LLLLLSLLLLLLL),1*U(A,A,A,A,A,U,A,A,A,A,A,A,A)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.Event.Manager.finished1
               `cast` (<EventManager>_R ->_R Sym (GHC.Types.N:IO[0] <Bool>_R)
                       :: (EventManager
                           -> State# RealWorld -> (# State# RealWorld, Bool #) :: *)
                          ~R# (EventManager -> IO Bool :: *))}]
finished
  = GHC.Event.Manager.finished1
    `cast` (<EventManager>_R ->_R Sym (GHC.Types.N:IO[0] <Bool>_R)
            :: (EventManager
                -> State# RealWorld -> (# State# RealWorld, Bool #) :: *)
               ~R# (EventManager -> IO Bool :: *))

-- RHS size: {terms: 4, types: 3, coercions: 0, joins: 0/0}
GHC.Event.Manager.release2 :: State -> (State, State)
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (a1_iarpe [Occ=Once] :: State) ->
                 (GHC.Event.Manager.Releasing, a1_iarpe)}]
GHC.Event.Manager.release2
  = \ (a1_iarpe :: State) -> (GHC.Event.Manager.Releasing, a1_iarpe)

-- RHS size: {terms: 22, types: 53, coercions: 0, joins: 0/0}
GHC.Event.Manager.release1
  :: EventManager -> State# RealWorld -> (# State# RealWorld, () #)
[GblId,
 Arity=2,
 Str=<S(LLLLLSLLLLLLL),1*U(A,A,A,A,A,U,A,A,A,U,A,U,A)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (ds_dawNL [Occ=Once!] :: EventManager)
                 (eta_B1 [Occ=Once] :: State# RealWorld) ->
                 case ds_dawNL of
                 { EventManager _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead]
                                _ [Occ=Dead] dt4_dawX6 [Occ=Once] _ [Occ=Dead] _ [Occ=Dead]
                                _ [Occ=Dead] dt8_dawXa [Occ=Once] _ [Occ=Dead]
                                dt10_dawXc [Occ=Once] _ [Occ=Dead] ->
                 case atomicModifyMutVar#
                        @ RealWorld
                        @ State
                        @ (State, State)
                        @ State
                        dt4_dawX6
                        GHC.Event.Manager.release2
                        eta_B1
                 of
                 { (# ipv_iarpn [Occ=Once*], ipv1_iarpo [Occ=Once!] #) ->
                 case ipv1_iarpo of {
                   __DEFAULT -> (# ipv_iarpn, GHC.Tuple.() #);
                   Running ->
                     GHC.Event.Control.$wsendWakeup dt8_dawXa dt10_dawXc ipv_iarpn
                 }
                 }
                 }}]
GHC.Event.Manager.release1
  = \ (ds_dawNL :: EventManager) (eta_B1 :: State# RealWorld) ->
      case ds_dawNL of
      { EventManager ds1_dawNW dt_dawX2 dt1_dawX3 dt2_dawX4 dt3_dawX5
                     dt4_dawX6 dt5_dawX7 dt6_dawX8 dt7_dawX9 dt8_dawXa dt9_dawXb
                     dt10_dawXc dt11_dawXd ->
      case atomicModifyMutVar#
             @ RealWorld
             @ State
             @ (State, State)
             @ State
             dt4_dawX6
             GHC.Event.Manager.release2
             eta_B1
      of
      { (# ipv_iarpn, ipv1_iarpo #) ->
      case ipv1_iarpo of {
        __DEFAULT -> (# ipv_iarpn, GHC.Tuple.() #);
        Running ->
          GHC.Event.Control.$wsendWakeup dt8_dawXa dt10_dawXc ipv_iarpn
      }
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 5, joins: 0/0}
release :: EventManager -> IO ()
[GblId,
 Arity=2,
 Str=<S(LLLLLSLLLLLLL),1*U(A,A,A,A,A,U,A,A,A,U,A,U,A)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.Event.Manager.release1
               `cast` (<EventManager>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
                       :: (EventManager
                           -> State# RealWorld -> (# State# RealWorld, () #) :: *)
                          ~R# (EventManager -> IO () :: *))}]
release
  = GHC.Event.Manager.release1
    `cast` (<EventManager>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
            :: (EventManager
                -> State# RealWorld -> (# State# RealWorld, () #) :: *)
               ~R# (EventManager -> IO () :: *))

-- RHS size: {terms: 4, types: 3, coercions: 0, joins: 0/0}
GHC.Event.Manager.shutdown2 :: State -> (State, State)
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (a1_iarpe [Occ=Once] :: State) ->
                 (GHC.Event.Manager.Dying, a1_iarpe)}]
GHC.Event.Manager.shutdown2
  = \ (a1_iarpe :: State) -> (GHC.Event.Manager.Dying, a1_iarpe)

-- RHS size: {terms: 22, types: 53, coercions: 0, joins: 0/0}
GHC.Event.Manager.shutdown1
  :: EventManager -> State# RealWorld -> (# State# RealWorld, () #)
[GblId,
 Arity=2,
 Str=<S(LLLLLSLLLLLLL),1*U(A,A,A,A,A,U,A,A,U,A,A,1*U,A)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
         Tmpl= \ (mgr_aawke [Occ=Once!] :: EventManager)
                 (s_i7IAv [Occ=Once] :: State# RealWorld) ->
                 case mgr_aawke of
                 { EventManager _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead]
                                _ [Occ=Dead] dt4_dawYA [Occ=Once] _ [Occ=Dead] _ [Occ=Dead]
                                dt7_dawYD [Occ=Once] _ [Occ=Dead] _ [Occ=Dead]
                                dt10_dawYG [Occ=Once] _ [Occ=Dead] ->
                 case atomicModifyMutVar#
                        @ RealWorld
                        @ State
                        @ (State, State)
                        @ State
                        dt4_dawYA
                        GHC.Event.Manager.shutdown2
                        s_i7IAv
                 of
                 { (# ipv_iarpn [Occ=Once*], ipv1_iarpo [Occ=Once!] #) ->
                 case ipv1_iarpo of {
                   __DEFAULT -> (# ipv_iarpn, GHC.Tuple.() #);
                   Running ->
                     GHC.Event.Control.$wsendDie dt7_dawYD dt10_dawYG ipv_iarpn
                 }
                 }
                 }}]
GHC.Event.Manager.shutdown1
  = \ (mgr_aawke :: EventManager) (s_i7IAv :: State# RealWorld) ->
      case mgr_aawke of
      { EventManager ds_dawVJ dt_dawYw dt1_dawYx dt2_dawYy dt3_dawYz
                     dt4_dawYA dt5_dawYB dt6_dawYC dt7_dawYD dt8_dawYE dt9_dawYF
                     dt10_dawYG dt11_dawYH ->
      case atomicModifyMutVar#
             @ RealWorld
             @ State
             @ (State, State)
             @ State
             dt4_dawYA
             GHC.Event.Manager.shutdown2
             s_i7IAv
      of
      { (# ipv_iarpn, ipv1_iarpo #) ->
      case ipv1_iarpo of {
        __DEFAULT -> (# ipv_iarpn, GHC.Tuple.() #);
        Running ->
          GHC.Event.Control.$wsendDie dt7_dawYD dt10_dawYG ipv_iarpn
      }
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 5, joins: 0/0}
shutdown :: EventManager -> IO ()
[GblId,
 Arity=2,
 Str=<S(LLLLLSLLLLLLL),1*U(A,A,A,A,A,U,A,A,U,A,A,1*U,A)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.Event.Manager.shutdown1
               `cast` (<EventManager>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
                       :: (EventManager
                           -> State# RealWorld -> (# State# RealWorld, () #) :: *)
                          ~R# (EventManager -> IO () :: *))}]
shutdown
  = GHC.Event.Manager.shutdown1
    `cast` (<EventManager>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
            :: (EventManager
                -> State# RealWorld -> (# State# RealWorld, () #) :: *)
               ~R# (EventManager -> IO () :: *))

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl4_raAu9 :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl4_raAu9
  = "Failed while attempting to modify registration of file "#

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl5_raAua :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl5_raAua = " at location "#

-- RHS size: {terms: 18, types: 17, coercions: 0, joins: 0/0}
$wlvl_raAub :: String -> Int# -> IO ()
[GblId, Arity=2, Str=<B,U><B,U>x, Unf=OtherCon []]
$wlvl_raAub
  = \ (w_sazqP :: String) (ww_sazqT :: Int#) ->
      errorWithoutStackTrace
        @ 'LiftedRep
        @ (IO ())
        (unpackAppendCString#
           lvl4_raAu9
           (case GHC.Show.$wshowSignedInt 0# ww_sazqT (GHC.Types.[] @ Char) of
            { (# ww5_i9gYK, ww6_i9gYL #) ->
            ++
              @ Char
              (GHC.Types.: @ Char ww5_i9gYK ww6_i9gYL)
              (unpackAppendCString# lvl5_raAua w_sazqP)
            }))

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl6_raAuc :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl6_raAuc = "registerControlFd"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl7_raAud :: [Char]
[GblId]
lvl7_raAud = unpackCString# lvl6_raAuc

-- RHS size: {terms: 4, types: 3, coercions: 0, joins: 0/0}
GHC.Event.Manager.new5 :: State -> (State, State)
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<L,U>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (a1_iarpe [Occ=Once] :: State) ->
                 (GHC.Event.Manager.Finished, a1_iarpe)}]
GHC.Event.Manager.new5
  = \ (a1_iarpe :: State) -> (GHC.Event.Manager.Finished, a1_iarpe)

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Event.Manager.new4 :: Int
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Event.Manager.new4 = GHC.Types.I# 31#

-- RHS size: {terms: 60, types: 138, coercions: 15, joins: 0/2}
x_raAue
  :: State# RealWorld
     -> (# State# RealWorld, MVar (IntTable [FdData]) #)
[GblId, Arity=1, Caf=NoCafRefs, Str=<S,U>, Unf=OtherCon []]
x_raAue
  = \ (s_X7IEr :: State# RealWorld) ->
      case newArray#
             @ (GHC.Event.IntTable.Bucket [FdData])
             @ RealWorld
             8#
             (GHC.Event.IntTable.Empty @ [FdData])
             s_X7IEr
      of
      { (# ipv_iayy0, ipv1_iayy1 #) ->
      case newMutVar#
             @ GHC.ForeignPtr.Finalizers
             @ RealWorld
             GHC.ForeignPtr.NoFinalizers
             ipv_iayy0
      of
      { (# ipv2_iayy5, ipv3_iayy6 #) ->
      case newAlignedPinnedByteArray# @ RealWorld 8# 8# ipv2_iayy5 of
      { (# ipv4_iayyb, ipv5_iayyc #) ->
      let {
        ipv6_iayya [Dmd=<S,U>] :: Addr#
        [LclId]
        ipv6_iayya
          = byteArrayContents#
              (ipv5_iayyc
               `cast` (UnsafeCo representational (MutableByteArray#
                                                    RealWorld) ByteArray#
                       :: (MutableByteArray# RealWorld :: TYPE 'UnliftedRep)
                          ~R# (ByteArray# :: TYPE 'UnliftedRep))) } in
      case writeIntOffAddr# @ RealWorld ipv6_iayya 0# 0# ipv4_iayyb
      of s2_iayye
      { __DEFAULT ->
      let {
        ipv7_iayyf :: GHC.ForeignPtr.ForeignPtrContents
        [LclId, Unf=OtherCon []]
        ipv7_iayyf = GHC.ForeignPtr.MallocPtr ipv5_iayyc ipv3_iayy6 } in
      case touch#
             @ 'LiftedRep
             @ GHC.ForeignPtr.ForeignPtrContents
             ipv7_iayyf
             s2_iayye
      of s'_iayyg
      { __DEFAULT ->
      case newMutVar#
             @ (GHC.Event.IntTable.IT [FdData])
             @ RealWorld
             (GHC.Event.IntTable.IT @ [FdData] ipv1_iayy1 ipv6_iayya ipv7_iayyf)
             s'_iayyg
      of
      { (# ipv8_iayyp, ipv9_iayyq #) ->
      case newMVar# @ RealWorld @ (IntTable [FdData]) ipv8_iayyp of
      { (# ipv11_ia50l, ipv12_ia50m #) ->
      case putMVar#
             @ RealWorld
             @ (IntTable [FdData])
             ipv12_ia50m
             ((GHC.STRef.STRef
                 @ RealWorld @ (GHC.Event.IntTable.IT [FdData]) ipv9_iayyq)
              `cast` (Sym (GHC.IORef.N:IORef[0]) <GHC.Event.IntTable.IT
                                                    [FdData]>_N ; Sym (GHC.Event.IntTable.N:IntTable[0]
                                                                           <[FdData]>_R)
                      :: (GHC.STRef.STRef
                            RealWorld (GHC.Event.IntTable.IT [FdData]) :: *)
                         ~R# (IntTable [FdData] :: *)))
             ipv11_ia50l
      of s2#_ia50o
      { __DEFAULT ->
      (# s2#_ia50o, GHC.MVar.MVar @ (IntTable [FdData]) ipv12_ia50m #)
      }
      }
      }
      }
      }
      }
      }
      }

Rec {
-- RHS size: {terms: 31, types: 91, coercions: 0, joins: 0/0}
GHC.Event.Manager.$wxs [InlPrag=NOUSERINLINE[0], Occ=LoopBreaker]
  :: Int#
     -> State# RealWorld
     -> (# State# RealWorld, [MVar (IntTable [FdData])] #)
[GblId, Arity=2, Caf=NoCafRefs, Str=<S,1*U><S,U>, Unf=OtherCon []]
GHC.Event.Manager.$wxs
  = \ (ww_sazr1 :: Int#) (w_sazqY :: State# RealWorld) ->
      case ww_sazr1 of ds1_iax4j {
        __DEFAULT ->
          case x_raAue w_sazqY of { (# ipv_i7IAy, ipv1_i7IAz #) ->
          case GHC.Event.Manager.$wxs (-# ds1_iax4j 1#) ipv_i7IAy of
          { (# ipv2_X7IEy, ipv3_X7IEA #) ->
          (# ipv2_X7IEy,
             GHC.Types.: @ (MVar (IntTable [FdData])) ipv1_i7IAz ipv3_X7IEA #)
          }
          };
        1# ->
          case x_raAue w_sazqY of { (# ipv_i7IAy, ipv1_i7IAz #) ->
          (# ipv_i7IAy,
             GHC.Types.:
               @ (MVar (IntTable [FdData]))
               ipv1_i7IAz
               (GHC.Types.[] @ (MVar (IntTable [FdData]))) #)
          }
      }
end Rec }

-- RHS size: {terms: 4, types: 1, coercions: 0, joins: 0/0}
GHC.Event.Manager.new3 :: Int# -> IO ()
[GblId, Arity=1, Str=<B,U>x, Unf=OtherCon []]
GHC.Event.Manager.new3
  = \ (dt_aawpe :: Int#) -> $wlvl_raAub lvl7_raAud dt_aawpe

-- RHS size: {terms: 178, types: 444, coercions: 19, joins: 2/2}
GHC.Event.Manager.new2
  :: Backend
     -> State# RealWorld -> (# State# RealWorld, EventManager #)
[GblId,
 Arity=2,
 Str=<L,U><S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [40 0] 605 30}]
GHC.Event.Manager.new2
  = \ (be_aawjU :: Backend) (s_i7IAv :: State# RealWorld) ->
      case GHC.Event.Manager.$wxs 32# s_i7IAv of
      { (# ipv_i7Vb3, ipv1_i7Vb4 #) ->
      case GHC.Event.Control.newControl1 GHC.Types.False ipv_i7Vb3 of
      { (# ipv2_X7IEy, ipv3_X7IEA #) ->
      case newMutVar#
             @ State @ RealWorld GHC.Event.Manager.Created ipv2_X7IEy
      of
      { (# ipv4_ia4ZV, ipv5_ia4ZW #) ->
      case newByteArray# @ RealWorld 8# ipv4_ia4ZV of
      { (# ipv6_iarqT, ipv7_iarqU #) ->
      case mkWeak#
             @ 'UnliftedRep
             @ (MutVar# RealWorld State)
             @ (IORef State)
             @ ()
             ipv5_ia4ZW
             ((GHC.STRef.STRef @ RealWorld @ State ipv5_ia4ZW)
              `cast` (Sym (GHC.IORef.N:IORef[0]) <State>_N
                      :: (GHC.STRef.STRef RealWorld State :: *) ~R# (IORef State :: *)))
             (\ (s1_X7IEQ :: State# RealWorld) ->
                case atomicModifyMutVar#
                       @ RealWorld
                       @ State
                       @ (State, State)
                       @ State
                       ipv5_ia4ZW
                       GHC.Event.Manager.new5
                       s1_X7IEQ
                of
                { (# ipv8_iarpn, ipv9_iarpo #) ->
                case ipv9_iarpo of {
                  __DEFAULT ->
                    case be_aawjU of
                    { GHC.Event.Internal.Backend @ a_iarkg bState_iarkh ds5_iarki
                                                 ds6_iarkj ds7_iarkk bDelete_iarkl ->
                    case ((bDelete_iarkl bState_iarkh)
                          `cast` (GHC.Types.N:IO[0] <()>_R
                                  :: (IO () :: *)
                                     ~R# (State# RealWorld -> (# State# RealWorld, () #) :: *)))
                           ipv8_iarpn
                    of
                    { (# ipv10_i7JiK, ipv11_i7JiL #) ->
                    GHC.Event.Control.closeControl1 ipv3_X7IEA ipv10_i7JiK
                    }
                    };
                  Finished -> (# ipv8_iarpn, GHC.Tuple.() #)
                }
                })
             ipv6_iarqT
      of
      { (# ipv8_iarr7, ipv9_iarr8 #) ->
      case newMVar# @ RealWorld @ () ipv8_iarr7 of
      { (# ipv10_ia50l, ipv11_ia50m #) ->
      case putMVar# @ RealWorld @ () ipv11_ia50m GHC.Tuple.() ipv10_ia50l
      of s2#_ia50o
      { __DEFAULT ->
      case be_aawjU of dt_Xawp2
      { GHC.Event.Internal.Backend @ ipv12_saxGR ipv13_saxGS ipv14_saxGT
                                   ipv15_saxGU ipv16_saxGV ipv17_saxGW ->
      case runRW#
             @ ('TupleRep '['TupleRep '[], 'LiftedRep])
             @ (# State# RealWorld, Array Int (MVar (IntTable [FdData])) #)
             (\ (s1#_iawUe [OS=OneShot] :: State# RealWorld) ->
                case newArray#
                       @ (MVar (IntTable [FdData]))
                       @ RealWorld
                       32#
                       (GHC.Arr.arrEleBottom @ (MVar (IntTable [FdData])))
                       s1#_iawUe
                of
                { (# ipv18_iawUt, ipv19_iawUu #) ->
                join {
                  $j_sazaQ [Dmd=<C(S),C(U)>]
                    :: State# RealWorld
                       -> (# State# RealWorld, Array Int (MVar (IntTable [FdData])) #)
                  [LclId[JoinId(1)], Arity=1, Str=<S,U>]
                  $j_sazaQ (wild4_iawUH [OS=OneShot]
                              :: State# RealWorld
                              Unf=OtherCon [])
                    = case unsafeFreezeArray#
                             @ RealWorld @ (MVar (IntTable [FdData])) ipv19_iawUu wild4_iawUH
                      of
                      { (# ipv20_iawUK, ipv21_iawUL #) ->
                      (# ipv20_iawUK,
                         GHC.Arr.Array
                           @ Int
                           @ (MVar (IntTable [FdData]))
                           GHC.Event.Manager.$fShowFdKey6
                           GHC.Event.Manager.new4
                           32#
                           ipv21_iawUL #)
                      } } in
                joinrec {
                  go_i7Jcj [Occ=LoopBreaker]
                    :: [MVar (IntTable [FdData])]
                       -> Int#
                       -> State# RealWorld
                       -> (# State# RealWorld, Array Int (MVar (IntTable [FdData])) #)
                  [LclId[JoinId(3)], Arity=3, Str=<S,1*U><L,U><S,U>, Unf=OtherCon []]
                  go_i7Jcj (ds7_i7Jck :: [MVar (IntTable [FdData])])
                           (eta_B2 :: Int#)
                           (eta1_B1 :: State# RealWorld)
                    = case ds7_i7Jck of {
                        [] -> jump $j_sazaQ eta1_B1;
                        : y_i7Jcp ys_i7Jcq ->
                          case writeArray#
                                 @ RealWorld
                                 @ (MVar (IntTable [FdData]))
                                 ipv19_iawUu
                                 eta_B2
                                 y_i7Jcp
                                 eta1_B1
                          of s4#_iawUD
                          { __DEFAULT ->
                          case eta_B2 of wild1_X4n {
                            __DEFAULT -> jump go_i7Jcj ys_i7Jcq (+# wild1_X4n 1#) s4#_iawUD;
                            31# -> jump $j_sazaQ s4#_iawUD
                          }
                          }
                      }; } in
                jump go_i7Jcj ipv1_i7Vb4 0# ipv18_iawUt
                })
      of
      { (# ipv18_iawUX, ipv19_iawUY #) ->
      case ipv19_iawUY of
      { GHC.Arr.Array dt2_aawp7 dt3_aawp8 dt4_aawp9 dt5_aawpa ->
      case ipv3_X7IEA of
      { GHC.Event.Control.W dt7_aawpe dt8_aawpf dt9_aawpg dt10_aawph
                            dt11_aawpi ->
      case ((ipv15_saxGU
               ipv13_saxGS
               ((GHC.Int.I32# dt7_aawpe)
                `cast` (Sym (Foreign.C.Types.N:CInt[0]) ; Sym (System.Posix.Types.N:Fd[0])
                        :: (GHC.Int.Int32 :: *) ~R# (Fd :: *)))
               GHC.Event.Internal.evtNothing
               evtRead)
            `cast` (GHC.Types.N:IO[0] <Bool>_R
                    :: (IO Bool :: *)
                       ~R# (State# RealWorld -> (# State# RealWorld, Bool #) :: *)))
             s2#_ia50o
      of
      { (# ipv20_X7IJG, ipv21_X7IJI #) ->
      case ipv21_X7IJI of {
        False -> case GHC.Event.Manager.new3 dt7_aawpe of wild1_00 { };
        True ->
          case ((ipv15_saxGU
                   ipv13_saxGS
                   ((GHC.Int.I32# dt9_aawpg)
                    `cast` (Sym (Foreign.C.Types.N:CInt[0]) ; Sym (System.Posix.Types.N:Fd[0])
                            :: (GHC.Int.Int32 :: *) ~R# (Fd :: *)))
                   GHC.Event.Internal.evtNothing
                   evtRead)
                `cast` (GHC.Types.N:IO[0] <Bool>_R
                        :: (IO Bool :: *)
                           ~R# (State# RealWorld -> (# State# RealWorld, Bool #) :: *)))
                 ipv20_X7IJG
          of
          { (# ipv22_X7IK9, ipv23_X7IKb #) ->
          case ipv23_X7IKb of {
            False -> case GHC.Event.Manager.new3 dt9_aawpg of wild2_00 { };
            True ->
              (# ipv22_X7IK9,
                 GHC.Event.Manager.EventManager
                   dt_Xawp2
                   dt2_aawp7
                   dt3_aawp8
                   dt4_aawp9
                   dt5_aawpa
                   ipv5_ia4ZW
                   ipv7_iarqU
                   dt7_aawpe
                   dt8_aawpf
                   dt9_aawpg
                   dt10_aawph
                   dt11_aawpi
                   ipv11_ia50m #)
          }
          }
      }
      }
      }
      }
      }
      }
      }
      }
      }
      }
      }
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 5, joins: 0/0}
newWith :: Backend -> IO EventManager
[GblId,
 Arity=2,
 Str=<L,U><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.Event.Manager.new2
               `cast` (<Backend>_R ->_R Sym (GHC.Types.N:IO[0] <EventManager>_R)
                       :: (Backend
                           -> State# RealWorld -> (# State# RealWorld, EventManager #) :: *)
                          ~R# (Backend -> IO EventManager :: *))}]
newWith
  = GHC.Event.Manager.new2
    `cast` (<Backend>_R ->_R Sym (GHC.Types.N:IO[0] <EventManager>_R)
            :: (Backend
                -> State# RealWorld -> (# State# RealWorld, EventManager #) :: *)
               ~R# (Backend -> IO EventManager :: *))

-- RHS size: {terms: 8, types: 13, coercions: 0, joins: 0/0}
GHC.Event.Manager.new1
  :: State# RealWorld -> (# State# RealWorld, EventManager #)
[GblId,
 Arity=1,
 Str=<S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (s_i7IAv [Occ=Once] :: State# RealWorld) ->
                 case GHC.Event.EPoll.new1 s_i7IAv of
                 { (# ipv_i7IAy [Occ=Once], ipv1_i7IAz [Occ=Once] #) ->
                 GHC.Event.Manager.new2 ipv1_i7IAz ipv_i7IAy
                 }}]
GHC.Event.Manager.new1
  = \ (s_i7IAv :: State# RealWorld) ->
      case GHC.Event.EPoll.new1 s_i7IAv of
      { (# ipv_i7IAy, ipv1_i7IAz #) ->
      GHC.Event.Manager.new2 ipv1_i7IAz ipv_i7IAy
      }

-- RHS size: {terms: 1, types: 0, coercions: 3, joins: 0/0}
new :: IO EventManager
[GblId,
 Arity=1,
 Str=<S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.Event.Manager.new1
               `cast` (Sym (GHC.Types.N:IO[0] <EventManager>_R)
                       :: (State# RealWorld -> (# State# RealWorld, EventManager #) :: *)
                          ~R# (IO EventManager :: *))}]
new
  = GHC.Event.Manager.new1
    `cast` (Sym (GHC.Types.N:IO[0] <EventManager>_R)
            :: (State# RealWorld -> (# State# RealWorld, EventManager #) :: *)
               ~R# (IO EventManager :: *))

-- RHS size: {terms: 8, types: 4, coercions: 0, joins: 0/0}
GHC.Event.Manager.closeFd_3 :: Int
[GblId,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=False, ConLike=False,
         WorkFree=False, Expandable=False, Guidance=IF_ARGS [] 70 20}]
GHC.Event.Manager.closeFd_3
  = case GHC.Event.Internal.$wgo1
           (map @ FdData @ EventLifetime fdEvents (GHC.Types.[] @ FdData))
    of v_B2
    { __DEFAULT ->
    GHC.Types.I# v_B2
    }

-- RHS size: {terms: 21, types: 21, coercions: 0, joins: 0/0}
GHC.Event.Manager.$weventsOf [InlPrag=NOUSERINLINE[0]]
  :: [FdData] -> Int#
[GblId,
 Arity=1,
 Str=<S,1*U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [40] 110 0}]
GHC.Event.Manager.$weventsOf
  = \ (w_sazra :: [FdData]) ->
      case w_sazra of wild_X3U {
        [] -> case GHC.Event.Manager.closeFd_3 of { I# v1_B2 -> v1_B2 };
        : fdd_aawlq ds_dawMG ->
          case ds_dawMG of {
            [] ->
              case fdd_aawlq of
              { FdData dt_dawZl dt1_dawZm dt2_dawZn ds1_dawWm ->
              dt2_dawZn
              };
            : ipv_sax5k ipv1_sax5m ->
              GHC.Event.Internal.$wgo1
                (map @ FdData @ EventLifetime fdEvents wild_X3U)
          }
      }

-- RHS size: {terms: 7, types: 3, coercions: 2, joins: 0/0}
eventsOf [InlPrag=NOUSERINLINE[0]] :: [FdData] -> EventLifetime
[GblId,
 Arity=1,
 Str=<S,1*U>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_sazra [Occ=Once] :: [FdData]) ->
                 case GHC.Event.Manager.$weventsOf w_sazra of ww_sazrd
                 { __DEFAULT ->
                 (GHC.Types.I# ww_sazrd)
                 `cast` (Sym (GHC.Event.Internal.N:EventLifetime[0])
                         :: (Int :: *) ~R# (EventLifetime :: *))
                 }}]
eventsOf
  = \ (w_sazra :: [FdData]) ->
      case GHC.Event.Manager.$weventsOf w_sazra of ww_sazrd
      { __DEFAULT ->
      (GHC.Types.I# ww_sazrd)
      `cast` (Sym (GHC.Event.Internal.N:EventLifetime[0])
              :: (Int :: *) ~R# (EventLifetime :: *))
      }

Rec {
-- RHS size: {terms: 28, types: 32, coercions: 4, joins: 0/0}
GHC.Event.Manager.closeFd_2 [Occ=LoopBreaker]
  :: [FdData] -> State# RealWorld -> (# State# RealWorld, () #)
[GblId, Arity=2, Caf=NoCafRefs, Str=<S,1*U><S,U>, Unf=OtherCon []]
GHC.Event.Manager.closeFd_2
  = \ (ds_i7Jck :: [FdData]) (eta_B1 :: State# RealWorld) ->
      case ds_i7Jck of {
        [] -> (# eta_B1, GHC.Tuple.() #);
        : y_i7Jcp ys_i7Jcq ->
          case y_i7Jcp of { FdData dt_dawXE dt1_dawXF dt2_dawXG cb_aawlX ->
          case ((cb_aawlX
                   (GHC.Event.Manager.FdKey dt_dawXE dt1_dawXF)
                   ((GHC.Types.I# (orI# (andI# dt2_dawXG 7#) 4#))
                    `cast` (Sym (GHC.Event.Internal.N:Event[0])
                            :: (Int :: *) ~R# (Event :: *))))
                `cast` (GHC.Types.N:IO[0] <()>_R
                        :: (IO () :: *)
                           ~R# (State# RealWorld -> (# State# RealWorld, () #) :: *)))
                 eta_B1
          of
          { (# ipv_i7JiK, ipv1_i7JiL #) ->
          GHC.Event.Manager.closeFd_2 ys_i7Jcq ipv_i7JiK
          }
          }
      }
end Rec }

-- RHS size: {terms: 331, types: 629, coercions: 41, joins: 1/6}
GHC.Event.Manager.closeFd1
  :: EventManager
     -> (Fd -> IO ())
     -> Fd
     -> State# RealWorld
     -> (# State# RealWorld, () #)
[GblId,
 Arity=4,
 Str=<S(SS(S)S(S)LSLLLLLLLL),1*U(U,U(U),U(U),A,U,A,A,A,A,A,A,A,A)><L,1*C1(C1(U(U,A)))><S(S),1*U(U)><S,U>,
 Unf=OtherCon []]
GHC.Event.Manager.closeFd1
  = \ (mgr_aawlN :: EventManager)
      (close_aawlO :: Fd -> IO ())
      (fd_aawlP :: Fd)
      (s_X7IEq :: State# RealWorld) ->
      case getMaskingState# s_X7IEq of { (# ipv_iafMW, ipv1_iafMX #) ->
      case mgr_aawlN of
      { EventManager ds1_dawVB dt_dawYk dt1_dawYl dt2_dawYm dt3_dawYn
                     dt4_dawYo dt5_dawYp dt6_dawYq dt7_dawYr dt8_dawYs dt9_dawYt
                     dt10_dawYu dt11_dawYv ->
      case dt_dawYk of wild1_sazYs { I# m_sazYt ->
      case dt1_dawYl of wild2_sazYv { I# n_sazYw ->
      case fd_aawlP
           `cast` (System.Posix.Types.N:Fd[0] ; Foreign.C.Types.N:CInt[0]
                   :: (Fd :: *) ~R# (GHC.Int.Int32 :: *))
      of wild4_i9h2T
      { GHC.Int.I32# x#_i9h2V ->
      let {
        i1_iax2r [Dmd=<S,U>] :: Int#
        [LclId]
        i1_iax2r = andI# x#_i9h2V 31# } in
      case <=# m_sazYt i1_iax2r of {
        __DEFAULT ->
          case lvl3_raAu8 wild2_sazYv wild1_sazYs i1_iax2r of wild5_00 { };
        1# ->
          case <=# i1_iax2r n_sazYw of {
            __DEFAULT ->
              case lvl3_raAu8 wild2_sazYv wild1_sazYs i1_iax2r of wild5_00 { };
            1# ->
              case indexArray#
                     @ (MVar (IntTable [FdData])) dt3_dawYn (-# i1_iax2r m_sazYt)
              of
              { (# ipv2_iawOK #) ->
              case ipv2_iawOK of { GHC.MVar.MVar ww1_sazrr ->
              let {
                $wio_sazro [InlPrag=NOUSERINLINE[0], Dmd=<L,1*C1(C1(U(U,U)))>]
                  :: MutVar# RealWorld (GHC.Event.IntTable.IT [FdData])
                     -> State# RealWorld -> (# State# RealWorld, [FdData] #)
                [LclId, Arity=2, Str=<S,U><S,U>, Unf=OtherCon []]
                $wio_sazro
                  = \ (ww2_sazrm [OS=OneShot]
                         :: MutVar# RealWorld (GHC.Event.IntTable.IT [FdData]))
                      (w_sazrj [OS=OneShot] :: State# RealWorld) ->
                      case readMutVar#
                             @ RealWorld @ (GHC.Event.IntTable.IT [FdData]) ww2_sazrm w_sazrj
                      of
                      { (# ipv3_iayzy, ipv4_iayzz #) ->
                      case ipv4_iayzz of
                      { GHC.Event.IntTable.IT dt12_iayzE dt13_iayzF dt14_iayzG ->
                      let {
                        n#_iayzD [Dmd=<S,U>] :: Int#
                        [LclId]
                        n#_iayzD
                          = andI#
                              x#_i9h2V
                              (-#
                                 (sizeofMutableArray#
                                    @ RealWorld @ (GHC.Event.IntTable.Bucket [FdData]) dt12_iayzE)
                                 1#) } in
                      case readArray#
                             @ RealWorld
                             @ (GHC.Event.IntTable.Bucket [FdData])
                             dt12_iayzE
                             n#_iayzD
                             ipv3_iayzy
                      of
                      { (# ipv5_iayzM, ipv6_iayzN #) ->
                      letrec {
                        $wgo_iayzK [InlPrag=NOUSERINLINE[0], Occ=LoopBreaker]
                          :: GHC.Event.IntTable.Bucket [FdData]
                             -> (# Bool, Maybe [FdData], GHC.Event.IntTable.Bucket [FdData] #)
                        [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []]
                        $wgo_iayzK
                          = \ (w2_iayzL :: GHC.Event.IntTable.Bucket [FdData]) ->
                              case w2_iayzL of {
                                GHC.Event.IntTable.Empty ->
                                  (# GHC.Types.False, GHC.Base.Nothing @ [FdData],
                                     GHC.Event.IntTable.Empty @ [FdData] #);
                                GHC.Event.IntTable.Bucket dt15_iayzS ds5_iayzT ds6_iayzU ->
                                  case ==# dt15_iayzS x#_i9h2V of {
                                    __DEFAULT ->
                                      case $wgo_iayzK ds6_iayzU of
                                      { (# ww4_iayzZ, ww5_iayA0, ww6_iayA1 #) ->
                                      (# ww4_iayzZ, ww5_iayA0,
                                         GHC.Event.IntTable.Bucket
                                           @ [FdData] dt15_iayzS ds5_iayzT ww6_iayA1 #)
                                      };
                                    1# ->
                                      (# GHC.Types.True, GHC.Base.Just @ [FdData] ds5_iayzT,
                                         ds6_iayzU #)
                                  }
                              }; } in
                      case $wgo_iayzK ipv6_iayzN of
                      { (# ww4_iayAb, ww5_iayAc, ww6_iayAd #) ->
                      join {
                        $j_sayAP [Dmd=<C(C(S)),1*C1(C1(U(U,U)))>]
                          :: State# RealWorld
                             -> Maybe [FdData] -> (# State# RealWorld, [FdData] #)
                        [LclId[JoinId(2)], Arity=2, Str=<S,U><S,1*U>, Unf=OtherCon []]
                        $j_sayAP (ipv7_i7IAy [OS=OneShot] :: State# RealWorld)
                                 (ipv8_i7IAz [OS=OneShot] :: Maybe [FdData])
                          = case ipv8_i7IAz of {
                              Nothing ->
                                case ((close_aawlO
                                         (wild4_i9h2T
                                          `cast` (Sym (Foreign.C.Types.N:CInt[0]) ; Sym (System.Posix.Types.N:Fd[0])
                                                  :: (GHC.Int.Int32 :: *) ~R# (Fd :: *))))
                                      `cast` (GHC.Types.N:IO[0] <()>_R
                                              :: (IO () :: *)
                                                 ~R# (State# RealWorld
                                                      -> (# State# RealWorld, () #) :: *)))
                                       ipv7_i7IAy
                                of
                                { (# ipv9_i7JiK, ipv10_i7JiL #) ->
                                (# ipv9_i7JiK, GHC.Types.[] @ FdData #)
                                };
                              Just fds_aawlS ->
                                case GHC.Event.Manager.$weventsOf fds_aawlS of ww7_sazrd
                                { __DEFAULT ->
                                case andI# ww7_sazrd 7# of wild7_X6L {
                                  __DEFAULT ->
                                    case ds1_dawVB of
                                    { GHC.Event.Internal.Backend @ a_sazYl bState_sazYm ds5_sazYn
                                                                 bModifyFd_sazYo ds6_sazYp
                                                                 ds7_sazYq ->
                                    case ((bModifyFd_sazYo
                                             bState_sazYm
                                             (wild4_i9h2T
                                              `cast` (Sym (Foreign.C.Types.N:CInt[0]) ; Sym (System.Posix.Types.N:Fd[0])
                                                      :: (GHC.Int.Int32 :: *) ~R# (Fd :: *)))
                                             ((GHC.Types.I# wild7_X6L)
                                              `cast` (Sym (GHC.Event.Internal.N:Event[0])
                                                      :: (Int :: *) ~R# (Event :: *)))
                                             GHC.Event.Internal.evtNothing)
                                          `cast` (GHC.Types.N:IO[0] <Bool>_R
                                                  :: (IO Bool :: *)
                                                     ~R# (State# RealWorld
                                                          -> (# State# RealWorld, Bool #) :: *)))
                                           ipv7_i7IAy
                                    of
                                    { (# ipv9_X7IES, ipv10_X7IEU #) ->
                                    case ((close_aawlO
                                             (wild4_i9h2T
                                              `cast` (Sym (Foreign.C.Types.N:CInt[0]) ; Sym (System.Posix.Types.N:Fd[0])
                                                      :: (GHC.Int.Int32 :: *) ~R# (Fd :: *))))
                                          `cast` (GHC.Types.N:IO[0] <()>_R
                                                  :: (IO () :: *)
                                                     ~R# (State# RealWorld
                                                          -> (# State# RealWorld, () #) :: *)))
                                           ipv9_X7IES
                                    of
                                    { (# ipv11_X7Jn5, ipv12_X7Jn7 #) ->
                                    (# ipv11_X7Jn5, fds_aawlS #)
                                    }
                                    }
                                    };
                                  0# ->
                                    case ((close_aawlO
                                             (wild4_i9h2T
                                              `cast` (Sym (Foreign.C.Types.N:CInt[0]) ; Sym (System.Posix.Types.N:Fd[0])
                                                      :: (GHC.Int.Int32 :: *) ~R# (Fd :: *))))
                                          `cast` (GHC.Types.N:IO[0] <()>_R
                                                  :: (IO () :: *)
                                                     ~R# (State# RealWorld
                                                          -> (# State# RealWorld, () #) :: *)))
                                           ipv7_i7IAy
                                    of
                                    { (# ipv9_X7Jn5, ipv10_X7Jn7 #) ->
                                    (# ipv9_X7Jn5, fds_aawlS #)
                                    }
                                }
                                }
                            } } in
                      case ww5_iayAc of wild6_iayAf {
                        Nothing -> jump $j_sayAP ipv5_iayzM (GHC.Base.Nothing @ [FdData]);
                        Just ipv7_iayAj ->
                          case writeArray#
                                 @ RealWorld
                                 @ (GHC.Event.IntTable.Bucket [FdData])
                                 dt12_iayzE
                                 n#_iayzD
                                 ww6_iayAd
                                 ipv5_iayzM
                          of s1#_iayAl
                          { __DEFAULT ->
                          case ww4_iayAb of {
                            False -> jump $j_sayAP s1#_iayAl wild6_iayAf;
                            True ->
                              case readIntOffAddr# @ RealWorld dt13_iayzF 0# s1#_iayAl of
                              { (# ipv8_iayAt, ipv9_iayAu #) ->
                              case writeIntOffAddr#
                                     @ RealWorld dt13_iayzF 0# (-# ipv9_iayAu 1#) ipv8_iayAt
                              of s2_iayAw
                              { __DEFAULT ->
                              case touch#
                                     @ 'LiftedRep
                                     @ GHC.ForeignPtr.ForeignPtrContents
                                     dt14_iayzG
                                     s2_iayAw
                              of s'_iayAx
                              { __DEFAULT ->
                              jump $j_sayAP s'_iayAx wild6_iayAf
                              }
                              }
                              }
                          }
                          }
                      }
                      }
                      }
                      }
                      } } in
              let {
                io_saxA6 [InlPrag=NOUSERINLINE[0], Dmd=<L,1*C1(C1(U))>]
                  :: IntTable [FdData]
                     -> State# RealWorld -> (# State# RealWorld, [FdData] #)
                [LclId,
                 Arity=2,
                 Str=<S(S),1*U(U)><S,U>,
                 Unf=Unf{Src=InlineStable, TopLvl=False, Value=True, ConLike=True,
                         WorkFree=True, Expandable=True,
                         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
                         Tmpl= \ (w_sazri [Occ=Once] :: IntTable [FdData])
                                 (w1_sazrj [Occ=Once] :: State# RealWorld) ->
                                 case w_sazri
                                      `cast` (GHC.Event.IntTable.N:IntTable[0]
                                                  <[FdData]>_R ; GHC.IORef.N:IORef[0] <GHC.Event.IntTable.IT
                                                                                         [FdData]>_N
                                              :: (IntTable [FdData] :: *)
                                                 ~R# (GHC.STRef.STRef
                                                        RealWorld
                                                        (GHC.Event.IntTable.IT [FdData]) :: *))
                                 of
                                 { GHC.STRef.STRef ww3_sazrm [Occ=Once] ->
                                 $wio_sazro ww3_sazrm w1_sazrj
                                 }}]
                io_saxA6
                  = \ (w_sazri [OS=OneShot] :: IntTable [FdData])
                      (w1_sazrj [OS=OneShot] :: State# RealWorld) ->
                      case w_sazri
                           `cast` (GHC.Event.IntTable.N:IntTable[0]
                                       <[FdData]>_R ; GHC.IORef.N:IORef[0] <GHC.Event.IntTable.IT
                                                                              [FdData]>_N
                                   :: (IntTable [FdData] :: *)
                                      ~R# (GHC.STRef.STRef
                                             RealWorld (GHC.Event.IntTable.IT [FdData]) :: *))
                      of
                      { GHC.STRef.STRef ww3_sazrm ->
                      $wio_sazro ww3_sazrm w1_sazrj
                      } } in
              case ipv1_iafMX of {
                __DEFAULT ->
                  case takeMVar#
                         @ RealWorld @ (IntTable [FdData]) ww1_sazrr ipv_iafMW
                  of
                  { (# ipv3_i7IAy, ipv4_i7IAz #) ->
                  case catch#
                         @ [FdData]
                         @ GHC.Exception.SomeException
                         (maskAsyncExceptions# @ [FdData] (io_saxA6 ipv4_i7IAz))
                         (\ (e1_iafN9 [OS=OneShot] :: GHC.Exception.SomeException)
                            (s1_iafNa [OS=OneShot] :: State# RealWorld) ->
                            case putMVar#
                                   @ RealWorld @ (IntTable [FdData]) ww1_sazrr ipv4_i7IAz s1_iafNa
                            of s2#_i9DsB
                            { __DEFAULT ->
                            raiseIO#
                              @ GHC.Exception.SomeException @ [FdData] e1_iafN9 s2#_i9DsB
                            })
                         ipv3_i7IAy
                  of
                  { (# ipv5_X7IAZ, ipv6_X7IB1 #) ->
                  case putMVar#
                         @ RealWorld @ (IntTable [FdData]) ww1_sazrr ipv4_i7IAz ipv5_X7IAZ
                  of s2#_i9DsB
                  { __DEFAULT ->
                  GHC.Event.Manager.closeFd_2 ipv6_X7IB1 s2#_i9DsB
                  }
                  }
                  };
                0# ->
                  case maskAsyncExceptions#
                         @ [FdData]
                         (\ (s1_X7IEF [OS=OneShot] :: State# RealWorld) ->
                            case takeMVar# @ RealWorld @ (IntTable [FdData]) ww1_sazrr s1_X7IEF
                            of
                            { (# ipv3_i7IAy, ipv4_i7IAz #) ->
                            case catch#
                                   @ [FdData]
                                   @ GHC.Exception.SomeException
                                   (unmaskAsyncExceptions# @ [FdData] (io_saxA6 ipv4_i7IAz))
                                   (\ (e1_iafN9 [OS=OneShot] :: GHC.Exception.SomeException)
                                      (s2_iafNa [OS=OneShot] :: State# RealWorld) ->
                                      case putMVar#
                                             @ RealWorld
                                             @ (IntTable [FdData])
                                             ww1_sazrr
                                             ipv4_i7IAz
                                             s2_iafNa
                                      of s2#_i9DsB
                                      { __DEFAULT ->
                                      raiseIO#
                                        @ GHC.Exception.SomeException @ [FdData] e1_iafN9 s2#_i9DsB
                                      })
                                   ipv3_i7IAy
                            of
                            { (# ipv5_X7IAZ, ipv6_X7IB1 #) ->
                            case putMVar#
                                   @ RealWorld @ (IntTable [FdData]) ww1_sazrr ipv4_i7IAz ipv5_X7IAZ
                            of s2#_i9DsB
                            { __DEFAULT ->
                            (# s2#_i9DsB, ipv6_X7IB1 #)
                            }
                            }
                            })
                         ipv_iafMW
                  of
                  { (# ipv3_i7IAy, ipv4_i7IAz #) ->
                  GHC.Event.Manager.closeFd_2 ipv4_i7IAz ipv3_i7IAy
                  };
                1# ->
                  case takeMVar#
                         @ RealWorld @ (IntTable [FdData]) ww1_sazrr ipv_iafMW
                  of
                  { (# ipv3_i7IAy, ipv4_i7IAz #) ->
                  case catch#
                         @ [FdData]
                         @ GHC.Exception.SomeException
                         (maskUninterruptible# @ [FdData] (io_saxA6 ipv4_i7IAz))
                         (\ (e1_iafN9 [OS=OneShot] :: GHC.Exception.SomeException)
                            (s1_iafNa [OS=OneShot] :: State# RealWorld) ->
                            case putMVar#
                                   @ RealWorld @ (IntTable [FdData]) ww1_sazrr ipv4_i7IAz s1_iafNa
                            of s2#_i9DsB
                            { __DEFAULT ->
                            raiseIO#
                              @ GHC.Exception.SomeException @ [FdData] e1_iafN9 s2#_i9DsB
                            })
                         ipv3_i7IAy
                  of
                  { (# ipv5_X7IAZ, ipv6_X7IB1 #) ->
                  case putMVar#
                         @ RealWorld @ (IntTable [FdData]) ww1_sazrr ipv4_i7IAz ipv5_X7IAZ
                  of s2#_i9DsB
                  { __DEFAULT ->
                  GHC.Event.Manager.closeFd_2 ipv6_X7IB1 s2#_i9DsB
                  }
                  }
                  }
              }
              }
              }
          }
      }
      }
      }
      }
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 11, joins: 0/0}
closeFd :: EventManager -> (Fd -> IO ()) -> Fd -> IO ()
[GblId,
 Arity=4,
 Str=<S(SS(S)S(S)LSLLLLLLLL),1*U(U,U(U),U(U),A,U,A,A,A,A,A,A,A,A)><L,1*C1(C1(U(U,A)))><S(S),1*U(U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.Event.Manager.closeFd1
               `cast` (<EventManager>_R
                       ->_R <Fd -> IO ()>_R
                       ->_R <Fd>_R
                       ->_R Sym (GHC.Types.N:IO[0] <()>_R)
                       :: (EventManager
                           -> (Fd -> IO ())
                           -> Fd
                           -> State# RealWorld
                           -> (# State# RealWorld, () #) :: *)
                          ~R# (EventManager -> (Fd -> IO ()) -> Fd -> IO () :: *))}]
closeFd
  = GHC.Event.Manager.closeFd1
    `cast` (<EventManager>_R
            ->_R <Fd -> IO ()>_R
            ->_R <Fd>_R
            ->_R Sym (GHC.Types.N:IO[0] <()>_R)
            :: (EventManager
                -> (Fd -> IO ())
                -> Fd
                -> State# RealWorld
                -> (# State# RealWorld, () #) :: *)
               ~R# (EventManager -> (Fd -> IO ()) -> Fd -> IO () :: *))

-- RHS size: {terms: 12, types: 7, coercions: 0, joins: 0/0}
lvl8_raAuf :: FdData -> Bool
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S(LLSL),1*U(A,A,U,A)>,
 Unf=OtherCon []]
lvl8_raAuf
  = \ (fd'_aawml :: FdData) ->
      case fd'_aawml of { FdData dt_dawZl dt1_dawZm dt2_dawZn ds_dawWm ->
      case andI# dt2_dawZn 8# of {
        __DEFAULT -> GHC.Types.True;
        0# -> GHC.Types.False
      }
      }

-- RHS size: {terms: 569, types: 985, coercions: 38, joins: 7/17}
GHC.Event.Manager.loop5
  :: EventManager
     -> Fd -> Event -> State# RealWorld -> (# State# RealWorld, () #)
[GblId,
 Arity=4,
 Str=<S(SSSLLLLSLSLLL),1*U(U,U(U),U(U),A,U,U,A,U,A,U,A,1*U,A)><S(S),1*U(U)><L,U(U)><S,U>,
 Unf=OtherCon []]
GHC.Event.Manager.loop5
  = \ (mgr_aawm7 :: EventManager)
      (fd_aawm8 :: Fd)
      (evs_aawm9 :: Event)
      (eta_B1 :: State# RealWorld) ->
      case mgr_aawm7 of
      { EventManager ds_dawVZ dt_dawYU dt1_dawYV dt2_dawYW dt3_dawYX
                     dt4_dawYY dt5_dawYZ dt6_dawZ0 dt7_dawZ1 dt8_dawZ2 dt9_dawZ3
                     dt10_dawZ4 dt11_dawZ5 ->
      case ds_dawVZ of
      { GHC.Event.Internal.Backend @ a_sazYH bState_sazYI ds1_sazYJ
                                   bModifyFd_sazYK ds2_sazYL ds3_sazYM ->
      case dt_dawYU of wild2_sazYW { I# m_sazYX ->
      case dt1_dawYV of wild3_sazYZ { I# n_sazZ0 ->
      case fd_aawm8
           `cast` (System.Posix.Types.N:Fd[0] ; Foreign.C.Types.N:CInt[0]
                   :: (Fd :: *) ~R# (GHC.Int.Int32 :: *))
      of wild4_i8hv6
      { GHC.Int.I32# x1_i8hv8 ->
      join {
        $j_saxIT [Dmd=<L,1*U(U,U)>] :: (# State# RealWorld, () #)
        [LclId[JoinId(0)]]
        $j_saxIT
          = case GHC.Event.Control.$wreadControlMessage
                   dt8_dawZ2 dt10_dawZ4 x1_i8hv8 eta_B1
            of
            { (# ipv_i7IAy, ipv1_i7IAz #) ->
            case ipv1_i7IAz of {
              __DEFAULT -> (# ipv_i7IAy, GHC.Tuple.() #);
              CMsgDie ->
                case writeMutVar#
                       @ RealWorld @ State dt4_dawYY GHC.Event.Manager.Finished ipv_i7IAy
                of s2#_i7IBe
                { __DEFAULT ->
                (# s2#_i7IBe, GHC.Tuple.() #)
                }
            }
            } } in
      case ==# x1_i8hv8 dt6_dawZ0 of {
        __DEFAULT ->
          case ==# x1_i8hv8 dt8_dawZ2 of {
            __DEFAULT ->
              case getMaskingState# eta_B1 of { (# ipv_iafMW, ipv1_iafMX #) ->
              let {
                i1_iax2r [Dmd=<S,U>] :: Int#
                [LclId]
                i1_iax2r = andI# x1_i8hv8 31# } in
              case <=# m_sazYX i1_iax2r of {
                __DEFAULT ->
                  case lvl3_raAu8 wild3_sazYZ wild2_sazYW i1_iax2r of wild5_00 { };
                1# ->
                  case <=# i1_iax2r n_sazZ0 of {
                    __DEFAULT ->
                      case lvl3_raAu8 wild3_sazYZ wild2_sazYW i1_iax2r of wild5_00 { };
                    1# ->
                      case indexArray#
                             @ (MVar (IntTable [FdData])) dt3_dawYX (-# i1_iax2r m_sazYX)
                      of
                      { (# ipv2_iawOK #) ->
                      case ipv2_iawOK of { GHC.MVar.MVar ww1_sazsr ->
                      let {
                        $wio_sazso [InlPrag=NOUSERINLINE[0], Dmd=<L,1*C1(C1(U(U,U)))>]
                          :: MutVar# RealWorld (GHC.Event.IntTable.IT [FdData])
                             -> State# RealWorld -> (# State# RealWorld, [FdData] #)
                        [LclId, Arity=2, Str=<S,U><S,U>, Unf=OtherCon []]
                        $wio_sazso
                          = \ (ww2_sazsm [OS=OneShot]
                                 :: MutVar# RealWorld (GHC.Event.IntTable.IT [FdData]))
                              (w_sazsj [OS=OneShot] :: State# RealWorld) ->
                              case readMutVar#
                                     @ RealWorld
                                     @ (GHC.Event.IntTable.IT [FdData])
                                     ww2_sazsm
                                     w_sazsj
                              of
                              { (# ipv3_iayzy, ipv4_iayzz #) ->
                              case ipv4_iayzz of
                              { GHC.Event.IntTable.IT dt12_iayzE dt13_iayzF dt14_iayzG ->
                              let {
                                n#_iayzD [Dmd=<S,U>] :: Int#
                                [LclId]
                                n#_iayzD
                                  = andI#
                                      x1_i8hv8
                                      (-#
                                         (sizeofMutableArray#
                                            @ RealWorld
                                            @ (GHC.Event.IntTable.Bucket [FdData])
                                            dt12_iayzE)
                                         1#) } in
                              case readArray#
                                     @ RealWorld
                                     @ (GHC.Event.IntTable.Bucket [FdData])
                                     dt12_iayzE
                                     n#_iayzD
                                     ipv3_iayzy
                              of
                              { (# ipv5_iayzM, ipv6_iayzN #) ->
                              letrec {
                                $wgo_iayzK [InlPrag=NOUSERINLINE[0], Occ=LoopBreaker]
                                  :: GHC.Event.IntTable.Bucket [FdData]
                                     -> (# Bool, Maybe [FdData],
                                           GHC.Event.IntTable.Bucket [FdData] #)
                                [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []]
                                $wgo_iayzK
                                  = \ (w2_iayzL :: GHC.Event.IntTable.Bucket [FdData]) ->
                                      case w2_iayzL of {
                                        GHC.Event.IntTable.Empty ->
                                          (# GHC.Types.False, GHC.Base.Nothing @ [FdData],
                                             GHC.Event.IntTable.Empty @ [FdData] #);
                                        GHC.Event.IntTable.Bucket dt15_iayzS ds8_iayzT ds9_iayzU ->
                                          case ==# dt15_iayzS x1_i8hv8 of {
                                            __DEFAULT ->
                                              case $wgo_iayzK ds9_iayzU of
                                              { (# ww4_iayzZ, ww5_iayA0, ww6_iayA1 #) ->
                                              (# ww4_iayzZ, ww5_iayA0,
                                                 GHC.Event.IntTable.Bucket
                                                   @ [FdData] dt15_iayzS ds8_iayzT ww6_iayA1 #)
                                              };
                                            1# ->
                                              (# GHC.Types.True, GHC.Base.Just @ [FdData] ds8_iayzT,
                                                 ds9_iayzU #)
                                          }
                                      }; } in
                              case $wgo_iayzK ipv6_iayzN of
                              { (# ww4_iayAb, ww5_iayAc, ww6_iayAd #) ->
                              join {
                                $j1_sayCg [Dmd=<C(C(S)),1*C1(C1(U(U,U)))>]
                                  :: State# RealWorld
                                     -> Maybe [FdData] -> (# State# RealWorld, [FdData] #)
                                [LclId[JoinId(2)], Arity=2, Str=<S,U><S,1*U>, Unf=OtherCon []]
                                $j1_sayCg (ipv7_i7IAy [OS=OneShot] :: State# RealWorld)
                                          (ipv8_i7IAz [OS=OneShot] :: Maybe [FdData])
                                  = case ipv8_i7IAz of {
                                      Nothing -> (# ipv7_i7IAy, GHC.Types.[] @ FdData #);
                                      Just x2_i8O4S ->
                                        let {
                                          ds8_saxA0 [Dmd=<L,U(1*U,1*U)>] :: ([FdData], [FdData])
                                          [LclId]
                                          ds8_saxA0
                                            = letrec {
                                                $wgo1_sazsa [InlPrag=NOUSERINLINE[0],
                                                             Occ=LoopBreaker]
                                                  :: [FdData] -> (# [FdData], [FdData] #)
                                                [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []]
                                                $wgo1_sazsa
                                                  = \ (w1_sazs6 :: [FdData]) ->
                                                      case w1_sazs6 of {
                                                        [] ->
                                                          (# GHC.Types.[] @ FdData,
                                                             GHC.Types.[] @ FdData #);
                                                        : y_i7Jcp ys_i7Jcq ->
                                                          case evs_aawm9
                                                               `cast` (GHC.Event.Internal.N:Event[0]
                                                                       :: (Event :: *)
                                                                          ~R# (Int :: *))
                                                          of
                                                          { I# x#_iaihA ->
                                                          case y_i7Jcp of wild9_X1L
                                                          { FdData dt15_dawZl dt16_dawZm dt17_dawZn
                                                                   ds9_dawWm ->
                                                          let {
                                                            w2_iax6T [Dmd=<L,U(1*U,1*U)>]
                                                              :: ([FdData], [FdData])
                                                            [LclId]
                                                            w2_iax6T
                                                              = case $wgo1_sazsa ys_i7Jcq of
                                                                { (# ww8_sazwc, ww9_sazwd #) ->
                                                                (ww8_sazwc, ww9_sazwd)
                                                                } } in
                                                          case andI# x#_iaihA (andI# dt17_dawZn 7#)
                                                          of {
                                                            __DEFAULT ->
                                                              (# GHC.Types.:
                                                                   @ FdData
                                                                   wild9_X1L
                                                                   (case w2_iax6T of
                                                                    { (ts_iax7b, fs_iax7c) ->
                                                                    ts_iax7b
                                                                    }),
                                                                 case w2_iax6T of
                                                                 { (ts_iax7g, fs_iax7h) ->
                                                                 fs_iax7h
                                                                 } #);
                                                            0# ->
                                                              (# case w2_iax6T of
                                                                 { (ts_iax6Z, fs_iax70) ->
                                                                 ts_iax6Z
                                                                 },
                                                                 GHC.Types.:
                                                                   @ FdData
                                                                   wild9_X1L
                                                                   (case w2_iax6T of
                                                                    { (ts_iax74, fs_iax75) ->
                                                                    fs_iax75
                                                                    }) #)
                                                          }
                                                          }
                                                          }
                                                      }; } in
                                              case $wgo1_sazsa x2_i8O4S of
                                              { (# ww8_sazwc, ww9_sazwd #) ->
                                              (ww8_sazwc, ww9_sazwd)
                                              } } in
                                        let {
                                          triggered_saxzZ :: [FdData]
                                          [LclId]
                                          triggered_saxzZ
                                            = case ds8_saxA0 of
                                              { (triggered1_aawEf, notTriggered_aawEh) ->
                                              triggered1_aawEf
                                              } } in
                                        let {
                                          saved_saxzY :: [FdData]
                                          [LclId]
                                          saved_saxzY
                                            = case ds8_saxA0 of
                                              { (triggered1_aawEf, notTriggered_aawEh) ->
                                              ++
                                                @ FdData
                                                notTriggered_aawEh
                                                (filter @ FdData lvl8_raAuf triggered_saxzZ)
                                              } } in
                                        case GHC.Event.IntTable.$winsertWith
                                               @ [FdData]
                                               (\ _ [Occ=Dead] _ [Occ=Dead, OS=OneShot] ->
                                                  saved_saxzY)
                                               x1_i8hv8
                                               saved_saxzY
                                               ww2_sazsm
                                               ipv7_i7IAy
                                        of
                                        { (# ipv9_X7IF5, ipv10_X7IF7 #) ->
                                        case GHC.Event.Manager.$weventsOf x2_i8O4S of ww7_sazrd
                                        { __DEFAULT ->
                                        case GHC.Event.Manager.$weventsOf saved_saxzY of ww8_XazyW
                                        { __DEFAULT ->
                                        join {
                                          fail_saxzW [Dmd=<L,1*C1(U(U,U))>]
                                            :: Void# -> (# State# RealWorld, [FdData] #)
                                          [LclId[JoinId(1)], Arity=1, Str=<L,A>, Unf=OtherCon []]
                                          fail_saxzW _ [Occ=Dead, OS=OneShot]
                                            = case andI# ww8_XazyW 8# of {
                                                __DEFAULT ->
                                                  case ((bModifyFd_sazYK
                                                           bState_sazYI
                                                           (wild4_i8hv6
                                                            `cast` (Sym (Foreign.C.Types.N:CInt[0]) ; Sym (System.Posix.Types.N:Fd[0])
                                                                    :: (GHC.Int.Int32 :: *)
                                                                       ~R# (Fd :: *)))
                                                           ((GHC.Types.I# (andI# ww7_sazrd 7#))
                                                            `cast` (Sym (GHC.Event.Internal.N:Event[0])
                                                                    :: (Int :: *) ~R# (Event :: *)))
                                                           ((GHC.Types.I# (andI# ww8_XazyW 7#))
                                                            `cast` (Sym (GHC.Event.Internal.N:Event[0])
                                                                    :: (Int :: *)
                                                                       ~R# (Event :: *))))
                                                        `cast` (GHC.Types.N:IO[0] <Bool>_R
                                                                :: (IO Bool :: *)
                                                                   ~R# (State# RealWorld
                                                                        -> (# State# RealWorld,
                                                                              Bool #) :: *)))
                                                         ipv9_X7IF5
                                                  of
                                                  { (# ipv11_i928Z, ipv12_i9290 #) ->
                                                  (# ipv11_i928Z, triggered_saxzZ #)
                                                  };
                                                0# ->
                                                  join {
                                                    $j2_saxIh [Dmd=<L,1*U(U,U)>]
                                                      :: (# State# RealWorld, [FdData] #)
                                                    [LclId[JoinId(0)]]
                                                    $j2_saxIh
                                                      = case ((ds2_sazYL
                                                                 bState_sazYI
                                                                 (wild4_i8hv6
                                                                  `cast` (Sym (Foreign.C.Types.N:CInt[0]) ; Sym (System.Posix.Types.N:Fd[0])
                                                                          :: (GHC.Int.Int32 :: *)
                                                                             ~R# (Fd :: *)))
                                                                 ((GHC.Types.I#
                                                                     (andI# ww8_XazyW 7#))
                                                                  `cast` (Sym (GHC.Event.Internal.N:Event[0])
                                                                          :: (Int :: *)
                                                                             ~R# (Event :: *))))
                                                              `cast` (GHC.Types.N:IO[0] <Bool>_R
                                                                      :: (IO Bool :: *)
                                                                         ~R# (State# RealWorld
                                                                              -> (# State#
                                                                                      RealWorld,
                                                                                    Bool #) :: *)))
                                                               ipv9_X7IF5
                                                        of
                                                        { (# ipv11_i928Z, ipv12_i9290 #) ->
                                                        (# ipv11_i928Z, triggered_saxzZ #)
                                                        } } in
                                                  case andI# ww7_sazrd 8# of {
                                                    __DEFAULT -> jump $j2_saxIh;
                                                    0# ->
                                                      case andI# ww8_XazyW 7# of {
                                                        __DEFAULT -> jump $j2_saxIh;
                                                        0# -> (# ipv9_X7IF5, triggered_saxzZ #)
                                                      }
                                                  }
                                              } } in
                                        case andI# ww7_sazrd 8# of {
                                          __DEFAULT ->
                                            case ==# ww7_sazrd ww8_XazyW of {
                                              __DEFAULT -> jump fail_saxzW void#;
                                              1# -> (# ipv9_X7IF5, triggered_saxzZ #)
                                            };
                                          0# -> jump fail_saxzW void#
                                        }
                                        }
                                        }
                                        }
                                    } } in
                              case ww5_iayAc of wild6_iayAf {
                                Nothing -> jump $j1_sayCg ipv5_iayzM (GHC.Base.Nothing @ [FdData]);
                                Just ipv7_iayAj ->
                                  case writeArray#
                                         @ RealWorld
                                         @ (GHC.Event.IntTable.Bucket [FdData])
                                         dt12_iayzE
                                         n#_iayzD
                                         ww6_iayAd
                                         ipv5_iayzM
                                  of s1#_iayAl
                                  { __DEFAULT ->
                                  case ww4_iayAb of {
                                    False -> jump $j1_sayCg s1#_iayAl wild6_iayAf;
                                    True ->
                                      case readIntOffAddr# @ RealWorld dt13_iayzF 0# s1#_iayAl of
                                      { (# ipv8_iayAt, ipv9_iayAu #) ->
                                      case writeIntOffAddr#
                                             @ RealWorld dt13_iayzF 0# (-# ipv9_iayAu 1#) ipv8_iayAt
                                      of s2_iayAw
                                      { __DEFAULT ->
                                      case touch#
                                             @ 'LiftedRep
                                             @ GHC.ForeignPtr.ForeignPtrContents
                                             dt14_iayzG
                                             s2_iayAw
                                      of s'_iayAx
                                      { __DEFAULT ->
                                      jump $j1_sayCg s'_iayAx wild6_iayAf
                                      }
                                      }
                                      }
                                  }
                                  }
                              }
                              }
                              }
                              }
                              } } in
                      let {
                        io_saxzO [InlPrag=NOUSERINLINE[0], Dmd=<L,1*C1(C1(U))>]
                          :: IntTable [FdData]
                             -> State# RealWorld -> (# State# RealWorld, [FdData] #)
                        [LclId,
                         Arity=2,
                         Str=<S(S),1*U(U)><S,U>,
                         Unf=Unf{Src=InlineStable, TopLvl=False, Value=True, ConLike=True,
                                 WorkFree=True, Expandable=True,
                                 Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
                                 Tmpl= \ (w_sazsi [Occ=Once] :: IntTable [FdData])
                                         (w1_sazsj [Occ=Once] :: State# RealWorld) ->
                                         case w_sazsi
                                              `cast` (GHC.Event.IntTable.N:IntTable[0]
                                                          <[FdData]>_R ; GHC.IORef.N:IORef[0] <GHC.Event.IntTable.IT
                                                                                                 [FdData]>_N
                                                      :: (IntTable [FdData] :: *)
                                                         ~R# (GHC.STRef.STRef
                                                                RealWorld
                                                                (GHC.Event.IntTable.IT
                                                                   [FdData]) :: *))
                                         of
                                         { GHC.STRef.STRef ww3_sazsm [Occ=Once] ->
                                         $wio_sazso ww3_sazsm w1_sazsj
                                         }}]
                        io_saxzO
                          = \ (w_sazsi [OS=OneShot] :: IntTable [FdData])
                              (w1_sazsj [OS=OneShot] :: State# RealWorld) ->
                              case w_sazsi
                                   `cast` (GHC.Event.IntTable.N:IntTable[0]
                                               <[FdData]>_R ; GHC.IORef.N:IORef[0] <GHC.Event.IntTable.IT
                                                                                      [FdData]>_N
                                           :: (IntTable [FdData] :: *)
                                              ~R# (GHC.STRef.STRef
                                                     RealWorld
                                                     (GHC.Event.IntTable.IT [FdData]) :: *))
                              of
                              { GHC.STRef.STRef ww3_sazsm ->
                              $wio_sazso ww3_sazsm w1_sazsj
                              } } in
                      case ipv1_iafMX of {
                        __DEFAULT ->
                          case takeMVar#
                                 @ RealWorld @ (IntTable [FdData]) ww1_sazsr ipv_iafMW
                          of
                          { (# ipv3_i7IAy, ipv4_i7IAz #) ->
                          case catch#
                                 @ [FdData]
                                 @ GHC.Exception.SomeException
                                 (maskAsyncExceptions# @ [FdData] (io_saxzO ipv4_i7IAz))
                                 (\ (e1_iafN9 [OS=OneShot] :: GHC.Exception.SomeException)
                                    (s1_iafNa [OS=OneShot] :: State# RealWorld) ->
                                    case putMVar#
                                           @ RealWorld
                                           @ (IntTable [FdData])
                                           ww1_sazsr
                                           ipv4_i7IAz
                                           s1_iafNa
                                    of s2#_i9DsB
                                    { __DEFAULT ->
                                    raiseIO#
                                      @ GHC.Exception.SomeException @ [FdData] e1_iafN9 s2#_i9DsB
                                    })
                                 ipv3_i7IAy
                          of
                          { (# ipv5_X7IAZ, ipv6_X7IB1 #) ->
                          case putMVar#
                                 @ RealWorld @ (IntTable [FdData]) ww1_sazsr ipv4_i7IAz ipv5_X7IAZ
                          of s2#_i9DsB
                          { __DEFAULT ->
                          joinrec {
                            go_sayMZ [Occ=LoopBreaker]
                              :: [FdData] -> State# RealWorld -> (# State# RealWorld, () #)
                            [LclId[JoinId(2)], Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []]
                            go_sayMZ (ds9_i7Jck :: [FdData]) (eta1_X6Y :: State# RealWorld)
                              = case ds9_i7Jck of {
                                  [] -> (# eta1_X6Y, GHC.Tuple.() #);
                                  : y_i7Jcp ys_i7Jcq ->
                                    case y_i7Jcp of
                                    { FdData dt12_dawXH dt13_dawXI dt14_dawXJ cb_aawmp ->
                                    case ((cb_aawmp
                                             (GHC.Event.Manager.FdKey dt12_dawXH dt13_dawXI)
                                             evs_aawm9)
                                          `cast` (GHC.Types.N:IO[0] <()>_R
                                                  :: (IO () :: *)
                                                     ~R# (State# RealWorld
                                                          -> (# State# RealWorld, () #) :: *)))
                                           eta1_X6Y
                                    of
                                    { (# ipv7_i7JiK, ipv8_i7JiL #) ->
                                    jump go_sayMZ ys_i7Jcq ipv7_i7JiK
                                    }
                                    }
                                }; } in
                          jump go_sayMZ ipv6_X7IB1 s2#_i9DsB
                          }
                          }
                          };
                        0# ->
                          case maskAsyncExceptions#
                                 @ [FdData]
                                 (\ (s1_X7IEN [OS=OneShot] :: State# RealWorld) ->
                                    case takeMVar#
                                           @ RealWorld @ (IntTable [FdData]) ww1_sazsr s1_X7IEN
                                    of
                                    { (# ipv3_i7IAy, ipv4_i7IAz #) ->
                                    case catch#
                                           @ [FdData]
                                           @ GHC.Exception.SomeException
                                           (unmaskAsyncExceptions# @ [FdData] (io_saxzO ipv4_i7IAz))
                                           (\ (e1_iafN9 [OS=OneShot] :: GHC.Exception.SomeException)
                                              (s2_iafNa [OS=OneShot] :: State# RealWorld) ->
                                              case putMVar#
                                                     @ RealWorld
                                                     @ (IntTable [FdData])
                                                     ww1_sazsr
                                                     ipv4_i7IAz
                                                     s2_iafNa
                                              of s2#_i9DsB
                                              { __DEFAULT ->
                                              raiseIO#
                                                @ GHC.Exception.SomeException
                                                @ [FdData]
                                                e1_iafN9
                                                s2#_i9DsB
                                              })
                                           ipv3_i7IAy
                                    of
                                    { (# ipv5_X7IAZ, ipv6_X7IB1 #) ->
                                    case putMVar#
                                           @ RealWorld
                                           @ (IntTable [FdData])
                                           ww1_sazsr
                                           ipv4_i7IAz
                                           ipv5_X7IAZ
                                    of s2#_i9DsB
                                    { __DEFAULT ->
                                    (# s2#_i9DsB, ipv6_X7IB1 #)
                                    }
                                    }
                                    })
                                 ipv_iafMW
                          of
                          { (# ipv3_i7IAy, ipv4_i7IAz #) ->
                          joinrec {
                            go_sayMZ [Occ=LoopBreaker]
                              :: [FdData] -> State# RealWorld -> (# State# RealWorld, () #)
                            [LclId[JoinId(2)], Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []]
                            go_sayMZ (ds8_i7Jck :: [FdData]) (eta1_X6Y :: State# RealWorld)
                              = case ds8_i7Jck of {
                                  [] -> (# eta1_X6Y, GHC.Tuple.() #);
                                  : y_i7Jcp ys_i7Jcq ->
                                    case y_i7Jcp of
                                    { FdData dt12_dawXH dt13_dawXI dt14_dawXJ cb_aawmp ->
                                    case ((cb_aawmp
                                             (GHC.Event.Manager.FdKey dt12_dawXH dt13_dawXI)
                                             evs_aawm9)
                                          `cast` (GHC.Types.N:IO[0] <()>_R
                                                  :: (IO () :: *)
                                                     ~R# (State# RealWorld
                                                          -> (# State# RealWorld, () #) :: *)))
                                           eta1_X6Y
                                    of
                                    { (# ipv5_i7JiK, ipv6_i7JiL #) ->
                                    jump go_sayMZ ys_i7Jcq ipv5_i7JiK
                                    }
                                    }
                                }; } in
                          jump go_sayMZ ipv4_i7IAz ipv3_i7IAy
                          };
                        1# ->
                          case takeMVar#
                                 @ RealWorld @ (IntTable [FdData]) ww1_sazsr ipv_iafMW
                          of
                          { (# ipv3_i7IAy, ipv4_i7IAz #) ->
                          case catch#
                                 @ [FdData]
                                 @ GHC.Exception.SomeException
                                 (maskUninterruptible# @ [FdData] (io_saxzO ipv4_i7IAz))
                                 (\ (e1_iafN9 [OS=OneShot] :: GHC.Exception.SomeException)
                                    (s1_iafNa [OS=OneShot] :: State# RealWorld) ->
                                    case putMVar#
                                           @ RealWorld
                                           @ (IntTable [FdData])
                                           ww1_sazsr
                                           ipv4_i7IAz
                                           s1_iafNa
                                    of s2#_i9DsB
                                    { __DEFAULT ->
                                    raiseIO#
                                      @ GHC.Exception.SomeException @ [FdData] e1_iafN9 s2#_i9DsB
                                    })
                                 ipv3_i7IAy
                          of
                          { (# ipv5_X7IAZ, ipv6_X7IB1 #) ->
                          case putMVar#
                                 @ RealWorld @ (IntTable [FdData]) ww1_sazsr ipv4_i7IAz ipv5_X7IAZ
                          of s2#_i9DsB
                          { __DEFAULT ->
                          joinrec {
                            go_sayMZ [Occ=LoopBreaker]
                              :: [FdData] -> State# RealWorld -> (# State# RealWorld, () #)
                            [LclId[JoinId(2)], Arity=2, Str=<S,1*U><S,U>, Unf=OtherCon []]
                            go_sayMZ (ds9_i7Jck :: [FdData]) (eta1_X6Y :: State# RealWorld)
                              = case ds9_i7Jck of {
                                  [] -> (# eta1_X6Y, GHC.Tuple.() #);
                                  : y_i7Jcp ys_i7Jcq ->
                                    case y_i7Jcp of
                                    { FdData dt12_dawXH dt13_dawXI dt14_dawXJ cb_aawmp ->
                                    case ((cb_aawmp
                                             (GHC.Event.Manager.FdKey dt12_dawXH dt13_dawXI)
                                             evs_aawm9)
                                          `cast` (GHC.Types.N:IO[0] <()>_R
                                                  :: (IO () :: *)
                                                     ~R# (State# RealWorld
                                                          -> (# State# RealWorld, () #) :: *)))
                                           eta1_X6Y
                                    of
                                    { (# ipv7_i7JiK, ipv8_i7JiL #) ->
                                    jump go_sayMZ ys_i7Jcq ipv7_i7JiK
                                    }
                                    }
                                }; } in
                          jump go_sayMZ ipv6_X7IB1 s2#_i9DsB
                          }
                          }
                          }
                      }
                      }
                      }
                  }
              }
              };
            1# -> jump $j_saxIT
          };
        1# -> jump $j_saxIT
      }
      }
      }
      }
      }
      }

-- RHS size: {terms: 2, types: 1, coercions: 0, joins: 0/0}
GHC.Event.Manager.loop4 :: Maybe Timeout
[GblId,
 Caf=NoCafRefs,
 Str=m2,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Event.Manager.loop4
  = GHC.Base.Just @ Timeout GHC.Event.Internal.Forever

-- RHS size: {terms: 81, types: 140, coercions: 27, joins: 0/0}
GHC.Event.Manager.loop3
  :: EventManager
     -> State# RealWorld -> (# State# RealWorld, State #)
[GblId,
 Arity=2,
 Str=<S(SSSLLLLLLLLLL),1*U(U,U(U),U(U),A,U,U,A,U,A,U,A,U,A)><S,U>m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [20 0] 337 0}]
GHC.Event.Manager.loop3
  = \ (mgr_aawkH :: EventManager) (eta_B1 :: State# RealWorld) ->
      case mgr_aawkH of wild_X3Z
      { EventManager ds_dawSS dt_dawXK dt1_dawXL dt2_dawXM dt3_dawXN
                     dt4_dawXO dt5_dawXP dt6_dawXQ dt7_dawXR dt8_dawXS dt9_dawXT
                     dt10_dawXU dt11_dawXV ->
      case ds_dawSS of
      { GHC.Event.Internal.Backend @ a_sazZ5 bState_sazZ6 bPoll_sazZ7
                                   ds1_sazZ8 ds2_sazZ9 ds3_sazZa ->
      case ((bPoll_sazZ7
               bState_sazZ6
               (GHC.Base.Nothing @ Timeout)
               ((GHC.Event.Manager.loop5 wild_X3Z)
                `cast` (<Fd>_R ->_R <Event>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
                        :: (Fd
                            -> Event -> State# RealWorld -> (# State# RealWorld, () #) :: *)
                           ~R# (Fd -> Event -> IO () :: *))))
            `cast` (GHC.Types.N:IO[0] <Int>_R
                    :: (IO Int :: *)
                       ~R# (State# RealWorld -> (# State# RealWorld, Int #) :: *)))
             eta_B1
      of
      { (# ipv_i7IAy, ipv1_i7IAz #) ->
      case ipv1_i7IAz of { I# x1_at1e ->
      case <=# x1_at1e 0# of {
        __DEFAULT ->
          case readMutVar# @ RealWorld @ State dt4_dawXO ipv_i7IAy
          of ds5_X7IJw
          { (# ipv2_X7IJA, ipv3_X7IJC #) ->
          case ipv3_X7IJC of { __DEFAULT -> ds5_X7IJw }
          };
        1# ->
          case yield# ipv_i7IAy of s1_iax8Y { __DEFAULT ->
          case ((bPoll_sazZ7
                   bState_sazZ6
                   (GHC.Base.Nothing @ Timeout)
                   ((GHC.Event.Manager.loop5 wild_X3Z)
                    `cast` (<Fd>_R ->_R <Event>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
                            :: (Fd
                                -> Event -> State# RealWorld -> (# State# RealWorld, () #) :: *)
                               ~R# (Fd -> Event -> IO () :: *))))
                `cast` (GHC.Types.N:IO[0] <Int>_R
                        :: (IO Int :: *)
                           ~R# (State# RealWorld -> (# State# RealWorld, Int #) :: *)))
                 s1_iax8Y
          of
          { (# ipv2_X7IF5, ipv3_X7IF7 #) ->
          case ipv3_X7IF7 of { I# x2_Xt8A ->
          case <=# x2_Xt8A 0# of {
            __DEFAULT ->
              case readMutVar# @ RealWorld @ State dt4_dawXO ipv2_X7IF5
              of ds6_X7IJw
              { (# ipv4_X7IJA, ipv5_X7IJC #) ->
              case ipv5_X7IJC of { __DEFAULT -> ds6_X7IJw }
              };
            1# ->
              case ((bPoll_sazZ7
                       bState_sazZ6
                       GHC.Event.Manager.loop4
                       ((GHC.Event.Manager.loop5 wild_X3Z)
                        `cast` (<Fd>_R ->_R <Event>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
                                :: (Fd
                                    -> Event -> State# RealWorld -> (# State# RealWorld, () #) :: *)
                                   ~R# (Fd -> Event -> IO () :: *))))
                    `cast` (GHC.Types.N:IO[0] <Int>_R
                            :: (IO Int :: *)
                               ~R# (State# RealWorld -> (# State# RealWorld, Int #) :: *)))
                     ipv2_X7IF5
              of
              { (# ipv4_X7IFe, ipv5_X7IFg #) ->
              case readMutVar# @ RealWorld @ State dt4_dawXO ipv4_X7IFe
              of ds7_X7IJw
              { (# ipv6_X7IJA, ipv7_X7IJC #) ->
              case ipv7_X7IJC of { __DEFAULT -> ds7_X7IJw }
              }
              }
          }
          }
          }
          }
      }
      }
      }
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 5, joins: 0/0}
step :: EventManager -> IO State
[GblId,
 Arity=2,
 Str=<S(SSSLLLLLLLLLL),1*U(U,U(U),U(U),A,U,U,A,U,A,U,A,U,A)><S,U>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.Event.Manager.loop3
               `cast` (<EventManager>_R ->_R Sym (GHC.Types.N:IO[0] <State>_R)
                       :: (EventManager
                           -> State# RealWorld -> (# State# RealWorld, State #) :: *)
                          ~R# (EventManager -> IO State :: *))}]
step
  = GHC.Event.Manager.loop3
    `cast` (<EventManager>_R ->_R Sym (GHC.Types.N:IO[0] <State>_R)
            :: (EventManager
                -> State# RealWorld -> (# State# RealWorld, State #) :: *)
               ~R# (EventManager -> IO State :: *))

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl9_raAug :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl9_raAug = "GHC.Event.Manager.loop: state is already Running"#

-- RHS size: {terms: 3, types: 3, coercions: 0, joins: 0/0}
GHC.Event.Manager.loop2 :: IO ()
[GblId, Str=x]
GHC.Event.Manager.loop2
  = errorWithoutStackTrace
      @ 'LiftedRep @ (IO ()) (unpackCString# lvl9_raAug)

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
GHC.Event.Manager.loop8 :: (State, State)
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
GHC.Event.Manager.loop8
  = (GHC.Event.Manager.Running, GHC.Event.Manager.Created)

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
GHC.Event.Manager.loop7 :: (State, State)
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
GHC.Event.Manager.loop7
  = (GHC.Event.Manager.Running, GHC.Event.Manager.Releasing)

-- RHS size: {terms: 11, types: 4, coercions: 0, joins: 0/0}
GHC.Event.Manager.loop6 :: State -> (State, State)
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S,1*U>m,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
         Tmpl= \ (a1_iarpe [Occ=Once!] :: State) ->
                 case a1_iarpe of wild_X1P {
                   __DEFAULT -> (wild_X1P, wild_X1P);
                   Created -> GHC.Event.Manager.loop8;
                   Releasing -> GHC.Event.Manager.loop7
                 }}]
GHC.Event.Manager.loop6
  = \ (a1_iarpe :: State) ->
      case a1_iarpe of wild_X1P {
        __DEFAULT -> (wild_X1P, wild_X1P);
        Created -> GHC.Event.Manager.loop8;
        Releasing -> GHC.Event.Manager.loop7
      }

-- RHS size: {terms: 191, types: 366, coercions: 4, joins: 0/1}
GHC.Event.Manager.loop1
  :: EventManager -> State# RealWorld -> (# State# RealWorld, () #)
[GblId,
 Arity=2,
 Str=<S(SSSLLSLLLLSLS),1*U(U,U(U),U(U),A,U,U,A,U,U,U,U,U,U)><S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [20 0] 635 30}]
GHC.Event.Manager.loop1
  = \ (mgr_aawkw :: EventManager) (eta_B1 :: State# RealWorld) ->
      case mgr_aawkw of wild_X40
      { EventManager ds_dawTD dt_dawXW dt1_dawXX dt2_dawXY dt3_dawXZ
                     dt4_dawY0 dt5_dawY1 dt6_dawY2 dt7_dawY3 dt8_dawY4 dt9_dawY5
                     dt10_dawY6 dt11_dawY7 ->
      case takeMVar# @ RealWorld @ () dt11_dawY7 eta_B1 of
      { (# ipv_i928Z, ipv1_i9290 #) ->
      case atomicModifyMutVar#
             @ RealWorld
             @ State
             @ (State, State)
             @ State
             dt4_dawY0
             GHC.Event.Manager.loop6
             ipv_i928Z
      of
      { (# ipv2_iarpn, ipv3_iarpo #) ->
      case ipv3_iarpo of {
        __DEFAULT ->
          letrec {
            go_saxzL [Occ=LoopBreaker]
              :: State# RealWorld -> (# State# RealWorld, () #)
            [LclId, Arity=1, Str=<S,U>, Unf=OtherCon []]
            go_saxzL
              = \ (s_X7IEQ :: State# RealWorld) ->
                  case GHC.Event.Manager.loop3 wild_X40 s_X7IEQ of
                  { (# ipv4_i7IAy, ipv5_i7IAz #) ->
                  case ipv5_i7IAz of {
                    __DEFAULT -> GHC.Event.Manager.cleanup1 wild_X40 ipv4_i7IAy;
                    Running ->
                      case yield# ipv4_i7IAy of s1_iax8Y { __DEFAULT ->
                      go_saxzL s1_iax8Y
                      };
                    Releasing ->
                      case putMVar# @ RealWorld @ () dt11_dawY7 GHC.Tuple.() ipv4_i7IAy
                      of s2#_i9DsB
                      { __DEFAULT ->
                      (# s2#_i9DsB, GHC.Tuple.() #)
                      }
                  }
                  }; } in
          catch#
            @ ()
            @ GHC.Exception.SomeException
            go_saxzL
            (\ (e1_iafN9 [OS=OneShot] :: GHC.Exception.SomeException)
               (s_iafNa [OS=OneShot] :: State# RealWorld) ->
               case ds_dawTD of
               { GHC.Event.Internal.Backend @ a_sazY8 bState_sazY9 ds3_sazYa
                                            ds4_sazYb ds5_sazYc bDelete_sazYd ->
               case writeMutVar#
                      @ RealWorld @ State dt4_dawY0 GHC.Event.Manager.Finished s_iafNa
               of s2#_i7IBe
               { __DEFAULT ->
               case tryPutMVar# @ RealWorld @ () dt11_dawY7 GHC.Tuple.() s2#_i7IBe
               of
               { (# ipv4_iax3e, ipv5_iax3f #) ->
               case ((bDelete_sazYd bState_sazY9)
                     `cast` (GHC.Types.N:IO[0] <()>_R
                             :: (IO () :: *)
                                ~R# (State# RealWorld -> (# State# RealWorld, () #) :: *)))
                      ipv4_iax3e
               of
               { (# ipv6_X7JmM, ipv7_X7JmO #) ->
               case atomicModifyMutVar#
                      @ RealWorld
                      @ Bool
                      @ (Bool, ())
                      @ ()
                      dt10_dawY6
                      GHC.Event.Control.closeControl2
                      ipv6_X7JmM
               of
               { (# ipv8_i7JiK, ipv9_i7JiL #) ->
               case {__pkg_ccall base-4.11.0.0 Int#
                           -> State# RealWorld -> (# State# RealWorld, Int# #)}_iao5C
                      (narrow32Int# dt6_dawY2) ipv8_i7JiK
               of
               { (# ds9_iao5H, ds10_iao5I #) ->
               case {__pkg_ccall base-4.11.0.0 Int#
                           -> State# RealWorld -> (# State# RealWorld, Int# #)}_iao5C
                      (narrow32Int# dt7_dawY3) ds9_iao5H
               of
               { (# ds11_Xao9L, ds12_Xao9N #) ->
               case dt9_dawY5 of {
                 False ->
                   case {__pkg_ccall base-4.11.0.0 Int#
                           -> State# RealWorld -> (# State# RealWorld, Int# #)}_iao5C
                          (narrow32Int# dt8_dawY4) ds11_Xao9L
                   of
                   { (# ds13_Xaoa2, ds14_Xaoa4 #) ->
                   raiseIO# @ GHC.Exception.SomeException @ () e1_iafN9 ds13_Xaoa2
                   };
                 True ->
                   case {__pkg_ccall base-4.11.0.0 Int#
                           -> State# RealWorld -> (# State# RealWorld #)}_dao8Y
                          -1# ds11_Xao9L
                   of
                   { (# ds13_dao8W #) ->
                   case {__pkg_ccall base-4.11.0.0 Int#
                           -> State# RealWorld -> (# State# RealWorld, Int# #)}_iao5C
                          (narrow32Int# dt8_dawY4) ds13_dao8W
                   of
                   { (# ds14_Xaoa2, ds15_Xaoa4 #) ->
                   raiseIO# @ GHC.Exception.SomeException @ () e1_iafN9 ds14_Xaoa2
                   }
                   }
               }
               }
               }
               }
               }
               }
               }
               })
            ipv2_iarpn;
        Running ->
          case ds_dawTD of
          { GHC.Event.Internal.Backend @ a_sazY8 bState_sazY9 ds3_sazYa
                                       ds4_sazYb ds5_sazYc bDelete_sazYd ->
          case writeMutVar#
                 @ RealWorld @ State dt4_dawY0 GHC.Event.Manager.Finished ipv2_iarpn
          of s2#_i7IBe
          { __DEFAULT ->
          case tryPutMVar# @ RealWorld @ () dt11_dawY7 GHC.Tuple.() s2#_i7IBe
          of
          { (# ipv4_iax3e, ipv5_iax3f #) ->
          case ((bDelete_sazYd bState_sazY9)
                `cast` (GHC.Types.N:IO[0] <()>_R
                        :: (IO () :: *)
                           ~R# (State# RealWorld -> (# State# RealWorld, () #) :: *)))
                 ipv4_iax3e
          of
          { (# ipv6_X7JmM, ipv7_X7JmO #) ->
          case atomicModifyMutVar#
                 @ RealWorld
                 @ Bool
                 @ (Bool, ())
                 @ ()
                 dt10_dawY6
                 GHC.Event.Control.closeControl2
                 ipv6_X7JmM
          of
          { (# ipv8_i7JiK, ipv9_i7JiL #) ->
          case {__pkg_ccall base-4.11.0.0 Int#
                           -> State# RealWorld -> (# State# RealWorld, Int# #)}_iao5C
                 (narrow32Int# dt6_dawY2) ipv8_i7JiK
          of
          { (# ds9_iao5H, ds10_iao5I #) ->
          case {__pkg_ccall base-4.11.0.0 Int#
                           -> State# RealWorld -> (# State# RealWorld, Int# #)}_iao5C
                 (narrow32Int# dt7_dawY3) ds9_iao5H
          of
          { (# ds11_Xao9L, ds12_Xao9N #) ->
          case dt9_dawY5 of {
            False ->
              case {__pkg_ccall base-4.11.0.0 Int#
                           -> State# RealWorld -> (# State# RealWorld, Int# #)}_iao5C
                     (narrow32Int# dt8_dawY4) ds11_Xao9L
              of
              { (# ds13_Xaoa2, ds14_Xaoa4 #) ->
              case GHC.Event.Manager.loop2 of wild6_00 { }
              };
            True ->
              case {__pkg_ccall base-4.11.0.0 Int#
                           -> State# RealWorld -> (# State# RealWorld #)}_dao8Y
                     -1# ds11_Xao9L
              of
              { (# ds13_dao8W #) ->
              case {__pkg_ccall base-4.11.0.0 Int#
                           -> State# RealWorld -> (# State# RealWorld, Int# #)}_iao5C
                     (narrow32Int# dt8_dawY4) ds13_dao8W
              of
              { (# ds14_Xaoa2, ds15_Xaoa4 #) ->
              case GHC.Event.Manager.loop2 of wild7_00 { }
              }
              }
          }
          }
          }
          }
          }
          }
          }
          };
        Dying -> GHC.Event.Manager.cleanup1 wild_X40 ipv2_iarpn;
        Finished -> (# ipv2_iarpn, GHC.Tuple.() #)
      }
      }
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 5, joins: 0/0}
loop :: EventManager -> IO ()
[GblId,
 Arity=2,
 Str=<S(SSSLLSLLLLSLS),1*U(U,U(U),U(U),A,U,U,A,U,U,U,U,U,U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.Event.Manager.loop1
               `cast` (<EventManager>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
                       :: (EventManager
                           -> State# RealWorld -> (# State# RealWorld, () #) :: *)
                          ~R# (EventManager -> IO () :: *))}]
loop
  = GHC.Event.Manager.loop1
    `cast` (<EventManager>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)
            :: (EventManager
                -> State# RealWorld -> (# State# RealWorld, () #) :: *)
               ~R# (EventManager -> IO () :: *))

-- RHS size: {terms: 4, types: 9, coercions: 0, joins: 0/0}
GHC.Event.Manager.closeFd_4
  :: State# RealWorld -> (# State# RealWorld, () #)
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=True)}]
GHC.Event.Manager.closeFd_4
  = \ (s_X7IF9 :: State# RealWorld) -> (# s_X7IF9, GHC.Tuple.() #)

-- RHS size: {terms: 146, types: 308, coercions: 18, joins: 1/3}
GHC.Event.Manager.$wcloseFd_ [InlPrag=NOUSERINLINE[0]]
  :: EventManager
     -> MutVar# RealWorld (GHC.Event.IntTable.IT [FdData])
     -> Int#
     -> State# RealWorld
     -> (# State# RealWorld, IO () #)
[GblId,
 Arity=4,
 Str=<L,1*U(U,A,A,A,A,A,A,A,A,A,A,A,A)><S,U><S,U><S,U>,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [20 0 0 0] 414 0}]
GHC.Event.Manager.$wcloseFd_
  = \ (w_sazu3 :: EventManager)
      (ww_sazu9 :: MutVar# RealWorld (GHC.Event.IntTable.IT [FdData]))
      (ww1_sazud :: Int#)
      (w1_sazu6 :: State# RealWorld) ->
      case readMutVar#
             @ RealWorld @ (GHC.Event.IntTable.IT [FdData]) ww_sazu9 w1_sazu6
      of
      { (# ipv_iayzy, ipv1_iayzz #) ->
      case ipv1_iayzz of
      { GHC.Event.IntTable.IT dt_iayzE dt1_iayzF dt2_iayzG ->
      let {
        n#_iayzD [Dmd=<S,U>] :: Int#
        [LclId]
        n#_iayzD
          = andI#
              ww1_sazud
              (-#
                 (sizeofMutableArray#
                    @ RealWorld @ (GHC.Event.IntTable.Bucket [FdData]) dt_iayzE)
                 1#) } in
      case readArray#
             @ RealWorld
             @ (GHC.Event.IntTable.Bucket [FdData])
             dt_iayzE
             n#_iayzD
             ipv_iayzy
      of
      { (# ipv2_iayzM, ipv3_iayzN #) ->
      letrec {
        $wgo_iayzK [InlPrag=NOUSERINLINE[0], Occ=LoopBreaker]
          :: GHC.Event.IntTable.Bucket [FdData]
             -> (# Bool, Maybe [FdData], GHC.Event.IntTable.Bucket [FdData] #)
        [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []]
        $wgo_iayzK
          = \ (w2_iayzL :: GHC.Event.IntTable.Bucket [FdData]) ->
              case w2_iayzL of {
                GHC.Event.IntTable.Empty ->
                  (# GHC.Types.False, GHC.Base.Nothing @ [FdData],
                     GHC.Event.IntTable.Empty @ [FdData] #);
                GHC.Event.IntTable.Bucket dt3_iayzS ds_iayzT ds3_iayzU ->
                  case ==# dt3_iayzS ww1_sazud of {
                    __DEFAULT ->
                      case $wgo_iayzK ds3_iayzU of
                      { (# ww3_iayzZ, ww4_iayA0, ww5_iayA1 #) ->
                      (# ww3_iayzZ, ww4_iayA0,
                         GHC.Event.IntTable.Bucket
                           @ [FdData] dt3_iayzS ds_iayzT ww5_iayA1 #)
                      };
                    1# ->
                      (# GHC.Types.True, GHC.Base.Just @ [FdData] ds_iayzT, ds3_iayzU #)
                  }
              }; } in
      case $wgo_iayzK ipv3_iayzN of
      { (# ww3_iayAb, ww4_iayAc, ww5_iayAd #) ->
      join {
        $j_sayDz [Dmd=<C(C(S)),1*C1(C1(U(U,U)))>]
          :: State# RealWorld
             -> Maybe [FdData] -> (# State# RealWorld, IO () #)
        [LclId[JoinId(2)], Arity=2, Str=<S,U><S,1*U>, Unf=OtherCon []]
        $j_sayDz (ipv4_i7IAy [OS=OneShot] :: State# RealWorld)
                 (ipv5_i7IAz [OS=OneShot] :: Maybe [FdData])
          = case ipv5_i7IAz of {
              Nothing ->
                (# ipv4_i7IAy,
                   GHC.Event.Manager.closeFd_4
                   `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
                           :: (State# RealWorld -> (# State# RealWorld, () #) :: *)
                              ~R# (IO () :: *)) #);
              Just fds_aawm2 ->
                case GHC.Event.Manager.$weventsOf fds_aawm2 of ww8_sazrd {
                  __DEFAULT ->
                    case w_sazu3 of
                    { EventManager ds_dawVt dt4_dawY8 dt5_dawY9 dt6_dawYa dt7_dawYb
                                   dt8_dawYc dt9_dawYd dt10_dawYe dt11_dawYf dt12_dawYg dt13_dawYh
                                   dt14_dawYi dt15_dawYj ->
                    case ds_dawVt of
                    { GHC.Event.Internal.Backend @ a_sazZf bState_sazZg ds4_sazZh
                                                 bModifyFd_sazZi ds5_sazZj ds3_sazZk ->
                    case ((bModifyFd_sazZi
                             bState_sazZg
                             ((GHC.Int.I32# ww1_sazud)
                              `cast` (Sym (Foreign.C.Types.N:CInt[0]) ; Sym (System.Posix.Types.N:Fd[0])
                                      :: (GHC.Int.Int32 :: *) ~R# (Fd :: *)))
                             ((GHC.Types.I# (andI# ww8_sazrd 7#))
                              `cast` (Sym (GHC.Event.Internal.N:Event[0])
                                      :: (Int :: *) ~R# (Event :: *)))
                             GHC.Event.Internal.evtNothing)
                          `cast` (GHC.Types.N:IO[0] <Bool>_R
                                  :: (IO Bool :: *)
                                     ~R# (State# RealWorld -> (# State# RealWorld, Bool #) :: *)))
                           ipv4_i7IAy
                    of
                    { (# ipv6_X7IEV, ipv7_X7IEX #) ->
                    (# ipv6_X7IEV,
                       (GHC.Event.Manager.closeFd_2 fds_aawm2)
                       `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
                               :: (State# RealWorld -> (# State# RealWorld, () #) :: *)
                                  ~R# (IO () :: *)) #)
                    }
                    }
                    };
                  0# ->
                    (# ipv4_i7IAy,
                       (GHC.Event.Manager.closeFd_2 fds_aawm2)
                       `cast` (Sym (GHC.Types.N:IO[0] <()>_R)
                               :: (State# RealWorld -> (# State# RealWorld, () #) :: *)
                                  ~R# (IO () :: *)) #)
                }
            } } in
      case ww4_iayAc of wild1_iayAf {
        Nothing -> jump $j_sayDz ipv2_iayzM (GHC.Base.Nothing @ [FdData]);
        Just ipv4_iayAj ->
          case writeArray#
                 @ RealWorld
                 @ (GHC.Event.IntTable.Bucket [FdData])
                 dt_iayzE
                 n#_iayzD
                 ww5_iayAd
                 ipv2_iayzM
          of s1#_iayAl
          { __DEFAULT ->
          case ww3_iayAb of {
            False -> jump $j_sayDz s1#_iayAl wild1_iayAf;
            True ->
              case readIntOffAddr# @ RealWorld dt1_iayzF 0# s1#_iayAl of
              { (# ipv5_iayAt, ipv6_iayAu #) ->
              case writeIntOffAddr#
                     @ RealWorld dt1_iayzF 0# (-# ipv6_iayAu 1#) ipv5_iayAt
              of s2_iayAw
              { __DEFAULT ->
              case touch#
                     @ 'LiftedRep @ GHC.ForeignPtr.ForeignPtrContents dt2_iayzG s2_iayAw
              of s'_iayAx
              { __DEFAULT ->
              jump $j_sayDz s'_iayAx wild1_iayAf
              }
              }
              }
          }
          }
      }
      }
      }
      }
      }

-- RHS size: {terms: 15, types: 19, coercions: 11, joins: 0/0}
GHC.Event.Manager.closeFd_1 [InlPrag=NOUSERINLINE[0]]
  :: EventManager
     -> IntTable [FdData]
     -> Fd
     -> State# RealWorld
     -> (# State# RealWorld, IO () #)
[GblId,
 Arity=4,
 Str=<L,1*U(U,A,A,A,A,A,A,A,A,A,A,A,A)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=4,unsat_ok=True,boring_ok=False)
         Tmpl= \ (w_sazu3 [Occ=Once] :: EventManager)
                 (w1_sazu4 [Occ=Once] :: IntTable [FdData])
                 (w2_sazu5 [Occ=Once] :: Fd)
                 (w3_sazu6 [Occ=Once] :: State# RealWorld) ->
                 case w1_sazu4
                      `cast` (GHC.Event.IntTable.N:IntTable[0]
                                  <[FdData]>_R ; GHC.IORef.N:IORef[0] <GHC.Event.IntTable.IT
                                                                         [FdData]>_N
                              :: (IntTable [FdData] :: *)
                                 ~R# (GHC.STRef.STRef
                                        RealWorld (GHC.Event.IntTable.IT [FdData]) :: *))
                 of
                 { GHC.STRef.STRef ww1_sazu9 [Occ=Once] ->
                 case w2_sazu5
                      `cast` (System.Posix.Types.N:Fd[0] ; Foreign.C.Types.N:CInt[0]
                              :: (Fd :: *) ~R# (GHC.Int.Int32 :: *))
                 of
                 { GHC.Int.I32# ww3_sazud [Occ=Once] ->
                 GHC.Event.Manager.$wcloseFd_ w_sazu3 ww1_sazu9 ww3_sazud w3_sazu6
                 }
                 }}]
GHC.Event.Manager.closeFd_1
  = \ (w_sazu3 :: EventManager)
      (w1_sazu4 :: IntTable [FdData])
      (w2_sazu5 :: Fd)
      (w3_sazu6 :: State# RealWorld) ->
      case w1_sazu4
           `cast` (GHC.Event.IntTable.N:IntTable[0]
                       <[FdData]>_R ; GHC.IORef.N:IORef[0] <GHC.Event.IntTable.IT
                                                              [FdData]>_N
                   :: (IntTable [FdData] :: *)
                      ~R# (GHC.STRef.STRef
                             RealWorld (GHC.Event.IntTable.IT [FdData]) :: *))
      of
      { GHC.STRef.STRef ww1_sazu9 ->
      case w2_sazu5
           `cast` (System.Posix.Types.N:Fd[0] ; Foreign.C.Types.N:CInt[0]
                   :: (Fd :: *) ~R# (GHC.Int.Int32 :: *))
      of
      { GHC.Int.I32# ww3_sazud ->
      GHC.Event.Manager.$wcloseFd_ w_sazu3 ww1_sazu9 ww3_sazud w3_sazu6
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 12, joins: 0/0}
closeFd_ :: EventManager -> IntTable [FdData] -> Fd -> IO (IO ())
[GblId,
 Arity=4,
 Str=<L,1*U(U,A,A,A,A,A,A,A,A,A,A,A,A)><S(S),1*U(U)><S(S),1*U(U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.Event.Manager.closeFd_1
               `cast` (<EventManager>_R
                       ->_R <IntTable [FdData]>_R
                       ->_R <Fd>_R
                       ->_R Sym (GHC.Types.N:IO[0] <IO ()>_R)
                       :: (EventManager
                           -> IntTable [FdData]
                           -> Fd
                           -> State# RealWorld
                           -> (# State# RealWorld, IO () #) :: *)
                          ~R# (EventManager -> IntTable [FdData] -> Fd -> IO (IO ()) :: *))}]
closeFd_
  = GHC.Event.Manager.closeFd_1
    `cast` (<EventManager>_R
            ->_R <IntTable [FdData]>_R
            ->_R <Fd>_R
            ->_R Sym (GHC.Types.N:IO[0] <IO ()>_R)
            :: (EventManager
                -> IntTable [FdData]
                -> Fd
                -> State# RealWorld
                -> (# State# RealWorld, IO () #) :: *)
               ~R# (EventManager -> IntTable [FdData] -> Fd -> IO (IO ()) :: *))

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
lvl10_raAuh :: (Bool, Bool)
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []]
lvl10_raAuh = (GHC.Types.False, GHC.Types.False)

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
lvl11_raAui :: (Bool, Bool)
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []]
lvl11_raAui = (GHC.Types.False, GHC.Types.True)

-- RHS size: {terms: 3, types: 2, coercions: 0, joins: 0/0}
lvl12_raAuj :: (Bool, Bool)
[GblId, Caf=NoCafRefs, Str=m, Unf=OtherCon []]
lvl12_raAuj = (GHC.Types.True, GHC.Types.True)

-- RHS size: {terms: 594, types: 1,080, coercions: 44, joins: 2/11}
registerFd1_raAuk
  :: EventManager
     -> IOCallback
     -> Fd
     -> Event
     -> Lifetime
     -> State# RealWorld
     -> (# State# RealWorld, FdKey #)
[GblId,
 Arity=6,
 Str=<S(SS(S)S(S)LSLSLLLLLL),1*U(U,U(U),U(U),A,U,A,U,A,A,A,A,A,A)><S,1*U><S(S),1*U(U)><S(S),1*U(U)><S,1*U><S,U>,
 Unf=OtherCon []]
registerFd1_raAuk
  = \ (mgr_aawlj :: EventManager)
      (cb_aawlk :: IOCallback)
      (fd_aawll :: Fd)
      (evs_aawlm :: Event)
      (lt_aawln :: Lifetime)
      (s_X7IEG :: State# RealWorld) ->
      case mgr_aawlj of
      { EventManager ds_dawQk dt_dawXe dt1_dawXf dt2_dawXg dt3_dawXh
                     dt4_dawXi dt5_dawXj dt6_dawXk dt7_dawXl dt8_dawXm dt9_dawXn
                     dt10_dawXo dt11_dawXp ->
      case dt_dawXe of wild1_sazZq { I# m_sazZr ->
      case dt1_dawXf of wild2_sazZt { I# n_sazZu ->
      case ds_dawQk of
      { GHC.Event.Internal.Backend @ a_sazZx bState_sazZy ds1_sazZz
                                   ds2_sazZA bModifyFdOnce_sazZB ds3_sazZC ->
      case fetchAddIntArray# @ RealWorld dt5_dawXj 0# 1# s_X7IEG of
      { (# ipv_iariL, ipv1_iariM #) ->
      case fd_aawll
           `cast` (System.Posix.Types.N:Fd[0] ; Foreign.C.Types.N:CInt[0]
                   :: (Fd :: *) ~R# (GHC.Int.Int32 :: *))
      of dt12_aawmO
      { GHC.Int.I32# dt13_aawmP ->
      case evs_aawlm
           `cast` (GHC.Event.Internal.N:Event[0]
                   :: (Event :: *) ~R# (Int :: *))
      of wild5_iawQ0
      { I# x#_iawQ2 ->
      join {
        $j_saxQM [Dmd=<C(S),1*C1(U(U,U))>]
          :: Int# -> (# State# RealWorld, FdKey #)
        [LclId[JoinId(1)], Arity=1, Str=<L,U>, Unf=OtherCon []]
        $j_saxQM (dt14_aawnA [OS=OneShot] :: Int#)
          = case cb_aawlk of dt15_XawnE { __DEFAULT ->
            case getMaskingState# ipv_iariL of
            { (# ipv2_iafMW, ipv3_iafMX #) ->
            let {
              i1_iax2r [Dmd=<S,U>] :: Int#
              [LclId]
              i1_iax2r = andI# dt13_aawmP 31# } in
            case <=# m_sazZr i1_iax2r of {
              __DEFAULT ->
                case lvl3_raAu8 wild2_sazZt wild1_sazZq i1_iax2r of wild6_00 { };
              1# ->
                case <=# i1_iax2r n_sazZu of {
                  __DEFAULT ->
                    case lvl3_raAu8 wild2_sazZt wild1_sazZq i1_iax2r of wild6_00 { };
                  1# ->
                    case indexArray#
                           @ (MVar (IntTable [FdData])) dt3_dawXh (-# i1_iax2r m_sazZr)
                    of
                    { (# ipv4_iawOK #) ->
                    case ipv4_iawOK of { GHC.MVar.MVar ww1_sazuu ->
                    let {
                      reg_saxzy :: FdKey
                      [LclId, Unf=OtherCon []]
                      reg_saxzy = GHC.Event.Manager.FdKey dt13_aawmP ipv1_iariM } in
                    let {
                      $wio_sazur [InlPrag=NOUSERINLINE[0], Dmd=<L,1*C1(C1(U(U,U)))>]
                        :: MutVar# RealWorld (GHC.Event.IntTable.IT [FdData])
                           -> State# RealWorld -> (# State# RealWorld, (Bool, Bool) #)
                      [LclId, Arity=2, Str=<S,U><S,U>, Unf=OtherCon []]
                      $wio_sazur
                        = \ (ww2_sazup [OS=OneShot]
                               :: MutVar# RealWorld (GHC.Event.IntTable.IT [FdData]))
                            (w_sazum [OS=OneShot] :: State# RealWorld) ->
                            case GHC.Event.IntTable.$winsertWith
                                   @ [FdData]
                                   (++ @ FdData)
                                   dt13_aawmP
                                   (GHC.Types.:
                                      @ FdData
                                      (GHC.Event.Manager.FdData
                                         dt13_aawmP ipv1_iariM dt14_aawnA dt15_XawnE)
                                      (GHC.Types.[] @ FdData))
                                   ww2_sazup
                                   w_sazum
                            of
                            { (# ipv5_X7IFr, ipv6_X7IFt #) ->
                            join {
                              $w$j_sazuk [InlPrag=NOUSERINLINE[0], Dmd=<C(S),1*C1(U(U,U))>]
                                :: Int# -> (# State# RealWorld, (Bool, Bool) #)
                              [LclId[JoinId(1)], Arity=1, Str=<S,U>, Unf=OtherCon []]
                              $w$j_sazuk (w1_sazui [OS=OneShot] :: Int#)
                                = let {
                                    x#1_iawOQ [Dmd=<S,U>] :: Int#
                                    [LclId]
                                    x#1_iawOQ = orI# w1_sazui dt14_aawnA } in
                                  case andI# x#1_iawOQ 8# of {
                                    __DEFAULT ->
                                      case /=# w1_sazui x#1_iawOQ of {
                                        __DEFAULT -> (# ipv5_X7IFr, lvl11_raAui #);
                                        1# ->
                                          case ((ds2_sazZA
                                                   bState_sazZy
                                                   (dt12_aawmO
                                                    `cast` (Sym (Foreign.C.Types.N:CInt[0]) ; Sym (System.Posix.Types.N:Fd[0])
                                                            :: (GHC.Int.Int32 :: *) ~R# (Fd :: *)))
                                                   ((GHC.Types.I# (andI# w1_sazui 7#))
                                                    `cast` (Sym (GHC.Event.Internal.N:Event[0])
                                                            :: (Int :: *) ~R# (Event :: *)))
                                                   ((GHC.Types.I# (andI# x#1_iawOQ 7#))
                                                    `cast` (Sym (GHC.Event.Internal.N:Event[0])
                                                            :: (Int :: *) ~R# (Event :: *))))
                                                `cast` (GHC.Types.N:IO[0] <Bool>_R
                                                        :: (IO Bool :: *)
                                                           ~R# (State# RealWorld
                                                                -> (# State# RealWorld,
                                                                      Bool #) :: *)))
                                                 ipv5_X7IFr
                                          of
                                          { (# ipv7_X7IFI, ipv8_X7IFK #) ->
                                          case ipv8_X7IFK of {
                                            False ->
                                              case ipv6_X7IFt of {
                                                Nothing ->
                                                  case readMutVar#
                                                         @ RealWorld
                                                         @ (GHC.Event.IntTable.IT [FdData])
                                                         ww2_sazup
                                                         ipv7_X7IFI
                                                  of
                                                  { (# ipv9_iayE8, ipv10_iayE9 #) ->
                                                  case ipv10_iayE9 of
                                                  { GHC.Event.IntTable.IT dt16_iayEe dt17_iayEf
                                                                          dt18_iayEg ->
                                                  let {
                                                    n#_iayEd [Dmd=<S,U>] :: Int#
                                                    [LclId]
                                                    n#_iayEd
                                                      = andI#
                                                          dt13_aawmP
                                                          (-#
                                                             (sizeofMutableArray#
                                                                @ RealWorld
                                                                @ (GHC.Event.IntTable.Bucket
                                                                     [FdData])
                                                                dt16_iayEe)
                                                             1#) } in
                                                  case readArray#
                                                         @ RealWorld
                                                         @ (GHC.Event.IntTable.Bucket [FdData])
                                                         dt16_iayEe
                                                         n#_iayEd
                                                         ipv9_iayE8
                                                  of
                                                  { (# ipv11_iayEm, ipv12_iayEn #) ->
                                                  letrec {
                                                    $wgo_iayEk [InlPrag=NOUSERINLINE[0],
                                                                Occ=LoopBreaker]
                                                      :: GHC.Event.IntTable.Bucket [FdData]
                                                         -> (# Bool, Maybe [FdData],
                                                               GHC.Event.IntTable.Bucket [FdData] #)
                                                    [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []]
                                                    $wgo_iayEk
                                                      = \ (w2_iayEl
                                                             :: GHC.Event.IntTable.Bucket
                                                                  [FdData]) ->
                                                          case w2_iayEl of {
                                                            GHC.Event.IntTable.Empty ->
                                                              (# GHC.Types.False,
                                                                 GHC.Base.Nothing @ [FdData],
                                                                 GHC.Event.IntTable.Empty
                                                                   @ [FdData] #);
                                                            GHC.Event.IntTable.Bucket dt19_iayEs
                                                                                      ds11_iayEt
                                                                                      ds12_iayEu ->
                                                              case ==# dt19_iayEs dt13_aawmP of {
                                                                __DEFAULT ->
                                                                  case $wgo_iayEk ds12_iayEu of
                                                                  { (# ww4_iayEz, ww5_iayEA,
                                                                       ww6_iayEB #) ->
                                                                  (# ww4_iayEz, ww5_iayEA,
                                                                     GHC.Event.IntTable.Bucket
                                                                       @ [FdData]
                                                                       dt19_iayEs
                                                                       ds11_iayEt
                                                                       ww6_iayEB #)
                                                                  };
                                                                1# ->
                                                                  (# GHC.Types.True,
                                                                     GHC.Base.Just
                                                                       @ [FdData] ds11_iayEt,
                                                                     ds12_iayEu #)
                                                              }
                                                          }; } in
                                                  case $wgo_iayEk ipv12_iayEn of
                                                  { (# ww4_iayEF, ww5_iayEG, ww6_iayEH #) ->
                                                  case ww5_iayEG of {
                                                    Nothing -> (# ipv11_iayEm, lvl10_raAuh #);
                                                    Just ipv13_iayEN ->
                                                      case writeArray#
                                                             @ RealWorld
                                                             @ (GHC.Event.IntTable.Bucket [FdData])
                                                             dt16_iayEe
                                                             n#_iayEd
                                                             ww6_iayEH
                                                             ipv11_iayEm
                                                      of s1#_iayEP
                                                      { __DEFAULT ->
                                                      case ww4_iayEF of {
                                                        False -> (# s1#_iayEP, lvl10_raAuh #);
                                                        True ->
                                                          case readIntOffAddr#
                                                                 @ RealWorld dt17_iayEf 0# s1#_iayEP
                                                          of
                                                          { (# ipv14_iayEX, ipv15_iayEY #) ->
                                                          case writeIntOffAddr#
                                                                 @ RealWorld
                                                                 dt17_iayEf
                                                                 0#
                                                                 (-# ipv15_iayEY 1#)
                                                                 ipv14_iayEX
                                                          of s2_iayF0
                                                          { __DEFAULT ->
                                                          case touch#
                                                                 @ 'LiftedRep
                                                                 @ GHC.ForeignPtr.ForeignPtrContents
                                                                 dt18_iayEg
                                                                 s2_iayF0
                                                          of s'_iayF1
                                                          { __DEFAULT ->
                                                          (# s'_iayF1, lvl10_raAuh #)
                                                          }
                                                          }
                                                          }
                                                      }
                                                      }
                                                  }
                                                  }
                                                  }
                                                  }
                                                  };
                                                Just v_iayF3 ->
                                                  case GHC.Event.IntTable.$winsertWith
                                                         @ [FdData]
                                                         (const @ [FdData] @ [FdData])
                                                         dt13_aawmP
                                                         v_iayF3
                                                         ww2_sazup
                                                         ipv7_X7IFI
                                                  of
                                                  { (# ipv9_iayF7, ipv10_iayF8 #) ->
                                                  (# ipv9_iayF7, lvl10_raAuh #)
                                                  }
                                              };
                                            True -> (# ipv7_X7IFI, lvl12_raAuj #)
                                          }
                                          }
                                      };
                                    0# ->
                                      case ((bModifyFdOnce_sazZB
                                               bState_sazZy
                                               (dt12_aawmO
                                                `cast` (Sym (Foreign.C.Types.N:CInt[0]) ; Sym (System.Posix.Types.N:Fd[0])
                                                        :: (GHC.Int.Int32 :: *) ~R# (Fd :: *)))
                                               ((GHC.Types.I# (andI# x#1_iawOQ 7#))
                                                `cast` (Sym (GHC.Event.Internal.N:Event[0])
                                                        :: (Int :: *) ~R# (Event :: *))))
                                            `cast` (GHC.Types.N:IO[0] <Bool>_R
                                                    :: (IO Bool :: *)
                                                       ~R# (State# RealWorld
                                                            -> (# State# RealWorld, Bool #) :: *)))
                                             ipv5_X7IFr
                                      of
                                      { (# ipv7_X7IFJ, ipv8_X7IFL #) ->
                                      case ipv8_X7IFL of {
                                        False ->
                                          case ipv6_X7IFt of {
                                            Nothing ->
                                              case readMutVar#
                                                     @ RealWorld
                                                     @ (GHC.Event.IntTable.IT [FdData])
                                                     ww2_sazup
                                                     ipv7_X7IFJ
                                              of
                                              { (# ipv9_iayE8, ipv10_iayE9 #) ->
                                              case ipv10_iayE9 of
                                              { GHC.Event.IntTable.IT dt16_iayEe dt17_iayEf
                                                                      dt18_iayEg ->
                                              let {
                                                n#_iayEd [Dmd=<S,U>] :: Int#
                                                [LclId]
                                                n#_iayEd
                                                  = andI#
                                                      dt13_aawmP
                                                      (-#
                                                         (sizeofMutableArray#
                                                            @ RealWorld
                                                            @ (GHC.Event.IntTable.Bucket [FdData])
                                                            dt16_iayEe)
                                                         1#) } in
                                              case readArray#
                                                     @ RealWorld
                                                     @ (GHC.Event.IntTable.Bucket [FdData])
                                                     dt16_iayEe
                                                     n#_iayEd
                                                     ipv9_iayE8
                                              of
                                              { (# ipv11_iayEm, ipv12_iayEn #) ->
                                              letrec {
                                                $wgo_iayEk [InlPrag=NOUSERINLINE[0],
                                                            Occ=LoopBreaker]
                                                  :: GHC.Event.IntTable.Bucket [FdData]
                                                     -> (# Bool, Maybe [FdData],
                                                           GHC.Event.IntTable.Bucket [FdData] #)
                                                [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []]
                                                $wgo_iayEk
                                                  = \ (w2_iayEl
                                                         :: GHC.Event.IntTable.Bucket [FdData]) ->
                                                      case w2_iayEl of {
                                                        GHC.Event.IntTable.Empty ->
                                                          (# GHC.Types.False,
                                                             GHC.Base.Nothing @ [FdData],
                                                             GHC.Event.IntTable.Empty @ [FdData] #);
                                                        GHC.Event.IntTable.Bucket dt19_iayEs
                                                                                  ds11_iayEt
                                                                                  ds12_iayEu ->
                                                          case ==# dt19_iayEs dt13_aawmP of {
                                                            __DEFAULT ->
                                                              case $wgo_iayEk ds12_iayEu of
                                                              { (# ww4_iayEz, ww5_iayEA,
                                                                   ww6_iayEB #) ->
                                                              (# ww4_iayEz, ww5_iayEA,
                                                                 GHC.Event.IntTable.Bucket
                                                                   @ [FdData]
                                                                   dt19_iayEs
                                                                   ds11_iayEt
                                                                   ww6_iayEB #)
                                                              };
                                                            1# ->
                                                              (# GHC.Types.True,
                                                                 GHC.Base.Just
                                                                   @ [FdData] ds11_iayEt,
                                                                 ds12_iayEu #)
                                                          }
                                                      }; } in
                                              case $wgo_iayEk ipv12_iayEn of
                                              { (# ww4_iayEF, ww5_iayEG, ww6_iayEH #) ->
                                              case ww5_iayEG of {
                                                Nothing -> (# ipv11_iayEm, lvl10_raAuh #);
                                                Just ipv13_iayEN ->
                                                  case writeArray#
                                                         @ RealWorld
                                                         @ (GHC.Event.IntTable.Bucket [FdData])
                                                         dt16_iayEe
                                                         n#_iayEd
                                                         ww6_iayEH
                                                         ipv11_iayEm
                                                  of s1#_iayEP
                                                  { __DEFAULT ->
                                                  case ww4_iayEF of {
                                                    False -> (# s1#_iayEP, lvl10_raAuh #);
                                                    True ->
                                                      case readIntOffAddr#
                                                             @ RealWorld dt17_iayEf 0# s1#_iayEP
                                                      of
                                                      { (# ipv14_iayEX, ipv15_iayEY #) ->
                                                      case writeIntOffAddr#
                                                             @ RealWorld
                                                             dt17_iayEf
                                                             0#
                                                             (-# ipv15_iayEY 1#)
                                                             ipv14_iayEX
                                                      of s2_iayF0
                                                      { __DEFAULT ->
                                                      case touch#
                                                             @ 'LiftedRep
                                                             @ GHC.ForeignPtr.ForeignPtrContents
                                                             dt18_iayEg
                                                             s2_iayF0
                                                      of s'_iayF1
                                                      { __DEFAULT ->
                                                      (# s'_iayF1, lvl10_raAuh #)
                                                      }
                                                      }
                                                      }
                                                  }
                                                  }
                                              }
                                              }
                                              }
                                              }
                                              };
                                            Just v_iayF3 ->
                                              case GHC.Event.IntTable.$winsertWith
                                                     @ [FdData]
                                                     (const @ [FdData] @ [FdData])
                                                     dt13_aawmP
                                                     v_iayF3
                                                     ww2_sazup
                                                     ipv7_X7IFJ
                                              of
                                              { (# ipv9_iayF7, ipv10_iayF8 #) ->
                                              (# ipv9_iayF7, lvl10_raAuh #)
                                              }
                                          };
                                        True -> (# ipv7_X7IFJ, lvl11_raAui #)
                                      }
                                      }
                                  } } in
                            case ipv6_X7IFt of {
                              Nothing -> jump $w$j_sazuk 0#;
                              Just x1_i8O4S ->
                                case GHC.Event.Manager.$weventsOf x1_i8O4S of ww3_sazrd
                                { __DEFAULT ->
                                jump $w$j_sazuk ww3_sazrd
                                }
                            }
                            } } in
                    let {
                      io_saxzv [InlPrag=NOUSERINLINE[0], Dmd=<L,1*C1(C1(U))>]
                        :: IntTable [FdData]
                           -> State# RealWorld -> (# State# RealWorld, (Bool, Bool) #)
                      [LclId,
                       Arity=2,
                       Str=<S(S),1*U(U)><S,U>,
                       Unf=Unf{Src=InlineStable, TopLvl=False, Value=True, ConLike=True,
                               WorkFree=True, Expandable=True,
                               Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
                               Tmpl= \ (w_sazul [Occ=Once] :: IntTable [FdData])
                                       (w1_sazum [Occ=Once] :: State# RealWorld) ->
                                       case w_sazul
                                            `cast` (GHC.Event.IntTable.N:IntTable[0]
                                                        <[FdData]>_R ; GHC.IORef.N:IORef[0] <GHC.Event.IntTable.IT
                                                                                               [FdData]>_N
                                                    :: (IntTable [FdData] :: *)
                                                       ~R# (GHC.STRef.STRef
                                                              RealWorld
                                                              (GHC.Event.IntTable.IT
                                                                 [FdData]) :: *))
                                       of
                                       { GHC.STRef.STRef ww3_sazup [Occ=Once] ->
                                       $wio_sazur ww3_sazup w1_sazum
                                       }}]
                      io_saxzv
                        = \ (w_sazul [OS=OneShot] :: IntTable [FdData])
                            (w1_sazum [OS=OneShot] :: State# RealWorld) ->
                            case w_sazul
                                 `cast` (GHC.Event.IntTable.N:IntTable[0]
                                             <[FdData]>_R ; GHC.IORef.N:IORef[0] <GHC.Event.IntTable.IT
                                                                                    [FdData]>_N
                                         :: (IntTable [FdData] :: *)
                                            ~R# (GHC.STRef.STRef
                                                   RealWorld (GHC.Event.IntTable.IT [FdData]) :: *))
                            of
                            { GHC.STRef.STRef ww3_sazup ->
                            $wio_sazur ww3_sazup w1_sazum
                            } } in
                    case ipv3_iafMX of {
                      __DEFAULT ->
                        case takeMVar#
                               @ RealWorld @ (IntTable [FdData]) ww1_sazuu ipv2_iafMW
                        of
                        { (# ipv5_X7IFE, ipv6_X7IFG #) ->
                        case catch#
                               @ (Bool, Bool)
                               @ GHC.Exception.SomeException
                               (maskAsyncExceptions# @ (Bool, Bool) (io_saxzv ipv6_X7IFG))
                               (\ (e1_iafN9 [OS=OneShot] :: GHC.Exception.SomeException)
                                  (s1_iafNa [OS=OneShot] :: State# RealWorld) ->
                                  case putMVar#
                                         @ RealWorld
                                         @ (IntTable [FdData])
                                         ww1_sazuu
                                         ipv6_X7IFG
                                         s1_iafNa
                                  of s2#_i9DsB
                                  { __DEFAULT ->
                                  raiseIO#
                                    @ GHC.Exception.SomeException @ (Bool, Bool) e1_iafN9 s2#_i9DsB
                                  })
                               ipv5_X7IFE
                        of
                        { (# ipv7_X7IAZ, ipv8_X7IB1 #) ->
                        case putMVar#
                               @ RealWorld @ (IntTable [FdData]) ww1_sazuu ipv6_X7IFG ipv7_X7IAZ
                        of s2#_i9DsB
                        { __DEFAULT ->
                        case ipv8_X7IB1 of { (modify_aawlh, ok_aawli) ->
                        case ok_aawli of {
                          False ->
                            case ((dt15_XawnE
                                     reg_saxzy
                                     (wild5_iawQ0
                                      `cast` (Sym (GHC.Event.Internal.N:Event[0])
                                              :: (Int :: *) ~R# (Event :: *))))
                                  `cast` (GHC.Types.N:IO[0] <()>_R
                                          :: (IO () :: *)
                                             ~R# (State# RealWorld
                                                  -> (# State# RealWorld, () #) :: *)))
                                   s2#_i9DsB
                            of
                            { (# ipv9_i7JiK, ipv10_i7JiL #) ->
                            case modify_aawlh of { __DEFAULT -> (# ipv9_i7JiK, reg_saxzy #) }
                            };
                          True ->
                            case modify_aawlh of { __DEFAULT -> (# s2#_i9DsB, reg_saxzy #) }
                        }
                        }
                        }
                        }
                        };
                      0# ->
                        case maskAsyncExceptions#
                               @ (Bool, Bool)
                               (\ (s1_X7IFv [OS=OneShot] :: State# RealWorld) ->
                                  case takeMVar#
                                         @ RealWorld @ (IntTable [FdData]) ww1_sazuu s1_X7IFv
                                  of
                                  { (# ipv5_X7IFG, ipv6_X7IFI #) ->
                                  case catch#
                                         @ (Bool, Bool)
                                         @ GHC.Exception.SomeException
                                         (unmaskAsyncExceptions#
                                            @ (Bool, Bool) (io_saxzv ipv6_X7IFI))
                                         (\ (e1_iafN9 [OS=OneShot] :: GHC.Exception.SomeException)
                                            (s2_iafNa [OS=OneShot] :: State# RealWorld) ->
                                            case putMVar#
                                                   @ RealWorld
                                                   @ (IntTable [FdData])
                                                   ww1_sazuu
                                                   ipv6_X7IFI
                                                   s2_iafNa
                                            of s2#_i9DsB
                                            { __DEFAULT ->
                                            raiseIO#
                                              @ GHC.Exception.SomeException
                                              @ (Bool, Bool)
                                              e1_iafN9
                                              s2#_i9DsB
                                            })
                                         ipv5_X7IFG
                                  of
                                  { (# ipv7_X7IAZ, ipv8_X7IB1 #) ->
                                  case putMVar#
                                         @ RealWorld
                                         @ (IntTable [FdData])
                                         ww1_sazuu
                                         ipv6_X7IFI
                                         ipv7_X7IAZ
                                  of s2#_i9DsB
                                  { __DEFAULT ->
                                  (# s2#_i9DsB, ipv8_X7IB1 #)
                                  }
                                  }
                                  })
                               ipv2_iafMW
                        of
                        { (# ipv5_X7IFr, ipv6_X7IFt #) ->
                        case ipv6_X7IFt of { (modify_aawlh, ok_aawli) ->
                        case ok_aawli of {
                          False ->
                            case ((dt15_XawnE
                                     reg_saxzy
                                     (wild5_iawQ0
                                      `cast` (Sym (GHC.Event.Internal.N:Event[0])
                                              :: (Int :: *) ~R# (Event :: *))))
                                  `cast` (GHC.Types.N:IO[0] <()>_R
                                          :: (IO () :: *)
                                             ~R# (State# RealWorld
                                                  -> (# State# RealWorld, () #) :: *)))
                                   ipv5_X7IFr
                            of
                            { (# ipv7_i7JiK, ipv8_i7JiL #) ->
                            case modify_aawlh of { __DEFAULT -> (# ipv7_i7JiK, reg_saxzy #) }
                            };
                          True ->
                            case modify_aawlh of { __DEFAULT -> (# ipv5_X7IFr, reg_saxzy #) }
                        }
                        }
                        };
                      1# ->
                        case takeMVar#
                               @ RealWorld @ (IntTable [FdData]) ww1_sazuu ipv2_iafMW
                        of
                        { (# ipv5_X7IFF, ipv6_X7IFH #) ->
                        case catch#
                               @ (Bool, Bool)
                               @ GHC.Exception.SomeException
                               (maskUninterruptible# @ (Bool, Bool) (io_saxzv ipv6_X7IFH))
                               (\ (e1_iafN9 [OS=OneShot] :: GHC.Exception.SomeException)
                                  (s1_iafNa [OS=OneShot] :: State# RealWorld) ->
                                  case putMVar#
                                         @ RealWorld
                                         @ (IntTable [FdData])
                                         ww1_sazuu
                                         ipv6_X7IFH
                                         s1_iafNa
                                  of s2#_i9DsB
                                  { __DEFAULT ->
                                  raiseIO#
                                    @ GHC.Exception.SomeException @ (Bool, Bool) e1_iafN9 s2#_i9DsB
                                  })
                               ipv5_X7IFF
                        of
                        { (# ipv7_X7IAZ, ipv8_X7IB1 #) ->
                        case putMVar#
                               @ RealWorld @ (IntTable [FdData]) ww1_sazuu ipv6_X7IFH ipv7_X7IAZ
                        of s2#_i9DsB
                        { __DEFAULT ->
                        case ipv8_X7IB1 of { (modify_aawlh, ok_aawli) ->
                        case ok_aawli of {
                          False ->
                            case ((dt15_XawnE
                                     reg_saxzy
                                     (wild5_iawQ0
                                      `cast` (Sym (GHC.Event.Internal.N:Event[0])
                                              :: (Int :: *) ~R# (Event :: *))))
                                  `cast` (GHC.Types.N:IO[0] <()>_R
                                          :: (IO () :: *)
                                             ~R# (State# RealWorld
                                                  -> (# State# RealWorld, () #) :: *)))
                                   s2#_i9DsB
                            of
                            { (# ipv9_i7JiK, ipv10_i7JiL #) ->
                            case modify_aawlh of { __DEFAULT -> (# ipv9_i7JiK, reg_saxzy #) }
                            };
                          True ->
                            case modify_aawlh of { __DEFAULT -> (# s2#_i9DsB, reg_saxzy #) }
                        }
                        }
                        }
                        }
                        }
                    }
                    }
                    }
                }
            }
            }
            } } in
      case lt_aawln of {
        OneShot -> jump $j_saxQM x#_iawQ2;
        MultiShot -> jump $j_saxQM (orI# x#_iawQ2 8#)
      }
      }
      }
      }
      }
      }
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 13, joins: 0/0}
registerFd [InlPrag=INLINE (sat-args=5)]
  :: EventManager
     -> IOCallback -> Fd -> Event -> Lifetime -> IO FdKey
[GblId,
 Arity=6,
 Str=<S(SS(S)S(S)LSLSLLLLLL),1*U(U,U(U),U(U),A,U,A,U,A,A,A,A,A,A)><S,1*U><S(S),1*U(U)><S(S),1*U(U)><S,1*U><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=5,unsat_ok=False,boring_ok=False)
         Tmpl= (\ (mgr_Xawpv [Occ=Once!] :: EventManager)
                  (cb_Xawpx :: IOCallback)
                  (fd_Xawpz :: Fd)
                  (evs_XawpB :: Event)
                  (lt_XawpD [Occ=Once!] :: Lifetime)
                  (s_X7IEM [Occ=Once] :: State# RealWorld) ->
                  case mgr_Xawpv of
                  { EventManager ds_dawQk [Occ=OnceL*!] dt_dawXe [Occ=Once!]
                                 dt1_dawXf [Occ=Once!] _ [Occ=Dead] dt3_dawXh [Occ=Once]
                                 _ [Occ=Dead] dt5_dawXj [Occ=Once] _ [Occ=Dead] _ [Occ=Dead]
                                 _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] ->
                  case fetchAddIntArray# @ RealWorld dt5_dawXj 0# 1# s_X7IEM of
                  { (# ipv_iariL [Occ=Once], ipv1_iariM [Occ=Once] #) ->
                  let {
                    el_saxaT :: Int
                    [LclId]
                    el_saxaT
                      = case evs_XawpB
                             `cast` (GHC.Event.Internal.N:Event[0]
                                     :: (Event :: *) ~R# (Int :: *))
                        of
                        { I# x#_iawQ2 [Occ=Once*] ->
                        case lt_XawpD of {
                          OneShot -> GHC.Types.I# x#_iawQ2;
                          MultiShot -> GHC.Types.I# (orI# x#_iawQ2 8#)
                        }
                        } } in
                  let {
                    reg_aawl5 :: FdKey
                    [LclId]
                    reg_aawl5
                      = GHC.Event.Manager.$WFdKey
                          fd_Xawpz
                          ((GHC.Types.I# ipv1_iariM)
                           `cast` (Sym (GHC.Event.Unique.N:Unique[0])
                                   :: (Int :: *) ~R# (Unique :: *))) } in
                  case GHC.Event.Manager.$WFdData
                         reg_aawl5
                         (el_saxaT
                          `cast` (Sym (GHC.Event.Internal.N:EventLifetime[0])
                                  :: (Int :: *) ~R# (EventLifetime :: *)))
                         cb_Xawpx
                  of fdd_aawl7
                  { FdData _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] _ [Occ=Dead] ->
                  let {
                    fd'_aawl4 :: Int
                    [LclId]
                    fd'_aawl4
                      = fromIntegral
                          @ Fd
                          @ Int
                          System.Posix.Types.$fIntegralFd
                          GHC.Num.$fNumInt
                          fd_Xawpz } in
                  let {
                    m_aafFD [Occ=Once*!] :: MVar (IntTable [FdData])
                    [LclId]
                    m_aafFD
                      = case dt_dawXe of wild1_iax2d { I# m1_iax2f ->
                        case dt1_dawXf of wild2_iax2h { I# n_iax2j [Occ=Once] ->
                        case fromIntegral
                               @ Fd
                               @ Int
                               System.Posix.Types.$fIntegralFd
                               GHC.Num.$fNumInt
                               fd_Xawpz
                        of
                        { I# x#_i7Sgh [Occ=Once] ->
                        let {
                          i1_iax2r :: Int#
                          [LclId]
                          i1_iax2r = andI# x#_i7Sgh 31# } in
                        join {
                          $j_iax2n [Occ=Once*T[0]] :: MVar (IntTable [FdData])
                          [LclId[JoinId(0)]]
                          $j_iax2n
                            = case GHC.Arr.indexError
                                     @ Int
                                     @ Int
                                     GHC.Show.$fShowInt
                                     (wild1_iax2d, wild2_iax2h)
                                     (GHC.Types.I# i1_iax2r)
                                     (build
                                        @ Char
                                        (\ (@ b1_iax2t) -> unpackFoldrCString# @ b1_iax2t "Int"#))
                              of {
                              } } in
                        case <=# m1_iax2f i1_iax2r of {
                          __DEFAULT -> jump $j_iax2n;
                          1# ->
                            case <=# i1_iax2r n_iax2j of {
                              __DEFAULT -> jump $j_iax2n;
                              1# ->
                                case indexArray#
                                       @ (MVar (IntTable [FdData])) dt3_dawXh (-# i1_iax2r m1_iax2f)
                                of
                                { (# ipv6_iawOK [Occ=Once] #) ->
                                ipv6_iawOK
                                }
                            }
                        }
                        }
                        }
                        } } in
                  let {
                    io_saxbn [Occ=Once*!]
                      :: IntTable [FdData]
                         -> State# RealWorld -> (# State# RealWorld, (Bool, Bool) #)
                    [LclId, Arity=2, Unf=OtherCon []]
                    io_saxbn
                      = \ (tbl_aawl8 :: IntTable [FdData])
                          (s1_X7IFl [Occ=Once] :: State# RealWorld) ->
                          case ((IT.insertWith
                                   @ [FdData]
                                   (++ @ FdData)
                                   fd'_aawl4
                                   (build
                                      @ FdData
                                      (\ (@ a_dawPL)
                                         (c_dawPM [Occ=Once!, OS=OneShot]
                                            :: FdData -> a_dawPL -> a_dawPL)
                                         (n_dawPN [Occ=Once, OS=OneShot] :: a_dawPL) ->
                                         c_dawPM fdd_aawl7 n_dawPN))
                                   tbl_aawl8)
                                `cast` (GHC.Types.N:IO[0] <Maybe [FdData]>_R
                                        :: (IO (Maybe [FdData]) :: *)
                                           ~R# (State# RealWorld
                                                -> (# State# RealWorld, Maybe [FdData] #) :: *)))
                                 s1_X7IFl
                          of
                          { (# ipv6_X7IFr [Occ=Once*], ipv7_X7IFt #) ->
                          join {
                            $j_saxXx [Occ=Once*!T[2]]
                              :: Int# -> Int -> (# State# RealWorld, (Bool, Bool) #)
                            [LclId[JoinId(2)], Arity=2, Unf=OtherCon []]
                            $j_saxXx (x#_i7Vds [OS=OneShot] :: Int#)
                                     (wild1_i7Vdq [Occ=Once, OS=OneShot]
                                        :: Int
                                        Unf=OtherCon [])
                              = case el_saxaT of { I# y#_i7Vdw [Occ=Once] ->
                                let {
                                  x#1_iawOQ :: Int#
                                  [LclId]
                                  x#1_iawOQ = orI# x#_i7Vds y#_i7Vdw } in
                                case eqInt (GHC.Types.I# (andI# x#1_iawOQ 8#)) (GHC.Types.I# 0#)
                                of {
                                  False ->
                                    case neInt wild1_i7Vdq (GHC.Types.I# x#1_iawOQ) of {
                                      False -> (# ipv6_X7IFr, (GHC.Types.False, GHC.Types.True) #);
                                      True ->
                                        case ds_dawQk of
                                        { GHC.Event.Internal.Backend @ a_iarkx
                                                                     bState_iarky [Occ=Once]
                                                                     _ [Occ=Dead]
                                                                     bModifyFd_iarkA [Occ=Once!]
                                                                     _ [Occ=Dead] _ [Occ=Dead] ->
                                        case ((bModifyFd_iarkA
                                                 bState_iarky
                                                 fd_Xawpz
                                                 ((GHC.Types.I# (andI# x#_i7Vds 7#))
                                                  `cast` (Sym (GHC.Event.Internal.N:Event[0])
                                                          :: (Int :: *) ~R# (Event :: *)))
                                                 ((GHC.Types.I# (andI# x#1_iawOQ 7#))
                                                  `cast` (Sym (GHC.Event.Internal.N:Event[0])
                                                          :: (Int :: *) ~R# (Event :: *))))
                                              `cast` (GHC.Types.N:IO[0] <Bool>_R
                                                      :: (IO Bool :: *)
                                                         ~R# (State# RealWorld
                                                              -> (# State# RealWorld,
                                                                    Bool #) :: *)))
                                               ipv6_X7IFr
                                        of
                                        { (# ipv8_X7IFI [Occ=Once*], ipv9_X7IFK [Occ=Once!] #) ->
                                        case ipv9_X7IFK of {
                                          False ->
                                            case GHC.Event.IntTable.reset1
                                                   @ [FdData]
                                                   fd'_aawl4
                                                   ipv7_X7IFt
                                                   tbl_aawl8
                                                   ipv8_X7IFI
                                            of
                                            { (# ipv10_i7JiK [Occ=Once], _ [Occ=Dead] #) ->
                                            (# ipv10_i7JiK, (GHC.Types.False, GHC.Types.False) #)
                                            };
                                          True -> (# ipv8_X7IFI, (GHC.Types.True, GHC.Types.True) #)
                                        }
                                        }
                                        }
                                    };
                                  True ->
                                    case ds_dawQk of
                                    { GHC.Event.Internal.Backend @ a_iawP2 bState_iawP3 [Occ=Once]
                                                                 _ [Occ=Dead] _ [Occ=Dead]
                                                                 bModifyFdOnce_iawP6 [Occ=Once!]
                                                                 _ [Occ=Dead] ->
                                    case ((bModifyFdOnce_iawP6
                                             bState_iawP3
                                             fd_Xawpz
                                             ((GHC.Types.I# (andI# x#1_iawOQ 7#))
                                              `cast` (Sym (GHC.Event.Internal.N:Event[0])
                                                      :: (Int :: *) ~R# (Event :: *))))
                                          `cast` (GHC.Types.N:IO[0] <Bool>_R
                                                  :: (IO Bool :: *)
                                                     ~R# (State# RealWorld
                                                          -> (# State# RealWorld, Bool #) :: *)))
                                           ipv6_X7IFr
                                    of
                                    { (# ipv8_X7IFJ [Occ=Once*], ipv9_X7IFL [Occ=Once!] #) ->
                                    case ipv9_X7IFL of {
                                      False ->
                                        case GHC.Event.IntTable.reset1
                                               @ [FdData] fd'_aawl4 ipv7_X7IFt tbl_aawl8 ipv8_X7IFJ
                                        of
                                        { (# ipv10_i7JiK [Occ=Once], _ [Occ=Dead] #) ->
                                        (# ipv10_i7JiK, (GHC.Types.False, GHC.Types.False) #)
                                        };
                                      True -> (# ipv8_X7IFJ, (GHC.Types.False, GHC.Types.True) #)
                                    }
                                    }
                                    }
                                }
                                } } in
                          case ipv7_X7IFt of {
                            Nothing ->
                              jump $j_saxXx 0# GHC.Event.Internal.$fMonoidEventLifetime1;
                            Just x1_i8O4S [Occ=Once] ->
                              case (eventsOf x1_i8O4S)
                                   `cast` (GHC.Event.Internal.N:EventLifetime[0]
                                           :: (EventLifetime :: *) ~R# (Int :: *))
                              of wild2_i7Vdq
                              { I# x#_i7Vds [Occ=Once] ->
                              jump $j_saxXx x#_i7Vds wild2_i7Vdq
                              }
                          }
                          } } in
                  case getMaskingState# ipv_iariL of
                  { (# ipv6_iafMW [Occ=Once*], ipv7_iafMX [Occ=Once!] #) ->
                  case ipv7_iafMX of {
                    __DEFAULT ->
                      case m_aafFD of { GHC.MVar.MVar mvar#_i9Dso ->
                      case takeMVar#
                             @ RealWorld @ (IntTable [FdData]) mvar#_i9Dso ipv6_iafMW
                      of
                      { (# ipv8_X7IFE [Occ=Once], ipv9_X7IFG #) ->
                      case catch#
                             @ (Bool, Bool)
                             @ GHC.Exception.SomeException
                             (maskAsyncExceptions# @ (Bool, Bool) (io_saxbn ipv9_X7IFG))
                             (\ (e1_iafN9 [Occ=Once, OS=OneShot] :: GHC.Exception.SomeException)
                                (s1_iafNa [Occ=Once, OS=OneShot] :: State# RealWorld) ->
                                case putMVar#
                                       @ RealWorld
                                       @ (IntTable [FdData])
                                       mvar#_i9Dso
                                       ipv9_X7IFG
                                       s1_iafNa
                                of s2#_i9DsB
                                { __DEFAULT ->
                                raiseIO#
                                  @ GHC.Exception.SomeException @ (Bool, Bool) e1_iafN9 s2#_i9DsB
                                })
                             ipv8_X7IFE
                      of
                      { (# ipv10_X7IAZ [Occ=Once], ipv11_X7IB1 [Occ=Once!] #) ->
                      case putMVar#
                             @ RealWorld
                             @ (IntTable [FdData])
                             mvar#_i9Dso
                             ipv9_X7IFG
                             ipv10_X7IAZ
                      of s2#_i9DsB
                      { __DEFAULT ->
                      case ipv11_X7IB1 of
                      { (modify_aawlh [Occ=Once*], ok_aawli [Occ=Once!]) ->
                      case ok_aawli of {
                        False ->
                          case ((cb_Xawpx reg_aawl5 evs_XawpB)
                                `cast` (GHC.Types.N:IO[0] <()>_R
                                        :: (IO () :: *)
                                           ~R# (State# RealWorld
                                                -> (# State# RealWorld, () #) :: *)))
                                 s2#_i9DsB
                          of
                          { (# ipv12_i7JiK [Occ=Once], _ [Occ=Dead] #) ->
                          case modify_aawlh of { __DEFAULT -> (# ipv12_i7JiK, reg_aawl5 #) }
                          };
                        True ->
                          case modify_aawlh of { __DEFAULT -> (# s2#_i9DsB, reg_aawl5 #) }
                      }
                      }
                      }
                      }
                      }
                      };
                    0# ->
                      case maskAsyncExceptions#
                             @ (Bool, Bool)
                             (\ (s1_X7IFv [Occ=Once, OS=OneShot] :: State# RealWorld) ->
                                case m_aafFD of { GHC.MVar.MVar mvar#_i9Dso ->
                                case takeMVar#
                                       @ RealWorld @ (IntTable [FdData]) mvar#_i9Dso s1_X7IFv
                                of
                                { (# ipv8_X7IFG [Occ=Once], ipv9_X7IFI #) ->
                                case catch#
                                       @ (Bool, Bool)
                                       @ GHC.Exception.SomeException
                                       (unmaskAsyncExceptions# @ (Bool, Bool) (io_saxbn ipv9_X7IFI))
                                       (\ (e1_iafN9 [Occ=Once, OS=OneShot]
                                             :: GHC.Exception.SomeException)
                                          (s2_iafNa [Occ=Once, OS=OneShot] :: State# RealWorld) ->
                                          case putMVar#
                                                 @ RealWorld
                                                 @ (IntTable [FdData])
                                                 mvar#_i9Dso
                                                 ipv9_X7IFI
                                                 s2_iafNa
                                          of s2#_i9DsB
                                          { __DEFAULT ->
                                          raiseIO#
                                            @ GHC.Exception.SomeException
                                            @ (Bool, Bool)
                                            e1_iafN9
                                            s2#_i9DsB
                                          })
                                       ipv8_X7IFG
                                of
                                { (# ipv10_X7IAZ [Occ=Once], ipv11_X7IB1 [Occ=Once] #) ->
                                case putMVar#
                                       @ RealWorld
                                       @ (IntTable [FdData])
                                       mvar#_i9Dso
                                       ipv9_X7IFI
                                       ipv10_X7IAZ
                                of s2#_i9DsB
                                { __DEFAULT ->
                                (# s2#_i9DsB, ipv11_X7IB1 #)
                                }
                                }
                                }
                                })
                             ipv6_iafMW
                      of
                      { (# ipv8_X7IFr [Occ=Once*], ipv9_X7IFt [Occ=Once!] #) ->
                      case ipv9_X7IFt of
                      { (modify_aawlh [Occ=Once*], ok_aawli [Occ=Once!]) ->
                      case ok_aawli of {
                        False ->
                          case ((cb_Xawpx reg_aawl5 evs_XawpB)
                                `cast` (GHC.Types.N:IO[0] <()>_R
                                        :: (IO () :: *)
                                           ~R# (State# RealWorld
                                                -> (# State# RealWorld, () #) :: *)))
                                 ipv8_X7IFr
                          of
                          { (# ipv10_i7JiK [Occ=Once], _ [Occ=Dead] #) ->
                          case modify_aawlh of { __DEFAULT -> (# ipv10_i7JiK, reg_aawl5 #) }
                          };
                        True ->
                          case modify_aawlh of { __DEFAULT -> (# ipv8_X7IFr, reg_aawl5 #) }
                      }
                      }
                      };
                    1# ->
                      case m_aafFD of { GHC.MVar.MVar mvar#_i9Dso ->
                      case takeMVar#
                             @ RealWorld @ (IntTable [FdData]) mvar#_i9Dso ipv6_iafMW
                      of
                      { (# ipv8_X7IFF [Occ=Once], ipv9_X7IFH #) ->
                      case catch#
                             @ (Bool, Bool)
                             @ GHC.Exception.SomeException
                             (maskUninterruptible# @ (Bool, Bool) (io_saxbn ipv9_X7IFH))
                             (\ (e1_iafN9 [Occ=Once, OS=OneShot] :: GHC.Exception.SomeException)
                                (s1_iafNa [Occ=Once, OS=OneShot] :: State# RealWorld) ->
                                case putMVar#
                                       @ RealWorld
                                       @ (IntTable [FdData])
                                       mvar#_i9Dso
                                       ipv9_X7IFH
                                       s1_iafNa
                                of s2#_i9DsB
                                { __DEFAULT ->
                                raiseIO#
                                  @ GHC.Exception.SomeException @ (Bool, Bool) e1_iafN9 s2#_i9DsB
                                })
                             ipv8_X7IFF
                      of
                      { (# ipv10_X7IAZ [Occ=Once], ipv11_X7IB1 [Occ=Once!] #) ->
                      case putMVar#
                             @ RealWorld
                             @ (IntTable [FdData])
                             mvar#_i9Dso
                             ipv9_X7IFH
                             ipv10_X7IAZ
                      of s2#_i9DsB
                      { __DEFAULT ->
                      case ipv11_X7IB1 of
                      { (modify_aawlh [Occ=Once*], ok_aawli [Occ=Once!]) ->
                      case ok_aawli of {
                        False ->
                          case ((cb_Xawpx reg_aawl5 evs_XawpB)
                                `cast` (GHC.Types.N:IO[0] <()>_R
                                        :: (IO () :: *)
                                           ~R# (State# RealWorld
                                                -> (# State# RealWorld, () #) :: *)))
                                 s2#_i9DsB
                          of
                          { (# ipv12_i7JiK [Occ=Once], _ [Occ=Dead] #) ->
                          case modify_aawlh of { __DEFAULT -> (# ipv12_i7JiK, reg_aawl5 #) }
                          };
                        True ->
                          case modify_aawlh of { __DEFAULT -> (# s2#_i9DsB, reg_aawl5 #) }
                      }
                      }
                      }
                      }
                      }
                      }
                  }
                  }
                  }
                  }
                  })
               `cast` (<EventManager>_R
                       ->_R <IOCallback>_R
                       ->_R <Fd>_R
                       ->_R <Event>_R
                       ->_R <Lifetime>_R
                       ->_R Sym (GHC.Types.N:IO[0] <FdKey>_R)
                       :: (EventManager
                           -> IOCallback
                           -> Fd
                           -> Event
                           -> Lifetime
                           -> State# RealWorld
                           -> (# State# RealWorld, FdKey #) :: *)
                          ~R# (EventManager
                               -> IOCallback -> Fd -> Event -> Lifetime -> IO FdKey :: *))}]
registerFd
  = registerFd1_raAuk
    `cast` (<EventManager>_R
            ->_R <IOCallback>_R
            ->_R <Fd>_R
            ->_R <Event>_R
            ->_R <Lifetime>_R
            ->_R Sym (GHC.Types.N:IO[0] <FdKey>_R)
            :: (EventManager
                -> IOCallback
                -> Fd
                -> Event
                -> Lifetime
                -> State# RealWorld
                -> (# State# RealWorld, FdKey #) :: *)
               ~R# (EventManager
                    -> IOCallback -> Fd -> Event -> Lifetime -> IO FdKey :: *))

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl13_raAul :: Addr#
[GblId, Caf=NoCafRefs, Unf=OtherCon []]
lvl13_raAul = "unregisterFd_"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl14_raAum :: [Char]
[GblId]
lvl14_raAum = unpackCString# lvl13_raAul

-- RHS size: {terms: 4, types: 1, coercions: 0, joins: 0/0}
lvl15_raAun :: Int# -> IO ()
[GblId, Arity=1, Str=<B,U>x, Unf=OtherCon []]
lvl15_raAun
  = \ (dt_dawXC :: Int#) -> $wlvl_raAub lvl14_raAum dt_dawXC

-- RHS size: {terms: 446, types: 729, coercions: 28, joins: 3/11}
GHC.Event.Manager.unregisterFd2
  :: EventManager
     -> FdKey -> State# RealWorld -> (# State# RealWorld, Bool #)
[GblId,
 Arity=3,
 Str=<S(SS(S)S(S)LSLLLLLLLL),1*U(U,U(U),U(U),A,U,A,A,A,A,A,A,A,A)><S(SL),1*U(U,U)><S,U>,
 Unf=OtherCon []]
GHC.Event.Manager.unregisterFd2
  = \ (mgr_aawls :: EventManager)
      (ds_dawQx :: FdKey)
      (eta_B1 :: State# RealWorld) ->
      case mgr_aawls of
      { EventManager ds1_dawRe dt_dawXq dt1_dawXr dt2_dawXs dt3_dawXt
                     dt4_dawXu dt5_dawXv dt6_dawXw dt7_dawXx dt8_dawXy dt9_dawXz
                     dt10_dawXA dt11_dawXB ->
      case dt_dawXq of wild1_sazZJ { I# m_sazZK ->
      case dt1_dawXr of wild2_sazZM { I# n_sazZN ->
      case ds1_dawRe of
      { GHC.Event.Internal.Backend @ a_sazZQ bState_sazZR ds2_sazZS
                                   bModifyFd_sazZT ds3_sazZU ds4_sazZV ->
      case ds_dawQx of { FdKey dt12_dawXC dt13_dawXD ->
      case getMaskingState# eta_B1 of { (# ipv_iafMW, ipv1_iafMX #) ->
      let {
        i1_iax2r [Dmd=<S,U>] :: Int#
        [LclId]
        i1_iax2r = andI# dt12_dawXC 31# } in
      case <=# m_sazZK i1_iax2r of {
        __DEFAULT ->
          case lvl3_raAu8 wild2_sazZM wild1_sazZJ i1_iax2r of wild6_00 { };
        1# ->
          case <=# i1_iax2r n_sazZN of {
            __DEFAULT ->
              case lvl3_raAu8 wild2_sazZM wild1_sazZJ i1_iax2r of wild6_00 { };
            1# ->
              case indexArray#
                     @ (MVar (IntTable [FdData])) dt3_dawXt (-# i1_iax2r m_sazZK)
              of
              { (# ipv2_iawOK #) ->
              case ipv2_iawOK of { GHC.MVar.MVar ww1_sazvE ->
              let {
                $wio_sazvB [InlPrag=NOUSERINLINE[0], Dmd=<L,1*C1(C1(U(U,U)))>]
                  :: MutVar# RealWorld (GHC.Event.IntTable.IT [FdData])
                     -> State# RealWorld -> (# State# RealWorld, Bool #)
                [LclId, Arity=2, Str=<S,U><S,U>, Unf=OtherCon []]
                $wio_sazvB
                  = \ (ww2_sazvz [OS=OneShot]
                         :: MutVar# RealWorld (GHC.Event.IntTable.IT [FdData]))
                      (w_sazvw [OS=OneShot] :: State# RealWorld) ->
                      case readMutVar#
                             @ RealWorld @ (GHC.Event.IntTable.IT [FdData]) ww2_sazvz w_sazvw
                      of
                      { (# ipv3_iayzy, ipv4_iayzz #) ->
                      case ipv4_iayzz of
                      { GHC.Event.IntTable.IT dt14_iayzE dt15_iayzF dt16_iayzG ->
                      let {
                        n#_iayzD [Dmd=<S,U>] :: Int#
                        [LclId]
                        n#_iayzD
                          = andI#
                              dt12_dawXC
                              (-#
                                 (sizeofMutableArray#
                                    @ RealWorld @ (GHC.Event.IntTable.Bucket [FdData]) dt14_iayzE)
                                 1#) } in
                      case readArray#
                             @ RealWorld
                             @ (GHC.Event.IntTable.Bucket [FdData])
                             dt14_iayzE
                             n#_iayzD
                             ipv3_iayzy
                      of
                      { (# ipv5_iayzM, ipv6_iayzN #) ->
                      let {
                        g_saxzi [Dmd=<L,C(U)>] :: FdData -> Bool
                        [LclId,
                         Arity=1,
                         Str=<S(LSLL),1*U(A,U,A,A)>,
                         Unf=Unf{Src=InlineStable, TopLvl=False, Value=True, ConLike=True,
                                 WorkFree=True, Expandable=True,
                                 Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=False)
                                 Tmpl= \ (x1_i7Rxi [Occ=Once!] :: FdData) ->
                                         case x1_i7Rxi of
                                         { FdData _ [Occ=Dead] dt18_dawZj [Occ=Once] _ [Occ=Dead]
                                                  _ [Occ=Dead] ->
                                         tagToEnum# @ Bool (/=# dt18_dawZj dt13_dawXD)
                                         }}]
                        g_saxzi
                          = \ (x1_i7Rxi :: FdData) ->
                              case x1_i7Rxi of
                              { FdData dt17_dawZi dt18_dawZj dt19_dawZk ds9_dawWh ->
                              tagToEnum# @ Bool (/=# dt18_dawZj dt13_dawXD)
                              } } in
                      letrec {
                        $wgo_iayzK [InlPrag=NOUSERINLINE[0], Occ=LoopBreaker]
                          :: GHC.Event.IntTable.Bucket [FdData]
                             -> (# Bool, Maybe [FdData], GHC.Event.IntTable.Bucket [FdData] #)
                        [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []]
                        $wgo_iayzK
                          = \ (w2_iayzL :: GHC.Event.IntTable.Bucket [FdData]) ->
                              case w2_iayzL of {
                                GHC.Event.IntTable.Empty ->
                                  (# GHC.Types.False, GHC.Base.Nothing @ [FdData],
                                     GHC.Event.IntTable.Empty @ [FdData] #);
                                GHC.Event.IntTable.Bucket dt17_iayzS ds9_iayzT ds10_iayzU ->
                                  case ==# dt17_iayzS dt12_dawXC of {
                                    __DEFAULT ->
                                      case $wgo_iayzK ds10_iayzU of
                                      { (# ww4_iayzZ, ww5_iayA0, ww6_iayA1 #) ->
                                      (# ww4_iayzZ, ww5_iayA0,
                                         GHC.Event.IntTable.Bucket
                                           @ [FdData] dt17_iayzS ds9_iayzT ww6_iayA1 #)
                                      };
                                    1# ->
                                      case filter @ FdData g_saxzi ds9_iayzT of wild8_X1X {
                                        [] ->
                                          (# GHC.Types.True, GHC.Base.Just @ [FdData] ds9_iayzT,
                                             ds10_iayzU #);
                                        : ds11_dawMu ds12_dawMv ->
                                          (# GHC.Types.False, GHC.Base.Just @ [FdData] ds9_iayzT,
                                             GHC.Event.IntTable.Bucket
                                               @ [FdData] dt17_iayzS wild8_X1X ds10_iayzU #)
                                      }
                                  }
                              }; } in
                      case $wgo_iayzK ipv6_iayzN of
                      { (# ww4_iayAb, ww5_iayAc, ww6_iayAd #) ->
                      join {
                        $j_sayIm [Dmd=<C(C(S)),1*C1(C1(U(U,U)))>]
                          :: State# RealWorld
                             -> Maybe [FdData] -> (# State# RealWorld, Bool #)
                        [LclId[JoinId(2)], Arity=2, Str=<S,U><S,1*U>, Unf=OtherCon []]
                        $j_sayIm (ipv7_i7IAy [OS=OneShot] :: State# RealWorld)
                                 (ipv8_i7IAz [OS=OneShot] :: Maybe [FdData])
                          = join {
                              $w$j_sazvq [InlPrag=NOUSERINLINE[0],
                                          Dmd=<C(C(C(S))),1*C1(C1(C1(U(U,U))))>]
                                :: State# RealWorld -> Int# -> Int# -> (# State# RealWorld, Bool #)
                              [LclId[JoinId(3)], Arity=3, Str=<S,U><S,U><S,U>, Unf=OtherCon []]
                              $w$j_sazvq (w1_sazvb [OS=OneShot] :: State# RealWorld)
                                         (ww7_sazvi [OS=OneShot] :: Int#)
                                         (ww8_sazvn [OS=OneShot] :: Int#)
                                = case /=# ww7_sazvi ww8_sazvn of {
                                    __DEFAULT -> (# w1_sazvb, GHC.Types.False #);
                                    1# ->
                                      let {
                                        fd_saxzf :: GHC.Int.Int32
                                        [LclId, Unf=OtherCon []]
                                        fd_saxzf = GHC.Int.I32# dt12_dawXC } in
                                      join {
                                        fail_saxzm [Dmd=<L,1*C1(U(U,U))>]
                                          :: Void# -> (# State# RealWorld, Bool #)
                                        [LclId[JoinId(1)], Arity=1, Str=<L,A>, Unf=OtherCon []]
                                        fail_saxzm _ [Occ=Dead, OS=OneShot]
                                          = case ((bModifyFd_sazZT
                                                     bState_sazZR
                                                     (fd_saxzf
                                                      `cast` (Sym (Foreign.C.Types.N:CInt[0]) ; Sym (System.Posix.Types.N:Fd[0])
                                                              :: (GHC.Int.Int32 :: *)
                                                                 ~R# (Fd :: *)))
                                                     ((GHC.Types.I# (andI# ww7_sazvi 7#))
                                                      `cast` (Sym (GHC.Event.Internal.N:Event[0])
                                                              :: (Int :: *) ~R# (Event :: *)))
                                                     ((GHC.Types.I# (andI# ww8_sazvn 7#))
                                                      `cast` (Sym (GHC.Event.Internal.N:Event[0])
                                                              :: (Int :: *) ~R# (Event :: *))))
                                                  `cast` (GHC.Types.N:IO[0] <Bool>_R
                                                          :: (IO Bool :: *)
                                                             ~R# (State# RealWorld
                                                                  -> (# State# RealWorld,
                                                                        Bool #) :: *)))
                                                   w1_sazvb
                                            of
                                            { (# ipv9_X7IKG, ipv10_X7IKI #) ->
                                            case ipv10_X7IKI of {
                                              False -> case lvl15_raAun dt12_dawXC of wild8_00 { };
                                              True -> (# ipv9_X7IKG, GHC.Types.True #)
                                            }
                                            } } in
                                      case andI# ww8_sazvn 8# of {
                                        __DEFAULT -> jump fail_saxzm void#;
                                        0# ->
                                          case andI# ww8_sazvn 7# of wild8_X8r {
                                            __DEFAULT ->
                                              case ((ds3_sazZU
                                                       bState_sazZR
                                                       (fd_saxzf
                                                        `cast` (Sym (Foreign.C.Types.N:CInt[0]) ; Sym (System.Posix.Types.N:Fd[0])
                                                                :: (GHC.Int.Int32 :: *)
                                                                   ~R# (Fd :: *)))
                                                       ((GHC.Types.I# wild8_X8r)
                                                        `cast` (Sym (GHC.Event.Internal.N:Event[0])
                                                                :: (Int :: *) ~R# (Event :: *))))
                                                    `cast` (GHC.Types.N:IO[0] <Bool>_R
                                                            :: (IO Bool :: *)
                                                               ~R# (State# RealWorld
                                                                    -> (# State# RealWorld,
                                                                          Bool #) :: *)))
                                                     w1_sazvb
                                              of
                                              { (# ipv9_X7IKG, ipv10_X7IKI #) ->
                                              case ipv10_X7IKI of {
                                                False ->
                                                  case lvl15_raAun dt12_dawXC of wild10_00 { };
                                                True -> (# ipv9_X7IKG, GHC.Types.True #)
                                              }
                                              };
                                            0# -> jump fail_saxzm void#
                                          }
                                      }
                                  } } in
                            case ipv8_i7IAz of {
                              Nothing -> jump $w$j_sazvq ipv7_i7IAy 0# 0#;
                              Just x1_i8O4S ->
                                case readMutVar#
                                       @ RealWorld
                                       @ (GHC.Event.IntTable.IT [FdData])
                                       ww2_sazvz
                                       ipv7_i7IAy
                                of
                                { (# ipv9_iayHN, ipv10_iayHO #) ->
                                case ipv10_iayHO of
                                { GHC.Event.IntTable.IT dt17_iayHS dt18_iayHT dt19_iayHU ->
                                case readArray#
                                       @ RealWorld
                                       @ (GHC.Event.IntTable.Bucket [FdData])
                                       dt17_iayHS
                                       (andI#
                                          dt12_dawXC
                                          (-#
                                             (sizeofMutableArray#
                                                @ RealWorld
                                                @ (GHC.Event.IntTable.Bucket [FdData])
                                                dt17_iayHS)
                                             1#))
                                       ipv9_iayHN
                                of
                                { (# ipv11_iayI2, ipv12_iayI3 #) ->
                                letrec {
                                  go_iayHY [Occ=LoopBreaker]
                                    :: forall a1. GHC.Event.IntTable.Bucket a1 -> Maybe a1
                                  [LclId, Arity=1, Str=<S,1*U>, Unf=OtherCon []]
                                  go_iayHY
                                    = \ (@ a1_iayI0)
                                        (ds11_iayI1 :: GHC.Event.IntTable.Bucket a1_iayI0) ->
                                        case ds11_iayI1 of {
                                          GHC.Event.IntTable.Empty -> GHC.Base.Nothing @ a1_iayI0;
                                          GHC.Event.IntTable.Bucket dt20_iayI8 ds12_iayI9
                                                                    ds13_iayIa ->
                                            case ==# dt20_iayI8 dt12_dawXC of {
                                              __DEFAULT -> go_iayHY @ a1_iayI0 ds13_iayIa;
                                              1# -> GHC.Base.Just @ a1_iayI0 ds12_iayI9
                                            }
                                        }; } in
                                case go_iayHY @ [FdData] ipv12_iayI3 of vx_iayId { __DEFAULT ->
                                case GHC.Event.Manager.$weventsOf x1_i8O4S of ww7_sazrd
                                { __DEFAULT ->
                                case vx_iayId of {
                                  Nothing -> jump $w$j_sazvq ipv11_iayI2 ww7_sazrd 0#;
                                  Just x2_X8O9Y ->
                                    case GHC.Event.Manager.$weventsOf x2_X8O9Y of ww8_XazzV
                                    { __DEFAULT ->
                                    jump $w$j_sazvq ipv11_iayI2 ww7_sazrd ww8_XazzV
                                    }
                                }
                                }
                                }
                                }
                                }
                                }
                            } } in
                      case ww5_iayAc of wild7_iayAf {
                        Nothing -> jump $j_sayIm ipv5_iayzM (GHC.Base.Nothing @ [FdData]);
                        Just ipv7_iayAj ->
                          case writeArray#
                                 @ RealWorld
                                 @ (GHC.Event.IntTable.Bucket [FdData])
                                 dt14_iayzE
                                 n#_iayzD
                                 ww6_iayAd
                                 ipv5_iayzM
                          of s1#_iayAl
                          { __DEFAULT ->
                          case ww4_iayAb of {
                            False -> jump $j_sayIm s1#_iayAl wild7_iayAf;
                            True ->
                              case readIntOffAddr# @ RealWorld dt15_iayzF 0# s1#_iayAl of
                              { (# ipv8_iayAt, ipv9_iayAu #) ->
                              case writeIntOffAddr#
                                     @ RealWorld dt15_iayzF 0# (-# ipv9_iayAu 1#) ipv8_iayAt
                              of s2_iayAw
                              { __DEFAULT ->
                              case touch#
                                     @ 'LiftedRep
                                     @ GHC.ForeignPtr.ForeignPtrContents
                                     dt16_iayzG
                                     s2_iayAw
                              of s'_iayAx
                              { __DEFAULT ->
                              jump $j_sayIm s'_iayAx wild7_iayAf
                              }
                              }
                              }
                          }
                          }
                      }
                      }
                      }
                      }
                      } } in
              let {
                io_saxzc [InlPrag=NOUSERINLINE[0], Dmd=<L,1*C1(C1(U))>]
                  :: IntTable [FdData]
                     -> State# RealWorld -> (# State# RealWorld, Bool #)
                [LclId,
                 Arity=2,
                 Str=<S(S),1*U(U)><S,U>,
                 Unf=Unf{Src=InlineStable, TopLvl=False, Value=True, ConLike=True,
                         WorkFree=True, Expandable=True,
                         Guidance=ALWAYS_IF(arity=2,unsat_ok=True,boring_ok=False)
                         Tmpl= \ (w_sazvv [Occ=Once] :: IntTable [FdData])
                                 (w1_sazvw [Occ=Once] :: State# RealWorld) ->
                                 case w_sazvv
                                      `cast` (GHC.Event.IntTable.N:IntTable[0]
                                                  <[FdData]>_R ; GHC.IORef.N:IORef[0] <GHC.Event.IntTable.IT
                                                                                         [FdData]>_N
                                              :: (IntTable [FdData] :: *)
                                                 ~R# (GHC.STRef.STRef
                                                        RealWorld
                                                        (GHC.Event.IntTable.IT [FdData]) :: *))
                                 of
                                 { GHC.STRef.STRef ww3_sazvz [Occ=Once] ->
                                 $wio_sazvB ww3_sazvz w1_sazvw
                                 }}]
                io_saxzc
                  = \ (w_sazvv [OS=OneShot] :: IntTable [FdData])
                      (w1_sazvw [OS=OneShot] :: State# RealWorld) ->
                      case w_sazvv
                           `cast` (GHC.Event.IntTable.N:IntTable[0]
                                       <[FdData]>_R ; GHC.IORef.N:IORef[0] <GHC.Event.IntTable.IT
                                                                              [FdData]>_N
                                   :: (IntTable [FdData] :: *)
                                      ~R# (GHC.STRef.STRef
                                             RealWorld (GHC.Event.IntTable.IT [FdData]) :: *))
                      of
                      { GHC.STRef.STRef ww3_sazvz ->
                      $wio_sazvB ww3_sazvz w1_sazvw
                      } } in
              case ipv1_iafMX of {
                __DEFAULT ->
                  case takeMVar#
                         @ RealWorld @ (IntTable [FdData]) ww1_sazvE ipv_iafMW
                  of
                  { (# ipv3_i7IAy, ipv4_i7IAz #) ->
                  case catch#
                         @ Bool
                         @ GHC.Exception.SomeException
                         (maskAsyncExceptions# @ Bool (io_saxzc ipv4_i7IAz))
                         (\ (e1_iafN9 [OS=OneShot] :: GHC.Exception.SomeException)
                            (s1_iafNa [OS=OneShot] :: State# RealWorld) ->
                            case putMVar#
                                   @ RealWorld @ (IntTable [FdData]) ww1_sazvE ipv4_i7IAz s1_iafNa
                            of s2#_i9DsB
                            { __DEFAULT ->
                            raiseIO# @ GHC.Exception.SomeException @ Bool e1_iafN9 s2#_i9DsB
                            })
                         ipv3_i7IAy
                  of
                  { (# ipv5_X7IAZ, ipv6_X7IB1 #) ->
                  case putMVar#
                         @ RealWorld @ (IntTable [FdData]) ww1_sazvE ipv4_i7IAz ipv5_X7IAZ
                  of s2#_i9DsB
                  { __DEFAULT ->
                  (# s2#_i9DsB, ipv6_X7IB1 #)
                  }
                  }
                  };
                0# ->
                  maskAsyncExceptions#
                    @ Bool
                    (\ (s1_X7IFp [OS=OneShot] :: State# RealWorld) ->
                       case takeMVar# @ RealWorld @ (IntTable [FdData]) ww1_sazvE s1_X7IFp
                       of
                       { (# ipv3_i7IAy, ipv4_i7IAz #) ->
                       case catch#
                              @ Bool
                              @ GHC.Exception.SomeException
                              (unmaskAsyncExceptions# @ Bool (io_saxzc ipv4_i7IAz))
                              (\ (e1_iafN9 [OS=OneShot] :: GHC.Exception.SomeException)
                                 (s2_iafNa [OS=OneShot] :: State# RealWorld) ->
                                 case putMVar#
                                        @ RealWorld
                                        @ (IntTable [FdData])
                                        ww1_sazvE
                                        ipv4_i7IAz
                                        s2_iafNa
                                 of s2#_i9DsB
                                 { __DEFAULT ->
                                 raiseIO# @ GHC.Exception.SomeException @ Bool e1_iafN9 s2#_i9DsB
                                 })
                              ipv3_i7IAy
                       of
                       { (# ipv5_X7IAZ, ipv6_X7IB1 #) ->
                       case putMVar#
                              @ RealWorld @ (IntTable [FdData]) ww1_sazvE ipv4_i7IAz ipv5_X7IAZ
                       of s2#_i9DsB
                       { __DEFAULT ->
                       (# s2#_i9DsB, ipv6_X7IB1 #)
                       }
                       }
                       })
                    ipv_iafMW;
                1# ->
                  case takeMVar#
                         @ RealWorld @ (IntTable [FdData]) ww1_sazvE ipv_iafMW
                  of
                  { (# ipv3_i7IAy, ipv4_i7IAz #) ->
                  case catch#
                         @ Bool
                         @ GHC.Exception.SomeException
                         (maskUninterruptible# @ Bool (io_saxzc ipv4_i7IAz))
                         (\ (e1_iafN9 [OS=OneShot] :: GHC.Exception.SomeException)
                            (s1_iafNa [OS=OneShot] :: State# RealWorld) ->
                            case putMVar#
                                   @ RealWorld @ (IntTable [FdData]) ww1_sazvE ipv4_i7IAz s1_iafNa
                            of s2#_i9DsB
                            { __DEFAULT ->
                            raiseIO# @ GHC.Exception.SomeException @ Bool e1_iafN9 s2#_i9DsB
                            })
                         ipv3_i7IAy
                  of
                  { (# ipv5_X7IAZ, ipv6_X7IB1 #) ->
                  case putMVar#
                         @ RealWorld @ (IntTable [FdData]) ww1_sazvE ipv4_i7IAz ipv5_X7IAZ
                  of s2#_i9DsB
                  { __DEFAULT ->
                  (# s2#_i9DsB, ipv6_X7IB1 #)
                  }
                  }
                  }
              }
              }
              }
          }
      }
      }
      }
      }
      }
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 7, joins: 0/0}
unregisterFd_ :: EventManager -> FdKey -> IO Bool
[GblId,
 Arity=3,
 Str=<S(SS(S)S(S)LSLLLLLLLL),1*U(U,U(U),U(U),A,U,A,A,A,A,A,A,A,A)><S(SL),1*U(U,U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.Event.Manager.unregisterFd2
               `cast` (<EventManager>_R
                       ->_R <FdKey>_R
                       ->_R Sym (GHC.Types.N:IO[0] <Bool>_R)
                       :: (EventManager
                           -> FdKey -> State# RealWorld -> (# State# RealWorld, Bool #) :: *)
                          ~R# (EventManager -> FdKey -> IO Bool :: *))}]
unregisterFd_
  = GHC.Event.Manager.unregisterFd2
    `cast` (<EventManager>_R
            ->_R <FdKey>_R
            ->_R Sym (GHC.Types.N:IO[0] <Bool>_R)
            :: (EventManager
                -> FdKey -> State# RealWorld -> (# State# RealWorld, Bool #) :: *)
               ~R# (EventManager -> FdKey -> IO Bool :: *))

-- RHS size: {terms: 15, types: 23, coercions: 0, joins: 0/0}
GHC.Event.Manager.unregisterFd1
  :: EventManager
     -> FdKey -> State# RealWorld -> (# State# RealWorld, () #)
[GblId,
 Arity=3,
 Str=<S(SS(S)S(S)LSLLLLLLLL),1*U(U,U(U),U(U),A,U,A,A,A,A,A,A,A,A)><S(SL),1*U(U,U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=3,unsat_ok=True,boring_ok=False)
         Tmpl= \ (mgr_aawlK [Occ=Once] :: EventManager)
                 (reg_aawlL [Occ=Once] :: FdKey)
                 (s_X7IEL [Occ=Once] :: State# RealWorld) ->
                 case GHC.Event.Manager.unregisterFd2 mgr_aawlK reg_aawlL s_X7IEL of
                 { (# ipv_i7IAy [Occ=Once], ipv1_i7IAz [Occ=Once] #) ->
                 case ipv1_i7IAz of { __DEFAULT -> (# ipv_i7IAy, GHC.Tuple.() #) }
                 }}]
GHC.Event.Manager.unregisterFd1
  = \ (mgr_aawlK :: EventManager)
      (reg_aawlL :: FdKey)
      (s_X7IEL :: State# RealWorld) ->
      case GHC.Event.Manager.unregisterFd2 mgr_aawlK reg_aawlL s_X7IEL of
      { (# ipv_i7IAy, ipv1_i7IAz #) ->
      case ipv1_i7IAz of { __DEFAULT -> (# ipv_i7IAy, GHC.Tuple.() #) }
      }

-- RHS size: {terms: 1, types: 0, coercions: 7, joins: 0/0}
unregisterFd :: EventManager -> FdKey -> IO ()
[GblId,
 Arity=3,
 Str=<S(SS(S)S(S)LSLLLLLLLL),1*U(U,U(U),U(U),A,U,A,A,A,A,A,A,A,A)><S(SL),1*U(U,U)><S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= GHC.Event.Manager.unregisterFd1
               `cast` (<EventManager>_R
                       ->_R <FdKey>_R
                       ->_R Sym (GHC.Types.N:IO[0] <()>_R)
                       :: (EventManager
                           -> FdKey -> State# RealWorld -> (# State# RealWorld, () #) :: *)
                          ~R# (EventManager -> FdKey -> IO () :: *))}]
unregisterFd
  = GHC.Event.Manager.unregisterFd1
    `cast` (<EventManager>_R
            ->_R <FdKey>_R
            ->_R Sym (GHC.Types.N:IO[0] <()>_R)
            :: (EventManager
                -> FdKey -> State# RealWorld -> (# State# RealWorld, () #) :: *)
               ~R# (EventManager -> FdKey -> IO () :: *))


