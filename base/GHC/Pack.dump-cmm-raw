
==================== Raw Cmm ====================
2018-03-16 15:59:02.383547281 UTC

[]


==================== Raw Cmm ====================
2018-03-16 15:59:02.38567308 UTC

[section ""data" . GHC.Pack.unpackCString_closure" {
     GHC.Pack.unpackCString_closure:
         const GHC.Pack.unpackCString_info;
 },
 GHC.Pack.unpackCString_entry() //  [R2]
         { []
         }
     {offset
       c49yt: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c49yu; else goto c49yv;
       c49yu: // global
           R2 = R2;
           R1 = GHC.Pack.unpackCString_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c49yv: // global
           I64[Sp - 8] = block_c49yq_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u49yE; else goto c49yr;
       u49yE: // global
           call _c49yq(R1) args: 0, res: 0, upd: 0;
       c49yr: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Pack.unpackCString_info" {
     GHC.Pack.unpackCString_info:
         const GHC.Pack.unpackCString_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c49yq() //  [R1]
         { []
         }
     {offset
       c49yq: // global
           _s49uc::I64 = I64[R1 + 7];
           if (_s49uc::I64 == 0) goto c49yD; else goto c49yC;
       c49yD: // global
           R1 = []_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c49yC: // global
           R2 = _s49uc::I64;
           Sp = Sp + 8;
           call GHC.CString.unpackCString#_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c49yq_info" {
     block_c49yq_info:
         const _c49yq;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.393673168 UTC

[section ""data" . GHC.Pack.$wfill_in_closure" {
     GHC.Pack.$wfill_in_closure:
         const GHC.Pack.$wfill_in_info;
 },
 GHC.Pack.$wfill_in_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c49z0: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c49z1; else goto u49zg;
       c49z1: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Pack.$wfill_in_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       u49zg: // global
           P64[Sp - 24] = R2;
           I64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           call _c49yQ() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . GHC.Pack.$wfill_in_info" {
     GHC.Pack.$wfill_in_info:
         const GHC.Pack.$wfill_in_entry;
         const 0;
         const 14;
         const 17179869205;
 },
 _c49yQ() //  []
         { []
         }
     {offset
       c49yQ: // global
           I64[Sp - 8] = block_c49yT_info;
           R1 = P64[Sp + 16];
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u49zi; else goto c49yU;
       u49zi: // global
           call _c49yT(R1) args: 0, res: 0, upd: 0;
       c49yU: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c49yT() //  [R1]
         { []
         }
     {offset
       c49yT: // global
           if (R1 & 7 == 1) goto c49yX; else goto c49yY;
       c49yX: // global
           I8[P64[Sp + 8] + (I64[Sp + 16] + 16)] = 0 :: W8;
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c49yY: // global
           I64[Sp] = block_c49z8_info;
           _s49ul::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp + 24] = _s49ul::P64;
           if (R1 & 7 != 0) goto u49zj; else goto c49za;
       u49zj: // global
           call _c49z8(R1) args: 0, res: 0, upd: 0;
       c49za: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c49yT_info" {
     block_c49yT_info:
         const _c49yT;
         const 387;
         const 30;
 },
 _c49z8() //  [R1]
         { []
         }
     {offset
       c49z8: // global
           _s49ue::P64 = P64[Sp + 8];
           _s49uf::I64 = I64[Sp + 16];
           _s49ul::P64 = P64[Sp + 24];
           I8[(_s49ue::P64 + 16) + _s49uf::I64] = %MO_UU_Conv_W64_W8(I64[R1 + 7]);
           P64[Sp + 8] = _s49ue::P64;
           I64[Sp + 16] = _s49uf::I64 + 1;
           P64[Sp + 24] = _s49ul::P64;
           Sp = Sp + 8;
           call _c49yQ() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c49z8_info" {
     block_c49z8_info:
         const _c49z8;
         const 131;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.401193176 UTC

[section ""data" . GHC.Pack.packCString#1_closure" {
     GHC.Pack.packCString#1_closure:
         const GHC.Types.I#_con_info;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.404691094 UTC

[section ""data" . GHC.Pack.packCString#_closure" {
     GHC.Pack.packCString#_closure:
         const GHC.Pack.packCString#_info;
 },
 GHC.Pack.packCString#_entry() //  [R2]
         { []
         }
     {offset
       c49zR: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c49A7; else goto c49A8;
       c49A7: // global
           R2 = R2;
           R1 = GHC.Pack.packCString#_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c49A8: // global
           I64[Sp - 16] = block_c49zP_info;
           R3 = 0;
           _s49uq::P64 = R2;
           R2 = R2;
           P64[Sp - 8] = _s49uq::P64;
           Sp = Sp - 16;
           call GHC.List.$wlenAcc_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Pack.packCString#_info" {
     GHC.Pack.packCString#_info:
         const GHC.Pack.packCString#_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c49zP() //  [R1]
         { []
         }
     {offset
       c49zP: // global
           I64[Sp - 8] = block_c49zX_info;
           _s49ur::I64 = R1;
           R1 = R1 + 1;
           I64[Sp] = _s49ur::I64;
           Sp = Sp - 8;
           call stg_newByteArray#(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c49zP_info" {
     block_c49zP_info:
         const _c49zP;
         const 1;
         const 30;
 },
 _c49zX() //  [R1]
         { []
         }
     {offset
       c49zX: // global
           I64[Sp] = block_c49zZ_info;
           R4 = P64[Sp + 16];
           R3 = 0;
           R2 = R1;
           P64[Sp + 16] = R1;
           call GHC.Pack.$wfill_in_entry(R4, R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c49zX_info" {
     block_c49zX_info:
         const _c49zX;
         const 66;
         const 30;
 },
 _c49zZ() //  [R1]
         { []
         }
     {offset
       c49zZ: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c49Ad; else goto c49Ac;
       c49Ad: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c49Ac: // global
           I64[Hp - 40] = GHC.Types.I#_con_info;
           I64[Hp - 32] = I64[Sp + 8];
           I64[Hp - 24] = GHC.Pack.ByteArray_con_info;
           P64[Hp - 16] = GHC.Pack.packCString#1_closure+1;
           P64[Hp - 8] = Hp - 39;
           P64[Hp] = P64[Sp + 16];
           I64[Sp + 16] = block_c49A6_info;
           R1 = Hp - 23;
           Sp = Sp + 16;
           if (R1 & 7 != 0) goto u49Ak; else goto c49Af;
       u49Ak: // global
           call _c49A6(R1) args: 0, res: 0, upd: 0;
       c49Af: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c49zZ_info" {
     block_c49zZ_info:
         const _c49zZ;
         const 66;
         const 30;
 },
 _c49A6() //  [R1]
         { []
         }
     {offset
       c49A6: // global
           R1 = P64[R1 + 23];
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c49A6_info" {
     block_c49A6_info:
         const _c49A6;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.414007423 UTC

[section ""cstring" . GHC.Pack.$trModule4_bytes" {
     GHC.Pack.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.415583172 UTC

[section ""data" . GHC.Pack.$trModule3_closure" {
     GHC.Pack.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Pack.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.417326066 UTC

[section ""cstring" . GHC.Pack.$trModule2_bytes" {
     GHC.Pack.$trModule2_bytes:
         I8[] [71,72,67,46,80,97,99,107]
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.418886057 UTC

[section ""data" . GHC.Pack.$trModule1_closure" {
     GHC.Pack.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Pack.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.420709034 UTC

[section ""data" . GHC.Pack.$trModule_closure" {
     GHC.Pack.$trModule_closure:
         const GHC.Types.Module_con_info;
         const GHC.Pack.$trModule3_closure+1;
         const GHC.Pack.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.422811044 UTC

[section ""data" . $krep_r49tW_closure" {
     $krep_r49tW_closure:
         const GHC.Types.KindRepVar_con_info;
         const 1;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.424841945 UTC

[section ""data" . $krep1_r49tX_closure" {
     $krep1_r49tX_closure:
         const GHC.Types.KindRepVar_con_info;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.426872937 UTC

[section ""data" . $krep2_r49tY_closure" {
     $krep2_r49tY_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcByteArray#_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.428717804 UTC

[section ""data" . $krep3_r49tZ_closure" {
     $krep3_r49tZ_closure:
         const :_con_info;
         const $krep1_r49tX_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.430821399 UTC

[section ""data" . $krep4_r49u0_closure" {
     $krep4_r49u0_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcMutableByteArray#_closure;
         const $krep3_r49tZ_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.432417232 UTC

[section ""cstring" . GHC.Pack.$tcByteArray2_bytes" {
     GHC.Pack.$tcByteArray2_bytes:
         I8[] [66,121,116,101,65,114,114,97,121]
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.43410941 UTC

[section ""data" . GHC.Pack.$tcByteArray1_closure" {
     GHC.Pack.$tcByteArray1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Pack.$tcByteArray2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.435785623 UTC

[section ""data" . GHC.Pack.$tcByteArray_closure" {
     GHC.Pack.$tcByteArray_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Pack.$trModule_closure+1;
         const GHC.Pack.$tcByteArray1_closure+1;
         const GHC.Types.krep$*Arr*_closure;
         const 6611072354126638117;
         const 11678736345727892353;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.437727404 UTC

[section ""data" . $krep5_r49u1_closure" {
     $krep5_r49u1_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Pack.$tcByteArray_closure+1;
         const $krep3_r49tZ_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.439348542 UTC

[section ""data" . $krep6_r49u2_closure" {
     $krep6_r49u2_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep2_r49tY_closure+1;
         const $krep5_r49u1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.441041539 UTC

[section ""data" . $krep7_r49u3_closure" {
     $krep7_r49u3_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep1_r49tX_closure+2;
         const $krep6_r49u2_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.442838069 UTC

[section ""data" . GHC.Pack.$tc'ByteArray1_closure" {
     GHC.Pack.$tc'ByteArray1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep1_r49tX_closure+2;
         const $krep7_r49u3_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.444430232 UTC

[section ""cstring" . GHC.Pack.$tc'ByteArray3_bytes" {
     GHC.Pack.$tc'ByteArray3_bytes:
         I8[] [39,66,121,116,101,65,114,114,97,121]
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.446110898 UTC

[section ""data" . GHC.Pack.$tc'ByteArray2_closure" {
     GHC.Pack.$tc'ByteArray2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Pack.$tc'ByteArray3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.447720283 UTC

[section ""data" . GHC.Pack.$tc'ByteArray_closure" {
     GHC.Pack.$tc'ByteArray_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Pack.$trModule_closure+1;
         const GHC.Pack.$tc'ByteArray2_closure+1;
         const GHC.Pack.$tc'ByteArray1_closure+4;
         const 11073751302644004223;
         const 16492867229169068973;
         const 1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.449739649 UTC

[section ""cstring" . GHC.Pack.$tcMutableByteArray2_bytes" {
     GHC.Pack.$tcMutableByteArray2_bytes:
         I8[] [77,117,116,97,98,108,101,66,121,116,101,65,114,114,97,121]
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.45125291 UTC

[section ""data" . GHC.Pack.$tcMutableByteArray1_closure" {
     GHC.Pack.$tcMutableByteArray1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Pack.$tcMutableByteArray2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.453059467 UTC

[section ""data" . GHC.Pack.$tcMutableByteArray_closure" {
     GHC.Pack.$tcMutableByteArray_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Pack.$trModule_closure+1;
         const GHC.Pack.$tcMutableByteArray1_closure+1;
         const GHC.Types.krep$*->*->*_closure;
         const 10421317957223969791;
         const 16976841683708620350;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.454779003 UTC

[section ""data" . $krep8_r49u4_closure" {
     $krep8_r49u4_closure:
         const :_con_info;
         const $krep_r49tW_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.456508566 UTC

[section ""data" . $krep9_r49u5_closure" {
     $krep9_r49u5_closure:
         const :_con_info;
         const $krep1_r49tX_closure+2;
         const $krep8_r49u4_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.458292455 UTC

[section ""data" . $krep10_r49u6_closure" {
     $krep10_r49u6_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Pack.$tcMutableByteArray_closure+1;
         const $krep9_r49u5_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.459814155 UTC

[section ""data" . $krep11_r49u7_closure" {
     $krep11_r49u7_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep4_r49u0_closure+1;
         const $krep10_r49u6_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.461922035 UTC

[section ""data" . $krep12_r49u8_closure" {
     $krep12_r49u8_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep_r49tW_closure+2;
         const $krep11_r49u7_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.463519807 UTC

[section ""data" . GHC.Pack.$tc'MutableByteArray1_closure" {
     GHC.Pack.$tc'MutableByteArray1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep_r49tW_closure+2;
         const $krep12_r49u8_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.465294211 UTC

[section ""cstring" . GHC.Pack.$tc'MutableByteArray3_bytes" {
     GHC.Pack.$tc'MutableByteArray3_bytes:
         I8[] [39,77,117,116,97,98,108,101,66,121,116,101,65,114,114,97,121]
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.466900527 UTC

[section ""data" . GHC.Pack.$tc'MutableByteArray2_closure" {
     GHC.Pack.$tc'MutableByteArray2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Pack.$tc'MutableByteArray3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.468661632 UTC

[section ""data" . GHC.Pack.$tc'MutableByteArray_closure" {
     GHC.Pack.$tc'MutableByteArray_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Pack.$trModule_closure+1;
         const GHC.Pack.$tc'MutableByteArray2_closure+1;
         const GHC.Pack.$tc'MutableByteArray1_closure+4;
         const 4727910943669758619;
         const 1938961805888617932;
         const 2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.470978292 UTC

[section ""data" . GHC.Pack.MutableByteArray_closure" {
     GHC.Pack.MutableByteArray_closure:
         const GHC.Pack.MutableByteArray_info;
 },
 GHC.Pack.MutableByteArray_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c49Bi: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c49Bm; else goto c49Bl;
       c49Bm: // global
           HpAlloc = 32;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Pack.MutableByteArray_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c49Bl: // global
           I64[Hp - 24] = GHC.Pack.MutableByteArray_con_info;
           P64[Hp - 16] = R2;
           P64[Hp - 8] = R3;
           P64[Hp] = R4;
           R1 = Hp - 23;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Pack.MutableByteArray_info" {
     GHC.Pack.MutableByteArray_info:
         const GHC.Pack.MutableByteArray_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.475174471 UTC

[section ""data" . GHC.Pack.ByteArray_closure" {
     GHC.Pack.ByteArray_closure:
         const GHC.Pack.ByteArray_info;
 },
 GHC.Pack.ByteArray_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c49Bx: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c49BB; else goto c49BA;
       c49BB: // global
           HpAlloc = 32;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Pack.ByteArray_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c49BA: // global
           I64[Hp - 24] = GHC.Pack.ByteArray_con_info;
           P64[Hp - 16] = R2;
           P64[Hp - 8] = R3;
           P64[Hp] = R4;
           R1 = Hp - 23;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Pack.ByteArray_info" {
     GHC.Pack.ByteArray_info:
         const GHC.Pack.ByteArray_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.478677054 UTC

[section ""cstring" . i49yj_str" {
     i49yj_str:
         I8[] [98,97,115,101,58,71,72,67,46,80,97,99,107,46,77,117,116,97,98,108,101,66,121,116,101,65,114,114,97,121]
 },
 GHC.Pack.MutableByteArray_con_entry() //  [R1]
         { []
         }
     {offset
       c49BH: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Pack.MutableByteArray_con_info" {
     GHC.Pack.MutableByteArray_con_info:
         const GHC.Pack.MutableByteArray_con_entry;
         const 3;
         const 1;
         const i49yj_str;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.48177351 UTC

[section ""cstring" . i49yl_str" {
     i49yl_str:
         I8[] [98,97,115,101,58,71,72,67,46,80,97,99,107,46,66,121,116,101,65,114,114,97,121]
 },
 GHC.Pack.ByteArray_con_entry() //  [R1]
         { []
         }
     {offset
       c49BN: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Pack.ByteArray_con_info" {
     GHC.Pack.ByteArray_con_info:
         const GHC.Pack.ByteArray_con_entry;
         const 3;
         const 1;
         const i49yl_str;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.484518987 UTC

[section ""relreadonly" . S49wx_srt" { S49wx_srt:
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.722706548 UTC

[]


==================== Raw Cmm ====================
2018-03-16 15:59:02.724845272 UTC

[section ""data" . GHC.Pack.unpackCString_closure" {
     GHC.Pack.unpackCString_closure:
         const GHC.Pack.unpackCString_info;
 },
 GHC.Pack.unpackCString_entry() //  [R2]
         { []
         }
     {offset
       c49CC: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c49CD; else goto c49CE;
       c49CD: // global
           R2 = R2;
           R1 = GHC.Pack.unpackCString_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c49CE: // global
           I64[Sp - 8] = block_c49Cz_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u49CN; else goto c49CA;
       u49CN: // global
           call _c49Cz(R1) args: 0, res: 0, upd: 0;
       c49CA: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Pack.unpackCString_info" {
     GHC.Pack.unpackCString_info:
         const GHC.Pack.unpackCString_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c49Cz() //  [R1]
         { []
         }
     {offset
       c49Cz: // global
           _s49BW::I64 = I64[R1 + 7];
           if (_s49BW::I64 == 0) goto c49CM; else goto c49CL;
       c49CM: // global
           R1 = []_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c49CL: // global
           R2 = _s49BW::I64;
           Sp = Sp + 8;
           call GHC.CString.unpackCString#_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c49Cz_info" {
     block_c49Cz_info:
         const _c49Cz;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.73233624 UTC

[section ""data" . GHC.Pack.$wfill_in_closure" {
     GHC.Pack.$wfill_in_closure:
         const GHC.Pack.$wfill_in_info;
 },
 GHC.Pack.$wfill_in_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c49Db: // global
           if ((Sp + -32) < SpLim) (likely: False) goto c49Dc; else goto u49Dr;
       c49Dc: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Pack.$wfill_in_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       u49Dr: // global
           P64[Sp - 24] = R2;
           I64[Sp - 16] = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           call _c49D1() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . GHC.Pack.$wfill_in_info" {
     GHC.Pack.$wfill_in_info:
         const GHC.Pack.$wfill_in_entry;
         const 0;
         const 14;
         const 17179869205;
 },
 _c49D1() //  []
         { []
         }
     {offset
       c49D1: // global
           I64[Sp - 8] = block_c49D4_info;
           R1 = P64[Sp + 16];
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u49Dt; else goto c49D5;
       u49Dt: // global
           call _c49D4(R1) args: 0, res: 0, upd: 0;
       c49D5: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c49D4() //  [R1]
         { []
         }
     {offset
       c49D4: // global
           if (R1 & 7 == 1) goto c49D8; else goto c49D9;
       c49D8: // global
           I8[P64[Sp + 8] + (I64[Sp + 16] + 16)] = 0 :: W8;
           R1 = GHC.Tuple.()_closure+1;
           Sp = Sp + 32;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c49D9: // global
           I64[Sp] = block_c49Dj_info;
           _s49C5::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp + 24] = _s49C5::P64;
           if (R1 & 7 != 0) goto u49Du; else goto c49Dl;
       u49Du: // global
           call _c49Dj(R1) args: 0, res: 0, upd: 0;
       c49Dl: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c49D4_info" {
     block_c49D4_info:
         const _c49D4;
         const 387;
         const 30;
 },
 _c49Dj() //  [R1]
         { []
         }
     {offset
       c49Dj: // global
           _s49BY::P64 = P64[Sp + 8];
           _s49BZ::I64 = I64[Sp + 16];
           _s49C5::P64 = P64[Sp + 24];
           I8[(_s49BY::P64 + 16) + _s49BZ::I64] = %MO_UU_Conv_W64_W8(I64[R1 + 7]);
           P64[Sp + 8] = _s49BY::P64;
           I64[Sp + 16] = _s49BZ::I64 + 1;
           P64[Sp + 24] = _s49C5::P64;
           Sp = Sp + 8;
           call _c49D1() args: 0, res: 0, upd: 0;
     }
 },
 section ""relreadonly" . block_c49Dj_info" {
     block_c49Dj_info:
         const _c49Dj;
         const 131;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.739847569 UTC

[section ""data" . GHC.Pack.packCString#1_closure" {
     GHC.Pack.packCString#1_closure:
         const GHC.Types.I#_con_info;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.743314564 UTC

[section ""data" . GHC.Pack.packCString#_closure" {
     GHC.Pack.packCString#_closure:
         const GHC.Pack.packCString#_info;
 },
 GHC.Pack.packCString#_entry() //  [R2]
         { []
         }
     {offset
       c49E5: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c49El; else goto c49Em;
       c49El: // global
           R2 = R2;
           R1 = GHC.Pack.packCString#_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c49Em: // global
           I64[Sp - 16] = block_c49E3_info;
           R3 = 0;
           _s49Ca::P64 = R2;
           R2 = R2;
           P64[Sp - 8] = _s49Ca::P64;
           Sp = Sp - 16;
           call GHC.List.$wlenAcc_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Pack.packCString#_info" {
     GHC.Pack.packCString#_info:
         const GHC.Pack.packCString#_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c49E3() //  [R1]
         { []
         }
     {offset
       c49E3: // global
           I64[Sp - 8] = block_c49Eb_info;
           _s49Cb::I64 = R1;
           R1 = R1 + 1;
           I64[Sp] = _s49Cb::I64;
           Sp = Sp - 8;
           call stg_newByteArray#(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c49E3_info" {
     block_c49E3_info:
         const _c49E3;
         const 1;
         const 30;
 },
 _c49Eb() //  [R1]
         { []
         }
     {offset
       c49Eb: // global
           I64[Sp] = block_c49Ed_info;
           R4 = P64[Sp + 16];
           R3 = 0;
           R2 = R1;
           P64[Sp + 16] = R1;
           call GHC.Pack.$wfill_in_entry(R4, R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c49Eb_info" {
     block_c49Eb_info:
         const _c49Eb;
         const 66;
         const 30;
 },
 _c49Ed() //  [R1]
         { []
         }
     {offset
       c49Ed: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c49Er; else goto c49Eq;
       c49Er: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c49Eq: // global
           I64[Hp - 40] = GHC.Types.I#_con_info;
           I64[Hp - 32] = I64[Sp + 8];
           I64[Hp - 24] = GHC.Pack.ByteArray_con_info;
           P64[Hp - 16] = GHC.Pack.packCString#1_closure+1;
           P64[Hp - 8] = Hp - 39;
           P64[Hp] = P64[Sp + 16];
           I64[Sp + 16] = block_c49Ek_info;
           R1 = Hp - 23;
           Sp = Sp + 16;
           if (R1 & 7 != 0) goto u49Ey; else goto c49Et;
       u49Ey: // global
           call _c49Ek(R1) args: 0, res: 0, upd: 0;
       c49Et: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c49Ed_info" {
     block_c49Ed_info:
         const _c49Ed;
         const 66;
         const 30;
 },
 _c49Ek() //  [R1]
         { []
         }
     {offset
       c49Ek: // global
           R1 = P64[R1 + 23];
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c49Ek_info" {
     block_c49Ek_info:
         const _c49Ek;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.754398831 UTC

[section ""cstring" . GHC.Pack.$trModule4_bytes" {
     GHC.Pack.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.756173169 UTC

[section ""data" . GHC.Pack.$trModule3_closure" {
     GHC.Pack.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Pack.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.758005746 UTC

[section ""cstring" . GHC.Pack.$trModule2_bytes" {
     GHC.Pack.$trModule2_bytes:
         I8[] [71,72,67,46,80,97,99,107]
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.759768154 UTC

[section ""data" . GHC.Pack.$trModule1_closure" {
     GHC.Pack.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Pack.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.762182928 UTC

[section ""data" . GHC.Pack.$trModule_closure" {
     GHC.Pack.$trModule_closure:
         const GHC.Types.Module_con_info;
         const GHC.Pack.$trModule3_closure+1;
         const GHC.Pack.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.764163806 UTC

[section ""data" . $krep_r49tW_closure" {
     $krep_r49tW_closure:
         const GHC.Types.KindRepVar_con_info;
         const 1;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.766252494 UTC

[section ""data" . $krep1_r49tX_closure" {
     $krep1_r49tX_closure:
         const GHC.Types.KindRepVar_con_info;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.768418161 UTC

[section ""data" . $krep2_r49tY_closure" {
     $krep2_r49tY_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcByteArray#_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.770399718 UTC

[section ""data" . $krep3_r49tZ_closure" {
     $krep3_r49tZ_closure:
         const :_con_info;
         const $krep1_r49tX_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.772360678 UTC

[section ""data" . $krep4_r49u0_closure" {
     $krep4_r49u0_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcMutableByteArray#_closure;
         const $krep3_r49tZ_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.774993565 UTC

[section ""cstring" . GHC.Pack.$tcByteArray2_bytes" {
     GHC.Pack.$tcByteArray2_bytes:
         I8[] [66,121,116,101,65,114,114,97,121]
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.776927493 UTC

[section ""data" . GHC.Pack.$tcByteArray1_closure" {
     GHC.Pack.$tcByteArray1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Pack.$tcByteArray2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.778871453 UTC

[section ""data" . GHC.Pack.$tcByteArray_closure" {
     GHC.Pack.$tcByteArray_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Pack.$trModule_closure+1;
         const GHC.Pack.$tcByteArray1_closure+1;
         const GHC.Types.krep$*Arr*_closure;
         const 6611072354126638117;
         const 11678736345727892353;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.780893672 UTC

[section ""data" . $krep5_r49u1_closure" {
     $krep5_r49u1_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Pack.$tcByteArray_closure+1;
         const $krep3_r49tZ_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.782874372 UTC

[section ""data" . $krep6_r49u2_closure" {
     $krep6_r49u2_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep2_r49tY_closure+1;
         const $krep5_r49u1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.784779101 UTC

[section ""data" . $krep7_r49u3_closure" {
     $krep7_r49u3_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep1_r49tX_closure+2;
         const $krep6_r49u2_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.787033949 UTC

[section ""data" . GHC.Pack.$tc'ByteArray1_closure" {
     GHC.Pack.$tc'ByteArray1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep1_r49tX_closure+2;
         const $krep7_r49u3_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.788723633 UTC

[section ""cstring" . GHC.Pack.$tc'ByteArray3_bytes" {
     GHC.Pack.$tc'ByteArray3_bytes:
         I8[] [39,66,121,116,101,65,114,114,97,121]
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.790375558 UTC

[section ""data" . GHC.Pack.$tc'ByteArray2_closure" {
     GHC.Pack.$tc'ByteArray2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Pack.$tc'ByteArray3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.792578401 UTC

[section ""data" . GHC.Pack.$tc'ByteArray_closure" {
     GHC.Pack.$tc'ByteArray_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Pack.$trModule_closure+1;
         const GHC.Pack.$tc'ByteArray2_closure+1;
         const GHC.Pack.$tc'ByteArray1_closure+4;
         const 11073751302644004223;
         const 16492867229169068973;
         const 1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.794309186 UTC

[section ""cstring" . GHC.Pack.$tcMutableByteArray2_bytes" {
     GHC.Pack.$tcMutableByteArray2_bytes:
         I8[] [77,117,116,97,98,108,101,66,121,116,101,65,114,114,97,121]
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.795941807 UTC

[section ""data" . GHC.Pack.$tcMutableByteArray1_closure" {
     GHC.Pack.$tcMutableByteArray1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Pack.$tcMutableByteArray2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.7976889 UTC

[section ""data" . GHC.Pack.$tcMutableByteArray_closure" {
     GHC.Pack.$tcMutableByteArray_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Pack.$trModule_closure+1;
         const GHC.Pack.$tcMutableByteArray1_closure+1;
         const GHC.Types.krep$*->*->*_closure;
         const 10421317957223969791;
         const 16976841683708620350;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.799413285 UTC

[section ""data" . $krep8_r49u4_closure" {
     $krep8_r49u4_closure:
         const :_con_info;
         const $krep_r49tW_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.801031062 UTC

[section ""data" . $krep9_r49u5_closure" {
     $krep9_r49u5_closure:
         const :_con_info;
         const $krep1_r49tX_closure+2;
         const $krep8_r49u4_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.80271578 UTC

[section ""data" . $krep10_r49u6_closure" {
     $krep10_r49u6_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Pack.$tcMutableByteArray_closure+1;
         const $krep9_r49u5_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.804423666 UTC

[section ""data" . $krep11_r49u7_closure" {
     $krep11_r49u7_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep4_r49u0_closure+1;
         const $krep10_r49u6_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.806510766 UTC

[section ""data" . $krep12_r49u8_closure" {
     $krep12_r49u8_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep_r49tW_closure+2;
         const $krep11_r49u7_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.808114025 UTC

[section ""data" . GHC.Pack.$tc'MutableByteArray1_closure" {
     GHC.Pack.$tc'MutableByteArray1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep_r49tW_closure+2;
         const $krep12_r49u8_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.809807837 UTC

[section ""cstring" . GHC.Pack.$tc'MutableByteArray3_bytes" {
     GHC.Pack.$tc'MutableByteArray3_bytes:
         I8[] [39,77,117,116,97,98,108,101,66,121,116,101,65,114,114,97,121]
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.811420584 UTC

[section ""data" . GHC.Pack.$tc'MutableByteArray2_closure" {
     GHC.Pack.$tc'MutableByteArray2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.Pack.$tc'MutableByteArray3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.813138001 UTC

[section ""data" . GHC.Pack.$tc'MutableByteArray_closure" {
     GHC.Pack.$tc'MutableByteArray_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.Pack.$trModule_closure+1;
         const GHC.Pack.$tc'MutableByteArray2_closure+1;
         const GHC.Pack.$tc'MutableByteArray1_closure+4;
         const 4727910943669758619;
         const 1938961805888617932;
         const 2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.815616408 UTC

[section ""data" . GHC.Pack.MutableByteArray_closure" {
     GHC.Pack.MutableByteArray_closure:
         const GHC.Pack.MutableByteArray_info;
 },
 GHC.Pack.MutableByteArray_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c49FD: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c49FH; else goto c49FG;
       c49FH: // global
           HpAlloc = 32;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Pack.MutableByteArray_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c49FG: // global
           I64[Hp - 24] = GHC.Pack.MutableByteArray_con_info;
           P64[Hp - 16] = R2;
           P64[Hp - 8] = R3;
           P64[Hp] = R4;
           R1 = Hp - 23;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Pack.MutableByteArray_info" {
     GHC.Pack.MutableByteArray_info:
         const GHC.Pack.MutableByteArray_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.820058511 UTC

[section ""data" . GHC.Pack.ByteArray_closure" {
     GHC.Pack.ByteArray_closure:
         const GHC.Pack.ByteArray_info;
 },
 GHC.Pack.ByteArray_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c49FT: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto c49FX; else goto c49FW;
       c49FX: // global
           HpAlloc = 32;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.Pack.ByteArray_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c49FW: // global
           I64[Hp - 24] = GHC.Pack.ByteArray_con_info;
           P64[Hp - 16] = R2;
           P64[Hp - 8] = R3;
           P64[Hp] = R4;
           R1 = Hp - 23;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Pack.ByteArray_info" {
     GHC.Pack.ByteArray_info:
         const GHC.Pack.ByteArray_entry;
         const 0;
         const 14;
         const 12884901911;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.824434762 UTC

[section ""cstring" . i49G5_str" {
     i49G5_str:
         I8[] [98,97,115,101,58,71,72,67,46,80,97,99,107,46,77,117,116,97,98,108,101,66,121,116,101,65,114,114,97,121]
 },
 GHC.Pack.MutableByteArray_con_entry() //  [R1]
         { []
         }
     {offset
       c49G4: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Pack.MutableByteArray_con_info" {
     GHC.Pack.MutableByteArray_con_info:
         const GHC.Pack.MutableByteArray_con_entry;
         const 3;
         const 1;
         const i49G5_str;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.827575744 UTC

[section ""cstring" . i49Gc_str" {
     i49Gc_str:
         I8[] [98,97,115,101,58,71,72,67,46,80,97,99,107,46,66,121,116,101,65,114,114,97,121]
 },
 GHC.Pack.ByteArray_con_entry() //  [R1]
         { []
         }
     {offset
       c49Gb: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.Pack.ByteArray_con_info" {
     GHC.Pack.ByteArray_con_info:
         const GHC.Pack.ByteArray_con_entry;
         const 3;
         const 1;
         const i49Gc_str;
 }]


==================== Raw Cmm ====================
2018-03-16 15:59:02.830498889 UTC

[section ""relreadonly" . S49Gi_srt" { S49Gi_srt:
 }]

