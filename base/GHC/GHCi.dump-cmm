
==================== Output Cmm ====================
2018-03-16 15:55:01.76564801 UTC

[]


==================== Output Cmm ====================
2018-03-16 15:55:01.766565784 UTC

[section ""data" . GHC.GHCi.$p1GHCiSandboxIO_closure" {
     GHC.GHCi.$p1GHCiSandboxIO_closure:
         const GHC.GHCi.$p1GHCiSandboxIO_info;
 },
 GHC.GHCi.$p1GHCiSandboxIO_entry() //  [R2]
         { info_tbl: [(cnSs,
                       label: GHC.GHCi.$p1GHCiSandboxIO_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnSs: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cnSt; else goto cnSu;
       cnSt: // global
           R2 = R2;
           R1 = GHC.GHCi.$p1GHCiSandboxIO_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cnSu: // global
           I64[Sp - 8] = block_cnSp_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto unSy; else goto cnSq;
       unSy: // global
           call _cnSp(R1) args: 0, res: 0, upd: 0;
       cnSq: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cnSp() //  [R1]
         { info_tbl: [(cnSp,
                       label: block_cnSp_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnSp: // global
           R1 = P64[R1 + 7] & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.767765553 UTC

[section ""data" . GHC.GHCi.ghciStepIO_closure" {
     GHC.GHCi.ghciStepIO_closure:
         const GHC.GHCi.ghciStepIO_info;
 },
 GHC.GHCi.ghciStepIO_entry() //  [R2]
         { info_tbl: [(cnSG,
                       label: GHC.GHCi.ghciStepIO_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnSG: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cnSH; else goto cnSI;
       cnSH: // global
           R2 = R2;
           R1 = GHC.GHCi.ghciStepIO_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cnSI: // global
           I64[Sp - 8] = block_cnSD_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto unSM; else goto cnSE;
       unSM: // global
           call _cnSD(R1) args: 0, res: 0, upd: 0;
       cnSE: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cnSD() //  [R1]
         { info_tbl: [(cnSD,
                       label: block_cnSD_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnSD: // global
           R1 = P64[R1 + 15];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.768703408 UTC

[section ""data" . GHC.GHCi.$fGHCiSandboxIOIO_closure" {
     GHC.GHCi.$fGHCiSandboxIOIO_closure:
         const GHC.GHCi.C:GHCiSandboxIO_con_info;
         const GHC.Base.$fMonadIO_closure;
         const GHC.Base.id_closure+1;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.769492467 UTC

[section ""data" . GHC.GHCi.$fFunctorNoIO1_closure" {
     GHC.GHCi.$fFunctorNoIO1_closure:
         const GHC.GHCi.$fFunctorNoIO1_info;
 },
 GHC.GHCi.$fFunctorNoIO1_entry() //  [R2, R3]
         { info_tbl: [(cnST,
                       label: GHC.GHCi.$fFunctorNoIO1_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnST: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cnSU; else goto cnSV;
       cnSU: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.GHCi.$fFunctorNoIO1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cnSV: // global
           I64[Sp - 16] = block_cnSR_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cnSR() //  []
         { info_tbl: [(cnSR,
                       label: block_cnSR_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnSR: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.770421615 UTC

[section ""data" . GHC.GHCi.$fFunctorNoIO_closure" {
     GHC.GHCi.$fFunctorNoIO_closure:
         const GHC.Base.C:Functor_con_info;
         const GHC.Base.$fFunctorIO2_closure+3;
         const GHC.GHCi.$fFunctorNoIO1_closure+3;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.771098992 UTC

[section ""data" . GHC.GHCi.$fApplicativeNoIO5_closure" {
     GHC.GHCi.$fApplicativeNoIO5_closure:
         const GHC.GHCi.$fApplicativeNoIO5_info;
 },
 GHC.GHCi.$fApplicativeNoIO5_entry() //  [R2]
         { info_tbl: [(cnT1,
                       label: GHC.GHCi.$fApplicativeNoIO5_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnT1: // global
           R1 = R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.771860735 UTC

[section ""data" . GHC.GHCi.$fGHCiSandboxIONoIO1_closure" {
     GHC.GHCi.$fGHCiSandboxIONoIO1_closure:
         const GHC.GHCi.$fGHCiSandboxIONoIO1_info;
 },
 GHC.GHCi.$fGHCiSandboxIONoIO1_entry() //  [R2]
         { info_tbl: [(cnT8,
                       label: GHC.GHCi.$fGHCiSandboxIONoIO1_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnT8: // global
           R1 = R2;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.772653359 UTC

[section ""data" . GHC.GHCi.noio_closure" {
     GHC.GHCi.noio_closure:
         const GHC.GHCi.noio_info;
 },
 GHC.GHCi.noio_entry() //  [R2]
         { info_tbl: [(cnTf,
                       label: GHC.GHCi.noio_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnTf: // global
           R2 = R2;
           call GHC.GHCi.$fGHCiSandboxIONoIO1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.773558376 UTC

[section ""data" . GHC.GHCi.$fMonadNoIO1_closure" {
     GHC.GHCi.$fMonadNoIO1_closure:
         const GHC.GHCi.$fMonadNoIO1_info;
 },
 GHC.GHCi.$fMonadNoIO1_entry() //  [R2, R3]
         { info_tbl: [(cnTo,
                       label: GHC.GHCi.$fMonadNoIO1_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnTo: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cnTp; else goto cnTq;
       cnTp: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.GHCi.$fMonadNoIO1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cnTq: // global
           I64[Sp - 16] = block_cnTm_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cnTm() //  [R1]
         { info_tbl: [(cnTm,
                       label: block_cnTm_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnTm: // global
           R2 = R1;
           R1 = P64[Sp + 8];
           Sp = Sp + 16;
           call stg_ap_pv_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.774773306 UTC

[section ""data" . GHC.GHCi.$fApplicativeNoIO4_closure" {
     GHC.GHCi.$fApplicativeNoIO4_closure:
         const GHC.GHCi.$fApplicativeNoIO4_info;
 },
 GHC.GHCi.$fApplicativeNoIO4_entry() //  [R2, R3]
         { info_tbl: [(cnTB,
                       label: GHC.GHCi.$fApplicativeNoIO4_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnTB: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cnTC; else goto cnTD;
       cnTC: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.GHCi.$fApplicativeNoIO4_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cnTD: // global
           I64[Sp - 16] = block_cnTw_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cnTw() //  [R1]
         { info_tbl: [(cnTw,
                       label: block_cnTw_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnTw: // global
           I64[Sp] = block_cnTy_info;
           _snRP::P64 = R1;
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _snRP::P64;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cnTy() //  [R1]
         { info_tbl: [(cnTy,
                       label: block_cnTy_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnTy: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cnTH; else goto cnTG;
       cnTH: // global
           HpAlloc = 32;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cnTG: // global
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = P64[Sp + 8];
           P64[Hp] = R1;
           R1 = Hp - 24;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.77614433 UTC

[section ""data" . GHC.GHCi.$fApplicativeNoIO2_closure" {
     GHC.GHCi.$fApplicativeNoIO2_closure:
         const GHC.GHCi.$fApplicativeNoIO2_info;
 },
 GHC.GHCi.$fApplicativeNoIO2_entry() //  [R2, R3]
         { info_tbl: [(cnTO,
                       label: GHC.GHCi.$fApplicativeNoIO2_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnTO: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cnTP; else goto cnTQ;
       cnTP: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.GHCi.$fApplicativeNoIO2_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cnTQ: // global
           I64[Sp - 16] = block_cnTM_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cnTM() //  []
         { info_tbl: [(cnTM,
                       label: block_cnTM_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnTM: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 16;
           call stg_ap_v_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.777378255 UTC

[section ""data" . GHC.GHCi.$fApplicativeNoIO3_closure" {
     GHC.GHCi.$fApplicativeNoIO3_closure:
         const GHC.GHCi.$fApplicativeNoIO3_info;
 },
 GHC.GHCi.$fApplicativeNoIO3_entry() //  [R2, R3, R4]
         { info_tbl: [(cnU1,
                       label: GHC.GHCi.$fApplicativeNoIO3_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnU1: // global
           if ((Sp + -24) < SpLim) (likely: False) goto cnU2; else goto cnU3;
       cnU2: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.GHCi.$fApplicativeNoIO3_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cnU3: // global
           I64[Sp - 24] = block_cnTW_info;
           R1 = R3;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cnTW() //  [R1]
         { info_tbl: [(cnTW,
                       label: block_cnTW_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnTW: // global
           I64[Sp] = block_cnTY_info;
           _snS6::P64 = R1;
           R1 = P64[Sp + 16];
           P64[Sp + 16] = _snS6::P64;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cnTY() //  [R1]
         { info_tbl: [(cnTY,
                       label: block_cnTY_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnTY: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto cnU7; else goto cnU6;
       cnU7: // global
           HpAlloc = 40;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cnU6: // global
           I64[Hp - 32] = stg_ap_3_upd_info;
           P64[Hp - 16] = P64[Sp + 8];
           P64[Hp - 8] = P64[Sp + 16];
           P64[Hp] = R1;
           R1 = Hp - 32;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.778750102 UTC

[section ""data" . GHC.GHCi.$fApplicativeNoIO1_closure" {
     GHC.GHCi.$fApplicativeNoIO1_closure:
         const GHC.GHCi.$fApplicativeNoIO1_info;
 },
 GHC.GHCi.$fApplicativeNoIO1_entry() //  [R2, R3]
         { info_tbl: [(cnUg,
                       label: GHC.GHCi.$fApplicativeNoIO1_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnUg: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cnUh; else goto cnUi;
       cnUh: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.GHCi.$fApplicativeNoIO1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cnUi: // global
           I64[Sp - 16] = block_cnUc_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cnUc() //  [R1]
         { info_tbl: [(cnUc,
                       label: block_cnUc_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnUc: // global
           I64[Sp] = block_cnUe_info;
           _snSg::P64 = R1;
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _snSg::P64;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cnUe() //  []
         { info_tbl: [(cnUe,
                       label: block_cnUe_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnUe: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.779931312 UTC

[section ""data" . GHC.GHCi.$fMonadNoIO_$c>>_closure" {
     GHC.GHCi.$fMonadNoIO_$c>>_closure:
         const GHC.GHCi.$fMonadNoIO_$c>>_info;
 },
 GHC.GHCi.$fMonadNoIO_$c>>_entry() //  [R2, R3]
         { info_tbl: [(cnUp,
                       label: GHC.GHCi.$fMonadNoIO_$c>>_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnUp: // global
           R3 = R3;
           R2 = R2;
           call GHC.GHCi.$fApplicativeNoIO2_entry(R3,
                                                  R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.780694502 UTC

[section ""data" . GHC.GHCi.$fApplicativeNoIO_closure" {
     GHC.GHCi.$fApplicativeNoIO_closure:
         const GHC.Base.C:Applicative_con_info;
         const GHC.GHCi.$fFunctorNoIO_closure+1;
         const GHC.GHCi.$fApplicativeNoIO5_closure+2;
         const GHC.GHCi.$fApplicativeNoIO4_closure+3;
         const GHC.GHCi.$fApplicativeNoIO3_closure+4;
         const GHC.GHCi.$fApplicativeNoIO2_closure+3;
         const GHC.GHCi.$fApplicativeNoIO1_closure+3;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.781529472 UTC

[section ""data" . lvl_rnRg_closure" {
     lvl_rnRg_closure:
         const lvl_rnRg_info;
         const 0;
 },
 lvl_rnRg_entry() //  [R2]
         { info_tbl: [(cnUw,
                       label: lvl_rnRg_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnUw: // global
           R2 = R2;
           call GHC.Err.errorWithoutStackTrace_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.782247771 UTC

[section ""data" . GHC.GHCi.$fMonadNoIO_closure" {
     GHC.GHCi.$fMonadNoIO_closure:
         const GHC.Base.C:Monad_con_info;
         const GHC.GHCi.$fApplicativeNoIO_closure+1;
         const GHC.GHCi.$fMonadNoIO1_closure+3;
         const GHC.GHCi.$fMonadNoIO_$c>>_closure+3;
         const GHC.GHCi.$fApplicativeNoIO5_closure+2;
         const lvl_rnRg_closure+1;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.782837818 UTC

[section ""data" . GHC.GHCi.$fGHCiSandboxIONoIO_closure" {
     GHC.GHCi.$fGHCiSandboxIONoIO_closure:
         const GHC.GHCi.C:GHCiSandboxIO_con_info;
         const GHC.GHCi.$fMonadNoIO_closure+1;
         const GHC.GHCi.$fGHCiSandboxIONoIO1_closure+1;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.78345078 UTC

[section ""cstring" . GHC.GHCi.$trModule4_bytes" {
     GHC.GHCi.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.783991766 UTC

[section ""data" . GHC.GHCi.$trModule3_closure" {
     GHC.GHCi.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.GHCi.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.78453144 UTC

[section ""cstring" . GHC.GHCi.$trModule2_bytes" {
     GHC.GHCi.$trModule2_bytes:
         I8[] [71,72,67,46,71,72,67,105]
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.785081713 UTC

[section ""data" . GHC.GHCi.$trModule1_closure" {
     GHC.GHCi.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.GHCi.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.785684559 UTC

[section ""data" . GHC.GHCi.$trModule_closure" {
     GHC.GHCi.$trModule_closure:
         const GHC.Types.Module_con_info;
         const GHC.GHCi.$trModule3_closure+1;
         const GHC.GHCi.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.786255845 UTC

[section ""data" . $krep_rnRh_closure" {
     $krep_rnRh_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcConstraint_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.786818857 UTC

[section ""data" . GHC.GHCi.$tcGHCiSandboxIO1_closure" {
     GHC.GHCi.$tcGHCiSandboxIO1_closure:
         const GHC.Types.KindRepFun_con_info;
         const GHC.Types.krep$*Arr*_closure;
         const $krep_rnRh_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.787406146 UTC

[section ""data" . $krep1_rnRi_closure" {
     $krep1_rnRi_closure:
         const GHC.Types.KindRepVar_con_info;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.787953193 UTC

[section ""data" . $krep2_rnRj_closure" {
     $krep2_rnRj_closure:
         const :_con_info;
         const $krep1_rnRi_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.788549251 UTC

[section ""data" . $krep3_rnRk_closure" {
     $krep3_rnRk_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcIO_closure;
         const $krep2_rnRj_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.789162587 UTC

[section ""cstring" . GHC.GHCi.$tcGHCiSandboxIO3_bytes" {
     GHC.GHCi.$tcGHCiSandboxIO3_bytes:
         I8[] [71,72,67,105,83,97,110,100,98,111,120,73,79]
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.789739925 UTC

[section ""data" . GHC.GHCi.$tcGHCiSandboxIO2_closure" {
     GHC.GHCi.$tcGHCiSandboxIO2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.GHCi.$tcGHCiSandboxIO3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.791091546 UTC

[section ""data" . GHC.GHCi.$tcGHCiSandboxIO_closure" {
     GHC.GHCi.$tcGHCiSandboxIO_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.GHCi.$trModule_closure+1;
         const GHC.GHCi.$tcGHCiSandboxIO2_closure+1;
         const GHC.GHCi.$tcGHCiSandboxIO1_closure+4;
         const 6221156064250054927;
         const 4417322204787188560;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.791694658 UTC

[section ""cstring" . GHC.GHCi.$tcNoIO2_bytes" {
     GHC.GHCi.$tcNoIO2_bytes:
         I8[] [78,111,73,79]
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.792192439 UTC

[section ""data" . GHC.GHCi.$tcNoIO1_closure" {
     GHC.GHCi.$tcNoIO1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.GHCi.$tcNoIO2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.792740619 UTC

[section ""data" . GHC.GHCi.$tcNoIO_closure" {
     GHC.GHCi.$tcNoIO_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.GHCi.$trModule_closure+1;
         const GHC.GHCi.$tcNoIO1_closure+1;
         const GHC.Types.krep$*Arr*_closure;
         const 10516839389931644691;
         const 13251969196347980517;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.793419526 UTC

[section ""data" . $krep4_rnRl_closure" {
     $krep4_rnRl_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.GHCi.$tcNoIO_closure+1;
         const $krep2_rnRj_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.79399011 UTC

[section ""data" . GHC.GHCi.$tc'NoIO1_closure" {
     GHC.GHCi.$tc'NoIO1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep3_rnRk_closure+1;
         const $krep4_rnRl_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.794508833 UTC

[section ""cstring" . GHC.GHCi.$tc'NoIO3_bytes" {
     GHC.GHCi.$tc'NoIO3_bytes:
         I8[] [39,78,111,73,79]
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.795060739 UTC

[section ""data" . GHC.GHCi.$tc'NoIO2_closure" {
     GHC.GHCi.$tc'NoIO2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.GHCi.$tc'NoIO3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.795642456 UTC

[section ""data" . GHC.GHCi.$tc'NoIO_closure" {
     GHC.GHCi.$tc'NoIO_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.GHCi.$trModule_closure+1;
         const GHC.GHCi.$tc'NoIO2_closure+1;
         const GHC.GHCi.$tc'NoIO1_closure+4;
         const 11198799526314248800;
         const 4496738896484332546;
         const 1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.796571205 UTC

[section ""data" . GHC.GHCi.C:GHCiSandboxIO_closure" {
     GHC.GHCi.C:GHCiSandboxIO_closure:
         const GHC.GHCi.C:GHCiSandboxIO_info;
 },
 GHC.GHCi.C:GHCiSandboxIO_entry() //  [R2, R3]
         { info_tbl: [(cnUF,
                       label: GHC.GHCi.C:GHCiSandboxIO_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnUF: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cnUJ; else goto cnUI;
       cnUJ: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = GHC.GHCi.C:GHCiSandboxIO_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cnUI: // global
           I64[Hp - 16] = GHC.GHCi.C:GHCiSandboxIO_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.797496216 UTC

[GHC.GHCi.C:GHCiSandboxIO_con_entry() //  [R1]
         { info_tbl: [(cnUK,
                       label: GHC.GHCi.C:GHCiSandboxIO_con_info
                       rep:HeapRep 2 ptrs {
                             Con {tag: 0
                                  descr:[98,97,115,101,58,71,72,67,46,71,72,67,105,46,67,58,71,72,67,105,83,97,110,100,98,111,120,73,79]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnUK: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.798167694 UTC

[section ""relreadonly" . SnUz_srt" {
     SnUz_srt:
         const GHC.Err.errorWithoutStackTrace_closure;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.798665354 UTC

[]


==================== Output Cmm ====================
2018-03-16 15:55:01.799597858 UTC

[section ""data" . GHC.GHCi.$p1GHCiSandboxIO_closure" {
     GHC.GHCi.$p1GHCiSandboxIO_closure:
         const GHC.GHCi.$p1GHCiSandboxIO_info;
 },
 GHC.GHCi.$p1GHCiSandboxIO_entry() //  [R2]
         { info_tbl: [(cnUS,
                       label: GHC.GHCi.$p1GHCiSandboxIO_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnUS: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cnUT; else goto cnUU;
       cnUT: // global
           R2 = R2;
           R1 = GHC.GHCi.$p1GHCiSandboxIO_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cnUU: // global
           I64[Sp - 8] = block_cnUP_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto unUY; else goto cnUQ;
       unUY: // global
           call _cnUP(R1) args: 0, res: 0, upd: 0;
       cnUQ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cnUP() //  [R1]
         { info_tbl: [(cnUP,
                       label: block_cnUP_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnUP: // global
           R1 = P64[R1 + 7] & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.800815951 UTC

[section ""data" . GHC.GHCi.ghciStepIO_closure" {
     GHC.GHCi.ghciStepIO_closure:
         const GHC.GHCi.ghciStepIO_info;
 },
 GHC.GHCi.ghciStepIO_entry() //  [R2]
         { info_tbl: [(cnV6,
                       label: GHC.GHCi.ghciStepIO_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnV6: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cnV7; else goto cnV8;
       cnV7: // global
           R2 = R2;
           R1 = GHC.GHCi.ghciStepIO_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cnV8: // global
           I64[Sp - 8] = block_cnV3_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto unVc; else goto cnV4;
       unVc: // global
           call _cnV3(R1) args: 0, res: 0, upd: 0;
       cnV4: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cnV3() //  [R1]
         { info_tbl: [(cnV3,
                       label: block_cnV3_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnV3: // global
           R1 = P64[R1 + 15];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.801791234 UTC

[section ""data" . GHC.GHCi.$fGHCiSandboxIOIO_closure" {
     GHC.GHCi.$fGHCiSandboxIOIO_closure:
         const GHC.GHCi.C:GHCiSandboxIO_con_info;
         const GHC.Base.$fMonadIO_closure;
         const GHC.Base.id_closure+1;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.802530053 UTC

[section ""data" . GHC.GHCi.$fFunctorNoIO1_closure" {
     GHC.GHCi.$fFunctorNoIO1_closure:
         const GHC.GHCi.$fFunctorNoIO1_info;
 },
 GHC.GHCi.$fFunctorNoIO1_entry() //  [R2, R3]
         { info_tbl: [(cnVj,
                       label: GHC.GHCi.$fFunctorNoIO1_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnVj: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cnVk; else goto cnVl;
       cnVk: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.GHCi.$fFunctorNoIO1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cnVl: // global
           I64[Sp - 16] = block_cnVh_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cnVh() //  []
         { info_tbl: [(cnVh,
                       label: block_cnVh_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnVh: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.803474405 UTC

[section ""data" . GHC.GHCi.$fFunctorNoIO_closure" {
     GHC.GHCi.$fFunctorNoIO_closure:
         const GHC.Base.C:Functor_con_info;
         const GHC.Base.$fFunctorIO2_closure+3;
         const GHC.GHCi.$fFunctorNoIO1_closure+3;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.804130635 UTC

[section ""data" . GHC.GHCi.$fApplicativeNoIO5_closure" {
     GHC.GHCi.$fApplicativeNoIO5_closure:
         const GHC.GHCi.$fApplicativeNoIO5_info;
 },
 GHC.GHCi.$fApplicativeNoIO5_entry() //  [R2]
         { info_tbl: [(cnVr,
                       label: GHC.GHCi.$fApplicativeNoIO5_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnVr: // global
           R1 = R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.804903455 UTC

[section ""data" . GHC.GHCi.$fGHCiSandboxIONoIO1_closure" {
     GHC.GHCi.$fGHCiSandboxIONoIO1_closure:
         const GHC.GHCi.$fGHCiSandboxIONoIO1_info;
 },
 GHC.GHCi.$fGHCiSandboxIONoIO1_entry() //  [R2]
         { info_tbl: [(cnVy,
                       label: GHC.GHCi.$fGHCiSandboxIONoIO1_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnVy: // global
           R1 = R2;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.805699885 UTC

[section ""data" . GHC.GHCi.noio_closure" {
     GHC.GHCi.noio_closure:
         const GHC.GHCi.noio_info;
 },
 GHC.GHCi.noio_entry() //  [R2]
         { info_tbl: [(cnVF,
                       label: GHC.GHCi.noio_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnVF: // global
           R2 = R2;
           call GHC.GHCi.$fGHCiSandboxIONoIO1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.806539889 UTC

[section ""data" . GHC.GHCi.$fMonadNoIO1_closure" {
     GHC.GHCi.$fMonadNoIO1_closure:
         const GHC.GHCi.$fMonadNoIO1_info;
 },
 GHC.GHCi.$fMonadNoIO1_entry() //  [R2, R3]
         { info_tbl: [(cnVO,
                       label: GHC.GHCi.$fMonadNoIO1_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnVO: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cnVP; else goto cnVQ;
       cnVP: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.GHCi.$fMonadNoIO1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cnVQ: // global
           I64[Sp - 16] = block_cnVM_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cnVM() //  [R1]
         { info_tbl: [(cnVM,
                       label: block_cnVM_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnVM: // global
           R2 = R1;
           R1 = P64[Sp + 8];
           Sp = Sp + 16;
           call stg_ap_pv_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.807773323 UTC

[section ""data" . GHC.GHCi.$fApplicativeNoIO4_closure" {
     GHC.GHCi.$fApplicativeNoIO4_closure:
         const GHC.GHCi.$fApplicativeNoIO4_info;
 },
 GHC.GHCi.$fApplicativeNoIO4_entry() //  [R2, R3]
         { info_tbl: [(cnW1,
                       label: GHC.GHCi.$fApplicativeNoIO4_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnW1: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cnW2; else goto cnW3;
       cnW2: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.GHCi.$fApplicativeNoIO4_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cnW3: // global
           I64[Sp - 16] = block_cnVW_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cnVW() //  [R1]
         { info_tbl: [(cnVW,
                       label: block_cnVW_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnVW: // global
           I64[Sp] = block_cnVY_info;
           _snRP::P64 = R1;
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _snRP::P64;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cnVY() //  [R1]
         { info_tbl: [(cnVY,
                       label: block_cnVY_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnVY: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cnW7; else goto cnW6;
       cnW7: // global
           HpAlloc = 32;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cnW6: // global
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = P64[Sp + 8];
           P64[Hp] = R1;
           R1 = Hp - 24;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.809102953 UTC

[section ""data" . GHC.GHCi.$fApplicativeNoIO2_closure" {
     GHC.GHCi.$fApplicativeNoIO2_closure:
         const GHC.GHCi.$fApplicativeNoIO2_info;
 },
 GHC.GHCi.$fApplicativeNoIO2_entry() //  [R2, R3]
         { info_tbl: [(cnWe,
                       label: GHC.GHCi.$fApplicativeNoIO2_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnWe: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cnWf; else goto cnWg;
       cnWf: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.GHCi.$fApplicativeNoIO2_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cnWg: // global
           I64[Sp - 16] = block_cnWc_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cnWc() //  []
         { info_tbl: [(cnWc,
                       label: block_cnWc_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnWc: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 16;
           call stg_ap_v_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.811157517 UTC

[section ""data" . GHC.GHCi.$fApplicativeNoIO3_closure" {
     GHC.GHCi.$fApplicativeNoIO3_closure:
         const GHC.GHCi.$fApplicativeNoIO3_info;
 },
 GHC.GHCi.$fApplicativeNoIO3_entry() //  [R2, R3, R4]
         { info_tbl: [(cnWr,
                       label: GHC.GHCi.$fApplicativeNoIO3_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnWr: // global
           if ((Sp + -24) < SpLim) (likely: False) goto cnWs; else goto cnWt;
       cnWs: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.GHCi.$fApplicativeNoIO3_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       cnWt: // global
           I64[Sp - 24] = block_cnWm_info;
           R1 = R3;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cnWm() //  [R1]
         { info_tbl: [(cnWm,
                       label: block_cnWm_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnWm: // global
           I64[Sp] = block_cnWo_info;
           _snS6::P64 = R1;
           R1 = P64[Sp + 16];
           P64[Sp + 16] = _snS6::P64;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cnWo() //  [R1]
         { info_tbl: [(cnWo,
                       label: block_cnWo_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnWo: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto cnWx; else goto cnWw;
       cnWx: // global
           HpAlloc = 40;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cnWw: // global
           I64[Hp - 32] = stg_ap_3_upd_info;
           P64[Hp - 16] = P64[Sp + 8];
           P64[Hp - 8] = P64[Sp + 16];
           P64[Hp] = R1;
           R1 = Hp - 32;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.812559338 UTC

[section ""data" . GHC.GHCi.$fApplicativeNoIO1_closure" {
     GHC.GHCi.$fApplicativeNoIO1_closure:
         const GHC.GHCi.$fApplicativeNoIO1_info;
 },
 GHC.GHCi.$fApplicativeNoIO1_entry() //  [R2, R3]
         { info_tbl: [(cnWG,
                       label: GHC.GHCi.$fApplicativeNoIO1_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnWG: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cnWH; else goto cnWI;
       cnWH: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.GHCi.$fApplicativeNoIO1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cnWI: // global
           I64[Sp - 16] = block_cnWC_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cnWC() //  [R1]
         { info_tbl: [(cnWC,
                       label: block_cnWC_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnWC: // global
           I64[Sp] = block_cnWE_info;
           _snSg::P64 = R1;
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _snSg::P64;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cnWE() //  []
         { info_tbl: [(cnWE,
                       label: block_cnWE_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnWE: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.813721968 UTC

[section ""data" . GHC.GHCi.$fMonadNoIO_$c>>_closure" {
     GHC.GHCi.$fMonadNoIO_$c>>_closure:
         const GHC.GHCi.$fMonadNoIO_$c>>_info;
 },
 GHC.GHCi.$fMonadNoIO_$c>>_entry() //  [R2, R3]
         { info_tbl: [(cnWP,
                       label: GHC.GHCi.$fMonadNoIO_$c>>_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnWP: // global
           R3 = R3;
           R2 = R2;
           call GHC.GHCi.$fApplicativeNoIO2_entry(R3,
                                                  R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.814439784 UTC

[section ""data" . GHC.GHCi.$fApplicativeNoIO_closure" {
     GHC.GHCi.$fApplicativeNoIO_closure:
         const GHC.Base.C:Applicative_con_info;
         const GHC.GHCi.$fFunctorNoIO_closure+1;
         const GHC.GHCi.$fApplicativeNoIO5_closure+2;
         const GHC.GHCi.$fApplicativeNoIO4_closure+3;
         const GHC.GHCi.$fApplicativeNoIO3_closure+4;
         const GHC.GHCi.$fApplicativeNoIO2_closure+3;
         const GHC.GHCi.$fApplicativeNoIO1_closure+3;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.815132489 UTC

[section ""data" . lvl_rnRg_closure" {
     lvl_rnRg_closure:
         const lvl_rnRg_info;
         const 0;
 },
 lvl_rnRg_entry() //  [R2]
         { info_tbl: [(cnWW,
                       label: lvl_rnRg_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnWW: // global
           R2 = R2;
           call GHC.Err.errorWithoutStackTrace_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.815829927 UTC

[section ""data" . GHC.GHCi.$fMonadNoIO_closure" {
     GHC.GHCi.$fMonadNoIO_closure:
         const GHC.Base.C:Monad_con_info;
         const GHC.GHCi.$fApplicativeNoIO_closure+1;
         const GHC.GHCi.$fMonadNoIO1_closure+3;
         const GHC.GHCi.$fMonadNoIO_$c>>_closure+3;
         const GHC.GHCi.$fApplicativeNoIO5_closure+2;
         const lvl_rnRg_closure+1;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.816428244 UTC

[section ""data" . GHC.GHCi.$fGHCiSandboxIONoIO_closure" {
     GHC.GHCi.$fGHCiSandboxIONoIO_closure:
         const GHC.GHCi.C:GHCiSandboxIO_con_info;
         const GHC.GHCi.$fMonadNoIO_closure+1;
         const GHC.GHCi.$fGHCiSandboxIONoIO1_closure+1;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.81698763 UTC

[section ""cstring" . GHC.GHCi.$trModule4_bytes" {
     GHC.GHCi.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.817560111 UTC

[section ""data" . GHC.GHCi.$trModule3_closure" {
     GHC.GHCi.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.GHCi.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.81808666 UTC

[section ""cstring" . GHC.GHCi.$trModule2_bytes" {
     GHC.GHCi.$trModule2_bytes:
         I8[] [71,72,67,46,71,72,67,105]
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.818573472 UTC

[section ""data" . GHC.GHCi.$trModule1_closure" {
     GHC.GHCi.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.GHCi.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.819129869 UTC

[section ""data" . GHC.GHCi.$trModule_closure" {
     GHC.GHCi.$trModule_closure:
         const GHC.Types.Module_con_info;
         const GHC.GHCi.$trModule3_closure+1;
         const GHC.GHCi.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.819700045 UTC

[section ""data" . $krep_rnRh_closure" {
     $krep_rnRh_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcConstraint_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.820312293 UTC

[section ""data" . GHC.GHCi.$tcGHCiSandboxIO1_closure" {
     GHC.GHCi.$tcGHCiSandboxIO1_closure:
         const GHC.Types.KindRepFun_con_info;
         const GHC.Types.krep$*Arr*_closure;
         const $krep_rnRh_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.820885295 UTC

[section ""data" . $krep1_rnRi_closure" {
     $krep1_rnRi_closure:
         const GHC.Types.KindRepVar_con_info;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.821511636 UTC

[section ""data" . $krep2_rnRj_closure" {
     $krep2_rnRj_closure:
         const :_con_info;
         const $krep1_rnRi_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.822067011 UTC

[section ""data" . $krep3_rnRk_closure" {
     $krep3_rnRk_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcIO_closure;
         const $krep2_rnRj_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.822668388 UTC

[section ""cstring" . GHC.GHCi.$tcGHCiSandboxIO3_bytes" {
     GHC.GHCi.$tcGHCiSandboxIO3_bytes:
         I8[] [71,72,67,105,83,97,110,100,98,111,120,73,79]
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.824110159 UTC

[section ""data" . GHC.GHCi.$tcGHCiSandboxIO2_closure" {
     GHC.GHCi.$tcGHCiSandboxIO2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.GHCi.$tcGHCiSandboxIO3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.824736112 UTC

[section ""data" . GHC.GHCi.$tcGHCiSandboxIO_closure" {
     GHC.GHCi.$tcGHCiSandboxIO_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.GHCi.$trModule_closure+1;
         const GHC.GHCi.$tcGHCiSandboxIO2_closure+1;
         const GHC.GHCi.$tcGHCiSandboxIO1_closure+4;
         const 6221156064250054927;
         const 4417322204787188560;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.825372082 UTC

[section ""cstring" . GHC.GHCi.$tcNoIO2_bytes" {
     GHC.GHCi.$tcNoIO2_bytes:
         I8[] [78,111,73,79]
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.825912276 UTC

[section ""data" . GHC.GHCi.$tcNoIO1_closure" {
     GHC.GHCi.$tcNoIO1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.GHCi.$tcNoIO2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.826445797 UTC

[section ""data" . GHC.GHCi.$tcNoIO_closure" {
     GHC.GHCi.$tcNoIO_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.GHCi.$trModule_closure+1;
         const GHC.GHCi.$tcNoIO1_closure+1;
         const GHC.Types.krep$*Arr*_closure;
         const 10516839389931644691;
         const 13251969196347980517;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.827036977 UTC

[section ""data" . $krep4_rnRl_closure" {
     $krep4_rnRl_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.GHCi.$tcNoIO_closure+1;
         const $krep2_rnRj_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.827630763 UTC

[section ""data" . GHC.GHCi.$tc'NoIO1_closure" {
     GHC.GHCi.$tc'NoIO1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep3_rnRk_closure+1;
         const $krep4_rnRl_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.828223551 UTC

[section ""cstring" . GHC.GHCi.$tc'NoIO3_bytes" {
     GHC.GHCi.$tc'NoIO3_bytes:
         I8[] [39,78,111,73,79]
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.828787102 UTC

[section ""data" . GHC.GHCi.$tc'NoIO2_closure" {
     GHC.GHCi.$tc'NoIO2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.GHCi.$tc'NoIO3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.829438686 UTC

[section ""data" . GHC.GHCi.$tc'NoIO_closure" {
     GHC.GHCi.$tc'NoIO_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.GHCi.$trModule_closure+1;
         const GHC.GHCi.$tc'NoIO2_closure+1;
         const GHC.GHCi.$tc'NoIO1_closure+4;
         const 11198799526314248800;
         const 4496738896484332546;
         const 1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.830420666 UTC

[section ""data" . GHC.GHCi.C:GHCiSandboxIO_closure" {
     GHC.GHCi.C:GHCiSandboxIO_closure:
         const GHC.GHCi.C:GHCiSandboxIO_info;
 },
 GHC.GHCi.C:GHCiSandboxIO_entry() //  [R2, R3]
         { info_tbl: [(cnX4,
                       label: GHC.GHCi.C:GHCiSandboxIO_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnX4: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto cnX8; else goto cnX7;
       cnX8: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = GHC.GHCi.C:GHCiSandboxIO_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cnX7: // global
           I64[Hp - 16] = GHC.GHCi.C:GHCiSandboxIO_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.831403332 UTC

[GHC.GHCi.C:GHCiSandboxIO_con_entry() //  [R1]
         { info_tbl: [(cnX9,
                       label: GHC.GHCi.C:GHCiSandboxIO_con_info
                       rep:HeapRep 2 ptrs {
                             Con {tag: 0
                                  descr:[98,97,115,101,58,71,72,67,46,71,72,67,105,46,67,58,71,72,67,105,83,97,110,100,98,111,120,73,79]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnX9: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.832103242 UTC

[section ""relreadonly" . SnUz_srt" {
     SnUz_srt:
         const GHC.Err.errorWithoutStackTrace_closure;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.832863419 UTC

[]


==================== Output Cmm ====================
2018-03-16 15:55:01.834417168 UTC

[section ""data" . GHC.GHCi.$p1GHCiSandboxIO_closure" {
     GHC.GHCi.$p1GHCiSandboxIO_closure:
         const GHC.GHCi.$p1GHCiSandboxIO_info;
 },
 GHC.GHCi.$p1GHCiSandboxIO_entry() //  [R2]
         { info_tbl: [(cnXi,
                       label: GHC.GHCi.$p1GHCiSandboxIO_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnXi: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cnXj; else goto cnXk;
       cnXj: // global
           R2 = R2;
           R1 = GHC.GHCi.$p1GHCiSandboxIO_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cnXk: // global
           I64[Sp - 8] = block_cnXf_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto unXo; else goto cnXg;
       unXo: // global
           call _cnXf(R1) args: 0, res: 0, upd: 0;
       cnXg: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cnXf() //  [R1]
         { info_tbl: [(cnXf,
                       label: block_cnXf_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnXf: // global
           R1 = P64[R1 + 7] & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.840249984 UTC

[section ""data" . GHC.GHCi.ghciStepIO_closure" {
     GHC.GHCi.ghciStepIO_closure:
         const GHC.GHCi.ghciStepIO_info;
 },
 GHC.GHCi.ghciStepIO_entry() //  [R2]
         { info_tbl: [(cnXH,
                       label: GHC.GHCi.ghciStepIO_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnXH: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cnXI; else goto cnXJ;
       cnXI: // global
           R2 = R2;
           R1 = GHC.GHCi.ghciStepIO_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cnXJ: // global
           I64[Sp - 8] = block_cnXE_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto unXN; else goto cnXF;
       unXN: // global
           call _cnXE(R1) args: 0, res: 0, upd: 0;
       cnXF: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cnXE() //  [R1]
         { info_tbl: [(cnXE,
                       label: block_cnXE_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnXE: // global
           R1 = P64[R1 + 15];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.845537778 UTC

[section ""data" . GHC.GHCi.$fGHCiSandboxIOIO_closure" {
     GHC.GHCi.$fGHCiSandboxIOIO_closure:
         const GHC.GHCi.C:GHCiSandboxIO_con_info;
         const GHC.Base.$fMonadIO_closure;
         const GHC.Base.id_closure+1;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.847580518 UTC

[section ""data" . GHC.GHCi.$fFunctorNoIO1_closure" {
     GHC.GHCi.$fFunctorNoIO1_closure:
         const GHC.GHCi.$fFunctorNoIO1_info;
 },
 GHC.GHCi.$fFunctorNoIO1_entry() //  [R2, R3]
         { info_tbl: [(cnY4,
                       label: GHC.GHCi.$fFunctorNoIO1_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnY4: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cnY5; else goto cnY6;
       cnY5: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.GHCi.$fFunctorNoIO1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cnY6: // global
           I64[Sp - 16] = block_cnY2_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cnY2() //  []
         { info_tbl: [(cnY2,
                       label: block_cnY2_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnY2: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.85288401 UTC

[section ""data" . GHC.GHCi.$fFunctorNoIO_closure" {
     GHC.GHCi.$fFunctorNoIO_closure:
         const GHC.Base.C:Functor_con_info;
         const GHC.Base.$fFunctorIO2_closure+3;
         const GHC.GHCi.$fFunctorNoIO1_closure+3;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.855483239 UTC

[section ""data" . GHC.GHCi.$fApplicativeNoIO5_closure" {
     GHC.GHCi.$fApplicativeNoIO5_closure:
         const GHC.GHCi.$fApplicativeNoIO5_info;
 },
 GHC.GHCi.$fApplicativeNoIO5_entry() //  [R2]
         { info_tbl: [(cnYm,
                       label: GHC.GHCi.$fApplicativeNoIO5_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnYm: // global
           R1 = R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.858787742 UTC

[section ""data" . GHC.GHCi.$fGHCiSandboxIONoIO1_closure" {
     GHC.GHCi.$fGHCiSandboxIONoIO1_closure:
         const GHC.GHCi.$fGHCiSandboxIONoIO1_info;
 },
 GHC.GHCi.$fGHCiSandboxIONoIO1_entry() //  [R2]
         { info_tbl: [(cnYy,
                       label: GHC.GHCi.$fGHCiSandboxIONoIO1_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnYy: // global
           R1 = R2;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.863283396 UTC

[section ""data" . GHC.GHCi.noio_closure" {
     GHC.GHCi.noio_closure:
         const GHC.GHCi.noio_info;
 },
 GHC.GHCi.noio_entry() //  [R2]
         { info_tbl: [(cnYJ,
                       label: GHC.GHCi.noio_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnYJ: // global
           R2 = R2;
           call GHC.GHCi.$fGHCiSandboxIONoIO1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.867064163 UTC

[section ""data" . GHC.GHCi.$fMonadNoIO1_closure" {
     GHC.GHCi.$fMonadNoIO1_closure:
         const GHC.GHCi.$fMonadNoIO1_info;
 },
 GHC.GHCi.$fMonadNoIO1_entry() //  [R2, R3]
         { info_tbl: [(cnYW,
                       label: GHC.GHCi.$fMonadNoIO1_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnYW: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cnYX; else goto cnYY;
       cnYX: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.GHCi.$fMonadNoIO1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cnYY: // global
           I64[Sp - 16] = block_cnYU_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cnYU() //  [R1]
         { info_tbl: [(cnYU,
                       label: block_cnYU_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnYU: // global
           R2 = R1;
           R1 = P64[Sp + 8];
           Sp = Sp + 16;
           call stg_ap_pv_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.874963667 UTC

[section ""data" . GHC.GHCi.$fApplicativeNoIO4_closure" {
     GHC.GHCi.$fApplicativeNoIO4_closure:
         const GHC.GHCi.$fApplicativeNoIO4_info;
 },
 GHC.GHCi.$fApplicativeNoIO4_entry() //  [R2, R3]
         { info_tbl: [(cnZh,
                       label: GHC.GHCi.$fApplicativeNoIO4_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnZh: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cnZi; else goto cnZj;
       cnZi: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.GHCi.$fApplicativeNoIO4_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cnZj: // global
           I64[Sp - 16] = block_cnZc_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cnZc() //  [R1]
         { info_tbl: [(cnZc,
                       label: block_cnZc_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnZc: // global
           I64[Sp] = block_cnZe_info;
           _snRP::P64 = R1;
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _snRP::P64;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cnZe() //  [R1]
         { info_tbl: [(cnZe,
                       label: block_cnZe_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnZe: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto cnZn; else goto cnZm;
       cnZn: // global
           HpAlloc = 32;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       cnZm: // global
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = P64[Sp + 8];
           P64[Hp] = R1;
           R1 = Hp - 24;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.882338239 UTC

[section ""data" . GHC.GHCi.$fApplicativeNoIO2_closure" {
     GHC.GHCi.$fApplicativeNoIO2_closure:
         const GHC.GHCi.$fApplicativeNoIO2_info;
 },
 GHC.GHCi.$fApplicativeNoIO2_entry() //  [R2, R3]
         { info_tbl: [(cnZH,
                       label: GHC.GHCi.$fApplicativeNoIO2_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnZH: // global
           if ((Sp + -16) < SpLim) (likely: False) goto cnZI; else goto cnZJ;
       cnZI: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.GHCi.$fApplicativeNoIO2_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       cnZJ: // global
           I64[Sp - 16] = block_cnZF_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cnZF() //  []
         { info_tbl: [(cnZF,
                       label: block_cnZF_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnZF: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 16;
           call stg_ap_v_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.888132666 UTC

[section ""data" . GHC.GHCi.$fApplicativeNoIO3_closure" {
     GHC.GHCi.$fApplicativeNoIO3_closure:
         const GHC.GHCi.$fApplicativeNoIO3_info;
 },
 GHC.GHCi.$fApplicativeNoIO3_entry() //  [R2, R3, R4]
         { info_tbl: [(co02,
                       label: GHC.GHCi.$fApplicativeNoIO3_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       co02: // global
           if ((Sp + -24) < SpLim) (likely: False) goto co03; else goto co04;
       co03: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.GHCi.$fApplicativeNoIO3_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       co04: // global
           I64[Sp - 24] = block_cnZX_info;
           R1 = R3;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cnZX() //  [R1]
         { info_tbl: [(cnZX,
                       label: block_cnZX_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnZX: // global
           I64[Sp] = block_cnZZ_info;
           _snS6::P64 = R1;
           R1 = P64[Sp + 16];
           P64[Sp + 16] = _snS6::P64;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cnZZ() //  [R1]
         { info_tbl: [(cnZZ,
                       label: block_cnZZ_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cnZZ: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto co08; else goto co07;
       co08: // global
           HpAlloc = 40;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       co07: // global
           I64[Hp - 32] = stg_ap_3_upd_info;
           P64[Hp - 16] = P64[Sp + 8];
           P64[Hp - 8] = P64[Sp + 16];
           P64[Hp] = R1;
           R1 = Hp - 32;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.89821284 UTC

[section ""data" . GHC.GHCi.$fApplicativeNoIO1_closure" {
     GHC.GHCi.$fApplicativeNoIO1_closure:
         const GHC.GHCi.$fApplicativeNoIO1_info;
 },
 GHC.GHCi.$fApplicativeNoIO1_entry() //  [R2, R3]
         { info_tbl: [(co0v,
                       label: GHC.GHCi.$fApplicativeNoIO1_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       co0v: // global
           if ((Sp + -16) < SpLim) (likely: False) goto co0w; else goto co0x;
       co0w: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.GHCi.$fApplicativeNoIO1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       co0x: // global
           I64[Sp - 16] = block_co0r_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _co0r() //  [R1]
         { info_tbl: [(co0r,
                       label: block_co0r_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       co0r: // global
           I64[Sp] = block_co0t_info;
           _snSg::P64 = R1;
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _snSg::P64;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _co0t() //  []
         { info_tbl: [(co0t,
                       label: block_co0t_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       co0t: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.904998128 UTC

[section ""data" . GHC.GHCi.$fMonadNoIO_$c>>_closure" {
     GHC.GHCi.$fMonadNoIO_$c>>_closure:
         const GHC.GHCi.$fMonadNoIO_$c>>_info;
 },
 GHC.GHCi.$fMonadNoIO_$c>>_entry() //  [R2, R3]
         { info_tbl: [(co0Q,
                       label: GHC.GHCi.$fMonadNoIO_$c>>_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       co0Q: // global
           R3 = R3;
           R2 = R2;
           call GHC.GHCi.$fApplicativeNoIO2_entry(R3,
                                                  R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.908187676 UTC

[section ""data" . GHC.GHCi.$fApplicativeNoIO_closure" {
     GHC.GHCi.$fApplicativeNoIO_closure:
         const GHC.Base.C:Applicative_con_info;
         const GHC.GHCi.$fFunctorNoIO_closure+1;
         const GHC.GHCi.$fApplicativeNoIO5_closure+2;
         const GHC.GHCi.$fApplicativeNoIO4_closure+3;
         const GHC.GHCi.$fApplicativeNoIO3_closure+4;
         const GHC.GHCi.$fApplicativeNoIO2_closure+3;
         const GHC.GHCi.$fApplicativeNoIO1_closure+3;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.910152096 UTC

[section ""data" . lvl_rnRg_closure" {
     lvl_rnRg_closure:
         const lvl_rnRg_info;
         const 0;
 },
 lvl_rnRg_entry() //  [R2]
         { info_tbl: [(co12,
                       label: lvl_rnRg_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       co12: // global
           R2 = R2;
           call GHC.Err.errorWithoutStackTrace_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.913189565 UTC

[section ""data" . GHC.GHCi.$fMonadNoIO_closure" {
     GHC.GHCi.$fMonadNoIO_closure:
         const GHC.Base.C:Monad_con_info;
         const GHC.GHCi.$fApplicativeNoIO_closure+1;
         const GHC.GHCi.$fMonadNoIO1_closure+3;
         const GHC.GHCi.$fMonadNoIO_$c>>_closure+3;
         const GHC.GHCi.$fApplicativeNoIO5_closure+2;
         const lvl_rnRg_closure+1;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.915046192 UTC

[section ""data" . GHC.GHCi.$fGHCiSandboxIONoIO_closure" {
     GHC.GHCi.$fGHCiSandboxIONoIO_closure:
         const GHC.GHCi.C:GHCiSandboxIO_con_info;
         const GHC.GHCi.$fMonadNoIO_closure+1;
         const GHC.GHCi.$fGHCiSandboxIONoIO1_closure+1;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.916698559 UTC

[section ""cstring" . GHC.GHCi.$trModule4_bytes" {
     GHC.GHCi.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.918428384 UTC

[section ""data" . GHC.GHCi.$trModule3_closure" {
     GHC.GHCi.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.GHCi.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.920078991 UTC

[section ""cstring" . GHC.GHCi.$trModule2_bytes" {
     GHC.GHCi.$trModule2_bytes:
         I8[] [71,72,67,46,71,72,67,105]
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.92176156 UTC

[section ""data" . GHC.GHCi.$trModule1_closure" {
     GHC.GHCi.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.GHCi.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.923998744 UTC

[section ""data" . GHC.GHCi.$trModule_closure" {
     GHC.GHCi.$trModule_closure:
         const GHC.Types.Module_con_info;
         const GHC.GHCi.$trModule3_closure+1;
         const GHC.GHCi.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.925724757 UTC

[section ""data" . $krep_rnRh_closure" {
     $krep_rnRh_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcConstraint_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.927436689 UTC

[section ""data" . GHC.GHCi.$tcGHCiSandboxIO1_closure" {
     GHC.GHCi.$tcGHCiSandboxIO1_closure:
         const GHC.Types.KindRepFun_con_info;
         const GHC.Types.krep$*Arr*_closure;
         const $krep_rnRh_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.929123393 UTC

[section ""data" . $krep1_rnRi_closure" {
     $krep1_rnRi_closure:
         const GHC.Types.KindRepVar_con_info;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.930773653 UTC

[section ""data" . $krep2_rnRj_closure" {
     $krep2_rnRj_closure:
         const :_con_info;
         const $krep1_rnRi_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.932773874 UTC

[section ""data" . $krep3_rnRk_closure" {
     $krep3_rnRk_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcIO_closure;
         const $krep2_rnRj_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.934952768 UTC

[section ""cstring" . GHC.GHCi.$tcGHCiSandboxIO3_bytes" {
     GHC.GHCi.$tcGHCiSandboxIO3_bytes:
         I8[] [71,72,67,105,83,97,110,100,98,111,120,73,79]
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.936523312 UTC

[section ""data" . GHC.GHCi.$tcGHCiSandboxIO2_closure" {
     GHC.GHCi.$tcGHCiSandboxIO2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.GHCi.$tcGHCiSandboxIO3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.938228416 UTC

[section ""data" . GHC.GHCi.$tcGHCiSandboxIO_closure" {
     GHC.GHCi.$tcGHCiSandboxIO_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.GHCi.$trModule_closure+1;
         const GHC.GHCi.$tcGHCiSandboxIO2_closure+1;
         const GHC.GHCi.$tcGHCiSandboxIO1_closure+4;
         const 6221156064250054927;
         const 4417322204787188560;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.940052809 UTC

[section ""cstring" . GHC.GHCi.$tcNoIO2_bytes" {
     GHC.GHCi.$tcNoIO2_bytes:
         I8[] [78,111,73,79]
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.941730592 UTC

[section ""data" . GHC.GHCi.$tcNoIO1_closure" {
     GHC.GHCi.$tcNoIO1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.GHCi.$tcNoIO2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.943390828 UTC

[section ""data" . GHC.GHCi.$tcNoIO_closure" {
     GHC.GHCi.$tcNoIO_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.GHCi.$trModule_closure+1;
         const GHC.GHCi.$tcNoIO1_closure+1;
         const GHC.Types.krep$*Arr*_closure;
         const 10516839389931644691;
         const 13251969196347980517;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.945162197 UTC

[section ""data" . $krep4_rnRl_closure" {
     $krep4_rnRl_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.GHCi.$tcNoIO_closure+1;
         const $krep2_rnRj_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.946845397 UTC

[section ""data" . GHC.GHCi.$tc'NoIO1_closure" {
     GHC.GHCi.$tc'NoIO1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep3_rnRk_closure+1;
         const $krep4_rnRl_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.948985646 UTC

[section ""cstring" . GHC.GHCi.$tc'NoIO3_bytes" {
     GHC.GHCi.$tc'NoIO3_bytes:
         I8[] [39,78,111,73,79]
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.950646666 UTC

[section ""data" . GHC.GHCi.$tc'NoIO2_closure" {
     GHC.GHCi.$tc'NoIO2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.GHCi.$tc'NoIO3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.952276424 UTC

[section ""data" . GHC.GHCi.$tc'NoIO_closure" {
     GHC.GHCi.$tc'NoIO_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.GHCi.$trModule_closure+1;
         const GHC.GHCi.$tc'NoIO2_closure+1;
         const GHC.GHCi.$tc'NoIO1_closure+4;
         const 11198799526314248800;
         const 4496738896484332546;
         const 1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.954341822 UTC

[section ""data" . GHC.GHCi.C:GHCiSandboxIO_closure" {
     GHC.GHCi.C:GHCiSandboxIO_closure:
         const GHC.GHCi.C:GHCiSandboxIO_info;
 },
 GHC.GHCi.C:GHCiSandboxIO_entry() //  [R2, R3]
         { info_tbl: [(co1B,
                       label: GHC.GHCi.C:GHCiSandboxIO_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       co1B: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto co1F; else goto co1E;
       co1F: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = GHC.GHCi.C:GHCiSandboxIO_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       co1E: // global
           I64[Hp - 16] = GHC.GHCi.C:GHCiSandboxIO_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.958024712 UTC

[GHC.GHCi.C:GHCiSandboxIO_con_entry() //  [R1]
         { info_tbl: [(co1L,
                       label: GHC.GHCi.C:GHCiSandboxIO_con_info
                       rep:HeapRep 2 ptrs {
                             Con {tag: 0
                                  descr:[98,97,115,101,58,71,72,67,46,71,72,67,105,46,67,58,71,72,67,105,83,97,110,100,98,111,120,73,79]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       co1L: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:01.961185856 UTC

[section ""relreadonly" . SnUz_srt" {
     SnUz_srt:
         const GHC.Err.errorWithoutStackTrace_closure;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:02.149718975 UTC

[]


==================== Output Cmm ====================
2018-03-16 15:55:02.151308634 UTC

[section ""data" . GHC.GHCi.$p1GHCiSandboxIO_closure" {
     GHC.GHCi.$p1GHCiSandboxIO_closure:
         const GHC.GHCi.$p1GHCiSandboxIO_info;
 },
 GHC.GHCi.$p1GHCiSandboxIO_entry() //  [R2]
         { info_tbl: [(co2X,
                       label: GHC.GHCi.$p1GHCiSandboxIO_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       co2X: // global
           if ((Sp + -8) < SpLim) (likely: False) goto co2Y; else goto co2Z;
       co2Y: // global
           R2 = R2;
           R1 = GHC.GHCi.$p1GHCiSandboxIO_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       co2Z: // global
           I64[Sp - 8] = block_co2U_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto uo33; else goto co2V;
       uo33: // global
           call _co2U(R1) args: 0, res: 0, upd: 0;
       co2V: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _co2U() //  [R1]
         { info_tbl: [(co2U,
                       label: block_co2U_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       co2U: // global
           R1 = P64[R1 + 7] & (-8);
           Sp = Sp + 8;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:02.158292924 UTC

[section ""data" . GHC.GHCi.ghciStepIO_closure" {
     GHC.GHCi.ghciStepIO_closure:
         const GHC.GHCi.ghciStepIO_info;
 },
 GHC.GHCi.ghciStepIO_entry() //  [R2]
         { info_tbl: [(co3n,
                       label: GHC.GHCi.ghciStepIO_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       co3n: // global
           if ((Sp + -8) < SpLim) (likely: False) goto co3o; else goto co3p;
       co3o: // global
           R2 = R2;
           R1 = GHC.GHCi.ghciStepIO_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       co3p: // global
           I64[Sp - 8] = block_co3k_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto uo3t; else goto co3l;
       uo3t: // global
           call _co3k(R1) args: 0, res: 0, upd: 0;
       co3l: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _co3k() //  [R1]
         { info_tbl: [(co3k,
                       label: block_co3k_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       co3k: // global
           R1 = P64[R1 + 15];
           Sp = Sp + 8;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:02.163415324 UTC

[section ""data" . GHC.GHCi.$fGHCiSandboxIOIO_closure" {
     GHC.GHCi.$fGHCiSandboxIOIO_closure:
         const GHC.GHCi.C:GHCiSandboxIO_con_info;
         const GHC.Base.$fMonadIO_closure;
         const GHC.Base.id_closure+1;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:02.165861169 UTC

[section ""data" . GHC.GHCi.$fFunctorNoIO1_closure" {
     GHC.GHCi.$fFunctorNoIO1_closure:
         const GHC.GHCi.$fFunctorNoIO1_info;
 },
 GHC.GHCi.$fFunctorNoIO1_entry() //  [R2, R3]
         { info_tbl: [(co3L,
                       label: GHC.GHCi.$fFunctorNoIO1_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       co3L: // global
           if ((Sp + -16) < SpLim) (likely: False) goto co3M; else goto co3N;
       co3M: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.GHCi.$fFunctorNoIO1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       co3N: // global
           I64[Sp - 16] = block_co3J_info;
           R1 = R3;
           P64[Sp - 8] = R2;
           Sp = Sp - 16;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _co3J() //  []
         { info_tbl: [(co3J,
                       label: block_co3J_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       co3J: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:02.170935577 UTC

[section ""data" . GHC.GHCi.$fFunctorNoIO_closure" {
     GHC.GHCi.$fFunctorNoIO_closure:
         const GHC.Base.C:Functor_con_info;
         const GHC.Base.$fFunctorIO2_closure+3;
         const GHC.GHCi.$fFunctorNoIO1_closure+3;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:02.172865068 UTC

[section ""data" . GHC.GHCi.$fApplicativeNoIO5_closure" {
     GHC.GHCi.$fApplicativeNoIO5_closure:
         const GHC.GHCi.$fApplicativeNoIO5_info;
 },
 GHC.GHCi.$fApplicativeNoIO5_entry() //  [R2]
         { info_tbl: [(co44,
                       label: GHC.GHCi.$fApplicativeNoIO5_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       co44: // global
           R1 = R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:02.17627604 UTC

[section ""data" . GHC.GHCi.$fGHCiSandboxIONoIO1_closure" {
     GHC.GHCi.$fGHCiSandboxIONoIO1_closure:
         const GHC.GHCi.$fGHCiSandboxIONoIO1_info;
 },
 GHC.GHCi.$fGHCiSandboxIONoIO1_entry() //  [R2]
         { info_tbl: [(co4g,
                       label: GHC.GHCi.$fGHCiSandboxIONoIO1_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       co4g: // global
           R1 = R2;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:02.179585212 UTC

[section ""data" . GHC.GHCi.noio_closure" {
     GHC.GHCi.noio_closure:
         const GHC.GHCi.noio_info;
 },
 GHC.GHCi.noio_entry() //  [R2]
         { info_tbl: [(co4r,
                       label: GHC.GHCi.noio_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       co4r: // global
           R2 = R2;
           call GHC.GHCi.$fGHCiSandboxIONoIO1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:02.18300887 UTC

[section ""data" . GHC.GHCi.$fMonadNoIO1_closure" {
     GHC.GHCi.$fMonadNoIO1_closure:
         const GHC.GHCi.$fMonadNoIO1_info;
 },
 GHC.GHCi.$fMonadNoIO1_entry() //  [R2, R3]
         { info_tbl: [(co4E,
                       label: GHC.GHCi.$fMonadNoIO1_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       co4E: // global
           if ((Sp + -16) < SpLim) (likely: False) goto co4F; else goto co4G;
       co4F: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.GHCi.$fMonadNoIO1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       co4G: // global
           I64[Sp - 16] = block_co4C_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _co4C() //  [R1]
         { info_tbl: [(co4C,
                       label: block_co4C_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       co4C: // global
           R2 = R1;
           R1 = P64[Sp + 8];
           Sp = Sp + 16;
           call stg_ap_pv_fast(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:02.190067255 UTC

[section ""data" . GHC.GHCi.$fApplicativeNoIO4_closure" {
     GHC.GHCi.$fApplicativeNoIO4_closure:
         const GHC.GHCi.$fApplicativeNoIO4_info;
 },
 GHC.GHCi.$fApplicativeNoIO4_entry() //  [R2, R3]
         { info_tbl: [(co50,
                       label: GHC.GHCi.$fApplicativeNoIO4_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       co50: // global
           if ((Sp + -16) < SpLim) (likely: False) goto co51; else goto co52;
       co51: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.GHCi.$fApplicativeNoIO4_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       co52: // global
           I64[Sp - 16] = block_co4V_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _co4V() //  [R1]
         { info_tbl: [(co4V,
                       label: block_co4V_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       co4V: // global
           I64[Sp] = block_co4X_info;
           _so2k::P64 = R1;
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _so2k::P64;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _co4X() //  [R1]
         { info_tbl: [(co4X,
                       label: block_co4X_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       co4X: // global
           Hp = Hp + 32;
           if (Hp > HpLim) (likely: False) goto co56; else goto co55;
       co56: // global
           HpAlloc = 32;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       co55: // global
           I64[Hp - 24] = stg_ap_2_upd_info;
           P64[Hp - 8] = P64[Sp + 8];
           P64[Hp] = R1;
           R1 = Hp - 24;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:02.197186215 UTC

[section ""data" . GHC.GHCi.$fApplicativeNoIO2_closure" {
     GHC.GHCi.$fApplicativeNoIO2_closure:
         const GHC.GHCi.$fApplicativeNoIO2_info;
 },
 GHC.GHCi.$fApplicativeNoIO2_entry() //  [R2, R3]
         { info_tbl: [(co5t,
                       label: GHC.GHCi.$fApplicativeNoIO2_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       co5t: // global
           if ((Sp + -16) < SpLim) (likely: False) goto co5u; else goto co5v;
       co5u: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.GHCi.$fApplicativeNoIO2_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       co5v: // global
           I64[Sp - 16] = block_co5r_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _co5r() //  []
         { info_tbl: [(co5r,
                       label: block_co5r_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       co5r: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 16;
           call stg_ap_v_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:02.202253949 UTC

[section ""data" . GHC.GHCi.$fApplicativeNoIO3_closure" {
     GHC.GHCi.$fApplicativeNoIO3_closure:
         const GHC.GHCi.$fApplicativeNoIO3_info;
 },
 GHC.GHCi.$fApplicativeNoIO3_entry() //  [R2, R3, R4]
         { info_tbl: [(co5P,
                       label: GHC.GHCi.$fApplicativeNoIO3_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       co5P: // global
           if ((Sp + -24) < SpLim) (likely: False) goto co5Q; else goto co5R;
       co5Q: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.GHCi.$fApplicativeNoIO3_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       co5R: // global
           I64[Sp - 24] = block_co5K_info;
           R1 = R3;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _co5K() //  [R1]
         { info_tbl: [(co5K,
                       label: block_co5K_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       co5K: // global
           I64[Sp] = block_co5M_info;
           _so2B::P64 = R1;
           R1 = P64[Sp + 16];
           P64[Sp + 16] = _so2B::P64;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _co5M() //  [R1]
         { info_tbl: [(co5M,
                       label: block_co5M_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       co5M: // global
           Hp = Hp + 40;
           if (Hp > HpLim) (likely: False) goto co5V; else goto co5U;
       co5V: // global
           HpAlloc = 40;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       co5U: // global
           I64[Hp - 32] = stg_ap_3_upd_info;
           P64[Hp - 16] = P64[Sp + 8];
           P64[Hp - 8] = P64[Sp + 16];
           P64[Hp] = R1;
           R1 = Hp - 32;
           Sp = Sp + 24;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:02.209461184 UTC

[section ""data" . GHC.GHCi.$fApplicativeNoIO1_closure" {
     GHC.GHCi.$fApplicativeNoIO1_closure:
         const GHC.GHCi.$fApplicativeNoIO1_info;
 },
 GHC.GHCi.$fApplicativeNoIO1_entry() //  [R2, R3]
         { info_tbl: [(co6l,
                       label: GHC.GHCi.$fApplicativeNoIO1_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       co6l: // global
           if ((Sp + -16) < SpLim) (likely: False) goto co6m; else goto co6n;
       co6m: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.GHCi.$fApplicativeNoIO1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       co6n: // global
           I64[Sp - 16] = block_co6h_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _co6h() //  [R1]
         { info_tbl: [(co6h,
                       label: block_co6h_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       co6h: // global
           I64[Sp] = block_co6j_info;
           _so2L::P64 = R1;
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _so2L::P64;
           call stg_ap_v_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _co6j() //  []
         { info_tbl: [(co6j,
                       label: block_co6j_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       co6j: // global
           R1 = P64[Sp + 8];
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:02.21609821 UTC

[section ""data" . GHC.GHCi.$fMonadNoIO_$c>>_closure" {
     GHC.GHCi.$fMonadNoIO_$c>>_closure:
         const GHC.GHCi.$fMonadNoIO_$c>>_info;
 },
 GHC.GHCi.$fMonadNoIO_$c>>_entry() //  [R2, R3]
         { info_tbl: [(co6I,
                       label: GHC.GHCi.$fMonadNoIO_$c>>_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       co6I: // global
           R3 = R3;
           R2 = R2;
           call GHC.GHCi.$fApplicativeNoIO2_entry(R3,
                                                  R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:02.219817338 UTC

[section ""data" . GHC.GHCi.$fApplicativeNoIO_closure" {
     GHC.GHCi.$fApplicativeNoIO_closure:
         const GHC.Base.C:Applicative_con_info;
         const GHC.GHCi.$fFunctorNoIO_closure+1;
         const GHC.GHCi.$fApplicativeNoIO5_closure+2;
         const GHC.GHCi.$fApplicativeNoIO4_closure+3;
         const GHC.GHCi.$fApplicativeNoIO3_closure+4;
         const GHC.GHCi.$fApplicativeNoIO2_closure+3;
         const GHC.GHCi.$fApplicativeNoIO1_closure+3;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:02.221764204 UTC

[section ""data" . lvl_rnRg_closure" {
     lvl_rnRg_closure:
         const lvl_rnRg_info;
         const 0;
 },
 lvl_rnRg_entry() //  [R2]
         { info_tbl: [(co6U,
                       label: lvl_rnRg_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       co6U: // global
           R2 = R2;
           call GHC.Err.errorWithoutStackTrace_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:02.22484624 UTC

[section ""data" . GHC.GHCi.$fMonadNoIO_closure" {
     GHC.GHCi.$fMonadNoIO_closure:
         const GHC.Base.C:Monad_con_info;
         const GHC.GHCi.$fApplicativeNoIO_closure+1;
         const GHC.GHCi.$fMonadNoIO1_closure+3;
         const GHC.GHCi.$fMonadNoIO_$c>>_closure+3;
         const GHC.GHCi.$fApplicativeNoIO5_closure+2;
         const lvl_rnRg_closure+1;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:02.226576628 UTC

[section ""data" . GHC.GHCi.$fGHCiSandboxIONoIO_closure" {
     GHC.GHCi.$fGHCiSandboxIONoIO_closure:
         const GHC.GHCi.C:GHCiSandboxIO_con_info;
         const GHC.GHCi.$fMonadNoIO_closure+1;
         const GHC.GHCi.$fGHCiSandboxIONoIO1_closure+1;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:02.228288193 UTC

[section ""cstring" . GHC.GHCi.$trModule4_bytes" {
     GHC.GHCi.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 15:55:02.229969347 UTC

[section ""data" . GHC.GHCi.$trModule3_closure" {
     GHC.GHCi.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.GHCi.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:02.231604918 UTC

[section ""cstring" . GHC.GHCi.$trModule2_bytes" {
     GHC.GHCi.$trModule2_bytes:
         I8[] [71,72,67,46,71,72,67,105]
 }]


==================== Output Cmm ====================
2018-03-16 15:55:02.233169281 UTC

[section ""data" . GHC.GHCi.$trModule1_closure" {
     GHC.GHCi.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.GHCi.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:02.234762255 UTC

[section ""data" . GHC.GHCi.$trModule_closure" {
     GHC.GHCi.$trModule_closure:
         const GHC.Types.Module_con_info;
         const GHC.GHCi.$trModule3_closure+1;
         const GHC.GHCi.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:02.236443244 UTC

[section ""data" . $krep_rnRh_closure" {
     $krep_rnRh_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcConstraint_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:02.238709093 UTC

[section ""data" . GHC.GHCi.$tcGHCiSandboxIO1_closure" {
     GHC.GHCi.$tcGHCiSandboxIO1_closure:
         const GHC.Types.KindRepFun_con_info;
         const GHC.Types.krep$*Arr*_closure;
         const $krep_rnRh_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:02.240394318 UTC

[section ""data" . $krep1_rnRi_closure" {
     $krep1_rnRi_closure:
         const GHC.Types.KindRepVar_con_info;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:02.242079423 UTC

[section ""data" . $krep2_rnRj_closure" {
     $krep2_rnRj_closure:
         const :_con_info;
         const $krep1_rnRi_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:02.243771206 UTC

[section ""data" . $krep3_rnRk_closure" {
     $krep3_rnRk_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcIO_closure;
         const $krep2_rnRj_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:02.246033601 UTC

[section ""cstring" . GHC.GHCi.$tcGHCiSandboxIO3_bytes" {
     GHC.GHCi.$tcGHCiSandboxIO3_bytes:
         I8[] [71,72,67,105,83,97,110,100,98,111,120,73,79]
 }]


==================== Output Cmm ====================
2018-03-16 15:55:02.247622631 UTC

[section ""data" . GHC.GHCi.$tcGHCiSandboxIO2_closure" {
     GHC.GHCi.$tcGHCiSandboxIO2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.GHCi.$tcGHCiSandboxIO3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:02.249294578 UTC

[section ""data" . GHC.GHCi.$tcGHCiSandboxIO_closure" {
     GHC.GHCi.$tcGHCiSandboxIO_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.GHCi.$trModule_closure+1;
         const GHC.GHCi.$tcGHCiSandboxIO2_closure+1;
         const GHC.GHCi.$tcGHCiSandboxIO1_closure+4;
         const 6221156064250054927;
         const 4417322204787188560;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:02.251018974 UTC

[section ""cstring" . GHC.GHCi.$tcNoIO2_bytes" {
     GHC.GHCi.$tcNoIO2_bytes:
         I8[] [78,111,73,79]
 }]


==================== Output Cmm ====================
2018-03-16 15:55:02.252526784 UTC

[section ""data" . GHC.GHCi.$tcNoIO1_closure" {
     GHC.GHCi.$tcNoIO1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.GHCi.$tcNoIO2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:02.254184353 UTC

[section ""data" . GHC.GHCi.$tcNoIO_closure" {
     GHC.GHCi.$tcNoIO_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.GHCi.$trModule_closure+1;
         const GHC.GHCi.$tcNoIO1_closure+1;
         const GHC.Types.krep$*Arr*_closure;
         const 10516839389931644691;
         const 13251969196347980517;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:02.256067122 UTC

[section ""data" . $krep4_rnRl_closure" {
     $krep4_rnRl_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.GHCi.$tcNoIO_closure+1;
         const $krep2_rnRj_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:02.257827386 UTC

[section ""data" . GHC.GHCi.$tc'NoIO1_closure" {
     GHC.GHCi.$tc'NoIO1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep3_rnRk_closure+1;
         const $krep4_rnRl_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:02.259540991 UTC

[section ""cstring" . GHC.GHCi.$tc'NoIO3_bytes" {
     GHC.GHCi.$tc'NoIO3_bytes:
         I8[] [39,78,111,73,79]
 }]


==================== Output Cmm ====================
2018-03-16 15:55:02.261197027 UTC

[section ""data" . GHC.GHCi.$tc'NoIO2_closure" {
     GHC.GHCi.$tc'NoIO2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.GHCi.$tc'NoIO3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:02.262930599 UTC

[section ""data" . GHC.GHCi.$tc'NoIO_closure" {
     GHC.GHCi.$tc'NoIO_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.GHCi.$trModule_closure+1;
         const GHC.GHCi.$tc'NoIO2_closure+1;
         const GHC.GHCi.$tc'NoIO1_closure+4;
         const 11198799526314248800;
         const 4496738896484332546;
         const 1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:55:02.265049376 UTC

[section ""data" . GHC.GHCi.C:GHCiSandboxIO_closure" {
     GHC.GHCi.C:GHCiSandboxIO_closure:
         const GHC.GHCi.C:GHCiSandboxIO_info;
 },
 GHC.GHCi.C:GHCiSandboxIO_entry() //  [R2, R3]
         { info_tbl: [(co7u,
                       label: GHC.GHCi.C:GHCiSandboxIO_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       co7u: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto co7y; else goto co7x;
       co7y: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = GHC.GHCi.C:GHCiSandboxIO_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       co7x: // global
           I64[Hp - 16] = GHC.GHCi.C:GHCiSandboxIO_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:02.268891409 UTC

[GHC.GHCi.C:GHCiSandboxIO_con_entry() //  [R1]
         { info_tbl: [(co7F,
                       label: GHC.GHCi.C:GHCiSandboxIO_con_info
                       rep:HeapRep 2 ptrs {
                             Con {tag: 0
                                  descr:[98,97,115,101,58,71,72,67,46,71,72,67,105,46,67,58,71,72,67,105,83,97,110,100,98,111,120,73,79]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       co7F: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:55:02.272634939 UTC

[section ""relreadonly" . So6X_srt" {
     So6X_srt:
         const GHC.Err.errorWithoutStackTrace_closure;
 }]

