
==================== Raw Cmm ====================
2018-03-16 16:00:27.78901511 UTC

[]


==================== Raw Cmm ====================
2018-03-16 16:00:27.790532434 UTC

[section ""data" . GHC.TypeNats.natSing_closure" {
     GHC.TypeNats.natSing_closure:
         const GHC.TypeNats.natSing_info;
 },
 GHC.TypeNats.natSing_entry() //  [R2]
         { []
         }
     {offset
       c5spL: // global
           R1 = R2 & (-8);
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.TypeNats.natSing_info" {
     GHC.TypeNats.natSing_info:
         const GHC.TypeNats.natSing_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:27.794380891 UTC

[section ""data" . GHC.TypeNats.natVal1_closure" {
     GHC.TypeNats.natVal1_closure:
         const GHC.TypeNats.natVal1_info;
 },
 GHC.TypeNats.natVal1_entry() //  [R2]
         { []
         }
     {offset
       c5spY: // global
           R1 = R2 & (-8);
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.TypeNats.natVal1_info" {
     GHC.TypeNats.natVal1_info:
         const GHC.TypeNats.natVal1_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:27.798866581 UTC

[section ""data" . GHC.TypeNats.natVal_closure" {
     GHC.TypeNats.natVal_closure:
         const GHC.TypeNats.natVal_info;
 },
 GHC.TypeNats.natVal_entry() //  [R2, R3]
         { []
         }
     {offset
       c5sqb: // global
           R3 = R3;
           R2 = R2;
           call GHC.TypeNats.natVal1_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.TypeNats.natVal_info" {
     GHC.TypeNats.natVal_info:
         const GHC.TypeNats.natVal_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:27.802313358 UTC

[section ""data" . GHC.TypeNats.sameNat1_closure" {
     GHC.TypeNats.sameNat1_closure:
         const GHC.Base.Just_con_info;
         const Data.Type.Equality.$WRefl_closure;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:27.806170418 UTC

[section ""data" . GHC.TypeNats.sameNat_closure" {
     GHC.TypeNats.sameNat_closure:
         const GHC.TypeNats.sameNat_info;
 },
 GHC.TypeNats.sameNat_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c5sqs: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5sqt; else goto c5squ;
       c5sqt: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeNats.sameNat_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5squ: // global
           I64[Sp - 8] = block_c5sqn_info;
           R3 = R3;
           R2 = R2;
           Sp = Sp - 8;
           call GHC.Integer.Type.eqInteger#_entry(R3,
                                                  R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.TypeNats.sameNat_info" {
     GHC.TypeNats.sameNat_info:
         const GHC.TypeNats.sameNat_entry;
         const 0;
         const 14;
         const 17179869208;
 },
 _c5sqn() //  [R1]
         { []
         }
     {offset
       c5sqn: // global
           if (R1 == 1) goto c5sqr; else goto c5sqq;
       c5sqr: // global
           R1 = GHC.TypeNats.sameNat1_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5sqq: // global
           R1 = GHC.Base.Nothing_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5sqn_info" {
     block_c5sqn_info:
         const _c5sqn;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:27.81499354 UTC

[section ""data" . GHC.TypeNats.$fShowSomeNat_$cshowsPrec_closure" {
     GHC.TypeNats.$fShowSomeNat_$cshowsPrec_closure:
         const GHC.TypeNats.$fShowSomeNat_$cshowsPrec_info;
         const 0;
 },
 GHC.TypeNats.$fShowSomeNat_$cshowsPrec_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5sqS: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5sqT; else goto c5sqU;
       c5sqT: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeNats.$fShowSomeNat_$cshowsPrec_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5sqU: // global
           I64[Sp - 24] = block_c5sqP_info;
           R1 = R3;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u5sqY; else goto c5sqQ;
       u5sqY: // global
           call _c5sqP(R1) args: 0, res: 0, upd: 0;
       c5sqQ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.TypeNats.$fShowSomeNat_$cshowsPrec_info" {
     GHC.TypeNats.$fShowSomeNat_$cshowsPrec_info:
         const GHC.TypeNats.$fShowSomeNat_$cshowsPrec_entry;
         const 0;
         const 12884901902;
         const 12884901911;
         const S5s9l_srt;
 },
 _c5sqP() //  [R1]
         { []
         }
     {offset
       c5sqP: // global
           R4 = P64[Sp + 16];
           R3 = P64[R1 + 7];
           R2 = P64[Sp + 8];
           Sp = Sp + 24;
           call GHC.Show.$fShowInteger_$cshowsPrec_entry(R4,
                                                         R3,
                                                         R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5sqP_info" {
     block_c5sqP_info:
         const _c5sqP;
         const 2;
         const 4294967326;
         const S5s9l_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:27.824558494 UTC

[section ""data" . GHC.TypeNats.$fShowSomeNat_$cshow_closure" {
     GHC.TypeNats.$fShowSomeNat_$cshow_closure:
         const GHC.TypeNats.$fShowSomeNat_$cshow_info;
         const 0;
 },
 GHC.TypeNats.$fShowSomeNat_$cshow_entry() //  [R2]
         { []
         }
     {offset
       c5srf: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5srl; else goto c5srm;
       c5srl: // global
           R2 = R2;
           R1 = GHC.TypeNats.$fShowSomeNat_$cshow_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5srm: // global
           I64[Sp - 8] = block_c5src_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5srr; else goto c5srd;
       u5srr: // global
           call _c5src(R1) args: 0, res: 0, upd: 0;
       c5srd: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.TypeNats.$fShowSomeNat_$cshow_info" {
     GHC.TypeNats.$fShowSomeNat_$cshow_info:
         const GHC.TypeNats.$fShowSomeNat_$cshow_entry;
         const 0;
         const 12884901902;
         const 4294967301;
         const S5s9l_srt+16;
 },
 _c5src() //  [R1]
         { []
         }
     {offset
       c5src: // global
           I64[Sp] = block_c5sri_info;
           R4 = GHC.Types.[]_closure+1;
           R3 = P64[R1 + 7];
           R2 = 0;
           call GHC.Show.$w$cshowsPrec4_entry(R4,
                                              R3,
                                              R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5src_info" {
     block_c5src_info:
         const _c5src;
         const 0;
         const 4294967326;
         const S5s9l_srt+16;
 },
 _c5sri() //  [R1, R2]
         { []
         }
     {offset
       c5sri: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5srq; else goto c5srp;
       c5srq: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 8;
       c5srp: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5sri_info" {
     block_c5sri_info:
         const _c5sri;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:27.840212867 UTC

[section ""data" . GHC.TypeNats.$fShowSomeNat1_closure" {
     GHC.TypeNats.$fShowSomeNat1_closure:
         const GHC.TypeNats.$fShowSomeNat1_info;
         const 0;
 },
 GHC.TypeNats.$fShowSomeNat1_entry() //  [R2, R3]
         { []
         }
     {offset
       c5srM: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5srS; else goto c5srT;
       c5srS: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeNats.$fShowSomeNat1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5srT: // global
           I64[Sp - 16] = block_c5srJ_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5srY; else goto c5srK;
       u5srY: // global
           call _c5srJ(R1) args: 0, res: 0, upd: 0;
       c5srK: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.TypeNats.$fShowSomeNat1_info" {
     GHC.TypeNats.$fShowSomeNat1_info:
         const GHC.TypeNats.$fShowSomeNat1_entry;
         const 0;
         const 21474836494;
         const 8589934607;
         const S5s9l_srt+16;
 },
 _c5srJ() //  [R1]
         { []
         }
     {offset
       c5srJ: // global
           _s5s6D::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5srP_info;
           R4 = _s5s6D::P64;
           R3 = P64[R1 + 7];
           R2 = 0;
           Sp = Sp + 8;
           call GHC.Show.$w$cshowsPrec4_entry(R4,
                                              R3,
                                              R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5srJ_info" {
     block_c5srJ_info:
         const _c5srJ;
         const 1;
         const 4294967326;
         const S5s9l_srt+16;
 },
 _c5srP() //  [R1, R2]
         { []
         }
     {offset
       c5srP: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5srX; else goto c5srW;
       c5srX: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 8;
       c5srW: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5srP_info" {
     block_c5srP_info:
         const _c5srP;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:27.851061057 UTC

[section ""data" . GHC.TypeNats.$fShowSomeNat_$cshowList_closure" {
     GHC.TypeNats.$fShowSomeNat_$cshowList_closure:
         const GHC.TypeNats.$fShowSomeNat_$cshowList_info;
         const 0;
 },
 GHC.TypeNats.$fShowSomeNat_$cshowList_entry() //  [R2, R3]
         { []
         }
     {offset
       c5ssg: // global
           R4 = R3;
           R3 = R2;
           R2 = GHC.TypeNats.$fShowSomeNat1_closure+2;
           call GHC.Show.showList___entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.TypeNats.$fShowSomeNat_$cshowList_info" {
     GHC.TypeNats.$fShowSomeNat_$cshowList_info:
         const GHC.TypeNats.$fShowSomeNat_$cshowList_entry;
         const 0;
         const 4294967310;
         const 8589934607;
         const S5s9l_srt+32;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:27.856213182 UTC

[section ""data" . GHC.TypeNats.$fShowSomeNat_closure" {
     GHC.TypeNats.$fShowSomeNat_closure:
         const GHC.Show.C:Show_con_info;
         const GHC.TypeNats.$fShowSomeNat_$cshowsPrec_closure+3;
         const GHC.TypeNats.$fShowSomeNat_$cshow_closure+1;
         const GHC.TypeNats.$fShowSomeNat_$cshowList_closure+2;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:27.860992884 UTC

[section ""data" . GHC.TypeNats.$fOrdSomeNat_$ccompare_closure" {
     GHC.TypeNats.$fOrdSomeNat_$ccompare_closure:
         const GHC.TypeNats.$fOrdSomeNat_$ccompare_info;
 },
 GHC.TypeNats.$fOrdSomeNat_$ccompare_entry() //  [R2, R3]
         { []
         }
     {offset
       c5ssv: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5ssz; else goto c5ssA;
       c5ssz: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeNats.$fOrdSomeNat_$ccompare_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5ssA: // global
           I64[Sp - 16] = block_c5sss_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5ssI; else goto c5sst;
       u5ssI: // global
           call _c5sss(R1) args: 0, res: 0, upd: 0;
       c5sst: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.TypeNats.$fOrdSomeNat_$ccompare_info" {
     GHC.TypeNats.$fOrdSomeNat_$ccompare_info:
         const GHC.TypeNats.$fOrdSomeNat_$ccompare_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5sss() //  [R1]
         { []
         }
     {offset
       c5sss: // global
           I64[Sp] = block_c5ssy_info;
           _s5s6P::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s5s6P::P64;
           if (R1 & 7 != 0) goto u5ssH; else goto c5ssC;
       u5ssH: // global
           call _c5ssy(R1) args: 0, res: 0, upd: 0;
       c5ssC: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5sss_info" {
     block_c5sss_info:
         const _c5sss;
         const 1;
         const 30;
 },
 _c5ssy() //  [R1]
         { []
         }
     {offset
       c5ssy: // global
           R3 = P64[R1 + 7];
           R2 = P64[Sp + 8];
           Sp = Sp + 16;
           call GHC.Integer.Type.compareInteger_entry(R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5ssy_info" {
     block_c5ssy_info:
         const _c5ssy;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:27.878302788 UTC

[section ""data" . GHC.TypeNats.$fEqSomeNat_$c==_closure" {
     GHC.TypeNats.$fEqSomeNat_$c==_closure:
         const GHC.TypeNats.$fEqSomeNat_$c==_info;
 },
 GHC.TypeNats.$fEqSomeNat_$c==_entry() //  [R2, R3]
         { []
         }
     {offset
       c5st3: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5st7; else goto c5st8;
       c5st7: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeNats.$fEqSomeNat_$c==_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5st8: // global
           I64[Sp - 16] = block_c5st0_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5stg; else goto c5st1;
       u5stg: // global
           call _c5st0(R1) args: 0, res: 0, upd: 0;
       c5st1: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.TypeNats.$fEqSomeNat_$c==_info" {
     GHC.TypeNats.$fEqSomeNat_$c==_info:
         const GHC.TypeNats.$fEqSomeNat_$c==_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5st0() //  [R1]
         { []
         }
     {offset
       c5st0: // global
           I64[Sp] = block_c5st6_info;
           _s5s6X::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s5s6X::P64;
           if (R1 & 7 != 0) goto u5stf; else goto c5sta;
       u5stf: // global
           call _c5st6(R1) args: 0, res: 0, upd: 0;
       c5sta: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5st0_info" {
     block_c5st0_info:
         const _c5st0;
         const 1;
         const 30;
 },
 _c5st6() //  [R1]
         { []
         }
     {offset
       c5st6: // global
           R3 = P64[R1 + 7];
           R2 = P64[Sp + 8];
           Sp = Sp + 16;
           call GHC.Integer.Type.eqInteger_entry(R3,
                                                 R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5st6_info" {
     block_c5st6_info:
         const _c5st6;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:27.888931177 UTC

[section ""data" . GHC.TypeNats.$fEqSomeNat_$c/=_closure" {
     GHC.TypeNats.$fEqSomeNat_$c/=_closure:
         const GHC.TypeNats.$fEqSomeNat_$c/=_info;
 },
 GHC.TypeNats.$fEqSomeNat_$c/=_entry() //  [R2, R3]
         { []
         }
     {offset
       c5stB: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5stF; else goto c5stG;
       c5stF: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeNats.$fEqSomeNat_$c/=_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5stG: // global
           I64[Sp - 16] = block_c5sty_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5stZ; else goto c5stz;
       u5stZ: // global
           call _c5sty(R1) args: 0, res: 0, upd: 0;
       c5stz: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.TypeNats.$fEqSomeNat_$c/=_info" {
     GHC.TypeNats.$fEqSomeNat_$c/=_info:
         const GHC.TypeNats.$fEqSomeNat_$c/=_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5sty() //  [R1]
         { []
         }
     {offset
       c5sty: // global
           I64[Sp] = block_c5stE_info;
           _s5s75::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s5s75::P64;
           if (R1 & 7 != 0) goto u5stY; else goto c5stI;
       u5stY: // global
           call _c5stE(R1) args: 0, res: 0, upd: 0;
       c5stI: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5sty_info" {
     block_c5sty_info:
         const _c5sty;
         const 1;
         const 30;
 },
 _c5stE() //  [R1]
         { []
         }
     {offset
       c5stE: // global
           _s5s75::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5stM_info;
           R3 = P64[R1 + 7];
           R2 = _s5s75::P64;
           Sp = Sp + 8;
           call GHC.Integer.Type.eqInteger#_entry(R3,
                                                  R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5stE_info" {
     block_c5stE_info:
         const _c5stE;
         const 1;
         const 30;
 },
 _c5stM() //  [R1]
         { []
         }
     {offset
       c5stM: // global
           if (R1 == 1) goto c5stX; else goto c5stT;
       c5stX: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5stT: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5stM_info" {
     block_c5stM_info:
         const _c5stM;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:27.898404394 UTC

[section ""data" . GHC.TypeNats.$fEqSomeNat_closure" {
     GHC.TypeNats.$fEqSomeNat_closure:
         const GHC.Classes.C:Eq_con_info;
         const GHC.TypeNats.$fEqSomeNat_$c==_closure+2;
         const GHC.TypeNats.$fEqSomeNat_$c/=_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:27.903101814 UTC

[section ""data" . GHC.TypeNats.$fOrdSomeNat_$c<_closure" {
     GHC.TypeNats.$fOrdSomeNat_$c<_closure:
         const GHC.TypeNats.$fOrdSomeNat_$c<_info;
 },
 GHC.TypeNats.$fOrdSomeNat_$c<_entry() //  [R2, R3]
         { []
         }
     {offset
       c5suq: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5suu; else goto c5suv;
       c5suu: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeNats.$fOrdSomeNat_$c<_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5suv: // global
           I64[Sp - 16] = block_c5sun_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5suP; else goto c5suo;
       u5suP: // global
           call _c5sun(R1) args: 0, res: 0, upd: 0;
       c5suo: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.TypeNats.$fOrdSomeNat_$c<_info" {
     GHC.TypeNats.$fOrdSomeNat_$c<_info:
         const GHC.TypeNats.$fOrdSomeNat_$c<_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5sun() //  [R1]
         { []
         }
     {offset
       c5sun: // global
           I64[Sp] = block_c5sut_info;
           _s5s7e::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s5s7e::P64;
           if (R1 & 7 != 0) goto u5suO; else goto c5sux;
       u5suO: // global
           call _c5sut(R1) args: 0, res: 0, upd: 0;
       c5sux: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5sun_info" {
     block_c5sun_info:
         const _c5sun;
         const 1;
         const 30;
 },
 _c5sut() //  [R1]
         { []
         }
     {offset
       c5sut: // global
           _s5s7e::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5suB_info;
           R3 = P64[R1 + 7];
           R2 = _s5s7e::P64;
           Sp = Sp + 8;
           call GHC.Integer.Type.compareInteger_entry(R3,
                                                      R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5sut_info" {
     block_c5sut_info:
         const _c5sut;
         const 1;
         const 30;
 },
 _c5suB() //  [R1]
         { []
         }
     {offset
       c5suB: // global
           if (R1 & 7 == 1) goto c5suM; else goto c5suI;
       c5suM: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5suI: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5suB_info" {
     block_c5suB_info:
         const _c5suB;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:27.91485325 UTC

[section ""data" . GHC.TypeNats.$fOrdSomeNat_$c>=_closure" {
     GHC.TypeNats.$fOrdSomeNat_$c>=_closure:
         const GHC.TypeNats.$fOrdSomeNat_$c>=_info;
 },
 GHC.TypeNats.$fOrdSomeNat_$c>=_entry() //  [R2, R3]
         { []
         }
     {offset
       c5svh: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5svl; else goto c5svm;
       c5svl: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeNats.$fOrdSomeNat_$c>=_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5svm: // global
           I64[Sp - 16] = block_c5sve_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5svG; else goto c5svf;
       u5svG: // global
           call _c5sve(R1) args: 0, res: 0, upd: 0;
       c5svf: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.TypeNats.$fOrdSomeNat_$c>=_info" {
     GHC.TypeNats.$fOrdSomeNat_$c>=_info:
         const GHC.TypeNats.$fOrdSomeNat_$c>=_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5sve() //  [R1]
         { []
         }
     {offset
       c5sve: // global
           I64[Sp] = block_c5svk_info;
           _s5s7n::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s5s7n::P64;
           if (R1 & 7 != 0) goto u5svF; else goto c5svo;
       u5svF: // global
           call _c5svk(R1) args: 0, res: 0, upd: 0;
       c5svo: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5sve_info" {
     block_c5sve_info:
         const _c5sve;
         const 1;
         const 30;
 },
 _c5svk() //  [R1]
         { []
         }
     {offset
       c5svk: // global
           _s5s7n::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5svs_info;
           R3 = P64[R1 + 7];
           R2 = _s5s7n::P64;
           Sp = Sp + 8;
           call GHC.Integer.Type.compareInteger_entry(R3,
                                                      R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5svk_info" {
     block_c5svk_info:
         const _c5svk;
         const 1;
         const 30;
 },
 _c5svs() //  [R1]
         { []
         }
     {offset
       c5svs: // global
           if (R1 & 7 == 1) goto c5svD; else goto c5svz;
       c5svD: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5svz: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5svs_info" {
     block_c5svs_info:
         const _c5svs;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:27.925078529 UTC

[section ""data" . GHC.TypeNats.$fOrdSomeNat_$c>_closure" {
     GHC.TypeNats.$fOrdSomeNat_$c>_closure:
         const GHC.TypeNats.$fOrdSomeNat_$c>_info;
 },
 GHC.TypeNats.$fOrdSomeNat_$c>_entry() //  [R2, R3]
         { []
         }
     {offset
       c5sw8: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5swc; else goto c5swd;
       c5swc: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeNats.$fOrdSomeNat_$c>_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5swd: // global
           I64[Sp - 16] = block_c5sw5_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5swx; else goto c5sw6;
       u5swx: // global
           call _c5sw5(R1) args: 0, res: 0, upd: 0;
       c5sw6: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.TypeNats.$fOrdSomeNat_$c>_info" {
     GHC.TypeNats.$fOrdSomeNat_$c>_info:
         const GHC.TypeNats.$fOrdSomeNat_$c>_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5sw5() //  [R1]
         { []
         }
     {offset
       c5sw5: // global
           I64[Sp] = block_c5swb_info;
           _s5s7w::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s5s7w::P64;
           if (R1 & 7 != 0) goto u5sww; else goto c5swf;
       u5sww: // global
           call _c5swb(R1) args: 0, res: 0, upd: 0;
       c5swf: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5sw5_info" {
     block_c5sw5_info:
         const _c5sw5;
         const 1;
         const 30;
 },
 _c5swb() //  [R1]
         { []
         }
     {offset
       c5swb: // global
           _s5s7w::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5swj_info;
           R3 = P64[R1 + 7];
           R2 = _s5s7w::P64;
           Sp = Sp + 8;
           call GHC.Integer.Type.compareInteger_entry(R3,
                                                      R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5swb_info" {
     block_c5swb_info:
         const _c5swb;
         const 1;
         const 30;
 },
 _c5swj() //  [R1]
         { []
         }
     {offset
       c5swj: // global
           if (R1 & 7 == 3) goto c5swu; else goto c5swq;
       c5swu: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5swq: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5swj_info" {
     block_c5swj_info:
         const _c5swj;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:27.936776913 UTC

[section ""data" . GHC.TypeNats.$fOrdSomeNat_$c<=_closure" {
     GHC.TypeNats.$fOrdSomeNat_$c<=_closure:
         const GHC.TypeNats.$fOrdSomeNat_$c<=_info;
 },
 GHC.TypeNats.$fOrdSomeNat_$c<=_entry() //  [R2, R3]
         { []
         }
     {offset
       c5swZ: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5sx3; else goto c5sx4;
       c5sx3: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeNats.$fOrdSomeNat_$c<=_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5sx4: // global
           I64[Sp - 16] = block_c5swW_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5sxo; else goto c5swX;
       u5sxo: // global
           call _c5swW(R1) args: 0, res: 0, upd: 0;
       c5swX: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.TypeNats.$fOrdSomeNat_$c<=_info" {
     GHC.TypeNats.$fOrdSomeNat_$c<=_info:
         const GHC.TypeNats.$fOrdSomeNat_$c<=_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5swW() //  [R1]
         { []
         }
     {offset
       c5swW: // global
           I64[Sp] = block_c5sx2_info;
           _s5s7F::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s5s7F::P64;
           if (R1 & 7 != 0) goto u5sxn; else goto c5sx6;
       u5sxn: // global
           call _c5sx2(R1) args: 0, res: 0, upd: 0;
       c5sx6: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5swW_info" {
     block_c5swW_info:
         const _c5swW;
         const 1;
         const 30;
 },
 _c5sx2() //  [R1]
         { []
         }
     {offset
       c5sx2: // global
           _s5s7F::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5sxa_info;
           R3 = P64[R1 + 7];
           R2 = _s5s7F::P64;
           Sp = Sp + 8;
           call GHC.Integer.Type.compareInteger_entry(R3,
                                                      R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5sx2_info" {
     block_c5sx2_info:
         const _c5sx2;
         const 1;
         const 30;
 },
 _c5sxa() //  [R1]
         { []
         }
     {offset
       c5sxa: // global
           if (R1 & 7 == 3) goto c5sxl; else goto c5sxh;
       c5sxl: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5sxh: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5sxa_info" {
     block_c5sxa_info:
         const _c5sxa;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:27.947562623 UTC

[section ""data" . GHC.TypeNats.$fOrdSomeNat_$cmax_closure" {
     GHC.TypeNats.$fOrdSomeNat_$cmax_closure:
         const GHC.TypeNats.$fOrdSomeNat_$cmax_info;
 },
 GHC.TypeNats.$fOrdSomeNat_$cmax_entry() //  [R2, R3]
         { []
         }
     {offset
       c5sxQ: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5sxU; else goto c5sxV;
       c5sxU: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeNats.$fOrdSomeNat_$cmax_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5sxV: // global
           I64[Sp - 16] = block_c5sxN_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5syf; else goto c5sxO;
       u5syf: // global
           call _c5sxN(R1) args: 0, res: 0, upd: 0;
       c5sxO: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.TypeNats.$fOrdSomeNat_$cmax_info" {
     GHC.TypeNats.$fOrdSomeNat_$cmax_info:
         const GHC.TypeNats.$fOrdSomeNat_$cmax_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5sxN() //  [R1]
         { []
         }
     {offset
       c5sxN: // global
           I64[Sp - 8] = block_c5sxT_info;
           _s5s7N::P64 = R1;
           _s5s7O::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp] = _s5s7O::P64;
           P64[Sp + 8] = _s5s7N::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5sye; else goto c5sxX;
       u5sye: // global
           call _c5sxT(R1) args: 0, res: 0, upd: 0;
       c5sxX: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5sxN_info" {
     block_c5sxN_info:
         const _c5sxN;
         const 1;
         const 30;
 },
 _c5sxT() //  [R1]
         { []
         }
     {offset
       c5sxT: // global
           I64[Sp] = block_c5sy1_info;
           R3 = P64[R1 + 7];
           R2 = P64[Sp + 8];
           P64[Sp + 8] = R1;
           call GHC.Integer.Type.compareInteger_entry(R3,
                                                      R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5sxT_info" {
     block_c5sxT_info:
         const _c5sxT;
         const 2;
         const 30;
 },
 _c5sy1() //  [R1]
         { []
         }
     {offset
       c5sy1: // global
           if (R1 & 7 == 3) goto c5syc; else goto c5sy8;
       c5syc: // global
           R1 = P64[Sp + 16] & (-8);
           Sp = Sp + 24;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c5sy8: // global
           R1 = P64[Sp + 8] & (-8);
           Sp = Sp + 24;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5sy1_info" {
     block_c5sy1_info:
         const _c5sy1;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:27.959215398 UTC

[section ""data" . GHC.TypeNats.$fOrdSomeNat_$cmin_closure" {
     GHC.TypeNats.$fOrdSomeNat_$cmin_closure:
         const GHC.TypeNats.$fOrdSomeNat_$cmin_info;
 },
 GHC.TypeNats.$fOrdSomeNat_$cmin_entry() //  [R2, R3]
         { []
         }
     {offset
       c5syJ: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5syN; else goto c5syO;
       c5syN: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeNats.$fOrdSomeNat_$cmin_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5syO: // global
           I64[Sp - 16] = block_c5syG_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5sz8; else goto c5syH;
       u5sz8: // global
           call _c5syG(R1) args: 0, res: 0, upd: 0;
       c5syH: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.TypeNats.$fOrdSomeNat_$cmin_info" {
     GHC.TypeNats.$fOrdSomeNat_$cmin_info:
         const GHC.TypeNats.$fOrdSomeNat_$cmin_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5syG() //  [R1]
         { []
         }
     {offset
       c5syG: // global
           I64[Sp - 8] = block_c5syM_info;
           _s5s7W::P64 = R1;
           _s5s7X::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp] = _s5s7X::P64;
           P64[Sp + 8] = _s5s7W::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5sz7; else goto c5syQ;
       u5sz7: // global
           call _c5syM(R1) args: 0, res: 0, upd: 0;
       c5syQ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5syG_info" {
     block_c5syG_info:
         const _c5syG;
         const 1;
         const 30;
 },
 _c5syM() //  [R1]
         { []
         }
     {offset
       c5syM: // global
           I64[Sp] = block_c5syU_info;
           R3 = P64[R1 + 7];
           R2 = P64[Sp + 8];
           P64[Sp + 8] = R1;
           call GHC.Integer.Type.compareInteger_entry(R3,
                                                      R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5syM_info" {
     block_c5syM_info:
         const _c5syM;
         const 2;
         const 30;
 },
 _c5syU() //  [R1]
         { []
         }
     {offset
       c5syU: // global
           if (R1 & 7 == 3) goto c5sz5; else goto c5sz1;
       c5sz5: // global
           R1 = P64[Sp + 8] & (-8);
           Sp = Sp + 24;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c5sz1: // global
           R1 = P64[Sp + 16] & (-8);
           Sp = Sp + 24;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5syU_info" {
     block_c5syU_info:
         const _c5syU;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:27.967125596 UTC

[section ""data" . GHC.TypeNats.$fOrdSomeNat_closure" {
     GHC.TypeNats.$fOrdSomeNat_closure:
         const GHC.Classes.C:Ord_con_info;
         const GHC.TypeNats.$fEqSomeNat_closure+1;
         const GHC.TypeNats.$fOrdSomeNat_$ccompare_closure+2;
         const GHC.TypeNats.$fOrdSomeNat_$c<_closure+2;
         const GHC.TypeNats.$fOrdSomeNat_$c<=_closure+2;
         const GHC.TypeNats.$fOrdSomeNat_$c>_closure+2;
         const GHC.TypeNats.$fOrdSomeNat_$c>=_closure+2;
         const GHC.TypeNats.$fOrdSomeNat_$cmax_closure+2;
         const GHC.TypeNats.$fOrdSomeNat_$cmin_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:27.969272438 UTC

[section ""data" . GHC.TypeNats.natVal'1_closure" {
     GHC.TypeNats.natVal'1_closure:
         const GHC.TypeNats.natVal'1_info;
 },
 GHC.TypeNats.natVal'1_entry() //  [R2]
         { []
         }
     {offset
       c5szA: // global
           R1 = R2 & (-8);
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.TypeNats.natVal'1_info" {
     GHC.TypeNats.natVal'1_info:
         const GHC.TypeNats.natVal'1_entry;
         const 0;
         const 14;
         const 8589934597;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:27.972671767 UTC

[section ""data" . GHC.TypeNats.natVal'_closure" {
     GHC.TypeNats.natVal'_closure:
         const GHC.TypeNats.natVal'_info;
 },
 GHC.TypeNats.natVal'_entry() //  [R2]
         { []
         }
     {offset
       c5szN: // global
           R2 = R2;
           call GHC.TypeNats.natVal'1_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.TypeNats.natVal'_info" {
     GHC.TypeNats.natVal'_info:
         const GHC.TypeNats.natVal'_entry;
         const 0;
         const 14;
         const 8589934597;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:27.977409211 UTC

[section ""data" . GHC.TypeNats.someNatVal_closure" {
     GHC.TypeNats.someNatVal_closure:
         const GHC.TypeNats.someNatVal_info;
 },
 GHC.TypeNats.someNatVal_entry() //  [R2]
         { []
         }
     {offset
       c5szZ: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5sA3; else goto c5sA2;
       c5sA3: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = GHC.TypeNats.someNatVal_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5sA2: // global
           I64[Hp - 16] = GHC.TypeNats.SomeNat_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = Data.Proxy.Proxy_closure+1;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.TypeNats.someNatVal_info" {
     GHC.TypeNats.someNatVal_info:
         const GHC.TypeNats.someNatVal_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:27.985051702 UTC

[section ""data" . GHC.TypeNats.$fReadSomeNat_go_closure" {
     GHC.TypeNats.$fReadSomeNat_go_closure:
         const GHC.TypeNats.$fReadSomeNat_go_info;
 },
 sat_s5s8f_entry() //  [R1]
         { []
         }
     {offset
       c5sAs: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5sAt; else goto c5sAu;
       c5sAt: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5sAu: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.TypeNats.$fReadSomeNat_go_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5s8f_info" {
     sat_s5s8f_info:
         const sat_s5s8f_entry;
         const 1;
         const 16;
 },
 GHC.TypeNats.$fReadSomeNat_go_entry() //  [R2]
         { []
         }
     {offset
       c5sAz: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5sAA; else goto c5sAB;
       c5sAA: // global
           R2 = R2;
           R1 = GHC.TypeNats.$fReadSomeNat_go_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5sAB: // global
           I64[Sp - 8] = block_c5sAd_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5sAM; else goto c5sAe;
       u5sAM: // global
           call _c5sAd(R1) args: 0, res: 0, upd: 0;
       c5sAe: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.TypeNats.$fReadSomeNat_go_info" {
     GHC.TypeNats.$fReadSomeNat_go_info:
         const GHC.TypeNats.$fReadSomeNat_go_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5sAd() //  [R1]
         { []
         }
     {offset
       c5sAd: // global
           if (R1 & 7 == 1) goto c5sAw; else goto c5sAx;
       c5sAw: // global
           R1 = []_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5sAx: // global
           I64[Sp - 8] = block_c5sAj_info;
           _s5s89::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp] = _s5s89::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5sAL; else goto c5sAk;
       u5sAL: // global
           call _c5sAj(R1) args: 0, res: 0, upd: 0;
       c5sAk: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5sAd_info" {
     block_c5sAd_info:
         const _c5sAd;
         const 0;
         const 30;
 },
 _c5sAj() //  [R1]
         { []
         }
     {offset
       c5sAj: // global
           Hp = Hp + 96;
           if (Hp > HpLim) (likely: False) goto c5sAK; else goto c5sAJ;
       c5sAK: // global
           HpAlloc = 96;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5sAJ: // global
           _s5s8b::P64 = P64[R1 + 7];
           _s5s8c::P64 = P64[R1 + 15];
           I64[Hp - 88] = sat_s5s8f_info;
           P64[Hp - 72] = P64[Sp + 8];
           I64[Hp - 64] = GHC.TypeNats.SomeNat_con_info;
           P64[Hp - 56] = _s5s8b::P64;
           P64[Hp - 48] = Data.Proxy.Proxy_closure+1;
           I64[Hp - 40] = (,)_con_info;
           P64[Hp - 32] = Hp - 63;
           P64[Hp - 24] = _s5s8c::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 39;
           P64[Hp] = Hp - 88;
           R1 = Hp - 14;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5sAj_info" {
     block_c5sAj_info:
         const _c5sAj;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.000146437 UTC

[section ""data" . GHC.TypeNats.$fReadSomeNat_$creadsPrec_closure" {
     GHC.TypeNats.$fReadSomeNat_$creadsPrec_closure:
         const GHC.TypeNats.$fReadSomeNat_$creadsPrec_info;
         const 0;
 },
 GHC.TypeNats.$fReadSomeNat_$creadsPrec_entry() //  [R2, R3]
         { []
         }
     {offset
       c5sBi: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5sBq; else goto c5sBr;
       c5sBq: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeNats.$fReadSomeNat_$creadsPrec_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5sBr: // global
           I64[Sp - 16] = block_c5sBg_info;
           R4 = Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure+1;
           _s5s8h::P64 = R3;
           R3 = R2;
           R2 = GHC.Read.$fReadInteger2_closure+1;
           P64[Sp - 8] = _s5s8h::P64;
           Sp = Sp - 16;
           call GHC.Read.$fReadInteger_$sreadNumber_entry(R4,
                                                          R3,
                                                          R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.TypeNats.$fReadSomeNat_$creadsPrec_info" {
     GHC.TypeNats.$fReadSomeNat_$creadsPrec_info:
         const GHC.TypeNats.$fReadSomeNat_$creadsPrec_entry;
         const 0;
         const 64424509454;
         const 8589934607;
         const S5s9l_srt+40;
 },
 _c5sBg() //  [R1]
         { []
         }
     {offset
       c5sBg: // global
           _s5s8h::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5sBl_info;
           R3 = _s5s8h::P64;
           R2 = R1;
           Sp = Sp + 8;
           call Text.ParserCombinators.ReadP.run_entry(R3,
                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5sBg_info" {
     block_c5sBg_info:
         const _c5sBg;
         const 1;
         const 4294967326;
         const S5s9l_srt+56;
 },
 _c5sBl() //  [R1]
         { []
         }
     {offset
       c5sBl: // global
           I64[Sp] = block_c5sBp_info;
           R2 = R1;
           call GHC.Natural.$fReadNatural_go_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5sBl_info" {
     block_c5sBl_info:
         const _c5sBl;
         const 0;
         const 4294967326;
         const S5s9l_srt+56;
 },
 _c5sBp() //  [R1]
         { []
         }
     {offset
       c5sBp: // global
           R2 = R1;
           Sp = Sp + 8;
           call GHC.TypeNats.$fReadSomeNat_go_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5sBp_info" {
     block_c5sBp_info:
         const _c5sBp;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.011426607 UTC

[section ""data" . GHC.TypeNats.$fReadSomeNat4_closure" {
     GHC.TypeNats.$fReadSomeNat4_closure:
         const GHC.TypeNats.$fReadSomeNat4_info;
         const 0;
 },
 sat_s5s8n_entry() //  [R1, R2]
         { []
         }
     {offset
       c5sBV: // global
           R3 = R2;
           R2 = P64[R1 + 7];
           call GHC.TypeNats.$fReadSomeNat_$creadsPrec_entry(R3,
                                                             R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5s8n_info" {
     sat_s5s8n_info:
         const sat_s5s8n_entry;
         const 1;
         const 4294967305;
         const 4294967301;
         const S5s9l_srt+64;
 },
 GHC.TypeNats.$fReadSomeNat4_entry() //  [R2, R3]
         { []
         }
     {offset
       c5sC1: // global
           _s5s8m::P64 = R3;
           _s5s8l::P64 = R2;
           if ((Sp + -8) < SpLim) (likely: False) goto c5sC2; else goto c5sC3;
       c5sC3: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5sC5; else goto c5sC4;
       c5sC5: // global
           HpAlloc = 16;
           goto c5sC2;
       c5sC2: // global
           R3 = _s5s8m::P64;
           R2 = _s5s8l::P64;
           R1 = GHC.TypeNats.$fReadSomeNat4_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5sC4: // global
           I64[Hp - 8] = sat_s5s8n_info;
           P64[Hp] = _s5s8l::P64;
           I64[Sp - 8] = block_c5sBY_info;
           R3 = _s5s8m::P64;
           R2 = Hp - 7;
           Sp = Sp - 8;
           call Text.ParserCombinators.ReadP.$wreadS_to_P_entry(R3,
                                                                R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.TypeNats.$fReadSomeNat4_info" {
     GHC.TypeNats.$fReadSomeNat4_info:
         const GHC.TypeNats.$fReadSomeNat4_entry;
         const 0;
         const 12884901902;
         const 8589934607;
         const S5s9l_srt+64;
 },
 _c5sBY() //  [R1]
         { []
         }
     {offset
       c5sBY: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5sC8; else goto c5sC7;
       c5sC8: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5sC7: // global
           I64[Hp - 8] = Text.ParserCombinators.ReadP.Look_con_info;
           P64[Hp] = R1;
           R1 = Hp - 6;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5sBY_info" {
     block_c5sBY_info:
         const _c5sBY;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.020251117 UTC

[section ""data" . GHC.TypeNats.$fReadSomeNat3_closure" {
     GHC.TypeNats.$fReadSomeNat3_closure:
         const GHC.Types.I#_con_info;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.02309911 UTC

[section ""data" . GHC.TypeNats.$fReadSomeNat2_closure" {
     GHC.TypeNats.$fReadSomeNat2_closure:
         const GHC.TypeNats.$fReadSomeNat2_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.TypeNats.$fReadSomeNat2_entry() //  [R1]
         { []
         }
     {offset
       c5sCs: // global
           if ((Sp + -40) < SpLim) (likely: False) goto c5sCt; else goto c5sCu;
       c5sCt: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5sCu: // global
           (_c5sCp::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c5sCp::I64 == 0) goto c5sCr; else goto c5sCq;
       c5sCr: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c5sCq: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c5sCp::I64;
           R2 = GHC.TypeNats.$fReadSomeNat4_closure+2;
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = GHC.TypeNats.$fReadSomeNat3_closure+1;
           P64[Sp - 24] = Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure+1;
           Sp = Sp - 40;
           call GHC.Read.list_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . GHC.TypeNats.$fReadSomeNat2_info" {
     GHC.TypeNats.$fReadSomeNat2_info:
         const GHC.TypeNats.$fReadSomeNat2_entry;
         const 0;
         const 12884901909;
         const S5s9l_srt+72;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.0272815 UTC

[section ""data" . GHC.TypeNats.$fReadSomeNat_$creadList_closure" {
     GHC.TypeNats.$fReadSomeNat_$creadList_closure:
         const GHC.TypeNats.$fReadSomeNat_$creadList_info;
         const 0;
 },
 GHC.TypeNats.$fReadSomeNat_$creadList_entry() //  [R2]
         { []
         }
     {offset
       c5sCG: // global
           R3 = R2;
           R2 = GHC.TypeNats.$fReadSomeNat2_closure;
           call Text.ParserCombinators.ReadP.run_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.TypeNats.$fReadSomeNat_$creadList_info" {
     GHC.TypeNats.$fReadSomeNat_$creadList_info:
         const GHC.TypeNats.$fReadSomeNat_$creadList_entry;
         const 0;
         const 4294967310;
         const 4294967301;
         const S5s9l_srt+88;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.031949139 UTC

[section ""data" . GHC.TypeNats.$fReadSomeNat1_closure" {
     GHC.TypeNats.$fReadSomeNat1_closure:
         const GHC.TypeNats.$fReadSomeNat1_info;
         const 0;
 },
 GHC.TypeNats.$fReadSomeNat1_entry() //  [R2, R3]
         { []
         }
     {offset
       c5sCU: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5sCV; else goto c5sCW;
       c5sCV: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeNats.$fReadSomeNat1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5sCW: // global
           I64[Sp - 8] = block_c5sCR_info;
           R3 = R3;
           R2 = GHC.TypeNats.$fReadSomeNat_$creadList_closure+1;
           Sp = Sp - 8;
           call Text.ParserCombinators.ReadP.$wreadS_to_P_entry(R3,
                                                                R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.TypeNats.$fReadSomeNat1_info" {
     GHC.TypeNats.$fReadSomeNat1_info:
         const GHC.TypeNats.$fReadSomeNat1_entry;
         const 0;
         const 12884901902;
         const 8589934607;
         const S5s9l_srt+96;
 },
 _c5sCR() //  [R1]
         { []
         }
     {offset
       c5sCR: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5sCZ; else goto c5sCY;
       c5sCZ: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5sCY: // global
           I64[Hp - 8] = Text.ParserCombinators.ReadP.Look_con_info;
           P64[Hp] = R1;
           R1 = Hp - 6;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5sCR_info" {
     block_c5sCR_info:
         const _c5sCR;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.039315524 UTC

[section ""data" . GHC.TypeNats.$fReadSomeNat_closure" {
     GHC.TypeNats.$fReadSomeNat_closure:
         const GHC.Read.C:Read_con_info;
         const GHC.TypeNats.$fReadSomeNat_$creadsPrec_closure+2;
         const GHC.TypeNats.$fReadSomeNat_$creadList_closure+1;
         const GHC.TypeNats.$fReadSomeNat4_closure+2;
         const GHC.TypeNats.$fReadSomeNat1_closure+2;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.041743489 UTC

[section ""cstring" . GHC.TypeNats.$trModule4_bytes" {
     GHC.TypeNats.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.043950229 UTC

[section ""data" . GHC.TypeNats.$trModule3_closure" {
     GHC.TypeNats.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeNats.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.046733206 UTC

[section ""cstring" . GHC.TypeNats.$trModule2_bytes" {
     GHC.TypeNats.$trModule2_bytes:
         I8[] [71,72,67,46,84,121,112,101,78,97,116,115]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.048891202 UTC

[section ""data" . GHC.TypeNats.$trModule1_closure" {
     GHC.TypeNats.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeNats.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.051132026 UTC

[section ""data" . GHC.TypeNats.$trModule_closure" {
     GHC.TypeNats.$trModule_closure:
         const GHC.Types.Module_con_info;
         const GHC.TypeNats.$trModule3_closure+1;
         const GHC.TypeNats.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.053329875 UTC

[section ""data" . $krep_r5s5Z_closure" {
     $krep_r5s5Z_closure:
         const GHC.Types.KindRepVar_con_info;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.055435406 UTC

[section ""data" . $krep1_r5s60_closure" {
     $krep1_r5s60_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Natural.$tcNatural_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.057635043 UTC

[section ""data" . $krep2_r5s61_closure" {
     $krep2_r5s61_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcConstraint_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.059310973 UTC

[section ""data" . $krep3_r5s62_closure" {
     $krep3_r5s62_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcNat_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.060999653 UTC

[section ""data" . $krep4_r5s63_closure" {
     $krep4_r5s63_closure:
         const :_con_info;
         const $krep_r5s5Z_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.062906984 UTC

[section ""data" . $krep5_r5s64_closure" {
     $krep5_r5s64_closure:
         const :_con_info;
         const $krep3_r5s62_closure+1;
         const $krep4_r5s63_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.064443685 UTC

[section ""data" . $krep6_r5s65_closure" {
     $krep6_r5s65_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const Data.Proxy.$tcProxy_closure;
         const $krep5_r5s64_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.066775162 UTC

[section ""data" . GHC.TypeNats.$tcKnownNat1_closure" {
     GHC.TypeNats.$tcKnownNat1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep3_r5s62_closure+1;
         const $krep2_r5s61_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.068542875 UTC

[section ""data" . GHC.TypeNats.$tcSNat1_closure" {
     GHC.TypeNats.$tcSNat1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep3_r5s62_closure+1;
         const GHC.Types.krep$*_closure;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.070996869 UTC

[section ""data" . GHC.TypeNats.$tcWrapN1_closure" {
     GHC.TypeNats.$tcWrapN1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep3_r5s62_closure+1;
         const GHC.Types.krep$*Arr*_closure;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.072657731 UTC

[section ""data" . $krep7_r5s66_closure" {
     $krep7_r5s66_closure:
         const GHC.Types.KindRepVar_con_info;
         const 1;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.074295389 UTC

[section ""data" . $krep8_r5s67_closure" {
     $krep8_r5s67_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep6_r5s65_closure+1;
         const $krep7_r5s66_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.075936027 UTC

[section ""cstring" . GHC.TypeNats.$tcSNat3_bytes" {
     GHC.TypeNats.$tcSNat3_bytes:
         I8[] [83,78,97,116]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.077545834 UTC

[section ""data" . GHC.TypeNats.$tcSNat2_closure" {
     GHC.TypeNats.$tcSNat2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeNats.$tcSNat3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.079233455 UTC

[section ""data" . GHC.TypeNats.$tcSNat_closure" {
     GHC.TypeNats.$tcSNat_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeNats.$trModule_closure+1;
         const GHC.TypeNats.$tcSNat2_closure+1;
         const GHC.TypeNats.$tcSNat1_closure+4;
         const 14249323166640683464;
         const 2956401390546376063;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.080952034 UTC

[section ""data" . $krep9_r5s68_closure" {
     $krep9_r5s68_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.TypeNats.$tcSNat_closure+1;
         const $krep4_r5s63_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.082682524 UTC

[section ""data" . GHC.TypeNats.$tc'SNat1_closure" {
     GHC.TypeNats.$tc'SNat1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep1_r5s60_closure+1;
         const $krep9_r5s68_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.084271151 UTC

[section ""cstring" . GHC.TypeNats.$tc'SNat3_bytes" {
     GHC.TypeNats.$tc'SNat3_bytes:
         I8[] [39,83,78,97,116]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.085975909 UTC

[section ""data" . GHC.TypeNats.$tc'SNat2_closure" {
     GHC.TypeNats.$tc'SNat2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeNats.$tc'SNat3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.087647391 UTC

[section ""data" . GHC.TypeNats.$tc'SNat_closure" {
     GHC.TypeNats.$tc'SNat_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeNats.$trModule_closure+1;
         const GHC.TypeNats.$tc'SNat2_closure+1;
         const GHC.TypeNats.$tc'SNat1_closure+4;
         const 10248898659057561068;
         const 4968065829559829914;
         const 1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.089461444 UTC

[section ""cstring" . GHC.TypeNats.$tcKnownNat3_bytes" {
     GHC.TypeNats.$tcKnownNat3_bytes:
         I8[] [75,110,111,119,110,78,97,116]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.091649163 UTC

[section ""data" . GHC.TypeNats.$tcKnownNat2_closure" {
     GHC.TypeNats.$tcKnownNat2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeNats.$tcKnownNat3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.093812263 UTC

[section ""data" . GHC.TypeNats.$tcKnownNat_closure" {
     GHC.TypeNats.$tcKnownNat_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeNats.$trModule_closure+1;
         const GHC.TypeNats.$tcKnownNat2_closure+1;
         const GHC.TypeNats.$tcKnownNat1_closure+4;
         const 4406426137333124098;
         const 3858660218128115833;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.095591451 UTC

[section ""data" . $krep10_r5s69_closure" {
     $krep10_r5s69_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.TypeNats.$tcKnownNat_closure+1;
         const $krep4_r5s63_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.097339658 UTC

[section ""data" . $krep11_r5s6a_closure" {
     $krep11_r5s6a_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep10_r5s69_closure+1;
         const $krep8_r5s67_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.099038095 UTC

[section ""data" . GHC.TypeNats.$tc'C:KnownNat1_closure" {
     GHC.TypeNats.$tc'C:KnownNat1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep9_r5s68_closure+1;
         const $krep10_r5s69_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.100634307 UTC

[section ""cstring" . GHC.TypeNats.$tc'C:KnownNat3_bytes" {
     GHC.TypeNats.$tc'C:KnownNat3_bytes:
         I8[] [39,67,58,75,110,111,119,110,78,97,116]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.102354622 UTC

[section ""data" . GHC.TypeNats.$tc'C:KnownNat2_closure" {
     GHC.TypeNats.$tc'C:KnownNat2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeNats.$tc'C:KnownNat3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.104069124 UTC

[section ""data" . GHC.TypeNats.$tc'C:KnownNat_closure" {
     GHC.TypeNats.$tc'C:KnownNat_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeNats.$trModule_closure+1;
         const GHC.TypeNats.$tc'C:KnownNat2_closure+1;
         const GHC.TypeNats.$tc'C:KnownNat1_closure+4;
         const 12421457977663053218;
         const 18328904747962077722;
         const 1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.105844225 UTC

[section ""cstring" . GHC.TypeNats.$tcSomeNat2_bytes" {
     GHC.TypeNats.$tcSomeNat2_bytes:
         I8[] [83,111,109,101,78,97,116]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.107498954 UTC

[section ""data" . GHC.TypeNats.$tcSomeNat1_closure" {
     GHC.TypeNats.$tcSomeNat1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeNats.$tcSomeNat2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.10929711 UTC

[section ""data" . GHC.TypeNats.$tcSomeNat_closure" {
     GHC.TypeNats.$tcSomeNat_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeNats.$trModule_closure+1;
         const GHC.TypeNats.$tcSomeNat1_closure+1;
         const GHC.Types.krep$*_closure;
         const 9244180789053763601;
         const 6189216451384407387;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.111064788 UTC

[section ""data" . $krep12_r5s6b_closure" {
     $krep12_r5s6b_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.TypeNats.$tcSomeNat_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.112733107 UTC

[section ""data" . $krep13_r5s6c_closure" {
     $krep13_r5s6c_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep6_r5s65_closure+1;
         const $krep12_r5s6b_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.114472848 UTC

[section ""data" . GHC.TypeNats.$tc'SomeNat1_closure" {
     GHC.TypeNats.$tc'SomeNat1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep10_r5s69_closure+1;
         const $krep13_r5s6c_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.116167154 UTC

[section ""cstring" . GHC.TypeNats.$tc'SomeNat3_bytes" {
     GHC.TypeNats.$tc'SomeNat3_bytes:
         I8[] [39,83,111,109,101,78,97,116]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.119192522 UTC

[section ""data" . GHC.TypeNats.$tc'SomeNat2_closure" {
     GHC.TypeNats.$tc'SomeNat2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeNats.$tc'SomeNat3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.120861758 UTC

[section ""data" . GHC.TypeNats.$tc'SomeNat_closure" {
     GHC.TypeNats.$tc'SomeNat_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeNats.$trModule_closure+1;
         const GHC.TypeNats.$tc'SomeNat2_closure+1;
         const GHC.TypeNats.$tc'SomeNat1_closure+4;
         const 5872332339143923373;
         const 16743196919708003695;
         const 1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.122603364 UTC

[section ""cstring" . GHC.TypeNats.$tcWrapN3_bytes" {
     GHC.TypeNats.$tcWrapN3_bytes:
         I8[] [87,114,97,112,78]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.124180034 UTC

[section ""data" . GHC.TypeNats.$tcWrapN2_closure" {
     GHC.TypeNats.$tcWrapN2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeNats.$tcWrapN3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.125876583 UTC

[section ""data" . GHC.TypeNats.$tcWrapN_closure" {
     GHC.TypeNats.$tcWrapN_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeNats.$trModule_closure+1;
         const GHC.TypeNats.$tcWrapN2_closure+1;
         const GHC.TypeNats.$tcWrapN1_closure+4;
         const 825875854269014453;
         const 10073258292275044429;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.127610074 UTC

[section ""data" . $krep14_r5s6d_closure" {
     $krep14_r5s6d_closure:
         const :_con_info;
         const $krep7_r5s66_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.129279472 UTC

[section ""data" . $krep15_r5s6e_closure" {
     $krep15_r5s6e_closure:
         const :_con_info;
         const $krep_r5s5Z_closure+2;
         const $krep14_r5s6d_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.130949115 UTC

[section ""data" . $krep16_r5s6f_closure" {
     $krep16_r5s6f_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.TypeNats.$tcWrapN_closure+1;
         const $krep15_r5s6e_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.13268379 UTC

[section ""data" . GHC.TypeNats.$tc'WrapN1_closure" {
     GHC.TypeNats.$tc'WrapN1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep11_r5s6a_closure+4;
         const $krep16_r5s6f_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.134413905 UTC

[section ""cstring" . GHC.TypeNats.$tc'WrapN3_bytes" {
     GHC.TypeNats.$tc'WrapN3_bytes:
         I8[] [39,87,114,97,112,78]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.136101667 UTC

[section ""data" . GHC.TypeNats.$tc'WrapN2_closure" {
     GHC.TypeNats.$tc'WrapN2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeNats.$tc'WrapN3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.138578199 UTC

[section ""data" . GHC.TypeNats.$tc'WrapN_closure" {
     GHC.TypeNats.$tc'WrapN_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeNats.$trModule_closure+1;
         const GHC.TypeNats.$tc'WrapN2_closure+1;
         const GHC.TypeNats.$tc'WrapN1_closure+4;
         const 731800900372900037;
         const 17722817696101367246;
         const 2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.140870113 UTC

[section ""data" . GHC.TypeNats.WrapN_closure" {
     GHC.TypeNats.WrapN_closure:
         const GHC.TypeNats.WrapN_info;
 },
 GHC.TypeNats.WrapN_entry() //  [R2]
         { []
         }
     {offset
       c5sE6: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5sEa; else goto c5sE9;
       c5sEa: // global
           HpAlloc = 16;
           R2 = R2;
           R1 = GHC.TypeNats.WrapN_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5sE9: // global
           I64[Hp - 8] = GHC.TypeNats.WrapN_con_info;
           P64[Hp] = R2;
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.TypeNats.WrapN_info" {
     GHC.TypeNats.WrapN_info:
         const GHC.TypeNats.WrapN_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.145609063 UTC

[section ""data" . GHC.TypeNats.SomeNat_closure" {
     GHC.TypeNats.SomeNat_closure:
         const GHC.TypeNats.SomeNat_info;
 },
 GHC.TypeNats.SomeNat_entry() //  [R2, R3]
         { []
         }
     {offset
       c5sEl: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5sEp; else goto c5sEo;
       c5sEp: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeNats.SomeNat_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5sEo: // global
           I64[Hp - 16] = GHC.TypeNats.SomeNat_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.TypeNats.SomeNat_info" {
     GHC.TypeNats.SomeNat_info:
         const GHC.TypeNats.SomeNat_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.149359281 UTC

[section ""cstring" . i5spE_str" {
     i5spE_str:
         I8[] [98,97,115,101,58,71,72,67,46,84,121,112,101,78,97,116,115,46,87,114,97,112,78]
 },
 GHC.TypeNats.WrapN_con_entry() //  [R1]
         { []
         }
     {offset
       c5sEv: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.TypeNats.WrapN_con_info" {
     GHC.TypeNats.WrapN_con_info:
         const GHC.TypeNats.WrapN_con_entry;
         const 1;
         const 2;
         const i5spE_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.152709063 UTC

[section ""cstring" . i5spG_str" {
     i5spG_str:
         I8[] [98,97,115,101,58,71,72,67,46,84,121,112,101,78,97,116,115,46,83,111,109,101,78,97,116]
 },
 GHC.TypeNats.SomeNat_con_entry() //  [R1]
         { []
         }
     {offset
       c5sEB: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.TypeNats.SomeNat_con_info" {
     GHC.TypeNats.SomeNat_con_info:
         const GHC.TypeNats.SomeNat_con_entry;
         const 2;
         const 4;
         const i5spG_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.156451136 UTC

[section ""relreadonly" . S5s9l_srt" {
     S5s9l_srt:
         const GHC.Show.$fShowInteger_$cshowsPrec_closure;
         const GHC.TypeNats.$fShowSomeNat_$cshowsPrec_closure;
         const GHC.Show.$w$cshowsPrec4_closure;
         const GHC.TypeNats.$fShowSomeNat_$cshow_closure;
         const GHC.TypeNats.$fShowSomeNat1_closure;
         const GHC.Read.$fReadInteger2_closure;
         const GHC.Read.$fReadInteger_$sreadNumber_closure;
         const GHC.Natural.$fReadNatural_go_closure;
         const GHC.TypeNats.$fReadSomeNat_$creadsPrec_closure;
         const GHC.TypeNats.$fReadSomeNat4_closure;
         const GHC.Read.list_closure;
         const GHC.TypeNats.$fReadSomeNat2_closure;
         const GHC.TypeNats.$fReadSomeNat1_closure;
         const GHC.TypeNats.$fReadSomeNat_$creadList_closure;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.688620383 UTC

[]


==================== Raw Cmm ====================
2018-03-16 16:00:28.690250858 UTC

[section ""data" . GHC.TypeNats.natSing_closure" {
     GHC.TypeNats.natSing_closure:
         const GHC.TypeNats.natSing_info;
 },
 GHC.TypeNats.natSing_entry() //  [R2]
         { []
         }
     {offset
       c5sGZ: // global
           R1 = R2 & (-8);
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.TypeNats.natSing_info" {
     GHC.TypeNats.natSing_info:
         const GHC.TypeNats.natSing_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.693811232 UTC

[section ""data" . GHC.TypeNats.natVal1_closure" {
     GHC.TypeNats.natVal1_closure:
         const GHC.TypeNats.natVal1_info;
 },
 GHC.TypeNats.natVal1_entry() //  [R2]
         { []
         }
     {offset
       c5sHc: // global
           R1 = R2 & (-8);
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.TypeNats.natVal1_info" {
     GHC.TypeNats.natVal1_info:
         const GHC.TypeNats.natVal1_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.69732664 UTC

[section ""data" . GHC.TypeNats.natVal_closure" {
     GHC.TypeNats.natVal_closure:
         const GHC.TypeNats.natVal_info;
 },
 GHC.TypeNats.natVal_entry() //  [R2, R3]
         { []
         }
     {offset
       c5sHp: // global
           R3 = R3;
           R2 = R2;
           call GHC.TypeNats.natVal1_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.TypeNats.natVal_info" {
     GHC.TypeNats.natVal_info:
         const GHC.TypeNats.natVal_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.700506621 UTC

[section ""data" . GHC.TypeNats.sameNat1_closure" {
     GHC.TypeNats.sameNat1_closure:
         const GHC.Base.Just_con_info;
         const Data.Type.Equality.$WRefl_closure;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.703290546 UTC

[section ""data" . GHC.TypeNats.sameNat_closure" {
     GHC.TypeNats.sameNat_closure:
         const GHC.TypeNats.sameNat_info;
 },
 GHC.TypeNats.sameNat_entry() //  [R2, R3, R4, R5]
         { []
         }
     {offset
       c5sHG: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5sHH; else goto c5sHI;
       c5sHH: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeNats.sameNat_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5sHI: // global
           I64[Sp - 8] = block_c5sHB_info;
           R3 = R3;
           R2 = R2;
           Sp = Sp - 8;
           call GHC.Integer.Type.eqInteger#_entry(R3,
                                                  R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.TypeNats.sameNat_info" {
     GHC.TypeNats.sameNat_info:
         const GHC.TypeNats.sameNat_entry;
         const 0;
         const 14;
         const 17179869208;
 },
 _c5sHB() //  [R1]
         { []
         }
     {offset
       c5sHB: // global
           if (R1 == 1) goto c5sHF; else goto c5sHE;
       c5sHF: // global
           R1 = GHC.TypeNats.sameNat1_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5sHE: // global
           R1 = GHC.Base.Nothing_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5sHB_info" {
     block_c5sHB_info:
         const _c5sHB;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.709780908 UTC

[section ""data" . GHC.TypeNats.$fShowSomeNat_$cshowsPrec_closure" {
     GHC.TypeNats.$fShowSomeNat_$cshowsPrec_closure:
         const GHC.TypeNats.$fShowSomeNat_$cshowsPrec_info;
         const 0;
 },
 GHC.TypeNats.$fShowSomeNat_$cshowsPrec_entry() //  [R2, R3, R4]
         { []
         }
     {offset
       c5sI8: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5sI9; else goto c5sIa;
       c5sI9: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeNats.$fShowSomeNat_$cshowsPrec_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5sIa: // global
           I64[Sp - 24] = block_c5sI5_info;
           R1 = R3;
           P64[Sp - 16] = R2;
           P64[Sp - 8] = R4;
           Sp = Sp - 24;
           if (R1 & 7 != 0) goto u5sIe; else goto c5sI6;
       u5sIe: // global
           call _c5sI5(R1) args: 0, res: 0, upd: 0;
       c5sI6: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.TypeNats.$fShowSomeNat_$cshowsPrec_info" {
     GHC.TypeNats.$fShowSomeNat_$cshowsPrec_info:
         const GHC.TypeNats.$fShowSomeNat_$cshowsPrec_entry;
         const 0;
         const 12884901902;
         const 12884901911;
         const S5sIf_srt;
 },
 _c5sI5() //  [R1]
         { []
         }
     {offset
       c5sI5: // global
           R4 = P64[Sp + 16];
           R3 = P64[R1 + 7];
           R2 = P64[Sp + 8];
           Sp = Sp + 24;
           call GHC.Show.$fShowInteger_$cshowsPrec_entry(R4,
                                                         R3,
                                                         R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5sI5_info" {
     block_c5sI5_info:
         const _c5sI5;
         const 2;
         const 4294967326;
         const S5sIf_srt;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.717448477 UTC

[section ""data" . GHC.TypeNats.$fShowSomeNat_$cshow_closure" {
     GHC.TypeNats.$fShowSomeNat_$cshow_closure:
         const GHC.TypeNats.$fShowSomeNat_$cshow_info;
         const 0;
 },
 GHC.TypeNats.$fShowSomeNat_$cshow_entry() //  [R2]
         { []
         }
     {offset
       c5sIx: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5sID; else goto c5sIE;
       c5sID: // global
           R2 = R2;
           R1 = GHC.TypeNats.$fShowSomeNat_$cshow_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5sIE: // global
           I64[Sp - 8] = block_c5sIu_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5sIJ; else goto c5sIv;
       u5sIJ: // global
           call _c5sIu(R1) args: 0, res: 0, upd: 0;
       c5sIv: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.TypeNats.$fShowSomeNat_$cshow_info" {
     GHC.TypeNats.$fShowSomeNat_$cshow_info:
         const GHC.TypeNats.$fShowSomeNat_$cshow_entry;
         const 0;
         const 12884901902;
         const 4294967301;
         const S5sIf_srt+16;
 },
 _c5sIu() //  [R1]
         { []
         }
     {offset
       c5sIu: // global
           I64[Sp] = block_c5sIA_info;
           R4 = GHC.Types.[]_closure+1;
           R3 = P64[R1 + 7];
           R2 = 0;
           call GHC.Show.$w$cshowsPrec4_entry(R4,
                                              R3,
                                              R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5sIu_info" {
     block_c5sIu_info:
         const _c5sIu;
         const 0;
         const 4294967326;
         const S5sIf_srt+16;
 },
 _c5sIA() //  [R1, R2]
         { []
         }
     {offset
       c5sIA: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5sII; else goto c5sIH;
       c5sII: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 8;
       c5sIH: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5sIA_info" {
     block_c5sIA_info:
         const _c5sIA;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.726610112 UTC

[section ""data" . GHC.TypeNats.$fShowSomeNat1_closure" {
     GHC.TypeNats.$fShowSomeNat1_closure:
         const GHC.TypeNats.$fShowSomeNat1_info;
         const 0;
 },
 GHC.TypeNats.$fShowSomeNat1_entry() //  [R2, R3]
         { []
         }
     {offset
       c5sJ8: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5sJe; else goto c5sJf;
       c5sJe: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeNats.$fShowSomeNat1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5sJf: // global
           I64[Sp - 16] = block_c5sJ5_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5sJk; else goto c5sJ6;
       u5sJk: // global
           call _c5sJ5(R1) args: 0, res: 0, upd: 0;
       c5sJ6: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.TypeNats.$fShowSomeNat1_info" {
     GHC.TypeNats.$fShowSomeNat1_info:
         const GHC.TypeNats.$fShowSomeNat1_entry;
         const 0;
         const 21474836494;
         const 8589934607;
         const S5sIf_srt+16;
 },
 _c5sJ5() //  [R1]
         { []
         }
     {offset
       c5sJ5: // global
           _s5sF4::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5sJb_info;
           R4 = _s5sF4::P64;
           R3 = P64[R1 + 7];
           R2 = 0;
           Sp = Sp + 8;
           call GHC.Show.$w$cshowsPrec4_entry(R4,
                                              R3,
                                              R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5sJ5_info" {
     block_c5sJ5_info:
         const _c5sJ5;
         const 1;
         const 4294967326;
         const S5sIf_srt+16;
 },
 _c5sJb() //  [R1, R2]
         { []
         }
     {offset
       c5sJb: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5sJj; else goto c5sJi;
       c5sJj: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = R1;
           call stg_gc_pp(R2, R1) args: 8, res: 8, upd: 8;
       c5sJi: // global
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = R1;
           P64[Hp] = R2;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5sJb_info" {
     block_c5sJb_info:
         const _c5sJb;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.734087726 UTC

[section ""data" . GHC.TypeNats.$fShowSomeNat_$cshowList_closure" {
     GHC.TypeNats.$fShowSomeNat_$cshowList_closure:
         const GHC.TypeNats.$fShowSomeNat_$cshowList_info;
         const 0;
 },
 GHC.TypeNats.$fShowSomeNat_$cshowList_entry() //  [R2, R3]
         { []
         }
     {offset
       c5sJF: // global
           R4 = R3;
           R3 = R2;
           R2 = GHC.TypeNats.$fShowSomeNat1_closure+2;
           call GHC.Show.showList___entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.TypeNats.$fShowSomeNat_$cshowList_info" {
     GHC.TypeNats.$fShowSomeNat_$cshowList_info:
         const GHC.TypeNats.$fShowSomeNat_$cshowList_entry;
         const 0;
         const 4294967310;
         const 8589934607;
         const S5sIf_srt+32;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.73738757 UTC

[section ""data" . GHC.TypeNats.$fShowSomeNat_closure" {
     GHC.TypeNats.$fShowSomeNat_closure:
         const GHC.Show.C:Show_con_info;
         const GHC.TypeNats.$fShowSomeNat_$cshowsPrec_closure+3;
         const GHC.TypeNats.$fShowSomeNat_$cshow_closure+1;
         const GHC.TypeNats.$fShowSomeNat_$cshowList_closure+2;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.740290969 UTC

[section ""data" . GHC.TypeNats.$fOrdSomeNat_$ccompare_closure" {
     GHC.TypeNats.$fOrdSomeNat_$ccompare_closure:
         const GHC.TypeNats.$fOrdSomeNat_$ccompare_info;
 },
 GHC.TypeNats.$fOrdSomeNat_$ccompare_entry() //  [R2, R3]
         { []
         }
     {offset
       c5sJU: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5sJY; else goto c5sJZ;
       c5sJY: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeNats.$fOrdSomeNat_$ccompare_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5sJZ: // global
           I64[Sp - 16] = block_c5sJR_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5sK7; else goto c5sJS;
       u5sK7: // global
           call _c5sJR(R1) args: 0, res: 0, upd: 0;
       c5sJS: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.TypeNats.$fOrdSomeNat_$ccompare_info" {
     GHC.TypeNats.$fOrdSomeNat_$ccompare_info:
         const GHC.TypeNats.$fOrdSomeNat_$ccompare_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5sJR() //  [R1]
         { []
         }
     {offset
       c5sJR: // global
           I64[Sp] = block_c5sJX_info;
           _s5sFg::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s5sFg::P64;
           if (R1 & 7 != 0) goto u5sK6; else goto c5sK1;
       u5sK6: // global
           call _c5sJX(R1) args: 0, res: 0, upd: 0;
       c5sK1: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5sJR_info" {
     block_c5sJR_info:
         const _c5sJR;
         const 1;
         const 30;
 },
 _c5sJX() //  [R1]
         { []
         }
     {offset
       c5sJX: // global
           R3 = P64[R1 + 7];
           R2 = P64[Sp + 8];
           Sp = Sp + 16;
           call GHC.Integer.Type.compareInteger_entry(R3,
                                                      R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5sJX_info" {
     block_c5sJX_info:
         const _c5sJX;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.748747903 UTC

[section ""data" . GHC.TypeNats.$fEqSomeNat_$c==_closure" {
     GHC.TypeNats.$fEqSomeNat_$c==_closure:
         const GHC.TypeNats.$fEqSomeNat_$c==_info;
 },
 GHC.TypeNats.$fEqSomeNat_$c==_entry() //  [R2, R3]
         { []
         }
     {offset
       c5sKu: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5sKy; else goto c5sKz;
       c5sKy: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeNats.$fEqSomeNat_$c==_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5sKz: // global
           I64[Sp - 16] = block_c5sKr_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5sKH; else goto c5sKs;
       u5sKH: // global
           call _c5sKr(R1) args: 0, res: 0, upd: 0;
       c5sKs: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.TypeNats.$fEqSomeNat_$c==_info" {
     GHC.TypeNats.$fEqSomeNat_$c==_info:
         const GHC.TypeNats.$fEqSomeNat_$c==_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5sKr() //  [R1]
         { []
         }
     {offset
       c5sKr: // global
           I64[Sp] = block_c5sKx_info;
           _s5sFo::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s5sFo::P64;
           if (R1 & 7 != 0) goto u5sKG; else goto c5sKB;
       u5sKG: // global
           call _c5sKx(R1) args: 0, res: 0, upd: 0;
       c5sKB: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5sKr_info" {
     block_c5sKr_info:
         const _c5sKr;
         const 1;
         const 30;
 },
 _c5sKx() //  [R1]
         { []
         }
     {offset
       c5sKx: // global
           R3 = P64[R1 + 7];
           R2 = P64[Sp + 8];
           Sp = Sp + 16;
           call GHC.Integer.Type.eqInteger_entry(R3,
                                                 R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5sKx_info" {
     block_c5sKx_info:
         const _c5sKx;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.757083303 UTC

[section ""data" . GHC.TypeNats.$fEqSomeNat_$c/=_closure" {
     GHC.TypeNats.$fEqSomeNat_$c/=_closure:
         const GHC.TypeNats.$fEqSomeNat_$c/=_info;
 },
 GHC.TypeNats.$fEqSomeNat_$c/=_entry() //  [R2, R3]
         { []
         }
     {offset
       c5sL4: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5sL8; else goto c5sL9;
       c5sL8: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeNats.$fEqSomeNat_$c/=_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5sL9: // global
           I64[Sp - 16] = block_c5sL1_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5sLs; else goto c5sL2;
       u5sLs: // global
           call _c5sL1(R1) args: 0, res: 0, upd: 0;
       c5sL2: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.TypeNats.$fEqSomeNat_$c/=_info" {
     GHC.TypeNats.$fEqSomeNat_$c/=_info:
         const GHC.TypeNats.$fEqSomeNat_$c/=_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5sL1() //  [R1]
         { []
         }
     {offset
       c5sL1: // global
           I64[Sp] = block_c5sL7_info;
           _s5sFw::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s5sFw::P64;
           if (R1 & 7 != 0) goto u5sLr; else goto c5sLb;
       u5sLr: // global
           call _c5sL7(R1) args: 0, res: 0, upd: 0;
       c5sLb: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5sL1_info" {
     block_c5sL1_info:
         const _c5sL1;
         const 1;
         const 30;
 },
 _c5sL7() //  [R1]
         { []
         }
     {offset
       c5sL7: // global
           _s5sFw::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5sLf_info;
           R3 = P64[R1 + 7];
           R2 = _s5sFw::P64;
           Sp = Sp + 8;
           call GHC.Integer.Type.eqInteger#_entry(R3,
                                                  R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5sL7_info" {
     block_c5sL7_info:
         const _c5sL7;
         const 1;
         const 30;
 },
 _c5sLf() //  [R1]
         { []
         }
     {offset
       c5sLf: // global
           if (R1 == 1) goto c5sLq; else goto c5sLm;
       c5sLq: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5sLm: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5sLf_info" {
     block_c5sLf_info:
         const _c5sLf;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.765169764 UTC

[section ""data" . GHC.TypeNats.$fEqSomeNat_closure" {
     GHC.TypeNats.$fEqSomeNat_closure:
         const GHC.Classes.C:Eq_con_info;
         const GHC.TypeNats.$fEqSomeNat_$c==_closure+2;
         const GHC.TypeNats.$fEqSomeNat_$c/=_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.768437383 UTC

[section ""data" . GHC.TypeNats.$fOrdSomeNat_$c<_closure" {
     GHC.TypeNats.$fOrdSomeNat_$c<_closure:
         const GHC.TypeNats.$fOrdSomeNat_$c<_info;
 },
 GHC.TypeNats.$fOrdSomeNat_$c<_entry() //  [R2, R3]
         { []
         }
     {offset
       c5sLY: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5sM2; else goto c5sM3;
       c5sM2: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeNats.$fOrdSomeNat_$c<_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5sM3: // global
           I64[Sp - 16] = block_c5sLV_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5sMn; else goto c5sLW;
       u5sMn: // global
           call _c5sLV(R1) args: 0, res: 0, upd: 0;
       c5sLW: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.TypeNats.$fOrdSomeNat_$c<_info" {
     GHC.TypeNats.$fOrdSomeNat_$c<_info:
         const GHC.TypeNats.$fOrdSomeNat_$c<_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5sLV() //  [R1]
         { []
         }
     {offset
       c5sLV: // global
           I64[Sp] = block_c5sM1_info;
           _s5sFF::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s5sFF::P64;
           if (R1 & 7 != 0) goto u5sMm; else goto c5sM5;
       u5sMm: // global
           call _c5sM1(R1) args: 0, res: 0, upd: 0;
       c5sM5: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5sLV_info" {
     block_c5sLV_info:
         const _c5sLV;
         const 1;
         const 30;
 },
 _c5sM1() //  [R1]
         { []
         }
     {offset
       c5sM1: // global
           _s5sFF::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5sM9_info;
           R3 = P64[R1 + 7];
           R2 = _s5sFF::P64;
           Sp = Sp + 8;
           call GHC.Integer.Type.compareInteger_entry(R3,
                                                      R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5sM1_info" {
     block_c5sM1_info:
         const _c5sM1;
         const 1;
         const 30;
 },
 _c5sM9() //  [R1]
         { []
         }
     {offset
       c5sM9: // global
           if (R1 & 7 == 1) goto c5sMk; else goto c5sMg;
       c5sMk: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5sMg: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5sM9_info" {
     block_c5sM9_info:
         const _c5sM9;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.782200705 UTC

[section ""data" . GHC.TypeNats.$fOrdSomeNat_$c>=_closure" {
     GHC.TypeNats.$fOrdSomeNat_$c>=_closure:
         const GHC.TypeNats.$fOrdSomeNat_$c>=_info;
 },
 GHC.TypeNats.$fOrdSomeNat_$c>=_entry() //  [R2, R3]
         { []
         }
     {offset
       c5sMU: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5sMY; else goto c5sMZ;
       c5sMY: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeNats.$fOrdSomeNat_$c>=_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5sMZ: // global
           I64[Sp - 16] = block_c5sMR_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5sNj; else goto c5sMS;
       u5sNj: // global
           call _c5sMR(R1) args: 0, res: 0, upd: 0;
       c5sMS: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.TypeNats.$fOrdSomeNat_$c>=_info" {
     GHC.TypeNats.$fOrdSomeNat_$c>=_info:
         const GHC.TypeNats.$fOrdSomeNat_$c>=_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5sMR() //  [R1]
         { []
         }
     {offset
       c5sMR: // global
           I64[Sp] = block_c5sMX_info;
           _s5sFO::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s5sFO::P64;
           if (R1 & 7 != 0) goto u5sNi; else goto c5sN1;
       u5sNi: // global
           call _c5sMX(R1) args: 0, res: 0, upd: 0;
       c5sN1: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5sMR_info" {
     block_c5sMR_info:
         const _c5sMR;
         const 1;
         const 30;
 },
 _c5sMX() //  [R1]
         { []
         }
     {offset
       c5sMX: // global
           _s5sFO::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5sN5_info;
           R3 = P64[R1 + 7];
           R2 = _s5sFO::P64;
           Sp = Sp + 8;
           call GHC.Integer.Type.compareInteger_entry(R3,
                                                      R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5sMX_info" {
     block_c5sMX_info:
         const _c5sMX;
         const 1;
         const 30;
 },
 _c5sN5() //  [R1]
         { []
         }
     {offset
       c5sN5: // global
           if (R1 & 7 == 1) goto c5sNg; else goto c5sNc;
       c5sNg: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5sNc: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5sN5_info" {
     block_c5sN5_info:
         const _c5sN5;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.796426504 UTC

[section ""data" . GHC.TypeNats.$fOrdSomeNat_$c>_closure" {
     GHC.TypeNats.$fOrdSomeNat_$c>_closure:
         const GHC.TypeNats.$fOrdSomeNat_$c>_info;
 },
 GHC.TypeNats.$fOrdSomeNat_$c>_entry() //  [R2, R3]
         { []
         }
     {offset
       c5sNQ: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5sNU; else goto c5sNV;
       c5sNU: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeNats.$fOrdSomeNat_$c>_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5sNV: // global
           I64[Sp - 16] = block_c5sNN_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5sOf; else goto c5sNO;
       u5sOf: // global
           call _c5sNN(R1) args: 0, res: 0, upd: 0;
       c5sNO: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.TypeNats.$fOrdSomeNat_$c>_info" {
     GHC.TypeNats.$fOrdSomeNat_$c>_info:
         const GHC.TypeNats.$fOrdSomeNat_$c>_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5sNN() //  [R1]
         { []
         }
     {offset
       c5sNN: // global
           I64[Sp] = block_c5sNT_info;
           _s5sFX::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s5sFX::P64;
           if (R1 & 7 != 0) goto u5sOe; else goto c5sNX;
       u5sOe: // global
           call _c5sNT(R1) args: 0, res: 0, upd: 0;
       c5sNX: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5sNN_info" {
     block_c5sNN_info:
         const _c5sNN;
         const 1;
         const 30;
 },
 _c5sNT() //  [R1]
         { []
         }
     {offset
       c5sNT: // global
           _s5sFX::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5sO1_info;
           R3 = P64[R1 + 7];
           R2 = _s5sFX::P64;
           Sp = Sp + 8;
           call GHC.Integer.Type.compareInteger_entry(R3,
                                                      R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5sNT_info" {
     block_c5sNT_info:
         const _c5sNT;
         const 1;
         const 30;
 },
 _c5sO1() //  [R1]
         { []
         }
     {offset
       c5sO1: // global
           if (R1 & 7 == 3) goto c5sOc; else goto c5sO8;
       c5sOc: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5sO8: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5sO1_info" {
     block_c5sO1_info:
         const _c5sO1;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.810787127 UTC

[section ""data" . GHC.TypeNats.$fOrdSomeNat_$c<=_closure" {
     GHC.TypeNats.$fOrdSomeNat_$c<=_closure:
         const GHC.TypeNats.$fOrdSomeNat_$c<=_info;
 },
 GHC.TypeNats.$fOrdSomeNat_$c<=_entry() //  [R2, R3]
         { []
         }
     {offset
       c5sOM: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5sOQ; else goto c5sOR;
       c5sOQ: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeNats.$fOrdSomeNat_$c<=_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5sOR: // global
           I64[Sp - 16] = block_c5sOJ_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5sPb; else goto c5sOK;
       u5sPb: // global
           call _c5sOJ(R1) args: 0, res: 0, upd: 0;
       c5sOK: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.TypeNats.$fOrdSomeNat_$c<=_info" {
     GHC.TypeNats.$fOrdSomeNat_$c<=_info:
         const GHC.TypeNats.$fOrdSomeNat_$c<=_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5sOJ() //  [R1]
         { []
         }
     {offset
       c5sOJ: // global
           I64[Sp] = block_c5sOP_info;
           _s5sG6::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s5sG6::P64;
           if (R1 & 7 != 0) goto u5sPa; else goto c5sOT;
       u5sPa: // global
           call _c5sOP(R1) args: 0, res: 0, upd: 0;
       c5sOT: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5sOJ_info" {
     block_c5sOJ_info:
         const _c5sOJ;
         const 1;
         const 30;
 },
 _c5sOP() //  [R1]
         { []
         }
     {offset
       c5sOP: // global
           _s5sG6::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5sOX_info;
           R3 = P64[R1 + 7];
           R2 = _s5sG6::P64;
           Sp = Sp + 8;
           call GHC.Integer.Type.compareInteger_entry(R3,
                                                      R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5sOP_info" {
     block_c5sOP_info:
         const _c5sOP;
         const 1;
         const 30;
 },
 _c5sOX() //  [R1]
         { []
         }
     {offset
       c5sOX: // global
           if (R1 & 7 == 3) goto c5sP8; else goto c5sP4;
       c5sP8: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5sP4: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5sOX_info" {
     block_c5sOX_info:
         const _c5sOX;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.822995435 UTC

[section ""data" . GHC.TypeNats.$fOrdSomeNat_$cmax_closure" {
     GHC.TypeNats.$fOrdSomeNat_$cmax_closure:
         const GHC.TypeNats.$fOrdSomeNat_$cmax_info;
 },
 GHC.TypeNats.$fOrdSomeNat_$cmax_entry() //  [R2, R3]
         { []
         }
     {offset
       c5sPI: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5sPM; else goto c5sPN;
       c5sPM: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeNats.$fOrdSomeNat_$cmax_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5sPN: // global
           I64[Sp - 16] = block_c5sPF_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5sQ7; else goto c5sPG;
       u5sQ7: // global
           call _c5sPF(R1) args: 0, res: 0, upd: 0;
       c5sPG: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.TypeNats.$fOrdSomeNat_$cmax_info" {
     GHC.TypeNats.$fOrdSomeNat_$cmax_info:
         const GHC.TypeNats.$fOrdSomeNat_$cmax_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5sPF() //  [R1]
         { []
         }
     {offset
       c5sPF: // global
           I64[Sp - 8] = block_c5sPL_info;
           _s5sGe::P64 = R1;
           _s5sGf::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp] = _s5sGf::P64;
           P64[Sp + 8] = _s5sGe::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5sQ6; else goto c5sPP;
       u5sQ6: // global
           call _c5sPL(R1) args: 0, res: 0, upd: 0;
       c5sPP: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5sPF_info" {
     block_c5sPF_info:
         const _c5sPF;
         const 1;
         const 30;
 },
 _c5sPL() //  [R1]
         { []
         }
     {offset
       c5sPL: // global
           I64[Sp] = block_c5sPT_info;
           R3 = P64[R1 + 7];
           R2 = P64[Sp + 8];
           P64[Sp + 8] = R1;
           call GHC.Integer.Type.compareInteger_entry(R3,
                                                      R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5sPL_info" {
     block_c5sPL_info:
         const _c5sPL;
         const 2;
         const 30;
 },
 _c5sPT() //  [R1]
         { []
         }
     {offset
       c5sPT: // global
           if (R1 & 7 == 3) goto c5sQ4; else goto c5sQ0;
       c5sQ4: // global
           R1 = P64[Sp + 16] & (-8);
           Sp = Sp + 24;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c5sQ0: // global
           R1 = P64[Sp + 8] & (-8);
           Sp = Sp + 24;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5sPT_info" {
     block_c5sPT_info:
         const _c5sPT;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.833200352 UTC

[section ""data" . GHC.TypeNats.$fOrdSomeNat_$cmin_closure" {
     GHC.TypeNats.$fOrdSomeNat_$cmin_closure:
         const GHC.TypeNats.$fOrdSomeNat_$cmin_info;
 },
 GHC.TypeNats.$fOrdSomeNat_$cmin_entry() //  [R2, R3]
         { []
         }
     {offset
       c5sQE: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5sQI; else goto c5sQJ;
       c5sQI: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeNats.$fOrdSomeNat_$cmin_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5sQJ: // global
           I64[Sp - 16] = block_c5sQB_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5sR3; else goto c5sQC;
       u5sR3: // global
           call _c5sQB(R1) args: 0, res: 0, upd: 0;
       c5sQC: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.TypeNats.$fOrdSomeNat_$cmin_info" {
     GHC.TypeNats.$fOrdSomeNat_$cmin_info:
         const GHC.TypeNats.$fOrdSomeNat_$cmin_entry;
         const 0;
         const 14;
         const 8589934607;
 },
 _c5sQB() //  [R1]
         { []
         }
     {offset
       c5sQB: // global
           I64[Sp - 8] = block_c5sQH_info;
           _s5sGn::P64 = R1;
           _s5sGo::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp] = _s5sGo::P64;
           P64[Sp + 8] = _s5sGn::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5sR2; else goto c5sQL;
       u5sR2: // global
           call _c5sQH(R1) args: 0, res: 0, upd: 0;
       c5sQL: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5sQB_info" {
     block_c5sQB_info:
         const _c5sQB;
         const 1;
         const 30;
 },
 _c5sQH() //  [R1]
         { []
         }
     {offset
       c5sQH: // global
           I64[Sp] = block_c5sQP_info;
           R3 = P64[R1 + 7];
           R2 = P64[Sp + 8];
           P64[Sp + 8] = R1;
           call GHC.Integer.Type.compareInteger_entry(R3,
                                                      R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5sQH_info" {
     block_c5sQH_info:
         const _c5sQH;
         const 2;
         const 30;
 },
 _c5sQP() //  [R1]
         { []
         }
     {offset
       c5sQP: // global
           if (R1 & 7 == 3) goto c5sR0; else goto c5sQW;
       c5sR0: // global
           R1 = P64[Sp + 8] & (-8);
           Sp = Sp + 24;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c5sQW: // global
           R1 = P64[Sp + 16] & (-8);
           Sp = Sp + 24;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5sQP_info" {
     block_c5sQP_info:
         const _c5sQP;
         const 2;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.842288742 UTC

[section ""data" . GHC.TypeNats.$fOrdSomeNat_closure" {
     GHC.TypeNats.$fOrdSomeNat_closure:
         const GHC.Classes.C:Ord_con_info;
         const GHC.TypeNats.$fEqSomeNat_closure+1;
         const GHC.TypeNats.$fOrdSomeNat_$ccompare_closure+2;
         const GHC.TypeNats.$fOrdSomeNat_$c<_closure+2;
         const GHC.TypeNats.$fOrdSomeNat_$c<=_closure+2;
         const GHC.TypeNats.$fOrdSomeNat_$c>_closure+2;
         const GHC.TypeNats.$fOrdSomeNat_$c>=_closure+2;
         const GHC.TypeNats.$fOrdSomeNat_$cmax_closure+2;
         const GHC.TypeNats.$fOrdSomeNat_$cmin_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.844872517 UTC

[section ""data" . GHC.TypeNats.natVal'1_closure" {
     GHC.TypeNats.natVal'1_closure:
         const GHC.TypeNats.natVal'1_info;
 },
 GHC.TypeNats.natVal'1_entry() //  [R2]
         { []
         }
     {offset
       c5sRy: // global
           R1 = R2 & (-8);
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.TypeNats.natVal'1_info" {
     GHC.TypeNats.natVal'1_info:
         const GHC.TypeNats.natVal'1_entry;
         const 0;
         const 14;
         const 8589934597;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.848650236 UTC

[section ""data" . GHC.TypeNats.natVal'_closure" {
     GHC.TypeNats.natVal'_closure:
         const GHC.TypeNats.natVal'_info;
 },
 GHC.TypeNats.natVal'_entry() //  [R2]
         { []
         }
     {offset
       c5sRL: // global
           R2 = R2;
           call GHC.TypeNats.natVal'1_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.TypeNats.natVal'_info" {
     GHC.TypeNats.natVal'_info:
         const GHC.TypeNats.natVal'_entry;
         const 0;
         const 14;
         const 8589934597;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.853035925 UTC

[section ""data" . GHC.TypeNats.someNatVal_closure" {
     GHC.TypeNats.someNatVal_closure:
         const GHC.TypeNats.someNatVal_info;
 },
 GHC.TypeNats.someNatVal_entry() //  [R2]
         { []
         }
     {offset
       c5sRX: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5sS1; else goto c5sS0;
       c5sS1: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = GHC.TypeNats.someNatVal_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5sS0: // global
           I64[Hp - 16] = GHC.TypeNats.SomeNat_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = Data.Proxy.Proxy_closure+1;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.TypeNats.someNatVal_info" {
     GHC.TypeNats.someNatVal_info:
         const GHC.TypeNats.someNatVal_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.859757883 UTC

[section ""data" . GHC.TypeNats.$fReadSomeNat_go_closure" {
     GHC.TypeNats.$fReadSomeNat_go_closure:
         const GHC.TypeNats.$fReadSomeNat_go_info;
 },
 sat_s5sGG_entry() //  [R1]
         { []
         }
     {offset
       c5sSt: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5sSu; else goto c5sSv;
       c5sSu: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5sSv: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.TypeNats.$fReadSomeNat_go_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . sat_s5sGG_info" {
     sat_s5sGG_info:
         const sat_s5sGG_entry;
         const 1;
         const 16;
 },
 GHC.TypeNats.$fReadSomeNat_go_entry() //  [R2]
         { []
         }
     {offset
       c5sSA: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5sSB; else goto c5sSC;
       c5sSB: // global
           R2 = R2;
           R1 = GHC.TypeNats.$fReadSomeNat_go_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5sSC: // global
           I64[Sp - 8] = block_c5sSe_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5sSN; else goto c5sSf;
       u5sSN: // global
           call _c5sSe(R1) args: 0, res: 0, upd: 0;
       c5sSf: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.TypeNats.$fReadSomeNat_go_info" {
     GHC.TypeNats.$fReadSomeNat_go_info:
         const GHC.TypeNats.$fReadSomeNat_go_entry;
         const 0;
         const 14;
         const 4294967301;
 },
 _c5sSe() //  [R1]
         { []
         }
     {offset
       c5sSe: // global
           if (R1 & 7 == 1) goto c5sSx; else goto c5sSy;
       c5sSx: // global
           R1 = []_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5sSy: // global
           I64[Sp - 8] = block_c5sSk_info;
           _s5sGA::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp] = _s5sGA::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5sSM; else goto c5sSl;
       u5sSM: // global
           call _c5sSk(R1) args: 0, res: 0, upd: 0;
       c5sSl: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5sSe_info" {
     block_c5sSe_info:
         const _c5sSe;
         const 0;
         const 30;
 },
 _c5sSk() //  [R1]
         { []
         }
     {offset
       c5sSk: // global
           Hp = Hp + 96;
           if (Hp > HpLim) (likely: False) goto c5sSL; else goto c5sSK;
       c5sSL: // global
           HpAlloc = 96;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5sSK: // global
           _s5sGC::P64 = P64[R1 + 7];
           _s5sGD::P64 = P64[R1 + 15];
           I64[Hp - 88] = sat_s5sGG_info;
           P64[Hp - 72] = P64[Sp + 8];
           I64[Hp - 64] = GHC.TypeNats.SomeNat_con_info;
           P64[Hp - 56] = _s5sGC::P64;
           P64[Hp - 48] = Data.Proxy.Proxy_closure+1;
           I64[Hp - 40] = (,)_con_info;
           P64[Hp - 32] = Hp - 63;
           P64[Hp - 24] = _s5sGD::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 39;
           P64[Hp] = Hp - 88;
           R1 = Hp - 14;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5sSk_info" {
     block_c5sSk_info:
         const _c5sSk;
         const 1;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.870188473 UTC

[section ""data" . GHC.TypeNats.$fReadSomeNat_$creadsPrec_closure" {
     GHC.TypeNats.$fReadSomeNat_$creadsPrec_closure:
         const GHC.TypeNats.$fReadSomeNat_$creadsPrec_info;
         const 0;
 },
 GHC.TypeNats.$fReadSomeNat_$creadsPrec_entry() //  [R2, R3]
         { []
         }
     {offset
       c5sTt: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5sTB; else goto c5sTC;
       c5sTB: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeNats.$fReadSomeNat_$creadsPrec_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5sTC: // global
           I64[Sp - 16] = block_c5sTr_info;
           R4 = Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure+1;
           _s5sGI::P64 = R3;
           R3 = R2;
           R2 = GHC.Read.$fReadInteger2_closure+1;
           P64[Sp - 8] = _s5sGI::P64;
           Sp = Sp - 16;
           call GHC.Read.$fReadInteger_$sreadNumber_entry(R4,
                                                          R3,
                                                          R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.TypeNats.$fReadSomeNat_$creadsPrec_info" {
     GHC.TypeNats.$fReadSomeNat_$creadsPrec_info:
         const GHC.TypeNats.$fReadSomeNat_$creadsPrec_entry;
         const 0;
         const 64424509454;
         const 8589934607;
         const S5sIf_srt+40;
 },
 _c5sTr() //  [R1]
         { []
         }
     {offset
       c5sTr: // global
           _s5sGI::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5sTw_info;
           R3 = _s5sGI::P64;
           R2 = R1;
           Sp = Sp + 8;
           call Text.ParserCombinators.ReadP.run_entry(R3,
                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5sTr_info" {
     block_c5sTr_info:
         const _c5sTr;
         const 1;
         const 4294967326;
         const S5sIf_srt+56;
 },
 _c5sTw() //  [R1]
         { []
         }
     {offset
       c5sTw: // global
           I64[Sp] = block_c5sTA_info;
           R2 = R1;
           call GHC.Natural.$fReadNatural_go_entry(R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . block_c5sTw_info" {
     block_c5sTw_info:
         const _c5sTw;
         const 0;
         const 4294967326;
         const S5sIf_srt+56;
 },
 _c5sTA() //  [R1]
         { []
         }
     {offset
       c5sTA: // global
           R2 = R1;
           Sp = Sp + 8;
           call GHC.TypeNats.$fReadSomeNat_go_entry(R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5sTA_info" {
     block_c5sTA_info:
         const _c5sTA;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.880083209 UTC

[section ""data" . GHC.TypeNats.$fReadSomeNat4_closure" {
     GHC.TypeNats.$fReadSomeNat4_closure:
         const GHC.TypeNats.$fReadSomeNat4_info;
         const 0;
 },
 sat_s5sGO_entry() //  [R1, R2]
         { []
         }
     {offset
       c5sUb: // global
           R3 = R2;
           R2 = P64[R1 + 7];
           call GHC.TypeNats.$fReadSomeNat_$creadsPrec_entry(R3,
                                                             R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . sat_s5sGO_info" {
     sat_s5sGO_info:
         const sat_s5sGO_entry;
         const 1;
         const 4294967305;
         const 4294967301;
         const S5sIf_srt+64;
 },
 GHC.TypeNats.$fReadSomeNat4_entry() //  [R2, R3]
         { []
         }
     {offset
       c5sUh: // global
           _s5sGN::P64 = R3;
           _s5sGM::P64 = R2;
           if ((Sp + -8) < SpLim) (likely: False) goto c5sUi; else goto c5sUj;
       c5sUj: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5sUl; else goto c5sUk;
       c5sUl: // global
           HpAlloc = 16;
           goto c5sUi;
       c5sUi: // global
           R3 = _s5sGN::P64;
           R2 = _s5sGM::P64;
           R1 = GHC.TypeNats.$fReadSomeNat4_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5sUk: // global
           I64[Hp - 8] = sat_s5sGO_info;
           P64[Hp] = _s5sGM::P64;
           I64[Sp - 8] = block_c5sUe_info;
           R3 = _s5sGN::P64;
           R2 = Hp - 7;
           Sp = Sp - 8;
           call Text.ParserCombinators.ReadP.$wreadS_to_P_entry(R3,
                                                                R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.TypeNats.$fReadSomeNat4_info" {
     GHC.TypeNats.$fReadSomeNat4_info:
         const GHC.TypeNats.$fReadSomeNat4_entry;
         const 0;
         const 12884901902;
         const 8589934607;
         const S5sIf_srt+64;
 },
 _c5sUe() //  [R1]
         { []
         }
     {offset
       c5sUe: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5sUo; else goto c5sUn;
       c5sUo: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5sUn: // global
           I64[Hp - 8] = Text.ParserCombinators.ReadP.Look_con_info;
           P64[Hp] = R1;
           R1 = Hp - 6;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5sUe_info" {
     block_c5sUe_info:
         const _c5sUe;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.89100399 UTC

[section ""data" . GHC.TypeNats.$fReadSomeNat3_closure" {
     GHC.TypeNats.$fReadSomeNat3_closure:
         const GHC.Types.I#_con_info;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.894607675 UTC

[section ""data" . GHC.TypeNats.$fReadSomeNat2_closure" {
     GHC.TypeNats.$fReadSomeNat2_closure:
         const GHC.TypeNats.$fReadSomeNat2_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.TypeNats.$fReadSomeNat2_entry() //  [R1]
         { []
         }
     {offset
       c5sUL: // global
           if ((Sp + -40) < SpLim) (likely: False) goto c5sUM; else goto c5sUN;
       c5sUM: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5sUN: // global
           (_c5sUI::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c5sUI::I64 == 0) goto c5sUK; else goto c5sUJ;
       c5sUK: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c5sUJ: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c5sUI::I64;
           R2 = GHC.TypeNats.$fReadSomeNat4_closure+2;
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = GHC.TypeNats.$fReadSomeNat3_closure+1;
           P64[Sp - 24] = Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure+1;
           Sp = Sp - 40;
           call GHC.Read.list_entry(R2) args: 48, res: 0, upd: 24;
     }
 },
 section ""relreadonly" . GHC.TypeNats.$fReadSomeNat2_info" {
     GHC.TypeNats.$fReadSomeNat2_info:
         const GHC.TypeNats.$fReadSomeNat2_entry;
         const 0;
         const 12884901909;
         const S5sIf_srt+72;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.901441745 UTC

[section ""data" . GHC.TypeNats.$fReadSomeNat_$creadList_closure" {
     GHC.TypeNats.$fReadSomeNat_$creadList_closure:
         const GHC.TypeNats.$fReadSomeNat_$creadList_info;
         const 0;
 },
 GHC.TypeNats.$fReadSomeNat_$creadList_entry() //  [R2]
         { []
         }
     {offset
       c5sV4: // global
           R3 = R2;
           R2 = GHC.TypeNats.$fReadSomeNat2_closure;
           call Text.ParserCombinators.ReadP.run_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.TypeNats.$fReadSomeNat_$creadList_info" {
     GHC.TypeNats.$fReadSomeNat_$creadList_info:
         const GHC.TypeNats.$fReadSomeNat_$creadList_entry;
         const 0;
         const 4294967310;
         const 4294967301;
         const S5sIf_srt+88;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.907341125 UTC

[section ""data" . GHC.TypeNats.$fReadSomeNat1_closure" {
     GHC.TypeNats.$fReadSomeNat1_closure:
         const GHC.TypeNats.$fReadSomeNat1_info;
         const 0;
 },
 GHC.TypeNats.$fReadSomeNat1_entry() //  [R2, R3]
         { []
         }
     {offset
       c5sVi: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5sVj; else goto c5sVk;
       c5sVj: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeNats.$fReadSomeNat1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5sVk: // global
           I64[Sp - 8] = block_c5sVf_info;
           R3 = R3;
           R2 = GHC.TypeNats.$fReadSomeNat_$creadList_closure+1;
           Sp = Sp - 8;
           call Text.ParserCombinators.ReadP.$wreadS_to_P_entry(R3,
                                                                R2) args: 8, res: 8, upd: 8;
     }
 },
 section ""relreadonly" . GHC.TypeNats.$fReadSomeNat1_info" {
     GHC.TypeNats.$fReadSomeNat1_info:
         const GHC.TypeNats.$fReadSomeNat1_entry;
         const 0;
         const 12884901902;
         const 8589934607;
         const S5sIf_srt+96;
 },
 _c5sVf() //  [R1]
         { []
         }
     {offset
       c5sVf: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5sVn; else goto c5sVm;
       c5sVn: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5sVm: // global
           I64[Hp - 8] = Text.ParserCombinators.ReadP.Look_con_info;
           P64[Hp] = R1;
           R1 = Hp - 6;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . block_c5sVf_info" {
     block_c5sVf_info:
         const _c5sVf;
         const 0;
         const 30;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.915457608 UTC

[section ""data" . GHC.TypeNats.$fReadSomeNat_closure" {
     GHC.TypeNats.$fReadSomeNat_closure:
         const GHC.Read.C:Read_con_info;
         const GHC.TypeNats.$fReadSomeNat_$creadsPrec_closure+2;
         const GHC.TypeNats.$fReadSomeNat_$creadList_closure+1;
         const GHC.TypeNats.$fReadSomeNat4_closure+2;
         const GHC.TypeNats.$fReadSomeNat1_closure+2;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.917890105 UTC

[section ""cstring" . GHC.TypeNats.$trModule4_bytes" {
     GHC.TypeNats.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.919785603 UTC

[section ""data" . GHC.TypeNats.$trModule3_closure" {
     GHC.TypeNats.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeNats.$trModule4_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.923474844 UTC

[section ""cstring" . GHC.TypeNats.$trModule2_bytes" {
     GHC.TypeNats.$trModule2_bytes:
         I8[] [71,72,67,46,84,121,112,101,78,97,116,115]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.92608005 UTC

[section ""data" . GHC.TypeNats.$trModule1_closure" {
     GHC.TypeNats.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeNats.$trModule2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.928590973 UTC

[section ""data" . GHC.TypeNats.$trModule_closure" {
     GHC.TypeNats.$trModule_closure:
         const GHC.Types.Module_con_info;
         const GHC.TypeNats.$trModule3_closure+1;
         const GHC.TypeNats.$trModule1_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.931192894 UTC

[section ""data" . $krep_r5s5Z_closure" {
     $krep_r5s5Z_closure:
         const GHC.Types.KindRepVar_con_info;
         const 0;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.934031071 UTC

[section ""data" . $krep1_r5s60_closure" {
     $krep1_r5s60_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Natural.$tcNatural_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.936715977 UTC

[section ""data" . $krep2_r5s61_closure" {
     $krep2_r5s61_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcConstraint_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.939483628 UTC

[section ""data" . $krep3_r5s62_closure" {
     $krep3_r5s62_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcNat_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.941906064 UTC

[section ""data" . $krep4_r5s63_closure" {
     $krep4_r5s63_closure:
         const :_con_info;
         const $krep_r5s5Z_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.944407921 UTC

[section ""data" . $krep5_r5s64_closure" {
     $krep5_r5s64_closure:
         const :_con_info;
         const $krep3_r5s62_closure+1;
         const $krep4_r5s63_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.947646202 UTC

[section ""data" . $krep6_r5s65_closure" {
     $krep6_r5s65_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const Data.Proxy.$tcProxy_closure;
         const $krep5_r5s64_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.950337627 UTC

[section ""data" . GHC.TypeNats.$tcKnownNat1_closure" {
     GHC.TypeNats.$tcKnownNat1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep3_r5s62_closure+1;
         const $krep2_r5s61_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.95304751 UTC

[section ""data" . GHC.TypeNats.$tcSNat1_closure" {
     GHC.TypeNats.$tcSNat1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep3_r5s62_closure+1;
         const GHC.Types.krep$*_closure;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.955733484 UTC

[section ""data" . GHC.TypeNats.$tcWrapN1_closure" {
     GHC.TypeNats.$tcWrapN1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep3_r5s62_closure+1;
         const GHC.Types.krep$*Arr*_closure;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.958778963 UTC

[section ""data" . $krep7_r5s66_closure" {
     $krep7_r5s66_closure:
         const GHC.Types.KindRepVar_con_info;
         const 1;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.962346917 UTC

[section ""data" . $krep8_r5s67_closure" {
     $krep8_r5s67_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep6_r5s65_closure+1;
         const $krep7_r5s66_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.964853772 UTC

[section ""cstring" . GHC.TypeNats.$tcSNat3_bytes" {
     GHC.TypeNats.$tcSNat3_bytes:
         I8[] [83,78,97,116]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.967305602 UTC

[section ""data" . GHC.TypeNats.$tcSNat2_closure" {
     GHC.TypeNats.$tcSNat2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeNats.$tcSNat3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.969865961 UTC

[section ""data" . GHC.TypeNats.$tcSNat_closure" {
     GHC.TypeNats.$tcSNat_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeNats.$trModule_closure+1;
         const GHC.TypeNats.$tcSNat2_closure+1;
         const GHC.TypeNats.$tcSNat1_closure+4;
         const 14249323166640683464;
         const 2956401390546376063;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.972524413 UTC

[section ""data" . $krep9_r5s68_closure" {
     $krep9_r5s68_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.TypeNats.$tcSNat_closure+1;
         const $krep4_r5s63_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.975735566 UTC

[section ""data" . GHC.TypeNats.$tc'SNat1_closure" {
     GHC.TypeNats.$tc'SNat1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep1_r5s60_closure+1;
         const $krep9_r5s68_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.978118834 UTC

[section ""cstring" . GHC.TypeNats.$tc'SNat3_bytes" {
     GHC.TypeNats.$tc'SNat3_bytes:
         I8[] [39,83,78,97,116]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.980507849 UTC

[section ""data" . GHC.TypeNats.$tc'SNat2_closure" {
     GHC.TypeNats.$tc'SNat2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeNats.$tc'SNat3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.982510852 UTC

[section ""data" . GHC.TypeNats.$tc'SNat_closure" {
     GHC.TypeNats.$tc'SNat_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeNats.$trModule_closure+1;
         const GHC.TypeNats.$tc'SNat2_closure+1;
         const GHC.TypeNats.$tc'SNat1_closure+4;
         const 10248898659057561068;
         const 4968065829559829914;
         const 1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.984240964 UTC

[section ""cstring" . GHC.TypeNats.$tcKnownNat3_bytes" {
     GHC.TypeNats.$tcKnownNat3_bytes:
         I8[] [75,110,111,119,110,78,97,116]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.985866891 UTC

[section ""data" . GHC.TypeNats.$tcKnownNat2_closure" {
     GHC.TypeNats.$tcKnownNat2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeNats.$tcKnownNat3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.987524416 UTC

[section ""data" . GHC.TypeNats.$tcKnownNat_closure" {
     GHC.TypeNats.$tcKnownNat_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeNats.$trModule_closure+1;
         const GHC.TypeNats.$tcKnownNat2_closure+1;
         const GHC.TypeNats.$tcKnownNat1_closure+4;
         const 4406426137333124098;
         const 3858660218128115833;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.990011688 UTC

[section ""data" . $krep10_r5s69_closure" {
     $krep10_r5s69_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.TypeNats.$tcKnownNat_closure+1;
         const $krep4_r5s63_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.991720461 UTC

[section ""data" . $krep11_r5s6a_closure" {
     $krep11_r5s6a_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep10_r5s69_closure+1;
         const $krep8_r5s67_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.994135343 UTC

[section ""data" . GHC.TypeNats.$tc'C:KnownNat1_closure" {
     GHC.TypeNats.$tc'C:KnownNat1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep9_r5s68_closure+1;
         const $krep10_r5s69_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.995824948 UTC

[section ""cstring" . GHC.TypeNats.$tc'C:KnownNat3_bytes" {
     GHC.TypeNats.$tc'C:KnownNat3_bytes:
         I8[] [39,67,58,75,110,111,119,110,78,97,116]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.997488592 UTC

[section ""data" . GHC.TypeNats.$tc'C:KnownNat2_closure" {
     GHC.TypeNats.$tc'C:KnownNat2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeNats.$tc'C:KnownNat3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:28.999079238 UTC

[section ""data" . GHC.TypeNats.$tc'C:KnownNat_closure" {
     GHC.TypeNats.$tc'C:KnownNat_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeNats.$trModule_closure+1;
         const GHC.TypeNats.$tc'C:KnownNat2_closure+1;
         const GHC.TypeNats.$tc'C:KnownNat1_closure+4;
         const 12421457977663053218;
         const 18328904747962077722;
         const 1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:29.000661927 UTC

[section ""cstring" . GHC.TypeNats.$tcSomeNat2_bytes" {
     GHC.TypeNats.$tcSomeNat2_bytes:
         I8[] [83,111,109,101,78,97,116]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:29.002366999 UTC

[section ""data" . GHC.TypeNats.$tcSomeNat1_closure" {
     GHC.TypeNats.$tcSomeNat1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeNats.$tcSomeNat2_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:29.004001041 UTC

[section ""data" . GHC.TypeNats.$tcSomeNat_closure" {
     GHC.TypeNats.$tcSomeNat_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeNats.$trModule_closure+1;
         const GHC.TypeNats.$tcSomeNat1_closure+1;
         const GHC.Types.krep$*_closure;
         const 9244180789053763601;
         const 6189216451384407387;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:29.005796358 UTC

[section ""data" . $krep12_r5s6b_closure" {
     $krep12_r5s6b_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.TypeNats.$tcSomeNat_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:29.007451534 UTC

[section ""data" . $krep13_r5s6c_closure" {
     $krep13_r5s6c_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep6_r5s65_closure+1;
         const $krep12_r5s6b_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:29.009115838 UTC

[section ""data" . GHC.TypeNats.$tc'SomeNat1_closure" {
     GHC.TypeNats.$tc'SomeNat1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep10_r5s69_closure+1;
         const $krep13_r5s6c_closure+4;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:29.011290484 UTC

[section ""cstring" . GHC.TypeNats.$tc'SomeNat3_bytes" {
     GHC.TypeNats.$tc'SomeNat3_bytes:
         I8[] [39,83,111,109,101,78,97,116]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:29.012913536 UTC

[section ""data" . GHC.TypeNats.$tc'SomeNat2_closure" {
     GHC.TypeNats.$tc'SomeNat2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeNats.$tc'SomeNat3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:29.014642545 UTC

[section ""data" . GHC.TypeNats.$tc'SomeNat_closure" {
     GHC.TypeNats.$tc'SomeNat_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeNats.$trModule_closure+1;
         const GHC.TypeNats.$tc'SomeNat2_closure+1;
         const GHC.TypeNats.$tc'SomeNat1_closure+4;
         const 5872332339143923373;
         const 16743196919708003695;
         const 1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:29.016364335 UTC

[section ""cstring" . GHC.TypeNats.$tcWrapN3_bytes" {
     GHC.TypeNats.$tcWrapN3_bytes:
         I8[] [87,114,97,112,78]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:29.018038669 UTC

[section ""data" . GHC.TypeNats.$tcWrapN2_closure" {
     GHC.TypeNats.$tcWrapN2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeNats.$tcWrapN3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:29.020315164 UTC

[section ""data" . GHC.TypeNats.$tcWrapN_closure" {
     GHC.TypeNats.$tcWrapN_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeNats.$trModule_closure+1;
         const GHC.TypeNats.$tcWrapN2_closure+1;
         const GHC.TypeNats.$tcWrapN1_closure+4;
         const 825875854269014453;
         const 10073258292275044429;
         const 0;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:29.022067938 UTC

[section ""data" . $krep14_r5s6d_closure" {
     $krep14_r5s6d_closure:
         const :_con_info;
         const $krep7_r5s66_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:29.023719851 UTC

[section ""data" . $krep15_r5s6e_closure" {
     $krep15_r5s6e_closure:
         const :_con_info;
         const $krep_r5s5Z_closure+2;
         const $krep14_r5s6d_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:29.025386729 UTC

[section ""data" . $krep16_r5s6f_closure" {
     $krep16_r5s6f_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.TypeNats.$tcWrapN_closure+1;
         const $krep15_r5s6e_closure+2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:29.027041308 UTC

[section ""data" . GHC.TypeNats.$tc'WrapN1_closure" {
     GHC.TypeNats.$tc'WrapN1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep11_r5s6a_closure+4;
         const $krep16_r5s6f_closure+1;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:29.028622052 UTC

[section ""cstring" . GHC.TypeNats.$tc'WrapN3_bytes" {
     GHC.TypeNats.$tc'WrapN3_bytes:
         I8[] [39,87,114,97,112,78]
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:29.030212418 UTC

[section ""data" . GHC.TypeNats.$tc'WrapN2_closure" {
     GHC.TypeNats.$tc'WrapN2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeNats.$tc'WrapN3_bytes;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:29.031892106 UTC

[section ""data" . GHC.TypeNats.$tc'WrapN_closure" {
     GHC.TypeNats.$tc'WrapN_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeNats.$trModule_closure+1;
         const GHC.TypeNats.$tc'WrapN2_closure+1;
         const GHC.TypeNats.$tc'WrapN1_closure+4;
         const 731800900372900037;
         const 17722817696101367246;
         const 2;
         const 3;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:29.034282515 UTC

[section ""data" . GHC.TypeNats.WrapN_closure" {
     GHC.TypeNats.WrapN_closure:
         const GHC.TypeNats.WrapN_info;
 },
 GHC.TypeNats.WrapN_entry() //  [R2]
         { []
         }
     {offset
       c5sWw: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5sWA; else goto c5sWz;
       c5sWA: // global
           HpAlloc = 16;
           R2 = R2;
           R1 = GHC.TypeNats.WrapN_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5sWz: // global
           I64[Hp - 8] = GHC.TypeNats.WrapN_con_info;
           P64[Hp] = R2;
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.TypeNats.WrapN_info" {
     GHC.TypeNats.WrapN_info:
         const GHC.TypeNats.WrapN_entry;
         const 0;
         const 14;
         const 4294967301;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:29.038156807 UTC

[section ""data" . GHC.TypeNats.SomeNat_closure" {
     GHC.TypeNats.SomeNat_closure:
         const GHC.TypeNats.SomeNat_info;
 },
 GHC.TypeNats.SomeNat_entry() //  [R2, R3]
         { []
         }
     {offset
       c5sWM: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5sWQ; else goto c5sWP;
       c5sWQ: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeNats.SomeNat_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5sWP: // global
           I64[Hp - 16] = GHC.TypeNats.SomeNat_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.TypeNats.SomeNat_info" {
     GHC.TypeNats.SomeNat_info:
         const GHC.TypeNats.SomeNat_entry;
         const 0;
         const 14;
         const 8589934607;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:29.042704853 UTC

[section ""cstring" . i5sWY_str" {
     i5sWY_str:
         I8[] [98,97,115,101,58,71,72,67,46,84,121,112,101,78,97,116,115,46,87,114,97,112,78]
 },
 GHC.TypeNats.WrapN_con_entry() //  [R1]
         { []
         }
     {offset
       c5sWX: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.TypeNats.WrapN_con_info" {
     GHC.TypeNats.WrapN_con_info:
         const GHC.TypeNats.WrapN_con_entry;
         const 1;
         const 2;
         const i5sWY_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:29.046100843 UTC

[section ""cstring" . i5sX5_str" {
     i5sX5_str:
         I8[] [98,97,115,101,58,71,72,67,46,84,121,112,101,78,97,116,115,46,83,111,109,101,78,97,116]
 },
 GHC.TypeNats.SomeNat_con_entry() //  [R1]
         { []
         }
     {offset
       c5sX4: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 },
 section ""relreadonly" . GHC.TypeNats.SomeNat_con_info" {
     GHC.TypeNats.SomeNat_con_info:
         const GHC.TypeNats.SomeNat_con_entry;
         const 2;
         const 4;
         const i5sX5_str;
 }]


==================== Raw Cmm ====================
2018-03-16 16:00:29.049835462 UTC

[section ""relreadonly" . S5sIf_srt" {
     S5sIf_srt:
         const GHC.Show.$fShowInteger_$cshowsPrec_closure;
         const GHC.TypeNats.$fShowSomeNat_$cshowsPrec_closure;
         const GHC.Show.$w$cshowsPrec4_closure;
         const GHC.TypeNats.$fShowSomeNat_$cshow_closure;
         const GHC.TypeNats.$fShowSomeNat1_closure;
         const GHC.Read.$fReadInteger2_closure;
         const GHC.Read.$fReadInteger_$sreadNumber_closure;
         const GHC.Natural.$fReadNatural_go_closure;
         const GHC.TypeNats.$fReadSomeNat_$creadsPrec_closure;
         const GHC.TypeNats.$fReadSomeNat4_closure;
         const GHC.Read.list_closure;
         const GHC.TypeNats.$fReadSomeNat2_closure;
         const GHC.TypeNats.$fReadSomeNat1_closure;
         const GHC.TypeNats.$fReadSomeNat_$creadList_closure;
 }]

