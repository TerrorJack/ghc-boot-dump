
==================== Asm code ====================
2018-03-16 15:55:00.776810153 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.$fEqMVar_$c==_closure
.type GHC.MVar.$fEqMVar_$c==_closure, @object
GHC.MVar.$fEqMVar_$c==_closure:
	.quad	GHC.MVar.$fEqMVar_$c==_info


==================== Asm code ====================
2018-03-16 15:55:00.778171418 UTC

.section .text
.align 8
.globl GHC.MVar.$fEqMVar_$c==_entry
.type GHC.MVar.$fEqMVar_$c==_entry, @object
GHC.MVar.$fEqMVar_$c==_entry:
_cn7x:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cn7B
_cn7C:
	movq $block_cn7u_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cn7u
_cn7v:
	movq (%rbx),%rax
	jmp *(%rax)
_cn7B:
	movl $GHC.MVar.$fEqMVar_$c==_closure,%ebx
	jmp *-8(%r13)
	.size GHC.MVar.$fEqMVar_$c==_entry, .-GHC.MVar.$fEqMVar_$c==_entry


==================== Asm code ====================
2018-03-16 15:55:00.779214121 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.MVar.$fEqMVar_$c==_info
.type GHC.MVar.$fEqMVar_$c==_info, @object
GHC.MVar.$fEqMVar_$c==_info:
	.quad	GHC.MVar.$fEqMVar_$c==_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:55:00.780271318 UTC

.section .text
.align 8
_cn7u:
_cn7u:
	movq $block_cn7A_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _cn7A
_cn7E:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cn7u, .-_cn7u


==================== Asm code ====================
2018-03-16 15:55:00.781207361 UTC

.section .data.rel.ro
.align 8
.align 1
block_cn7u_info:
	.quad	_cn7u
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:00.782549284 UTC

.section .text
.align 8
_cn7A:
_cn7A:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	sete %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cn7A, .-_cn7A


==================== Asm code ====================
2018-03-16 15:55:00.783461874 UTC

.section .data.rel.ro
.align 8
.align 1
block_cn7A_info:
	.quad	_cn7A
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:00.789121968 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.$fEqMVar_$c/=_closure
.type GHC.MVar.$fEqMVar_$c/=_closure, @object
GHC.MVar.$fEqMVar_$c/=_closure:
	.quad	GHC.MVar.$fEqMVar_$c/=_info


==================== Asm code ====================
2018-03-16 15:55:00.790279464 UTC

.section .text
.align 8
.globl GHC.MVar.$fEqMVar_$c/=_entry
.type GHC.MVar.$fEqMVar_$c/=_entry, @object
GHC.MVar.$fEqMVar_$c/=_entry:
_cn8a:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cn8e
_cn8f:
	movq $block_cn87_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cn87
_cn88:
	movq (%rbx),%rax
	jmp *(%rax)
_cn8e:
	movl $GHC.MVar.$fEqMVar_$c/=_closure,%ebx
	jmp *-8(%r13)
	.size GHC.MVar.$fEqMVar_$c/=_entry, .-GHC.MVar.$fEqMVar_$c/=_entry


==================== Asm code ====================
2018-03-16 15:55:00.79126644 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.MVar.$fEqMVar_$c/=_info
.type GHC.MVar.$fEqMVar_$c/=_info, @object
GHC.MVar.$fEqMVar_$c/=_info:
	.quad	GHC.MVar.$fEqMVar_$c/=_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:55:00.792271951 UTC

.section .text
.align 8
_cn87:
_cn87:
	movq $block_cn8d_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _cn8d
_cn8h:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cn87, .-_cn87


==================== Asm code ====================
2018-03-16 15:55:00.793224259 UTC

.section .data.rel.ro
.align 8
.align 1
block_cn87_info:
	.quad	_cn87
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:00.794255436 UTC

.section .text
.align 8
_cn8d:
_cn8d:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	je _cn8x
_cn8r:
	movl $GHC.Types.True_closure+2,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cn8x:
	movl $GHC.Types.False_closure+1,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cn8d, .-_cn8d


==================== Asm code ====================
2018-03-16 15:55:00.796313106 UTC

.section .data.rel.ro
.align 8
.align 1
block_cn8d_info:
	.quad	_cn8d
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:00.798895731 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.$fEqMVar_closure
.type GHC.MVar.$fEqMVar_closure, @object
GHC.MVar.$fEqMVar_closure:
	.quad	GHC.Classes.C:Eq_con_info
	.quad	GHC.MVar.$fEqMVar_$c==_closure+2
	.quad	GHC.MVar.$fEqMVar_$c/=_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:55:00.804131061 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.newEmptyMVar1_closure
.type GHC.MVar.newEmptyMVar1_closure, @object
GHC.MVar.newEmptyMVar1_closure:
	.quad	GHC.MVar.newEmptyMVar1_info


==================== Asm code ====================
2018-03-16 15:55:00.805211527 UTC

.section .text
.align 8
.globl GHC.MVar.newEmptyMVar1_entry
.type GHC.MVar.newEmptyMVar1_entry, @object
GHC.MVar.newEmptyMVar1_entry:
_cn91:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cn92
_cn93:
	movq $block_cn8Y_info,-8(%rbp)
	addq $-8,%rbp
	jmp stg_newMVar#
_cn92:
	movl $GHC.MVar.newEmptyMVar1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.MVar.newEmptyMVar1_entry, .-GHC.MVar.newEmptyMVar1_entry


==================== Asm code ====================
2018-03-16 15:55:00.806246032 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.MVar.newEmptyMVar1_info
.type GHC.MVar.newEmptyMVar1_info, @object
GHC.MVar.newEmptyMVar1_info:
	.quad	GHC.MVar.newEmptyMVar1_entry
	.quad	0
	.quad	14
	.quad	4294967299


==================== Asm code ====================
2018-03-16 15:55:00.807194391 UTC

.section .text
.align 8
_cn8Y:
_cn8Y:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cn96
_cn95:
	movq $GHC.MVar.MVar_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cn96:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _cn8Y, .-_cn8Y


==================== Asm code ====================
2018-03-16 15:55:00.808064694 UTC

.section .data.rel.ro
.align 8
.align 1
block_cn8Y_info:
	.quad	_cn8Y
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:00.811041653 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.newEmptyMVar_closure
.type GHC.MVar.newEmptyMVar_closure, @object
GHC.MVar.newEmptyMVar_closure:
	.quad	GHC.MVar.newEmptyMVar_info


==================== Asm code ====================
2018-03-16 15:55:00.811949805 UTC

.section .text
.align 8
.globl GHC.MVar.newEmptyMVar_entry
.type GHC.MVar.newEmptyMVar_entry, @object
GHC.MVar.newEmptyMVar_entry:
_cn9k:
	jmp GHC.MVar.newEmptyMVar1_entry
	.size GHC.MVar.newEmptyMVar_entry, .-GHC.MVar.newEmptyMVar_entry


==================== Asm code ====================
2018-03-16 15:55:00.812779035 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.MVar.newEmptyMVar_info
.type GHC.MVar.newEmptyMVar_info, @object
GHC.MVar.newEmptyMVar_info:
	.quad	GHC.MVar.newEmptyMVar_entry
	.quad	0
	.quad	14
	.quad	4294967299


==================== Asm code ====================
2018-03-16 15:55:00.815906805 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.takeMVar1_closure
.type GHC.MVar.takeMVar1_closure, @object
GHC.MVar.takeMVar1_closure:
	.quad	GHC.MVar.takeMVar1_info


==================== Asm code ====================
2018-03-16 15:55:00.816670481 UTC

.section .text
.align 8
.globl GHC.MVar.takeMVar1_entry
.type GHC.MVar.takeMVar1_entry, @object
GHC.MVar.takeMVar1_entry:
_cn9y:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cn9z
_cn9A:
	movq $block_cn9v_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cn9v
_cn9w:
	movq (%rbx),%rax
	jmp *(%rax)
_cn9z:
	movl $GHC.MVar.takeMVar1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.MVar.takeMVar1_entry, .-GHC.MVar.takeMVar1_entry


==================== Asm code ====================
2018-03-16 15:55:00.817706154 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.MVar.takeMVar1_info
.type GHC.MVar.takeMVar1_info, @object
GHC.MVar.takeMVar1_info:
	.quad	GHC.MVar.takeMVar1_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 15:55:00.818334857 UTC

.section .text
.align 8
_cn9v:
_cn9v:
	movq 7(%rbx),%rbx
	addq $8,%rbp
	jmp stg_takeMVar#
	.size _cn9v, .-_cn9v


==================== Asm code ====================
2018-03-16 15:55:00.818902698 UTC

.section .data.rel.ro
.align 8
.align 1
block_cn9v_info:
	.quad	_cn9v
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:00.820935288 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.takeMVar_closure
.type GHC.MVar.takeMVar_closure, @object
GHC.MVar.takeMVar_closure:
	.quad	GHC.MVar.takeMVar_info


==================== Asm code ====================
2018-03-16 15:55:00.821556393 UTC

.section .text
.align 8
.globl GHC.MVar.takeMVar_entry
.type GHC.MVar.takeMVar_entry, @object
GHC.MVar.takeMVar_entry:
_cn9S:
	jmp GHC.MVar.takeMVar1_entry
	.size GHC.MVar.takeMVar_entry, .-GHC.MVar.takeMVar_entry


==================== Asm code ====================
2018-03-16 15:55:00.822133988 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.MVar.takeMVar_info
.type GHC.MVar.takeMVar_info, @object
GHC.MVar.takeMVar_info:
	.quad	GHC.MVar.takeMVar_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 15:55:00.824765711 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.readMVar1_closure
.type GHC.MVar.readMVar1_closure, @object
GHC.MVar.readMVar1_closure:
	.quad	GHC.MVar.readMVar1_info


==================== Asm code ====================
2018-03-16 15:55:00.828165497 UTC

.section .text
.align 8
.globl GHC.MVar.readMVar1_entry
.type GHC.MVar.readMVar1_entry, @object
GHC.MVar.readMVar1_entry:
_cna6:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cna7
_cna8:
	movq $block_cna3_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cna3
_cna4:
	movq (%rbx),%rax
	jmp *(%rax)
_cna7:
	movl $GHC.MVar.readMVar1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.MVar.readMVar1_entry, .-GHC.MVar.readMVar1_entry


==================== Asm code ====================
2018-03-16 15:55:00.828786964 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.MVar.readMVar1_info
.type GHC.MVar.readMVar1_info, @object
GHC.MVar.readMVar1_info:
	.quad	GHC.MVar.readMVar1_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 15:55:00.829648568 UTC

.section .text
.align 8
_cna3:
_cna3:
	movq 7(%rbx),%rbx
	addq $8,%rbp
	jmp stg_readMVar#
	.size _cna3, .-_cna3


==================== Asm code ====================
2018-03-16 15:55:00.830251361 UTC

.section .data.rel.ro
.align 8
.align 1
block_cna3_info:
	.quad	_cna3
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:00.832394965 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.readMVar_closure
.type GHC.MVar.readMVar_closure, @object
GHC.MVar.readMVar_closure:
	.quad	GHC.MVar.readMVar_info


==================== Asm code ====================
2018-03-16 15:55:00.832972675 UTC

.section .text
.align 8
.globl GHC.MVar.readMVar_entry
.type GHC.MVar.readMVar_entry, @object
GHC.MVar.readMVar_entry:
_cnaq:
	jmp GHC.MVar.readMVar1_entry
	.size GHC.MVar.readMVar_entry, .-GHC.MVar.readMVar_entry


==================== Asm code ====================
2018-03-16 15:55:00.833837848 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.MVar.readMVar_info
.type GHC.MVar.readMVar_info, @object
GHC.MVar.readMVar_info:
	.quad	GHC.MVar.readMVar_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 15:55:00.836884396 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.putMVar1_closure
.type GHC.MVar.putMVar1_closure, @object
GHC.MVar.putMVar1_closure:
	.quad	GHC.MVar.putMVar1_info


==================== Asm code ====================
2018-03-16 15:55:00.838244293 UTC

.section .text
.align 8
.globl GHC.MVar.putMVar1_entry
.type GHC.MVar.putMVar1_entry, @object
GHC.MVar.putMVar1_entry:
_cnaE:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cnaI
_cnaJ:
	movq $block_cnaB_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cnaB
_cnaC:
	movq (%rbx),%rax
	jmp *(%rax)
_cnaI:
	movl $GHC.MVar.putMVar1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.MVar.putMVar1_entry, .-GHC.MVar.putMVar1_entry


==================== Asm code ====================
2018-03-16 15:55:00.83904763 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.MVar.putMVar1_info
.type GHC.MVar.putMVar1_info, @object
GHC.MVar.putMVar1_info:
	.quad	GHC.MVar.putMVar1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:55:00.83970778 UTC

.section .text
.align 8
_cnaB:
_cnaB:
	movq 8(%rbp),%rax
	movq $block_cnaH_info,8(%rbp)
	movq %rax,%r14
	movq 7(%rbx),%rbx
	addq $8,%rbp
	jmp stg_putMVar#
	.size _cnaB, .-_cnaB


==================== Asm code ====================
2018-03-16 15:55:00.840273361 UTC

.section .data.rel.ro
.align 8
.align 1
block_cnaB_info:
	.quad	_cnaB
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:00.840948081 UTC

.section .text
.align 8
_cnaH:
_cnaH:
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cnaH, .-_cnaH


==================== Asm code ====================
2018-03-16 15:55:00.841665076 UTC

.section .data.rel.ro
.align 8
.align 1
block_cnaH_info:
	.quad	_cnaH
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:00.843836093 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.putMVar_closure
.type GHC.MVar.putMVar_closure, @object
GHC.MVar.putMVar_closure:
	.quad	GHC.MVar.putMVar_info


==================== Asm code ====================
2018-03-16 15:55:00.844423502 UTC

.section .text
.align 8
.globl GHC.MVar.putMVar_entry
.type GHC.MVar.putMVar_entry, @object
GHC.MVar.putMVar_entry:
_cnb5:
	jmp GHC.MVar.putMVar1_entry
	.size GHC.MVar.putMVar_entry, .-GHC.MVar.putMVar_entry


==================== Asm code ====================
2018-03-16 15:55:00.844990509 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.MVar.putMVar_info
.type GHC.MVar.putMVar_info, @object
GHC.MVar.putMVar_info:
	.quad	GHC.MVar.putMVar_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:55:00.848053336 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.newMVar1_closure
.type GHC.MVar.newMVar1_closure, @object
GHC.MVar.newMVar1_closure:
	.quad	GHC.MVar.newMVar1_info


==================== Asm code ====================
2018-03-16 15:55:00.848793321 UTC

.section .text
.align 8
.globl GHC.MVar.newMVar1_entry
.type GHC.MVar.newMVar1_entry, @object
GHC.MVar.newMVar1_entry:
_cnbl:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cnbm
_cnbn:
	movq $block_cnbg_info,-16(%rbp)
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	jmp stg_newMVar#
_cnbm:
	movl $GHC.MVar.newMVar1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.MVar.newMVar1_entry, .-GHC.MVar.newMVar1_entry


==================== Asm code ====================
2018-03-16 15:55:00.849495674 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.MVar.newMVar1_info
.type GHC.MVar.newMVar1_info, @object
GHC.MVar.newMVar1_info:
	.quad	GHC.MVar.newMVar1_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 15:55:00.850149825 UTC

.section .text
.align 8
_cnbg:
_cnbg:
	movq $block_cnbi_info,(%rbp)
	movq 8(%rbp),%r14
	movq %rbx,%rax
	movq %rax,8(%rbp)
	jmp stg_putMVar#
	.size _cnbg, .-_cnbg


==================== Asm code ====================
2018-03-16 15:55:00.850679667 UTC

.section .data.rel.ro
.align 8
.align 1
block_cnbg_info:
	.quad	_cnbg
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:00.851373056 UTC

.section .text
.align 8
_cnbi:
_cnbi:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cnbr
_cnbq:
	movq $GHC.MVar.MVar_con_info,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cnbr:
	movq $16,904(%r13)
	jmp stg_gc_noregs
	.size _cnbi, .-_cnbi


==================== Asm code ====================
2018-03-16 15:55:00.851926581 UTC

.section .data.rel.ro
.align 8
.align 1
block_cnbi_info:
	.quad	_cnbi
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:00.853947583 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.newMVar_closure
.type GHC.MVar.newMVar_closure, @object
GHC.MVar.newMVar_closure:
	.quad	GHC.MVar.newMVar_info


==================== Asm code ====================
2018-03-16 15:55:00.854548811 UTC

.section .text
.align 8
.globl GHC.MVar.newMVar_entry
.type GHC.MVar.newMVar_entry, @object
GHC.MVar.newMVar_entry:
_cnbJ:
	jmp GHC.MVar.newMVar1_entry
	.size GHC.MVar.newMVar_entry, .-GHC.MVar.newMVar_entry


==================== Asm code ====================
2018-03-16 15:55:00.855072414 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.MVar.newMVar_info
.type GHC.MVar.newMVar_info, @object
GHC.MVar.newMVar_info:
	.quad	GHC.MVar.newMVar_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 15:55:00.859153724 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.tryTakeMVar1_closure
.type GHC.MVar.tryTakeMVar1_closure, @object
GHC.MVar.tryTakeMVar1_closure:
	.quad	GHC.MVar.tryTakeMVar1_info


==================== Asm code ====================
2018-03-16 15:55:00.859907388 UTC

.section .text
.align 8
.globl GHC.MVar.tryTakeMVar1_entry
.type GHC.MVar.tryTakeMVar1_entry, @object
GHC.MVar.tryTakeMVar1_entry:
_cnbX:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cnbY
_cnbZ:
	movq $block_cnbU_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cnbU
_cnbV:
	movq (%rbx),%rax
	jmp *(%rax)
_cnbY:
	movl $GHC.MVar.tryTakeMVar1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.MVar.tryTakeMVar1_entry, .-GHC.MVar.tryTakeMVar1_entry


==================== Asm code ====================
2018-03-16 15:55:00.860549802 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.MVar.tryTakeMVar1_info
.type GHC.MVar.tryTakeMVar1_info, @object
GHC.MVar.tryTakeMVar1_info:
	.quad	GHC.MVar.tryTakeMVar1_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 15:55:00.86118435 UTC

.section .text
.align 8
_cnbU:
_cnbU:
	movq $block_cnc2_info,(%rbp)
	movq 7(%rbx),%rbx
	jmp stg_tryTakeMVar#
	.size _cnbU, .-_cnbU


==================== Asm code ====================
2018-03-16 15:55:00.861792033 UTC

.section .data.rel.ro
.align 8
.align 1
block_cnbU_info:
	.quad	_cnbU
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:00.862414405 UTC

.section .text
.align 8
_cnc2:
_cnc2:
	movq %r14,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp _cnc4
	.size _cnc2, .-_cnc2


==================== Asm code ====================
2018-03-16 15:55:00.862969495 UTC

.section .data.rel.ro
.align 8
.align 1
block_cnc2_info:
	.quad	_cnc2
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:00.863741004 UTC

.section .text
.align 8
_cnc4:
_cnc4:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cnc9
_cnc8:
	cmpq $0,16(%rbp)
	je _cncf
_cnce:
	movq $GHC.Base.Just_con_info,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cncf:
	addq $-16,%r12
	movl $GHC.Base.Nothing_closure+1,%ebx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cnc9:
	movq $16,904(%r13)
	movq $block_cnc4_info,(%rbp)
	jmp stg_gc_noregs
	.size _cnc4, .-_cnc4


==================== Asm code ====================
2018-03-16 15:55:00.864392427 UTC

.section .data.rel.ro
.align 8
.align 1
block_cnc4_info:
	.quad	_cnc4
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:00.866553903 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.tryTakeMVar_closure
.type GHC.MVar.tryTakeMVar_closure, @object
GHC.MVar.tryTakeMVar_closure:
	.quad	GHC.MVar.tryTakeMVar_info


==================== Asm code ====================
2018-03-16 15:55:00.867121541 UTC

.section .text
.align 8
.globl GHC.MVar.tryTakeMVar_entry
.type GHC.MVar.tryTakeMVar_entry, @object
GHC.MVar.tryTakeMVar_entry:
_cncF:
	jmp GHC.MVar.tryTakeMVar1_entry
	.size GHC.MVar.tryTakeMVar_entry, .-GHC.MVar.tryTakeMVar_entry


==================== Asm code ====================
2018-03-16 15:55:00.867687309 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.MVar.tryTakeMVar_info
.type GHC.MVar.tryTakeMVar_info, @object
GHC.MVar.tryTakeMVar_info:
	.quad	GHC.MVar.tryTakeMVar_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 15:55:00.871512497 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.tryPutMVar1_closure
.type GHC.MVar.tryPutMVar1_closure, @object
GHC.MVar.tryPutMVar1_closure:
	.quad	GHC.MVar.tryPutMVar1_info


==================== Asm code ====================
2018-03-16 15:55:00.872390304 UTC

.section .text
.align 8
.globl GHC.MVar.tryPutMVar1_entry
.type GHC.MVar.tryPutMVar1_entry, @object
GHC.MVar.tryPutMVar1_entry:
_cncT:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cncU
_cncV:
	movq $block_cncQ_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cncQ
_cncR:
	movq (%rbx),%rax
	jmp *(%rax)
_cncU:
	movl $GHC.MVar.tryPutMVar1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.MVar.tryPutMVar1_entry, .-GHC.MVar.tryPutMVar1_entry


==================== Asm code ====================
2018-03-16 15:55:00.873025423 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.MVar.tryPutMVar1_info
.type GHC.MVar.tryPutMVar1_info, @object
GHC.MVar.tryPutMVar1_info:
	.quad	GHC.MVar.tryPutMVar1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:55:00.874132461 UTC

.section .text
.align 8
_cncQ:
_cncQ:
	movq 8(%rbp),%rax
	movq $block_cncY_info,8(%rbp)
	movq %rax,%r14
	movq 7(%rbx),%rbx
	addq $8,%rbp
	jmp stg_tryPutMVar#
	.size _cncQ, .-_cncQ


==================== Asm code ====================
2018-03-16 15:55:00.874706671 UTC

.section .data.rel.ro
.align 8
.align 1
block_cncQ_info:
	.quad	_cncQ
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:00.875376088 UTC

.section .text
.align 8
_cncY:
_cncY:
	testq %rbx,%rbx
	je _cnd5
_cnd4:
	movl $GHC.Types.True_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cnd5:
	movl $GHC.Types.False_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cncY, .-_cncY


==================== Asm code ====================
2018-03-16 15:55:00.875964122 UTC

.section .data.rel.ro
.align 8
.align 1
block_cncY_info:
	.quad	_cncY
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:00.878078431 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.tryPutMVar_closure
.type GHC.MVar.tryPutMVar_closure, @object
GHC.MVar.tryPutMVar_closure:
	.quad	GHC.MVar.tryPutMVar_info


==================== Asm code ====================
2018-03-16 15:55:00.878675623 UTC

.section .text
.align 8
.globl GHC.MVar.tryPutMVar_entry
.type GHC.MVar.tryPutMVar_entry, @object
GHC.MVar.tryPutMVar_entry:
_cndp:
	jmp GHC.MVar.tryPutMVar1_entry
	.size GHC.MVar.tryPutMVar_entry, .-GHC.MVar.tryPutMVar_entry


==================== Asm code ====================
2018-03-16 15:55:00.879204831 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.MVar.tryPutMVar_info
.type GHC.MVar.tryPutMVar_info, @object
GHC.MVar.tryPutMVar_info:
	.quad	GHC.MVar.tryPutMVar_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:55:00.882913838 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.tryReadMVar1_closure
.type GHC.MVar.tryReadMVar1_closure, @object
GHC.MVar.tryReadMVar1_closure:
	.quad	GHC.MVar.tryReadMVar1_info


==================== Asm code ====================
2018-03-16 15:55:00.883684084 UTC

.section .text
.align 8
.globl GHC.MVar.tryReadMVar1_entry
.type GHC.MVar.tryReadMVar1_entry, @object
GHC.MVar.tryReadMVar1_entry:
_cndD:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cndE
_cndF:
	movq $block_cndA_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cndA
_cndB:
	movq (%rbx),%rax
	jmp *(%rax)
_cndE:
	movl $GHC.MVar.tryReadMVar1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.MVar.tryReadMVar1_entry, .-GHC.MVar.tryReadMVar1_entry


==================== Asm code ====================
2018-03-16 15:55:00.884315357 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.MVar.tryReadMVar1_info
.type GHC.MVar.tryReadMVar1_info, @object
GHC.MVar.tryReadMVar1_info:
	.quad	GHC.MVar.tryReadMVar1_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 15:55:00.884977849 UTC

.section .text
.align 8
_cndA:
_cndA:
	movq $block_cndI_info,(%rbp)
	movq 7(%rbx),%rbx
	jmp stg_tryReadMVar#
	.size _cndA, .-_cndA


==================== Asm code ====================
2018-03-16 15:55:00.885628117 UTC

.section .data.rel.ro
.align 8
.align 1
block_cndA_info:
	.quad	_cndA
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:00.886260453 UTC

.section .text
.align 8
_cndI:
_cndI:
	movq %r14,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp _cndK
	.size _cndI, .-_cndI


==================== Asm code ====================
2018-03-16 15:55:00.88682971 UTC

.section .data.rel.ro
.align 8
.align 1
block_cndI_info:
	.quad	_cndI
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:00.887596941 UTC

.section .text
.align 8
_cndK:
_cndK:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cndP
_cndO:
	cmpq $0,16(%rbp)
	je _cndV
_cndU:
	movq $GHC.Base.Just_con_info,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cndV:
	addq $-16,%r12
	movl $GHC.Base.Nothing_closure+1,%ebx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cndP:
	movq $16,904(%r13)
	movq $block_cndK_info,(%rbp)
	jmp stg_gc_noregs
	.size _cndK, .-_cndK


==================== Asm code ====================
2018-03-16 15:55:00.888254733 UTC

.section .data.rel.ro
.align 8
.align 1
block_cndK_info:
	.quad	_cndK
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:00.89067217 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.tryReadMVar_closure
.type GHC.MVar.tryReadMVar_closure, @object
GHC.MVar.tryReadMVar_closure:
	.quad	GHC.MVar.tryReadMVar_info


==================== Asm code ====================
2018-03-16 15:55:00.891265999 UTC

.section .text
.align 8
.globl GHC.MVar.tryReadMVar_entry
.type GHC.MVar.tryReadMVar_entry, @object
GHC.MVar.tryReadMVar_entry:
_cnel:
	jmp GHC.MVar.tryReadMVar1_entry
	.size GHC.MVar.tryReadMVar_entry, .-GHC.MVar.tryReadMVar_entry


==================== Asm code ====================
2018-03-16 15:55:00.891806956 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.MVar.tryReadMVar_info
.type GHC.MVar.tryReadMVar_info, @object
GHC.MVar.tryReadMVar_info:
	.quad	GHC.MVar.tryReadMVar_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 15:55:00.895966285 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.isEmptyMVar1_closure
.type GHC.MVar.isEmptyMVar1_closure, @object
GHC.MVar.isEmptyMVar1_closure:
	.quad	GHC.MVar.isEmptyMVar1_info


==================== Asm code ====================
2018-03-16 15:55:00.896800098 UTC

.section .text
.align 8
sat_smWj_entry:
_cneL:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cneM
_cneN:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	cmpq $0,16(%rbx)
	je _cneK
_cneJ:
	movl $GHC.Types.True_closure+2,%ebx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cneM:
	jmp *-16(%r13)
_cneK:
	movl $GHC.Types.False_closure+1,%ebx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_smWj_entry, .-sat_smWj_entry


==================== Asm code ====================
2018-03-16 15:55:00.897580005 UTC

.section .data.rel.ro
.align 8
.align 1
sat_smWj_info:
	.quad	sat_smWj_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 15:55:00.89831084 UTC

.section .text
.align 8
.globl GHC.MVar.isEmptyMVar1_entry
.type GHC.MVar.isEmptyMVar1_entry, @object
GHC.MVar.isEmptyMVar1_entry:
_cneO:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cneP
_cneQ:
	movq $block_cnew_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cnew
_cnex:
	movq (%rbx),%rax
	jmp *(%rax)
_cneP:
	movl $GHC.MVar.isEmptyMVar1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.MVar.isEmptyMVar1_entry, .-GHC.MVar.isEmptyMVar1_entry


==================== Asm code ====================
2018-03-16 15:55:00.898936727 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.MVar.isEmptyMVar1_info
.type GHC.MVar.isEmptyMVar1_info, @object
GHC.MVar.isEmptyMVar1_info:
	.quad	GHC.MVar.isEmptyMVar1_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 15:55:00.899571117 UTC

.section .text
.align 8
_cnew:
_cnew:
	movq $block_cneB_info,(%rbp)
	movq 7(%rbx),%rbx
	jmp stg_isEmptyMVar#
	.size _cnew, .-_cnew


==================== Asm code ====================
2018-03-16 15:55:00.900088685 UTC

.section .data.rel.ro
.align 8
.align 1
block_cnew_info:
	.quad	_cnew
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:00.900742137 UTC

.section .text
.align 8
_cneB:
_cneB:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cneU
_cneT:
	movq $sat_smWj_info,-16(%r12)
	movq %rbx,(%r12)
	leaq -16(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cneU:
	movq $24,904(%r13)
	jmp stg_gc_unbx_r1
	.size _cneB, .-_cneB


==================== Asm code ====================
2018-03-16 15:55:00.90141545 UTC

.section .data.rel.ro
.align 8
.align 1
block_cneB_info:
	.quad	_cneB
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:00.90368538 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.isEmptyMVar_closure
.type GHC.MVar.isEmptyMVar_closure, @object
GHC.MVar.isEmptyMVar_closure:
	.quad	GHC.MVar.isEmptyMVar_info


==================== Asm code ====================
2018-03-16 15:55:00.904767423 UTC

.section .text
.align 8
.globl GHC.MVar.isEmptyMVar_entry
.type GHC.MVar.isEmptyMVar_entry, @object
GHC.MVar.isEmptyMVar_entry:
_cnfj:
	jmp GHC.MVar.isEmptyMVar1_entry
	.size GHC.MVar.isEmptyMVar_entry, .-GHC.MVar.isEmptyMVar_entry


==================== Asm code ====================
2018-03-16 15:55:00.905365412 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.MVar.isEmptyMVar_info
.type GHC.MVar.isEmptyMVar_info, @object
GHC.MVar.isEmptyMVar_info:
	.quad	GHC.MVar.isEmptyMVar_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 15:55:00.908385325 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.addMVarFinalizer1_closure
.type GHC.MVar.addMVarFinalizer1_closure, @object
GHC.MVar.addMVarFinalizer1_closure:
	.quad	GHC.MVar.addMVarFinalizer1_info


==================== Asm code ====================
2018-03-16 15:55:00.909126693 UTC

.section .text
.align 8
.globl GHC.MVar.addMVarFinalizer1_entry
.type GHC.MVar.addMVarFinalizer1_entry, @object
GHC.MVar.addMVarFinalizer1_entry:
_cnfx:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cnfB
_cnfC:
	movq $block_cnfu_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cnfu
_cnfv:
	movq (%rbx),%rax
	jmp *(%rax)
_cnfB:
	movl $GHC.MVar.addMVarFinalizer1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.MVar.addMVarFinalizer1_entry, .-GHC.MVar.addMVarFinalizer1_entry


==================== Asm code ====================
2018-03-16 15:55:00.910080498 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.MVar.addMVarFinalizer1_info
.type GHC.MVar.addMVarFinalizer1_info, @object
GHC.MVar.addMVarFinalizer1_info:
	.quad	GHC.MVar.addMVarFinalizer1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:55:00.910729832 UTC

.section .text
.align 8
_cnfu:
_cnfu:
	movq 8(%rbp),%rax
	movq $block_cnfA_info,8(%rbp)
	movq %rax,%rsi
	movl $GHC.Tuple.()_closure+1,%r14d
	movq 7(%rbx),%rbx
	addq $8,%rbp
	jmp stg_mkWeak#
	.size _cnfu, .-_cnfu


==================== Asm code ====================
2018-03-16 15:55:00.911307414 UTC

.section .data.rel.ro
.align 8
.align 1
block_cnfu_info:
	.quad	_cnfu
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:00.911906685 UTC

.section .text
.align 8
_cnfA:
_cnfA:
	movl $GHC.Tuple.()_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cnfA, .-_cnfA


==================== Asm code ====================
2018-03-16 15:55:00.912479019 UTC

.section .data.rel.ro
.align 8
.align 1
block_cnfA_info:
	.quad	_cnfA
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:00.914730404 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.addMVarFinalizer_closure
.type GHC.MVar.addMVarFinalizer_closure, @object
GHC.MVar.addMVarFinalizer_closure:
	.quad	GHC.MVar.addMVarFinalizer_info


==================== Asm code ====================
2018-03-16 15:55:00.915331807 UTC

.section .text
.align 8
.globl GHC.MVar.addMVarFinalizer_entry
.type GHC.MVar.addMVarFinalizer_entry, @object
GHC.MVar.addMVarFinalizer_entry:
_cnfY:
	jmp GHC.MVar.addMVarFinalizer1_entry
	.size GHC.MVar.addMVarFinalizer_entry, .-GHC.MVar.addMVarFinalizer_entry


==================== Asm code ====================
2018-03-16 15:55:00.915833729 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.MVar.addMVarFinalizer_info
.type GHC.MVar.addMVarFinalizer_info, @object
GHC.MVar.addMVarFinalizer_info:
	.quad	GHC.MVar.addMVarFinalizer_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:55:00.917551463 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.MVar.$trModule4_bytes
.type GHC.MVar.$trModule4_bytes, @object
GHC.MVar.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 15:55:00.919146128 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.$trModule3_closure
.type GHC.MVar.$trModule3_closure, @object
GHC.MVar.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.MVar.$trModule4_bytes


==================== Asm code ====================
2018-03-16 15:55:00.920712518 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.MVar.$trModule2_bytes
.type GHC.MVar.$trModule2_bytes, @object
GHC.MVar.$trModule2_bytes:
	.asciz "GHC.MVar"


==================== Asm code ====================
2018-03-16 15:55:00.922359276 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.$trModule1_closure
.type GHC.MVar.$trModule1_closure, @object
GHC.MVar.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.MVar.$trModule2_bytes


==================== Asm code ====================
2018-03-16 15:55:00.9239249 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.$trModule_closure
.type GHC.MVar.$trModule_closure, @object
GHC.MVar.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	GHC.MVar.$trModule3_closure+1
	.quad	GHC.MVar.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:55:00.925850248 UTC

.section .data
.align 8
.align 1
$krep_rmUX_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Types.$tcRealWorld_closure
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:55:00.927416114 UTC

.section .data
.align 8
.align 1
$krep1_rmUY_closure:
	.quad	GHC.Types.KindRepVar_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:55:00.929052231 UTC

.section .data
.align 8
.align 1
$krep2_rmUZ_closure:
	.quad	:_con_info
	.quad	$krep1_rmUY_closure+2
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:55:00.930704143 UTC

.section .data
.align 8
.align 1
$krep3_rmV0_closure:
	.quad	:_con_info
	.quad	$krep_rmUX_closure+1
	.quad	$krep2_rmUZ_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:55:00.932859879 UTC

.section .data
.align 8
.align 1
$krep4_rmV1_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Types.$tcMVar#_closure
	.quad	$krep3_rmV0_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:55:00.934435607 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.MVar.$tcMVar2_bytes
.type GHC.MVar.$tcMVar2_bytes, @object
GHC.MVar.$tcMVar2_bytes:
	.asciz "MVar"


==================== Asm code ====================
2018-03-16 15:55:00.936046702 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.$tcMVar1_closure
.type GHC.MVar.$tcMVar1_closure, @object
GHC.MVar.$tcMVar1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.MVar.$tcMVar2_bytes


==================== Asm code ====================
2018-03-16 15:55:00.937863597 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.$tcMVar_closure
.type GHC.MVar.$tcMVar_closure, @object
GHC.MVar.$tcMVar_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.MVar.$trModule_closure+1
	.quad	GHC.MVar.$tcMVar1_closure+1
	.quad	GHC.Types.krep$*Arr*_closure
	.quad	4036113818353836845
	.quad	5005913288165264115
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:55:00.939507935 UTC

.section .data
.align 8
.align 1
$krep5_rmV2_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.MVar.$tcMVar_closure+1
	.quad	$krep2_rmUZ_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:55:00.941118633 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.$tc'MVar1_closure
.type GHC.MVar.$tc'MVar1_closure, @object
GHC.MVar.$tc'MVar1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep4_rmV1_closure+1
	.quad	$krep5_rmV2_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:55:00.942739207 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.MVar.$tc'MVar3_bytes
.type GHC.MVar.$tc'MVar3_bytes, @object
GHC.MVar.$tc'MVar3_bytes:
	.asciz "'MVar"


==================== Asm code ====================
2018-03-16 15:55:00.944356504 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.$tc'MVar2_closure
.type GHC.MVar.$tc'MVar2_closure, @object
GHC.MVar.$tc'MVar2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.MVar.$tc'MVar3_bytes


==================== Asm code ====================
2018-03-16 15:55:00.946057998 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.$tc'MVar_closure
.type GHC.MVar.$tc'MVar_closure, @object
GHC.MVar.$tc'MVar_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.MVar.$trModule_closure+1
	.quad	GHC.MVar.$tc'MVar2_closure+1
	.quad	GHC.MVar.$tc'MVar1_closure+4
	.quad	1422225975627779673
	.quad	4396512866399833428
	.quad	1
	.quad	3


==================== Asm code ====================
2018-03-16 15:55:00.948493593 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.MVar_closure
.type GHC.MVar.MVar_closure, @object
GHC.MVar.MVar_closure:
	.quad	GHC.MVar.MVar_info


==================== Asm code ====================
2018-03-16 15:55:00.949974865 UTC

.section .text
.align 8
GHC.MVar.MVar_entry:
_cngs:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cngw
_cngv:
	movq $GHC.MVar.MVar_con_info,-8(%r12)
	movq %r14,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cngw:
	movq $16,904(%r13)
	movl $GHC.MVar.MVar_closure,%ebx
	jmp *-8(%r13)
	.size GHC.MVar.MVar_entry, .-GHC.MVar.MVar_entry


==================== Asm code ====================
2018-03-16 15:55:00.950558566 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.MVar.MVar_info:
	.quad	GHC.MVar.MVar_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:55:00.95245896 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
in7p_str:
	.asciz "base:GHC.MVar.MVar"


==================== Asm code ====================
2018-03-16 15:55:00.953017718 UTC

.section .text
.align 8
.globl GHC.MVar.MVar_con_entry
.type GHC.MVar.MVar_con_entry, @object
GHC.MVar.MVar_con_entry:
_cngC:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.MVar.MVar_con_entry, .-GHC.MVar.MVar_con_entry


==================== Asm code ====================
2018-03-16 15:55:00.953590764 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.MVar.MVar_con_info
.type GHC.MVar.MVar_con_info, @object
GHC.MVar.MVar_con_info:
	.quad	GHC.MVar.MVar_con_entry
	.quad	1
	.quad	2
	.quad	in7p_str


==================== Asm code ====================
2018-03-16 15:55:00.955199822 UTC

.section .data.rel.ro
.align 8
.align 1
Sn1V_srt:


==================== Asm code ====================
2018-03-16 15:55:01.194798632 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.$fEqMVar_$c==_closure
.type GHC.MVar.$fEqMVar_$c==_closure, @object
GHC.MVar.$fEqMVar_$c==_closure:
	.quad	GHC.MVar.$fEqMVar_$c==_info


==================== Asm code ====================
2018-03-16 15:55:01.195689133 UTC

.section .text
.align 8
.globl GHC.MVar.$fEqMVar_$c==_entry
.type GHC.MVar.$fEqMVar_$c==_entry, @object
GHC.MVar.$fEqMVar_$c==_entry:
_cnie:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cnii
_cnij:
	leaq block_cnib_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cnib
_cnic:
	movq (%rbx),%rax
	jmp *(%rax)
_cnii:
	leaq GHC.MVar.$fEqMVar_$c==_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.MVar.$fEqMVar_$c==_entry, .-GHC.MVar.$fEqMVar_$c==_entry


==================== Asm code ====================
2018-03-16 15:55:01.196346442 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.MVar.$fEqMVar_$c==_info
.type GHC.MVar.$fEqMVar_$c==_info, @object
GHC.MVar.$fEqMVar_$c==_info:
	.quad	GHC.MVar.$fEqMVar_$c==_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:55:01.197039883 UTC

.section .text
.align 8
_cnib:
_cnib:
	leaq block_cnih_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _cnih
_cnil:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cnib, .-_cnib


==================== Asm code ====================
2018-03-16 15:55:01.197697513 UTC

.section .data.rel.ro
.align 8
.align 1
block_cnib_info:
	.quad	_cnib
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:01.198349829 UTC

.section .text
.align 8
_cnih:
_cnih:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	sete %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl@gotpcrel(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cnih, .-_cnih


==================== Asm code ====================
2018-03-16 15:55:01.198916076 UTC

.section .data.rel.ro
.align 8
.align 1
block_cnih_info:
	.quad	_cnih
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:01.20233726 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.$fEqMVar_$c/=_closure
.type GHC.MVar.$fEqMVar_$c/=_closure, @object
GHC.MVar.$fEqMVar_$c/=_closure:
	.quad	GHC.MVar.$fEqMVar_$c/=_info


==================== Asm code ====================
2018-03-16 15:55:01.203087992 UTC

.section .text
.align 8
.globl GHC.MVar.$fEqMVar_$c/=_entry
.type GHC.MVar.$fEqMVar_$c/=_entry, @object
GHC.MVar.$fEqMVar_$c/=_entry:
_cniU:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cniY
_cniZ:
	leaq block_cniR_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cniR
_cniS:
	movq (%rbx),%rax
	jmp *(%rax)
_cniY:
	leaq GHC.MVar.$fEqMVar_$c/=_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.MVar.$fEqMVar_$c/=_entry, .-GHC.MVar.$fEqMVar_$c/=_entry


==================== Asm code ====================
2018-03-16 15:55:01.203731594 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.MVar.$fEqMVar_$c/=_info
.type GHC.MVar.$fEqMVar_$c/=_info, @object
GHC.MVar.$fEqMVar_$c/=_info:
	.quad	GHC.MVar.$fEqMVar_$c/=_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:55:01.204435666 UTC

.section .text
.align 8
_cniR:
_cniR:
	leaq block_cniX_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _cniX
_cnj1:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _cniR, .-_cniR


==================== Asm code ====================
2018-03-16 15:55:01.20504242 UTC

.section .data.rel.ro
.align 8
.align 1
block_cniR_info:
	.quad	_cniR
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:01.205795702 UTC

.section .text
.align 8
_cniX:
_cniX:
	movq 8(%rbp),%rax
	cmpq 7(%rbx),%rax
	je _cnjh
_cnjb:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cnjh:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cniX, .-_cniX


==================== Asm code ====================
2018-03-16 15:55:01.206429505 UTC

.section .data.rel.ro
.align 8
.align 1
block_cniX_info:
	.quad	_cniX
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:01.208168445 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.$fEqMVar_closure
.type GHC.MVar.$fEqMVar_closure, @object
GHC.MVar.$fEqMVar_closure:
	.quad	GHC.Classes.C:Eq_con_info
	.quad	GHC.MVar.$fEqMVar_$c==_closure+2
	.quad	GHC.MVar.$fEqMVar_$c/=_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:55:01.211041543 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.newEmptyMVar1_closure
.type GHC.MVar.newEmptyMVar1_closure, @object
GHC.MVar.newEmptyMVar1_closure:
	.quad	GHC.MVar.newEmptyMVar1_info


==================== Asm code ====================
2018-03-16 15:55:01.211786286 UTC

.section .text
.align 8
.globl GHC.MVar.newEmptyMVar1_entry
.type GHC.MVar.newEmptyMVar1_entry, @object
GHC.MVar.newEmptyMVar1_entry:
_cnjP:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cnjQ
_cnjR:
	leaq block_cnjM_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp *stg_newMVar#@gotpcrel(%rip)
_cnjQ:
	leaq GHC.MVar.newEmptyMVar1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.MVar.newEmptyMVar1_entry, .-GHC.MVar.newEmptyMVar1_entry


==================== Asm code ====================
2018-03-16 15:55:01.212401572 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.MVar.newEmptyMVar1_info
.type GHC.MVar.newEmptyMVar1_info, @object
GHC.MVar.newEmptyMVar1_info:
	.quad	GHC.MVar.newEmptyMVar1_entry
	.quad	0
	.quad	14
	.quad	4294967299


==================== Asm code ====================
2018-03-16 15:55:01.213098251 UTC

.section .text
.align 8
_cnjM:
_cnjM:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cnjU
_cnjT:
	leaq GHC.MVar.MVar_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cnjU:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _cnjM, .-_cnjM


==================== Asm code ====================
2018-03-16 15:55:01.2137412 UTC

.section .data.rel.ro
.align 8
.align 1
block_cnjM_info:
	.quad	_cnjM
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:01.21572335 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.newEmptyMVar_closure
.type GHC.MVar.newEmptyMVar_closure, @object
GHC.MVar.newEmptyMVar_closure:
	.quad	GHC.MVar.newEmptyMVar_info


==================== Asm code ====================
2018-03-16 15:55:01.216278819 UTC

.section .text
.align 8
.globl GHC.MVar.newEmptyMVar_entry
.type GHC.MVar.newEmptyMVar_entry, @object
GHC.MVar.newEmptyMVar_entry:
_cnka:
	jmp GHC.MVar.newEmptyMVar1_entry
	.size GHC.MVar.newEmptyMVar_entry, .-GHC.MVar.newEmptyMVar_entry


==================== Asm code ====================
2018-03-16 15:55:01.216838807 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.MVar.newEmptyMVar_info
.type GHC.MVar.newEmptyMVar_info, @object
GHC.MVar.newEmptyMVar_info:
	.quad	GHC.MVar.newEmptyMVar_entry
	.quad	0
	.quad	14
	.quad	4294967299


==================== Asm code ====================
2018-03-16 15:55:01.219504706 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.takeMVar1_closure
.type GHC.MVar.takeMVar1_closure, @object
GHC.MVar.takeMVar1_closure:
	.quad	GHC.MVar.takeMVar1_info


==================== Asm code ====================
2018-03-16 15:55:01.22028831 UTC

.section .text
.align 8
.globl GHC.MVar.takeMVar1_entry
.type GHC.MVar.takeMVar1_entry, @object
GHC.MVar.takeMVar1_entry:
_cnko:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cnkp
_cnkq:
	leaq block_cnkl_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cnkl
_cnkm:
	movq (%rbx),%rax
	jmp *(%rax)
_cnkp:
	leaq GHC.MVar.takeMVar1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.MVar.takeMVar1_entry, .-GHC.MVar.takeMVar1_entry


==================== Asm code ====================
2018-03-16 15:55:01.2209309 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.MVar.takeMVar1_info
.type GHC.MVar.takeMVar1_info, @object
GHC.MVar.takeMVar1_info:
	.quad	GHC.MVar.takeMVar1_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 15:55:01.221572536 UTC

.section .text
.align 8
_cnkl:
_cnkl:
	movq 7(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_takeMVar#@gotpcrel(%rip)
	.size _cnkl, .-_cnkl


==================== Asm code ====================
2018-03-16 15:55:01.222109765 UTC

.section .data.rel.ro
.align 8
.align 1
block_cnkl_info:
	.quad	_cnkl
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:01.22476909 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.takeMVar_closure
.type GHC.MVar.takeMVar_closure, @object
GHC.MVar.takeMVar_closure:
	.quad	GHC.MVar.takeMVar_info


==================== Asm code ====================
2018-03-16 15:55:01.225372674 UTC

.section .text
.align 8
.globl GHC.MVar.takeMVar_entry
.type GHC.MVar.takeMVar_entry, @object
GHC.MVar.takeMVar_entry:
_cnkJ:
	jmp GHC.MVar.takeMVar1_entry
	.size GHC.MVar.takeMVar_entry, .-GHC.MVar.takeMVar_entry


==================== Asm code ====================
2018-03-16 15:55:01.225877006 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.MVar.takeMVar_info
.type GHC.MVar.takeMVar_info, @object
GHC.MVar.takeMVar_info:
	.quad	GHC.MVar.takeMVar_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 15:55:01.228523236 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.readMVar1_closure
.type GHC.MVar.readMVar1_closure, @object
GHC.MVar.readMVar1_closure:
	.quad	GHC.MVar.readMVar1_info


==================== Asm code ====================
2018-03-16 15:55:01.229901041 UTC

.section .text
.align 8
.globl GHC.MVar.readMVar1_entry
.type GHC.MVar.readMVar1_entry, @object
GHC.MVar.readMVar1_entry:
_cnkX:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cnkY
_cnkZ:
	leaq block_cnkU_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cnkU
_cnkV:
	movq (%rbx),%rax
	jmp *(%rax)
_cnkY:
	leaq GHC.MVar.readMVar1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.MVar.readMVar1_entry, .-GHC.MVar.readMVar1_entry


==================== Asm code ====================
2018-03-16 15:55:01.230599079 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.MVar.readMVar1_info
.type GHC.MVar.readMVar1_info, @object
GHC.MVar.readMVar1_info:
	.quad	GHC.MVar.readMVar1_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 15:55:01.231210264 UTC

.section .text
.align 8
_cnkU:
_cnkU:
	movq 7(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_readMVar#@gotpcrel(%rip)
	.size _cnkU, .-_cnkU


==================== Asm code ====================
2018-03-16 15:55:01.231773339 UTC

.section .data.rel.ro
.align 8
.align 1
block_cnkU_info:
	.quad	_cnkU
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:01.233821474 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.readMVar_closure
.type GHC.MVar.readMVar_closure, @object
GHC.MVar.readMVar_closure:
	.quad	GHC.MVar.readMVar_info


==================== Asm code ====================
2018-03-16 15:55:01.234446352 UTC

.section .text
.align 8
.globl GHC.MVar.readMVar_entry
.type GHC.MVar.readMVar_entry, @object
GHC.MVar.readMVar_entry:
_cnli:
	jmp GHC.MVar.readMVar1_entry
	.size GHC.MVar.readMVar_entry, .-GHC.MVar.readMVar_entry


==================== Asm code ====================
2018-03-16 15:55:01.234988332 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.MVar.readMVar_info
.type GHC.MVar.readMVar_info, @object
GHC.MVar.readMVar_info:
	.quad	GHC.MVar.readMVar_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 15:55:01.238249115 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.putMVar1_closure
.type GHC.MVar.putMVar1_closure, @object
GHC.MVar.putMVar1_closure:
	.quad	GHC.MVar.putMVar1_info


==================== Asm code ====================
2018-03-16 15:55:01.239012216 UTC

.section .text
.align 8
.globl GHC.MVar.putMVar1_entry
.type GHC.MVar.putMVar1_entry, @object
GHC.MVar.putMVar1_entry:
_cnlw:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cnlA
_cnlB:
	leaq block_cnlt_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cnlt
_cnlu:
	movq (%rbx),%rax
	jmp *(%rax)
_cnlA:
	leaq GHC.MVar.putMVar1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.MVar.putMVar1_entry, .-GHC.MVar.putMVar1_entry


==================== Asm code ====================
2018-03-16 15:55:01.239666994 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.MVar.putMVar1_info
.type GHC.MVar.putMVar1_info, @object
GHC.MVar.putMVar1_info:
	.quad	GHC.MVar.putMVar1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:55:01.240326728 UTC

.section .text
.align 8
_cnlt:
_cnlt:
	movq 8(%rbp),%rax
	leaq block_cnlz_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%r14
	movq 7(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_putMVar#@gotpcrel(%rip)
	.size _cnlt, .-_cnlt


==================== Asm code ====================
2018-03-16 15:55:01.240876857 UTC

.section .data.rel.ro
.align 8
.align 1
block_cnlt_info:
	.quad	_cnlt
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:01.241487984 UTC

.section .text
.align 8
_cnlz:
_cnlz:
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cnlz, .-_cnlz


==================== Asm code ====================
2018-03-16 15:55:01.24202182 UTC

.section .data.rel.ro
.align 8
.align 1
block_cnlz_info:
	.quad	_cnlz
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:01.244116535 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.putMVar_closure
.type GHC.MVar.putMVar_closure, @object
GHC.MVar.putMVar_closure:
	.quad	GHC.MVar.putMVar_info


==================== Asm code ====================
2018-03-16 15:55:01.244688565 UTC

.section .text
.align 8
.globl GHC.MVar.putMVar_entry
.type GHC.MVar.putMVar_entry, @object
GHC.MVar.putMVar_entry:
_cnm0:
	jmp GHC.MVar.putMVar1_entry
	.size GHC.MVar.putMVar_entry, .-GHC.MVar.putMVar_entry


==================== Asm code ====================
2018-03-16 15:55:01.245270494 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.MVar.putMVar_info
.type GHC.MVar.putMVar_info, @object
GHC.MVar.putMVar_info:
	.quad	GHC.MVar.putMVar_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:55:01.248272412 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.newMVar1_closure
.type GHC.MVar.newMVar1_closure, @object
GHC.MVar.newMVar1_closure:
	.quad	GHC.MVar.newMVar1_info


==================== Asm code ====================
2018-03-16 15:55:01.249033268 UTC

.section .text
.align 8
.globl GHC.MVar.newMVar1_entry
.type GHC.MVar.newMVar1_entry, @object
GHC.MVar.newMVar1_entry:
_cnmg:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cnmh
_cnmi:
	leaq block_cnmb_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	jmp *stg_newMVar#@gotpcrel(%rip)
_cnmh:
	leaq GHC.MVar.newMVar1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.MVar.newMVar1_entry, .-GHC.MVar.newMVar1_entry


==================== Asm code ====================
2018-03-16 15:55:01.249689648 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.MVar.newMVar1_info
.type GHC.MVar.newMVar1_info, @object
GHC.MVar.newMVar1_info:
	.quad	GHC.MVar.newMVar1_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 15:55:01.25026249 UTC

.section .text
.align 8
_cnmb:
_cnmb:
	leaq block_cnmd_info(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%r14
	movq %rbx,%rax
	movq %rax,8(%rbp)
	jmp *stg_putMVar#@gotpcrel(%rip)
	.size _cnmb, .-_cnmb


==================== Asm code ====================
2018-03-16 15:55:01.25080743 UTC

.section .data.rel.ro
.align 8
.align 1
block_cnmb_info:
	.quad	_cnmb
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:01.25147898 UTC

.section .text
.align 8
_cnmd:
_cnmd:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cnmm
_cnml:
	leaq GHC.MVar.MVar_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cnmm:
	movq $16,904(%r13)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _cnmd, .-_cnmd


==================== Asm code ====================
2018-03-16 15:55:01.252089202 UTC

.section .data.rel.ro
.align 8
.align 1
block_cnmd_info:
	.quad	_cnmd
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:01.254583458 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.newMVar_closure
.type GHC.MVar.newMVar_closure, @object
GHC.MVar.newMVar_closure:
	.quad	GHC.MVar.newMVar_info


==================== Asm code ====================
2018-03-16 15:55:01.25523264 UTC

.section .text
.align 8
.globl GHC.MVar.newMVar_entry
.type GHC.MVar.newMVar_entry, @object
GHC.MVar.newMVar_entry:
_cnmH:
	jmp GHC.MVar.newMVar1_entry
	.size GHC.MVar.newMVar_entry, .-GHC.MVar.newMVar_entry


==================== Asm code ====================
2018-03-16 15:55:01.255730719 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.MVar.newMVar_info
.type GHC.MVar.newMVar_info, @object
GHC.MVar.newMVar_info:
	.quad	GHC.MVar.newMVar_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 15:55:01.260031795 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.tryTakeMVar1_closure
.type GHC.MVar.tryTakeMVar1_closure, @object
GHC.MVar.tryTakeMVar1_closure:
	.quad	GHC.MVar.tryTakeMVar1_info


==================== Asm code ====================
2018-03-16 15:55:01.260878471 UTC

.section .text
.align 8
.globl GHC.MVar.tryTakeMVar1_entry
.type GHC.MVar.tryTakeMVar1_entry, @object
GHC.MVar.tryTakeMVar1_entry:
_cnmV:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cnmW
_cnmX:
	leaq block_cnmS_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cnmS
_cnmT:
	movq (%rbx),%rax
	jmp *(%rax)
_cnmW:
	leaq GHC.MVar.tryTakeMVar1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.MVar.tryTakeMVar1_entry, .-GHC.MVar.tryTakeMVar1_entry


==================== Asm code ====================
2018-03-16 15:55:01.261568978 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.MVar.tryTakeMVar1_info
.type GHC.MVar.tryTakeMVar1_info, @object
GHC.MVar.tryTakeMVar1_info:
	.quad	GHC.MVar.tryTakeMVar1_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 15:55:01.262216253 UTC

.section .text
.align 8
_cnmS:
_cnmS:
	leaq block_cnn0_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rbx
	jmp *stg_tryTakeMVar#@gotpcrel(%rip)
	.size _cnmS, .-_cnmS


==================== Asm code ====================
2018-03-16 15:55:01.262813866 UTC

.section .data.rel.ro
.align 8
.align 1
block_cnmS_info:
	.quad	_cnmS
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:01.263447713 UTC

.section .text
.align 8
_cnn0:
_cnn0:
	movq %r14,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp _cnn2
	.size _cnn0, .-_cnn0


==================== Asm code ====================
2018-03-16 15:55:01.264002752 UTC

.section .data.rel.ro
.align 8
.align 1
block_cnn0_info:
	.quad	_cnn0
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:01.26474555 UTC

.section .text
.align 8
_cnn2:
_cnn2:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cnn7
_cnn6:
	cmpq $0,16(%rbp)
	je _cnnd
_cnnc:
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cnnd:
	addq $-16,%r12
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cnn7:
	movq $16,904(%r13)
	leaq block_cnn2_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _cnn2, .-_cnn2


==================== Asm code ====================
2018-03-16 15:55:01.265464732 UTC

.section .data.rel.ro
.align 8
.align 1
block_cnn2_info:
	.quad	_cnn2
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:01.267663261 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.tryTakeMVar_closure
.type GHC.MVar.tryTakeMVar_closure, @object
GHC.MVar.tryTakeMVar_closure:
	.quad	GHC.MVar.tryTakeMVar_info


==================== Asm code ====================
2018-03-16 15:55:01.268283277 UTC

.section .text
.align 8
.globl GHC.MVar.tryTakeMVar_entry
.type GHC.MVar.tryTakeMVar_entry, @object
GHC.MVar.tryTakeMVar_entry:
_cnnI:
	jmp GHC.MVar.tryTakeMVar1_entry
	.size GHC.MVar.tryTakeMVar_entry, .-GHC.MVar.tryTakeMVar_entry


==================== Asm code ====================
2018-03-16 15:55:01.268842288 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.MVar.tryTakeMVar_info
.type GHC.MVar.tryTakeMVar_info, @object
GHC.MVar.tryTakeMVar_info:
	.quad	GHC.MVar.tryTakeMVar_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 15:55:01.271981781 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.tryPutMVar1_closure
.type GHC.MVar.tryPutMVar1_closure, @object
GHC.MVar.tryPutMVar1_closure:
	.quad	GHC.MVar.tryPutMVar1_info


==================== Asm code ====================
2018-03-16 15:55:01.272753899 UTC

.section .text
.align 8
.globl GHC.MVar.tryPutMVar1_entry
.type GHC.MVar.tryPutMVar1_entry, @object
GHC.MVar.tryPutMVar1_entry:
_cnnW:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cnnX
_cnnY:
	leaq block_cnnT_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cnnT
_cnnU:
	movq (%rbx),%rax
	jmp *(%rax)
_cnnX:
	leaq GHC.MVar.tryPutMVar1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.MVar.tryPutMVar1_entry, .-GHC.MVar.tryPutMVar1_entry


==================== Asm code ====================
2018-03-16 15:55:01.27340959 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.MVar.tryPutMVar1_info
.type GHC.MVar.tryPutMVar1_info, @object
GHC.MVar.tryPutMVar1_info:
	.quad	GHC.MVar.tryPutMVar1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:55:01.274050472 UTC

.section .text
.align 8
_cnnT:
_cnnT:
	movq 8(%rbp),%rax
	leaq block_cno1_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%r14
	movq 7(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_tryPutMVar#@gotpcrel(%rip)
	.size _cnnT, .-_cnnT


==================== Asm code ====================
2018-03-16 15:55:01.274651661 UTC

.section .data.rel.ro
.align 8
.align 1
block_cnnT_info:
	.quad	_cnnT
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:01.275320286 UTC

.section .text
.align 8
_cno1:
_cno1:
	testq %rbx,%rbx
	je _cno8
_cno7:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cno8:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cno1, .-_cno1


==================== Asm code ====================
2018-03-16 15:55:01.275937367 UTC

.section .data.rel.ro
.align 8
.align 1
block_cno1_info:
	.quad	_cno1
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:01.278606376 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.tryPutMVar_closure
.type GHC.MVar.tryPutMVar_closure, @object
GHC.MVar.tryPutMVar_closure:
	.quad	GHC.MVar.tryPutMVar_info


==================== Asm code ====================
2018-03-16 15:55:01.279192148 UTC

.section .text
.align 8
.globl GHC.MVar.tryPutMVar_entry
.type GHC.MVar.tryPutMVar_entry, @object
GHC.MVar.tryPutMVar_entry:
_cnow:
	jmp GHC.MVar.tryPutMVar1_entry
	.size GHC.MVar.tryPutMVar_entry, .-GHC.MVar.tryPutMVar_entry


==================== Asm code ====================
2018-03-16 15:55:01.279742193 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.MVar.tryPutMVar_info
.type GHC.MVar.tryPutMVar_info, @object
GHC.MVar.tryPutMVar_info:
	.quad	GHC.MVar.tryPutMVar_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:55:01.283512726 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.tryReadMVar1_closure
.type GHC.MVar.tryReadMVar1_closure, @object
GHC.MVar.tryReadMVar1_closure:
	.quad	GHC.MVar.tryReadMVar1_info


==================== Asm code ====================
2018-03-16 15:55:01.284321879 UTC

.section .text
.align 8
.globl GHC.MVar.tryReadMVar1_entry
.type GHC.MVar.tryReadMVar1_entry, @object
GHC.MVar.tryReadMVar1_entry:
_cnoK:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _cnoL
_cnoM:
	leaq block_cnoH_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cnoH
_cnoI:
	movq (%rbx),%rax
	jmp *(%rax)
_cnoL:
	leaq GHC.MVar.tryReadMVar1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.MVar.tryReadMVar1_entry, .-GHC.MVar.tryReadMVar1_entry


==================== Asm code ====================
2018-03-16 15:55:01.284996682 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.MVar.tryReadMVar1_info
.type GHC.MVar.tryReadMVar1_info, @object
GHC.MVar.tryReadMVar1_info:
	.quad	GHC.MVar.tryReadMVar1_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 15:55:01.285644697 UTC

.section .text
.align 8
_cnoH:
_cnoH:
	leaq block_cnoP_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rbx
	jmp *stg_tryReadMVar#@gotpcrel(%rip)
	.size _cnoH, .-_cnoH


==================== Asm code ====================
2018-03-16 15:55:01.286227342 UTC

.section .data.rel.ro
.align 8
.align 1
block_cnoH_info:
	.quad	_cnoH
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:01.286831561 UTC

.section .text
.align 8
_cnoP:
_cnoP:
	movq %r14,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp _cnoR
	.size _cnoP, .-_cnoP


==================== Asm code ====================
2018-03-16 15:55:01.287393977 UTC

.section .data.rel.ro
.align 8
.align 1
block_cnoP_info:
	.quad	_cnoP
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:01.288184699 UTC

.section .text
.align 8
_cnoR:
_cnoR:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cnoW
_cnoV:
	cmpq $0,16(%rbp)
	je _cnp2
_cnp1:
	movq GHC.Base.Just_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -6(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cnp2:
	addq $-16,%r12
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cnoW:
	movq $16,904(%r13)
	leaq block_cnoR_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _cnoR, .-_cnoR


==================== Asm code ====================
2018-03-16 15:55:01.28940851 UTC

.section .data.rel.ro
.align 8
.align 1
block_cnoR_info:
	.quad	_cnoR
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:01.291504466 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.tryReadMVar_closure
.type GHC.MVar.tryReadMVar_closure, @object
GHC.MVar.tryReadMVar_closure:
	.quad	GHC.MVar.tryReadMVar_info


==================== Asm code ====================
2018-03-16 15:55:01.292046855 UTC

.section .text
.align 8
.globl GHC.MVar.tryReadMVar_entry
.type GHC.MVar.tryReadMVar_entry, @object
GHC.MVar.tryReadMVar_entry:
_cnpx:
	jmp GHC.MVar.tryReadMVar1_entry
	.size GHC.MVar.tryReadMVar_entry, .-GHC.MVar.tryReadMVar_entry


==================== Asm code ====================
2018-03-16 15:55:01.292595307 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.MVar.tryReadMVar_info
.type GHC.MVar.tryReadMVar_info, @object
GHC.MVar.tryReadMVar_info:
	.quad	GHC.MVar.tryReadMVar_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 15:55:01.296501336 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.isEmptyMVar1_closure
.type GHC.MVar.isEmptyMVar1_closure, @object
GHC.MVar.isEmptyMVar1_closure:
	.quad	GHC.MVar.isEmptyMVar1_info


==================== Asm code ====================
2018-03-16 15:55:01.297897094 UTC

.section .text
.align 8
sat_snhY_entry:
_cnpX:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cnpY
_cnpZ:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	cmpq $0,16(%rbx)
	je _cnpW
_cnpV:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cnpY:
	jmp *-16(%r13)
_cnpW:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_snhY_entry, .-sat_snhY_entry


==================== Asm code ====================
2018-03-16 15:55:01.298564433 UTC

.section .data.rel.ro
.align 8
.align 1
sat_snhY_info:
	.quad	sat_snhY_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 15:55:01.299307268 UTC

.section .text
.align 8
.globl GHC.MVar.isEmptyMVar1_entry
.type GHC.MVar.isEmptyMVar1_entry, @object
GHC.MVar.isEmptyMVar1_entry:
_cnq0:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _cnq1
_cnq2:
	leaq block_cnpI_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _cnpI
_cnpJ:
	movq (%rbx),%rax
	jmp *(%rax)
_cnq1:
	leaq GHC.MVar.isEmptyMVar1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.MVar.isEmptyMVar1_entry, .-GHC.MVar.isEmptyMVar1_entry


==================== Asm code ====================
2018-03-16 15:55:01.299949528 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.MVar.isEmptyMVar1_info
.type GHC.MVar.isEmptyMVar1_info, @object
GHC.MVar.isEmptyMVar1_info:
	.quad	GHC.MVar.isEmptyMVar1_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 15:55:01.300572535 UTC

.section .text
.align 8
_cnpI:
_cnpI:
	leaq block_cnpN_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rbx
	jmp *stg_isEmptyMVar#@gotpcrel(%rip)
	.size _cnpI, .-_cnpI


==================== Asm code ====================
2018-03-16 15:55:01.301102742 UTC

.section .data.rel.ro
.align 8
.align 1
block_cnpI_info:
	.quad	_cnpI
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:01.301812831 UTC

.section .text
.align 8
_cnpN:
_cnpN:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _cnq6
_cnq5:
	leaq sat_snhY_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,(%r12)
	leaq -16(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_cnq6:
	movq $24,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _cnpN, .-_cnpN


==================== Asm code ====================
2018-03-16 15:55:01.302448869 UTC

.section .data.rel.ro
.align 8
.align 1
block_cnpN_info:
	.quad	_cnpN
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:01.304543814 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.isEmptyMVar_closure
.type GHC.MVar.isEmptyMVar_closure, @object
GHC.MVar.isEmptyMVar_closure:
	.quad	GHC.MVar.isEmptyMVar_info


==================== Asm code ====================
2018-03-16 15:55:01.305152814 UTC

.section .text
.align 8
.globl GHC.MVar.isEmptyMVar_entry
.type GHC.MVar.isEmptyMVar_entry, @object
GHC.MVar.isEmptyMVar_entry:
_cnqB:
	jmp GHC.MVar.isEmptyMVar1_entry
	.size GHC.MVar.isEmptyMVar_entry, .-GHC.MVar.isEmptyMVar_entry


==================== Asm code ====================
2018-03-16 15:55:01.305758676 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.MVar.isEmptyMVar_info
.type GHC.MVar.isEmptyMVar_info, @object
GHC.MVar.isEmptyMVar_info:
	.quad	GHC.MVar.isEmptyMVar_entry
	.quad	0
	.quad	14
	.quad	8589934597


==================== Asm code ====================
2018-03-16 15:55:01.308812259 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.addMVarFinalizer1_closure
.type GHC.MVar.addMVarFinalizer1_closure, @object
GHC.MVar.addMVarFinalizer1_closure:
	.quad	GHC.MVar.addMVarFinalizer1_info


==================== Asm code ====================
2018-03-16 15:55:01.30962877 UTC

.section .text
.align 8
.globl GHC.MVar.addMVarFinalizer1_entry
.type GHC.MVar.addMVarFinalizer1_entry, @object
GHC.MVar.addMVarFinalizer1_entry:
_cnqP:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cnqT
_cnqU:
	leaq block_cnqM_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _cnqM
_cnqN:
	movq (%rbx),%rax
	jmp *(%rax)
_cnqT:
	leaq GHC.MVar.addMVarFinalizer1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.MVar.addMVarFinalizer1_entry, .-GHC.MVar.addMVarFinalizer1_entry


==================== Asm code ====================
2018-03-16 15:55:01.310275161 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.MVar.addMVarFinalizer1_info
.type GHC.MVar.addMVarFinalizer1_info, @object
GHC.MVar.addMVarFinalizer1_info:
	.quad	GHC.MVar.addMVarFinalizer1_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:55:01.310988826 UTC

.section .text
.align 8
_cnqM:
_cnqM:
	movq 8(%rbp),%rax
	leaq block_cnqS_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r14
	movq 7(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_mkWeak#@gotpcrel(%rip)
	.size _cnqM, .-_cnqM


==================== Asm code ====================
2018-03-16 15:55:01.311593792 UTC

.section .data.rel.ro
.align 8
.align 1
block_cnqM_info:
	.quad	_cnqM
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:01.312211706 UTC

.section .text
.align 8
_cnqS:
_cnqS:
	movq GHC.Tuple.()_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _cnqS, .-_cnqS


==================== Asm code ====================
2018-03-16 15:55:01.312764924 UTC

.section .data.rel.ro
.align 8
.align 1
block_cnqS_info:
	.quad	_cnqS
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:55:01.314960613 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.addMVarFinalizer_closure
.type GHC.MVar.addMVarFinalizer_closure, @object
GHC.MVar.addMVarFinalizer_closure:
	.quad	GHC.MVar.addMVarFinalizer_info


==================== Asm code ====================
2018-03-16 15:55:01.3156153 UTC

.section .text
.align 8
.globl GHC.MVar.addMVarFinalizer_entry
.type GHC.MVar.addMVarFinalizer_entry, @object
GHC.MVar.addMVarFinalizer_entry:
_cnrk:
	jmp GHC.MVar.addMVarFinalizer1_entry
	.size GHC.MVar.addMVarFinalizer_entry, .-GHC.MVar.addMVarFinalizer_entry


==================== Asm code ====================
2018-03-16 15:55:01.316157154 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.MVar.addMVarFinalizer_info
.type GHC.MVar.addMVarFinalizer_info, @object
GHC.MVar.addMVarFinalizer_info:
	.quad	GHC.MVar.addMVarFinalizer_entry
	.quad	0
	.quad	14
	.quad	12884901903


==================== Asm code ====================
2018-03-16 15:55:01.317829028 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.MVar.$trModule4_bytes
.type GHC.MVar.$trModule4_bytes, @object
GHC.MVar.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 15:55:01.319439186 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.$trModule3_closure
.type GHC.MVar.$trModule3_closure, @object
GHC.MVar.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.MVar.$trModule4_bytes


==================== Asm code ====================
2018-03-16 15:55:01.321573491 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.MVar.$trModule2_bytes
.type GHC.MVar.$trModule2_bytes, @object
GHC.MVar.$trModule2_bytes:
	.asciz "GHC.MVar"


==================== Asm code ====================
2018-03-16 15:55:01.32316717 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.$trModule1_closure
.type GHC.MVar.$trModule1_closure, @object
GHC.MVar.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.MVar.$trModule2_bytes


==================== Asm code ====================
2018-03-16 15:55:01.32480894 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.$trModule_closure
.type GHC.MVar.$trModule_closure, @object
GHC.MVar.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	GHC.MVar.$trModule3_closure+1
	.quad	GHC.MVar.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:55:01.326506402 UTC

.section .data
.align 8
.align 1
$krep_rmUX_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Types.$tcRealWorld_closure
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:55:01.328192507 UTC

.section .data
.align 8
.align 1
$krep1_rmUY_closure:
	.quad	GHC.Types.KindRepVar_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:55:01.329835971 UTC

.section .data
.align 8
.align 1
$krep2_rmUZ_closure:
	.quad	:_con_info
	.quad	$krep1_rmUY_closure+2
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:55:01.331402639 UTC

.section .data
.align 8
.align 1
$krep3_rmV0_closure:
	.quad	:_con_info
	.quad	$krep_rmUX_closure+1
	.quad	$krep2_rmUZ_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:55:01.333066176 UTC

.section .data
.align 8
.align 1
$krep4_rmV1_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Types.$tcMVar#_closure
	.quad	$krep3_rmV0_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:55:01.335001334 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.MVar.$tcMVar2_bytes
.type GHC.MVar.$tcMVar2_bytes, @object
GHC.MVar.$tcMVar2_bytes:
	.asciz "MVar"


==================== Asm code ====================
2018-03-16 15:55:01.336539972 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.$tcMVar1_closure
.type GHC.MVar.$tcMVar1_closure, @object
GHC.MVar.$tcMVar1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.MVar.$tcMVar2_bytes


==================== Asm code ====================
2018-03-16 15:55:01.338319155 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.$tcMVar_closure
.type GHC.MVar.$tcMVar_closure, @object
GHC.MVar.$tcMVar_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.MVar.$trModule_closure+1
	.quad	GHC.MVar.$tcMVar1_closure+1
	.quad	GHC.Types.krep$*Arr*_closure
	.quad	4036113818353836845
	.quad	5005913288165264115
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:55:01.339985348 UTC

.section .data
.align 8
.align 1
$krep5_rmV2_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.MVar.$tcMVar_closure+1
	.quad	$krep2_rmUZ_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:55:01.342364563 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.$tc'MVar1_closure
.type GHC.MVar.$tc'MVar1_closure, @object
GHC.MVar.$tc'MVar1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep4_rmV1_closure+1
	.quad	$krep5_rmV2_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:55:01.343979067 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.MVar.$tc'MVar3_bytes
.type GHC.MVar.$tc'MVar3_bytes, @object
GHC.MVar.$tc'MVar3_bytes:
	.asciz "'MVar"


==================== Asm code ====================
2018-03-16 15:55:01.34610844 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.$tc'MVar2_closure
.type GHC.MVar.$tc'MVar2_closure, @object
GHC.MVar.$tc'MVar2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.MVar.$tc'MVar3_bytes


==================== Asm code ====================
2018-03-16 15:55:01.347780271 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.$tc'MVar_closure
.type GHC.MVar.$tc'MVar_closure, @object
GHC.MVar.$tc'MVar_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.MVar.$trModule_closure+1
	.quad	GHC.MVar.$tc'MVar2_closure+1
	.quad	GHC.MVar.$tc'MVar1_closure+4
	.quad	1422225975627779673
	.quad	4396512866399833428
	.quad	1
	.quad	3


==================== Asm code ====================
2018-03-16 15:55:01.350251986 UTC

.section .data
.align 8
.align 1
.globl GHC.MVar.MVar_closure
.type GHC.MVar.MVar_closure, @object
GHC.MVar.MVar_closure:
	.quad	GHC.MVar.MVar_info


==================== Asm code ====================
2018-03-16 15:55:01.351066245 UTC

.section .text
.align 8
GHC.MVar.MVar_entry:
_cnrO:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _cnrS
_cnrR:
	leaq GHC.MVar.MVar_con_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	leaq -7(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_cnrS:
	movq $16,904(%r13)
	leaq GHC.MVar.MVar_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.MVar.MVar_entry, .-GHC.MVar.MVar_entry


==================== Asm code ====================
2018-03-16 15:55:01.351717011 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.MVar.MVar_info:
	.quad	GHC.MVar.MVar_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:55:01.354193809 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
ins0_str:
	.asciz "base:GHC.MVar.MVar"


==================== Asm code ====================
2018-03-16 15:55:01.354798529 UTC

.section .text
.align 8
.globl GHC.MVar.MVar_con_entry
.type GHC.MVar.MVar_con_entry, @object
GHC.MVar.MVar_con_entry:
_cnrZ:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.MVar.MVar_con_entry, .-GHC.MVar.MVar_con_entry


==================== Asm code ====================
2018-03-16 15:55:01.355363506 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.MVar.MVar_con_info
.type GHC.MVar.MVar_con_info, @object
GHC.MVar.MVar_con_info:
	.quad	GHC.MVar.MVar_con_entry
	.quad	1
	.quad	2
	.quad	ins0_str


==================== Asm code ====================
2018-03-16 15:55:01.356927458 UTC

.section .data.rel.ro
.align 8
.align 1
Sns6_srt:

