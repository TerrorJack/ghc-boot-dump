
==================== Output Cmm ====================
2018-03-16 16:00:29.232096537 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:00:29.232972048 UTC

[section ""data" . GHC.TypeLits.symbolSing_closure" {
     GHC.TypeLits.symbolSing_closure:
         const GHC.TypeLits.symbolSing_info;
 },
 GHC.TypeLits.symbolSing_entry() //  [R2]
         { info_tbl: [(c5tnf,
                       label: GHC.TypeLits.symbolSing_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tnf: // global
           R1 = R2 & (-8);
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.233877846 UTC

[section ""data" . GHC.TypeLits.natVal1_closure" {
     GHC.TypeLits.natVal1_closure:
         const GHC.TypeLits.natVal1_info;
 },
 GHC.TypeLits.natVal1_entry() //  [R2]
         { info_tbl: [(c5tnm,
                       label: GHC.TypeLits.natVal1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tnm: // global
           R1 = R2 & (-8);
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.23472251 UTC

[section ""data" . GHC.TypeLits.natVal_closure" {
     GHC.TypeLits.natVal_closure:
         const GHC.TypeLits.natVal_info;
 },
 GHC.TypeLits.natVal_entry() //  [R2, R3]
         { info_tbl: [(c5tnt,
                       label: GHC.TypeLits.natVal_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tnt: // global
           R3 = R3;
           R2 = R2;
           call GHC.TypeLits.natVal1_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.235555918 UTC

[section ""data" . GHC.TypeLits.symbolVal1_closure" {
     GHC.TypeLits.symbolVal1_closure:
         const GHC.TypeLits.symbolVal1_info;
 },
 GHC.TypeLits.symbolVal1_entry() //  [R2]
         { info_tbl: [(c5tnA,
                       label: GHC.TypeLits.symbolVal1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tnA: // global
           R1 = R2 & (-8);
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.236438765 UTC

[section ""data" . GHC.TypeLits.symbolVal_closure" {
     GHC.TypeLits.symbolVal_closure:
         const GHC.TypeLits.symbolVal_info;
 },
 GHC.TypeLits.symbolVal_entry() //  [R2, R3]
         { info_tbl: [(c5tnH,
                       label: GHC.TypeLits.symbolVal_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tnH: // global
           R3 = R3;
           R2 = R2;
           call GHC.TypeLits.symbolVal1_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.237228471 UTC

[section ""data" . GHC.TypeLits.sameSymbol1_closure" {
     GHC.TypeLits.sameSymbol1_closure:
         const GHC.Base.Just_con_info;
         const Data.Type.Equality.$WRefl_closure;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.23825942 UTC

[section ""data" . GHC.TypeLits.sameSymbol_closure" {
     GHC.TypeLits.sameSymbol_closure:
         const GHC.TypeLits.sameSymbol_info;
 },
 GHC.TypeLits.sameSymbol_entry() //  [R2, R3, R4, R5]
         { info_tbl: [(c5tnU,
                       label: GHC.TypeLits.sameSymbol_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 24} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tnU: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5tnV; else goto c5tnW;
       c5tnV: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.sameSymbol_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5tnW: // global
           I64[Sp - 8] = block_c5tnO_info;
           R3 = R3;
           R2 = R2;
           Sp = Sp - 8;
           call GHC.Base.eqString_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 _c5tnO() //  [R1]
         { info_tbl: [(c5tnO,
                       label: block_c5tnO_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tnO: // global
           if (R1 & 7 == 1) goto c5tnR; else goto c5tnS;
       c5tnR: // global
           R1 = GHC.Base.Nothing_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5tnS: // global
           R1 = GHC.TypeLits.sameSymbol1_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.240728314 UTC

[section ""data" . GHC.TypeLits.$fShowSomeSymbol_$cshowsPrec_closure" {
     GHC.TypeLits.$fShowSomeSymbol_$cshowsPrec_closure:
         const GHC.TypeLits.$fShowSomeSymbol_$cshowsPrec_info;
         const 0;
 },
 sat_s5tl9_entry() //  [R1]
         { info_tbl: [(c5toh,
                       label: sat_s5tl9_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5toh: // global
           _s5tl9::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c5toi; else goto c5toj;
       c5toj: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5tol; else goto c5tok;
       c5tol: // global
           HpAlloc = 24;
           goto c5toi;
       c5toi: // global
           R1 = _s5tl9::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5tok: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5tl9::P64;
           _s5tl4::P64 = P64[_s5tl9::P64 + 16];
           _s5tl6::P64 = P64[_s5tl9::P64 + 24];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.$fShow(,)3_closure;
           P64[Hp] = _s5tl4::P64;
           R3 = Hp - 14;
           R2 = _s5tl6::P64;
           Sp = Sp - 16;
           call GHC.Show.showLitString_entry(R3,
                                             R2) args: 24, res: 0, upd: 24;
     }
 },
 GHC.TypeLits.$fShowSomeSymbol_$cshowsPrec_entry() //  [R2, R3, R4]
         { info_tbl: [(c5tom,
                       label: GHC.TypeLits.$fShowSomeSymbol_$cshowsPrec_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tom: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5too; else goto c5top;
       c5too: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.$fShowSomeSymbol_$cshowsPrec_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5top: // global
           I64[Sp - 16] = block_c5to7_info;
           R1 = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5tot; else goto c5to8;
       u5tot: // global
           call _c5to7(R1) args: 0, res: 0, upd: 0;
       c5to8: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5to7() //  [R1]
         { info_tbl: [(c5to7,
                       label: block_c5to7_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5to7: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c5tos; else goto c5tor;
       c5tos: // global
           HpAlloc = 56;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5tor: // global
           _s5tl6::P64 = P64[R1 + 7];
           I64[Hp - 48] = sat_s5tl9_info;
           P64[Hp - 32] = P64[Sp + 8];
           P64[Hp - 24] = _s5tl6::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.$fShow(,)3_closure;
           P64[Hp] = Hp - 48;
           R1 = Hp - 14;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.242417232 UTC

[section ""data" . GHC.TypeLits.$fShowSomeSymbol2_closure" {
     GHC.TypeLits.$fShowSomeSymbol2_closure:
         const :_con_info;
         const GHC.Show.$fShow(,)3_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.243378953 UTC

[section ""data" . GHC.TypeLits.$fShowSomeSymbol_$cshow_closure" {
     GHC.TypeLits.$fShowSomeSymbol_$cshow_closure:
         const GHC.TypeLits.$fShowSomeSymbol_$cshow_info;
         const 0;
 },
 sat_s5tle_entry() //  [R1]
         { info_tbl: [(c5toI,
                       label: sat_s5tle_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5toI: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5toJ; else goto c5toK;
       c5toJ: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5toK: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = GHC.TypeLits.$fShowSomeSymbol2_closure+2;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Show.showLitString_entry(R3,
                                             R2) args: 24, res: 0, upd: 24;
     }
 },
 GHC.TypeLits.$fShowSomeSymbol_$cshow_entry() //  [R2]
         { info_tbl: [(c5toL,
                       label: GHC.TypeLits.$fShowSomeSymbol_$cshow_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5toL: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5toN; else goto c5toO;
       c5toN: // global
           R2 = R2;
           R1 = GHC.TypeLits.$fShowSomeSymbol_$cshow_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5toO: // global
           I64[Sp - 8] = block_c5toz_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5toS; else goto c5toA;
       u5toS: // global
           call _c5toz(R1) args: 0, res: 0, upd: 0;
       c5toA: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5toz() //  [R1]
         { info_tbl: [(c5toz,
                       label: block_c5toz_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5toz: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5toR; else goto c5toQ;
       c5toR: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5toQ: // global
           _s5tlc::P64 = P64[R1 + 7];
           I64[Hp - 40] = sat_s5tle_info;
           P64[Hp - 24] = _s5tlc::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.$fShow(,)3_closure;
           P64[Hp] = Hp - 40;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.245208414 UTC

[section ""data" . GHC.TypeLits.$fShowSomeSymbol1_closure" {
     GHC.TypeLits.$fShowSomeSymbol1_closure:
         const GHC.TypeLits.$fShowSomeSymbol1_info;
         const 0;
 },
 sat_s5tll_entry() //  [R1]
         { info_tbl: [(c5tp7,
                       label: sat_s5tll_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tp7: // global
           _s5tll::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c5tp8; else goto c5tp9;
       c5tp9: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5tpb; else goto c5tpa;
       c5tpb: // global
           HpAlloc = 24;
           goto c5tp8;
       c5tp8: // global
           R1 = _s5tll::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5tpa: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5tll::P64;
           _s5tlg::P64 = P64[_s5tll::P64 + 16];
           _s5tli::P64 = P64[_s5tll::P64 + 24];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.$fShow(,)3_closure;
           P64[Hp] = _s5tlg::P64;
           R3 = Hp - 14;
           R2 = _s5tli::P64;
           Sp = Sp - 16;
           call GHC.Show.showLitString_entry(R3,
                                             R2) args: 24, res: 0, upd: 24;
     }
 },
 GHC.TypeLits.$fShowSomeSymbol1_entry() //  [R2, R3]
         { info_tbl: [(c5tpc,
                       label: GHC.TypeLits.$fShowSomeSymbol1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tpc: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5tpe; else goto c5tpf;
       c5tpe: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.$fShowSomeSymbol1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5tpf: // global
           I64[Sp - 16] = block_c5toX_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5tpj; else goto c5toY;
       u5tpj: // global
           call _c5toX(R1) args: 0, res: 0, upd: 0;
       c5toY: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5toX() //  [R1]
         { info_tbl: [(c5toX,
                       label: block_c5toX_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5toX: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c5tpi; else goto c5tph;
       c5tpi: // global
           HpAlloc = 56;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5tph: // global
           _s5tli::P64 = P64[R1 + 7];
           I64[Hp - 48] = sat_s5tll_info;
           P64[Hp - 32] = P64[Sp + 8];
           P64[Hp - 24] = _s5tli::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.$fShow(,)3_closure;
           P64[Hp] = Hp - 48;
           R1 = Hp - 14;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.246931375 UTC

[section ""data" . GHC.TypeLits.$fShowSomeSymbol_$cshowList_closure" {
     GHC.TypeLits.$fShowSomeSymbol_$cshowList_closure:
         const GHC.TypeLits.$fShowSomeSymbol_$cshowList_info;
         const 0;
 },
 GHC.TypeLits.$fShowSomeSymbol_$cshowList_entry() //  [R2, R3]
         { info_tbl: [(c5tpo,
                       label: GHC.TypeLits.$fShowSomeSymbol_$cshowList_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tpo: // global
           R4 = R3;
           R3 = R2;
           R2 = GHC.TypeLits.$fShowSomeSymbol1_closure+2;
           call GHC.Show.showList___entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.247625574 UTC

[section ""data" . GHC.TypeLits.$fShowSomeSymbol_closure" {
     GHC.TypeLits.$fShowSomeSymbol_closure:
         const GHC.Show.C:Show_con_info;
         const GHC.TypeLits.$fShowSomeSymbol_$cshowsPrec_closure+3;
         const GHC.TypeLits.$fShowSomeSymbol_$cshow_closure+1;
         const GHC.TypeLits.$fShowSomeSymbol_$cshowList_closure+2;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.248516284 UTC

[section ""data" . GHC.TypeLits.$fOrdSomeSymbol_$ccompare_closure" {
     GHC.TypeLits.$fOrdSomeSymbol_$ccompare_closure:
         const GHC.TypeLits.$fOrdSomeSymbol_$ccompare_info;
 },
 GHC.TypeLits.$fOrdSomeSymbol_$ccompare_entry() //  [R2, R3]
         { info_tbl: [(c5tpy,
                       label: GHC.TypeLits.$fOrdSomeSymbol_$ccompare_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tpy: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5tpC; else goto c5tpD;
       c5tpC: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.$fOrdSomeSymbol_$ccompare_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5tpD: // global
           I64[Sp - 16] = block_c5tpv_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5tpL; else goto c5tpw;
       u5tpL: // global
           call _c5tpv(R1) args: 0, res: 0, upd: 0;
       c5tpw: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5tpv() //  [R1]
         { info_tbl: [(c5tpv,
                       label: block_c5tpv_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tpv: // global
           I64[Sp] = block_c5tpB_info;
           _s5tlr::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s5tlr::P64;
           if (R1 & 7 != 0) goto u5tpK; else goto c5tpF;
       u5tpK: // global
           call _c5tpB(R1) args: 0, res: 0, upd: 0;
       c5tpF: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5tpB() //  [R1]
         { info_tbl: [(c5tpB,
                       label: block_c5tpB_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tpB: // global
           R3 = P64[R1 + 7];
           R2 = P64[Sp + 8];
           Sp = Sp + 16;
           call GHC.Classes.$fOrd[]_$s$ccompare1_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.250051963 UTC

[section ""data" . GHC.TypeLits.$fEqSomeSymbol_$c==_closure" {
     GHC.TypeLits.$fEqSomeSymbol_$c==_closure:
         const GHC.TypeLits.$fEqSomeSymbol_$c==_info;
 },
 GHC.TypeLits.$fEqSomeSymbol_$c==_entry() //  [R2, R3]
         { info_tbl: [(c5tpT,
                       label: GHC.TypeLits.$fEqSomeSymbol_$c==_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tpT: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5tpX; else goto c5tpY;
       c5tpX: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.$fEqSomeSymbol_$c==_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5tpY: // global
           I64[Sp - 16] = block_c5tpQ_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5tq6; else goto c5tpR;
       u5tq6: // global
           call _c5tpQ(R1) args: 0, res: 0, upd: 0;
       c5tpR: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5tpQ() //  [R1]
         { info_tbl: [(c5tpQ,
                       label: block_c5tpQ_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tpQ: // global
           I64[Sp] = block_c5tpW_info;
           _s5tlz::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s5tlz::P64;
           if (R1 & 7 != 0) goto u5tq5; else goto c5tq0;
       u5tq5: // global
           call _c5tpW(R1) args: 0, res: 0, upd: 0;
       c5tq0: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5tpW() //  [R1]
         { info_tbl: [(c5tpW,
                       label: block_c5tpW_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tpW: // global
           R3 = P64[R1 + 7];
           R2 = P64[Sp + 8];
           Sp = Sp + 16;
           call GHC.Base.eqString_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.251614054 UTC

[section ""data" . GHC.TypeLits.$fEqSomeSymbol_$c/=_closure" {
     GHC.TypeLits.$fEqSomeSymbol_$c/=_closure:
         const GHC.TypeLits.$fEqSomeSymbol_$c/=_info;
 },
 GHC.TypeLits.$fEqSomeSymbol_$c/=_entry() //  [R2, R3]
         { info_tbl: [(c5tqe,
                       label: GHC.TypeLits.$fEqSomeSymbol_$c/=_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tqe: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5tqi; else goto c5tqj;
       c5tqi: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.$fEqSomeSymbol_$c/=_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5tqj: // global
           I64[Sp - 16] = block_c5tqb_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5tqD; else goto c5tqc;
       u5tqD: // global
           call _c5tqb(R1) args: 0, res: 0, upd: 0;
       c5tqc: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5tqb() //  [R1]
         { info_tbl: [(c5tqb,
                       label: block_c5tqb_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tqb: // global
           I64[Sp] = block_c5tqh_info;
           _s5tlH::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s5tlH::P64;
           if (R1 & 7 != 0) goto u5tqC; else goto c5tql;
       u5tqC: // global
           call _c5tqh(R1) args: 0, res: 0, upd: 0;
       c5tql: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5tqh() //  [R1]
         { info_tbl: [(c5tqh,
                       label: block_c5tqh_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tqh: // global
           _s5tlH::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5tqp_info;
           R3 = P64[R1 + 7];
           R2 = _s5tlH::P64;
           Sp = Sp + 8;
           call GHC.Base.eqString_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 _c5tqp() //  [R1]
         { info_tbl: [(c5tqp,
                       label: block_c5tqp_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tqp: // global
           if (R1 & 7 == 1) goto c5tqw; else goto c5tqA;
       c5tqw: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5tqA: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.253003542 UTC

[section ""data" . GHC.TypeLits.$fEqSomeSymbol_closure" {
     GHC.TypeLits.$fEqSomeSymbol_closure:
         const GHC.Classes.C:Eq_con_info;
         const GHC.TypeLits.$fEqSomeSymbol_$c==_closure+2;
         const GHC.TypeLits.$fEqSomeSymbol_$c/=_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.254075219 UTC

[section ""data" . GHC.TypeLits.$fOrdSomeSymbol_$c<_closure" {
     GHC.TypeLits.$fOrdSomeSymbol_$c<_closure:
         const GHC.TypeLits.$fOrdSomeSymbol_$c<_info;
 },
 GHC.TypeLits.$fOrdSomeSymbol_$c<_entry() //  [R2, R3]
         { info_tbl: [(c5tqL,
                       label: GHC.TypeLits.$fOrdSomeSymbol_$c<_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tqL: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5tqP; else goto c5tqQ;
       c5tqP: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.$fOrdSomeSymbol_$c<_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5tqQ: // global
           I64[Sp - 16] = block_c5tqI_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5tra; else goto c5tqJ;
       u5tra: // global
           call _c5tqI(R1) args: 0, res: 0, upd: 0;
       c5tqJ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5tqI() //  [R1]
         { info_tbl: [(c5tqI,
                       label: block_c5tqI_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tqI: // global
           I64[Sp] = block_c5tqO_info;
           _s5tlQ::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s5tlQ::P64;
           if (R1 & 7 != 0) goto u5tr9; else goto c5tqS;
       u5tr9: // global
           call _c5tqO(R1) args: 0, res: 0, upd: 0;
       c5tqS: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5tqO() //  [R1]
         { info_tbl: [(c5tqO,
                       label: block_c5tqO_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tqO: // global
           _s5tlQ::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5tqW_info;
           R3 = P64[R1 + 7];
           R2 = _s5tlQ::P64;
           Sp = Sp + 8;
           call GHC.Classes.$fOrd[]_$s$ccompare1_entry(R3,
                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 _c5tqW() //  [R1]
         { info_tbl: [(c5tqW,
                       label: block_c5tqW_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tqW: // global
           if (R1 & 7 == 1) goto c5tr7; else goto c5tr3;
       c5tr7: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5tr3: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.25587686 UTC

[section ""data" . GHC.TypeLits.$fOrdSomeSymbol_$c>=_closure" {
     GHC.TypeLits.$fOrdSomeSymbol_$c>=_closure:
         const GHC.TypeLits.$fOrdSomeSymbol_$c>=_info;
 },
 GHC.TypeLits.$fOrdSomeSymbol_$c>=_entry() //  [R2, R3]
         { info_tbl: [(c5tri,
                       label: GHC.TypeLits.$fOrdSomeSymbol_$c>=_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tri: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5trm; else goto c5trn;
       c5trm: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.$fOrdSomeSymbol_$c>=_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5trn: // global
           I64[Sp - 16] = block_c5trf_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5trH; else goto c5trg;
       u5trH: // global
           call _c5trf(R1) args: 0, res: 0, upd: 0;
       c5trg: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5trf() //  [R1]
         { info_tbl: [(c5trf,
                       label: block_c5trf_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5trf: // global
           I64[Sp] = block_c5trl_info;
           _s5tlZ::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s5tlZ::P64;
           if (R1 & 7 != 0) goto u5trG; else goto c5trp;
       u5trG: // global
           call _c5trl(R1) args: 0, res: 0, upd: 0;
       c5trp: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5trl() //  [R1]
         { info_tbl: [(c5trl,
                       label: block_c5trl_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5trl: // global
           _s5tlZ::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5trt_info;
           R3 = P64[R1 + 7];
           R2 = _s5tlZ::P64;
           Sp = Sp + 8;
           call GHC.Classes.$fOrd[]_$s$ccompare1_entry(R3,
                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 _c5trt() //  [R1]
         { info_tbl: [(c5trt,
                       label: block_c5trt_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5trt: // global
           if (R1 & 7 == 1) goto c5trE; else goto c5trA;
       c5trE: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5trA: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.257811132 UTC

[section ""data" . GHC.TypeLits.$fOrdSomeSymbol_$c>_closure" {
     GHC.TypeLits.$fOrdSomeSymbol_$c>_closure:
         const GHC.TypeLits.$fOrdSomeSymbol_$c>_info;
 },
 GHC.TypeLits.$fOrdSomeSymbol_$c>_entry() //  [R2, R3]
         { info_tbl: [(c5trP,
                       label: GHC.TypeLits.$fOrdSomeSymbol_$c>_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5trP: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5trT; else goto c5trU;
       c5trT: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.$fOrdSomeSymbol_$c>_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5trU: // global
           I64[Sp - 16] = block_c5trM_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5tse; else goto c5trN;
       u5tse: // global
           call _c5trM(R1) args: 0, res: 0, upd: 0;
       c5trN: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5trM() //  [R1]
         { info_tbl: [(c5trM,
                       label: block_c5trM_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5trM: // global
           I64[Sp] = block_c5trS_info;
           _s5tm8::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s5tm8::P64;
           if (R1 & 7 != 0) goto u5tsd; else goto c5trW;
       u5tsd: // global
           call _c5trS(R1) args: 0, res: 0, upd: 0;
       c5trW: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5trS() //  [R1]
         { info_tbl: [(c5trS,
                       label: block_c5trS_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5trS: // global
           _s5tm8::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5ts0_info;
           R3 = P64[R1 + 7];
           R2 = _s5tm8::P64;
           Sp = Sp + 8;
           call GHC.Classes.$fOrd[]_$s$ccompare1_entry(R3,
                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 _c5ts0() //  [R1]
         { info_tbl: [(c5ts0,
                       label: block_c5ts0_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5ts0: // global
           if (R1 & 7 == 3) goto c5tsb; else goto c5ts7;
       c5tsb: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5ts7: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.259612952 UTC

[section ""data" . GHC.TypeLits.$fOrdSomeSymbol_$c<=_closure" {
     GHC.TypeLits.$fOrdSomeSymbol_$c<=_closure:
         const GHC.TypeLits.$fOrdSomeSymbol_$c<=_info;
 },
 GHC.TypeLits.$fOrdSomeSymbol_$c<=_entry() //  [R2, R3]
         { info_tbl: [(c5tsm,
                       label: GHC.TypeLits.$fOrdSomeSymbol_$c<=_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tsm: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5tsq; else goto c5tsr;
       c5tsq: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.$fOrdSomeSymbol_$c<=_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5tsr: // global
           I64[Sp - 16] = block_c5tsj_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5tsL; else goto c5tsk;
       u5tsL: // global
           call _c5tsj(R1) args: 0, res: 0, upd: 0;
       c5tsk: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5tsj() //  [R1]
         { info_tbl: [(c5tsj,
                       label: block_c5tsj_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tsj: // global
           I64[Sp] = block_c5tsp_info;
           _s5tmh::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s5tmh::P64;
           if (R1 & 7 != 0) goto u5tsK; else goto c5tst;
       u5tsK: // global
           call _c5tsp(R1) args: 0, res: 0, upd: 0;
       c5tst: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5tsp() //  [R1]
         { info_tbl: [(c5tsp,
                       label: block_c5tsp_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tsp: // global
           _s5tmh::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5tsx_info;
           R3 = P64[R1 + 7];
           R2 = _s5tmh::P64;
           Sp = Sp + 8;
           call GHC.Classes.$fOrd[]_$s$ccompare1_entry(R3,
                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 _c5tsx() //  [R1]
         { info_tbl: [(c5tsx,
                       label: block_c5tsx_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tsx: // global
           if (R1 & 7 == 3) goto c5tsI; else goto c5tsE;
       c5tsI: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5tsE: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.261875497 UTC

[section ""data" . GHC.TypeLits.$fOrdSomeSymbol_$cmax_closure" {
     GHC.TypeLits.$fOrdSomeSymbol_$cmax_closure:
         const GHC.TypeLits.$fOrdSomeSymbol_$cmax_info;
 },
 GHC.TypeLits.$fOrdSomeSymbol_$cmax_entry() //  [R2, R3]
         { info_tbl: [(c5tsT,
                       label: GHC.TypeLits.$fOrdSomeSymbol_$cmax_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tsT: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5tsX; else goto c5tsY;
       c5tsX: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.$fOrdSomeSymbol_$cmax_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5tsY: // global
           I64[Sp - 16] = block_c5tsQ_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5tti; else goto c5tsR;
       u5tti: // global
           call _c5tsQ(R1) args: 0, res: 0, upd: 0;
       c5tsR: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5tsQ() //  [R1]
         { info_tbl: [(c5tsQ,
                       label: block_c5tsQ_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tsQ: // global
           I64[Sp - 8] = block_c5tsW_info;
           _s5tmp::P64 = R1;
           _s5tmq::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp] = _s5tmq::P64;
           P64[Sp + 8] = _s5tmp::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5tth; else goto c5tt0;
       u5tth: // global
           call _c5tsW(R1) args: 0, res: 0, upd: 0;
       c5tt0: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5tsW() //  [R1]
         { info_tbl: [(c5tsW,
                       label: block_c5tsW_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tsW: // global
           I64[Sp] = block_c5tt4_info;
           R3 = P64[R1 + 7];
           R2 = P64[Sp + 8];
           P64[Sp + 8] = R1;
           call GHC.Classes.$fOrd[]_$s$ccompare1_entry(R3,
                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 _c5tt4() //  [R1]
         { info_tbl: [(c5tt4,
                       label: block_c5tt4_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tt4: // global
           if (R1 & 7 == 3) goto c5ttf; else goto c5ttb;
       c5ttf: // global
           R1 = P64[Sp + 16] & (-8);
           Sp = Sp + 24;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c5ttb: // global
           R1 = P64[Sp + 8] & (-8);
           Sp = Sp + 24;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.263845295 UTC

[section ""data" . GHC.TypeLits.$fOrdSomeSymbol_$cmin_closure" {
     GHC.TypeLits.$fOrdSomeSymbol_$cmin_closure:
         const GHC.TypeLits.$fOrdSomeSymbol_$cmin_info;
 },
 GHC.TypeLits.$fOrdSomeSymbol_$cmin_entry() //  [R2, R3]
         { info_tbl: [(c5ttq,
                       label: GHC.TypeLits.$fOrdSomeSymbol_$cmin_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5ttq: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5ttu; else goto c5ttv;
       c5ttu: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.$fOrdSomeSymbol_$cmin_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5ttv: // global
           I64[Sp - 16] = block_c5ttn_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5ttP; else goto c5tto;
       u5ttP: // global
           call _c5ttn(R1) args: 0, res: 0, upd: 0;
       c5tto: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5ttn() //  [R1]
         { info_tbl: [(c5ttn,
                       label: block_c5ttn_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5ttn: // global
           I64[Sp - 8] = block_c5ttt_info;
           _s5tmy::P64 = R1;
           _s5tmz::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp] = _s5tmz::P64;
           P64[Sp + 8] = _s5tmy::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5ttO; else goto c5ttx;
       u5ttO: // global
           call _c5ttt(R1) args: 0, res: 0, upd: 0;
       c5ttx: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5ttt() //  [R1]
         { info_tbl: [(c5ttt,
                       label: block_c5ttt_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5ttt: // global
           I64[Sp] = block_c5ttB_info;
           R3 = P64[R1 + 7];
           R2 = P64[Sp + 8];
           P64[Sp + 8] = R1;
           call GHC.Classes.$fOrd[]_$s$ccompare1_entry(R3,
                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 _c5ttB() //  [R1]
         { info_tbl: [(c5ttB,
                       label: block_c5ttB_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5ttB: // global
           if (R1 & 7 == 3) goto c5ttM; else goto c5ttI;
       c5ttM: // global
           R1 = P64[Sp + 8] & (-8);
           Sp = Sp + 24;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c5ttI: // global
           R1 = P64[Sp + 16] & (-8);
           Sp = Sp + 24;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.265373807 UTC

[section ""data" . GHC.TypeLits.$fOrdSomeSymbol_closure" {
     GHC.TypeLits.$fOrdSomeSymbol_closure:
         const GHC.Classes.C:Ord_con_info;
         const GHC.TypeLits.$fEqSomeSymbol_closure+1;
         const GHC.TypeLits.$fOrdSomeSymbol_$ccompare_closure+2;
         const GHC.TypeLits.$fOrdSomeSymbol_$c<_closure+2;
         const GHC.TypeLits.$fOrdSomeSymbol_$c<=_closure+2;
         const GHC.TypeLits.$fOrdSomeSymbol_$c>_closure+2;
         const GHC.TypeLits.$fOrdSomeSymbol_$c>=_closure+2;
         const GHC.TypeLits.$fOrdSomeSymbol_$cmax_closure+2;
         const GHC.TypeLits.$fOrdSomeSymbol_$cmin_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.266193589 UTC

[section ""data" . GHC.TypeLits.natVal'1_closure" {
     GHC.TypeLits.natVal'1_closure:
         const GHC.TypeLits.natVal'1_info;
 },
 GHC.TypeLits.natVal'1_entry() //  [R2]
         { info_tbl: [(c5ttU,
                       label: GHC.TypeLits.natVal'1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5ttU: // global
           R1 = R2 & (-8);
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.267049993 UTC

[section ""data" . GHC.TypeLits.natVal'_closure" {
     GHC.TypeLits.natVal'_closure:
         const GHC.TypeLits.natVal'_info;
 },
 GHC.TypeLits.natVal'_entry() //  [R2]
         { info_tbl: [(c5tu1,
                       label: GHC.TypeLits.natVal'_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tu1: // global
           R2 = R2;
           call GHC.TypeLits.natVal'1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.267917655 UTC

[section ""data" . GHC.TypeLits.symbolVal'1_closure" {
     GHC.TypeLits.symbolVal'1_closure:
         const GHC.TypeLits.symbolVal'1_info;
 },
 GHC.TypeLits.symbolVal'1_entry() //  [R2]
         { info_tbl: [(c5tu8,
                       label: GHC.TypeLits.symbolVal'1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tu8: // global
           R1 = R2 & (-8);
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.268733582 UTC

[section ""data" . GHC.TypeLits.symbolVal'_closure" {
     GHC.TypeLits.symbolVal'_closure:
         const GHC.TypeLits.symbolVal'_info;
 },
 GHC.TypeLits.symbolVal'_entry() //  [R2]
         { info_tbl: [(c5tuf,
                       label: GHC.TypeLits.symbolVal'_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tuf: // global
           R2 = R2;
           call GHC.TypeLits.symbolVal'1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.270896176 UTC

[section ""data" . GHC.TypeLits.someSymbolVal_closure" {
     GHC.TypeLits.someSymbolVal_closure:
         const GHC.TypeLits.someSymbolVal_info;
 },
 GHC.TypeLits.someSymbolVal_entry() //  [R2]
         { info_tbl: [(c5tun,
                       label: GHC.TypeLits.someSymbolVal_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tun: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5tur; else goto c5tuq;
       c5tur: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = GHC.TypeLits.someSymbolVal_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5tuq: // global
           I64[Hp - 16] = GHC.TypeLits.SomeSymbol_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = Data.Proxy.Proxy_closure+1;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.272370094 UTC

[section ""data" . GHC.TypeLits.$fReadSomeSymbol_go_closure" {
     GHC.TypeLits.$fReadSomeSymbol_go_closure:
         const GHC.TypeLits.$fReadSomeSymbol_go_info;
 },
 sat_s5tmT_entry() //  [R1]
         { info_tbl: [(c5tuL,
                       label: sat_s5tmT_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tuL: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5tuM; else goto c5tuN;
       c5tuM: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5tuN: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.TypeLits.$fReadSomeSymbol_go_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 GHC.TypeLits.$fReadSomeSymbol_go_entry() //  [R2]
         { info_tbl: [(c5tuS,
                       label: GHC.TypeLits.$fReadSomeSymbol_go_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tuS: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5tuT; else goto c5tuU;
       c5tuT: // global
           R2 = R2;
           R1 = GHC.TypeLits.$fReadSomeSymbol_go_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5tuU: // global
           I64[Sp - 8] = block_c5tuw_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5tv5; else goto c5tux;
       u5tv5: // global
           call _c5tuw(R1) args: 0, res: 0, upd: 0;
       c5tux: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5tuw() //  [R1]
         { info_tbl: [(c5tuw,
                       label: block_c5tuw_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tuw: // global
           if (R1 & 7 == 1) goto c5tuP; else goto c5tuQ;
       c5tuP: // global
           R1 = []_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5tuQ: // global
           I64[Sp - 8] = block_c5tuC_info;
           _s5tmN::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp] = _s5tmN::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5tv4; else goto c5tuD;
       u5tv4: // global
           call _c5tuC(R1) args: 0, res: 0, upd: 0;
       c5tuD: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5tuC() //  [R1]
         { info_tbl: [(c5tuC,
                       label: block_c5tuC_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tuC: // global
           Hp = Hp + 96;
           if (Hp > HpLim) (likely: False) goto c5tv3; else goto c5tv2;
       c5tv3: // global
           HpAlloc = 96;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5tv2: // global
           _s5tmP::P64 = P64[R1 + 7];
           _s5tmQ::P64 = P64[R1 + 15];
           I64[Hp - 88] = sat_s5tmT_info;
           P64[Hp - 72] = P64[Sp + 8];
           I64[Hp - 64] = GHC.TypeLits.SomeSymbol_con_info;
           P64[Hp - 56] = _s5tmP::P64;
           P64[Hp - 48] = Data.Proxy.Proxy_closure+1;
           I64[Hp - 40] = (,)_con_info;
           P64[Hp - 32] = Hp - 63;
           P64[Hp - 24] = _s5tmQ::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 39;
           P64[Hp] = Hp - 88;
           R1 = Hp - 14;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.274401531 UTC

[section ""data" . GHC.TypeLits.$fReadSomeSymbol_$creadsPrec_closure" {
     GHC.TypeLits.$fReadSomeSymbol_$creadsPrec_closure:
         const GHC.TypeLits.$fReadSomeSymbol_$creadsPrec_info;
         const 0;
 },
 GHC.TypeLits.$fReadSomeSymbol_$creadsPrec_entry() //  [R2, R3]
         { info_tbl: [(c5tvc,
                       label: GHC.TypeLits.$fReadSomeSymbol_$creadsPrec_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tvc: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5tvg; else goto c5tvh;
       c5tvg: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.$fReadSomeSymbol_$creadsPrec_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5tvh: // global
           I64[Sp - 16] = block_c5tva_info;
           R4 = Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure+1;
           _s5tmV::P64 = R3;
           R3 = R2;
           R2 = GHC.Read.$fReadChar2_closure+1;
           P64[Sp - 8] = _s5tmV::P64;
           Sp = Sp - 16;
           call GHC.Read.list3_entry(R4, R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 _c5tva() //  [R1]
         { info_tbl: [(c5tva,
                       label: block_c5tva_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tva: // global
           _s5tmV::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5tvf_info;
           R3 = _s5tmV::P64;
           R2 = R1;
           Sp = Sp + 8;
           call Text.ParserCombinators.ReadP.run_entry(R3,
                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 _c5tvf() //  [R1]
         { info_tbl: [(c5tvf,
                       label: block_c5tvf_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tvf: // global
           R2 = R1;
           Sp = Sp + 8;
           call GHC.TypeLits.$fReadSomeSymbol_go_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.275929663 UTC

[section ""data" . GHC.TypeLits.$fReadSomeSymbol4_closure" {
     GHC.TypeLits.$fReadSomeSymbol4_closure:
         const GHC.TypeLits.$fReadSomeSymbol4_info;
         const 0;
 },
 sat_s5tn0_entry() //  [R1, R2]
         { info_tbl: [(c5tvw,
                       label: sat_s5tn0_info
                       rep:HeapRep 1 ptrs { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tvw: // global
           R3 = R2;
           R2 = P64[R1 + 7];
           call GHC.TypeLits.$fReadSomeSymbol_$creadsPrec_entry(R3,
                                                                R2) args: 8, res: 0, upd: 8;
     }
 },
 GHC.TypeLits.$fReadSomeSymbol4_entry() //  [R2, R3]
         { info_tbl: [(c5tvC,
                       label: GHC.TypeLits.$fReadSomeSymbol4_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tvC: // global
           _s5tmZ::P64 = R3;
           _s5tmY::P64 = R2;
           if ((Sp + -8) < SpLim) (likely: False) goto c5tvD; else goto c5tvE;
       c5tvE: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5tvG; else goto c5tvF;
       c5tvG: // global
           HpAlloc = 16;
           goto c5tvD;
       c5tvD: // global
           R3 = _s5tmZ::P64;
           R2 = _s5tmY::P64;
           R1 = GHC.TypeLits.$fReadSomeSymbol4_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5tvF: // global
           I64[Hp - 8] = sat_s5tn0_info;
           P64[Hp] = _s5tmY::P64;
           I64[Sp - 8] = block_c5tvz_info;
           R3 = _s5tmZ::P64;
           R2 = Hp - 7;
           Sp = Sp - 8;
           call Text.ParserCombinators.ReadP.$wreadS_to_P_entry(R3,
                                                                R2) args: 8, res: 8, upd: 8;
     }
 },
 _c5tvz() //  [R1]
         { info_tbl: [(c5tvz,
                       label: block_c5tvz_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tvz: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5tvJ; else goto c5tvI;
       c5tvJ: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5tvI: // global
           I64[Hp - 8] = Text.ParserCombinators.ReadP.Look_con_info;
           P64[Hp] = R1;
           R1 = Hp - 6;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.27720836 UTC

[section ""data" . GHC.TypeLits.$fReadSomeSymbol3_closure" {
     GHC.TypeLits.$fReadSomeSymbol3_closure:
         const GHC.Types.I#_con_info;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.278164677 UTC

[section ""data" . GHC.TypeLits.$fReadSomeSymbol2_closure" {
     GHC.TypeLits.$fReadSomeSymbol2_closure:
         const GHC.TypeLits.$fReadSomeSymbol2_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.TypeLits.$fReadSomeSymbol2_entry() //  [R1]
         { info_tbl: [(c5tvQ,
                       label: GHC.TypeLits.$fReadSomeSymbol2_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tvQ: // global
           if ((Sp + -40) < SpLim) (likely: False) goto c5tvR; else goto c5tvS;
       c5tvR: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5tvS: // global
           (_c5tvN::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c5tvN::I64 == 0) goto c5tvP; else goto c5tvO;
       c5tvP: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c5tvO: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c5tvN::I64;
           R2 = GHC.TypeLits.$fReadSomeSymbol4_closure+2;
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = GHC.TypeLits.$fReadSomeSymbol3_closure+1;
           P64[Sp - 24] = Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure+1;
           Sp = Sp - 40;
           call GHC.Read.list_entry(R2) args: 48, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.27924141 UTC

[section ""data" . GHC.TypeLits.$fReadSomeSymbol_$creadList_closure" {
     GHC.TypeLits.$fReadSomeSymbol_$creadList_closure:
         const GHC.TypeLits.$fReadSomeSymbol_$creadList_info;
         const 0;
 },
 GHC.TypeLits.$fReadSomeSymbol_$creadList_entry() //  [R2]
         { info_tbl: [(c5tvX,
                       label: GHC.TypeLits.$fReadSomeSymbol_$creadList_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tvX: // global
           R3 = R2;
           R2 = GHC.TypeLits.$fReadSomeSymbol2_closure;
           call Text.ParserCombinators.ReadP.run_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.280236984 UTC

[section ""data" . GHC.TypeLits.$fReadSomeSymbol1_closure" {
     GHC.TypeLits.$fReadSomeSymbol1_closure:
         const GHC.TypeLits.$fReadSomeSymbol1_info;
         const 0;
 },
 GHC.TypeLits.$fReadSomeSymbol1_entry() //  [R2, R3]
         { info_tbl: [(c5tw7,
                       label: GHC.TypeLits.$fReadSomeSymbol1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tw7: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5tw8; else goto c5tw9;
       c5tw8: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.$fReadSomeSymbol1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5tw9: // global
           I64[Sp - 8] = block_c5tw4_info;
           R3 = R3;
           R2 = GHC.TypeLits.$fReadSomeSymbol_$creadList_closure+1;
           Sp = Sp - 8;
           call Text.ParserCombinators.ReadP.$wreadS_to_P_entry(R3,
                                                                R2) args: 8, res: 8, upd: 8;
     }
 },
 _c5tw4() //  [R1]
         { info_tbl: [(c5tw4,
                       label: block_c5tw4_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tw4: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5twc; else goto c5twb;
       c5twc: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5twb: // global
           I64[Hp - 8] = Text.ParserCombinators.ReadP.Look_con_info;
           P64[Hp] = R1;
           R1 = Hp - 6;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.281366265 UTC

[section ""data" . GHC.TypeLits.$fReadSomeSymbol_closure" {
     GHC.TypeLits.$fReadSomeSymbol_closure:
         const GHC.Read.C:Read_con_info;
         const GHC.TypeLits.$fReadSomeSymbol_$creadsPrec_closure+2;
         const GHC.TypeLits.$fReadSomeSymbol_$creadList_closure+1;
         const GHC.TypeLits.$fReadSomeSymbol4_closure+2;
         const GHC.TypeLits.$fReadSomeSymbol1_closure+2;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.281967692 UTC

[section ""cstring" . GHC.TypeLits.$trModule4_bytes" {
     GHC.TypeLits.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.282530863 UTC

[section ""data" . GHC.TypeLits.$trModule3_closure" {
     GHC.TypeLits.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeLits.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.283165584 UTC

[section ""cstring" . GHC.TypeLits.$trModule2_bytes" {
     GHC.TypeLits.$trModule2_bytes:
         I8[] [71,72,67,46,84,121,112,101,76,105,116,115]
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.283984239 UTC

[section ""data" . GHC.TypeLits.$trModule1_closure" {
     GHC.TypeLits.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeLits.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.284725958 UTC

[section ""data" . GHC.TypeLits.$trModule_closure" {
     GHC.TypeLits.$trModule_closure:
         const GHC.Types.Module_con_info;
         const GHC.TypeLits.$trModule3_closure+1;
         const GHC.TypeLits.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.285344459 UTC

[section ""data" . $krep_r5tkw_closure" {
     $krep_r5tkw_closure:
         const GHC.Types.KindRepVar_con_info;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.285948214 UTC

[section ""data" . $krep1_r5tkx_closure" {
     $krep1_r5tkx_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcChar_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.286502049 UTC

[section ""data" . $krep2_r5tky_closure" {
     $krep2_r5tky_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcConstraint_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.287070433 UTC

[section ""data" . $krep3_r5tkz_closure" {
     $krep3_r5tkz_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcSymbol_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.287670024 UTC

[section ""data" . $krep4_r5tkA_closure" {
     $krep4_r5tkA_closure:
         const :_con_info;
         const $krep1_r5tkx_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.288218341 UTC

[section ""data" . $krep5_r5tkB_closure" {
     $krep5_r5tkB_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tc[]_closure;
         const $krep4_r5tkA_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.288842543 UTC

[section ""data" . $krep6_r5tkC_closure" {
     $krep6_r5tkC_closure:
         const :_con_info;
         const $krep_r5tkw_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.289478634 UTC

[section ""data" . $krep7_r5tkD_closure" {
     $krep7_r5tkD_closure:
         const :_con_info;
         const $krep3_r5tkz_closure+1;
         const $krep6_r5tkC_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.290032929 UTC

[section ""data" . $krep8_r5tkE_closure" {
     $krep8_r5tkE_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const Data.Proxy.$tcProxy_closure;
         const $krep7_r5tkD_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.290628573 UTC

[section ""data" . GHC.TypeLits.$tcKnownSymbol1_closure" {
     GHC.TypeLits.$tcKnownSymbol1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep3_r5tkz_closure+1;
         const $krep2_r5tky_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.291254092 UTC

[section ""data" . GHC.TypeLits.$tcSSymbol1_closure" {
     GHC.TypeLits.$tcSSymbol1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep3_r5tkz_closure+1;
         const GHC.Types.krep$*_closure;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.291842806 UTC

[section ""data" . GHC.TypeLits.$tcWrapS1_closure" {
     GHC.TypeLits.$tcWrapS1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep3_r5tkz_closure+1;
         const GHC.Types.krep$*Arr*_closure;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.292402082 UTC

[section ""data" . $krep9_r5tkF_closure" {
     $krep9_r5tkF_closure:
         const GHC.Types.KindRepVar_con_info;
         const 1;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.292987413 UTC

[section ""data" . $krep10_r5tkG_closure" {
     $krep10_r5tkG_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep8_r5tkE_closure+1;
         const $krep9_r5tkF_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.293695757 UTC

[section ""cstring" . GHC.TypeLits.$tcErrorMessage2_bytes" {
     GHC.TypeLits.$tcErrorMessage2_bytes:
         I8[] [69,114,114,111,114,77,101,115,115,97,103,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.294247635 UTC

[section ""data" . GHC.TypeLits.$tcErrorMessage1_closure" {
     GHC.TypeLits.$tcErrorMessage1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeLits.$tcErrorMessage2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.294767085 UTC

[section ""data" . GHC.TypeLits.$tcErrorMessage_closure" {
     GHC.TypeLits.$tcErrorMessage_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeLits.$trModule_closure+1;
         const GHC.TypeLits.$tcErrorMessage1_closure+1;
         const GHC.Types.krep$*_closure;
         const 7630159379940119730;
         const 9206405315391268733;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.295425698 UTC

[section ""data" . $krep11_r5tkH_closure" {
     $krep11_r5tkH_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.TypeLits.$tcErrorMessage_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.296028416 UTC

[section ""data" . GHC.TypeLits.$tc'ShowType1_closure" {
     GHC.TypeLits.$tc'ShowType1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep_r5tkw_closure+2;
         const $krep11_r5tkH_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.296568641 UTC

[section ""cstring" . GHC.TypeLits.$tc'ShowType3_bytes" {
     GHC.TypeLits.$tc'ShowType3_bytes:
         I8[] [39,83,104,111,119,84,121,112,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.297176835 UTC

[section ""data" . GHC.TypeLits.$tc'ShowType2_closure" {
     GHC.TypeLits.$tc'ShowType2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeLits.$tc'ShowType3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.299036801 UTC

[section ""data" . GHC.TypeLits.$tc'ShowType_closure" {
     GHC.TypeLits.$tc'ShowType_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeLits.$trModule_closure+1;
         const GHC.TypeLits.$tc'ShowType2_closure+1;
         const GHC.TypeLits.$tc'ShowType1_closure+4;
         const 8382284352214508650;
         const 11348954620262118930;
         const 1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.29967044 UTC

[section ""data" . GHC.TypeLits.$tc'Text1_closure" {
     GHC.TypeLits.$tc'Text1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep3_r5tkz_closure+1;
         const $krep11_r5tkH_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.3002183 UTC

[section ""cstring" . GHC.TypeLits.$tc'Text3_bytes" {
     GHC.TypeLits.$tc'Text3_bytes:
         I8[] [39,84,101,120,116]
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.300735623 UTC

[section ""data" . GHC.TypeLits.$tc'Text2_closure" {
     GHC.TypeLits.$tc'Text2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeLits.$tc'Text3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.301386563 UTC

[section ""data" . GHC.TypeLits.$tc'Text_closure" {
     GHC.TypeLits.$tc'Text_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeLits.$trModule_closure+1;
         const GHC.TypeLits.$tc'Text2_closure+1;
         const GHC.TypeLits.$tc'Text1_closure+4;
         const 2493578998071024502;
         const 3678534661723514344;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.302002467 UTC

[section ""data" . $krep12_r5tkI_closure" {
     $krep12_r5tkI_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep11_r5tkH_closure+1;
         const $krep11_r5tkH_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.302548982 UTC

[section ""data" . GHC.TypeLits.$tc':$$:1_closure" {
     GHC.TypeLits.$tc':$$:1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep11_r5tkH_closure+1;
         const $krep12_r5tkI_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.303069986 UTC

[section ""cstring" . GHC.TypeLits.$tc':<>:2_bytes" {
     GHC.TypeLits.$tc':<>:2_bytes:
         I8[] [39,58,60,62,58]
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.303608959 UTC

[section ""data" . GHC.TypeLits.$tc':<>:1_closure" {
     GHC.TypeLits.$tc':<>:1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeLits.$tc':<>:2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.304154663 UTC

[section ""data" . GHC.TypeLits.$tc':<>:_closure" {
     GHC.TypeLits.$tc':<>:_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeLits.$trModule_closure+1;
         const GHC.TypeLits.$tc':<>:1_closure+1;
         const GHC.TypeLits.$tc':$$:1_closure+4;
         const 3983262092273118172;
         const 8733217608481743011;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.304768048 UTC

[section ""cstring" . GHC.TypeLits.$tc':$$:3_bytes" {
     GHC.TypeLits.$tc':$$:3_bytes:
         I8[] [39,58,36,36,58]
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.305350538 UTC

[section ""data" . GHC.TypeLits.$tc':$$:2_closure" {
     GHC.TypeLits.$tc':$$:2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeLits.$tc':$$:3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.305940978 UTC

[section ""data" . GHC.TypeLits.$tc':$$:_closure" {
     GHC.TypeLits.$tc':$$:_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeLits.$trModule_closure+1;
         const GHC.TypeLits.$tc':$$:2_closure+1;
         const GHC.TypeLits.$tc':$$:1_closure+4;
         const 16852088601940984151;
         const 507953211190232322;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.306557093 UTC

[section ""cstring" . GHC.TypeLits.$tcSSymbol3_bytes" {
     GHC.TypeLits.$tcSSymbol3_bytes:
         I8[] [83,83,121,109,98,111,108]
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.307134953 UTC

[section ""data" . GHC.TypeLits.$tcSSymbol2_closure" {
     GHC.TypeLits.$tcSSymbol2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeLits.$tcSSymbol3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.307702881 UTC

[section ""data" . GHC.TypeLits.$tcSSymbol_closure" {
     GHC.TypeLits.$tcSSymbol_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeLits.$trModule_closure+1;
         const GHC.TypeLits.$tcSSymbol2_closure+1;
         const GHC.TypeLits.$tcSSymbol1_closure+4;
         const 6053239415793076730;
         const 11057125606635161794;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.308262945 UTC

[section ""data" . $krep13_r5tkJ_closure" {
     $krep13_r5tkJ_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.TypeLits.$tcSSymbol_closure+1;
         const $krep6_r5tkC_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.308812842 UTC

[section ""data" . GHC.TypeLits.$tc'SSymbol1_closure" {
     GHC.TypeLits.$tc'SSymbol1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep5_r5tkB_closure+1;
         const $krep13_r5tkJ_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.309483682 UTC

[section ""cstring" . GHC.TypeLits.$tc'SSymbol3_bytes" {
     GHC.TypeLits.$tc'SSymbol3_bytes:
         I8[] [39,83,83,121,109,98,111,108]
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.310000077 UTC

[section ""data" . GHC.TypeLits.$tc'SSymbol2_closure" {
     GHC.TypeLits.$tc'SSymbol2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeLits.$tc'SSymbol3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.31055602 UTC

[section ""data" . GHC.TypeLits.$tc'SSymbol_closure" {
     GHC.TypeLits.$tc'SSymbol_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeLits.$trModule_closure+1;
         const GHC.TypeLits.$tc'SSymbol2_closure+1;
         const GHC.TypeLits.$tc'SSymbol1_closure+4;
         const 1559313649785769064;
         const 360611317898112776;
         const 1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.311154101 UTC

[section ""cstring" . GHC.TypeLits.$tcKnownSymbol3_bytes" {
     GHC.TypeLits.$tcKnownSymbol3_bytes:
         I8[] [75,110,111,119,110,83,121,109,98,111,108]
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.311728336 UTC

[section ""data" . GHC.TypeLits.$tcKnownSymbol2_closure" {
     GHC.TypeLits.$tcKnownSymbol2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeLits.$tcKnownSymbol3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.312250699 UTC

[section ""data" . GHC.TypeLits.$tcKnownSymbol_closure" {
     GHC.TypeLits.$tcKnownSymbol_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeLits.$trModule_closure+1;
         const GHC.TypeLits.$tcKnownSymbol2_closure+1;
         const GHC.TypeLits.$tcKnownSymbol1_closure+4;
         const 1897426542959159002;
         const 11426707038979253074;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.312856692 UTC

[section ""data" . $krep14_r5tkK_closure" {
     $krep14_r5tkK_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.TypeLits.$tcKnownSymbol_closure+1;
         const $krep6_r5tkC_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.313593666 UTC

[section ""data" . $krep15_r5tkL_closure" {
     $krep15_r5tkL_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep14_r5tkK_closure+1;
         const $krep10_r5tkG_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.314340372 UTC

[section ""data" . GHC.TypeLits.$tc'C:KnownSymbol1_closure" {
     GHC.TypeLits.$tc'C:KnownSymbol1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep13_r5tkJ_closure+1;
         const $krep14_r5tkK_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.31490862 UTC

[section ""cstring" . GHC.TypeLits.$tc'C:KnownSymbol3_bytes" {
     GHC.TypeLits.$tc'C:KnownSymbol3_bytes:
         I8[] [39,67,58,75,110,111,119,110,83,121,109,98,111,108]
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.315435142 UTC

[section ""data" . GHC.TypeLits.$tc'C:KnownSymbol2_closure" {
     GHC.TypeLits.$tc'C:KnownSymbol2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeLits.$tc'C:KnownSymbol3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.315966244 UTC

[section ""data" . GHC.TypeLits.$tc'C:KnownSymbol_closure" {
     GHC.TypeLits.$tc'C:KnownSymbol_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeLits.$trModule_closure+1;
         const GHC.TypeLits.$tc'C:KnownSymbol2_closure+1;
         const GHC.TypeLits.$tc'C:KnownSymbol1_closure+4;
         const 16813031602224516101;
         const 12647750771094255736;
         const 1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.316540948 UTC

[section ""cstring" . GHC.TypeLits.$tcSomeSymbol2_bytes" {
     GHC.TypeLits.$tcSomeSymbol2_bytes:
         I8[] [83,111,109,101,83,121,109,98,111,108]
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.317065101 UTC

[section ""data" . GHC.TypeLits.$tcSomeSymbol1_closure" {
     GHC.TypeLits.$tcSomeSymbol1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeLits.$tcSomeSymbol2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.317717791 UTC

[section ""data" . GHC.TypeLits.$tcSomeSymbol_closure" {
     GHC.TypeLits.$tcSomeSymbol_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeLits.$trModule_closure+1;
         const GHC.TypeLits.$tcSomeSymbol1_closure+1;
         const GHC.Types.krep$*_closure;
         const 8170228625754745342;
         const 5936112829002510826;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.318350059 UTC

[section ""data" . $krep16_r5tkM_closure" {
     $krep16_r5tkM_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.TypeLits.$tcSomeSymbol_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.31891698 UTC

[section ""data" . $krep17_r5tkN_closure" {
     $krep17_r5tkN_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep8_r5tkE_closure+1;
         const $krep16_r5tkM_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.319473396 UTC

[section ""data" . GHC.TypeLits.$tc'SomeSymbol1_closure" {
     GHC.TypeLits.$tc'SomeSymbol1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep14_r5tkK_closure+1;
         const $krep17_r5tkN_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.320048 UTC

[section ""cstring" . GHC.TypeLits.$tc'SomeSymbol3_bytes" {
     GHC.TypeLits.$tc'SomeSymbol3_bytes:
         I8[] [39,83,111,109,101,83,121,109,98,111,108]
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.320545621 UTC

[section ""data" . GHC.TypeLits.$tc'SomeSymbol2_closure" {
     GHC.TypeLits.$tc'SomeSymbol2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeLits.$tc'SomeSymbol3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.321178922 UTC

[section ""data" . GHC.TypeLits.$tc'SomeSymbol_closure" {
     GHC.TypeLits.$tc'SomeSymbol_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeLits.$trModule_closure+1;
         const GHC.TypeLits.$tc'SomeSymbol2_closure+1;
         const GHC.TypeLits.$tc'SomeSymbol1_closure+4;
         const 3805514464201054242;
         const 4871133717641740493;
         const 1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.321928331 UTC

[section ""cstring" . GHC.TypeLits.$tcWrapS3_bytes" {
     GHC.TypeLits.$tcWrapS3_bytes:
         I8[] [87,114,97,112,83]
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.322519393 UTC

[section ""data" . GHC.TypeLits.$tcWrapS2_closure" {
     GHC.TypeLits.$tcWrapS2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeLits.$tcWrapS3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.323131133 UTC

[section ""data" . GHC.TypeLits.$tcWrapS_closure" {
     GHC.TypeLits.$tcWrapS_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeLits.$trModule_closure+1;
         const GHC.TypeLits.$tcWrapS2_closure+1;
         const GHC.TypeLits.$tcWrapS1_closure+4;
         const 9018955994487767128;
         const 531430869376599499;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.324511844 UTC

[section ""data" . $krep18_r5tkO_closure" {
     $krep18_r5tkO_closure:
         const :_con_info;
         const $krep9_r5tkF_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.325089213 UTC

[section ""data" . $krep19_r5tkP_closure" {
     $krep19_r5tkP_closure:
         const :_con_info;
         const $krep_r5tkw_closure+2;
         const $krep18_r5tkO_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.325794173 UTC

[section ""data" . $krep20_r5tkQ_closure" {
     $krep20_r5tkQ_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.TypeLits.$tcWrapS_closure+1;
         const $krep19_r5tkP_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.32634039 UTC

[section ""data" . GHC.TypeLits.$tc'WrapS1_closure" {
     GHC.TypeLits.$tc'WrapS1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep15_r5tkL_closure+4;
         const $krep20_r5tkQ_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.326879423 UTC

[section ""cstring" . GHC.TypeLits.$tc'WrapS3_bytes" {
     GHC.TypeLits.$tc'WrapS3_bytes:
         I8[] [39,87,114,97,112,83]
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.327446442 UTC

[section ""data" . GHC.TypeLits.$tc'WrapS2_closure" {
     GHC.TypeLits.$tc'WrapS2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeLits.$tc'WrapS3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.328013454 UTC

[section ""data" . GHC.TypeLits.$tc'WrapS_closure" {
     GHC.TypeLits.$tc'WrapS_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeLits.$trModule_closure+1;
         const GHC.TypeLits.$tc'WrapS2_closure+1;
         const GHC.TypeLits.$tc'WrapS1_closure+4;
         const 10848673411250088112;
         const 6323353939001754670;
         const 2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.328912175 UTC

[section ""data" . GHC.TypeLits.someNatVal1_closure" {
     GHC.TypeLits.someNatVal1_closure:
         const GHC.TypeLits.someNatVal1_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.TypeLits.someNatVal1_entry() //  [R1]
         { info_tbl: [(c5twj,
                       label: GHC.TypeLits.someNatVal1_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5twj: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5twk; else goto c5twl;
       c5twk: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5twl: // global
           (_c5twg::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c5twg::I64 == 0) goto c5twi; else goto c5twh;
       c5twi: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c5twh: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c5twg::I64;
           R3 = GHC.Types.[]_closure+1;
           R2 = GHC.Types.True_closure+2;
           Sp = Sp - 16;
           call GHC.Integer.Type.mkInteger_entry(R3,
                                                 R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.330450643 UTC

[section ""data" . GHC.TypeLits.someNatVal_closure" {
     GHC.TypeLits.someNatVal_closure:
         const GHC.TypeLits.someNatVal_info;
         const 0;
 },
 sat_s5tn9_entry() //  [R1]
         { info_tbl: [(c5twz,
                       label: sat_s5tn9_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5twz: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5twA; else goto c5twB;
       c5twA: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5twB: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Natural.naturalFromInteger_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 GHC.TypeLits.someNatVal_entry() //  [R2]
         { info_tbl: [(c5twF,
                       label: GHC.TypeLits.someNatVal_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5twF: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5twG; else goto c5twH;
       c5twG: // global
           R2 = R2;
           R1 = GHC.TypeLits.someNatVal_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5twH: // global
           I64[Sp - 16] = block_c5twq_info;
           R3 = GHC.TypeLits.someNatVal1_closure;
           _s5tn7::P64 = R2;
           R2 = R2;
           P64[Sp - 8] = _s5tn7::P64;
           Sp = Sp - 16;
           call GHC.Integer.Type.geInteger#_entry(R3,
                                                  R2) args: 8, res: 8, upd: 8;
     }
 },
 _c5twq() //  [R1]
         { info_tbl: [(c5twq,
                       label: block_c5twq_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5twq: // global
           if (R1 == 1) goto c5twE; else goto c5twD;
       c5twE: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c5twO; else goto c5twN;
       c5twO: // global
           HpAlloc = 64;
           R1 = R1;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c5twN: // global
           I64[Hp - 56] = sat_s5tn9_info;
           P64[Hp - 40] = P64[Sp + 8];
           I64[Hp - 32] = GHC.TypeNats.SomeNat_con_info;
           P64[Hp - 24] = Hp - 56;
           P64[Hp - 16] = Data.Proxy.Proxy_closure+1;
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = Hp - 31;
           R1 = Hp - 6;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5twD: // global
           R1 = GHC.Base.Nothing_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.332043784 UTC

[section ""data" . GHC.TypeLits.WrapS_closure" {
     GHC.TypeLits.WrapS_closure:
         const GHC.TypeLits.WrapS_info;
 },
 GHC.TypeLits.WrapS_entry() //  [R2]
         { info_tbl: [(c5twU,
                       label: GHC.TypeLits.WrapS_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5twU: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5twY; else goto c5twX;
       c5twY: // global
           HpAlloc = 16;
           R2 = R2;
           R1 = GHC.TypeLits.WrapS_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5twX: // global
           I64[Hp - 8] = GHC.TypeLits.WrapS_con_info;
           P64[Hp] = R2;
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.332962519 UTC

[section ""data" . GHC.TypeLits.Text_closure" {
     GHC.TypeLits.Text_closure:
         const GHC.TypeLits.Text_info;
 },
 GHC.TypeLits.Text_entry() //  [R2]
         { info_tbl: [(c5tx4,
                       label: GHC.TypeLits.Text_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tx4: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5tx8; else goto c5tx7;
       c5tx8: // global
           HpAlloc = 16;
           R2 = R2;
           R1 = GHC.TypeLits.Text_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5tx7: // global
           I64[Hp - 8] = GHC.TypeLits.Text_con_info;
           P64[Hp] = R2;
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.333958728 UTC

[section ""data" . GHC.TypeLits.ShowType_closure" {
     GHC.TypeLits.ShowType_closure:
         const GHC.TypeLits.ShowType_info;
 },
 GHC.TypeLits.ShowType_entry() //  [R2]
         { info_tbl: [(c5txe,
                       label: GHC.TypeLits.ShowType_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5txe: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5txi; else goto c5txh;
       c5txi: // global
           HpAlloc = 16;
           R2 = R2;
           R1 = GHC.TypeLits.ShowType_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5txh: // global
           I64[Hp - 8] = GHC.TypeLits.ShowType_con_info;
           P64[Hp] = R2;
           R1 = Hp - 6;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.334878498 UTC

[section ""data" . GHC.TypeLits.:<>:_closure" {
     GHC.TypeLits.:<>:_closure:
         const GHC.TypeLits.:<>:_info;
 },
 GHC.TypeLits.:<>:_entry() //  [R2, R3]
         { info_tbl: [(c5txo,
                       label: GHC.TypeLits.:<>:_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5txo: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5txs; else goto c5txr;
       c5txs: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.:<>:_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5txr: // global
           I64[Hp - 16] = GHC.TypeLits.:<>:_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 13;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.335905558 UTC

[section ""data" . GHC.TypeLits.:$$:_closure" {
     GHC.TypeLits.:$$:_closure:
         const GHC.TypeLits.:$$:_info;
 },
 GHC.TypeLits.:$$:_entry() //  [R2, R3]
         { info_tbl: [(c5txy,
                       label: GHC.TypeLits.:$$:_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5txy: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5txC; else goto c5txB;
       c5txC: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.:$$:_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5txB: // global
           I64[Hp - 16] = GHC.TypeLits.:$$:_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 12;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.336926753 UTC

[section ""data" . GHC.TypeLits.SomeSymbol_closure" {
     GHC.TypeLits.SomeSymbol_closure:
         const GHC.TypeLits.SomeSymbol_info;
 },
 GHC.TypeLits.SomeSymbol_entry() //  [R2, R3]
         { info_tbl: [(c5txI,
                       label: GHC.TypeLits.SomeSymbol_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5txI: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5txM; else goto c5txL;
       c5txM: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.SomeSymbol_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5txL: // global
           I64[Hp - 16] = GHC.TypeLits.SomeSymbol_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.337869831 UTC

[GHC.TypeLits.WrapS_con_entry() //  [R1]
         { info_tbl: [(c5txN,
                       label: GHC.TypeLits.WrapS_con_info
                       rep:HeapRep 1 ptrs {
                             Con {tag: 0
                                  descr:[98,97,115,101,58,71,72,67,46,84,121,112,101,76,105,116,115,46,87,114,97,112,83]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5txN: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.338606835 UTC

[GHC.TypeLits.Text_con_entry() //  [R1]
         { info_tbl: [(c5txO,
                       label: GHC.TypeLits.Text_con_info
                       rep:HeapRep 1 ptrs {
                             Con {tag: 0
                                  descr:[98,97,115,101,58,71,72,67,46,84,121,112,101,76,105,116,115,46,84,101,120,116]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5txO: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.339314897 UTC

[GHC.TypeLits.ShowType_con_entry() //  [R1]
         { info_tbl: [(c5txP,
                       label: GHC.TypeLits.ShowType_con_info
                       rep:HeapRep 1 ptrs {
                             Con {tag: 1
                                  descr:[98,97,115,101,58,71,72,67,46,84,121,112,101,76,105,116,115,46,83,104,111,119,84,121,112,101]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5txP: // global
           R1 = R1 + 2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.340003174 UTC

[GHC.TypeLits.:<>:_con_entry() //  [R1]
         { info_tbl: [(c5txQ,
                       label: GHC.TypeLits.:<>:_con_info
                       rep:HeapRep 2 ptrs {
                             Con {tag: 2
                                  descr:[98,97,115,101,58,71,72,67,46,84,121,112,101,76,105,116,115,46,58,60,62,58]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5txQ: // global
           R1 = R1 + 3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.340724966 UTC

[GHC.TypeLits.:$$:_con_entry() //  [R1]
         { info_tbl: [(c5txR,
                       label: GHC.TypeLits.:$$:_con_info
                       rep:HeapRep 2 ptrs {
                             Con {tag: 3
                                  descr:[98,97,115,101,58,71,72,67,46,84,121,112,101,76,105,116,115,46,58,36,36,58]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5txR: // global
           R1 = R1 + 4;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.341521741 UTC

[GHC.TypeLits.SomeSymbol_con_entry() //  [R1]
         { info_tbl: [(c5txS,
                       label: GHC.TypeLits.SomeSymbol_con_info
                       rep:HeapRep 2 ptrs {
                             Con {tag: 0
                                  descr:[98,97,115,101,58,71,72,67,46,84,121,112,101,76,105,116,115,46,83,111,109,101,83,121,109,98,111,108]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5txS: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.342184881 UTC

[section ""relreadonly" . S5tou_srt" {
     S5tou_srt:
         const GHC.Show.showLitString_closure;
         const GHC.TypeLits.$fShowSomeSymbol_$cshowsPrec_closure;
         const GHC.TypeLits.$fShowSomeSymbol_$cshow_closure;
         const GHC.TypeLits.$fShowSomeSymbol1_closure;
         const GHC.Read.list3_closure;
         const GHC.Read.$fReadChar2_closure;
         const GHC.TypeLits.$fReadSomeSymbol_$creadsPrec_closure;
         const GHC.TypeLits.$fReadSomeSymbol4_closure;
         const GHC.Read.list_closure;
         const GHC.TypeLits.$fReadSomeSymbol2_closure;
         const GHC.TypeLits.$fReadSomeSymbol1_closure;
         const GHC.TypeLits.$fReadSomeSymbol_$creadList_closure;
         const GHC.Natural.naturalFromInteger_closure;
         const GHC.TypeLits.someNatVal_closure;
         const GHC.TypeLits.someNatVal1_closure;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.342848599 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:00:29.343549809 UTC

[section ""data" . GHC.TypeLits.symbolSing_closure" {
     GHC.TypeLits.symbolSing_closure:
         const GHC.TypeLits.symbolSing_info;
 },
 GHC.TypeLits.symbolSing_entry() //  [R2]
         { info_tbl: [(c5txX,
                       label: GHC.TypeLits.symbolSing_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5txX: // global
           R1 = R2 & (-8);
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.344426876 UTC

[section ""data" . GHC.TypeLits.natVal1_closure" {
     GHC.TypeLits.natVal1_closure:
         const GHC.TypeLits.natVal1_info;
 },
 GHC.TypeLits.natVal1_entry() //  [R2]
         { info_tbl: [(c5ty4,
                       label: GHC.TypeLits.natVal1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5ty4: // global
           R1 = R2 & (-8);
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.345350256 UTC

[section ""data" . GHC.TypeLits.natVal_closure" {
     GHC.TypeLits.natVal_closure:
         const GHC.TypeLits.natVal_info;
 },
 GHC.TypeLits.natVal_entry() //  [R2, R3]
         { info_tbl: [(c5tyb,
                       label: GHC.TypeLits.natVal_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tyb: // global
           R3 = R3;
           R2 = R2;
           call GHC.TypeLits.natVal1_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.346193387 UTC

[section ""data" . GHC.TypeLits.symbolVal1_closure" {
     GHC.TypeLits.symbolVal1_closure:
         const GHC.TypeLits.symbolVal1_info;
 },
 GHC.TypeLits.symbolVal1_entry() //  [R2]
         { info_tbl: [(c5tyi,
                       label: GHC.TypeLits.symbolVal1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tyi: // global
           R1 = R2 & (-8);
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.347040491 UTC

[section ""data" . GHC.TypeLits.symbolVal_closure" {
     GHC.TypeLits.symbolVal_closure:
         const GHC.TypeLits.symbolVal_info;
 },
 GHC.TypeLits.symbolVal_entry() //  [R2, R3]
         { info_tbl: [(c5typ,
                       label: GHC.TypeLits.symbolVal_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5typ: // global
           R3 = R3;
           R2 = R2;
           call GHC.TypeLits.symbolVal1_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.347771394 UTC

[section ""data" . GHC.TypeLits.sameSymbol1_closure" {
     GHC.TypeLits.sameSymbol1_closure:
         const GHC.Base.Just_con_info;
         const Data.Type.Equality.$WRefl_closure;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.348621072 UTC

[section ""data" . GHC.TypeLits.sameSymbol_closure" {
     GHC.TypeLits.sameSymbol_closure:
         const GHC.TypeLits.sameSymbol_info;
 },
 GHC.TypeLits.sameSymbol_entry() //  [R2, R3, R4, R5]
         { info_tbl: [(c5tyC,
                       label: GHC.TypeLits.sameSymbol_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 24} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tyC: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5tyD; else goto c5tyE;
       c5tyD: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.sameSymbol_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5tyE: // global
           I64[Sp - 8] = block_c5tyw_info;
           R3 = R3;
           R2 = R2;
           Sp = Sp - 8;
           call GHC.Base.eqString_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 _c5tyw() //  [R1]
         { info_tbl: [(c5tyw,
                       label: block_c5tyw_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tyw: // global
           if (R1 & 7 == 1) goto c5tyz; else goto c5tyA;
       c5tyz: // global
           R1 = GHC.Base.Nothing_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5tyA: // global
           R1 = GHC.TypeLits.sameSymbol1_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.350541106 UTC

[section ""data" . GHC.TypeLits.$fShowSomeSymbol_$cshowsPrec_closure" {
     GHC.TypeLits.$fShowSomeSymbol_$cshowsPrec_closure:
         const GHC.TypeLits.$fShowSomeSymbol_$cshowsPrec_info;
         const 0;
 },
 sat_s5tl9_entry() //  [R1]
         { info_tbl: [(c5tyZ,
                       label: sat_s5tl9_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tyZ: // global
           _s5tl9::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c5tz0; else goto c5tz1;
       c5tz1: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5tz3; else goto c5tz2;
       c5tz3: // global
           HpAlloc = 24;
           goto c5tz0;
       c5tz0: // global
           R1 = _s5tl9::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5tz2: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5tl9::P64;
           _s5tl4::P64 = P64[_s5tl9::P64 + 16];
           _s5tl6::P64 = P64[_s5tl9::P64 + 24];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.$fShow(,)3_closure;
           P64[Hp] = _s5tl4::P64;
           R3 = Hp - 14;
           R2 = _s5tl6::P64;
           Sp = Sp - 16;
           call GHC.Show.showLitString_entry(R3,
                                             R2) args: 24, res: 0, upd: 24;
     }
 },
 GHC.TypeLits.$fShowSomeSymbol_$cshowsPrec_entry() //  [R2, R3, R4]
         { info_tbl: [(c5tz4,
                       label: GHC.TypeLits.$fShowSomeSymbol_$cshowsPrec_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tz4: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5tz6; else goto c5tz7;
       c5tz6: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.$fShowSomeSymbol_$cshowsPrec_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5tz7: // global
           I64[Sp - 16] = block_c5tyP_info;
           R1 = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5tzb; else goto c5tyQ;
       u5tzb: // global
           call _c5tyP(R1) args: 0, res: 0, upd: 0;
       c5tyQ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5tyP() //  [R1]
         { info_tbl: [(c5tyP,
                       label: block_c5tyP_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tyP: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c5tza; else goto c5tz9;
       c5tza: // global
           HpAlloc = 56;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5tz9: // global
           _s5tl6::P64 = P64[R1 + 7];
           I64[Hp - 48] = sat_s5tl9_info;
           P64[Hp - 32] = P64[Sp + 8];
           P64[Hp - 24] = _s5tl6::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.$fShow(,)3_closure;
           P64[Hp] = Hp - 48;
           R1 = Hp - 14;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.35318312 UTC

[section ""data" . GHC.TypeLits.$fShowSomeSymbol2_closure" {
     GHC.TypeLits.$fShowSomeSymbol2_closure:
         const :_con_info;
         const GHC.Show.$fShow(,)3_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.354247744 UTC

[section ""data" . GHC.TypeLits.$fShowSomeSymbol_$cshow_closure" {
     GHC.TypeLits.$fShowSomeSymbol_$cshow_closure:
         const GHC.TypeLits.$fShowSomeSymbol_$cshow_info;
         const 0;
 },
 sat_s5tle_entry() //  [R1]
         { info_tbl: [(c5tzp,
                       label: sat_s5tle_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tzp: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5tzq; else goto c5tzr;
       c5tzq: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5tzr: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = GHC.TypeLits.$fShowSomeSymbol2_closure+2;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Show.showLitString_entry(R3,
                                             R2) args: 24, res: 0, upd: 24;
     }
 },
 GHC.TypeLits.$fShowSomeSymbol_$cshow_entry() //  [R2]
         { info_tbl: [(c5tzs,
                       label: GHC.TypeLits.$fShowSomeSymbol_$cshow_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tzs: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5tzu; else goto c5tzv;
       c5tzu: // global
           R2 = R2;
           R1 = GHC.TypeLits.$fShowSomeSymbol_$cshow_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5tzv: // global
           I64[Sp - 8] = block_c5tzg_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5tzz; else goto c5tzh;
       u5tzz: // global
           call _c5tzg(R1) args: 0, res: 0, upd: 0;
       c5tzh: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5tzg() //  [R1]
         { info_tbl: [(c5tzg,
                       label: block_c5tzg_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tzg: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5tzy; else goto c5tzx;
       c5tzy: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5tzx: // global
           _s5tlc::P64 = P64[R1 + 7];
           I64[Hp - 40] = sat_s5tle_info;
           P64[Hp - 24] = _s5tlc::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.$fShow(,)3_closure;
           P64[Hp] = Hp - 40;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.356147525 UTC

[section ""data" . GHC.TypeLits.$fShowSomeSymbol1_closure" {
     GHC.TypeLits.$fShowSomeSymbol1_closure:
         const GHC.TypeLits.$fShowSomeSymbol1_info;
         const 0;
 },
 sat_s5tll_entry() //  [R1]
         { info_tbl: [(c5tzO,
                       label: sat_s5tll_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tzO: // global
           _s5tll::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c5tzP; else goto c5tzQ;
       c5tzQ: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5tzS; else goto c5tzR;
       c5tzS: // global
           HpAlloc = 24;
           goto c5tzP;
       c5tzP: // global
           R1 = _s5tll::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5tzR: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5tll::P64;
           _s5tlg::P64 = P64[_s5tll::P64 + 16];
           _s5tli::P64 = P64[_s5tll::P64 + 24];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.$fShow(,)3_closure;
           P64[Hp] = _s5tlg::P64;
           R3 = Hp - 14;
           R2 = _s5tli::P64;
           Sp = Sp - 16;
           call GHC.Show.showLitString_entry(R3,
                                             R2) args: 24, res: 0, upd: 24;
     }
 },
 GHC.TypeLits.$fShowSomeSymbol1_entry() //  [R2, R3]
         { info_tbl: [(c5tzT,
                       label: GHC.TypeLits.$fShowSomeSymbol1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tzT: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5tzV; else goto c5tzW;
       c5tzV: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.$fShowSomeSymbol1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5tzW: // global
           I64[Sp - 16] = block_c5tzE_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5tA0; else goto c5tzF;
       u5tA0: // global
           call _c5tzE(R1) args: 0, res: 0, upd: 0;
       c5tzF: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5tzE() //  [R1]
         { info_tbl: [(c5tzE,
                       label: block_c5tzE_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tzE: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c5tzZ; else goto c5tzY;
       c5tzZ: // global
           HpAlloc = 56;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5tzY: // global
           _s5tli::P64 = P64[R1 + 7];
           I64[Hp - 48] = sat_s5tll_info;
           P64[Hp - 32] = P64[Sp + 8];
           P64[Hp - 24] = _s5tli::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.$fShow(,)3_closure;
           P64[Hp] = Hp - 48;
           R1 = Hp - 14;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.357832537 UTC

[section ""data" . GHC.TypeLits.$fShowSomeSymbol_$cshowList_closure" {
     GHC.TypeLits.$fShowSomeSymbol_$cshowList_closure:
         const GHC.TypeLits.$fShowSomeSymbol_$cshowList_info;
         const 0;
 },
 GHC.TypeLits.$fShowSomeSymbol_$cshowList_entry() //  [R2, R3]
         { info_tbl: [(c5tA5,
                       label: GHC.TypeLits.$fShowSomeSymbol_$cshowList_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tA5: // global
           R4 = R3;
           R3 = R2;
           R2 = GHC.TypeLits.$fShowSomeSymbol1_closure+2;
           call GHC.Show.showList___entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.35856466 UTC

[section ""data" . GHC.TypeLits.$fShowSomeSymbol_closure" {
     GHC.TypeLits.$fShowSomeSymbol_closure:
         const GHC.Show.C:Show_con_info;
         const GHC.TypeLits.$fShowSomeSymbol_$cshowsPrec_closure+3;
         const GHC.TypeLits.$fShowSomeSymbol_$cshow_closure+1;
         const GHC.TypeLits.$fShowSomeSymbol_$cshowList_closure+2;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.359433256 UTC

[section ""data" . GHC.TypeLits.$fOrdSomeSymbol_$ccompare_closure" {
     GHC.TypeLits.$fOrdSomeSymbol_$ccompare_closure:
         const GHC.TypeLits.$fOrdSomeSymbol_$ccompare_info;
 },
 GHC.TypeLits.$fOrdSomeSymbol_$ccompare_entry() //  [R2, R3]
         { info_tbl: [(c5tAf,
                       label: GHC.TypeLits.$fOrdSomeSymbol_$ccompare_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tAf: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5tAj; else goto c5tAk;
       c5tAj: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.$fOrdSomeSymbol_$ccompare_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5tAk: // global
           I64[Sp - 16] = block_c5tAc_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5tAs; else goto c5tAd;
       u5tAs: // global
           call _c5tAc(R1) args: 0, res: 0, upd: 0;
       c5tAd: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5tAc() //  [R1]
         { info_tbl: [(c5tAc,
                       label: block_c5tAc_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tAc: // global
           I64[Sp] = block_c5tAi_info;
           _s5tlr::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s5tlr::P64;
           if (R1 & 7 != 0) goto u5tAr; else goto c5tAm;
       u5tAr: // global
           call _c5tAi(R1) args: 0, res: 0, upd: 0;
       c5tAm: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5tAi() //  [R1]
         { info_tbl: [(c5tAi,
                       label: block_c5tAi_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tAi: // global
           R3 = P64[R1 + 7];
           R2 = P64[Sp + 8];
           Sp = Sp + 16;
           call GHC.Classes.$fOrd[]_$s$ccompare1_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.360900606 UTC

[section ""data" . GHC.TypeLits.$fEqSomeSymbol_$c==_closure" {
     GHC.TypeLits.$fEqSomeSymbol_$c==_closure:
         const GHC.TypeLits.$fEqSomeSymbol_$c==_info;
 },
 GHC.TypeLits.$fEqSomeSymbol_$c==_entry() //  [R2, R3]
         { info_tbl: [(c5tAA,
                       label: GHC.TypeLits.$fEqSomeSymbol_$c==_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tAA: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5tAE; else goto c5tAF;
       c5tAE: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.$fEqSomeSymbol_$c==_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5tAF: // global
           I64[Sp - 16] = block_c5tAx_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5tAN; else goto c5tAy;
       u5tAN: // global
           call _c5tAx(R1) args: 0, res: 0, upd: 0;
       c5tAy: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5tAx() //  [R1]
         { info_tbl: [(c5tAx,
                       label: block_c5tAx_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tAx: // global
           I64[Sp] = block_c5tAD_info;
           _s5tlz::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s5tlz::P64;
           if (R1 & 7 != 0) goto u5tAM; else goto c5tAH;
       u5tAM: // global
           call _c5tAD(R1) args: 0, res: 0, upd: 0;
       c5tAH: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5tAD() //  [R1]
         { info_tbl: [(c5tAD,
                       label: block_c5tAD_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tAD: // global
           R3 = P64[R1 + 7];
           R2 = P64[Sp + 8];
           Sp = Sp + 16;
           call GHC.Base.eqString_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.363170369 UTC

[section ""data" . GHC.TypeLits.$fEqSomeSymbol_$c/=_closure" {
     GHC.TypeLits.$fEqSomeSymbol_$c/=_closure:
         const GHC.TypeLits.$fEqSomeSymbol_$c/=_info;
 },
 GHC.TypeLits.$fEqSomeSymbol_$c/=_entry() //  [R2, R3]
         { info_tbl: [(c5tAV,
                       label: GHC.TypeLits.$fEqSomeSymbol_$c/=_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tAV: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5tAZ; else goto c5tB0;
       c5tAZ: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.$fEqSomeSymbol_$c/=_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5tB0: // global
           I64[Sp - 16] = block_c5tAS_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5tBk; else goto c5tAT;
       u5tBk: // global
           call _c5tAS(R1) args: 0, res: 0, upd: 0;
       c5tAT: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5tAS() //  [R1]
         { info_tbl: [(c5tAS,
                       label: block_c5tAS_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tAS: // global
           I64[Sp] = block_c5tAY_info;
           _s5tlH::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s5tlH::P64;
           if (R1 & 7 != 0) goto u5tBj; else goto c5tB2;
       u5tBj: // global
           call _c5tAY(R1) args: 0, res: 0, upd: 0;
       c5tB2: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5tAY() //  [R1]
         { info_tbl: [(c5tAY,
                       label: block_c5tAY_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tAY: // global
           _s5tlH::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5tB6_info;
           R3 = P64[R1 + 7];
           R2 = _s5tlH::P64;
           Sp = Sp + 8;
           call GHC.Base.eqString_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 _c5tB6() //  [R1]
         { info_tbl: [(c5tB6,
                       label: block_c5tB6_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tB6: // global
           if (R1 & 7 == 1) goto c5tBd; else goto c5tBh;
       c5tBd: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5tBh: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.364574105 UTC

[section ""data" . GHC.TypeLits.$fEqSomeSymbol_closure" {
     GHC.TypeLits.$fEqSomeSymbol_closure:
         const GHC.Classes.C:Eq_con_info;
         const GHC.TypeLits.$fEqSomeSymbol_$c==_closure+2;
         const GHC.TypeLits.$fEqSomeSymbol_$c/=_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.365635683 UTC

[section ""data" . GHC.TypeLits.$fOrdSomeSymbol_$c<_closure" {
     GHC.TypeLits.$fOrdSomeSymbol_$c<_closure:
         const GHC.TypeLits.$fOrdSomeSymbol_$c<_info;
 },
 GHC.TypeLits.$fOrdSomeSymbol_$c<_entry() //  [R2, R3]
         { info_tbl: [(c5tBs,
                       label: GHC.TypeLits.$fOrdSomeSymbol_$c<_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tBs: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5tBw; else goto c5tBx;
       c5tBw: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.$fOrdSomeSymbol_$c<_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5tBx: // global
           I64[Sp - 16] = block_c5tBp_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5tBR; else goto c5tBq;
       u5tBR: // global
           call _c5tBp(R1) args: 0, res: 0, upd: 0;
       c5tBq: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5tBp() //  [R1]
         { info_tbl: [(c5tBp,
                       label: block_c5tBp_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tBp: // global
           I64[Sp] = block_c5tBv_info;
           _s5tlQ::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s5tlQ::P64;
           if (R1 & 7 != 0) goto u5tBQ; else goto c5tBz;
       u5tBQ: // global
           call _c5tBv(R1) args: 0, res: 0, upd: 0;
       c5tBz: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5tBv() //  [R1]
         { info_tbl: [(c5tBv,
                       label: block_c5tBv_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tBv: // global
           _s5tlQ::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5tBD_info;
           R3 = P64[R1 + 7];
           R2 = _s5tlQ::P64;
           Sp = Sp + 8;
           call GHC.Classes.$fOrd[]_$s$ccompare1_entry(R3,
                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 _c5tBD() //  [R1]
         { info_tbl: [(c5tBD,
                       label: block_c5tBD_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tBD: // global
           if (R1 & 7 == 1) goto c5tBO; else goto c5tBK;
       c5tBO: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5tBK: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.36751493 UTC

[section ""data" . GHC.TypeLits.$fOrdSomeSymbol_$c>=_closure" {
     GHC.TypeLits.$fOrdSomeSymbol_$c>=_closure:
         const GHC.TypeLits.$fOrdSomeSymbol_$c>=_info;
 },
 GHC.TypeLits.$fOrdSomeSymbol_$c>=_entry() //  [R2, R3]
         { info_tbl: [(c5tBZ,
                       label: GHC.TypeLits.$fOrdSomeSymbol_$c>=_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tBZ: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5tC3; else goto c5tC4;
       c5tC3: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.$fOrdSomeSymbol_$c>=_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5tC4: // global
           I64[Sp - 16] = block_c5tBW_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5tCo; else goto c5tBX;
       u5tCo: // global
           call _c5tBW(R1) args: 0, res: 0, upd: 0;
       c5tBX: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5tBW() //  [R1]
         { info_tbl: [(c5tBW,
                       label: block_c5tBW_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tBW: // global
           I64[Sp] = block_c5tC2_info;
           _s5tlZ::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s5tlZ::P64;
           if (R1 & 7 != 0) goto u5tCn; else goto c5tC6;
       u5tCn: // global
           call _c5tC2(R1) args: 0, res: 0, upd: 0;
       c5tC6: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5tC2() //  [R1]
         { info_tbl: [(c5tC2,
                       label: block_c5tC2_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tC2: // global
           _s5tlZ::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5tCa_info;
           R3 = P64[R1 + 7];
           R2 = _s5tlZ::P64;
           Sp = Sp + 8;
           call GHC.Classes.$fOrd[]_$s$ccompare1_entry(R3,
                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 _c5tCa() //  [R1]
         { info_tbl: [(c5tCa,
                       label: block_c5tCa_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tCa: // global
           if (R1 & 7 == 1) goto c5tCl; else goto c5tCh;
       c5tCl: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5tCh: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.369364158 UTC

[section ""data" . GHC.TypeLits.$fOrdSomeSymbol_$c>_closure" {
     GHC.TypeLits.$fOrdSomeSymbol_$c>_closure:
         const GHC.TypeLits.$fOrdSomeSymbol_$c>_info;
 },
 GHC.TypeLits.$fOrdSomeSymbol_$c>_entry() //  [R2, R3]
         { info_tbl: [(c5tCw,
                       label: GHC.TypeLits.$fOrdSomeSymbol_$c>_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tCw: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5tCA; else goto c5tCB;
       c5tCA: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.$fOrdSomeSymbol_$c>_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5tCB: // global
           I64[Sp - 16] = block_c5tCt_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5tCV; else goto c5tCu;
       u5tCV: // global
           call _c5tCt(R1) args: 0, res: 0, upd: 0;
       c5tCu: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5tCt() //  [R1]
         { info_tbl: [(c5tCt,
                       label: block_c5tCt_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tCt: // global
           I64[Sp] = block_c5tCz_info;
           _s5tm8::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s5tm8::P64;
           if (R1 & 7 != 0) goto u5tCU; else goto c5tCD;
       u5tCU: // global
           call _c5tCz(R1) args: 0, res: 0, upd: 0;
       c5tCD: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5tCz() //  [R1]
         { info_tbl: [(c5tCz,
                       label: block_c5tCz_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tCz: // global
           _s5tm8::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5tCH_info;
           R3 = P64[R1 + 7];
           R2 = _s5tm8::P64;
           Sp = Sp + 8;
           call GHC.Classes.$fOrd[]_$s$ccompare1_entry(R3,
                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 _c5tCH() //  [R1]
         { info_tbl: [(c5tCH,
                       label: block_c5tCH_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tCH: // global
           if (R1 & 7 == 3) goto c5tCS; else goto c5tCO;
       c5tCS: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5tCO: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.371142504 UTC

[section ""data" . GHC.TypeLits.$fOrdSomeSymbol_$c<=_closure" {
     GHC.TypeLits.$fOrdSomeSymbol_$c<=_closure:
         const GHC.TypeLits.$fOrdSomeSymbol_$c<=_info;
 },
 GHC.TypeLits.$fOrdSomeSymbol_$c<=_entry() //  [R2, R3]
         { info_tbl: [(c5tD3,
                       label: GHC.TypeLits.$fOrdSomeSymbol_$c<=_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tD3: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5tD7; else goto c5tD8;
       c5tD7: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.$fOrdSomeSymbol_$c<=_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5tD8: // global
           I64[Sp - 16] = block_c5tD0_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5tDs; else goto c5tD1;
       u5tDs: // global
           call _c5tD0(R1) args: 0, res: 0, upd: 0;
       c5tD1: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5tD0() //  [R1]
         { info_tbl: [(c5tD0,
                       label: block_c5tD0_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tD0: // global
           I64[Sp] = block_c5tD6_info;
           _s5tmh::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s5tmh::P64;
           if (R1 & 7 != 0) goto u5tDr; else goto c5tDa;
       u5tDr: // global
           call _c5tD6(R1) args: 0, res: 0, upd: 0;
       c5tDa: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5tD6() //  [R1]
         { info_tbl: [(c5tD6,
                       label: block_c5tD6_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tD6: // global
           _s5tmh::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5tDe_info;
           R3 = P64[R1 + 7];
           R2 = _s5tmh::P64;
           Sp = Sp + 8;
           call GHC.Classes.$fOrd[]_$s$ccompare1_entry(R3,
                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 _c5tDe() //  [R1]
         { info_tbl: [(c5tDe,
                       label: block_c5tDe_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tDe: // global
           if (R1 & 7 == 3) goto c5tDp; else goto c5tDl;
       c5tDp: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5tDl: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.372950506 UTC

[section ""data" . GHC.TypeLits.$fOrdSomeSymbol_$cmax_closure" {
     GHC.TypeLits.$fOrdSomeSymbol_$cmax_closure:
         const GHC.TypeLits.$fOrdSomeSymbol_$cmax_info;
 },
 GHC.TypeLits.$fOrdSomeSymbol_$cmax_entry() //  [R2, R3]
         { info_tbl: [(c5tDA,
                       label: GHC.TypeLits.$fOrdSomeSymbol_$cmax_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tDA: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5tDE; else goto c5tDF;
       c5tDE: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.$fOrdSomeSymbol_$cmax_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5tDF: // global
           I64[Sp - 16] = block_c5tDx_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5tDZ; else goto c5tDy;
       u5tDZ: // global
           call _c5tDx(R1) args: 0, res: 0, upd: 0;
       c5tDy: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5tDx() //  [R1]
         { info_tbl: [(c5tDx,
                       label: block_c5tDx_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tDx: // global
           I64[Sp - 8] = block_c5tDD_info;
           _s5tmp::P64 = R1;
           _s5tmq::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp] = _s5tmq::P64;
           P64[Sp + 8] = _s5tmp::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5tDY; else goto c5tDH;
       u5tDY: // global
           call _c5tDD(R1) args: 0, res: 0, upd: 0;
       c5tDH: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5tDD() //  [R1]
         { info_tbl: [(c5tDD,
                       label: block_c5tDD_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tDD: // global
           I64[Sp] = block_c5tDL_info;
           R3 = P64[R1 + 7];
           R2 = P64[Sp + 8];
           P64[Sp + 8] = R1;
           call GHC.Classes.$fOrd[]_$s$ccompare1_entry(R3,
                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 _c5tDL() //  [R1]
         { info_tbl: [(c5tDL,
                       label: block_c5tDL_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tDL: // global
           if (R1 & 7 == 3) goto c5tDW; else goto c5tDS;
       c5tDW: // global
           R1 = P64[Sp + 16] & (-8);
           Sp = Sp + 24;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c5tDS: // global
           R1 = P64[Sp + 8] & (-8);
           Sp = Sp + 24;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.375380761 UTC

[section ""data" . GHC.TypeLits.$fOrdSomeSymbol_$cmin_closure" {
     GHC.TypeLits.$fOrdSomeSymbol_$cmin_closure:
         const GHC.TypeLits.$fOrdSomeSymbol_$cmin_info;
 },
 GHC.TypeLits.$fOrdSomeSymbol_$cmin_entry() //  [R2, R3]
         { info_tbl: [(c5tE7,
                       label: GHC.TypeLits.$fOrdSomeSymbol_$cmin_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tE7: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5tEb; else goto c5tEc;
       c5tEb: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.$fOrdSomeSymbol_$cmin_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5tEc: // global
           I64[Sp - 16] = block_c5tE4_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5tEw; else goto c5tE5;
       u5tEw: // global
           call _c5tE4(R1) args: 0, res: 0, upd: 0;
       c5tE5: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5tE4() //  [R1]
         { info_tbl: [(c5tE4,
                       label: block_c5tE4_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tE4: // global
           I64[Sp - 8] = block_c5tEa_info;
           _s5tmy::P64 = R1;
           _s5tmz::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp] = _s5tmz::P64;
           P64[Sp + 8] = _s5tmy::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5tEv; else goto c5tEe;
       u5tEv: // global
           call _c5tEa(R1) args: 0, res: 0, upd: 0;
       c5tEe: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5tEa() //  [R1]
         { info_tbl: [(c5tEa,
                       label: block_c5tEa_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tEa: // global
           I64[Sp] = block_c5tEi_info;
           R3 = P64[R1 + 7];
           R2 = P64[Sp + 8];
           P64[Sp + 8] = R1;
           call GHC.Classes.$fOrd[]_$s$ccompare1_entry(R3,
                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 _c5tEi() //  [R1]
         { info_tbl: [(c5tEi,
                       label: block_c5tEi_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tEi: // global
           if (R1 & 7 == 3) goto c5tEt; else goto c5tEp;
       c5tEt: // global
           R1 = P64[Sp + 8] & (-8);
           Sp = Sp + 24;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c5tEp: // global
           R1 = P64[Sp + 16] & (-8);
           Sp = Sp + 24;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.376846408 UTC

[section ""data" . GHC.TypeLits.$fOrdSomeSymbol_closure" {
     GHC.TypeLits.$fOrdSomeSymbol_closure:
         const GHC.Classes.C:Ord_con_info;
         const GHC.TypeLits.$fEqSomeSymbol_closure+1;
         const GHC.TypeLits.$fOrdSomeSymbol_$ccompare_closure+2;
         const GHC.TypeLits.$fOrdSomeSymbol_$c<_closure+2;
         const GHC.TypeLits.$fOrdSomeSymbol_$c<=_closure+2;
         const GHC.TypeLits.$fOrdSomeSymbol_$c>_closure+2;
         const GHC.TypeLits.$fOrdSomeSymbol_$c>=_closure+2;
         const GHC.TypeLits.$fOrdSomeSymbol_$cmax_closure+2;
         const GHC.TypeLits.$fOrdSomeSymbol_$cmin_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.37765762 UTC

[section ""data" . GHC.TypeLits.natVal'1_closure" {
     GHC.TypeLits.natVal'1_closure:
         const GHC.TypeLits.natVal'1_info;
 },
 GHC.TypeLits.natVal'1_entry() //  [R2]
         { info_tbl: [(c5tEB,
                       label: GHC.TypeLits.natVal'1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tEB: // global
           R1 = R2 & (-8);
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.378470311 UTC

[section ""data" . GHC.TypeLits.natVal'_closure" {
     GHC.TypeLits.natVal'_closure:
         const GHC.TypeLits.natVal'_info;
 },
 GHC.TypeLits.natVal'_entry() //  [R2]
         { info_tbl: [(c5tEI,
                       label: GHC.TypeLits.natVal'_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tEI: // global
           R2 = R2;
           call GHC.TypeLits.natVal'1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.379328992 UTC

[section ""data" . GHC.TypeLits.symbolVal'1_closure" {
     GHC.TypeLits.symbolVal'1_closure:
         const GHC.TypeLits.symbolVal'1_info;
 },
 GHC.TypeLits.symbolVal'1_entry() //  [R2]
         { info_tbl: [(c5tEP,
                       label: GHC.TypeLits.symbolVal'1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tEP: // global
           R1 = R2 & (-8);
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.380159681 UTC

[section ""data" . GHC.TypeLits.symbolVal'_closure" {
     GHC.TypeLits.symbolVal'_closure:
         const GHC.TypeLits.symbolVal'_info;
 },
 GHC.TypeLits.symbolVal'_entry() //  [R2]
         { info_tbl: [(c5tEW,
                       label: GHC.TypeLits.symbolVal'_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tEW: // global
           R2 = R2;
           call GHC.TypeLits.symbolVal'1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.381118851 UTC

[section ""data" . GHC.TypeLits.someSymbolVal_closure" {
     GHC.TypeLits.someSymbolVal_closure:
         const GHC.TypeLits.someSymbolVal_info;
 },
 GHC.TypeLits.someSymbolVal_entry() //  [R2]
         { info_tbl: [(c5tF4,
                       label: GHC.TypeLits.someSymbolVal_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tF4: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5tF8; else goto c5tF7;
       c5tF8: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = GHC.TypeLits.someSymbolVal_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5tF7: // global
           I64[Hp - 16] = GHC.TypeLits.SomeSymbol_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = Data.Proxy.Proxy_closure+1;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.382722688 UTC

[section ""data" . GHC.TypeLits.$fReadSomeSymbol_go_closure" {
     GHC.TypeLits.$fReadSomeSymbol_go_closure:
         const GHC.TypeLits.$fReadSomeSymbol_go_info;
 },
 sat_s5tmT_entry() //  [R1]
         { info_tbl: [(c5tFs,
                       label: sat_s5tmT_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tFs: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5tFt; else goto c5tFu;
       c5tFt: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5tFu: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.TypeLits.$fReadSomeSymbol_go_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 GHC.TypeLits.$fReadSomeSymbol_go_entry() //  [R2]
         { info_tbl: [(c5tFz,
                       label: GHC.TypeLits.$fReadSomeSymbol_go_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tFz: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5tFA; else goto c5tFB;
       c5tFA: // global
           R2 = R2;
           R1 = GHC.TypeLits.$fReadSomeSymbol_go_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5tFB: // global
           I64[Sp - 8] = block_c5tFd_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5tFM; else goto c5tFe;
       u5tFM: // global
           call _c5tFd(R1) args: 0, res: 0, upd: 0;
       c5tFe: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5tFd() //  [R1]
         { info_tbl: [(c5tFd,
                       label: block_c5tFd_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tFd: // global
           if (R1 & 7 == 1) goto c5tFw; else goto c5tFx;
       c5tFw: // global
           R1 = []_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5tFx: // global
           I64[Sp - 8] = block_c5tFj_info;
           _s5tmN::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp] = _s5tmN::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5tFL; else goto c5tFk;
       u5tFL: // global
           call _c5tFj(R1) args: 0, res: 0, upd: 0;
       c5tFk: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5tFj() //  [R1]
         { info_tbl: [(c5tFj,
                       label: block_c5tFj_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tFj: // global
           Hp = Hp + 96;
           if (Hp > HpLim) (likely: False) goto c5tFK; else goto c5tFJ;
       c5tFK: // global
           HpAlloc = 96;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5tFJ: // global
           _s5tmP::P64 = P64[R1 + 7];
           _s5tmQ::P64 = P64[R1 + 15];
           I64[Hp - 88] = sat_s5tmT_info;
           P64[Hp - 72] = P64[Sp + 8];
           I64[Hp - 64] = GHC.TypeLits.SomeSymbol_con_info;
           P64[Hp - 56] = _s5tmP::P64;
           P64[Hp - 48] = Data.Proxy.Proxy_closure+1;
           I64[Hp - 40] = (,)_con_info;
           P64[Hp - 32] = Hp - 63;
           P64[Hp - 24] = _s5tmQ::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 39;
           P64[Hp] = Hp - 88;
           R1 = Hp - 14;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.385934526 UTC

[section ""data" . GHC.TypeLits.$fReadSomeSymbol_$creadsPrec_closure" {
     GHC.TypeLits.$fReadSomeSymbol_$creadsPrec_closure:
         const GHC.TypeLits.$fReadSomeSymbol_$creadsPrec_info;
         const 0;
 },
 GHC.TypeLits.$fReadSomeSymbol_$creadsPrec_entry() //  [R2, R3]
         { info_tbl: [(c5tFT,
                       label: GHC.TypeLits.$fReadSomeSymbol_$creadsPrec_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tFT: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5tFX; else goto c5tFY;
       c5tFX: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.$fReadSomeSymbol_$creadsPrec_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5tFY: // global
           I64[Sp - 16] = block_c5tFR_info;
           R4 = Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure+1;
           _s5tmV::P64 = R3;
           R3 = R2;
           R2 = GHC.Read.$fReadChar2_closure+1;
           P64[Sp - 8] = _s5tmV::P64;
           Sp = Sp - 16;
           call GHC.Read.list3_entry(R4, R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 _c5tFR() //  [R1]
         { info_tbl: [(c5tFR,
                       label: block_c5tFR_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tFR: // global
           _s5tmV::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5tFW_info;
           R3 = _s5tmV::P64;
           R2 = R1;
           Sp = Sp + 8;
           call Text.ParserCombinators.ReadP.run_entry(R3,
                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 _c5tFW() //  [R1]
         { info_tbl: [(c5tFW,
                       label: block_c5tFW_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tFW: // global
           R2 = R1;
           Sp = Sp + 8;
           call GHC.TypeLits.$fReadSomeSymbol_go_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.387511637 UTC

[section ""data" . GHC.TypeLits.$fReadSomeSymbol4_closure" {
     GHC.TypeLits.$fReadSomeSymbol4_closure:
         const GHC.TypeLits.$fReadSomeSymbol4_info;
         const 0;
 },
 sat_s5tn0_entry() //  [R1, R2]
         { info_tbl: [(c5tGd,
                       label: sat_s5tn0_info
                       rep:HeapRep 1 ptrs { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tGd: // global
           R3 = R2;
           R2 = P64[R1 + 7];
           call GHC.TypeLits.$fReadSomeSymbol_$creadsPrec_entry(R3,
                                                                R2) args: 8, res: 0, upd: 8;
     }
 },
 GHC.TypeLits.$fReadSomeSymbol4_entry() //  [R2, R3]
         { info_tbl: [(c5tGj,
                       label: GHC.TypeLits.$fReadSomeSymbol4_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tGj: // global
           _s5tmZ::P64 = R3;
           _s5tmY::P64 = R2;
           if ((Sp + -8) < SpLim) (likely: False) goto c5tGk; else goto c5tGl;
       c5tGl: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5tGn; else goto c5tGm;
       c5tGn: // global
           HpAlloc = 16;
           goto c5tGk;
       c5tGk: // global
           R3 = _s5tmZ::P64;
           R2 = _s5tmY::P64;
           R1 = GHC.TypeLits.$fReadSomeSymbol4_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5tGm: // global
           I64[Hp - 8] = sat_s5tn0_info;
           P64[Hp] = _s5tmY::P64;
           I64[Sp - 8] = block_c5tGg_info;
           R3 = _s5tmZ::P64;
           R2 = Hp - 7;
           Sp = Sp - 8;
           call Text.ParserCombinators.ReadP.$wreadS_to_P_entry(R3,
                                                                R2) args: 8, res: 8, upd: 8;
     }
 },
 _c5tGg() //  [R1]
         { info_tbl: [(c5tGg,
                       label: block_c5tGg_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tGg: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5tGq; else goto c5tGp;
       c5tGq: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5tGp: // global
           I64[Hp - 8] = Text.ParserCombinators.ReadP.Look_con_info;
           P64[Hp] = R1;
           R1 = Hp - 6;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.388841533 UTC

[section ""data" . GHC.TypeLits.$fReadSomeSymbol3_closure" {
     GHC.TypeLits.$fReadSomeSymbol3_closure:
         const GHC.Types.I#_con_info;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.389662131 UTC

[section ""data" . GHC.TypeLits.$fReadSomeSymbol2_closure" {
     GHC.TypeLits.$fReadSomeSymbol2_closure:
         const GHC.TypeLits.$fReadSomeSymbol2_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.TypeLits.$fReadSomeSymbol2_entry() //  [R1]
         { info_tbl: [(c5tGx,
                       label: GHC.TypeLits.$fReadSomeSymbol2_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tGx: // global
           if ((Sp + -40) < SpLim) (likely: False) goto c5tGy; else goto c5tGz;
       c5tGy: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5tGz: // global
           (_c5tGu::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c5tGu::I64 == 0) goto c5tGw; else goto c5tGv;
       c5tGw: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c5tGv: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c5tGu::I64;
           R2 = GHC.TypeLits.$fReadSomeSymbol4_closure+2;
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = GHC.TypeLits.$fReadSomeSymbol3_closure+1;
           P64[Sp - 24] = Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure+1;
           Sp = Sp - 40;
           call GHC.Read.list_entry(R2) args: 48, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.390734391 UTC

[section ""data" . GHC.TypeLits.$fReadSomeSymbol_$creadList_closure" {
     GHC.TypeLits.$fReadSomeSymbol_$creadList_closure:
         const GHC.TypeLits.$fReadSomeSymbol_$creadList_info;
         const 0;
 },
 GHC.TypeLits.$fReadSomeSymbol_$creadList_entry() //  [R2]
         { info_tbl: [(c5tGE,
                       label: GHC.TypeLits.$fReadSomeSymbol_$creadList_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tGE: // global
           R3 = R2;
           R2 = GHC.TypeLits.$fReadSomeSymbol2_closure;
           call Text.ParserCombinators.ReadP.run_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.391711351 UTC

[section ""data" . GHC.TypeLits.$fReadSomeSymbol1_closure" {
     GHC.TypeLits.$fReadSomeSymbol1_closure:
         const GHC.TypeLits.$fReadSomeSymbol1_info;
         const 0;
 },
 GHC.TypeLits.$fReadSomeSymbol1_entry() //  [R2, R3]
         { info_tbl: [(c5tGO,
                       label: GHC.TypeLits.$fReadSomeSymbol1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tGO: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5tGP; else goto c5tGQ;
       c5tGP: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.$fReadSomeSymbol1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5tGQ: // global
           I64[Sp - 8] = block_c5tGL_info;
           R3 = R3;
           R2 = GHC.TypeLits.$fReadSomeSymbol_$creadList_closure+1;
           Sp = Sp - 8;
           call Text.ParserCombinators.ReadP.$wreadS_to_P_entry(R3,
                                                                R2) args: 8, res: 8, upd: 8;
     }
 },
 _c5tGL() //  [R1]
         { info_tbl: [(c5tGL,
                       label: block_c5tGL_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tGL: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5tGT; else goto c5tGS;
       c5tGT: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5tGS: // global
           I64[Hp - 8] = Text.ParserCombinators.ReadP.Look_con_info;
           P64[Hp] = R1;
           R1 = Hp - 6;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.392782806 UTC

[section ""data" . GHC.TypeLits.$fReadSomeSymbol_closure" {
     GHC.TypeLits.$fReadSomeSymbol_closure:
         const GHC.Read.C:Read_con_info;
         const GHC.TypeLits.$fReadSomeSymbol_$creadsPrec_closure+2;
         const GHC.TypeLits.$fReadSomeSymbol_$creadList_closure+1;
         const GHC.TypeLits.$fReadSomeSymbol4_closure+2;
         const GHC.TypeLits.$fReadSomeSymbol1_closure+2;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.393446264 UTC

[section ""cstring" . GHC.TypeLits.$trModule4_bytes" {
     GHC.TypeLits.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.393986699 UTC

[section ""data" . GHC.TypeLits.$trModule3_closure" {
     GHC.TypeLits.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeLits.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.39454296 UTC

[section ""cstring" . GHC.TypeLits.$trModule2_bytes" {
     GHC.TypeLits.$trModule2_bytes:
         I8[] [71,72,67,46,84,121,112,101,76,105,116,115]
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.39509906 UTC

[section ""data" . GHC.TypeLits.$trModule1_closure" {
     GHC.TypeLits.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeLits.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.395668963 UTC

[section ""data" . GHC.TypeLits.$trModule_closure" {
     GHC.TypeLits.$trModule_closure:
         const GHC.Types.Module_con_info;
         const GHC.TypeLits.$trModule3_closure+1;
         const GHC.TypeLits.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.396259076 UTC

[section ""data" . $krep_r5tkw_closure" {
     $krep_r5tkw_closure:
         const GHC.Types.KindRepVar_con_info;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.396810899 UTC

[section ""data" . $krep1_r5tkx_closure" {
     $krep1_r5tkx_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcChar_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.397432363 UTC

[section ""data" . $krep2_r5tky_closure" {
     $krep2_r5tky_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcConstraint_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.398036685 UTC

[section ""data" . $krep3_r5tkz_closure" {
     $krep3_r5tkz_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcSymbol_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.398612121 UTC

[section ""data" . $krep4_r5tkA_closure" {
     $krep4_r5tkA_closure:
         const :_con_info;
         const $krep1_r5tkx_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.399176 UTC

[section ""data" . $krep5_r5tkB_closure" {
     $krep5_r5tkB_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tc[]_closure;
         const $krep4_r5tkA_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.399698411 UTC

[section ""data" . $krep6_r5tkC_closure" {
     $krep6_r5tkC_closure:
         const :_con_info;
         const $krep_r5tkw_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.400256173 UTC

[section ""data" . $krep7_r5tkD_closure" {
     $krep7_r5tkD_closure:
         const :_con_info;
         const $krep3_r5tkz_closure+1;
         const $krep6_r5tkC_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.400815573 UTC

[section ""data" . $krep8_r5tkE_closure" {
     $krep8_r5tkE_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const Data.Proxy.$tcProxy_closure;
         const $krep7_r5tkD_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.401732237 UTC

[section ""data" . GHC.TypeLits.$tcKnownSymbol1_closure" {
     GHC.TypeLits.$tcKnownSymbol1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep3_r5tkz_closure+1;
         const $krep2_r5tky_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.402298079 UTC

[section ""data" . GHC.TypeLits.$tcSSymbol1_closure" {
     GHC.TypeLits.$tcSSymbol1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep3_r5tkz_closure+1;
         const GHC.Types.krep$*_closure;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.402830812 UTC

[section ""data" . GHC.TypeLits.$tcWrapS1_closure" {
     GHC.TypeLits.$tcWrapS1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep3_r5tkz_closure+1;
         const GHC.Types.krep$*Arr*_closure;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.403430606 UTC

[section ""data" . $krep9_r5tkF_closure" {
     $krep9_r5tkF_closure:
         const GHC.Types.KindRepVar_con_info;
         const 1;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.404004037 UTC

[section ""data" . $krep10_r5tkG_closure" {
     $krep10_r5tkG_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep8_r5tkE_closure+1;
         const $krep9_r5tkF_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.404600537 UTC

[section ""cstring" . GHC.TypeLits.$tcErrorMessage2_bytes" {
     GHC.TypeLits.$tcErrorMessage2_bytes:
         I8[] [69,114,114,111,114,77,101,115,115,97,103,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.405187665 UTC

[section ""data" . GHC.TypeLits.$tcErrorMessage1_closure" {
     GHC.TypeLits.$tcErrorMessage1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeLits.$tcErrorMessage2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.405810144 UTC

[section ""data" . GHC.TypeLits.$tcErrorMessage_closure" {
     GHC.TypeLits.$tcErrorMessage_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeLits.$trModule_closure+1;
         const GHC.TypeLits.$tcErrorMessage1_closure+1;
         const GHC.Types.krep$*_closure;
         const 7630159379940119730;
         const 9206405315391268733;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.406418513 UTC

[section ""data" . $krep11_r5tkH_closure" {
     $krep11_r5tkH_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.TypeLits.$tcErrorMessage_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.407025409 UTC

[section ""data" . GHC.TypeLits.$tc'ShowType1_closure" {
     GHC.TypeLits.$tc'ShowType1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep_r5tkw_closure+2;
         const $krep11_r5tkH_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.40759662 UTC

[section ""cstring" . GHC.TypeLits.$tc'ShowType3_bytes" {
     GHC.TypeLits.$tc'ShowType3_bytes:
         I8[] [39,83,104,111,119,84,121,112,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.408197299 UTC

[section ""data" . GHC.TypeLits.$tc'ShowType2_closure" {
     GHC.TypeLits.$tc'ShowType2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeLits.$tc'ShowType3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.408795367 UTC

[section ""data" . GHC.TypeLits.$tc'ShowType_closure" {
     GHC.TypeLits.$tc'ShowType_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeLits.$trModule_closure+1;
         const GHC.TypeLits.$tc'ShowType2_closure+1;
         const GHC.TypeLits.$tc'ShowType1_closure+4;
         const 8382284352214508650;
         const 11348954620262118930;
         const 1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.409492096 UTC

[section ""data" . GHC.TypeLits.$tc'Text1_closure" {
     GHC.TypeLits.$tc'Text1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep3_r5tkz_closure+1;
         const $krep11_r5tkH_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.411019584 UTC

[section ""cstring" . GHC.TypeLits.$tc'Text3_bytes" {
     GHC.TypeLits.$tc'Text3_bytes:
         I8[] [39,84,101,120,116]
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.411505501 UTC

[section ""data" . GHC.TypeLits.$tc'Text2_closure" {
     GHC.TypeLits.$tc'Text2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeLits.$tc'Text3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.41204173 UTC

[section ""data" . GHC.TypeLits.$tc'Text_closure" {
     GHC.TypeLits.$tc'Text_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeLits.$trModule_closure+1;
         const GHC.TypeLits.$tc'Text2_closure+1;
         const GHC.TypeLits.$tc'Text1_closure+4;
         const 2493578998071024502;
         const 3678534661723514344;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.412634761 UTC

[section ""data" . $krep12_r5tkI_closure" {
     $krep12_r5tkI_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep11_r5tkH_closure+1;
         const $krep11_r5tkH_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.413176394 UTC

[section ""data" . GHC.TypeLits.$tc':$$:1_closure" {
     GHC.TypeLits.$tc':$$:1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep11_r5tkH_closure+1;
         const $krep12_r5tkI_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.413804558 UTC

[section ""cstring" . GHC.TypeLits.$tc':<>:2_bytes" {
     GHC.TypeLits.$tc':<>:2_bytes:
         I8[] [39,58,60,62,58]
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.414342936 UTC

[section ""data" . GHC.TypeLits.$tc':<>:1_closure" {
     GHC.TypeLits.$tc':<>:1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeLits.$tc':<>:2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.414898477 UTC

[section ""data" . GHC.TypeLits.$tc':<>:_closure" {
     GHC.TypeLits.$tc':<>:_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeLits.$trModule_closure+1;
         const GHC.TypeLits.$tc':<>:1_closure+1;
         const GHC.TypeLits.$tc':$$:1_closure+4;
         const 3983262092273118172;
         const 8733217608481743011;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.415492378 UTC

[section ""cstring" . GHC.TypeLits.$tc':$$:3_bytes" {
     GHC.TypeLits.$tc':$$:3_bytes:
         I8[] [39,58,36,36,58]
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.415996958 UTC

[section ""data" . GHC.TypeLits.$tc':$$:2_closure" {
     GHC.TypeLits.$tc':$$:2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeLits.$tc':$$:3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.416551888 UTC

[section ""data" . GHC.TypeLits.$tc':$$:_closure" {
     GHC.TypeLits.$tc':$$:_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeLits.$trModule_closure+1;
         const GHC.TypeLits.$tc':$$:2_closure+1;
         const GHC.TypeLits.$tc':$$:1_closure+4;
         const 16852088601940984151;
         const 507953211190232322;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.417111544 UTC

[section ""cstring" . GHC.TypeLits.$tcSSymbol3_bytes" {
     GHC.TypeLits.$tcSSymbol3_bytes:
         I8[] [83,83,121,109,98,111,108]
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.417705117 UTC

[section ""data" . GHC.TypeLits.$tcSSymbol2_closure" {
     GHC.TypeLits.$tcSSymbol2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeLits.$tcSSymbol3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.418279328 UTC

[section ""data" . GHC.TypeLits.$tcSSymbol_closure" {
     GHC.TypeLits.$tcSSymbol_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeLits.$trModule_closure+1;
         const GHC.TypeLits.$tcSSymbol2_closure+1;
         const GHC.TypeLits.$tcSSymbol1_closure+4;
         const 6053239415793076730;
         const 11057125606635161794;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.418854071 UTC

[section ""data" . $krep13_r5tkJ_closure" {
     $krep13_r5tkJ_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.TypeLits.$tcSSymbol_closure+1;
         const $krep6_r5tkC_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.419439168 UTC

[section ""data" . GHC.TypeLits.$tc'SSymbol1_closure" {
     GHC.TypeLits.$tc'SSymbol1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep5_r5tkB_closure+1;
         const $krep13_r5tkJ_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.419987439 UTC

[section ""cstring" . GHC.TypeLits.$tc'SSymbol3_bytes" {
     GHC.TypeLits.$tc'SSymbol3_bytes:
         I8[] [39,83,83,121,109,98,111,108]
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.420549172 UTC

[section ""data" . GHC.TypeLits.$tc'SSymbol2_closure" {
     GHC.TypeLits.$tc'SSymbol2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeLits.$tc'SSymbol3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.421119361 UTC

[section ""data" . GHC.TypeLits.$tc'SSymbol_closure" {
     GHC.TypeLits.$tc'SSymbol_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeLits.$trModule_closure+1;
         const GHC.TypeLits.$tc'SSymbol2_closure+1;
         const GHC.TypeLits.$tc'SSymbol1_closure+4;
         const 1559313649785769064;
         const 360611317898112776;
         const 1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.422275531 UTC

[section ""cstring" . GHC.TypeLits.$tcKnownSymbol3_bytes" {
     GHC.TypeLits.$tcKnownSymbol3_bytes:
         I8[] [75,110,111,119,110,83,121,109,98,111,108]
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.422815823 UTC

[section ""data" . GHC.TypeLits.$tcKnownSymbol2_closure" {
     GHC.TypeLits.$tcKnownSymbol2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeLits.$tcKnownSymbol3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.423371167 UTC

[section ""data" . GHC.TypeLits.$tcKnownSymbol_closure" {
     GHC.TypeLits.$tcKnownSymbol_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeLits.$trModule_closure+1;
         const GHC.TypeLits.$tcKnownSymbol2_closure+1;
         const GHC.TypeLits.$tcKnownSymbol1_closure+4;
         const 1897426542959159002;
         const 11426707038979253074;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.424000762 UTC

[section ""data" . $krep14_r5tkK_closure" {
     $krep14_r5tkK_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.TypeLits.$tcKnownSymbol_closure+1;
         const $krep6_r5tkC_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.424557262 UTC

[section ""data" . $krep15_r5tkL_closure" {
     $krep15_r5tkL_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep14_r5tkK_closure+1;
         const $krep10_r5tkG_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.425122684 UTC

[section ""data" . GHC.TypeLits.$tc'C:KnownSymbol1_closure" {
     GHC.TypeLits.$tc'C:KnownSymbol1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep13_r5tkJ_closure+1;
         const $krep14_r5tkK_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.425716964 UTC

[section ""cstring" . GHC.TypeLits.$tc'C:KnownSymbol3_bytes" {
     GHC.TypeLits.$tc'C:KnownSymbol3_bytes:
         I8[] [39,67,58,75,110,111,119,110,83,121,109,98,111,108]
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.426328543 UTC

[section ""data" . GHC.TypeLits.$tc'C:KnownSymbol2_closure" {
     GHC.TypeLits.$tc'C:KnownSymbol2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeLits.$tc'C:KnownSymbol3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.426868358 UTC

[section ""data" . GHC.TypeLits.$tc'C:KnownSymbol_closure" {
     GHC.TypeLits.$tc'C:KnownSymbol_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeLits.$trModule_closure+1;
         const GHC.TypeLits.$tc'C:KnownSymbol2_closure+1;
         const GHC.TypeLits.$tc'C:KnownSymbol1_closure+4;
         const 16813031602224516101;
         const 12647750771094255736;
         const 1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.427474726 UTC

[section ""cstring" . GHC.TypeLits.$tcSomeSymbol2_bytes" {
     GHC.TypeLits.$tcSomeSymbol2_bytes:
         I8[] [83,111,109,101,83,121,109,98,111,108]
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.428002608 UTC

[section ""data" . GHC.TypeLits.$tcSomeSymbol1_closure" {
     GHC.TypeLits.$tcSomeSymbol1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeLits.$tcSomeSymbol2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.428587798 UTC

[section ""data" . GHC.TypeLits.$tcSomeSymbol_closure" {
     GHC.TypeLits.$tcSomeSymbol_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeLits.$trModule_closure+1;
         const GHC.TypeLits.$tcSomeSymbol1_closure+1;
         const GHC.Types.krep$*_closure;
         const 8170228625754745342;
         const 5936112829002510826;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.429190646 UTC

[section ""data" . $krep16_r5tkM_closure" {
     $krep16_r5tkM_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.TypeLits.$tcSomeSymbol_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.429866431 UTC

[section ""data" . $krep17_r5tkN_closure" {
     $krep17_r5tkN_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep8_r5tkE_closure+1;
         const $krep16_r5tkM_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.430430713 UTC

[section ""data" . GHC.TypeLits.$tc'SomeSymbol1_closure" {
     GHC.TypeLits.$tc'SomeSymbol1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep14_r5tkK_closure+1;
         const $krep17_r5tkN_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.431003797 UTC

[section ""cstring" . GHC.TypeLits.$tc'SomeSymbol3_bytes" {
     GHC.TypeLits.$tc'SomeSymbol3_bytes:
         I8[] [39,83,111,109,101,83,121,109,98,111,108]
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.431550529 UTC

[section ""data" . GHC.TypeLits.$tc'SomeSymbol2_closure" {
     GHC.TypeLits.$tc'SomeSymbol2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeLits.$tc'SomeSymbol3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.432133441 UTC

[section ""data" . GHC.TypeLits.$tc'SomeSymbol_closure" {
     GHC.TypeLits.$tc'SomeSymbol_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeLits.$trModule_closure+1;
         const GHC.TypeLits.$tc'SomeSymbol2_closure+1;
         const GHC.TypeLits.$tc'SomeSymbol1_closure+4;
         const 3805514464201054242;
         const 4871133717641740493;
         const 1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.432776637 UTC

[section ""cstring" . GHC.TypeLits.$tcWrapS3_bytes" {
     GHC.TypeLits.$tcWrapS3_bytes:
         I8[] [87,114,97,112,83]
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.43343771 UTC

[section ""data" . GHC.TypeLits.$tcWrapS2_closure" {
     GHC.TypeLits.$tcWrapS2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeLits.$tcWrapS3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.434043454 UTC

[section ""data" . GHC.TypeLits.$tcWrapS_closure" {
     GHC.TypeLits.$tcWrapS_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeLits.$trModule_closure+1;
         const GHC.TypeLits.$tcWrapS2_closure+1;
         const GHC.TypeLits.$tcWrapS1_closure+4;
         const 9018955994487767128;
         const 531430869376599499;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.434664822 UTC

[section ""data" . $krep18_r5tkO_closure" {
     $krep18_r5tkO_closure:
         const :_con_info;
         const $krep9_r5tkF_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.436051939 UTC

[section ""data" . $krep19_r5tkP_closure" {
     $krep19_r5tkP_closure:
         const :_con_info;
         const $krep_r5tkw_closure+2;
         const $krep18_r5tkO_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.436584991 UTC

[section ""data" . $krep20_r5tkQ_closure" {
     $krep20_r5tkQ_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.TypeLits.$tcWrapS_closure+1;
         const $krep19_r5tkP_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.437153689 UTC

[section ""data" . GHC.TypeLits.$tc'WrapS1_closure" {
     GHC.TypeLits.$tc'WrapS1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep15_r5tkL_closure+4;
         const $krep20_r5tkQ_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.437734613 UTC

[section ""cstring" . GHC.TypeLits.$tc'WrapS3_bytes" {
     GHC.TypeLits.$tc'WrapS3_bytes:
         I8[] [39,87,114,97,112,83]
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.438294868 UTC

[section ""data" . GHC.TypeLits.$tc'WrapS2_closure" {
     GHC.TypeLits.$tc'WrapS2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeLits.$tc'WrapS3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.438882966 UTC

[section ""data" . GHC.TypeLits.$tc'WrapS_closure" {
     GHC.TypeLits.$tc'WrapS_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeLits.$trModule_closure+1;
         const GHC.TypeLits.$tc'WrapS2_closure+1;
         const GHC.TypeLits.$tc'WrapS1_closure+4;
         const 10848673411250088112;
         const 6323353939001754670;
         const 2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.439817366 UTC

[section ""data" . GHC.TypeLits.someNatVal1_closure" {
     GHC.TypeLits.someNatVal1_closure:
         const GHC.TypeLits.someNatVal1_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.TypeLits.someNatVal1_entry() //  [R1]
         { info_tbl: [(c5tH0,
                       label: GHC.TypeLits.someNatVal1_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tH0: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5tH1; else goto c5tH2;
       c5tH1: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5tH2: // global
           (_c5tGX::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c5tGX::I64 == 0) goto c5tGZ; else goto c5tGY;
       c5tGZ: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c5tGY: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c5tGX::I64;
           R3 = GHC.Types.[]_closure+1;
           R2 = GHC.Types.True_closure+2;
           Sp = Sp - 16;
           call GHC.Integer.Type.mkInteger_entry(R3,
                                                 R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.441383343 UTC

[section ""data" . GHC.TypeLits.someNatVal_closure" {
     GHC.TypeLits.someNatVal_closure:
         const GHC.TypeLits.someNatVal_info;
         const 0;
 },
 sat_s5tn9_entry() //  [R1]
         { info_tbl: [(c5tHg,
                       label: sat_s5tn9_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tHg: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5tHh; else goto c5tHi;
       c5tHh: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5tHi: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Natural.naturalFromInteger_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 GHC.TypeLits.someNatVal_entry() //  [R2]
         { info_tbl: [(c5tHm,
                       label: GHC.TypeLits.someNatVal_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tHm: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5tHn; else goto c5tHo;
       c5tHn: // global
           R2 = R2;
           R1 = GHC.TypeLits.someNatVal_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5tHo: // global
           I64[Sp - 16] = block_c5tH7_info;
           R3 = GHC.TypeLits.someNatVal1_closure;
           _s5tn7::P64 = R2;
           R2 = R2;
           P64[Sp - 8] = _s5tn7::P64;
           Sp = Sp - 16;
           call GHC.Integer.Type.geInteger#_entry(R3,
                                                  R2) args: 8, res: 8, upd: 8;
     }
 },
 _c5tH7() //  [R1]
         { info_tbl: [(c5tH7,
                       label: block_c5tH7_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tH7: // global
           if (R1 == 1) goto c5tHl; else goto c5tHk;
       c5tHl: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c5tHv; else goto c5tHu;
       c5tHv: // global
           HpAlloc = 64;
           R1 = R1;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c5tHu: // global
           I64[Hp - 56] = sat_s5tn9_info;
           P64[Hp - 40] = P64[Sp + 8];
           I64[Hp - 32] = GHC.TypeNats.SomeNat_con_info;
           P64[Hp - 24] = Hp - 56;
           P64[Hp - 16] = Data.Proxy.Proxy_closure+1;
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = Hp - 31;
           R1 = Hp - 6;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5tHk: // global
           R1 = GHC.Base.Nothing_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.4430725 UTC

[section ""data" . GHC.TypeLits.WrapS_closure" {
     GHC.TypeLits.WrapS_closure:
         const GHC.TypeLits.WrapS_info;
 },
 GHC.TypeLits.WrapS_entry() //  [R2]
         { info_tbl: [(c5tHB,
                       label: GHC.TypeLits.WrapS_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tHB: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5tHF; else goto c5tHE;
       c5tHF: // global
           HpAlloc = 16;
           R2 = R2;
           R1 = GHC.TypeLits.WrapS_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5tHE: // global
           I64[Hp - 8] = GHC.TypeLits.WrapS_con_info;
           P64[Hp] = R2;
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.443988188 UTC

[section ""data" . GHC.TypeLits.Text_closure" {
     GHC.TypeLits.Text_closure:
         const GHC.TypeLits.Text_info;
 },
 GHC.TypeLits.Text_entry() //  [R2]
         { info_tbl: [(c5tHL,
                       label: GHC.TypeLits.Text_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tHL: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5tHP; else goto c5tHO;
       c5tHP: // global
           HpAlloc = 16;
           R2 = R2;
           R1 = GHC.TypeLits.Text_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5tHO: // global
           I64[Hp - 8] = GHC.TypeLits.Text_con_info;
           P64[Hp] = R2;
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.444963885 UTC

[section ""data" . GHC.TypeLits.ShowType_closure" {
     GHC.TypeLits.ShowType_closure:
         const GHC.TypeLits.ShowType_info;
 },
 GHC.TypeLits.ShowType_entry() //  [R2]
         { info_tbl: [(c5tHV,
                       label: GHC.TypeLits.ShowType_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tHV: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5tHZ; else goto c5tHY;
       c5tHZ: // global
           HpAlloc = 16;
           R2 = R2;
           R1 = GHC.TypeLits.ShowType_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5tHY: // global
           I64[Hp - 8] = GHC.TypeLits.ShowType_con_info;
           P64[Hp] = R2;
           R1 = Hp - 6;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.446002197 UTC

[section ""data" . GHC.TypeLits.:<>:_closure" {
     GHC.TypeLits.:<>:_closure:
         const GHC.TypeLits.:<>:_info;
 },
 GHC.TypeLits.:<>:_entry() //  [R2, R3]
         { info_tbl: [(c5tI5,
                       label: GHC.TypeLits.:<>:_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tI5: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5tI9; else goto c5tI8;
       c5tI9: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.:<>:_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5tI8: // global
           I64[Hp - 16] = GHC.TypeLits.:<>:_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 13;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.447061492 UTC

[section ""data" . GHC.TypeLits.:$$:_closure" {
     GHC.TypeLits.:$$:_closure:
         const GHC.TypeLits.:$$:_info;
 },
 GHC.TypeLits.:$$:_entry() //  [R2, R3]
         { info_tbl: [(c5tIf,
                       label: GHC.TypeLits.:$$:_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tIf: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5tIj; else goto c5tIi;
       c5tIj: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.:$$:_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5tIi: // global
           I64[Hp - 16] = GHC.TypeLits.:$$:_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 12;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.448057277 UTC

[section ""data" . GHC.TypeLits.SomeSymbol_closure" {
     GHC.TypeLits.SomeSymbol_closure:
         const GHC.TypeLits.SomeSymbol_info;
 },
 GHC.TypeLits.SomeSymbol_entry() //  [R2, R3]
         { info_tbl: [(c5tIp,
                       label: GHC.TypeLits.SomeSymbol_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tIp: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5tIt; else goto c5tIs;
       c5tIt: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.SomeSymbol_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5tIs: // global
           I64[Hp - 16] = GHC.TypeLits.SomeSymbol_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.448971247 UTC

[GHC.TypeLits.WrapS_con_entry() //  [R1]
         { info_tbl: [(c5tIu,
                       label: GHC.TypeLits.WrapS_con_info
                       rep:HeapRep 1 ptrs {
                             Con {tag: 0
                                  descr:[98,97,115,101,58,71,72,67,46,84,121,112,101,76,105,116,115,46,87,114,97,112,83]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tIu: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.450328503 UTC

[GHC.TypeLits.Text_con_entry() //  [R1]
         { info_tbl: [(c5tIw,
                       label: GHC.TypeLits.Text_con_info
                       rep:HeapRep 1 ptrs {
                             Con {tag: 0
                                  descr:[98,97,115,101,58,71,72,67,46,84,121,112,101,76,105,116,115,46,84,101,120,116]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tIw: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.451053017 UTC

[GHC.TypeLits.ShowType_con_entry() //  [R1]
         { info_tbl: [(c5tIy,
                       label: GHC.TypeLits.ShowType_con_info
                       rep:HeapRep 1 ptrs {
                             Con {tag: 1
                                  descr:[98,97,115,101,58,71,72,67,46,84,121,112,101,76,105,116,115,46,83,104,111,119,84,121,112,101]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tIy: // global
           R1 = R1 + 2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.451807848 UTC

[GHC.TypeLits.:<>:_con_entry() //  [R1]
         { info_tbl: [(c5tIA,
                       label: GHC.TypeLits.:<>:_con_info
                       rep:HeapRep 2 ptrs {
                             Con {tag: 2
                                  descr:[98,97,115,101,58,71,72,67,46,84,121,112,101,76,105,116,115,46,58,60,62,58]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tIA: // global
           R1 = R1 + 3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.452528587 UTC

[GHC.TypeLits.:$$:_con_entry() //  [R1]
         { info_tbl: [(c5tIC,
                       label: GHC.TypeLits.:$$:_con_info
                       rep:HeapRep 2 ptrs {
                             Con {tag: 3
                                  descr:[98,97,115,101,58,71,72,67,46,84,121,112,101,76,105,116,115,46,58,36,36,58]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tIC: // global
           R1 = R1 + 4;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.453328201 UTC

[GHC.TypeLits.SomeSymbol_con_entry() //  [R1]
         { info_tbl: [(c5tIE,
                       label: GHC.TypeLits.SomeSymbol_con_info
                       rep:HeapRep 2 ptrs {
                             Con {tag: 0
                                  descr:[98,97,115,101,58,71,72,67,46,84,121,112,101,76,105,116,115,46,83,111,109,101,83,121,109,98,111,108]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tIE: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.453999912 UTC

[section ""relreadonly" . S5tou_srt" {
     S5tou_srt:
         const GHC.Show.showLitString_closure;
         const GHC.TypeLits.$fShowSomeSymbol_$cshowsPrec_closure;
         const GHC.TypeLits.$fShowSomeSymbol_$cshow_closure;
         const GHC.TypeLits.$fShowSomeSymbol1_closure;
         const GHC.Read.list3_closure;
         const GHC.Read.$fReadChar2_closure;
         const GHC.TypeLits.$fReadSomeSymbol_$creadsPrec_closure;
         const GHC.TypeLits.$fReadSomeSymbol4_closure;
         const GHC.Read.list_closure;
         const GHC.TypeLits.$fReadSomeSymbol2_closure;
         const GHC.TypeLits.$fReadSomeSymbol1_closure;
         const GHC.TypeLits.$fReadSomeSymbol_$creadList_closure;
         const GHC.Natural.naturalFromInteger_closure;
         const GHC.TypeLits.someNatVal_closure;
         const GHC.TypeLits.someNatVal1_closure;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.454857331 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:00:29.456229124 UTC

[section ""data" . GHC.TypeLits.symbolSing_closure" {
     GHC.TypeLits.symbolSing_closure:
         const GHC.TypeLits.symbolSing_info;
 },
 GHC.TypeLits.symbolSing_entry() //  [R2]
         { info_tbl: [(c5tIK,
                       label: GHC.TypeLits.symbolSing_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tIK: // global
           R1 = R2 & (-8);
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.459875599 UTC

[section ""data" . GHC.TypeLits.natVal1_closure" {
     GHC.TypeLits.natVal1_closure:
         const GHC.TypeLits.natVal1_info;
 },
 GHC.TypeLits.natVal1_entry() //  [R2]
         { info_tbl: [(c5tIX,
                       label: GHC.TypeLits.natVal1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tIX: // global
           R1 = R2 & (-8);
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.463952384 UTC

[section ""data" . GHC.TypeLits.natVal_closure" {
     GHC.TypeLits.natVal_closure:
         const GHC.TypeLits.natVal_info;
 },
 GHC.TypeLits.natVal_entry() //  [R2, R3]
         { info_tbl: [(c5tJa,
                       label: GHC.TypeLits.natVal_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tJa: // global
           R3 = R3;
           R2 = R2;
           call GHC.TypeLits.natVal1_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.468206373 UTC

[section ""data" . GHC.TypeLits.symbolVal1_closure" {
     GHC.TypeLits.symbolVal1_closure:
         const GHC.TypeLits.symbolVal1_info;
 },
 GHC.TypeLits.symbolVal1_entry() //  [R2]
         { info_tbl: [(c5tJl,
                       label: GHC.TypeLits.symbolVal1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tJl: // global
           R1 = R2 & (-8);
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.471666782 UTC

[section ""data" . GHC.TypeLits.symbolVal_closure" {
     GHC.TypeLits.symbolVal_closure:
         const GHC.TypeLits.symbolVal_info;
 },
 GHC.TypeLits.symbolVal_entry() //  [R2, R3]
         { info_tbl: [(c5tJy,
                       label: GHC.TypeLits.symbolVal_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tJy: // global
           R3 = R3;
           R2 = R2;
           call GHC.TypeLits.symbolVal1_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.474767564 UTC

[section ""data" . GHC.TypeLits.sameSymbol1_closure" {
     GHC.TypeLits.sameSymbol1_closure:
         const GHC.Base.Just_con_info;
         const Data.Type.Equality.$WRefl_closure;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.476800271 UTC

[section ""data" . GHC.TypeLits.sameSymbol_closure" {
     GHC.TypeLits.sameSymbol_closure:
         const GHC.TypeLits.sameSymbol_info;
 },
 GHC.TypeLits.sameSymbol_entry() //  [R2, R3, R4, R5]
         { info_tbl: [(c5tJQ,
                       label: GHC.TypeLits.sameSymbol_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 24} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tJQ: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5tJR; else goto c5tJS;
       c5tJR: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.sameSymbol_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5tJS: // global
           I64[Sp - 8] = block_c5tJK_info;
           R3 = R3;
           R2 = R2;
           Sp = Sp - 8;
           call GHC.Base.eqString_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 _c5tJK() //  [R1]
         { info_tbl: [(c5tJK,
                       label: block_c5tJK_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tJK: // global
           if (R1 & 7 == 1) goto c5tJN; else goto c5tJO;
       c5tJN: // global
           R1 = GHC.Base.Nothing_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5tJO: // global
           R1 = GHC.TypeLits.sameSymbol1_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.483166188 UTC

[section ""data" . GHC.TypeLits.$fShowSomeSymbol_$cshowsPrec_closure" {
     GHC.TypeLits.$fShowSomeSymbol_$cshowsPrec_closure:
         const GHC.TypeLits.$fShowSomeSymbol_$cshowsPrec_info;
         const 0;
 },
 sat_s5tl9_entry() //  [R1]
         { info_tbl: [(c5tKp,
                       label: sat_s5tl9_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tKp: // global
           _s5tl9::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c5tKq; else goto c5tKr;
       c5tKr: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5tKt; else goto c5tKs;
       c5tKt: // global
           HpAlloc = 24;
           goto c5tKq;
       c5tKq: // global
           R1 = _s5tl9::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5tKs: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5tl9::P64;
           _s5tl4::P64 = P64[_s5tl9::P64 + 16];
           _s5tl6::P64 = P64[_s5tl9::P64 + 24];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.$fShow(,)3_closure;
           P64[Hp] = _s5tl4::P64;
           R3 = Hp - 14;
           R2 = _s5tl6::P64;
           Sp = Sp - 16;
           call GHC.Show.showLitString_entry(R3,
                                             R2) args: 24, res: 0, upd: 24;
     }
 },
 GHC.TypeLits.$fShowSomeSymbol_$cshowsPrec_entry() //  [R2, R3, R4]
         { info_tbl: [(c5tKu,
                       label: GHC.TypeLits.$fShowSomeSymbol_$cshowsPrec_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tKu: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5tKw; else goto c5tKx;
       c5tKw: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.$fShowSomeSymbol_$cshowsPrec_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5tKx: // global
           I64[Sp - 16] = block_c5tKf_info;
           R1 = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5tKB; else goto c5tKg;
       u5tKB: // global
           call _c5tKf(R1) args: 0, res: 0, upd: 0;
       c5tKg: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5tKf() //  [R1]
         { info_tbl: [(c5tKf,
                       label: block_c5tKf_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tKf: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c5tKA; else goto c5tKz;
       c5tKA: // global
           HpAlloc = 56;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5tKz: // global
           _s5tl6::P64 = P64[R1 + 7];
           I64[Hp - 48] = sat_s5tl9_info;
           P64[Hp - 32] = P64[Sp + 8];
           P64[Hp - 24] = _s5tl6::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.$fShow(,)3_closure;
           P64[Hp] = Hp - 48;
           R1 = Hp - 14;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.491488465 UTC

[section ""data" . GHC.TypeLits.$fShowSomeSymbol2_closure" {
     GHC.TypeLits.$fShowSomeSymbol2_closure:
         const :_con_info;
         const GHC.Show.$fShow(,)3_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.494840733 UTC

[section ""data" . GHC.TypeLits.$fShowSomeSymbol_$cshow_closure" {
     GHC.TypeLits.$fShowSomeSymbol_$cshow_closure:
         const GHC.TypeLits.$fShowSomeSymbol_$cshow_info;
         const 0;
 },
 sat_s5tle_entry() //  [R1]
         { info_tbl: [(c5tL6,
                       label: sat_s5tle_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tL6: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5tL7; else goto c5tL8;
       c5tL7: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5tL8: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = GHC.TypeLits.$fShowSomeSymbol2_closure+2;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Show.showLitString_entry(R3,
                                             R2) args: 24, res: 0, upd: 24;
     }
 },
 GHC.TypeLits.$fShowSomeSymbol_$cshow_entry() //  [R2]
         { info_tbl: [(c5tL9,
                       label: GHC.TypeLits.$fShowSomeSymbol_$cshow_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tL9: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5tLb; else goto c5tLc;
       c5tLb: // global
           R2 = R2;
           R1 = GHC.TypeLits.$fShowSomeSymbol_$cshow_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5tLc: // global
           I64[Sp - 8] = block_c5tKX_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5tLg; else goto c5tKY;
       u5tLg: // global
           call _c5tKX(R1) args: 0, res: 0, upd: 0;
       c5tKY: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5tKX() //  [R1]
         { info_tbl: [(c5tKX,
                       label: block_c5tKX_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tKX: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5tLf; else goto c5tLe;
       c5tLf: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5tLe: // global
           _s5tlc::P64 = P64[R1 + 7];
           I64[Hp - 40] = sat_s5tle_info;
           P64[Hp - 24] = _s5tlc::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.$fShow(,)3_closure;
           P64[Hp] = Hp - 40;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.503018491 UTC

[section ""data" . GHC.TypeLits.$fShowSomeSymbol1_closure" {
     GHC.TypeLits.$fShowSomeSymbol1_closure:
         const GHC.TypeLits.$fShowSomeSymbol1_info;
         const 0;
 },
 sat_s5tll_entry() //  [R1]
         { info_tbl: [(c5tLK,
                       label: sat_s5tll_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tLK: // global
           _s5tll::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c5tLL; else goto c5tLM;
       c5tLM: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5tLO; else goto c5tLN;
       c5tLO: // global
           HpAlloc = 24;
           goto c5tLL;
       c5tLL: // global
           R1 = _s5tll::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5tLN: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5tll::P64;
           _s5tlg::P64 = P64[_s5tll::P64 + 16];
           _s5tli::P64 = P64[_s5tll::P64 + 24];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.$fShow(,)3_closure;
           P64[Hp] = _s5tlg::P64;
           R3 = Hp - 14;
           R2 = _s5tli::P64;
           Sp = Sp - 16;
           call GHC.Show.showLitString_entry(R3,
                                             R2) args: 24, res: 0, upd: 24;
     }
 },
 GHC.TypeLits.$fShowSomeSymbol1_entry() //  [R2, R3]
         { info_tbl: [(c5tLP,
                       label: GHC.TypeLits.$fShowSomeSymbol1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tLP: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5tLR; else goto c5tLS;
       c5tLR: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.$fShowSomeSymbol1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5tLS: // global
           I64[Sp - 16] = block_c5tLA_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5tLW; else goto c5tLB;
       u5tLW: // global
           call _c5tLA(R1) args: 0, res: 0, upd: 0;
       c5tLB: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5tLA() //  [R1]
         { info_tbl: [(c5tLA,
                       label: block_c5tLA_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tLA: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c5tLV; else goto c5tLU;
       c5tLV: // global
           HpAlloc = 56;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5tLU: // global
           _s5tli::P64 = P64[R1 + 7];
           I64[Hp - 48] = sat_s5tll_info;
           P64[Hp - 32] = P64[Sp + 8];
           P64[Hp - 24] = _s5tli::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.$fShow(,)3_closure;
           P64[Hp] = Hp - 48;
           R1 = Hp - 14;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.511333189 UTC

[section ""data" . GHC.TypeLits.$fShowSomeSymbol_$cshowList_closure" {
     GHC.TypeLits.$fShowSomeSymbol_$cshowList_closure:
         const GHC.TypeLits.$fShowSomeSymbol_$cshowList_info;
         const 0;
 },
 GHC.TypeLits.$fShowSomeSymbol_$cshowList_entry() //  [R2, R3]
         { info_tbl: [(c5tMh,
                       label: GHC.TypeLits.$fShowSomeSymbol_$cshowList_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tMh: // global
           R4 = R3;
           R3 = R2;
           R2 = GHC.TypeLits.$fShowSomeSymbol1_closure+2;
           call GHC.Show.showList___entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.515314739 UTC

[section ""data" . GHC.TypeLits.$fShowSomeSymbol_closure" {
     GHC.TypeLits.$fShowSomeSymbol_closure:
         const GHC.Show.C:Show_con_info;
         const GHC.TypeLits.$fShowSomeSymbol_$cshowsPrec_closure+3;
         const GHC.TypeLits.$fShowSomeSymbol_$cshow_closure+1;
         const GHC.TypeLits.$fShowSomeSymbol_$cshowList_closure+2;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.517508945 UTC

[section ""data" . GHC.TypeLits.$fOrdSomeSymbol_$ccompare_closure" {
     GHC.TypeLits.$fOrdSomeSymbol_$ccompare_closure:
         const GHC.TypeLits.$fOrdSomeSymbol_$ccompare_info;
 },
 GHC.TypeLits.$fOrdSomeSymbol_$ccompare_entry() //  [R2, R3]
         { info_tbl: [(c5tMw,
                       label: GHC.TypeLits.$fOrdSomeSymbol_$ccompare_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tMw: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5tMA; else goto c5tMB;
       c5tMA: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.$fOrdSomeSymbol_$ccompare_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5tMB: // global
           I64[Sp - 16] = block_c5tMt_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5tMJ; else goto c5tMu;
       u5tMJ: // global
           call _c5tMt(R1) args: 0, res: 0, upd: 0;
       c5tMu: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5tMt() //  [R1]
         { info_tbl: [(c5tMt,
                       label: block_c5tMt_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tMt: // global
           I64[Sp] = block_c5tMz_info;
           _s5tlr::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s5tlr::P64;
           if (R1 & 7 != 0) goto u5tMI; else goto c5tMD;
       u5tMI: // global
           call _c5tMz(R1) args: 0, res: 0, upd: 0;
       c5tMD: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5tMz() //  [R1]
         { info_tbl: [(c5tMz,
                       label: block_c5tMz_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tMz: // global
           R3 = P64[R1 + 7];
           R2 = P64[Sp + 8];
           Sp = Sp + 16;
           call GHC.Classes.$fOrd[]_$s$ccompare1_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.525693259 UTC

[section ""data" . GHC.TypeLits.$fEqSomeSymbol_$c==_closure" {
     GHC.TypeLits.$fEqSomeSymbol_$c==_closure:
         const GHC.TypeLits.$fEqSomeSymbol_$c==_info;
 },
 GHC.TypeLits.$fEqSomeSymbol_$c==_entry() //  [R2, R3]
         { info_tbl: [(c5tN4,
                       label: GHC.TypeLits.$fEqSomeSymbol_$c==_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tN4: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5tN8; else goto c5tN9;
       c5tN8: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.$fEqSomeSymbol_$c==_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5tN9: // global
           I64[Sp - 16] = block_c5tN1_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5tNh; else goto c5tN2;
       u5tNh: // global
           call _c5tN1(R1) args: 0, res: 0, upd: 0;
       c5tN2: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5tN1() //  [R1]
         { info_tbl: [(c5tN1,
                       label: block_c5tN1_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tN1: // global
           I64[Sp] = block_c5tN7_info;
           _s5tlz::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s5tlz::P64;
           if (R1 & 7 != 0) goto u5tNg; else goto c5tNb;
       u5tNg: // global
           call _c5tN7(R1) args: 0, res: 0, upd: 0;
       c5tNb: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5tN7() //  [R1]
         { info_tbl: [(c5tN7,
                       label: block_c5tN7_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tN7: // global
           R3 = P64[R1 + 7];
           R2 = P64[Sp + 8];
           Sp = Sp + 16;
           call GHC.Base.eqString_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.533552479 UTC

[section ""data" . GHC.TypeLits.$fEqSomeSymbol_$c/=_closure" {
     GHC.TypeLits.$fEqSomeSymbol_$c/=_closure:
         const GHC.TypeLits.$fEqSomeSymbol_$c/=_info;
 },
 GHC.TypeLits.$fEqSomeSymbol_$c/=_entry() //  [R2, R3]
         { info_tbl: [(c5tNC,
                       label: GHC.TypeLits.$fEqSomeSymbol_$c/=_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tNC: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5tNG; else goto c5tNH;
       c5tNG: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.$fEqSomeSymbol_$c/=_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5tNH: // global
           I64[Sp - 16] = block_c5tNz_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5tO1; else goto c5tNA;
       u5tO1: // global
           call _c5tNz(R1) args: 0, res: 0, upd: 0;
       c5tNA: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5tNz() //  [R1]
         { info_tbl: [(c5tNz,
                       label: block_c5tNz_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tNz: // global
           I64[Sp] = block_c5tNF_info;
           _s5tlH::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s5tlH::P64;
           if (R1 & 7 != 0) goto u5tO0; else goto c5tNJ;
       u5tO0: // global
           call _c5tNF(R1) args: 0, res: 0, upd: 0;
       c5tNJ: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5tNF() //  [R1]
         { info_tbl: [(c5tNF,
                       label: block_c5tNF_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tNF: // global
           _s5tlH::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5tNN_info;
           R3 = P64[R1 + 7];
           R2 = _s5tlH::P64;
           Sp = Sp + 8;
           call GHC.Base.eqString_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 _c5tNN() //  [R1]
         { info_tbl: [(c5tNN,
                       label: block_c5tNN_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tNN: // global
           if (R1 & 7 == 1) goto c5tNU; else goto c5tNY;
       c5tNU: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5tNY: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.542216692 UTC

[section ""data" . GHC.TypeLits.$fEqSomeSymbol_closure" {
     GHC.TypeLits.$fEqSomeSymbol_closure:
         const GHC.Classes.C:Eq_con_info;
         const GHC.TypeLits.$fEqSomeSymbol_$c==_closure+2;
         const GHC.TypeLits.$fEqSomeSymbol_$c/=_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.544456377 UTC

[section ""data" . GHC.TypeLits.$fOrdSomeSymbol_$c<_closure" {
     GHC.TypeLits.$fOrdSomeSymbol_$c<_closure:
         const GHC.TypeLits.$fOrdSomeSymbol_$c<_info;
 },
 GHC.TypeLits.$fOrdSomeSymbol_$c<_entry() //  [R2, R3]
         { info_tbl: [(c5tOu,
                       label: GHC.TypeLits.$fOrdSomeSymbol_$c<_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tOu: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5tOy; else goto c5tOz;
       c5tOy: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.$fOrdSomeSymbol_$c<_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5tOz: // global
           I64[Sp - 16] = block_c5tOr_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5tOT; else goto c5tOs;
       u5tOT: // global
           call _c5tOr(R1) args: 0, res: 0, upd: 0;
       c5tOs: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5tOr() //  [R1]
         { info_tbl: [(c5tOr,
                       label: block_c5tOr_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tOr: // global
           I64[Sp] = block_c5tOx_info;
           _s5tlQ::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s5tlQ::P64;
           if (R1 & 7 != 0) goto u5tOS; else goto c5tOB;
       u5tOS: // global
           call _c5tOx(R1) args: 0, res: 0, upd: 0;
       c5tOB: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5tOx() //  [R1]
         { info_tbl: [(c5tOx,
                       label: block_c5tOx_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tOx: // global
           _s5tlQ::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5tOF_info;
           R3 = P64[R1 + 7];
           R2 = _s5tlQ::P64;
           Sp = Sp + 8;
           call GHC.Classes.$fOrd[]_$s$ccompare1_entry(R3,
                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 _c5tOF() //  [R1]
         { info_tbl: [(c5tOF,
                       label: block_c5tOF_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tOF: // global
           if (R1 & 7 == 1) goto c5tOQ; else goto c5tOM;
       c5tOQ: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5tOM: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.554550166 UTC

[section ""data" . GHC.TypeLits.$fOrdSomeSymbol_$c>=_closure" {
     GHC.TypeLits.$fOrdSomeSymbol_$c>=_closure:
         const GHC.TypeLits.$fOrdSomeSymbol_$c>=_info;
 },
 GHC.TypeLits.$fOrdSomeSymbol_$c>=_entry() //  [R2, R3]
         { info_tbl: [(c5tPl,
                       label: GHC.TypeLits.$fOrdSomeSymbol_$c>=_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tPl: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5tPp; else goto c5tPq;
       c5tPp: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.$fOrdSomeSymbol_$c>=_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5tPq: // global
           I64[Sp - 16] = block_c5tPi_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5tPK; else goto c5tPj;
       u5tPK: // global
           call _c5tPi(R1) args: 0, res: 0, upd: 0;
       c5tPj: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5tPi() //  [R1]
         { info_tbl: [(c5tPi,
                       label: block_c5tPi_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tPi: // global
           I64[Sp] = block_c5tPo_info;
           _s5tlZ::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s5tlZ::P64;
           if (R1 & 7 != 0) goto u5tPJ; else goto c5tPs;
       u5tPJ: // global
           call _c5tPo(R1) args: 0, res: 0, upd: 0;
       c5tPs: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5tPo() //  [R1]
         { info_tbl: [(c5tPo,
                       label: block_c5tPo_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tPo: // global
           _s5tlZ::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5tPw_info;
           R3 = P64[R1 + 7];
           R2 = _s5tlZ::P64;
           Sp = Sp + 8;
           call GHC.Classes.$fOrd[]_$s$ccompare1_entry(R3,
                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 _c5tPw() //  [R1]
         { info_tbl: [(c5tPw,
                       label: block_c5tPw_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tPw: // global
           if (R1 & 7 == 1) goto c5tPH; else goto c5tPD;
       c5tPH: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5tPD: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.563831871 UTC

[section ""data" . GHC.TypeLits.$fOrdSomeSymbol_$c>_closure" {
     GHC.TypeLits.$fOrdSomeSymbol_$c>_closure:
         const GHC.TypeLits.$fOrdSomeSymbol_$c>_info;
 },
 GHC.TypeLits.$fOrdSomeSymbol_$c>_entry() //  [R2, R3]
         { info_tbl: [(c5tQc,
                       label: GHC.TypeLits.$fOrdSomeSymbol_$c>_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tQc: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5tQg; else goto c5tQh;
       c5tQg: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.$fOrdSomeSymbol_$c>_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5tQh: // global
           I64[Sp - 16] = block_c5tQ9_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5tQB; else goto c5tQa;
       u5tQB: // global
           call _c5tQ9(R1) args: 0, res: 0, upd: 0;
       c5tQa: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5tQ9() //  [R1]
         { info_tbl: [(c5tQ9,
                       label: block_c5tQ9_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tQ9: // global
           I64[Sp] = block_c5tQf_info;
           _s5tm8::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s5tm8::P64;
           if (R1 & 7 != 0) goto u5tQA; else goto c5tQj;
       u5tQA: // global
           call _c5tQf(R1) args: 0, res: 0, upd: 0;
       c5tQj: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5tQf() //  [R1]
         { info_tbl: [(c5tQf,
                       label: block_c5tQf_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tQf: // global
           _s5tm8::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5tQn_info;
           R3 = P64[R1 + 7];
           R2 = _s5tm8::P64;
           Sp = Sp + 8;
           call GHC.Classes.$fOrd[]_$s$ccompare1_entry(R3,
                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 _c5tQn() //  [R1]
         { info_tbl: [(c5tQn,
                       label: block_c5tQn_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tQn: // global
           if (R1 & 7 == 3) goto c5tQy; else goto c5tQu;
       c5tQy: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5tQu: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.57309387 UTC

[section ""data" . GHC.TypeLits.$fOrdSomeSymbol_$c<=_closure" {
     GHC.TypeLits.$fOrdSomeSymbol_$c<=_closure:
         const GHC.TypeLits.$fOrdSomeSymbol_$c<=_info;
 },
 GHC.TypeLits.$fOrdSomeSymbol_$c<=_entry() //  [R2, R3]
         { info_tbl: [(c5tR3,
                       label: GHC.TypeLits.$fOrdSomeSymbol_$c<=_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tR3: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5tR7; else goto c5tR8;
       c5tR7: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.$fOrdSomeSymbol_$c<=_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5tR8: // global
           I64[Sp - 16] = block_c5tR0_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5tRs; else goto c5tR1;
       u5tRs: // global
           call _c5tR0(R1) args: 0, res: 0, upd: 0;
       c5tR1: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5tR0() //  [R1]
         { info_tbl: [(c5tR0,
                       label: block_c5tR0_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tR0: // global
           I64[Sp] = block_c5tR6_info;
           _s5tmh::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s5tmh::P64;
           if (R1 & 7 != 0) goto u5tRr; else goto c5tRa;
       u5tRr: // global
           call _c5tR6(R1) args: 0, res: 0, upd: 0;
       c5tRa: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5tR6() //  [R1]
         { info_tbl: [(c5tR6,
                       label: block_c5tR6_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tR6: // global
           _s5tmh::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5tRe_info;
           R3 = P64[R1 + 7];
           R2 = _s5tmh::P64;
           Sp = Sp + 8;
           call GHC.Classes.$fOrd[]_$s$ccompare1_entry(R3,
                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 _c5tRe() //  [R1]
         { info_tbl: [(c5tRe,
                       label: block_c5tRe_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tRe: // global
           if (R1 & 7 == 3) goto c5tRp; else goto c5tRl;
       c5tRp: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5tRl: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.583518882 UTC

[section ""data" . GHC.TypeLits.$fOrdSomeSymbol_$cmax_closure" {
     GHC.TypeLits.$fOrdSomeSymbol_$cmax_closure:
         const GHC.TypeLits.$fOrdSomeSymbol_$cmax_info;
 },
 GHC.TypeLits.$fOrdSomeSymbol_$cmax_entry() //  [R2, R3]
         { info_tbl: [(c5tRU,
                       label: GHC.TypeLits.$fOrdSomeSymbol_$cmax_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tRU: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5tRY; else goto c5tRZ;
       c5tRY: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.$fOrdSomeSymbol_$cmax_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5tRZ: // global
           I64[Sp - 16] = block_c5tRR_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5tSj; else goto c5tRS;
       u5tSj: // global
           call _c5tRR(R1) args: 0, res: 0, upd: 0;
       c5tRS: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5tRR() //  [R1]
         { info_tbl: [(c5tRR,
                       label: block_c5tRR_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tRR: // global
           I64[Sp - 8] = block_c5tRX_info;
           _s5tmp::P64 = R1;
           _s5tmq::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp] = _s5tmq::P64;
           P64[Sp + 8] = _s5tmp::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5tSi; else goto c5tS1;
       u5tSi: // global
           call _c5tRX(R1) args: 0, res: 0, upd: 0;
       c5tS1: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5tRX() //  [R1]
         { info_tbl: [(c5tRX,
                       label: block_c5tRX_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tRX: // global
           I64[Sp] = block_c5tS5_info;
           R3 = P64[R1 + 7];
           R2 = P64[Sp + 8];
           P64[Sp + 8] = R1;
           call GHC.Classes.$fOrd[]_$s$ccompare1_entry(R3,
                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 _c5tS5() //  [R1]
         { info_tbl: [(c5tS5,
                       label: block_c5tS5_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tS5: // global
           if (R1 & 7 == 3) goto c5tSg; else goto c5tSc;
       c5tSg: // global
           R1 = P64[Sp + 16] & (-8);
           Sp = Sp + 24;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c5tSc: // global
           R1 = P64[Sp + 8] & (-8);
           Sp = Sp + 24;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.592926898 UTC

[section ""data" . GHC.TypeLits.$fOrdSomeSymbol_$cmin_closure" {
     GHC.TypeLits.$fOrdSomeSymbol_$cmin_closure:
         const GHC.TypeLits.$fOrdSomeSymbol_$cmin_info;
 },
 GHC.TypeLits.$fOrdSomeSymbol_$cmin_entry() //  [R2, R3]
         { info_tbl: [(c5tSN,
                       label: GHC.TypeLits.$fOrdSomeSymbol_$cmin_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tSN: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5tSR; else goto c5tSS;
       c5tSR: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.$fOrdSomeSymbol_$cmin_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5tSS: // global
           I64[Sp - 16] = block_c5tSK_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5tTc; else goto c5tSL;
       u5tTc: // global
           call _c5tSK(R1) args: 0, res: 0, upd: 0;
       c5tSL: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5tSK() //  [R1]
         { info_tbl: [(c5tSK,
                       label: block_c5tSK_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tSK: // global
           I64[Sp - 8] = block_c5tSQ_info;
           _s5tmy::P64 = R1;
           _s5tmz::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp] = _s5tmz::P64;
           P64[Sp + 8] = _s5tmy::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5tTb; else goto c5tSU;
       u5tTb: // global
           call _c5tSQ(R1) args: 0, res: 0, upd: 0;
       c5tSU: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5tSQ() //  [R1]
         { info_tbl: [(c5tSQ,
                       label: block_c5tSQ_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tSQ: // global
           I64[Sp] = block_c5tSY_info;
           R3 = P64[R1 + 7];
           R2 = P64[Sp + 8];
           P64[Sp + 8] = R1;
           call GHC.Classes.$fOrd[]_$s$ccompare1_entry(R3,
                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 _c5tSY() //  [R1]
         { info_tbl: [(c5tSY,
                       label: block_c5tSY_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tSY: // global
           if (R1 & 7 == 3) goto c5tT9; else goto c5tT5;
       c5tT9: // global
           R1 = P64[Sp + 8] & (-8);
           Sp = Sp + 24;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c5tT5: // global
           R1 = P64[Sp + 16] & (-8);
           Sp = Sp + 24;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.602571822 UTC

[section ""data" . GHC.TypeLits.$fOrdSomeSymbol_closure" {
     GHC.TypeLits.$fOrdSomeSymbol_closure:
         const GHC.Classes.C:Ord_con_info;
         const GHC.TypeLits.$fEqSomeSymbol_closure+1;
         const GHC.TypeLits.$fOrdSomeSymbol_$ccompare_closure+2;
         const GHC.TypeLits.$fOrdSomeSymbol_$c<_closure+2;
         const GHC.TypeLits.$fOrdSomeSymbol_$c<=_closure+2;
         const GHC.TypeLits.$fOrdSomeSymbol_$c>_closure+2;
         const GHC.TypeLits.$fOrdSomeSymbol_$c>=_closure+2;
         const GHC.TypeLits.$fOrdSomeSymbol_$cmax_closure+2;
         const GHC.TypeLits.$fOrdSomeSymbol_$cmin_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.604940778 UTC

[section ""data" . GHC.TypeLits.natVal'1_closure" {
     GHC.TypeLits.natVal'1_closure:
         const GHC.TypeLits.natVal'1_info;
 },
 GHC.TypeLits.natVal'1_entry() //  [R2]
         { info_tbl: [(c5tTE,
                       label: GHC.TypeLits.natVal'1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tTE: // global
           R1 = R2 & (-8);
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.609066571 UTC

[section ""data" . GHC.TypeLits.natVal'_closure" {
     GHC.TypeLits.natVal'_closure:
         const GHC.TypeLits.natVal'_info;
 },
 GHC.TypeLits.natVal'_entry() //  [R2]
         { info_tbl: [(c5tTR,
                       label: GHC.TypeLits.natVal'_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tTR: // global
           R2 = R2;
           call GHC.TypeLits.natVal'1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.612681705 UTC

[section ""data" . GHC.TypeLits.symbolVal'1_closure" {
     GHC.TypeLits.symbolVal'1_closure:
         const GHC.TypeLits.symbolVal'1_info;
 },
 GHC.TypeLits.symbolVal'1_entry() //  [R2]
         { info_tbl: [(c5tU2,
                       label: GHC.TypeLits.symbolVal'1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tU2: // global
           R1 = R2 & (-8);
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.616064585 UTC

[section ""data" . GHC.TypeLits.symbolVal'_closure" {
     GHC.TypeLits.symbolVal'_closure:
         const GHC.TypeLits.symbolVal'_info;
 },
 GHC.TypeLits.symbolVal'_entry() //  [R2]
         { info_tbl: [(c5tUf,
                       label: GHC.TypeLits.symbolVal'_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tUf: // global
           R2 = R2;
           call GHC.TypeLits.symbolVal'1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.619485624 UTC

[section ""data" . GHC.TypeLits.someSymbolVal_closure" {
     GHC.TypeLits.someSymbolVal_closure:
         const GHC.TypeLits.someSymbolVal_info;
 },
 GHC.TypeLits.someSymbolVal_entry() //  [R2]
         { info_tbl: [(c5tUr,
                       label: GHC.TypeLits.someSymbolVal_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tUr: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5tUv; else goto c5tUu;
       c5tUv: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = GHC.TypeLits.someSymbolVal_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5tUu: // global
           I64[Hp - 16] = GHC.TypeLits.SomeSymbol_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = Data.Proxy.Proxy_closure+1;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.623837418 UTC

[section ""data" . GHC.TypeLits.$fReadSomeSymbol_go_closure" {
     GHC.TypeLits.$fReadSomeSymbol_go_closure:
         const GHC.TypeLits.$fReadSomeSymbol_go_info;
 },
 sat_s5tmT_entry() //  [R1]
         { info_tbl: [(c5tUU,
                       label: sat_s5tmT_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tUU: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5tUV; else goto c5tUW;
       c5tUV: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5tUW: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.TypeLits.$fReadSomeSymbol_go_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 GHC.TypeLits.$fReadSomeSymbol_go_entry() //  [R2]
         { info_tbl: [(c5tV1,
                       label: GHC.TypeLits.$fReadSomeSymbol_go_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tV1: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5tV2; else goto c5tV3;
       c5tV2: // global
           R2 = R2;
           R1 = GHC.TypeLits.$fReadSomeSymbol_go_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5tV3: // global
           I64[Sp - 8] = block_c5tUF_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5tVe; else goto c5tUG;
       u5tVe: // global
           call _c5tUF(R1) args: 0, res: 0, upd: 0;
       c5tUG: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5tUF() //  [R1]
         { info_tbl: [(c5tUF,
                       label: block_c5tUF_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tUF: // global
           if (R1 & 7 == 1) goto c5tUY; else goto c5tUZ;
       c5tUY: // global
           R1 = []_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5tUZ: // global
           I64[Sp - 8] = block_c5tUL_info;
           _s5tmN::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp] = _s5tmN::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5tVd; else goto c5tUM;
       u5tVd: // global
           call _c5tUL(R1) args: 0, res: 0, upd: 0;
       c5tUM: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5tUL() //  [R1]
         { info_tbl: [(c5tUL,
                       label: block_c5tUL_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tUL: // global
           Hp = Hp + 96;
           if (Hp > HpLim) (likely: False) goto c5tVc; else goto c5tVb;
       c5tVc: // global
           HpAlloc = 96;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5tVb: // global
           _s5tmP::P64 = P64[R1 + 7];
           _s5tmQ::P64 = P64[R1 + 15];
           I64[Hp - 88] = sat_s5tmT_info;
           P64[Hp - 72] = P64[Sp + 8];
           I64[Hp - 64] = GHC.TypeLits.SomeSymbol_con_info;
           P64[Hp - 56] = _s5tmP::P64;
           P64[Hp - 48] = Data.Proxy.Proxy_closure+1;
           I64[Hp - 40] = (,)_con_info;
           P64[Hp - 32] = Hp - 63;
           P64[Hp - 24] = _s5tmQ::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 39;
           P64[Hp] = Hp - 88;
           R1 = Hp - 14;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.635303169 UTC

[section ""data" . GHC.TypeLits.$fReadSomeSymbol_$creadsPrec_closure" {
     GHC.TypeLits.$fReadSomeSymbol_$creadsPrec_closure:
         const GHC.TypeLits.$fReadSomeSymbol_$creadsPrec_info;
         const 0;
 },
 GHC.TypeLits.$fReadSomeSymbol_$creadsPrec_entry() //  [R2, R3]
         { info_tbl: [(c5tVK,
                       label: GHC.TypeLits.$fReadSomeSymbol_$creadsPrec_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tVK: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5tVO; else goto c5tVP;
       c5tVO: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.$fReadSomeSymbol_$creadsPrec_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5tVP: // global
           I64[Sp - 16] = block_c5tVI_info;
           R4 = Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure+1;
           _s5tmV::P64 = R3;
           R3 = R2;
           R2 = GHC.Read.$fReadChar2_closure+1;
           P64[Sp - 8] = _s5tmV::P64;
           Sp = Sp - 16;
           call GHC.Read.list3_entry(R4, R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 _c5tVI() //  [R1]
         { info_tbl: [(c5tVI,
                       label: block_c5tVI_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tVI: // global
           _s5tmV::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5tVN_info;
           R3 = _s5tmV::P64;
           R2 = R1;
           Sp = Sp + 8;
           call Text.ParserCombinators.ReadP.run_entry(R3,
                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 _c5tVN() //  [R1]
         { info_tbl: [(c5tVN,
                       label: block_c5tVN_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tVN: // global
           R2 = R1;
           Sp = Sp + 8;
           call GHC.TypeLits.$fReadSomeSymbol_go_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.642835452 UTC

[section ""data" . GHC.TypeLits.$fReadSomeSymbol4_closure" {
     GHC.TypeLits.$fReadSomeSymbol4_closure:
         const GHC.TypeLits.$fReadSomeSymbol4_info;
         const 0;
 },
 sat_s5tn0_entry() //  [R1, R2]
         { info_tbl: [(c5tWf,
                       label: sat_s5tn0_info
                       rep:HeapRep 1 ptrs { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tWf: // global
           R3 = R2;
           R2 = P64[R1 + 7];
           call GHC.TypeLits.$fReadSomeSymbol_$creadsPrec_entry(R3,
                                                                R2) args: 8, res: 0, upd: 8;
     }
 },
 GHC.TypeLits.$fReadSomeSymbol4_entry() //  [R2, R3]
         { info_tbl: [(c5tWl,
                       label: GHC.TypeLits.$fReadSomeSymbol4_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tWl: // global
           _s5tmZ::P64 = R3;
           _s5tmY::P64 = R2;
           if ((Sp + -8) < SpLim) (likely: False) goto c5tWm; else goto c5tWn;
       c5tWn: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5tWp; else goto c5tWo;
       c5tWp: // global
           HpAlloc = 16;
           goto c5tWm;
       c5tWm: // global
           R3 = _s5tmZ::P64;
           R2 = _s5tmY::P64;
           R1 = GHC.TypeLits.$fReadSomeSymbol4_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5tWo: // global
           I64[Hp - 8] = sat_s5tn0_info;
           P64[Hp] = _s5tmY::P64;
           I64[Sp - 8] = block_c5tWi_info;
           R3 = _s5tmZ::P64;
           R2 = Hp - 7;
           Sp = Sp - 8;
           call Text.ParserCombinators.ReadP.$wreadS_to_P_entry(R3,
                                                                R2) args: 8, res: 8, upd: 8;
     }
 },
 _c5tWi() //  [R1]
         { info_tbl: [(c5tWi,
                       label: block_c5tWi_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tWi: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5tWs; else goto c5tWr;
       c5tWs: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5tWr: // global
           I64[Hp - 8] = Text.ParserCombinators.ReadP.Look_con_info;
           P64[Hp] = R1;
           R1 = Hp - 6;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.650289604 UTC

[section ""data" . GHC.TypeLits.$fReadSomeSymbol3_closure" {
     GHC.TypeLits.$fReadSomeSymbol3_closure:
         const GHC.Types.I#_con_info;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.652277995 UTC

[section ""data" . GHC.TypeLits.$fReadSomeSymbol2_closure" {
     GHC.TypeLits.$fReadSomeSymbol2_closure:
         const GHC.TypeLits.$fReadSomeSymbol2_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.TypeLits.$fReadSomeSymbol2_entry() //  [R1]
         { info_tbl: [(c5tWM,
                       label: GHC.TypeLits.$fReadSomeSymbol2_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tWM: // global
           if ((Sp + -40) < SpLim) (likely: False) goto c5tWN; else goto c5tWO;
       c5tWN: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5tWO: // global
           (_c5tWJ::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c5tWJ::I64 == 0) goto c5tWL; else goto c5tWK;
       c5tWL: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c5tWK: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c5tWJ::I64;
           R2 = GHC.TypeLits.$fReadSomeSymbol4_closure+2;
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = GHC.TypeLits.$fReadSomeSymbol3_closure+1;
           P64[Sp - 24] = Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure+1;
           Sp = Sp - 40;
           call GHC.Read.list_entry(R2) args: 48, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.656599211 UTC

[section ""data" . GHC.TypeLits.$fReadSomeSymbol_$creadList_closure" {
     GHC.TypeLits.$fReadSomeSymbol_$creadList_closure:
         const GHC.TypeLits.$fReadSomeSymbol_$creadList_info;
         const 0;
 },
 GHC.TypeLits.$fReadSomeSymbol_$creadList_entry() //  [R2]
         { info_tbl: [(c5tX0,
                       label: GHC.TypeLits.$fReadSomeSymbol_$creadList_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tX0: // global
           R3 = R2;
           R2 = GHC.TypeLits.$fReadSomeSymbol2_closure;
           call Text.ParserCombinators.ReadP.run_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.660972056 UTC

[section ""data" . GHC.TypeLits.$fReadSomeSymbol1_closure" {
     GHC.TypeLits.$fReadSomeSymbol1_closure:
         const GHC.TypeLits.$fReadSomeSymbol1_info;
         const 0;
 },
 GHC.TypeLits.$fReadSomeSymbol1_entry() //  [R2, R3]
         { info_tbl: [(c5tXe,
                       label: GHC.TypeLits.$fReadSomeSymbol1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tXe: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5tXf; else goto c5tXg;
       c5tXf: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.$fReadSomeSymbol1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5tXg: // global
           I64[Sp - 8] = block_c5tXb_info;
           R3 = R3;
           R2 = GHC.TypeLits.$fReadSomeSymbol_$creadList_closure+1;
           Sp = Sp - 8;
           call Text.ParserCombinators.ReadP.$wreadS_to_P_entry(R3,
                                                                R2) args: 8, res: 8, upd: 8;
     }
 },
 _c5tXb() //  [R1]
         { info_tbl: [(c5tXb,
                       label: block_c5tXb_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tXb: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5tXj; else goto c5tXi;
       c5tXj: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5tXi: // global
           I64[Hp - 8] = Text.ParserCombinators.ReadP.Look_con_info;
           P64[Hp] = R1;
           R1 = Hp - 6;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.666894955 UTC

[section ""data" . GHC.TypeLits.$fReadSomeSymbol_closure" {
     GHC.TypeLits.$fReadSomeSymbol_closure:
         const GHC.Read.C:Read_con_info;
         const GHC.TypeLits.$fReadSomeSymbol_$creadsPrec_closure+2;
         const GHC.TypeLits.$fReadSomeSymbol_$creadList_closure+1;
         const GHC.TypeLits.$fReadSomeSymbol4_closure+2;
         const GHC.TypeLits.$fReadSomeSymbol1_closure+2;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.668579535 UTC

[section ""cstring" . GHC.TypeLits.$trModule4_bytes" {
     GHC.TypeLits.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.670234792 UTC

[section ""data" . GHC.TypeLits.$trModule3_closure" {
     GHC.TypeLits.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeLits.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.671855908 UTC

[section ""cstring" . GHC.TypeLits.$trModule2_bytes" {
     GHC.TypeLits.$trModule2_bytes:
         I8[] [71,72,67,46,84,121,112,101,76,105,116,115]
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.673501467 UTC

[section ""data" . GHC.TypeLits.$trModule1_closure" {
     GHC.TypeLits.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeLits.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.675153154 UTC

[section ""data" . GHC.TypeLits.$trModule_closure" {
     GHC.TypeLits.$trModule_closure:
         const GHC.Types.Module_con_info;
         const GHC.TypeLits.$trModule3_closure+1;
         const GHC.TypeLits.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.676863018 UTC

[section ""data" . $krep_r5tkw_closure" {
     $krep_r5tkw_closure:
         const GHC.Types.KindRepVar_con_info;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.678548153 UTC

[section ""data" . $krep1_r5tkx_closure" {
     $krep1_r5tkx_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcChar_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.680207121 UTC

[section ""data" . $krep2_r5tky_closure" {
     $krep2_r5tky_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcConstraint_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.681991027 UTC

[section ""data" . $krep3_r5tkz_closure" {
     $krep3_r5tkz_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcSymbol_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.68365112 UTC

[section ""data" . $krep4_r5tkA_closure" {
     $krep4_r5tkA_closure:
         const :_con_info;
         const $krep1_r5tkx_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.685781668 UTC

[section ""data" . $krep5_r5tkB_closure" {
     $krep5_r5tkB_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tc[]_closure;
         const $krep4_r5tkA_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.687963636 UTC

[section ""data" . $krep6_r5tkC_closure" {
     $krep6_r5tkC_closure:
         const :_con_info;
         const $krep_r5tkw_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.689674189 UTC

[section ""data" . $krep7_r5tkD_closure" {
     $krep7_r5tkD_closure:
         const :_con_info;
         const $krep3_r5tkz_closure+1;
         const $krep6_r5tkC_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.691307471 UTC

[section ""data" . $krep8_r5tkE_closure" {
     $krep8_r5tkE_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const Data.Proxy.$tcProxy_closure;
         const $krep7_r5tkD_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.692941679 UTC

[section ""data" . GHC.TypeLits.$tcKnownSymbol1_closure" {
     GHC.TypeLits.$tcKnownSymbol1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep3_r5tkz_closure+1;
         const $krep2_r5tky_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.694826063 UTC

[section ""data" . GHC.TypeLits.$tcSSymbol1_closure" {
     GHC.TypeLits.$tcSSymbol1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep3_r5tkz_closure+1;
         const GHC.Types.krep$*_closure;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.69657102 UTC

[section ""data" . GHC.TypeLits.$tcWrapS1_closure" {
     GHC.TypeLits.$tcWrapS1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep3_r5tkz_closure+1;
         const GHC.Types.krep$*Arr*_closure;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.698372482 UTC

[section ""data" . $krep9_r5tkF_closure" {
     $krep9_r5tkF_closure:
         const GHC.Types.KindRepVar_con_info;
         const 1;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.699985081 UTC

[section ""data" . $krep10_r5tkG_closure" {
     $krep10_r5tkG_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep8_r5tkE_closure+1;
         const $krep9_r5tkF_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.70162266 UTC

[section ""cstring" . GHC.TypeLits.$tcErrorMessage2_bytes" {
     GHC.TypeLits.$tcErrorMessage2_bytes:
         I8[] [69,114,114,111,114,77,101,115,115,97,103,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.703238391 UTC

[section ""data" . GHC.TypeLits.$tcErrorMessage1_closure" {
     GHC.TypeLits.$tcErrorMessage1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeLits.$tcErrorMessage2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.704978995 UTC

[section ""data" . GHC.TypeLits.$tcErrorMessage_closure" {
     GHC.TypeLits.$tcErrorMessage_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeLits.$trModule_closure+1;
         const GHC.TypeLits.$tcErrorMessage1_closure+1;
         const GHC.Types.krep$*_closure;
         const 7630159379940119730;
         const 9206405315391268733;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.70683445 UTC

[section ""data" . $krep11_r5tkH_closure" {
     $krep11_r5tkH_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.TypeLits.$tcErrorMessage_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.70860271 UTC

[section ""data" . GHC.TypeLits.$tc'ShowType1_closure" {
     GHC.TypeLits.$tc'ShowType1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep_r5tkw_closure+2;
         const $krep11_r5tkH_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.711146867 UTC

[section ""cstring" . GHC.TypeLits.$tc'ShowType3_bytes" {
     GHC.TypeLits.$tc'ShowType3_bytes:
         I8[] [39,83,104,111,119,84,121,112,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.713439559 UTC

[section ""data" . GHC.TypeLits.$tc'ShowType2_closure" {
     GHC.TypeLits.$tc'ShowType2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeLits.$tc'ShowType3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.715030135 UTC

[section ""data" . GHC.TypeLits.$tc'ShowType_closure" {
     GHC.TypeLits.$tc'ShowType_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeLits.$trModule_closure+1;
         const GHC.TypeLits.$tc'ShowType2_closure+1;
         const GHC.TypeLits.$tc'ShowType1_closure+4;
         const 8382284352214508650;
         const 11348954620262118930;
         const 1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.716765595 UTC

[section ""data" . GHC.TypeLits.$tc'Text1_closure" {
     GHC.TypeLits.$tc'Text1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep3_r5tkz_closure+1;
         const $krep11_r5tkH_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.718789424 UTC

[section ""cstring" . GHC.TypeLits.$tc'Text3_bytes" {
     GHC.TypeLits.$tc'Text3_bytes:
         I8[] [39,84,101,120,116]
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.720466181 UTC

[section ""data" . GHC.TypeLits.$tc'Text2_closure" {
     GHC.TypeLits.$tc'Text2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeLits.$tc'Text3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.722205123 UTC

[section ""data" . GHC.TypeLits.$tc'Text_closure" {
     GHC.TypeLits.$tc'Text_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeLits.$trModule_closure+1;
         const GHC.TypeLits.$tc'Text2_closure+1;
         const GHC.TypeLits.$tc'Text1_closure+4;
         const 2493578998071024502;
         const 3678534661723514344;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.723988609 UTC

[section ""data" . $krep12_r5tkI_closure" {
     $krep12_r5tkI_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep11_r5tkH_closure+1;
         const $krep11_r5tkH_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.726140928 UTC

[section ""data" . GHC.TypeLits.$tc':$$:1_closure" {
     GHC.TypeLits.$tc':$$:1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep11_r5tkH_closure+1;
         const $krep12_r5tkI_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.727766583 UTC

[section ""cstring" . GHC.TypeLits.$tc':<>:2_bytes" {
     GHC.TypeLits.$tc':<>:2_bytes:
         I8[] [39,58,60,62,58]
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.729397913 UTC

[section ""data" . GHC.TypeLits.$tc':<>:1_closure" {
     GHC.TypeLits.$tc':<>:1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeLits.$tc':<>:2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.731241316 UTC

[section ""data" . GHC.TypeLits.$tc':<>:_closure" {
     GHC.TypeLits.$tc':<>:_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeLits.$trModule_closure+1;
         const GHC.TypeLits.$tc':<>:1_closure+1;
         const GHC.TypeLits.$tc':$$:1_closure+4;
         const 3983262092273118172;
         const 8733217608481743011;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.733043977 UTC

[section ""cstring" . GHC.TypeLits.$tc':$$:3_bytes" {
     GHC.TypeLits.$tc':$$:3_bytes:
         I8[] [39,58,36,36,58]
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.734817691 UTC

[section ""data" . GHC.TypeLits.$tc':$$:2_closure" {
     GHC.TypeLits.$tc':$$:2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeLits.$tc':$$:3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.737054064 UTC

[section ""data" . GHC.TypeLits.$tc':$$:_closure" {
     GHC.TypeLits.$tc':$$:_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeLits.$trModule_closure+1;
         const GHC.TypeLits.$tc':$$:2_closure+1;
         const GHC.TypeLits.$tc':$$:1_closure+4;
         const 16852088601940984151;
         const 507953211190232322;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.739183529 UTC

[section ""cstring" . GHC.TypeLits.$tcSSymbol3_bytes" {
     GHC.TypeLits.$tcSSymbol3_bytes:
         I8[] [83,83,121,109,98,111,108]
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.740710538 UTC

[section ""data" . GHC.TypeLits.$tcSSymbol2_closure" {
     GHC.TypeLits.$tcSSymbol2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeLits.$tcSSymbol3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.742458155 UTC

[section ""data" . GHC.TypeLits.$tcSSymbol_closure" {
     GHC.TypeLits.$tcSSymbol_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeLits.$trModule_closure+1;
         const GHC.TypeLits.$tcSSymbol2_closure+1;
         const GHC.TypeLits.$tcSSymbol1_closure+4;
         const 6053239415793076730;
         const 11057125606635161794;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.744232292 UTC

[section ""data" . $krep13_r5tkJ_closure" {
     $krep13_r5tkJ_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.TypeLits.$tcSSymbol_closure+1;
         const $krep6_r5tkC_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.745968318 UTC

[section ""data" . GHC.TypeLits.$tc'SSymbol1_closure" {
     GHC.TypeLits.$tc'SSymbol1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep5_r5tkB_closure+1;
         const $krep13_r5tkJ_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.747685538 UTC

[section ""cstring" . GHC.TypeLits.$tc'SSymbol3_bytes" {
     GHC.TypeLits.$tc'SSymbol3_bytes:
         I8[] [39,83,83,121,109,98,111,108]
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.749444176 UTC

[section ""data" . GHC.TypeLits.$tc'SSymbol2_closure" {
     GHC.TypeLits.$tc'SSymbol2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeLits.$tc'SSymbol3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.751036541 UTC

[section ""data" . GHC.TypeLits.$tc'SSymbol_closure" {
     GHC.TypeLits.$tc'SSymbol_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeLits.$trModule_closure+1;
         const GHC.TypeLits.$tc'SSymbol2_closure+1;
         const GHC.TypeLits.$tc'SSymbol1_closure+4;
         const 1559313649785769064;
         const 360611317898112776;
         const 1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.752714994 UTC

[section ""cstring" . GHC.TypeLits.$tcKnownSymbol3_bytes" {
     GHC.TypeLits.$tcKnownSymbol3_bytes:
         I8[] [75,110,111,119,110,83,121,109,98,111,108]
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.754435149 UTC

[section ""data" . GHC.TypeLits.$tcKnownSymbol2_closure" {
     GHC.TypeLits.$tcKnownSymbol2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeLits.$tcKnownSymbol3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.756043834 UTC

[section ""data" . GHC.TypeLits.$tcKnownSymbol_closure" {
     GHC.TypeLits.$tcKnownSymbol_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeLits.$trModule_closure+1;
         const GHC.TypeLits.$tcKnownSymbol2_closure+1;
         const GHC.TypeLits.$tcKnownSymbol1_closure+4;
         const 1897426542959159002;
         const 11426707038979253074;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.758083672 UTC

[section ""data" . $krep14_r5tkK_closure" {
     $krep14_r5tkK_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.TypeLits.$tcKnownSymbol_closure+1;
         const $krep6_r5tkC_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.759842865 UTC

[section ""data" . $krep15_r5tkL_closure" {
     $krep15_r5tkL_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep14_r5tkK_closure+1;
         const $krep10_r5tkG_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.762229538 UTC

[section ""data" . GHC.TypeLits.$tc'C:KnownSymbol1_closure" {
     GHC.TypeLits.$tc'C:KnownSymbol1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep13_r5tkJ_closure+1;
         const $krep14_r5tkK_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.763939598 UTC

[section ""cstring" . GHC.TypeLits.$tc'C:KnownSymbol3_bytes" {
     GHC.TypeLits.$tc'C:KnownSymbol3_bytes:
         I8[] [39,67,58,75,110,111,119,110,83,121,109,98,111,108]
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.765577644 UTC

[section ""data" . GHC.TypeLits.$tc'C:KnownSymbol2_closure" {
     GHC.TypeLits.$tc'C:KnownSymbol2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeLits.$tc'C:KnownSymbol3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.767296058 UTC

[section ""data" . GHC.TypeLits.$tc'C:KnownSymbol_closure" {
     GHC.TypeLits.$tc'C:KnownSymbol_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeLits.$trModule_closure+1;
         const GHC.TypeLits.$tc'C:KnownSymbol2_closure+1;
         const GHC.TypeLits.$tc'C:KnownSymbol1_closure+4;
         const 16813031602224516101;
         const 12647750771094255736;
         const 1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.768967432 UTC

[section ""cstring" . GHC.TypeLits.$tcSomeSymbol2_bytes" {
     GHC.TypeLits.$tcSomeSymbol2_bytes:
         I8[] [83,111,109,101,83,121,109,98,111,108]
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.770604404 UTC

[section ""data" . GHC.TypeLits.$tcSomeSymbol1_closure" {
     GHC.TypeLits.$tcSomeSymbol1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeLits.$tcSomeSymbol2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.772316718 UTC

[section ""data" . GHC.TypeLits.$tcSomeSymbol_closure" {
     GHC.TypeLits.$tcSomeSymbol_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeLits.$trModule_closure+1;
         const GHC.TypeLits.$tcSomeSymbol1_closure+1;
         const GHC.Types.krep$*_closure;
         const 8170228625754745342;
         const 5936112829002510826;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.774249941 UTC

[section ""data" . $krep16_r5tkM_closure" {
     $krep16_r5tkM_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.TypeLits.$tcSomeSymbol_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.775953842 UTC

[section ""data" . $krep17_r5tkN_closure" {
     $krep17_r5tkN_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep8_r5tkE_closure+1;
         const $krep16_r5tkM_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.777694529 UTC

[section ""data" . GHC.TypeLits.$tc'SomeSymbol1_closure" {
     GHC.TypeLits.$tc'SomeSymbol1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep14_r5tkK_closure+1;
         const $krep17_r5tkN_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.779439227 UTC

[section ""cstring" . GHC.TypeLits.$tc'SomeSymbol3_bytes" {
     GHC.TypeLits.$tc'SomeSymbol3_bytes:
         I8[] [39,83,111,109,101,83,121,109,98,111,108]
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.781165745 UTC

[section ""data" . GHC.TypeLits.$tc'SomeSymbol2_closure" {
     GHC.TypeLits.$tc'SomeSymbol2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeLits.$tc'SomeSymbol3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.783306618 UTC

[section ""data" . GHC.TypeLits.$tc'SomeSymbol_closure" {
     GHC.TypeLits.$tc'SomeSymbol_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeLits.$trModule_closure+1;
         const GHC.TypeLits.$tc'SomeSymbol2_closure+1;
         const GHC.TypeLits.$tc'SomeSymbol1_closure+4;
         const 3805514464201054242;
         const 4871133717641740493;
         const 1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.785877621 UTC

[section ""cstring" . GHC.TypeLits.$tcWrapS3_bytes" {
     GHC.TypeLits.$tcWrapS3_bytes:
         I8[] [87,114,97,112,83]
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.787490621 UTC

[section ""data" . GHC.TypeLits.$tcWrapS2_closure" {
     GHC.TypeLits.$tcWrapS2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeLits.$tcWrapS3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.78913814 UTC

[section ""data" . GHC.TypeLits.$tcWrapS_closure" {
     GHC.TypeLits.$tcWrapS_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeLits.$trModule_closure+1;
         const GHC.TypeLits.$tcWrapS2_closure+1;
         const GHC.TypeLits.$tcWrapS1_closure+4;
         const 9018955994487767128;
         const 531430869376599499;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.790976016 UTC

[section ""data" . $krep18_r5tkO_closure" {
     $krep18_r5tkO_closure:
         const :_con_info;
         const $krep9_r5tkF_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.792638009 UTC

[section ""data" . $krep19_r5tkP_closure" {
     $krep19_r5tkP_closure:
         const :_con_info;
         const $krep_r5tkw_closure+2;
         const $krep18_r5tkO_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.794914197 UTC

[section ""data" . $krep20_r5tkQ_closure" {
     $krep20_r5tkQ_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.TypeLits.$tcWrapS_closure+1;
         const $krep19_r5tkP_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.796625569 UTC

[section ""data" . GHC.TypeLits.$tc'WrapS1_closure" {
     GHC.TypeLits.$tc'WrapS1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep15_r5tkL_closure+4;
         const $krep20_r5tkQ_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.798374715 UTC

[section ""cstring" . GHC.TypeLits.$tc'WrapS3_bytes" {
     GHC.TypeLits.$tc'WrapS3_bytes:
         I8[] [39,87,114,97,112,83]
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.800021429 UTC

[section ""data" . GHC.TypeLits.$tc'WrapS2_closure" {
     GHC.TypeLits.$tc'WrapS2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeLits.$tc'WrapS3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.801687424 UTC

[section ""data" . GHC.TypeLits.$tc'WrapS_closure" {
     GHC.TypeLits.$tc'WrapS_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeLits.$trModule_closure+1;
         const GHC.TypeLits.$tc'WrapS2_closure+1;
         const GHC.TypeLits.$tc'WrapS1_closure+4;
         const 10848673411250088112;
         const 6323353939001754670;
         const 2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.80377919 UTC

[section ""data" . GHC.TypeLits.someNatVal1_closure" {
     GHC.TypeLits.someNatVal1_closure:
         const GHC.TypeLits.someNatVal1_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.TypeLits.someNatVal1_entry() //  [R1]
         { info_tbl: [(c5tYN,
                       label: GHC.TypeLits.someNatVal1_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tYN: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5tYO; else goto c5tYP;
       c5tYO: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5tYP: // global
           (_c5tYK::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c5tYK::I64 == 0) goto c5tYM; else goto c5tYL;
       c5tYM: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c5tYL: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c5tYK::I64;
           R3 = GHC.Types.[]_closure+1;
           R2 = GHC.Types.True_closure+2;
           Sp = Sp - 16;
           call GHC.Integer.Type.mkInteger_entry(R3,
                                                 R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.809120329 UTC

[section ""data" . GHC.TypeLits.someNatVal_closure" {
     GHC.TypeLits.someNatVal_closure:
         const GHC.TypeLits.someNatVal_info;
         const 0;
 },
 sat_s5tn9_entry() //  [R1]
         { info_tbl: [(c5tZa,
                       label: sat_s5tn9_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tZa: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5tZb; else goto c5tZc;
       c5tZb: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5tZc: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Natural.naturalFromInteger_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 GHC.TypeLits.someNatVal_entry() //  [R2]
         { info_tbl: [(c5tZg,
                       label: GHC.TypeLits.someNatVal_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tZg: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5tZh; else goto c5tZi;
       c5tZh: // global
           R2 = R2;
           R1 = GHC.TypeLits.someNatVal_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5tZi: // global
           I64[Sp - 16] = block_c5tZ1_info;
           R3 = GHC.TypeLits.someNatVal1_closure;
           _s5tn7::P64 = R2;
           R2 = R2;
           P64[Sp - 8] = _s5tn7::P64;
           Sp = Sp - 16;
           call GHC.Integer.Type.geInteger#_entry(R3,
                                                  R2) args: 8, res: 8, upd: 8;
     }
 },
 _c5tZ1() //  [R1]
         { info_tbl: [(c5tZ1,
                       label: block_c5tZ1_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tZ1: // global
           if (R1 == 1) goto c5tZf; else goto c5tZe;
       c5tZf: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c5tZp; else goto c5tZo;
       c5tZp: // global
           HpAlloc = 64;
           R1 = R1;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c5tZo: // global
           I64[Hp - 56] = sat_s5tn9_info;
           P64[Hp - 40] = P64[Sp + 8];
           I64[Hp - 32] = GHC.TypeNats.SomeNat_con_info;
           P64[Hp - 24] = Hp - 56;
           P64[Hp - 16] = Data.Proxy.Proxy_closure+1;
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = Hp - 31;
           R1 = Hp - 6;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5tZe: // global
           R1 = GHC.Base.Nothing_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.818405592 UTC

[section ""data" . GHC.TypeLits.WrapS_closure" {
     GHC.TypeLits.WrapS_closure:
         const GHC.TypeLits.WrapS_info;
 },
 GHC.TypeLits.WrapS_entry() //  [R2]
         { info_tbl: [(c5tZM,
                       label: GHC.TypeLits.WrapS_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5tZM: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5tZQ; else goto c5tZP;
       c5tZQ: // global
           HpAlloc = 16;
           R2 = R2;
           R1 = GHC.TypeLits.WrapS_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5tZP: // global
           I64[Hp - 8] = GHC.TypeLits.WrapS_con_info;
           P64[Hp] = R2;
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.822312682 UTC

[section ""data" . GHC.TypeLits.Text_closure" {
     GHC.TypeLits.Text_closure:
         const GHC.TypeLits.Text_info;
 },
 GHC.TypeLits.Text_entry() //  [R2]
         { info_tbl: [(c5u01,
                       label: GHC.TypeLits.Text_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5u01: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5u05; else goto c5u04;
       c5u05: // global
           HpAlloc = 16;
           R2 = R2;
           R1 = GHC.TypeLits.Text_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5u04: // global
           I64[Hp - 8] = GHC.TypeLits.Text_con_info;
           P64[Hp] = R2;
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.828007557 UTC

[section ""data" . GHC.TypeLits.ShowType_closure" {
     GHC.TypeLits.ShowType_closure:
         const GHC.TypeLits.ShowType_info;
 },
 GHC.TypeLits.ShowType_entry() //  [R2]
         { info_tbl: [(c5u0g,
                       label: GHC.TypeLits.ShowType_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5u0g: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5u0k; else goto c5u0j;
       c5u0k: // global
           HpAlloc = 16;
           R2 = R2;
           R1 = GHC.TypeLits.ShowType_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5u0j: // global
           I64[Hp - 8] = GHC.TypeLits.ShowType_con_info;
           P64[Hp] = R2;
           R1 = Hp - 6;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.832370963 UTC

[section ""data" . GHC.TypeLits.:<>:_closure" {
     GHC.TypeLits.:<>:_closure:
         const GHC.TypeLits.:<>:_info;
 },
 GHC.TypeLits.:<>:_entry() //  [R2, R3]
         { info_tbl: [(c5u0v,
                       label: GHC.TypeLits.:<>:_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5u0v: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5u0z; else goto c5u0y;
       c5u0z: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.:<>:_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5u0y: // global
           I64[Hp - 16] = GHC.TypeLits.:<>:_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 13;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.836848174 UTC

[section ""data" . GHC.TypeLits.:$$:_closure" {
     GHC.TypeLits.:$$:_closure:
         const GHC.TypeLits.:$$:_info;
 },
 GHC.TypeLits.:$$:_entry() //  [R2, R3]
         { info_tbl: [(c5u0K,
                       label: GHC.TypeLits.:$$:_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5u0K: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5u0O; else goto c5u0N;
       c5u0O: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.:$$:_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5u0N: // global
           I64[Hp - 16] = GHC.TypeLits.:$$:_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 12;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.841113581 UTC

[section ""data" . GHC.TypeLits.SomeSymbol_closure" {
     GHC.TypeLits.SomeSymbol_closure:
         const GHC.TypeLits.SomeSymbol_info;
 },
 GHC.TypeLits.SomeSymbol_entry() //  [R2, R3]
         { info_tbl: [(c5u0Z,
                       label: GHC.TypeLits.SomeSymbol_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5u0Z: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5u13; else goto c5u12;
       c5u13: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.SomeSymbol_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5u12: // global
           I64[Hp - 16] = GHC.TypeLits.SomeSymbol_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.845931598 UTC

[GHC.TypeLits.WrapS_con_entry() //  [R1]
         { info_tbl: [(c5u19,
                       label: GHC.TypeLits.WrapS_con_info
                       rep:HeapRep 1 ptrs {
                             Con {tag: 0
                                  descr:[98,97,115,101,58,71,72,67,46,84,121,112,101,76,105,116,115,46,87,114,97,112,83]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5u19: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.849931224 UTC

[GHC.TypeLits.Text_con_entry() //  [R1]
         { info_tbl: [(c5u1f,
                       label: GHC.TypeLits.Text_con_info
                       rep:HeapRep 1 ptrs {
                             Con {tag: 0
                                  descr:[98,97,115,101,58,71,72,67,46,84,121,112,101,76,105,116,115,46,84,101,120,116]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5u1f: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.853555927 UTC

[GHC.TypeLits.ShowType_con_entry() //  [R1]
         { info_tbl: [(c5u1l,
                       label: GHC.TypeLits.ShowType_con_info
                       rep:HeapRep 1 ptrs {
                             Con {tag: 1
                                  descr:[98,97,115,101,58,71,72,67,46,84,121,112,101,76,105,116,115,46,83,104,111,119,84,121,112,101]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5u1l: // global
           R1 = R1 + 2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.856950354 UTC

[GHC.TypeLits.:<>:_con_entry() //  [R1]
         { info_tbl: [(c5u1r,
                       label: GHC.TypeLits.:<>:_con_info
                       rep:HeapRep 2 ptrs {
                             Con {tag: 2
                                  descr:[98,97,115,101,58,71,72,67,46,84,121,112,101,76,105,116,115,46,58,60,62,58]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5u1r: // global
           R1 = R1 + 3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.860161693 UTC

[GHC.TypeLits.:$$:_con_entry() //  [R1]
         { info_tbl: [(c5u1x,
                       label: GHC.TypeLits.:$$:_con_info
                       rep:HeapRep 2 ptrs {
                             Con {tag: 3
                                  descr:[98,97,115,101,58,71,72,67,46,84,121,112,101,76,105,116,115,46,58,36,36,58]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5u1x: // global
           R1 = R1 + 4;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.863647634 UTC

[GHC.TypeLits.SomeSymbol_con_entry() //  [R1]
         { info_tbl: [(c5u1D,
                       label: GHC.TypeLits.SomeSymbol_con_info
                       rep:HeapRep 2 ptrs {
                             Con {tag: 0
                                  descr:[98,97,115,101,58,71,72,67,46,84,121,112,101,76,105,116,115,46,83,111,109,101,83,121,109,98,111,108]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5u1D: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:29.866736533 UTC

[section ""relreadonly" . S5tou_srt" {
     S5tou_srt:
         const GHC.Show.showLitString_closure;
         const GHC.TypeLits.$fShowSomeSymbol_$cshowsPrec_closure;
         const GHC.TypeLits.$fShowSomeSymbol_$cshow_closure;
         const GHC.TypeLits.$fShowSomeSymbol1_closure;
         const GHC.Read.list3_closure;
         const GHC.Read.$fReadChar2_closure;
         const GHC.TypeLits.$fReadSomeSymbol_$creadsPrec_closure;
         const GHC.TypeLits.$fReadSomeSymbol4_closure;
         const GHC.Read.list_closure;
         const GHC.TypeLits.$fReadSomeSymbol2_closure;
         const GHC.TypeLits.$fReadSomeSymbol1_closure;
         const GHC.TypeLits.$fReadSomeSymbol_$creadList_closure;
         const GHC.Natural.naturalFromInteger_closure;
         const GHC.TypeLits.someNatVal_closure;
         const GHC.TypeLits.someNatVal1_closure;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:30.6991627 UTC

[]


==================== Output Cmm ====================
2018-03-16 16:00:30.700418835 UTC

[section ""data" . GHC.TypeLits.symbolSing_closure" {
     GHC.TypeLits.symbolSing_closure:
         const GHC.TypeLits.symbolSing_info;
 },
 GHC.TypeLits.symbolSing_entry() //  [R2]
         { info_tbl: [(c5u47,
                       label: GHC.TypeLits.symbolSing_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5u47: // global
           R1 = R2 & (-8);
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:30.703960208 UTC

[section ""data" . GHC.TypeLits.natVal1_closure" {
     GHC.TypeLits.natVal1_closure:
         const GHC.TypeLits.natVal1_info;
 },
 GHC.TypeLits.natVal1_entry() //  [R2]
         { info_tbl: [(c5u4k,
                       label: GHC.TypeLits.natVal1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5u4k: // global
           R1 = R2 & (-8);
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:30.707533952 UTC

[section ""data" . GHC.TypeLits.natVal_closure" {
     GHC.TypeLits.natVal_closure:
         const GHC.TypeLits.natVal_info;
 },
 GHC.TypeLits.natVal_entry() //  [R2, R3]
         { info_tbl: [(c5u4x,
                       label: GHC.TypeLits.natVal_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5u4x: // global
           R3 = R3;
           R2 = R2;
           call GHC.TypeLits.natVal1_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:30.711062203 UTC

[section ""data" . GHC.TypeLits.symbolVal1_closure" {
     GHC.TypeLits.symbolVal1_closure:
         const GHC.TypeLits.symbolVal1_info;
 },
 GHC.TypeLits.symbolVal1_entry() //  [R2]
         { info_tbl: [(c5u4I,
                       label: GHC.TypeLits.symbolVal1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5u4I: // global
           R1 = R2 & (-8);
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:30.714673113 UTC

[section ""data" . GHC.TypeLits.symbolVal_closure" {
     GHC.TypeLits.symbolVal_closure:
         const GHC.TypeLits.symbolVal_info;
 },
 GHC.TypeLits.symbolVal_entry() //  [R2, R3]
         { info_tbl: [(c5u4V,
                       label: GHC.TypeLits.symbolVal_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5u4V: // global
           R3 = R3;
           R2 = R2;
           call GHC.TypeLits.symbolVal1_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:30.718213418 UTC

[section ""data" . GHC.TypeLits.sameSymbol1_closure" {
     GHC.TypeLits.sameSymbol1_closure:
         const GHC.Base.Just_con_info;
         const Data.Type.Equality.$WRefl_closure;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:30.720590915 UTC

[section ""data" . GHC.TypeLits.sameSymbol_closure" {
     GHC.TypeLits.sameSymbol_closure:
         const GHC.TypeLits.sameSymbol_info;
 },
 GHC.TypeLits.sameSymbol_entry() //  [R2, R3, R4, R5]
         { info_tbl: [(c5u5d,
                       label: GHC.TypeLits.sameSymbol_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 24} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5u5d: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5u5e; else goto c5u5f;
       c5u5e: // global
           R5 = R5;
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.sameSymbol_closure;
           call (stg_gc_fun)(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5u5f: // global
           I64[Sp - 8] = block_c5u57_info;
           R3 = R3;
           R2 = R2;
           Sp = Sp - 8;
           call GHC.Base.eqString_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 _c5u57() //  [R1]
         { info_tbl: [(c5u57,
                       label: block_c5u57_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5u57: // global
           if (R1 & 7 == 1) goto c5u5a; else goto c5u5b;
       c5u5a: // global
           R1 = GHC.Base.Nothing_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5u5b: // global
           R1 = GHC.TypeLits.sameSymbol1_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:30.728267443 UTC

[section ""data" . GHC.TypeLits.$fShowSomeSymbol_$cshowsPrec_closure" {
     GHC.TypeLits.$fShowSomeSymbol_$cshowsPrec_closure:
         const GHC.TypeLits.$fShowSomeSymbol_$cshowsPrec_info;
         const 0;
 },
 sat_s5u21_entry() //  [R1]
         { info_tbl: [(c5u5O,
                       label: sat_s5u21_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5u5O: // global
           _s5u21::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c5u5P; else goto c5u5Q;
       c5u5Q: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5u5S; else goto c5u5R;
       c5u5S: // global
           HpAlloc = 24;
           goto c5u5P;
       c5u5P: // global
           R1 = _s5u21::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5u5R: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5u21::P64;
           _s5u1W::P64 = P64[_s5u21::P64 + 16];
           _s5u1Y::P64 = P64[_s5u21::P64 + 24];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.$fShow(,)3_closure;
           P64[Hp] = _s5u1W::P64;
           R3 = Hp - 14;
           R2 = _s5u1Y::P64;
           Sp = Sp - 16;
           call GHC.Show.showLitString_entry(R3,
                                             R2) args: 24, res: 0, upd: 24;
     }
 },
 GHC.TypeLits.$fShowSomeSymbol_$cshowsPrec_entry() //  [R2, R3, R4]
         { info_tbl: [(c5u5T,
                       label: GHC.TypeLits.$fShowSomeSymbol_$cshowsPrec_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5u5T: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5u5V; else goto c5u5W;
       c5u5V: // global
           R4 = R4;
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.$fShowSomeSymbol_$cshowsPrec_closure;
           call (stg_gc_fun)(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
       c5u5W: // global
           I64[Sp - 16] = block_c5u5E_info;
           R1 = R3;
           P64[Sp - 8] = R4;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5u60; else goto c5u5F;
       u5u60: // global
           call _c5u5E(R1) args: 0, res: 0, upd: 0;
       c5u5F: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5u5E() //  [R1]
         { info_tbl: [(c5u5E,
                       label: block_c5u5E_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5u5E: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c5u5Z; else goto c5u5Y;
       c5u5Z: // global
           HpAlloc = 56;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5u5Y: // global
           _s5u1Y::P64 = P64[R1 + 7];
           I64[Hp - 48] = sat_s5u21_info;
           P64[Hp - 32] = P64[Sp + 8];
           P64[Hp - 24] = _s5u1Y::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.$fShow(,)3_closure;
           P64[Hp] = Hp - 48;
           R1 = Hp - 14;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:30.739014159 UTC

[section ""data" . GHC.TypeLits.$fShowSomeSymbol2_closure" {
     GHC.TypeLits.$fShowSomeSymbol2_closure:
         const :_con_info;
         const GHC.Show.$fShow(,)3_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:30.742201628 UTC

[section ""data" . GHC.TypeLits.$fShowSomeSymbol_$cshow_closure" {
     GHC.TypeLits.$fShowSomeSymbol_$cshow_closure:
         const GHC.TypeLits.$fShowSomeSymbol_$cshow_info;
         const 0;
 },
 sat_s5u26_entry() //  [R1]
         { info_tbl: [(c5u6D,
                       label: sat_s5u26_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5u6D: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5u6E; else goto c5u6F;
       c5u6E: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5u6F: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R3 = GHC.TypeLits.$fShowSomeSymbol2_closure+2;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Show.showLitString_entry(R3,
                                             R2) args: 24, res: 0, upd: 24;
     }
 },
 GHC.TypeLits.$fShowSomeSymbol_$cshow_entry() //  [R2]
         { info_tbl: [(c5u6G,
                       label: GHC.TypeLits.$fShowSomeSymbol_$cshow_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5u6G: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5u6I; else goto c5u6J;
       c5u6I: // global
           R2 = R2;
           R1 = GHC.TypeLits.$fShowSomeSymbol_$cshow_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5u6J: // global
           I64[Sp - 8] = block_c5u6u_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5u6N; else goto c5u6v;
       u5u6N: // global
           call _c5u6u(R1) args: 0, res: 0, upd: 0;
       c5u6v: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5u6u() //  [R1]
         { info_tbl: [(c5u6u,
                       label: block_c5u6u_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5u6u: // global
           Hp = Hp + 48;
           if (Hp > HpLim) (likely: False) goto c5u6M; else goto c5u6L;
       c5u6M: // global
           HpAlloc = 48;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5u6L: // global
           _s5u24::P64 = P64[R1 + 7];
           I64[Hp - 40] = sat_s5u26_info;
           P64[Hp - 24] = _s5u24::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.$fShow(,)3_closure;
           P64[Hp] = Hp - 40;
           R1 = Hp - 14;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:30.751496442 UTC

[section ""data" . GHC.TypeLits.$fShowSomeSymbol1_closure" {
     GHC.TypeLits.$fShowSomeSymbol1_closure:
         const GHC.TypeLits.$fShowSomeSymbol1_info;
         const 0;
 },
 sat_s5u2d_entry() //  [R1]
         { info_tbl: [(c5u7m,
                       label: sat_s5u2d_info
                       rep:HeapRep 2 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5u7m: // global
           _s5u2d::P64 = R1;
           if ((Sp + -16) < SpLim) (likely: False) goto c5u7n; else goto c5u7o;
       c5u7o: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5u7q; else goto c5u7p;
       c5u7q: // global
           HpAlloc = 24;
           goto c5u7n;
       c5u7n: // global
           R1 = _s5u2d::P64;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5u7p: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = _s5u2d::P64;
           _s5u28::P64 = P64[_s5u2d::P64 + 16];
           _s5u2a::P64 = P64[_s5u2d::P64 + 24];
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.$fShow(,)3_closure;
           P64[Hp] = _s5u28::P64;
           R3 = Hp - 14;
           R2 = _s5u2a::P64;
           Sp = Sp - 16;
           call GHC.Show.showLitString_entry(R3,
                                             R2) args: 24, res: 0, upd: 24;
     }
 },
 GHC.TypeLits.$fShowSomeSymbol1_entry() //  [R2, R3]
         { info_tbl: [(c5u7r,
                       label: GHC.TypeLits.$fShowSomeSymbol1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5u7r: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5u7t; else goto c5u7u;
       c5u7t: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.$fShowSomeSymbol1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5u7u: // global
           I64[Sp - 16] = block_c5u7c_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5u7y; else goto c5u7d;
       u5u7y: // global
           call _c5u7c(R1) args: 0, res: 0, upd: 0;
       c5u7d: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5u7c() //  [R1]
         { info_tbl: [(c5u7c,
                       label: block_c5u7c_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5u7c: // global
           Hp = Hp + 56;
           if (Hp > HpLim) (likely: False) goto c5u7x; else goto c5u7w;
       c5u7x: // global
           HpAlloc = 56;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5u7w: // global
           _s5u2a::P64 = P64[R1 + 7];
           I64[Hp - 48] = sat_s5u2d_info;
           P64[Hp - 32] = P64[Sp + 8];
           P64[Hp - 24] = _s5u2a::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = GHC.Show.$fShow(,)3_closure;
           P64[Hp] = Hp - 48;
           R1 = Hp - 14;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:30.764474607 UTC

[section ""data" . GHC.TypeLits.$fShowSomeSymbol_$cshowList_closure" {
     GHC.TypeLits.$fShowSomeSymbol_$cshowList_closure:
         const GHC.TypeLits.$fShowSomeSymbol_$cshowList_info;
         const 0;
 },
 GHC.TypeLits.$fShowSomeSymbol_$cshowList_entry() //  [R2, R3]
         { info_tbl: [(c5u80,
                       label: GHC.TypeLits.$fShowSomeSymbol_$cshowList_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5u80: // global
           R4 = R3;
           R3 = R2;
           R2 = GHC.TypeLits.$fShowSomeSymbol1_closure+2;
           call GHC.Show.showList___entry(R4, R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:30.769946636 UTC

[section ""data" . GHC.TypeLits.$fShowSomeSymbol_closure" {
     GHC.TypeLits.$fShowSomeSymbol_closure:
         const GHC.Show.C:Show_con_info;
         const GHC.TypeLits.$fShowSomeSymbol_$cshowsPrec_closure+3;
         const GHC.TypeLits.$fShowSomeSymbol_$cshow_closure+1;
         const GHC.TypeLits.$fShowSomeSymbol_$cshowList_closure+2;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:30.773561734 UTC

[section ""data" . GHC.TypeLits.$fOrdSomeSymbol_$ccompare_closure" {
     GHC.TypeLits.$fOrdSomeSymbol_$ccompare_closure:
         const GHC.TypeLits.$fOrdSomeSymbol_$ccompare_info;
 },
 GHC.TypeLits.$fOrdSomeSymbol_$ccompare_entry() //  [R2, R3]
         { info_tbl: [(c5u8f,
                       label: GHC.TypeLits.$fOrdSomeSymbol_$ccompare_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5u8f: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5u8j; else goto c5u8k;
       c5u8j: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.$fOrdSomeSymbol_$ccompare_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5u8k: // global
           I64[Sp - 16] = block_c5u8c_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5u8s; else goto c5u8d;
       u5u8s: // global
           call _c5u8c(R1) args: 0, res: 0, upd: 0;
       c5u8d: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5u8c() //  [R1]
         { info_tbl: [(c5u8c,
                       label: block_c5u8c_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5u8c: // global
           I64[Sp] = block_c5u8i_info;
           _s5u2j::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s5u2j::P64;
           if (R1 & 7 != 0) goto u5u8r; else goto c5u8m;
       u5u8r: // global
           call _c5u8i(R1) args: 0, res: 0, upd: 0;
       c5u8m: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5u8i() //  [R1]
         { info_tbl: [(c5u8i,
                       label: block_c5u8i_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5u8i: // global
           R3 = P64[R1 + 7];
           R2 = P64[Sp + 8];
           Sp = Sp + 16;
           call GHC.Classes.$fOrd[]_$s$ccompare1_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:30.787025282 UTC

[section ""data" . GHC.TypeLits.$fEqSomeSymbol_$c==_closure" {
     GHC.TypeLits.$fEqSomeSymbol_$c==_closure:
         const GHC.TypeLits.$fEqSomeSymbol_$c==_info;
 },
 GHC.TypeLits.$fEqSomeSymbol_$c==_entry() //  [R2, R3]
         { info_tbl: [(c5u8P,
                       label: GHC.TypeLits.$fEqSomeSymbol_$c==_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5u8P: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5u8T; else goto c5u8U;
       c5u8T: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.$fEqSomeSymbol_$c==_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5u8U: // global
           I64[Sp - 16] = block_c5u8M_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5u92; else goto c5u8N;
       u5u92: // global
           call _c5u8M(R1) args: 0, res: 0, upd: 0;
       c5u8N: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5u8M() //  [R1]
         { info_tbl: [(c5u8M,
                       label: block_c5u8M_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5u8M: // global
           I64[Sp] = block_c5u8S_info;
           _s5u2r::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s5u2r::P64;
           if (R1 & 7 != 0) goto u5u91; else goto c5u8W;
       u5u91: // global
           call _c5u8S(R1) args: 0, res: 0, upd: 0;
       c5u8W: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5u8S() //  [R1]
         { info_tbl: [(c5u8S,
                       label: block_c5u8S_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5u8S: // global
           R3 = P64[R1 + 7];
           R2 = P64[Sp + 8];
           Sp = Sp + 16;
           call GHC.Base.eqString_entry(R3, R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:30.798987121 UTC

[section ""data" . GHC.TypeLits.$fEqSomeSymbol_$c/=_closure" {
     GHC.TypeLits.$fEqSomeSymbol_$c/=_closure:
         const GHC.TypeLits.$fEqSomeSymbol_$c/=_info;
 },
 GHC.TypeLits.$fEqSomeSymbol_$c/=_entry() //  [R2, R3]
         { info_tbl: [(c5u9p,
                       label: GHC.TypeLits.$fEqSomeSymbol_$c/=_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5u9p: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5u9t; else goto c5u9u;
       c5u9t: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.$fEqSomeSymbol_$c/=_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5u9u: // global
           I64[Sp - 16] = block_c5u9m_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5u9O; else goto c5u9n;
       u5u9O: // global
           call _c5u9m(R1) args: 0, res: 0, upd: 0;
       c5u9n: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5u9m() //  [R1]
         { info_tbl: [(c5u9m,
                       label: block_c5u9m_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5u9m: // global
           I64[Sp] = block_c5u9s_info;
           _s5u2z::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s5u2z::P64;
           if (R1 & 7 != 0) goto u5u9N; else goto c5u9w;
       u5u9N: // global
           call _c5u9s(R1) args: 0, res: 0, upd: 0;
       c5u9w: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5u9s() //  [R1]
         { info_tbl: [(c5u9s,
                       label: block_c5u9s_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5u9s: // global
           _s5u2z::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5u9A_info;
           R3 = P64[R1 + 7];
           R2 = _s5u2z::P64;
           Sp = Sp + 8;
           call GHC.Base.eqString_entry(R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 _c5u9A() //  [R1]
         { info_tbl: [(c5u9A,
                       label: block_c5u9A_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5u9A: // global
           if (R1 & 7 == 1) goto c5u9H; else goto c5u9L;
       c5u9H: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5u9L: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:30.808404004 UTC

[section ""data" . GHC.TypeLits.$fEqSomeSymbol_closure" {
     GHC.TypeLits.$fEqSomeSymbol_closure:
         const GHC.Classes.C:Eq_con_info;
         const GHC.TypeLits.$fEqSomeSymbol_$c==_closure+2;
         const GHC.TypeLits.$fEqSomeSymbol_$c/=_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:30.810761826 UTC

[section ""data" . GHC.TypeLits.$fOrdSomeSymbol_$c<_closure" {
     GHC.TypeLits.$fOrdSomeSymbol_$c<_closure:
         const GHC.TypeLits.$fOrdSomeSymbol_$c<_info;
 },
 GHC.TypeLits.$fOrdSomeSymbol_$c<_entry() //  [R2, R3]
         { info_tbl: [(c5uam,
                       label: GHC.TypeLits.$fOrdSomeSymbol_$c<_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5uam: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5uaq; else goto c5uar;
       c5uaq: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.$fOrdSomeSymbol_$c<_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5uar: // global
           I64[Sp - 16] = block_c5uaj_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5uaL; else goto c5uak;
       u5uaL: // global
           call _c5uaj(R1) args: 0, res: 0, upd: 0;
       c5uak: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5uaj() //  [R1]
         { info_tbl: [(c5uaj,
                       label: block_c5uaj_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5uaj: // global
           I64[Sp] = block_c5uap_info;
           _s5u2I::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s5u2I::P64;
           if (R1 & 7 != 0) goto u5uaK; else goto c5uat;
       u5uaK: // global
           call _c5uap(R1) args: 0, res: 0, upd: 0;
       c5uat: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5uap() //  [R1]
         { info_tbl: [(c5uap,
                       label: block_c5uap_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5uap: // global
           _s5u2I::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5uax_info;
           R3 = P64[R1 + 7];
           R2 = _s5u2I::P64;
           Sp = Sp + 8;
           call GHC.Classes.$fOrd[]_$s$ccompare1_entry(R3,
                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 _c5uax() //  [R1]
         { info_tbl: [(c5uax,
                       label: block_c5uax_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5uax: // global
           if (R1 & 7 == 1) goto c5uaI; else goto c5uaE;
       c5uaI: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5uaE: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:30.820567339 UTC

[section ""data" . GHC.TypeLits.$fOrdSomeSymbol_$c>=_closure" {
     GHC.TypeLits.$fOrdSomeSymbol_$c>=_closure:
         const GHC.TypeLits.$fOrdSomeSymbol_$c>=_info;
 },
 GHC.TypeLits.$fOrdSomeSymbol_$c>=_entry() //  [R2, R3]
         { info_tbl: [(c5ubi,
                       label: GHC.TypeLits.$fOrdSomeSymbol_$c>=_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5ubi: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5ubm; else goto c5ubn;
       c5ubm: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.$fOrdSomeSymbol_$c>=_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5ubn: // global
           I64[Sp - 16] = block_c5ubf_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5ubH; else goto c5ubg;
       u5ubH: // global
           call _c5ubf(R1) args: 0, res: 0, upd: 0;
       c5ubg: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5ubf() //  [R1]
         { info_tbl: [(c5ubf,
                       label: block_c5ubf_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5ubf: // global
           I64[Sp] = block_c5ubl_info;
           _s5u2R::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s5u2R::P64;
           if (R1 & 7 != 0) goto u5ubG; else goto c5ubp;
       u5ubG: // global
           call _c5ubl(R1) args: 0, res: 0, upd: 0;
       c5ubp: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5ubl() //  [R1]
         { info_tbl: [(c5ubl,
                       label: block_c5ubl_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5ubl: // global
           _s5u2R::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5ubt_info;
           R3 = P64[R1 + 7];
           R2 = _s5u2R::P64;
           Sp = Sp + 8;
           call GHC.Classes.$fOrd[]_$s$ccompare1_entry(R3,
                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 _c5ubt() //  [R1]
         { info_tbl: [(c5ubt,
                       label: block_c5ubt_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5ubt: // global
           if (R1 & 7 == 1) goto c5ubE; else goto c5ubA;
       c5ubE: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5ubA: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:30.831764368 UTC

[section ""data" . GHC.TypeLits.$fOrdSomeSymbol_$c>_closure" {
     GHC.TypeLits.$fOrdSomeSymbol_$c>_closure:
         const GHC.TypeLits.$fOrdSomeSymbol_$c>_info;
 },
 GHC.TypeLits.$fOrdSomeSymbol_$c>_entry() //  [R2, R3]
         { info_tbl: [(c5uce,
                       label: GHC.TypeLits.$fOrdSomeSymbol_$c>_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5uce: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5uci; else goto c5ucj;
       c5uci: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.$fOrdSomeSymbol_$c>_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5ucj: // global
           I64[Sp - 16] = block_c5ucb_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5ucD; else goto c5ucc;
       u5ucD: // global
           call _c5ucb(R1) args: 0, res: 0, upd: 0;
       c5ucc: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5ucb() //  [R1]
         { info_tbl: [(c5ucb,
                       label: block_c5ucb_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5ucb: // global
           I64[Sp] = block_c5uch_info;
           _s5u30::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s5u30::P64;
           if (R1 & 7 != 0) goto u5ucC; else goto c5ucl;
       u5ucC: // global
           call _c5uch(R1) args: 0, res: 0, upd: 0;
       c5ucl: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5uch() //  [R1]
         { info_tbl: [(c5uch,
                       label: block_c5uch_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5uch: // global
           _s5u30::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5ucp_info;
           R3 = P64[R1 + 7];
           R2 = _s5u30::P64;
           Sp = Sp + 8;
           call GHC.Classes.$fOrd[]_$s$ccompare1_entry(R3,
                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 _c5ucp() //  [R1]
         { info_tbl: [(c5ucp,
                       label: block_c5ucp_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5ucp: // global
           if (R1 & 7 == 3) goto c5ucA; else goto c5ucw;
       c5ucA: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5ucw: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:30.841792573 UTC

[section ""data" . GHC.TypeLits.$fOrdSomeSymbol_$c<=_closure" {
     GHC.TypeLits.$fOrdSomeSymbol_$c<=_closure:
         const GHC.TypeLits.$fOrdSomeSymbol_$c<=_info;
 },
 GHC.TypeLits.$fOrdSomeSymbol_$c<=_entry() //  [R2, R3]
         { info_tbl: [(c5uda,
                       label: GHC.TypeLits.$fOrdSomeSymbol_$c<=_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5uda: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5ude; else goto c5udf;
       c5ude: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.$fOrdSomeSymbol_$c<=_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5udf: // global
           I64[Sp - 16] = block_c5ud7_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5udz; else goto c5ud8;
       u5udz: // global
           call _c5ud7(R1) args: 0, res: 0, upd: 0;
       c5ud8: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5ud7() //  [R1]
         { info_tbl: [(c5ud7,
                       label: block_c5ud7_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5ud7: // global
           I64[Sp] = block_c5udd_info;
           _s5u39::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp + 8] = _s5u39::P64;
           if (R1 & 7 != 0) goto u5udy; else goto c5udh;
       u5udy: // global
           call _c5udd(R1) args: 0, res: 0, upd: 0;
       c5udh: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5udd() //  [R1]
         { info_tbl: [(c5udd,
                       label: block_c5udd_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5udd: // global
           _s5u39::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5udl_info;
           R3 = P64[R1 + 7];
           R2 = _s5u39::P64;
           Sp = Sp + 8;
           call GHC.Classes.$fOrd[]_$s$ccompare1_entry(R3,
                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 _c5udl() //  [R1]
         { info_tbl: [(c5udl,
                       label: block_c5udl_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5udl: // global
           if (R1 & 7 == 3) goto c5udw; else goto c5uds;
       c5udw: // global
           R1 = GHC.Types.False_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5uds: // global
           R1 = GHC.Types.True_closure+2;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:30.854093686 UTC

[section ""data" . GHC.TypeLits.$fOrdSomeSymbol_$cmax_closure" {
     GHC.TypeLits.$fOrdSomeSymbol_$cmax_closure:
         const GHC.TypeLits.$fOrdSomeSymbol_$cmax_info;
 },
 GHC.TypeLits.$fOrdSomeSymbol_$cmax_entry() //  [R2, R3]
         { info_tbl: [(c5ue6,
                       label: GHC.TypeLits.$fOrdSomeSymbol_$cmax_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5ue6: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5uea; else goto c5ueb;
       c5uea: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.$fOrdSomeSymbol_$cmax_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5ueb: // global
           I64[Sp - 16] = block_c5ue3_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5uev; else goto c5ue4;
       u5uev: // global
           call _c5ue3(R1) args: 0, res: 0, upd: 0;
       c5ue4: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5ue3() //  [R1]
         { info_tbl: [(c5ue3,
                       label: block_c5ue3_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5ue3: // global
           I64[Sp - 8] = block_c5ue9_info;
           _s5u3h::P64 = R1;
           _s5u3i::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp] = _s5u3i::P64;
           P64[Sp + 8] = _s5u3h::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5ueu; else goto c5ued;
       u5ueu: // global
           call _c5ue9(R1) args: 0, res: 0, upd: 0;
       c5ued: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5ue9() //  [R1]
         { info_tbl: [(c5ue9,
                       label: block_c5ue9_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5ue9: // global
           I64[Sp] = block_c5ueh_info;
           R3 = P64[R1 + 7];
           R2 = P64[Sp + 8];
           P64[Sp + 8] = R1;
           call GHC.Classes.$fOrd[]_$s$ccompare1_entry(R3,
                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 _c5ueh() //  [R1]
         { info_tbl: [(c5ueh,
                       label: block_c5ueh_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5ueh: // global
           if (R1 & 7 == 3) goto c5ues; else goto c5ueo;
       c5ues: // global
           R1 = P64[Sp + 16] & (-8);
           Sp = Sp + 24;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c5ueo: // global
           R1 = P64[Sp + 8] & (-8);
           Sp = Sp + 24;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:30.870325817 UTC

[section ""data" . GHC.TypeLits.$fOrdSomeSymbol_$cmin_closure" {
     GHC.TypeLits.$fOrdSomeSymbol_$cmin_closure:
         const GHC.TypeLits.$fOrdSomeSymbol_$cmin_info;
 },
 GHC.TypeLits.$fOrdSomeSymbol_$cmin_entry() //  [R2, R3]
         { info_tbl: [(c5uf2,
                       label: GHC.TypeLits.$fOrdSomeSymbol_$cmin_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5uf2: // global
           if ((Sp + -24) < SpLim) (likely: False) goto c5uf6; else goto c5uf7;
       c5uf6: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.$fOrdSomeSymbol_$cmin_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5uf7: // global
           I64[Sp - 16] = block_c5ueZ_info;
           R1 = R2;
           P64[Sp - 8] = R3;
           Sp = Sp - 16;
           if (R1 & 7 != 0) goto u5ufr; else goto c5uf0;
       u5ufr: // global
           call _c5ueZ(R1) args: 0, res: 0, upd: 0;
       c5uf0: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5ueZ() //  [R1]
         { info_tbl: [(c5ueZ,
                       label: block_c5ueZ_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5ueZ: // global
           I64[Sp - 8] = block_c5uf5_info;
           _s5u3q::P64 = R1;
           _s5u3r::P64 = P64[R1 + 7];
           R1 = P64[Sp + 8];
           P64[Sp] = _s5u3r::P64;
           P64[Sp + 8] = _s5u3q::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5ufq; else goto c5uf9;
       u5ufq: // global
           call _c5uf5(R1) args: 0, res: 0, upd: 0;
       c5uf9: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5uf5() //  [R1]
         { info_tbl: [(c5uf5,
                       label: block_c5uf5_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5uf5: // global
           I64[Sp] = block_c5ufd_info;
           R3 = P64[R1 + 7];
           R2 = P64[Sp + 8];
           P64[Sp + 8] = R1;
           call GHC.Classes.$fOrd[]_$s$ccompare1_entry(R3,
                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 _c5ufd() //  [R1]
         { info_tbl: [(c5ufd,
                       label: block_c5ufd_info
                       rep:StackRep [False, False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5ufd: // global
           if (R1 & 7 == 3) goto c5ufo; else goto c5ufk;
       c5ufo: // global
           R1 = P64[Sp + 8] & (-8);
           Sp = Sp + 24;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
       c5ufk: // global
           R1 = P64[Sp + 16] & (-8);
           Sp = Sp + 24;
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:30.886869037 UTC

[section ""data" . GHC.TypeLits.$fOrdSomeSymbol_closure" {
     GHC.TypeLits.$fOrdSomeSymbol_closure:
         const GHC.Classes.C:Ord_con_info;
         const GHC.TypeLits.$fEqSomeSymbol_closure+1;
         const GHC.TypeLits.$fOrdSomeSymbol_$ccompare_closure+2;
         const GHC.TypeLits.$fOrdSomeSymbol_$c<_closure+2;
         const GHC.TypeLits.$fOrdSomeSymbol_$c<=_closure+2;
         const GHC.TypeLits.$fOrdSomeSymbol_$c>_closure+2;
         const GHC.TypeLits.$fOrdSomeSymbol_$c>=_closure+2;
         const GHC.TypeLits.$fOrdSomeSymbol_$cmax_closure+2;
         const GHC.TypeLits.$fOrdSomeSymbol_$cmin_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:30.890506916 UTC

[section ""data" . GHC.TypeLits.natVal'1_closure" {
     GHC.TypeLits.natVal'1_closure:
         const GHC.TypeLits.natVal'1_info;
 },
 GHC.TypeLits.natVal'1_entry() //  [R2]
         { info_tbl: [(c5ufW,
                       label: GHC.TypeLits.natVal'1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5ufW: // global
           R1 = R2 & (-8);
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:30.896189228 UTC

[section ""data" . GHC.TypeLits.natVal'_closure" {
     GHC.TypeLits.natVal'_closure:
         const GHC.TypeLits.natVal'_info;
 },
 GHC.TypeLits.natVal'_entry() //  [R2]
         { info_tbl: [(c5ug9,
                       label: GHC.TypeLits.natVal'_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5ug9: // global
           R2 = R2;
           call GHC.TypeLits.natVal'1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:30.900372754 UTC

[section ""data" . GHC.TypeLits.symbolVal'1_closure" {
     GHC.TypeLits.symbolVal'1_closure:
         const GHC.TypeLits.symbolVal'1_info;
 },
 GHC.TypeLits.symbolVal'1_entry() //  [R2]
         { info_tbl: [(c5ugk,
                       label: GHC.TypeLits.symbolVal'1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5ugk: // global
           R1 = R2 & (-8);
           call (I64[I64[R1]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:30.905491851 UTC

[section ""data" . GHC.TypeLits.symbolVal'_closure" {
     GHC.TypeLits.symbolVal'_closure:
         const GHC.TypeLits.symbolVal'_info;
 },
 GHC.TypeLits.symbolVal'_entry() //  [R2]
         { info_tbl: [(c5ugx,
                       label: GHC.TypeLits.symbolVal'_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5ugx: // global
           R2 = R2;
           call GHC.TypeLits.symbolVal'1_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:30.910160322 UTC

[section ""data" . GHC.TypeLits.someSymbolVal_closure" {
     GHC.TypeLits.someSymbolVal_closure:
         const GHC.TypeLits.someSymbolVal_info;
 },
 GHC.TypeLits.someSymbolVal_entry() //  [R2]
         { info_tbl: [(c5ugJ,
                       label: GHC.TypeLits.someSymbolVal_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5ugJ: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5ugN; else goto c5ugM;
       c5ugN: // global
           HpAlloc = 24;
           R2 = R2;
           R1 = GHC.TypeLits.someSymbolVal_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5ugM: // global
           I64[Hp - 16] = GHC.TypeLits.SomeSymbol_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = Data.Proxy.Proxy_closure+1;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:30.916644972 UTC

[section ""data" . GHC.TypeLits.$fReadSomeSymbol_go_closure" {
     GHC.TypeLits.$fReadSomeSymbol_go_closure:
         const GHC.TypeLits.$fReadSomeSymbol_go_info;
 },
 sat_s5u3L_entry() //  [R1]
         { info_tbl: [(c5uhf,
                       label: sat_s5u3L_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5uhf: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5uhg; else goto c5uhh;
       c5uhg: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5uhh: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.TypeLits.$fReadSomeSymbol_go_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 GHC.TypeLits.$fReadSomeSymbol_go_entry() //  [R2]
         { info_tbl: [(c5uhm,
                       label: GHC.TypeLits.$fReadSomeSymbol_go_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5uhm: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5uhn; else goto c5uho;
       c5uhn: // global
           R2 = R2;
           R1 = GHC.TypeLits.$fReadSomeSymbol_go_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5uho: // global
           I64[Sp - 8] = block_c5uh0_info;
           R1 = R2;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5uhz; else goto c5uh1;
       u5uhz: // global
           call _c5uh0(R1) args: 0, res: 0, upd: 0;
       c5uh1: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5uh0() //  [R1]
         { info_tbl: [(c5uh0,
                       label: block_c5uh0_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5uh0: // global
           if (R1 & 7 == 1) goto c5uhj; else goto c5uhk;
       c5uhj: // global
           R1 = []_closure+1;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5uhk: // global
           I64[Sp - 8] = block_c5uh6_info;
           _s5u3F::P64 = P64[R1 + 14];
           R1 = P64[R1 + 6];
           P64[Sp] = _s5u3F::P64;
           Sp = Sp - 8;
           if (R1 & 7 != 0) goto u5uhy; else goto c5uh7;
       u5uhy: // global
           call _c5uh6(R1) args: 0, res: 0, upd: 0;
       c5uh7: // global
           call (I64[I64[R1]])(R1) args: 8, res: 8, upd: 8;
     }
 },
 _c5uh6() //  [R1]
         { info_tbl: [(c5uh6,
                       label: block_c5uh6_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5uh6: // global
           Hp = Hp + 96;
           if (Hp > HpLim) (likely: False) goto c5uhx; else goto c5uhw;
       c5uhx: // global
           HpAlloc = 96;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5uhw: // global
           _s5u3H::P64 = P64[R1 + 7];
           _s5u3I::P64 = P64[R1 + 15];
           I64[Hp - 88] = sat_s5u3L_info;
           P64[Hp - 72] = P64[Sp + 8];
           I64[Hp - 64] = GHC.TypeLits.SomeSymbol_con_info;
           P64[Hp - 56] = _s5u3H::P64;
           P64[Hp - 48] = Data.Proxy.Proxy_closure+1;
           I64[Hp - 40] = (,)_con_info;
           P64[Hp - 32] = Hp - 63;
           P64[Hp - 24] = _s5u3I::P64;
           I64[Hp - 16] = :_con_info;
           P64[Hp - 8] = Hp - 39;
           P64[Hp] = Hp - 88;
           R1 = Hp - 14;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:30.93160915 UTC

[section ""data" . GHC.TypeLits.$fReadSomeSymbol_$creadsPrec_closure" {
     GHC.TypeLits.$fReadSomeSymbol_$creadsPrec_closure:
         const GHC.TypeLits.$fReadSomeSymbol_$creadsPrec_info;
         const 0;
 },
 GHC.TypeLits.$fReadSomeSymbol_$creadsPrec_entry() //  [R2, R3]
         { info_tbl: [(c5uif,
                       label: GHC.TypeLits.$fReadSomeSymbol_$creadsPrec_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5uif: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5uij; else goto c5uik;
       c5uij: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.$fReadSomeSymbol_$creadsPrec_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5uik: // global
           I64[Sp - 16] = block_c5uid_info;
           R4 = Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure+1;
           _s5u3N::P64 = R3;
           R3 = R2;
           R2 = GHC.Read.$fReadChar2_closure+1;
           P64[Sp - 8] = _s5u3N::P64;
           Sp = Sp - 16;
           call GHC.Read.list3_entry(R4, R3, R2) args: 8, res: 8, upd: 8;
     }
 },
 _c5uid() //  [R1]
         { info_tbl: [(c5uid,
                       label: block_c5uid_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5uid: // global
           _s5u3N::P64 = P64[Sp + 8];
           I64[Sp + 8] = block_c5uii_info;
           R3 = _s5u3N::P64;
           R2 = R1;
           Sp = Sp + 8;
           call Text.ParserCombinators.ReadP.run_entry(R3,
                                                       R2) args: 8, res: 8, upd: 8;
     }
 },
 _c5uii() //  [R1]
         { info_tbl: [(c5uii,
                       label: block_c5uii_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5uii: // global
           R2 = R1;
           Sp = Sp + 8;
           call GHC.TypeLits.$fReadSomeSymbol_go_entry(R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:30.939330992 UTC

[section ""data" . GHC.TypeLits.$fReadSomeSymbol4_closure" {
     GHC.TypeLits.$fReadSomeSymbol4_closure:
         const GHC.TypeLits.$fReadSomeSymbol4_info;
         const 0;
 },
 sat_s5u3S_entry() //  [R1, R2]
         { info_tbl: [(c5uiO,
                       label: sat_s5u3S_info
                       rep:HeapRep 1 ptrs { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5uiO: // global
           R3 = R2;
           R2 = P64[R1 + 7];
           call GHC.TypeLits.$fReadSomeSymbol_$creadsPrec_entry(R3,
                                                                R2) args: 8, res: 0, upd: 8;
     }
 },
 GHC.TypeLits.$fReadSomeSymbol4_entry() //  [R2, R3]
         { info_tbl: [(c5uiU,
                       label: GHC.TypeLits.$fReadSomeSymbol4_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5uiU: // global
           _s5u3R::P64 = R3;
           _s5u3Q::P64 = R2;
           if ((Sp + -8) < SpLim) (likely: False) goto c5uiV; else goto c5uiW;
       c5uiW: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5uiY; else goto c5uiX;
       c5uiY: // global
           HpAlloc = 16;
           goto c5uiV;
       c5uiV: // global
           R3 = _s5u3R::P64;
           R2 = _s5u3Q::P64;
           R1 = GHC.TypeLits.$fReadSomeSymbol4_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5uiX: // global
           I64[Hp - 8] = sat_s5u3S_info;
           P64[Hp] = _s5u3Q::P64;
           I64[Sp - 8] = block_c5uiR_info;
           R3 = _s5u3R::P64;
           R2 = Hp - 7;
           Sp = Sp - 8;
           call Text.ParserCombinators.ReadP.$wreadS_to_P_entry(R3,
                                                                R2) args: 8, res: 8, upd: 8;
     }
 },
 _c5uiR() //  [R1]
         { info_tbl: [(c5uiR,
                       label: block_c5uiR_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5uiR: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5uj1; else goto c5uj0;
       c5uj1: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5uj0: // global
           I64[Hp - 8] = Text.ParserCombinators.ReadP.Look_con_info;
           P64[Hp] = R1;
           R1 = Hp - 6;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:30.94702339 UTC

[section ""data" . GHC.TypeLits.$fReadSomeSymbol3_closure" {
     GHC.TypeLits.$fReadSomeSymbol3_closure:
         const GHC.Types.I#_con_info;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:30.949050865 UTC

[section ""data" . GHC.TypeLits.$fReadSomeSymbol2_closure" {
     GHC.TypeLits.$fReadSomeSymbol2_closure:
         const GHC.TypeLits.$fReadSomeSymbol2_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.TypeLits.$fReadSomeSymbol2_entry() //  [R1]
         { info_tbl: [(c5ujo,
                       label: GHC.TypeLits.$fReadSomeSymbol2_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5ujo: // global
           if ((Sp + -40) < SpLim) (likely: False) goto c5ujp; else goto c5ujq;
       c5ujp: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5ujq: // global
           (_c5ujl::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c5ujl::I64 == 0) goto c5ujn; else goto c5ujm;
       c5ujn: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c5ujm: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c5ujl::I64;
           R2 = GHC.TypeLits.$fReadSomeSymbol4_closure+2;
           I64[Sp - 40] = stg_ap_pp_info;
           P64[Sp - 32] = GHC.TypeLits.$fReadSomeSymbol3_closure+1;
           P64[Sp - 24] = Text.ParserCombinators.ReadP.$fApplicativeP_$cpure_closure+1;
           Sp = Sp - 40;
           call GHC.Read.list_entry(R2) args: 48, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:30.953737343 UTC

[section ""data" . GHC.TypeLits.$fReadSomeSymbol_$creadList_closure" {
     GHC.TypeLits.$fReadSomeSymbol_$creadList_closure:
         const GHC.TypeLits.$fReadSomeSymbol_$creadList_info;
         const 0;
 },
 GHC.TypeLits.$fReadSomeSymbol_$creadList_entry() //  [R2]
         { info_tbl: [(c5ujH,
                       label: GHC.TypeLits.$fReadSomeSymbol_$creadList_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5ujH: // global
           R3 = R2;
           R2 = GHC.TypeLits.$fReadSomeSymbol2_closure;
           call Text.ParserCombinators.ReadP.run_entry(R3,
                                                       R2) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:30.957626497 UTC

[section ""data" . GHC.TypeLits.$fReadSomeSymbol1_closure" {
     GHC.TypeLits.$fReadSomeSymbol1_closure:
         const GHC.TypeLits.$fReadSomeSymbol1_info;
         const 0;
 },
 GHC.TypeLits.$fReadSomeSymbol1_entry() //  [R2, R3]
         { info_tbl: [(c5ujV,
                       label: GHC.TypeLits.$fReadSomeSymbol1_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5ujV: // global
           if ((Sp + -8) < SpLim) (likely: False) goto c5ujW; else goto c5ujX;
       c5ujW: // global
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.$fReadSomeSymbol1_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5ujX: // global
           I64[Sp - 8] = block_c5ujS_info;
           R3 = R3;
           R2 = GHC.TypeLits.$fReadSomeSymbol_$creadList_closure+1;
           Sp = Sp - 8;
           call Text.ParserCombinators.ReadP.$wreadS_to_P_entry(R3,
                                                                R2) args: 8, res: 8, upd: 8;
     }
 },
 _c5ujS() //  [R1]
         { info_tbl: [(c5ujS,
                       label: block_c5ujS_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5ujS: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5uk0; else goto c5ujZ;
       c5uk0: // global
           HpAlloc = 16;
           R1 = R1;
           call stg_gc_unpt_r1(R1) args: 8, res: 8, upd: 8;
       c5ujZ: // global
           I64[Hp - 8] = Text.ParserCombinators.ReadP.Look_con_info;
           P64[Hp] = R1;
           R1 = Hp - 6;
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:30.964281328 UTC

[section ""data" . GHC.TypeLits.$fReadSomeSymbol_closure" {
     GHC.TypeLits.$fReadSomeSymbol_closure:
         const GHC.Read.C:Read_con_info;
         const GHC.TypeLits.$fReadSomeSymbol_$creadsPrec_closure+2;
         const GHC.TypeLits.$fReadSomeSymbol_$creadList_closure+1;
         const GHC.TypeLits.$fReadSomeSymbol4_closure+2;
         const GHC.TypeLits.$fReadSomeSymbol1_closure+2;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:30.966336035 UTC

[section ""cstring" . GHC.TypeLits.$trModule4_bytes" {
     GHC.TypeLits.$trModule4_bytes:
         I8[] [98,97,115,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:00:30.967969835 UTC

[section ""data" . GHC.TypeLits.$trModule3_closure" {
     GHC.TypeLits.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeLits.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:30.969623703 UTC

[section ""cstring" . GHC.TypeLits.$trModule2_bytes" {
     GHC.TypeLits.$trModule2_bytes:
         I8[] [71,72,67,46,84,121,112,101,76,105,116,115]
 }]


==================== Output Cmm ====================
2018-03-16 16:00:30.971209618 UTC

[section ""data" . GHC.TypeLits.$trModule1_closure" {
     GHC.TypeLits.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeLits.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:30.97285009 UTC

[section ""data" . GHC.TypeLits.$trModule_closure" {
     GHC.TypeLits.$trModule_closure:
         const GHC.Types.Module_con_info;
         const GHC.TypeLits.$trModule3_closure+1;
         const GHC.TypeLits.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:30.974663478 UTC

[section ""data" . $krep_r5tkw_closure" {
     $krep_r5tkw_closure:
         const GHC.Types.KindRepVar_con_info;
         const 0;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:30.976476352 UTC

[section ""data" . $krep1_r5tkx_closure" {
     $krep1_r5tkx_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcChar_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:30.978283812 UTC

[section ""data" . $krep2_r5tky_closure" {
     $krep2_r5tky_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcConstraint_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:30.979970101 UTC

[section ""data" . $krep3_r5tkz_closure" {
     $krep3_r5tkz_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tcSymbol_closure;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:30.981691264 UTC

[section ""data" . $krep4_r5tkA_closure" {
     $krep4_r5tkA_closure:
         const :_con_info;
         const $krep1_r5tkx_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:30.983347091 UTC

[section ""data" . $krep5_r5tkB_closure" {
     $krep5_r5tkB_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.Types.$tc[]_closure;
         const $krep4_r5tkA_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:30.985072465 UTC

[section ""data" . $krep6_r5tkC_closure" {
     $krep6_r5tkC_closure:
         const :_con_info;
         const $krep_r5tkw_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:30.98677561 UTC

[section ""data" . $krep7_r5tkD_closure" {
     $krep7_r5tkD_closure:
         const :_con_info;
         const $krep3_r5tkz_closure+1;
         const $krep6_r5tkC_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:30.989062302 UTC

[section ""data" . $krep8_r5tkE_closure" {
     $krep8_r5tkE_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const Data.Proxy.$tcProxy_closure;
         const $krep7_r5tkD_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:30.990805082 UTC

[section ""data" . GHC.TypeLits.$tcKnownSymbol1_closure" {
     GHC.TypeLits.$tcKnownSymbol1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep3_r5tkz_closure+1;
         const $krep2_r5tky_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:30.992534951 UTC

[section ""data" . GHC.TypeLits.$tcSSymbol1_closure" {
     GHC.TypeLits.$tcSSymbol1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep3_r5tkz_closure+1;
         const GHC.Types.krep$*_closure;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:30.994381786 UTC

[section ""data" . GHC.TypeLits.$tcWrapS1_closure" {
     GHC.TypeLits.$tcWrapS1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep3_r5tkz_closure+1;
         const GHC.Types.krep$*Arr*_closure;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:30.99604921 UTC

[section ""data" . $krep9_r5tkF_closure" {
     $krep9_r5tkF_closure:
         const GHC.Types.KindRepVar_con_info;
         const 1;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:30.997760088 UTC

[section ""data" . $krep10_r5tkG_closure" {
     $krep10_r5tkG_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep8_r5tkE_closure+1;
         const $krep9_r5tkF_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:30.999346806 UTC

[section ""cstring" . GHC.TypeLits.$tcErrorMessage2_bytes" {
     GHC.TypeLits.$tcErrorMessage2_bytes:
         I8[] [69,114,114,111,114,77,101,115,115,97,103,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.000767324 UTC

[section ""data" . GHC.TypeLits.$tcErrorMessage1_closure" {
     GHC.TypeLits.$tcErrorMessage1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeLits.$tcErrorMessage2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.002452935 UTC

[section ""data" . GHC.TypeLits.$tcErrorMessage_closure" {
     GHC.TypeLits.$tcErrorMessage_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeLits.$trModule_closure+1;
         const GHC.TypeLits.$tcErrorMessage1_closure+1;
         const GHC.Types.krep$*_closure;
         const 7630159379940119730;
         const 9206405315391268733;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.004219011 UTC

[section ""data" . $krep11_r5tkH_closure" {
     $krep11_r5tkH_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.TypeLits.$tcErrorMessage_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.006475092 UTC

[section ""data" . GHC.TypeLits.$tc'ShowType1_closure" {
     GHC.TypeLits.$tc'ShowType1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep_r5tkw_closure+2;
         const $krep11_r5tkH_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.008076607 UTC

[section ""cstring" . GHC.TypeLits.$tc'ShowType3_bytes" {
     GHC.TypeLits.$tc'ShowType3_bytes:
         I8[] [39,83,104,111,119,84,121,112,101]
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.009726251 UTC

[section ""data" . GHC.TypeLits.$tc'ShowType2_closure" {
     GHC.TypeLits.$tc'ShowType2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeLits.$tc'ShowType3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.011328018 UTC

[section ""data" . GHC.TypeLits.$tc'ShowType_closure" {
     GHC.TypeLits.$tc'ShowType_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeLits.$trModule_closure+1;
         const GHC.TypeLits.$tc'ShowType2_closure+1;
         const GHC.TypeLits.$tc'ShowType1_closure+4;
         const 8382284352214508650;
         const 11348954620262118930;
         const 1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.013979097 UTC

[section ""data" . GHC.TypeLits.$tc'Text1_closure" {
     GHC.TypeLits.$tc'Text1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep3_r5tkz_closure+1;
         const $krep11_r5tkH_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.015659332 UTC

[section ""cstring" . GHC.TypeLits.$tc'Text3_bytes" {
     GHC.TypeLits.$tc'Text3_bytes:
         I8[] [39,84,101,120,116]
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.017280626 UTC

[section ""data" . GHC.TypeLits.$tc'Text2_closure" {
     GHC.TypeLits.$tc'Text2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeLits.$tc'Text3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.018810955 UTC

[section ""data" . GHC.TypeLits.$tc'Text_closure" {
     GHC.TypeLits.$tc'Text_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeLits.$trModule_closure+1;
         const GHC.TypeLits.$tc'Text2_closure+1;
         const GHC.TypeLits.$tc'Text1_closure+4;
         const 2493578998071024502;
         const 3678534661723514344;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.020577917 UTC

[section ""data" . $krep12_r5tkI_closure" {
     $krep12_r5tkI_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep11_r5tkH_closure+1;
         const $krep11_r5tkH_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.022195452 UTC

[section ""data" . GHC.TypeLits.$tc':$$:1_closure" {
     GHC.TypeLits.$tc':$$:1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep11_r5tkH_closure+1;
         const $krep12_r5tkI_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.023762545 UTC

[section ""cstring" . GHC.TypeLits.$tc':<>:2_bytes" {
     GHC.TypeLits.$tc':<>:2_bytes:
         I8[] [39,58,60,62,58]
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.025298075 UTC

[section ""data" . GHC.TypeLits.$tc':<>:1_closure" {
     GHC.TypeLits.$tc':<>:1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeLits.$tc':<>:2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.026853584 UTC

[section ""data" . GHC.TypeLits.$tc':<>:_closure" {
     GHC.TypeLits.$tc':<>:_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeLits.$trModule_closure+1;
         const GHC.TypeLits.$tc':<>:1_closure+1;
         const GHC.TypeLits.$tc':$$:1_closure+4;
         const 3983262092273118172;
         const 8733217608481743011;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.028543471 UTC

[section ""cstring" . GHC.TypeLits.$tc':$$:3_bytes" {
     GHC.TypeLits.$tc':$$:3_bytes:
         I8[] [39,58,36,36,58]
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.030609315 UTC

[section ""data" . GHC.TypeLits.$tc':$$:2_closure" {
     GHC.TypeLits.$tc':$$:2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeLits.$tc':$$:3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.032160881 UTC

[section ""data" . GHC.TypeLits.$tc':$$:_closure" {
     GHC.TypeLits.$tc':$$:_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeLits.$trModule_closure+1;
         const GHC.TypeLits.$tc':$$:2_closure+1;
         const GHC.TypeLits.$tc':$$:1_closure+4;
         const 16852088601940984151;
         const 507953211190232322;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.033874854 UTC

[section ""cstring" . GHC.TypeLits.$tcSSymbol3_bytes" {
     GHC.TypeLits.$tcSSymbol3_bytes:
         I8[] [83,83,121,109,98,111,108]
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.035477608 UTC

[section ""data" . GHC.TypeLits.$tcSSymbol2_closure" {
     GHC.TypeLits.$tcSSymbol2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeLits.$tcSSymbol3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.037629846 UTC

[section ""data" . GHC.TypeLits.$tcSSymbol_closure" {
     GHC.TypeLits.$tcSSymbol_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeLits.$trModule_closure+1;
         const GHC.TypeLits.$tcSSymbol2_closure+1;
         const GHC.TypeLits.$tcSSymbol1_closure+4;
         const 6053239415793076730;
         const 11057125606635161794;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.039444629 UTC

[section ""data" . $krep13_r5tkJ_closure" {
     $krep13_r5tkJ_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.TypeLits.$tcSSymbol_closure+1;
         const $krep6_r5tkC_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.041101359 UTC

[section ""data" . GHC.TypeLits.$tc'SSymbol1_closure" {
     GHC.TypeLits.$tc'SSymbol1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep5_r5tkB_closure+1;
         const $krep13_r5tkJ_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.042961875 UTC

[section ""cstring" . GHC.TypeLits.$tc'SSymbol3_bytes" {
     GHC.TypeLits.$tc'SSymbol3_bytes:
         I8[] [39,83,83,121,109,98,111,108]
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.044544497 UTC

[section ""data" . GHC.TypeLits.$tc'SSymbol2_closure" {
     GHC.TypeLits.$tc'SSymbol2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeLits.$tc'SSymbol3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.046900829 UTC

[section ""data" . GHC.TypeLits.$tc'SSymbol_closure" {
     GHC.TypeLits.$tc'SSymbol_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeLits.$trModule_closure+1;
         const GHC.TypeLits.$tc'SSymbol2_closure+1;
         const GHC.TypeLits.$tc'SSymbol1_closure+4;
         const 1559313649785769064;
         const 360611317898112776;
         const 1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.048667162 UTC

[section ""cstring" . GHC.TypeLits.$tcKnownSymbol3_bytes" {
     GHC.TypeLits.$tcKnownSymbol3_bytes:
         I8[] [75,110,111,119,110,83,121,109,98,111,108]
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.050401153 UTC

[section ""data" . GHC.TypeLits.$tcKnownSymbol2_closure" {
     GHC.TypeLits.$tcKnownSymbol2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeLits.$tcKnownSymbol3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.052179545 UTC

[section ""data" . GHC.TypeLits.$tcKnownSymbol_closure" {
     GHC.TypeLits.$tcKnownSymbol_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeLits.$trModule_closure+1;
         const GHC.TypeLits.$tcKnownSymbol2_closure+1;
         const GHC.TypeLits.$tcKnownSymbol1_closure+4;
         const 1897426542959159002;
         const 11426707038979253074;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.054058758 UTC

[section ""data" . $krep14_r5tkK_closure" {
     $krep14_r5tkK_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.TypeLits.$tcKnownSymbol_closure+1;
         const $krep6_r5tkC_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.055707555 UTC

[section ""data" . $krep15_r5tkL_closure" {
     $krep15_r5tkL_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep14_r5tkK_closure+1;
         const $krep10_r5tkG_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.057384875 UTC

[section ""data" . GHC.TypeLits.$tc'C:KnownSymbol1_closure" {
     GHC.TypeLits.$tc'C:KnownSymbol1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep13_r5tkJ_closure+1;
         const $krep14_r5tkK_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.059066331 UTC

[section ""cstring" . GHC.TypeLits.$tc'C:KnownSymbol3_bytes" {
     GHC.TypeLits.$tc'C:KnownSymbol3_bytes:
         I8[] [39,67,58,75,110,111,119,110,83,121,109,98,111,108]
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.060755904 UTC

[section ""data" . GHC.TypeLits.$tc'C:KnownSymbol2_closure" {
     GHC.TypeLits.$tc'C:KnownSymbol2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeLits.$tc'C:KnownSymbol3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.062471038 UTC

[section ""data" . GHC.TypeLits.$tc'C:KnownSymbol_closure" {
     GHC.TypeLits.$tc'C:KnownSymbol_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeLits.$trModule_closure+1;
         const GHC.TypeLits.$tc'C:KnownSymbol2_closure+1;
         const GHC.TypeLits.$tc'C:KnownSymbol1_closure+4;
         const 16813031602224516101;
         const 12647750771094255736;
         const 1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.064864965 UTC

[section ""cstring" . GHC.TypeLits.$tcSomeSymbol2_bytes" {
     GHC.TypeLits.$tcSomeSymbol2_bytes:
         I8[] [83,111,109,101,83,121,109,98,111,108]
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.066466489 UTC

[section ""data" . GHC.TypeLits.$tcSomeSymbol1_closure" {
     GHC.TypeLits.$tcSomeSymbol1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeLits.$tcSomeSymbol2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.068111699 UTC

[section ""data" . GHC.TypeLits.$tcSomeSymbol_closure" {
     GHC.TypeLits.$tcSomeSymbol_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeLits.$trModule_closure+1;
         const GHC.TypeLits.$tcSomeSymbol1_closure+1;
         const GHC.Types.krep$*_closure;
         const 8170228625754745342;
         const 5936112829002510826;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.070536027 UTC

[section ""data" . $krep16_r5tkM_closure" {
     $krep16_r5tkM_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.TypeLits.$tcSomeSymbol_closure+1;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.072761874 UTC

[section ""data" . $krep17_r5tkN_closure" {
     $krep17_r5tkN_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep8_r5tkE_closure+1;
         const $krep16_r5tkM_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.07482221 UTC

[section ""data" . GHC.TypeLits.$tc'SomeSymbol1_closure" {
     GHC.TypeLits.$tc'SomeSymbol1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep14_r5tkK_closure+1;
         const $krep17_r5tkN_closure+4;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.076617206 UTC

[section ""cstring" . GHC.TypeLits.$tc'SomeSymbol3_bytes" {
     GHC.TypeLits.$tc'SomeSymbol3_bytes:
         I8[] [39,83,111,109,101,83,121,109,98,111,108]
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.078309603 UTC

[section ""data" . GHC.TypeLits.$tc'SomeSymbol2_closure" {
     GHC.TypeLits.$tc'SomeSymbol2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeLits.$tc'SomeSymbol3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.079941457 UTC

[section ""data" . GHC.TypeLits.$tc'SomeSymbol_closure" {
     GHC.TypeLits.$tc'SomeSymbol_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeLits.$trModule_closure+1;
         const GHC.TypeLits.$tc'SomeSymbol2_closure+1;
         const GHC.TypeLits.$tc'SomeSymbol1_closure+4;
         const 3805514464201054242;
         const 4871133717641740493;
         const 1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.08177919 UTC

[section ""cstring" . GHC.TypeLits.$tcWrapS3_bytes" {
     GHC.TypeLits.$tcWrapS3_bytes:
         I8[] [87,114,97,112,83]
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.083385129 UTC

[section ""data" . GHC.TypeLits.$tcWrapS2_closure" {
     GHC.TypeLits.$tcWrapS2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeLits.$tcWrapS3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.085036109 UTC

[section ""data" . GHC.TypeLits.$tcWrapS_closure" {
     GHC.TypeLits.$tcWrapS_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeLits.$trModule_closure+1;
         const GHC.TypeLits.$tcWrapS2_closure+1;
         const GHC.TypeLits.$tcWrapS1_closure+4;
         const 9018955994487767128;
         const 531430869376599499;
         const 0;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.087047194 UTC

[section ""data" . $krep18_r5tkO_closure" {
     $krep18_r5tkO_closure:
         const :_con_info;
         const $krep9_r5tkF_closure+2;
         const GHC.Types.[]_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.088724591 UTC

[section ""data" . $krep19_r5tkP_closure" {
     $krep19_r5tkP_closure:
         const :_con_info;
         const $krep_r5tkw_closure+2;
         const $krep18_r5tkO_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.091189416 UTC

[section ""data" . $krep20_r5tkQ_closure" {
     $krep20_r5tkQ_closure:
         const GHC.Types.KindRepTyConApp_con_info;
         const GHC.TypeLits.$tcWrapS_closure+1;
         const $krep19_r5tkP_closure+2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.092836408 UTC

[section ""data" . GHC.TypeLits.$tc'WrapS1_closure" {
     GHC.TypeLits.$tc'WrapS1_closure:
         const GHC.Types.KindRepFun_con_info;
         const $krep15_r5tkL_closure+4;
         const $krep20_r5tkQ_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.094711886 UTC

[section ""cstring" . GHC.TypeLits.$tc'WrapS3_bytes" {
     GHC.TypeLits.$tc'WrapS3_bytes:
         I8[] [39,87,114,97,112,83]
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.096284252 UTC

[section ""data" . GHC.TypeLits.$tc'WrapS2_closure" {
     GHC.TypeLits.$tc'WrapS2_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.TypeLits.$tc'WrapS3_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.098494531 UTC

[section ""data" . GHC.TypeLits.$tc'WrapS_closure" {
     GHC.TypeLits.$tc'WrapS_closure:
         const GHC.Types.TyCon_con_info;
         const GHC.TypeLits.$trModule_closure+1;
         const GHC.TypeLits.$tc'WrapS2_closure+1;
         const GHC.TypeLits.$tc'WrapS1_closure+4;
         const 10848673411250088112;
         const 6323353939001754670;
         const 2;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.100566517 UTC

[section ""data" . GHC.TypeLits.someNatVal1_closure" {
     GHC.TypeLits.someNatVal1_closure:
         const GHC.TypeLits.someNatVal1_info;
         const 0;
         const 0;
         const 0;
 },
 GHC.TypeLits.someNatVal1_entry() //  [R1]
         { info_tbl: [(c5ulw,
                       label: GHC.TypeLits.someNatVal1_info
                       rep:HeapRep static { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5ulw: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5ulx; else goto c5uly;
       c5ulx: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5uly: // global
           (_c5ult::I64) = call "ccall" arg hints:  [PtrHint,
                                                     PtrHint]  result hints:  [PtrHint] newCAF(BaseReg, R1);
           if (_c5ult::I64 == 0) goto c5ulv; else goto c5ulu;
       c5ulv: // global
           call (I64[I64[R1]])() args: 8, res: 0, upd: 8;
       c5ulu: // global
           I64[Sp - 16] = stg_bh_upd_frame_info;
           I64[Sp - 8] = _c5ult::I64;
           R3 = GHC.Types.[]_closure+1;
           R2 = GHC.Types.True_closure+2;
           Sp = Sp - 16;
           call GHC.Integer.Type.mkInteger_entry(R3,
                                                 R2) args: 24, res: 0, upd: 24;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.105406309 UTC

[section ""data" . GHC.TypeLits.someNatVal_closure" {
     GHC.TypeLits.someNatVal_closure:
         const GHC.TypeLits.someNatVal_info;
         const 0;
 },
 sat_s5u41_entry() //  [R1]
         { info_tbl: [(c5ulW,
                       label: sat_s5u41_info
                       rep:HeapRep 1 ptrs { Thunk })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5ulW: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5ulX; else goto c5ulY;
       c5ulX: // global
           R1 = R1;
           call (stg_gc_enter_1)(R1) args: 8, res: 0, upd: 8;
       c5ulY: // global
           I64[Sp - 16] = stg_upd_frame_info;
           P64[Sp - 8] = R1;
           R2 = P64[R1 + 16];
           Sp = Sp - 16;
           call GHC.Natural.naturalFromInteger_entry(R2) args: 24, res: 0, upd: 24;
     }
 },
 GHC.TypeLits.someNatVal_entry() //  [R2]
         { info_tbl: [(c5um2,
                       label: GHC.TypeLits.someNatVal_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5um2: // global
           if ((Sp + -16) < SpLim) (likely: False) goto c5um3; else goto c5um4;
       c5um3: // global
           R2 = R2;
           R1 = GHC.TypeLits.someNatVal_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5um4: // global
           I64[Sp - 16] = block_c5ulN_info;
           R3 = GHC.TypeLits.someNatVal1_closure;
           _s5u3Z::P64 = R2;
           R2 = R2;
           P64[Sp - 8] = _s5u3Z::P64;
           Sp = Sp - 16;
           call GHC.Integer.Type.geInteger#_entry(R3,
                                                  R2) args: 8, res: 8, upd: 8;
     }
 },
 _c5ulN() //  [R1]
         { info_tbl: [(c5ulN,
                       label: block_c5ulN_info
                       rep:StackRep [False])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5ulN: // global
           if (R1 == 1) goto c5um1; else goto c5um0;
       c5um1: // global
           Hp = Hp + 64;
           if (Hp > HpLim) (likely: False) goto c5umb; else goto c5uma;
       c5umb: // global
           HpAlloc = 64;
           R1 = R1;
           call stg_gc_unbx_r1(R1) args: 8, res: 8, upd: 8;
       c5uma: // global
           I64[Hp - 56] = sat_s5u41_info;
           P64[Hp - 40] = P64[Sp + 8];
           I64[Hp - 32] = GHC.TypeNats.SomeNat_con_info;
           P64[Hp - 24] = Hp - 56;
           P64[Hp - 16] = Data.Proxy.Proxy_closure+1;
           I64[Hp - 8] = GHC.Base.Just_con_info;
           P64[Hp] = Hp - 31;
           R1 = Hp - 6;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
       c5um0: // global
           R1 = GHC.Base.Nothing_closure+1;
           Sp = Sp + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.113921767 UTC

[section ""data" . GHC.TypeLits.WrapS_closure" {
     GHC.TypeLits.WrapS_closure:
         const GHC.TypeLits.WrapS_info;
 },
 GHC.TypeLits.WrapS_entry() //  [R2]
         { info_tbl: [(c5umG,
                       label: GHC.TypeLits.WrapS_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5umG: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5umK; else goto c5umJ;
       c5umK: // global
           HpAlloc = 16;
           R2 = R2;
           R1 = GHC.TypeLits.WrapS_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5umJ: // global
           I64[Hp - 8] = GHC.TypeLits.WrapS_con_info;
           P64[Hp] = R2;
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.117815092 UTC

[section ""data" . GHC.TypeLits.Text_closure" {
     GHC.TypeLits.Text_closure:
         const GHC.TypeLits.Text_info;
 },
 GHC.TypeLits.Text_entry() //  [R2]
         { info_tbl: [(c5umW,
                       label: GHC.TypeLits.Text_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5umW: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5un0; else goto c5umZ;
       c5un0: // global
           HpAlloc = 16;
           R2 = R2;
           R1 = GHC.TypeLits.Text_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5umZ: // global
           I64[Hp - 8] = GHC.TypeLits.Text_con_info;
           P64[Hp] = R2;
           R1 = Hp - 7;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.121920327 UTC

[section ""data" . GHC.TypeLits.ShowType_closure" {
     GHC.TypeLits.ShowType_closure:
         const GHC.TypeLits.ShowType_info;
 },
 GHC.TypeLits.ShowType_entry() //  [R2]
         { info_tbl: [(c5unc,
                       label: GHC.TypeLits.ShowType_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5unc: // global
           Hp = Hp + 16;
           if (Hp > HpLim) (likely: False) goto c5ung; else goto c5unf;
       c5ung: // global
           HpAlloc = 16;
           R2 = R2;
           R1 = GHC.TypeLits.ShowType_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       c5unf: // global
           I64[Hp - 8] = GHC.TypeLits.ShowType_con_info;
           P64[Hp] = R2;
           R1 = Hp - 6;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.126466664 UTC

[section ""data" . GHC.TypeLits.:<>:_closure" {
     GHC.TypeLits.:<>:_closure:
         const GHC.TypeLits.:<>:_info;
 },
 GHC.TypeLits.:<>:_entry() //  [R2, R3]
         { info_tbl: [(c5uns,
                       label: GHC.TypeLits.:<>:_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5uns: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5unw; else goto c5unv;
       c5unw: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.:<>:_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5unv: // global
           I64[Hp - 16] = GHC.TypeLits.:<>:_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 13;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.130444617 UTC

[section ""data" . GHC.TypeLits.:$$:_closure" {
     GHC.TypeLits.:$$:_closure:
         const GHC.TypeLits.:$$:_info;
 },
 GHC.TypeLits.:$$:_entry() //  [R2, R3]
         { info_tbl: [(c5unI,
                       label: GHC.TypeLits.:$$:_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5unI: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5unM; else goto c5unL;
       c5unM: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.:$$:_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5unL: // global
           I64[Hp - 16] = GHC.TypeLits.:$$:_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 12;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.13435536 UTC

[section ""data" . GHC.TypeLits.SomeSymbol_closure" {
     GHC.TypeLits.SomeSymbol_closure:
         const GHC.TypeLits.SomeSymbol_info;
 },
 GHC.TypeLits.SomeSymbol_entry() //  [R2, R3]
         { info_tbl: [(c5unY,
                       label: GHC.TypeLits.SomeSymbol_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5unY: // global
           Hp = Hp + 24;
           if (Hp > HpLim) (likely: False) goto c5uo2; else goto c5uo1;
       c5uo2: // global
           HpAlloc = 24;
           R3 = R3;
           R2 = R2;
           R1 = GHC.TypeLits.SomeSymbol_closure;
           call (stg_gc_fun)(R3, R2, R1) args: 8, res: 0, upd: 8;
       c5uo1: // global
           I64[Hp - 16] = GHC.TypeLits.SomeSymbol_con_info;
           P64[Hp - 8] = R2;
           P64[Hp] = R3;
           R1 = Hp - 15;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.13809504 UTC

[GHC.TypeLits.WrapS_con_entry() //  [R1]
         { info_tbl: [(c5uo9,
                       label: GHC.TypeLits.WrapS_con_info
                       rep:HeapRep 1 ptrs {
                             Con {tag: 0
                                  descr:[98,97,115,101,58,71,72,67,46,84,121,112,101,76,105,116,115,46,87,114,97,112,83]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5uo9: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.141599371 UTC

[GHC.TypeLits.Text_con_entry() //  [R1]
         { info_tbl: [(c5uog,
                       label: GHC.TypeLits.Text_con_info
                       rep:HeapRep 1 ptrs {
                             Con {tag: 0
                                  descr:[98,97,115,101,58,71,72,67,46,84,121,112,101,76,105,116,115,46,84,101,120,116]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5uog: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.144773715 UTC

[GHC.TypeLits.ShowType_con_entry() //  [R1]
         { info_tbl: [(c5uon,
                       label: GHC.TypeLits.ShowType_con_info
                       rep:HeapRep 1 ptrs {
                             Con {tag: 1
                                  descr:[98,97,115,101,58,71,72,67,46,84,121,112,101,76,105,116,115,46,83,104,111,119,84,121,112,101]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5uon: // global
           R1 = R1 + 2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.148070152 UTC

[GHC.TypeLits.:<>:_con_entry() //  [R1]
         { info_tbl: [(c5uou,
                       label: GHC.TypeLits.:<>:_con_info
                       rep:HeapRep 2 ptrs {
                             Con {tag: 2
                                  descr:[98,97,115,101,58,71,72,67,46,84,121,112,101,76,105,116,115,46,58,60,62,58]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5uou: // global
           R1 = R1 + 3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.15149355 UTC

[GHC.TypeLits.:$$:_con_entry() //  [R1]
         { info_tbl: [(c5uoB,
                       label: GHC.TypeLits.:$$:_con_info
                       rep:HeapRep 2 ptrs {
                             Con {tag: 3
                                  descr:[98,97,115,101,58,71,72,67,46,84,121,112,101,76,105,116,115,46,58,36,36,58]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5uoB: // global
           R1 = R1 + 4;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.155253697 UTC

[GHC.TypeLits.SomeSymbol_con_entry() //  [R1]
         { info_tbl: [(c5uoI,
                       label: GHC.TypeLits.SomeSymbol_con_info
                       rep:HeapRep 2 ptrs {
                             Con {tag: 0
                                  descr:[98,97,115,101,58,71,72,67,46,84,121,112,101,76,105,116,115,46,83,111,109,101,83,121,109,98,111,108]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       c5uoI: // global
           R1 = R1 + 1;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 16:00:31.158398397 UTC

[section ""relreadonly" . S5u61_srt" {
     S5u61_srt:
         const GHC.Show.showLitString_closure;
         const GHC.TypeLits.$fShowSomeSymbol_$cshowsPrec_closure;
         const GHC.TypeLits.$fShowSomeSymbol_$cshow_closure;
         const GHC.TypeLits.$fShowSomeSymbol1_closure;
         const GHC.Read.list3_closure;
         const GHC.Read.$fReadChar2_closure;
         const GHC.TypeLits.$fReadSomeSymbol_$creadsPrec_closure;
         const GHC.TypeLits.$fReadSomeSymbol4_closure;
         const GHC.Read.list_closure;
         const GHC.TypeLits.$fReadSomeSymbol2_closure;
         const GHC.TypeLits.$fReadSomeSymbol1_closure;
         const GHC.TypeLits.$fReadSomeSymbol_$creadList_closure;
         const GHC.Natural.naturalFromInteger_closure;
         const GHC.TypeLits.someNatVal_closure;
         const GHC.TypeLits.someNatVal1_closure;
 }]

