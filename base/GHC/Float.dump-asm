
==================== Asm code ====================
2018-03-16 15:57:30.934895041 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$p1Floating_closure
.type GHC.Float.$p1Floating_closure, @object
GHC.Float.$p1Floating_closure:
	.quad	GHC.Float.$p1Floating_info


==================== Asm code ====================
2018-03-16 15:57:30.93583863 UTC

.section .text
.align 8
.globl GHC.Float.$p1Floating_entry
.type GHC.Float.$p1Floating_entry, @object
GHC.Float.$p1Floating_entry:
_c33Z9:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c33Za
_c33Zb:
	movq $block_c33Z6_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c33Z6
_c33Z7:
	movq (%rbx),%rax
	jmp *(%rax)
_c33Za:
	movl $GHC.Float.$p1Floating_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$p1Floating_entry, .-GHC.Float.$p1Floating_entry


==================== Asm code ====================
2018-03-16 15:57:30.936532461 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$p1Floating_info
.type GHC.Float.$p1Floating_info, @object
GHC.Float.$p1Floating_info:
	.quad	GHC.Float.$p1Floating_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:30.93721306 UTC

.section .text
.align 8
_c33Z6:
_c33Z6:
	movq 7(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c33Z6, .-_c33Z6


==================== Asm code ====================
2018-03-16 15:57:30.937852256 UTC

.section .data.rel.ro
.align 8
.align 1
block_c33Z6_info:
	.quad	_c33Z6
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:30.940702864 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.pi_closure
.type GHC.Float.pi_closure, @object
GHC.Float.pi_closure:
	.quad	GHC.Float.pi_info


==================== Asm code ====================
2018-03-16 15:57:30.94161111 UTC

.section .text
.align 8
.globl GHC.Float.pi_entry
.type GHC.Float.pi_entry, @object
GHC.Float.pi_entry:
_c33Zy:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c33Zz
_c33ZA:
	movq $block_c33Zv_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c33Zv
_c33Zw:
	movq (%rbx),%rax
	jmp *(%rax)
_c33Zz:
	movl $GHC.Float.pi_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.pi_entry, .-GHC.Float.pi_entry


==================== Asm code ====================
2018-03-16 15:57:30.94226303 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.pi_info
.type GHC.Float.pi_info, @object
GHC.Float.pi_info:
	.quad	GHC.Float.pi_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:30.942894431 UTC

.section .text
.align 8
_c33Zv:
_c33Zv:
	movq 15(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c33Zv, .-_c33Zv


==================== Asm code ====================
2018-03-16 15:57:30.943485428 UTC

.section .data.rel.ro
.align 8
.align 1
block_c33Zv_info:
	.quad	_c33Zv
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:30.946501329 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.exp_closure
.type GHC.Float.exp_closure, @object
GHC.Float.exp_closure:
	.quad	GHC.Float.exp_info


==================== Asm code ====================
2018-03-16 15:57:30.947334602 UTC

.section .text
.align 8
.globl GHC.Float.exp_entry
.type GHC.Float.exp_entry, @object
GHC.Float.exp_entry:
_c33ZV:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c33ZW
_c33ZX:
	movq $block_c33ZS_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c33ZS
_c33ZT:
	movq (%rbx),%rax
	jmp *(%rax)
_c33ZW:
	movl $GHC.Float.exp_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.exp_entry, .-GHC.Float.exp_entry


==================== Asm code ====================
2018-03-16 15:57:30.9479546 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.exp_info
.type GHC.Float.exp_info, @object
GHC.Float.exp_info:
	.quad	GHC.Float.exp_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:30.948574023 UTC

.section .text
.align 8
_c33ZS:
_c33ZS:
	movq 23(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c33ZS, .-_c33ZS


==================== Asm code ====================
2018-03-16 15:57:30.949139223 UTC

.section .data.rel.ro
.align 8
.align 1
block_c33ZS_info:
	.quad	_c33ZS
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:30.952510404 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.log_closure
.type GHC.Float.log_closure, @object
GHC.Float.log_closure:
	.quad	GHC.Float.log_info


==================== Asm code ====================
2018-03-16 15:57:30.953397172 UTC

.section .text
.align 8
.globl GHC.Float.log_entry
.type GHC.Float.log_entry, @object
GHC.Float.log_entry:
_c340i:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c340j
_c340k:
	movq $block_c340f_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c340f
_c340g:
	movq (%rbx),%rax
	jmp *(%rax)
_c340j:
	movl $GHC.Float.log_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.log_entry, .-GHC.Float.log_entry


==================== Asm code ====================
2018-03-16 15:57:30.95405492 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.log_info
.type GHC.Float.log_info, @object
GHC.Float.log_info:
	.quad	GHC.Float.log_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:30.954697922 UTC

.section .text
.align 8
_c340f:
_c340f:
	movq 31(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c340f, .-_c340f


==================== Asm code ====================
2018-03-16 15:57:30.955246038 UTC

.section .data.rel.ro
.align 8
.align 1
block_c340f_info:
	.quad	_c340f
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:30.958284789 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.sqrt_closure
.type GHC.Float.sqrt_closure, @object
GHC.Float.sqrt_closure:
	.quad	GHC.Float.sqrt_info


==================== Asm code ====================
2018-03-16 15:57:30.959141068 UTC

.section .text
.align 8
.globl GHC.Float.sqrt_entry
.type GHC.Float.sqrt_entry, @object
GHC.Float.sqrt_entry:
_c340F:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c340G
_c340H:
	movq $block_c340C_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c340C
_c340D:
	movq (%rbx),%rax
	jmp *(%rax)
_c340G:
	movl $GHC.Float.sqrt_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.sqrt_entry, .-GHC.Float.sqrt_entry


==================== Asm code ====================
2018-03-16 15:57:30.959794807 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.sqrt_info
.type GHC.Float.sqrt_info, @object
GHC.Float.sqrt_info:
	.quad	GHC.Float.sqrt_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:30.960485109 UTC

.section .text
.align 8
_c340C:
_c340C:
	movq 39(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c340C, .-_c340C


==================== Asm code ====================
2018-03-16 15:57:30.961087439 UTC

.section .data.rel.ro
.align 8
.align 1
block_c340C_info:
	.quad	_c340C
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:30.965424599 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.**_closure
.type GHC.Float.**_closure, @object
GHC.Float.**_closure:
	.quad	GHC.Float.**_info


==================== Asm code ====================
2018-03-16 15:57:30.966310144 UTC

.section .text
.align 8
.globl GHC.Float.**_entry
.type GHC.Float.**_entry, @object
GHC.Float.**_entry:
_c3412:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3413
_c3414:
	movq $block_c340Z_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c340Z
_c3410:
	movq (%rbx),%rax
	jmp *(%rax)
_c3413:
	movl $GHC.Float.**_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.**_entry, .-GHC.Float.**_entry


==================== Asm code ====================
2018-03-16 15:57:30.966906342 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.**_info
.type GHC.Float.**_info, @object
GHC.Float.**_info:
	.quad	GHC.Float.**_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:30.967581912 UTC

.section .text
.align 8
_c340Z:
_c340Z:
	movq 47(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c340Z, .-_c340Z


==================== Asm code ====================
2018-03-16 15:57:30.968107068 UTC

.section .data.rel.ro
.align 8
.align 1
block_c340Z_info:
	.quad	_c340Z
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:30.97107125 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.logBase_closure
.type GHC.Float.logBase_closure, @object
GHC.Float.logBase_closure:
	.quad	GHC.Float.logBase_info


==================== Asm code ====================
2018-03-16 15:57:30.971935751 UTC

.section .text
.align 8
.globl GHC.Float.logBase_entry
.type GHC.Float.logBase_entry, @object
GHC.Float.logBase_entry:
_c341p:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c341q
_c341r:
	movq $block_c341m_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c341m
_c341n:
	movq (%rbx),%rax
	jmp *(%rax)
_c341q:
	movl $GHC.Float.logBase_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.logBase_entry, .-GHC.Float.logBase_entry


==================== Asm code ====================
2018-03-16 15:57:30.972620687 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.logBase_info
.type GHC.Float.logBase_info, @object
GHC.Float.logBase_info:
	.quad	GHC.Float.logBase_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:30.973380846 UTC

.section .text
.align 8
_c341m:
_c341m:
	movq 55(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c341m, .-_c341m


==================== Asm code ====================
2018-03-16 15:57:30.973930016 UTC

.section .data.rel.ro
.align 8
.align 1
block_c341m_info:
	.quad	_c341m
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:30.976891576 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.sin_closure
.type GHC.Float.sin_closure, @object
GHC.Float.sin_closure:
	.quad	GHC.Float.sin_info


==================== Asm code ====================
2018-03-16 15:57:30.977781359 UTC

.section .text
.align 8
.globl GHC.Float.sin_entry
.type GHC.Float.sin_entry, @object
GHC.Float.sin_entry:
_c341M:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c341N
_c341O:
	movq $block_c341J_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c341J
_c341K:
	movq (%rbx),%rax
	jmp *(%rax)
_c341N:
	movl $GHC.Float.sin_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.sin_entry, .-GHC.Float.sin_entry


==================== Asm code ====================
2018-03-16 15:57:30.97846931 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.sin_info
.type GHC.Float.sin_info, @object
GHC.Float.sin_info:
	.quad	GHC.Float.sin_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:30.979149686 UTC

.section .text
.align 8
_c341J:
_c341J:
	movq 63(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c341J, .-_c341J


==================== Asm code ====================
2018-03-16 15:57:30.979724095 UTC

.section .data.rel.ro
.align 8
.align 1
block_c341J_info:
	.quad	_c341J
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:30.983660587 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.cos_closure
.type GHC.Float.cos_closure, @object
GHC.Float.cos_closure:
	.quad	GHC.Float.cos_info


==================== Asm code ====================
2018-03-16 15:57:30.98463548 UTC

.section .text
.align 8
.globl GHC.Float.cos_entry
.type GHC.Float.cos_entry, @object
GHC.Float.cos_entry:
_c3429:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c342a
_c342b:
	movq $block_c3426_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3426
_c3427:
	movq (%rbx),%rax
	jmp *(%rax)
_c342a:
	movl $GHC.Float.cos_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.cos_entry, .-GHC.Float.cos_entry


==================== Asm code ====================
2018-03-16 15:57:30.985331084 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.cos_info
.type GHC.Float.cos_info, @object
GHC.Float.cos_info:
	.quad	GHC.Float.cos_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:30.985994967 UTC

.section .text
.align 8
_c3426:
_c3426:
	movq 71(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c3426, .-_c3426


==================== Asm code ====================
2018-03-16 15:57:30.986591465 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3426_info:
	.quad	_c3426
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:30.989569128 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.tan_closure
.type GHC.Float.tan_closure, @object
GHC.Float.tan_closure:
	.quad	GHC.Float.tan_info


==================== Asm code ====================
2018-03-16 15:57:30.990463672 UTC

.section .text
.align 8
.globl GHC.Float.tan_entry
.type GHC.Float.tan_entry, @object
GHC.Float.tan_entry:
_c342w:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c342x
_c342y:
	movq $block_c342t_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c342t
_c342u:
	movq (%rbx),%rax
	jmp *(%rax)
_c342x:
	movl $GHC.Float.tan_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.tan_entry, .-GHC.Float.tan_entry


==================== Asm code ====================
2018-03-16 15:57:30.991109858 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.tan_info
.type GHC.Float.tan_info, @object
GHC.Float.tan_info:
	.quad	GHC.Float.tan_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:30.991783419 UTC

.section .text
.align 8
_c342t:
_c342t:
	movq 79(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c342t, .-_c342t


==================== Asm code ====================
2018-03-16 15:57:30.992390463 UTC

.section .data.rel.ro
.align 8
.align 1
block_c342t_info:
	.quad	_c342t
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:30.995563172 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.asin_closure
.type GHC.Float.asin_closure, @object
GHC.Float.asin_closure:
	.quad	GHC.Float.asin_info


==================== Asm code ====================
2018-03-16 15:57:30.996435212 UTC

.section .text
.align 8
.globl GHC.Float.asin_entry
.type GHC.Float.asin_entry, @object
GHC.Float.asin_entry:
_c342T:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c342U
_c342V:
	movq $block_c342Q_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c342Q
_c342R:
	movq (%rbx),%rax
	jmp *(%rax)
_c342U:
	movl $GHC.Float.asin_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.asin_entry, .-GHC.Float.asin_entry


==================== Asm code ====================
2018-03-16 15:57:30.997209324 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.asin_info
.type GHC.Float.asin_info, @object
GHC.Float.asin_info:
	.quad	GHC.Float.asin_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:30.997973964 UTC

.section .text
.align 8
_c342Q:
_c342Q:
	movq 87(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c342Q, .-_c342Q


==================== Asm code ====================
2018-03-16 15:57:30.999133944 UTC

.section .data.rel.ro
.align 8
.align 1
block_c342Q_info:
	.quad	_c342Q
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.002135781 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.acos_closure
.type GHC.Float.acos_closure, @object
GHC.Float.acos_closure:
	.quad	GHC.Float.acos_info


==================== Asm code ====================
2018-03-16 15:57:31.002987218 UTC

.section .text
.align 8
.globl GHC.Float.acos_entry
.type GHC.Float.acos_entry, @object
GHC.Float.acos_entry:
_c343g:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c343h
_c343i:
	movq $block_c343d_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c343d
_c343e:
	movq (%rbx),%rax
	jmp *(%rax)
_c343h:
	movl $GHC.Float.acos_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.acos_entry, .-GHC.Float.acos_entry


==================== Asm code ====================
2018-03-16 15:57:31.003618265 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.acos_info
.type GHC.Float.acos_info, @object
GHC.Float.acos_info:
	.quad	GHC.Float.acos_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:31.004244085 UTC

.section .text
.align 8
_c343d:
_c343d:
	movq 95(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c343d, .-_c343d


==================== Asm code ====================
2018-03-16 15:57:31.004809628 UTC

.section .data.rel.ro
.align 8
.align 1
block_c343d_info:
	.quad	_c343d
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.008212717 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.atan_closure
.type GHC.Float.atan_closure, @object
GHC.Float.atan_closure:
	.quad	GHC.Float.atan_info


==================== Asm code ====================
2018-03-16 15:57:31.009060059 UTC

.section .text
.align 8
.globl GHC.Float.atan_entry
.type GHC.Float.atan_entry, @object
GHC.Float.atan_entry:
_c343D:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c343E
_c343F:
	movq $block_c343A_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c343A
_c343B:
	movq (%rbx),%rax
	jmp *(%rax)
_c343E:
	movl $GHC.Float.atan_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.atan_entry, .-GHC.Float.atan_entry


==================== Asm code ====================
2018-03-16 15:57:31.009761308 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.atan_info
.type GHC.Float.atan_info, @object
GHC.Float.atan_info:
	.quad	GHC.Float.atan_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:31.010395939 UTC

.section .text
.align 8
_c343A:
_c343A:
	movq 103(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c343A, .-_c343A


==================== Asm code ====================
2018-03-16 15:57:31.010947043 UTC

.section .data.rel.ro
.align 8
.align 1
block_c343A_info:
	.quad	_c343A
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.013950774 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.sinh_closure
.type GHC.Float.sinh_closure, @object
GHC.Float.sinh_closure:
	.quad	GHC.Float.sinh_info


==================== Asm code ====================
2018-03-16 15:57:31.014804886 UTC

.section .text
.align 8
.globl GHC.Float.sinh_entry
.type GHC.Float.sinh_entry, @object
GHC.Float.sinh_entry:
_c3440:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3441
_c3442:
	movq $block_c343X_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c343X
_c343Y:
	movq (%rbx),%rax
	jmp *(%rax)
_c3441:
	movl $GHC.Float.sinh_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.sinh_entry, .-GHC.Float.sinh_entry


==================== Asm code ====================
2018-03-16 15:57:31.015448914 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.sinh_info
.type GHC.Float.sinh_info, @object
GHC.Float.sinh_info:
	.quad	GHC.Float.sinh_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:31.016091005 UTC

.section .text
.align 8
_c343X:
_c343X:
	movq 111(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c343X, .-_c343X


==================== Asm code ====================
2018-03-16 15:57:31.016652028 UTC

.section .data.rel.ro
.align 8
.align 1
block_c343X_info:
	.quad	_c343X
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.019870343 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.cosh_closure
.type GHC.Float.cosh_closure, @object
GHC.Float.cosh_closure:
	.quad	GHC.Float.cosh_info


==================== Asm code ====================
2018-03-16 15:57:31.020708679 UTC

.section .text
.align 8
.globl GHC.Float.cosh_entry
.type GHC.Float.cosh_entry, @object
GHC.Float.cosh_entry:
_c344n:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c344o
_c344p:
	movq $block_c344k_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c344k
_c344l:
	movq (%rbx),%rax
	jmp *(%rax)
_c344o:
	movl $GHC.Float.cosh_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.cosh_entry, .-GHC.Float.cosh_entry


==================== Asm code ====================
2018-03-16 15:57:31.021395638 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.cosh_info
.type GHC.Float.cosh_info, @object
GHC.Float.cosh_info:
	.quad	GHC.Float.cosh_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:31.022065789 UTC

.section .text
.align 8
_c344k:
_c344k:
	movq 119(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c344k, .-_c344k


==================== Asm code ====================
2018-03-16 15:57:31.022613246 UTC

.section .data.rel.ro
.align 8
.align 1
block_c344k_info:
	.quad	_c344k
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.025586119 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.tanh_closure
.type GHC.Float.tanh_closure, @object
GHC.Float.tanh_closure:
	.quad	GHC.Float.tanh_info


==================== Asm code ====================
2018-03-16 15:57:31.026431047 UTC

.section .text
.align 8
.globl GHC.Float.tanh_entry
.type GHC.Float.tanh_entry, @object
GHC.Float.tanh_entry:
_c344K:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c344L
_c344M:
	movq $block_c344H_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c344H
_c344I:
	movq (%rbx),%rax
	jmp *(%rax)
_c344L:
	movl $GHC.Float.tanh_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.tanh_entry, .-GHC.Float.tanh_entry


==================== Asm code ====================
2018-03-16 15:57:31.02708674 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.tanh_info
.type GHC.Float.tanh_info, @object
GHC.Float.tanh_info:
	.quad	GHC.Float.tanh_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:31.027745609 UTC

.section .text
.align 8
_c344H:
_c344H:
	movq 127(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c344H, .-_c344H


==================== Asm code ====================
2018-03-16 15:57:31.02831236 UTC

.section .data.rel.ro
.align 8
.align 1
block_c344H_info:
	.quad	_c344H
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.032050802 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.asinh_closure
.type GHC.Float.asinh_closure, @object
GHC.Float.asinh_closure:
	.quad	GHC.Float.asinh_info


==================== Asm code ====================
2018-03-16 15:57:31.032878833 UTC

.section .text
.align 8
.globl GHC.Float.asinh_entry
.type GHC.Float.asinh_entry, @object
GHC.Float.asinh_entry:
_c3457:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3458
_c3459:
	movq $block_c3454_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3454
_c3455:
	movq (%rbx),%rax
	jmp *(%rax)
_c3458:
	movl $GHC.Float.asinh_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.asinh_entry, .-GHC.Float.asinh_entry


==================== Asm code ====================
2018-03-16 15:57:31.033604221 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.asinh_info
.type GHC.Float.asinh_info, @object
GHC.Float.asinh_info:
	.quad	GHC.Float.asinh_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:31.034232578 UTC

.section .text
.align 8
_c3454:
_c3454:
	movq 135(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c3454, .-_c3454


==================== Asm code ====================
2018-03-16 15:57:31.0347608 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3454_info:
	.quad	_c3454
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.03822592 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.acosh_closure
.type GHC.Float.acosh_closure, @object
GHC.Float.acosh_closure:
	.quad	GHC.Float.acosh_info


==================== Asm code ====================
2018-03-16 15:57:31.039016517 UTC

.section .text
.align 8
.globl GHC.Float.acosh_entry
.type GHC.Float.acosh_entry, @object
GHC.Float.acosh_entry:
_c345u:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c345v
_c345w:
	movq $block_c345r_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c345r
_c345s:
	movq (%rbx),%rax
	jmp *(%rax)
_c345v:
	movl $GHC.Float.acosh_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.acosh_entry, .-GHC.Float.acosh_entry


==================== Asm code ====================
2018-03-16 15:57:31.039720692 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.acosh_info
.type GHC.Float.acosh_info, @object
GHC.Float.acosh_info:
	.quad	GHC.Float.acosh_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:31.040353857 UTC

.section .text
.align 8
_c345r:
_c345r:
	movq 143(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c345r, .-_c345r


==================== Asm code ====================
2018-03-16 15:57:31.040954523 UTC

.section .data.rel.ro
.align 8
.align 1
block_c345r_info:
	.quad	_c345r
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.043995471 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.atanh_closure
.type GHC.Float.atanh_closure, @object
GHC.Float.atanh_closure:
	.quad	GHC.Float.atanh_info


==================== Asm code ====================
2018-03-16 15:57:31.044878795 UTC

.section .text
.align 8
.globl GHC.Float.atanh_entry
.type GHC.Float.atanh_entry, @object
GHC.Float.atanh_entry:
_c345R:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c345S
_c345T:
	movq $block_c345O_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c345O
_c345P:
	movq (%rbx),%rax
	jmp *(%rax)
_c345S:
	movl $GHC.Float.atanh_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.atanh_entry, .-GHC.Float.atanh_entry


==================== Asm code ====================
2018-03-16 15:57:31.04560779 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.atanh_info
.type GHC.Float.atanh_info, @object
GHC.Float.atanh_info:
	.quad	GHC.Float.atanh_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:31.046255283 UTC

.section .text
.align 8
_c345O:
_c345O:
	movq 151(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c345O, .-_c345O


==================== Asm code ====================
2018-03-16 15:57:31.046824312 UTC

.section .data.rel.ro
.align 8
.align 1
block_c345O_info:
	.quad	_c345O
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.049929853 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.log1p_closure
.type GHC.Float.log1p_closure, @object
GHC.Float.log1p_closure:
	.quad	GHC.Float.log1p_info


==================== Asm code ====================
2018-03-16 15:57:31.050771101 UTC

.section .text
.align 8
.globl GHC.Float.log1p_entry
.type GHC.Float.log1p_entry, @object
GHC.Float.log1p_entry:
_c346e:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c346f
_c346g:
	movq $block_c346b_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c346b
_c346c:
	movq (%rbx),%rax
	jmp *(%rax)
_c346f:
	movl $GHC.Float.log1p_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.log1p_entry, .-GHC.Float.log1p_entry


==================== Asm code ====================
2018-03-16 15:57:31.051429638 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.log1p_info
.type GHC.Float.log1p_info, @object
GHC.Float.log1p_info:
	.quad	GHC.Float.log1p_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:31.052072756 UTC

.section .text
.align 8
_c346b:
_c346b:
	movq 159(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c346b, .-_c346b


==================== Asm code ====================
2018-03-16 15:57:31.052622639 UTC

.section .data.rel.ro
.align 8
.align 1
block_c346b_info:
	.quad	_c346b
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.055641675 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.expm1_closure
.type GHC.Float.expm1_closure, @object
GHC.Float.expm1_closure:
	.quad	GHC.Float.expm1_info


==================== Asm code ====================
2018-03-16 15:57:31.056502056 UTC

.section .text
.align 8
.globl GHC.Float.expm1_entry
.type GHC.Float.expm1_entry, @object
GHC.Float.expm1_entry:
_c346B:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c346C
_c346D:
	movq $block_c346y_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c346y
_c346z:
	movq (%rbx),%rax
	jmp *(%rax)
_c346C:
	movl $GHC.Float.expm1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.expm1_entry, .-GHC.Float.expm1_entry


==================== Asm code ====================
2018-03-16 15:57:31.057147002 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.expm1_info
.type GHC.Float.expm1_info, @object
GHC.Float.expm1_info:
	.quad	GHC.Float.expm1_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:31.057832777 UTC

.section .text
.align 8
_c346y:
_c346y:
	movq 167(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c346y, .-_c346y


==================== Asm code ====================
2018-03-16 15:57:31.058406708 UTC

.section .data.rel.ro
.align 8
.align 1
block_c346y_info:
	.quad	_c346y
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.061488539 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.log1pexp_closure
.type GHC.Float.log1pexp_closure, @object
GHC.Float.log1pexp_closure:
	.quad	GHC.Float.log1pexp_info


==================== Asm code ====================
2018-03-16 15:57:31.06240751 UTC

.section .text
.align 8
.globl GHC.Float.log1pexp_entry
.type GHC.Float.log1pexp_entry, @object
GHC.Float.log1pexp_entry:
_c346Y:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c346Z
_c3470:
	movq $block_c346V_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c346V
_c346W:
	movq (%rbx),%rax
	jmp *(%rax)
_c346Z:
	movl $GHC.Float.log1pexp_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.log1pexp_entry, .-GHC.Float.log1pexp_entry


==================== Asm code ====================
2018-03-16 15:57:31.063126588 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.log1pexp_info
.type GHC.Float.log1pexp_info, @object
GHC.Float.log1pexp_info:
	.quad	GHC.Float.log1pexp_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:31.064407534 UTC

.section .text
.align 8
_c346V:
_c346V:
	movq 175(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c346V, .-_c346V


==================== Asm code ====================
2018-03-16 15:57:31.064982278 UTC

.section .data.rel.ro
.align 8
.align 1
block_c346V_info:
	.quad	_c346V
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.068071335 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.log1mexp_closure
.type GHC.Float.log1mexp_closure, @object
GHC.Float.log1mexp_closure:
	.quad	GHC.Float.log1mexp_info


==================== Asm code ====================
2018-03-16 15:57:31.068959399 UTC

.section .text
.align 8
.globl GHC.Float.log1mexp_entry
.type GHC.Float.log1mexp_entry, @object
GHC.Float.log1mexp_entry:
_c347l:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c347m
_c347n:
	movq $block_c347i_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c347i
_c347j:
	movq (%rbx),%rax
	jmp *(%rax)
_c347m:
	movl $GHC.Float.log1mexp_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.log1mexp_entry, .-GHC.Float.log1mexp_entry


==================== Asm code ====================
2018-03-16 15:57:31.069679716 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.log1mexp_info
.type GHC.Float.log1mexp_info, @object
GHC.Float.log1mexp_info:
	.quad	GHC.Float.log1mexp_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:31.070345801 UTC

.section .text
.align 8
_c347i:
_c347i:
	movq 183(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c347i, .-_c347i


==================== Asm code ====================
2018-03-16 15:57:31.07089647 UTC

.section .data.rel.ro
.align 8
.align 1
block_c347i_info:
	.quad	_c347i
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.074204394 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$p1RealFloat_closure
.type GHC.Float.$p1RealFloat_closure, @object
GHC.Float.$p1RealFloat_closure:
	.quad	GHC.Float.$p1RealFloat_info


==================== Asm code ====================
2018-03-16 15:57:31.07510811 UTC

.section .text
.align 8
.globl GHC.Float.$p1RealFloat_entry
.type GHC.Float.$p1RealFloat_entry, @object
GHC.Float.$p1RealFloat_entry:
_c347I:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c347J
_c347K:
	movq $block_c347F_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c347F
_c347G:
	movq (%rbx),%rax
	jmp *(%rax)
_c347J:
	movl $GHC.Float.$p1RealFloat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$p1RealFloat_entry, .-GHC.Float.$p1RealFloat_entry


==================== Asm code ====================
2018-03-16 15:57:31.075751142 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$p1RealFloat_info
.type GHC.Float.$p1RealFloat_info, @object
GHC.Float.$p1RealFloat_info:
	.quad	GHC.Float.$p1RealFloat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:31.076415619 UTC

.section .text
.align 8
_c347F:
_c347F:
	movq 7(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c347F, .-_c347F


==================== Asm code ====================
2018-03-16 15:57:31.076998798 UTC

.section .data.rel.ro
.align 8
.align 1
block_c347F_info:
	.quad	_c347F
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.080017532 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$p2RealFloat_closure
.type GHC.Float.$p2RealFloat_closure, @object
GHC.Float.$p2RealFloat_closure:
	.quad	GHC.Float.$p2RealFloat_info


==================== Asm code ====================
2018-03-16 15:57:31.080892765 UTC

.section .text
.align 8
.globl GHC.Float.$p2RealFloat_entry
.type GHC.Float.$p2RealFloat_entry, @object
GHC.Float.$p2RealFloat_entry:
_c3487:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3488
_c3489:
	movq $block_c3484_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3484
_c3485:
	movq (%rbx),%rax
	jmp *(%rax)
_c3488:
	movl $GHC.Float.$p2RealFloat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$p2RealFloat_entry, .-GHC.Float.$p2RealFloat_entry


==================== Asm code ====================
2018-03-16 15:57:31.081598591 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$p2RealFloat_info
.type GHC.Float.$p2RealFloat_info, @object
GHC.Float.$p2RealFloat_info:
	.quad	GHC.Float.$p2RealFloat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:31.082241803 UTC

.section .text
.align 8
_c3484:
_c3484:
	movq 15(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3484, .-_c3484


==================== Asm code ====================
2018-03-16 15:57:31.082804723 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3484_info:
	.quad	_c3484
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.085854216 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.floatRadix_closure
.type GHC.Float.floatRadix_closure, @object
GHC.Float.floatRadix_closure:
	.quad	GHC.Float.floatRadix_info


==================== Asm code ====================
2018-03-16 15:57:31.086708242 UTC

.section .text
.align 8
.globl GHC.Float.floatRadix_entry
.type GHC.Float.floatRadix_entry, @object
GHC.Float.floatRadix_entry:
_c348w:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c348x
_c348y:
	movq $block_c348t_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c348t
_c348u:
	movq (%rbx),%rax
	jmp *(%rax)
_c348x:
	movl $GHC.Float.floatRadix_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.floatRadix_entry, .-GHC.Float.floatRadix_entry


==================== Asm code ====================
2018-03-16 15:57:31.087361328 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.floatRadix_info
.type GHC.Float.floatRadix_info, @object
GHC.Float.floatRadix_info:
	.quad	GHC.Float.floatRadix_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:31.088026001 UTC

.section .text
.align 8
_c348t:
_c348t:
	movq 23(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c348t, .-_c348t


==================== Asm code ====================
2018-03-16 15:57:31.088599949 UTC

.section .data.rel.ro
.align 8
.align 1
block_c348t_info:
	.quad	_c348t
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.092200425 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.floatDigits_closure
.type GHC.Float.floatDigits_closure, @object
GHC.Float.floatDigits_closure:
	.quad	GHC.Float.floatDigits_info


==================== Asm code ====================
2018-03-16 15:57:31.093136988 UTC

.section .text
.align 8
.globl GHC.Float.floatDigits_entry
.type GHC.Float.floatDigits_entry, @object
GHC.Float.floatDigits_entry:
_c348T:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c348U
_c348V:
	movq $block_c348Q_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c348Q
_c348R:
	movq (%rbx),%rax
	jmp *(%rax)
_c348U:
	movl $GHC.Float.floatDigits_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.floatDigits_entry, .-GHC.Float.floatDigits_entry


==================== Asm code ====================
2018-03-16 15:57:31.093898981 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.floatDigits_info
.type GHC.Float.floatDigits_info, @object
GHC.Float.floatDigits_info:
	.quad	GHC.Float.floatDigits_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:31.094637473 UTC

.section .text
.align 8
_c348Q:
_c348Q:
	movq 31(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c348Q, .-_c348Q


==================== Asm code ====================
2018-03-16 15:57:31.09527593 UTC

.section .data.rel.ro
.align 8
.align 1
block_c348Q_info:
	.quad	_c348Q
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.098949192 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.floatRange_closure
.type GHC.Float.floatRange_closure, @object
GHC.Float.floatRange_closure:
	.quad	GHC.Float.floatRange_info


==================== Asm code ====================
2018-03-16 15:57:31.099811871 UTC

.section .text
.align 8
.globl GHC.Float.floatRange_entry
.type GHC.Float.floatRange_entry, @object
GHC.Float.floatRange_entry:
_c349g:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c349h
_c349i:
	movq $block_c349d_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c349d
_c349e:
	movq (%rbx),%rax
	jmp *(%rax)
_c349h:
	movl $GHC.Float.floatRange_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.floatRange_entry, .-GHC.Float.floatRange_entry


==================== Asm code ====================
2018-03-16 15:57:31.100417264 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.floatRange_info
.type GHC.Float.floatRange_info, @object
GHC.Float.floatRange_info:
	.quad	GHC.Float.floatRange_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:31.1010829 UTC

.section .text
.align 8
_c349d:
_c349d:
	movq 39(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c349d, .-_c349d


==================== Asm code ====================
2018-03-16 15:57:31.101663319 UTC

.section .data.rel.ro
.align 8
.align 1
block_c349d_info:
	.quad	_c349d
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.104638871 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.decodeFloat_closure
.type GHC.Float.decodeFloat_closure, @object
GHC.Float.decodeFloat_closure:
	.quad	GHC.Float.decodeFloat_info


==================== Asm code ====================
2018-03-16 15:57:31.105616881 UTC

.section .text
.align 8
.globl GHC.Float.decodeFloat_entry
.type GHC.Float.decodeFloat_entry, @object
GHC.Float.decodeFloat_entry:
_c349D:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c349E
_c349F:
	movq $block_c349A_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c349A
_c349B:
	movq (%rbx),%rax
	jmp *(%rax)
_c349E:
	movl $GHC.Float.decodeFloat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.decodeFloat_entry, .-GHC.Float.decodeFloat_entry


==================== Asm code ====================
2018-03-16 15:57:31.106305128 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.decodeFloat_info
.type GHC.Float.decodeFloat_info, @object
GHC.Float.decodeFloat_info:
	.quad	GHC.Float.decodeFloat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:31.106965814 UTC

.section .text
.align 8
_c349A:
_c349A:
	movq 47(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c349A, .-_c349A


==================== Asm code ====================
2018-03-16 15:57:31.107549235 UTC

.section .data.rel.ro
.align 8
.align 1
block_c349A_info:
	.quad	_c349A
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.112028246 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.encodeFloat_closure
.type GHC.Float.encodeFloat_closure, @object
GHC.Float.encodeFloat_closure:
	.quad	GHC.Float.encodeFloat_info


==================== Asm code ====================
2018-03-16 15:57:31.112885468 UTC

.section .text
.align 8
.globl GHC.Float.encodeFloat_entry
.type GHC.Float.encodeFloat_entry, @object
GHC.Float.encodeFloat_entry:
_c34a0:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c34a1
_c34a2:
	movq $block_c349X_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c349X
_c349Y:
	movq (%rbx),%rax
	jmp *(%rax)
_c34a1:
	movl $GHC.Float.encodeFloat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.encodeFloat_entry, .-GHC.Float.encodeFloat_entry


==================== Asm code ====================
2018-03-16 15:57:31.113608698 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.encodeFloat_info
.type GHC.Float.encodeFloat_info, @object
GHC.Float.encodeFloat_info:
	.quad	GHC.Float.encodeFloat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:31.11428007 UTC

.section .text
.align 8
_c349X:
_c349X:
	movq 55(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c349X, .-_c349X


==================== Asm code ====================
2018-03-16 15:57:31.114843523 UTC

.section .data.rel.ro
.align 8
.align 1
block_c349X_info:
	.quad	_c349X
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.118957384 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.exponent_closure
.type GHC.Float.exponent_closure, @object
GHC.Float.exponent_closure:
	.quad	GHC.Float.exponent_info


==================== Asm code ====================
2018-03-16 15:57:31.11989235 UTC

.section .text
.align 8
.globl GHC.Float.exponent_entry
.type GHC.Float.exponent_entry, @object
GHC.Float.exponent_entry:
_c34an:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c34ao
_c34ap:
	movq $block_c34ak_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c34ak
_c34al:
	movq (%rbx),%rax
	jmp *(%rax)
_c34ao:
	movl $GHC.Float.exponent_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.exponent_entry, .-GHC.Float.exponent_entry


==================== Asm code ====================
2018-03-16 15:57:31.120530146 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.exponent_info
.type GHC.Float.exponent_info, @object
GHC.Float.exponent_info:
	.quad	GHC.Float.exponent_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:31.121218689 UTC

.section .text
.align 8
_c34ak:
_c34ak:
	movq 63(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c34ak, .-_c34ak


==================== Asm code ====================
2018-03-16 15:57:31.121903413 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34ak_info:
	.quad	_c34ak
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.124942455 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.significand_closure
.type GHC.Float.significand_closure, @object
GHC.Float.significand_closure:
	.quad	GHC.Float.significand_info


==================== Asm code ====================
2018-03-16 15:57:31.125901377 UTC

.section .text
.align 8
.globl GHC.Float.significand_entry
.type GHC.Float.significand_entry, @object
GHC.Float.significand_entry:
_c34aK:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c34aL
_c34aM:
	movq $block_c34aH_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c34aH
_c34aI:
	movq (%rbx),%rax
	jmp *(%rax)
_c34aL:
	movl $GHC.Float.significand_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.significand_entry, .-GHC.Float.significand_entry


==================== Asm code ====================
2018-03-16 15:57:31.126622865 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.significand_info
.type GHC.Float.significand_info, @object
GHC.Float.significand_info:
	.quad	GHC.Float.significand_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:31.127317072 UTC

.section .text
.align 8
_c34aH:
_c34aH:
	movq 71(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c34aH, .-_c34aH


==================== Asm code ====================
2018-03-16 15:57:31.127926595 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34aH_info:
	.quad	_c34aH
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.131071543 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.scaleFloat_closure
.type GHC.Float.scaleFloat_closure, @object
GHC.Float.scaleFloat_closure:
	.quad	GHC.Float.scaleFloat_info


==================== Asm code ====================
2018-03-16 15:57:31.132626421 UTC

.section .text
.align 8
.globl GHC.Float.scaleFloat_entry
.type GHC.Float.scaleFloat_entry, @object
GHC.Float.scaleFloat_entry:
_c34b7:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c34b8
_c34b9:
	movq $block_c34b4_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c34b4
_c34b5:
	movq (%rbx),%rax
	jmp *(%rax)
_c34b8:
	movl $GHC.Float.scaleFloat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.scaleFloat_entry, .-GHC.Float.scaleFloat_entry


==================== Asm code ====================
2018-03-16 15:57:31.133871526 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.scaleFloat_info
.type GHC.Float.scaleFloat_info, @object
GHC.Float.scaleFloat_info:
	.quad	GHC.Float.scaleFloat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:31.134652482 UTC

.section .text
.align 8
_c34b4:
_c34b4:
	movq 79(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c34b4, .-_c34b4


==================== Asm code ====================
2018-03-16 15:57:31.135209619 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34b4_info:
	.quad	_c34b4
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.138396347 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.isNaN_closure
.type GHC.Float.isNaN_closure, @object
GHC.Float.isNaN_closure:
	.quad	GHC.Float.isNaN_info


==================== Asm code ====================
2018-03-16 15:57:31.139244964 UTC

.section .text
.align 8
.globl GHC.Float.isNaN_entry
.type GHC.Float.isNaN_entry, @object
GHC.Float.isNaN_entry:
_c34bu:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c34bv
_c34bw:
	movq $block_c34br_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c34br
_c34bs:
	movq (%rbx),%rax
	jmp *(%rax)
_c34bv:
	movl $GHC.Float.isNaN_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.isNaN_entry, .-GHC.Float.isNaN_entry


==================== Asm code ====================
2018-03-16 15:57:31.139858291 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.isNaN_info
.type GHC.Float.isNaN_info, @object
GHC.Float.isNaN_info:
	.quad	GHC.Float.isNaN_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:31.140527599 UTC

.section .text
.align 8
_c34br:
_c34br:
	movq 87(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c34br, .-_c34br


==================== Asm code ====================
2018-03-16 15:57:31.141124128 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34br_info:
	.quad	_c34br
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.144118826 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.isInfinite_closure
.type GHC.Float.isInfinite_closure, @object
GHC.Float.isInfinite_closure:
	.quad	GHC.Float.isInfinite_info


==================== Asm code ====================
2018-03-16 15:57:31.144941839 UTC

.section .text
.align 8
.globl GHC.Float.isInfinite_entry
.type GHC.Float.isInfinite_entry, @object
GHC.Float.isInfinite_entry:
_c34bR:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c34bS
_c34bT:
	movq $block_c34bO_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c34bO
_c34bP:
	movq (%rbx),%rax
	jmp *(%rax)
_c34bS:
	movl $GHC.Float.isInfinite_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.isInfinite_entry, .-GHC.Float.isInfinite_entry


==================== Asm code ====================
2018-03-16 15:57:31.145648472 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.isInfinite_info
.type GHC.Float.isInfinite_info, @object
GHC.Float.isInfinite_info:
	.quad	GHC.Float.isInfinite_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:31.146286541 UTC

.section .text
.align 8
_c34bO:
_c34bO:
	movq 95(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c34bO, .-_c34bO


==================== Asm code ====================
2018-03-16 15:57:31.146874125 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34bO_info:
	.quad	_c34bO
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.150275671 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.isDenormalized_closure
.type GHC.Float.isDenormalized_closure, @object
GHC.Float.isDenormalized_closure:
	.quad	GHC.Float.isDenormalized_info


==================== Asm code ====================
2018-03-16 15:57:31.151193716 UTC

.section .text
.align 8
.globl GHC.Float.isDenormalized_entry
.type GHC.Float.isDenormalized_entry, @object
GHC.Float.isDenormalized_entry:
_c34ce:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c34cf
_c34cg:
	movq $block_c34cb_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c34cb
_c34cc:
	movq (%rbx),%rax
	jmp *(%rax)
_c34cf:
	movl $GHC.Float.isDenormalized_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.isDenormalized_entry, .-GHC.Float.isDenormalized_entry


==================== Asm code ====================
2018-03-16 15:57:31.151837548 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.isDenormalized_info
.type GHC.Float.isDenormalized_info, @object
GHC.Float.isDenormalized_info:
	.quad	GHC.Float.isDenormalized_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:31.152480013 UTC

.section .text
.align 8
_c34cb:
_c34cb:
	movq 103(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c34cb, .-_c34cb


==================== Asm code ====================
2018-03-16 15:57:31.153120882 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34cb_info:
	.quad	_c34cb
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.156126309 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.isNegativeZero_closure
.type GHC.Float.isNegativeZero_closure, @object
GHC.Float.isNegativeZero_closure:
	.quad	GHC.Float.isNegativeZero_info


==================== Asm code ====================
2018-03-16 15:57:31.156963439 UTC

.section .text
.align 8
.globl GHC.Float.isNegativeZero_entry
.type GHC.Float.isNegativeZero_entry, @object
GHC.Float.isNegativeZero_entry:
_c34cB:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c34cC
_c34cD:
	movq $block_c34cy_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c34cy
_c34cz:
	movq (%rbx),%rax
	jmp *(%rax)
_c34cC:
	movl $GHC.Float.isNegativeZero_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.isNegativeZero_entry, .-GHC.Float.isNegativeZero_entry


==================== Asm code ====================
2018-03-16 15:57:31.157678926 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.isNegativeZero_info
.type GHC.Float.isNegativeZero_info, @object
GHC.Float.isNegativeZero_info:
	.quad	GHC.Float.isNegativeZero_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:31.158324351 UTC

.section .text
.align 8
_c34cy:
_c34cy:
	movq 111(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c34cy, .-_c34cy


==================== Asm code ====================
2018-03-16 15:57:31.158915894 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34cy_info:
	.quad	_c34cy
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.162236353 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.isIEEE_closure
.type GHC.Float.isIEEE_closure, @object
GHC.Float.isIEEE_closure:
	.quad	GHC.Float.isIEEE_info


==================== Asm code ====================
2018-03-16 15:57:31.163118265 UTC

.section .text
.align 8
.globl GHC.Float.isIEEE_entry
.type GHC.Float.isIEEE_entry, @object
GHC.Float.isIEEE_entry:
_c34cY:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c34cZ
_c34d0:
	movq $block_c34cV_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c34cV
_c34cW:
	movq (%rbx),%rax
	jmp *(%rax)
_c34cZ:
	movl $GHC.Float.isIEEE_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.isIEEE_entry, .-GHC.Float.isIEEE_entry


==================== Asm code ====================
2018-03-16 15:57:31.163841958 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.isIEEE_info
.type GHC.Float.isIEEE_info, @object
GHC.Float.isIEEE_info:
	.quad	GHC.Float.isIEEE_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:31.164557602 UTC

.section .text
.align 8
_c34cV:
_c34cV:
	movq 119(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c34cV, .-_c34cV


==================== Asm code ====================
2018-03-16 15:57:31.16575344 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34cV_info:
	.quad	_c34cV
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.168749013 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.atan2_closure
.type GHC.Float.atan2_closure, @object
GHC.Float.atan2_closure:
	.quad	GHC.Float.atan2_info


==================== Asm code ====================
2018-03-16 15:57:31.169658713 UTC

.section .text
.align 8
.globl GHC.Float.atan2_entry
.type GHC.Float.atan2_entry, @object
GHC.Float.atan2_entry:
_c34dl:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c34dm
_c34dn:
	movq $block_c34di_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c34di
_c34dj:
	movq (%rbx),%rax
	jmp *(%rax)
_c34dm:
	movl $GHC.Float.atan2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.atan2_entry, .-GHC.Float.atan2_entry


==================== Asm code ====================
2018-03-16 15:57:31.170323813 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.atan2_info
.type GHC.Float.atan2_info, @object
GHC.Float.atan2_info:
	.quad	GHC.Float.atan2_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:31.171012255 UTC

.section .text
.align 8
_c34di:
_c34di:
	movq 127(%rbx),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c34di, .-_c34di


==================== Asm code ====================
2018-03-16 15:57:31.171602095 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34di_info:
	.quad	_c34di
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.175019877 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$seven_closure
.type GHC.Float.$seven_closure, @object
GHC.Float.$seven_closure:
	.quad	GHC.Float.$seven_info


==================== Asm code ====================
2018-03-16 15:57:31.175924076 UTC

.section .text
.align 8
.globl GHC.Float.$seven_entry
.type GHC.Float.$seven_entry, @object
GHC.Float.$seven_entry:
_c34dI:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c34dJ
_c34dK:
	movq $block_c34dF_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c34dF
_c34dG:
	movq (%rbx),%rax
	jmp *(%rax)
_c34dJ:
	movl $GHC.Float.$seven_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$seven_entry, .-GHC.Float.$seven_entry


==================== Asm code ====================
2018-03-16 15:57:31.176580766 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$seven_info
.type GHC.Float.$seven_info, @object
GHC.Float.$seven_info:
	.quad	GHC.Float.$seven_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:31.177483427 UTC

.section .text
.align 8
_c34dF:
_c34dF:
	movq 7(%rbx),%rax
	movq %rax,%rbx
	shrq $63,%rbx
	movq %rax,%rcx
	addq %rbx,%rcx
	andq $-2,%rcx
	subq %rcx,%rax
	testq %rax,%rax
	je _c34dZ
_c34dT:
	movl $GHC.Types.False_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c34dZ:
	movl $GHC.Types.True_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c34dF, .-_c34dF


==================== Asm code ====================
2018-03-16 15:57:31.1784859 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34dF_info:
	.quad	_c34dF
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.18290114 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fNumFloat_$cfromInteger_closure
.type GHC.Float.$fNumFloat_$cfromInteger_closure, @object
GHC.Float.$fNumFloat_$cfromInteger_closure:
	.quad	GHC.Float.$fNumFloat_$cfromInteger_info


==================== Asm code ====================
2018-03-16 15:57:31.183742791 UTC

.section .text
.align 8
.globl GHC.Float.$fNumFloat_$cfromInteger_entry
.type GHC.Float.$fNumFloat_$cfromInteger_entry, @object
GHC.Float.$fNumFloat_$cfromInteger_entry:
_c34er:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c34ev
_c34ew:
	movq $block_c34ep_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.floatFromInteger_entry
_c34ev:
	movl $GHC.Float.$fNumFloat_$cfromInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fNumFloat_$cfromInteger_entry, .-GHC.Float.$fNumFloat_$cfromInteger_entry


==================== Asm code ====================
2018-03-16 15:57:31.184404133 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fNumFloat_$cfromInteger_info
.type GHC.Float.$fNumFloat_$cfromInteger_info, @object
GHC.Float.$fNumFloat_$cfromInteger_info:
	.quad	GHC.Float.$fNumFloat_$cfromInteger_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:31.18515469 UTC

.section .text
.align 8
_c34ep:
_c34ep:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c34ez
_c34ey:
	movq $GHC.Types.F#_con_info,-8(%r12)
	movss %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c34ez:
	movq $16,904(%r13)
	jmp stg_gc_f1
	.size _c34ep, .-_c34ep


==================== Asm code ====================
2018-03-16 15:57:31.185900945 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34ep_info:
	.quad	_c34ep
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.18913054 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fNumDouble_$cfromInteger_closure
.type GHC.Float.$fNumDouble_$cfromInteger_closure, @object
GHC.Float.$fNumDouble_$cfromInteger_closure:
	.quad	GHC.Float.$fNumDouble_$cfromInteger_info


==================== Asm code ====================
2018-03-16 15:57:31.190026477 UTC

.section .text
.align 8
.globl GHC.Float.$fNumDouble_$cfromInteger_entry
.type GHC.Float.$fNumDouble_$cfromInteger_entry, @object
GHC.Float.$fNumDouble_$cfromInteger_entry:
_c34eP:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c34eT
_c34eU:
	movq $block_c34eN_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.doubleFromInteger_entry
_c34eT:
	movl $GHC.Float.$fNumDouble_$cfromInteger_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fNumDouble_$cfromInteger_entry, .-GHC.Float.$fNumDouble_$cfromInteger_entry


==================== Asm code ====================
2018-03-16 15:57:31.190812388 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fNumDouble_$cfromInteger_info
.type GHC.Float.$fNumDouble_$cfromInteger_info, @object
GHC.Float.$fNumDouble_$cfromInteger_info:
	.quad	GHC.Float.$fNumDouble_$cfromInteger_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:31.19192608 UTC

.section .text
.align 8
_c34eN:
_c34eN:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c34eX
_c34eW:
	movq $GHC.Types.D#_con_info,-8(%r12)
	movsd %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c34eX:
	movq $16,904(%r13)
	jmp stg_gc_d1
	.size _c34eN, .-_c34eN


==================== Asm code ====================
2018-03-16 15:57:31.192770702 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34eN_info:
	.quad	_c34eN
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.198832418 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.plusFloat_closure
.type GHC.Float.plusFloat_closure, @object
GHC.Float.plusFloat_closure:
	.quad	GHC.Float.plusFloat_info


==================== Asm code ====================
2018-03-16 15:57:31.20009601 UTC

.section .text
.align 8
.globl GHC.Float.plusFloat_entry
.type GHC.Float.plusFloat_entry, @object
GHC.Float.plusFloat_entry:
_c34fe:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c34fq
_c34fr:
	movq $block_c34fb_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c34fb
_c34fc:
	movq (%rbx),%rax
	jmp *(%rax)
_c34fq:
	movl $GHC.Float.plusFloat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.plusFloat_entry, .-GHC.Float.plusFloat_entry


==================== Asm code ====================
2018-03-16 15:57:31.201133999 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.plusFloat_info
.type GHC.Float.plusFloat_info, @object
GHC.Float.plusFloat_info:
	.quad	GHC.Float.plusFloat_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:31.20251292 UTC

.section .text
.align 8
_c34fb:
_c34fb:
	movq $block_c34fh_info,(%rbp)
	movss 7(%rbx),%xmm0
	movq 8(%rbp),%rbx
	movss %xmm0,8(%rbp)
	testb $7,%bl
	jne _c34fh
_c34fi:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c34fb, .-_c34fb


==================== Asm code ====================
2018-03-16 15:57:31.203433892 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34fb_info:
	.quad	_c34fb
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.210059265 UTC

.section .text
.align 8
_c34fh:
_c34fh:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c34fv
_c34fu:
	leaq 7(%rbx),%rax
	movss 8(%rbp),%xmm0
	addss (%rax),%xmm0
	movq $GHC.Types.F#_con_info,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c34fv:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c34fh, .-_c34fh


==================== Asm code ====================
2018-03-16 15:57:31.211869391 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34fh_info:
	.quad	_c34fh
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.219505388 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.minusFloat_closure
.type GHC.Float.minusFloat_closure, @object
GHC.Float.minusFloat_closure:
	.quad	GHC.Float.minusFloat_info


==================== Asm code ====================
2018-03-16 15:57:31.221374662 UTC

.section .text
.align 8
.globl GHC.Float.minusFloat_entry
.type GHC.Float.minusFloat_entry, @object
GHC.Float.minusFloat_entry:
_c34fV:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c34g7
_c34g8:
	movq $block_c34fS_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c34fS
_c34fT:
	movq (%rbx),%rax
	jmp *(%rax)
_c34g7:
	movl $GHC.Float.minusFloat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.minusFloat_entry, .-GHC.Float.minusFloat_entry


==================== Asm code ====================
2018-03-16 15:57:31.222848655 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.minusFloat_info
.type GHC.Float.minusFloat_info, @object
GHC.Float.minusFloat_info:
	.quad	GHC.Float.minusFloat_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:31.224432468 UTC

.section .text
.align 8
_c34fS:
_c34fS:
	movq $block_c34fY_info,(%rbp)
	movss 7(%rbx),%xmm0
	movq 8(%rbp),%rbx
	movss %xmm0,8(%rbp)
	testb $7,%bl
	jne _c34fY
_c34fZ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c34fS, .-_c34fS


==================== Asm code ====================
2018-03-16 15:57:31.225576841 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34fS_info:
	.quad	_c34fS
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.226606922 UTC

.section .text
.align 8
_c34fY:
_c34fY:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c34gc
_c34gb:
	leaq 7(%rbx),%rax
	movss 8(%rbp),%xmm0
	subss (%rax),%xmm0
	movq $GHC.Types.F#_con_info,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c34gc:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c34fY, .-_c34fY


==================== Asm code ====================
2018-03-16 15:57:31.22758497 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34fY_info:
	.quad	_c34fY
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.23526961 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.timesFloat_closure
.type GHC.Float.timesFloat_closure, @object
GHC.Float.timesFloat_closure:
	.quad	GHC.Float.timesFloat_info


==================== Asm code ====================
2018-03-16 15:57:31.236926032 UTC

.section .text
.align 8
.globl GHC.Float.timesFloat_entry
.type GHC.Float.timesFloat_entry, @object
GHC.Float.timesFloat_entry:
_c34gC:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c34gO
_c34gP:
	movq $block_c34gz_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c34gz
_c34gA:
	movq (%rbx),%rax
	jmp *(%rax)
_c34gO:
	movl $GHC.Float.timesFloat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.timesFloat_entry, .-GHC.Float.timesFloat_entry


==================== Asm code ====================
2018-03-16 15:57:31.238416304 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.timesFloat_info
.type GHC.Float.timesFloat_info, @object
GHC.Float.timesFloat_info:
	.quad	GHC.Float.timesFloat_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:31.239896629 UTC

.section .text
.align 8
_c34gz:
_c34gz:
	movq $block_c34gF_info,(%rbp)
	movss 7(%rbx),%xmm0
	movq 8(%rbp),%rbx
	movss %xmm0,8(%rbp)
	testb $7,%bl
	jne _c34gF
_c34gG:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c34gz, .-_c34gz


==================== Asm code ====================
2018-03-16 15:57:31.241214596 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34gz_info:
	.quad	_c34gz
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.242880206 UTC

.section .text
.align 8
_c34gF:
_c34gF:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c34gT
_c34gS:
	leaq 7(%rbx),%rax
	movss 8(%rbp),%xmm0
	mulss (%rax),%xmm0
	movq $GHC.Types.F#_con_info,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c34gT:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c34gF, .-_c34gF


==================== Asm code ====================
2018-03-16 15:57:31.244300741 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34gF_info:
	.quad	_c34gF
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.250239596 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.divideFloat_closure
.type GHC.Float.divideFloat_closure, @object
GHC.Float.divideFloat_closure:
	.quad	GHC.Float.divideFloat_info


==================== Asm code ====================
2018-03-16 15:57:31.251375629 UTC

.section .text
.align 8
.globl GHC.Float.divideFloat_entry
.type GHC.Float.divideFloat_entry, @object
GHC.Float.divideFloat_entry:
_c34hj:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c34hv
_c34hw:
	movq $block_c34hg_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c34hg
_c34hh:
	movq (%rbx),%rax
	jmp *(%rax)
_c34hv:
	movl $GHC.Float.divideFloat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.divideFloat_entry, .-GHC.Float.divideFloat_entry


==================== Asm code ====================
2018-03-16 15:57:31.25230706 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.divideFloat_info
.type GHC.Float.divideFloat_info, @object
GHC.Float.divideFloat_info:
	.quad	GHC.Float.divideFloat_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:31.253402995 UTC

.section .text
.align 8
_c34hg:
_c34hg:
	movq $block_c34hm_info,(%rbp)
	movss 7(%rbx),%xmm0
	movq 8(%rbp),%rbx
	movss %xmm0,8(%rbp)
	testb $7,%bl
	jne _c34hm
_c34hn:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c34hg, .-_c34hg


==================== Asm code ====================
2018-03-16 15:57:31.254334902 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34hg_info:
	.quad	_c34hg
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.255398018 UTC

.section .text
.align 8
_c34hm:
_c34hm:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c34hA
_c34hz:
	leaq 7(%rbx),%rax
	movss 8(%rbp),%xmm0
	divss (%rax),%xmm0
	movq $GHC.Types.F#_con_info,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c34hA:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c34hm, .-_c34hm


==================== Asm code ====================
2018-03-16 15:57:31.256405379 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34hm_info:
	.quad	_c34hm
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.261472051 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.negateFloat_closure
.type GHC.Float.negateFloat_closure, @object
GHC.Float.negateFloat_closure:
	.quad	GHC.Float.negateFloat_info


==================== Asm code ====================
2018-03-16 15:57:31.262820419 UTC

.section .text
.align 8
.globl GHC.Float.negateFloat_entry
.type GHC.Float.negateFloat_entry, @object
GHC.Float.negateFloat_entry:
_c34i0:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c34i7
_c34i8:
	movq $block_c34hX_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c34hX
_c34hY:
	movq (%rbx),%rax
	jmp *(%rax)
_c34i7:
	movl $GHC.Float.negateFloat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.negateFloat_entry, .-GHC.Float.negateFloat_entry


==================== Asm code ====================
2018-03-16 15:57:31.263909001 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.negateFloat_info
.type GHC.Float.negateFloat_info, @object
GHC.Float.negateFloat_info:
	.quad	GHC.Float.negateFloat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:31.265801172 UTC

.section .text
.align 8
_c34hX:
_c34hX:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c34ib
_c34ia:
	movss 7(%rbx),%xmm0
	movss _n34ik(%rip),%xmm1
	xorps %xmm1,%xmm0
	movq $GHC.Types.F#_con_info,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c34ib:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c34hX, .-_c34hX
.section .rodata
.align 8
.align 4
_n34ik:
	.long	-2147483648


==================== Asm code ====================
2018-03-16 15:57:31.266543198 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34hX_info:
	.quad	_c34hX
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.268300516 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fNumFloat1_closure
.type GHC.Float.$fNumFloat1_closure, @object
GHC.Float.$fNumFloat1_closure:
	.quad	GHC.Types.F#_con_info
	.byte	0
	.byte	0
	.byte	128
	.byte	63
	.long	0


==================== Asm code ====================
2018-03-16 15:57:31.270113174 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fNumFloat2_closure
.type GHC.Float.$fNumFloat2_closure, @object
GHC.Float.$fNumFloat2_closure:
	.quad	GHC.Types.F#_con_info
	.byte	0
	.byte	0
	.byte	128
	.byte	191
	.long	0


==================== Asm code ====================
2018-03-16 15:57:31.273719724 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fNumFloat_$csignum_closure
.type GHC.Float.$fNumFloat_$csignum_closure, @object
GHC.Float.$fNumFloat_$csignum_closure:
	.quad	GHC.Float.$fNumFloat_$csignum_info


==================== Asm code ====================
2018-03-16 15:57:31.274607723 UTC

.section .text
.align 8
.globl GHC.Float.$fNumFloat_$csignum_entry
.type GHC.Float.$fNumFloat_$csignum_entry, @object
GHC.Float.$fNumFloat_$csignum_entry:
_c34iy:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c34iz
_c34iA:
	movq $block_c34iv_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c34iv
_c34iw:
	movq (%rbx),%rax
	jmp *(%rax)
_c34iz:
	movl $GHC.Float.$fNumFloat_$csignum_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fNumFloat_$csignum_entry, .-GHC.Float.$fNumFloat_$csignum_entry


==================== Asm code ====================
2018-03-16 15:57:31.275263608 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fNumFloat_$csignum_info
.type GHC.Float.$fNumFloat_$csignum_info, @object
GHC.Float.$fNumFloat_$csignum_info:
	.quad	GHC.Float.$fNumFloat_$csignum_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:31.276118984 UTC

.section .text
.align 8
_c34iv:
_c34iv:
	movss 7(%rbx),%xmm0
	xorps %xmm1,%xmm1
	ucomiss %xmm1,%xmm0
	ja _c34iO
_c34iN:
	xorps %xmm1,%xmm1
	ucomiss %xmm1,%xmm0
	jp _c34iK
	jb _c34iL
_c34iK:
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c34iO:
	movl $GHC.Float.$fNumFloat1_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c34iL:
	movl $GHC.Float.$fNumFloat2_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c34iv, .-_c34iv


==================== Asm code ====================
2018-03-16 15:57:31.276825789 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34iv_info:
	.quad	_c34iv
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.278696308 UTC

.section .data
.align 8
.align 1
sat_s2UFV_closure:
	.quad	GHC.Types.I#_con_info
	.quad	1


==================== Asm code ====================
2018-03-16 15:57:31.280486517 UTC

.section .data
.align 8
.align 1
sat_s2UFW_closure:
	.quad	:_con_info
	.quad	sat_s2UFV_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:31.283491367 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealDouble1_closure
.type GHC.Float.$fRealDouble1_closure, @object
GHC.Float.$fRealDouble1_closure:
	.quad	GHC.Float.$fRealDouble1_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:31.284491288 UTC

.section .text
.align 8
.globl GHC.Float.$fRealDouble1_entry
.type GHC.Float.$fRealDouble1_entry, @object
GHC.Float.$fRealDouble1_entry:
_c34jf:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c34jg
_c34jh:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c34je
_c34jd:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $sat_s2UFW_closure+2,%esi
	movl $GHC.Types.True_closure+2,%r14d
	addq $-16,%rbp
	jmp GHC.Integer.Type.mkInteger_entry
_c34jg:
	jmp *-16(%r13)
_c34je:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Float.$fRealDouble1_entry, .-GHC.Float.$fRealDouble1_entry


==================== Asm code ====================
2018-03-16 15:57:31.285208967 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealDouble1_info
.type GHC.Float.$fRealDouble1_info, @object
GHC.Float.$fRealDouble1_info:
	.quad	GHC.Float.$fRealDouble1_entry
	.quad	0
	.quad	4294967317
	.quad	S2VLN_srt


==================== Asm code ====================
2018-03-16 15:57:31.288871581 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.fabsFloat_closure
.type GHC.Float.fabsFloat_closure, @object
GHC.Float.fabsFloat_closure:
	.quad	GHC.Float.fabsFloat_info


==================== Asm code ====================
2018-03-16 15:57:31.28981058 UTC

.section .text
.align 8
.globl GHC.Float.fabsFloat_entry
.type GHC.Float.fabsFloat_entry, @object
GHC.Float.fabsFloat_entry:
_c34jw:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c34jD
_c34jE:
	movq $block_c34jt_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c34jt
_c34ju:
	movq (%rbx),%rax
	jmp *(%rax)
_c34jD:
	movl $GHC.Float.fabsFloat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.fabsFloat_entry, .-GHC.Float.fabsFloat_entry


==================== Asm code ====================
2018-03-16 15:57:31.290489965 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.fabsFloat_info
.type GHC.Float.fabsFloat_info, @object
GHC.Float.fabsFloat_info:
	.quad	GHC.Float.fabsFloat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:31.291291334 UTC

.section .text
.align 8
_c34jt:
_c34jt:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c34jH
_c34jG:
	movss 7(%rbx),%xmm0
	movss _n34jQ(%rip),%xmm1
	andps %xmm1,%xmm0
	movq $GHC.Types.F#_con_info,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c34jH:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c34jt, .-_c34jt
.section .rodata
.align 8
.align 4
_n34jQ:
	.long	2147483647


==================== Asm code ====================
2018-03-16 15:57:31.291941639 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34jt_info:
	.quad	_c34jt
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.29405049 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fNumFloat_closure
.type GHC.Float.$fNumFloat_closure, @object
GHC.Float.$fNumFloat_closure:
	.quad	GHC.Num.C:Num_con_info
	.quad	GHC.Float.plusFloat_closure+2
	.quad	GHC.Float.minusFloat_closure+2
	.quad	GHC.Float.timesFloat_closure+2
	.quad	GHC.Float.negateFloat_closure+1
	.quad	GHC.Float.fabsFloat_closure+1
	.quad	GHC.Float.$fNumFloat_$csignum_closure+1
	.quad	GHC.Float.$fNumFloat_$cfromInteger_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:31.299057902 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.plusDouble_closure
.type GHC.Float.plusDouble_closure, @object
GHC.Float.plusDouble_closure:
	.quad	GHC.Float.plusDouble_info


==================== Asm code ====================
2018-03-16 15:57:31.300215361 UTC

.section .text
.align 8
.globl GHC.Float.plusDouble_entry
.type GHC.Float.plusDouble_entry, @object
GHC.Float.plusDouble_entry:
_c34k3:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c34kf
_c34kg:
	movq $block_c34k0_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c34k0
_c34k1:
	movq (%rbx),%rax
	jmp *(%rax)
_c34kf:
	movl $GHC.Float.plusDouble_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.plusDouble_entry, .-GHC.Float.plusDouble_entry


==================== Asm code ====================
2018-03-16 15:57:31.301030011 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.plusDouble_info
.type GHC.Float.plusDouble_info, @object
GHC.Float.plusDouble_info:
	.quad	GHC.Float.plusDouble_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:31.301978801 UTC

.section .text
.align 8
_c34k0:
_c34k0:
	movq $block_c34k6_info,(%rbp)
	movsd 7(%rbx),%xmm0
	movq 8(%rbp),%rbx
	movsd %xmm0,8(%rbp)
	testb $7,%bl
	jne _c34k6
_c34k7:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c34k0, .-_c34k0


==================== Asm code ====================
2018-03-16 15:57:31.302632953 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34k0_info:
	.quad	_c34k0
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.303452033 UTC

.section .text
.align 8
_c34k6:
_c34k6:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c34kk
_c34kj:
	leaq 7(%rbx),%rax
	movsd 8(%rbp),%xmm0
	addsd (%rax),%xmm0
	movq $GHC.Types.D#_con_info,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c34kk:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c34k6, .-_c34k6


==================== Asm code ====================
2018-03-16 15:57:31.304167714 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34k6_info:
	.quad	_c34k6
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.308963166 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.minusDouble_closure
.type GHC.Float.minusDouble_closure, @object
GHC.Float.minusDouble_closure:
	.quad	GHC.Float.minusDouble_info


==================== Asm code ====================
2018-03-16 15:57:31.310712299 UTC

.section .text
.align 8
.globl GHC.Float.minusDouble_entry
.type GHC.Float.minusDouble_entry, @object
GHC.Float.minusDouble_entry:
_c34kK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c34kW
_c34kX:
	movq $block_c34kH_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c34kH
_c34kI:
	movq (%rbx),%rax
	jmp *(%rax)
_c34kW:
	movl $GHC.Float.minusDouble_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.minusDouble_entry, .-GHC.Float.minusDouble_entry


==================== Asm code ====================
2018-03-16 15:57:31.311397768 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.minusDouble_info
.type GHC.Float.minusDouble_info, @object
GHC.Float.minusDouble_info:
	.quad	GHC.Float.minusDouble_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:31.312273697 UTC

.section .text
.align 8
_c34kH:
_c34kH:
	movq $block_c34kN_info,(%rbp)
	movsd 7(%rbx),%xmm0
	movq 8(%rbp),%rbx
	movsd %xmm0,8(%rbp)
	testb $7,%bl
	jne _c34kN
_c34kO:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c34kH, .-_c34kH


==================== Asm code ====================
2018-03-16 15:57:31.313116774 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34kH_info:
	.quad	_c34kH
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.314223677 UTC

.section .text
.align 8
_c34kN:
_c34kN:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c34l1
_c34l0:
	leaq 7(%rbx),%rax
	movsd 8(%rbp),%xmm0
	subsd (%rax),%xmm0
	movq $GHC.Types.D#_con_info,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c34l1:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c34kN, .-_c34kN


==================== Asm code ====================
2018-03-16 15:57:31.314893229 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34kN_info:
	.quad	_c34kN
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.318835748 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.timesDouble_closure
.type GHC.Float.timesDouble_closure, @object
GHC.Float.timesDouble_closure:
	.quad	GHC.Float.timesDouble_info


==================== Asm code ====================
2018-03-16 15:57:31.319697282 UTC

.section .text
.align 8
.globl GHC.Float.timesDouble_entry
.type GHC.Float.timesDouble_entry, @object
GHC.Float.timesDouble_entry:
_c34lr:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c34lD
_c34lE:
	movq $block_c34lo_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c34lo
_c34lp:
	movq (%rbx),%rax
	jmp *(%rax)
_c34lD:
	movl $GHC.Float.timesDouble_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.timesDouble_entry, .-GHC.Float.timesDouble_entry


==================== Asm code ====================
2018-03-16 15:57:31.32037272 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.timesDouble_info
.type GHC.Float.timesDouble_info, @object
GHC.Float.timesDouble_info:
	.quad	GHC.Float.timesDouble_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:31.321106607 UTC

.section .text
.align 8
_c34lo:
_c34lo:
	movq $block_c34lu_info,(%rbp)
	movsd 7(%rbx),%xmm0
	movq 8(%rbp),%rbx
	movsd %xmm0,8(%rbp)
	testb $7,%bl
	jne _c34lu
_c34lv:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c34lo, .-_c34lo


==================== Asm code ====================
2018-03-16 15:57:31.321811798 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34lo_info:
	.quad	_c34lo
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.322616151 UTC

.section .text
.align 8
_c34lu:
_c34lu:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c34lI
_c34lH:
	leaq 7(%rbx),%rax
	movsd 8(%rbp),%xmm0
	mulsd (%rax),%xmm0
	movq $GHC.Types.D#_con_info,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c34lI:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c34lu, .-_c34lu


==================== Asm code ====================
2018-03-16 15:57:31.323279044 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34lu_info:
	.quad	_c34lu
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.327299403 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.divideDouble_closure
.type GHC.Float.divideDouble_closure, @object
GHC.Float.divideDouble_closure:
	.quad	GHC.Float.divideDouble_info


==================== Asm code ====================
2018-03-16 15:57:31.328212565 UTC

.section .text
.align 8
.globl GHC.Float.divideDouble_entry
.type GHC.Float.divideDouble_entry, @object
GHC.Float.divideDouble_entry:
_c34m8:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c34mk
_c34ml:
	movq $block_c34m5_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c34m5
_c34m6:
	movq (%rbx),%rax
	jmp *(%rax)
_c34mk:
	movl $GHC.Float.divideDouble_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.divideDouble_entry, .-GHC.Float.divideDouble_entry


==================== Asm code ====================
2018-03-16 15:57:31.328902785 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.divideDouble_info
.type GHC.Float.divideDouble_info, @object
GHC.Float.divideDouble_info:
	.quad	GHC.Float.divideDouble_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:31.329728634 UTC

.section .text
.align 8
_c34m5:
_c34m5:
	movq $block_c34mb_info,(%rbp)
	movsd 7(%rbx),%xmm0
	movq 8(%rbp),%rbx
	movsd %xmm0,8(%rbp)
	testb $7,%bl
	jne _c34mb
_c34mc:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c34m5, .-_c34m5


==================== Asm code ====================
2018-03-16 15:57:31.330359121 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34m5_info:
	.quad	_c34m5
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.331651632 UTC

.section .text
.align 8
_c34mb:
_c34mb:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c34mp
_c34mo:
	leaq 7(%rbx),%rax
	movsd 8(%rbp),%xmm0
	divsd (%rax),%xmm0
	movq $GHC.Types.D#_con_info,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c34mp:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c34mb, .-_c34mb


==================== Asm code ====================
2018-03-16 15:57:31.332302809 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34mb_info:
	.quad	_c34mb
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.336107549 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.negateDouble_closure
.type GHC.Float.negateDouble_closure, @object
GHC.Float.negateDouble_closure:
	.quad	GHC.Float.negateDouble_info


==================== Asm code ====================
2018-03-16 15:57:31.33700131 UTC

.section .text
.align 8
.globl GHC.Float.negateDouble_entry
.type GHC.Float.negateDouble_entry, @object
GHC.Float.negateDouble_entry:
_c34mP:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c34mW
_c34mX:
	movq $block_c34mM_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c34mM
_c34mN:
	movq (%rbx),%rax
	jmp *(%rax)
_c34mW:
	movl $GHC.Float.negateDouble_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.negateDouble_entry, .-GHC.Float.negateDouble_entry


==================== Asm code ====================
2018-03-16 15:57:31.338394608 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.negateDouble_info
.type GHC.Float.negateDouble_info, @object
GHC.Float.negateDouble_info:
	.quad	GHC.Float.negateDouble_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:31.339200444 UTC

.section .text
.align 8
_c34mM:
_c34mM:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c34n0
_c34mZ:
	movsd 7(%rbx),%xmm0
	movsd _n34n9(%rip),%xmm1
	xorpd %xmm1,%xmm0
	movq $GHC.Types.D#_con_info,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c34n0:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c34mM, .-_c34mM
.section .rodata
.align 8
.align 8
_n34n9:
	.quad	-9223372036854775808


==================== Asm code ====================
2018-03-16 15:57:31.33983781 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34mM_info:
	.quad	_c34mM
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.341653504 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fNumDouble1_closure
.type GHC.Float.$fNumDouble1_closure, @object
GHC.Float.$fNumDouble1_closure:
	.quad	GHC.Types.D#_con_info
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	240
	.byte	63


==================== Asm code ====================
2018-03-16 15:57:31.343417294 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fNumDouble2_closure
.type GHC.Float.$fNumDouble2_closure, @object
GHC.Float.$fNumDouble2_closure:
	.quad	GHC.Types.D#_con_info
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	240
	.byte	191


==================== Asm code ====================
2018-03-16 15:57:31.347022312 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fNumDouble_$csignum_closure
.type GHC.Float.$fNumDouble_$csignum_closure, @object
GHC.Float.$fNumDouble_$csignum_closure:
	.quad	GHC.Float.$fNumDouble_$csignum_info


==================== Asm code ====================
2018-03-16 15:57:31.347911152 UTC

.section .text
.align 8
.globl GHC.Float.$fNumDouble_$csignum_entry
.type GHC.Float.$fNumDouble_$csignum_entry, @object
GHC.Float.$fNumDouble_$csignum_entry:
_c34nn:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c34no
_c34np:
	movq $block_c34nk_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c34nk
_c34nl:
	movq (%rbx),%rax
	jmp *(%rax)
_c34no:
	movl $GHC.Float.$fNumDouble_$csignum_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fNumDouble_$csignum_entry, .-GHC.Float.$fNumDouble_$csignum_entry


==================== Asm code ====================
2018-03-16 15:57:31.348543672 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fNumDouble_$csignum_info
.type GHC.Float.$fNumDouble_$csignum_info, @object
GHC.Float.$fNumDouble_$csignum_info:
	.quad	GHC.Float.$fNumDouble_$csignum_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:31.349746327 UTC

.section .text
.align 8
_c34nk:
_c34nk:
	movsd 7(%rbx),%xmm0
	xorpd %xmm1,%xmm1
	ucomisd %xmm1,%xmm0
	ja _c34nD
_c34nC:
	xorpd %xmm1,%xmm1
	ucomisd %xmm1,%xmm0
	jp _c34nz
	jb _c34nA
_c34nz:
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c34nD:
	movl $GHC.Float.$fNumDouble1_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c34nA:
	movl $GHC.Float.$fNumDouble2_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c34nk, .-_c34nk


==================== Asm code ====================
2018-03-16 15:57:31.350493628 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34nk_info:
	.quad	_c34nk
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.353884333 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.fabsDouble_closure
.type GHC.Float.fabsDouble_closure, @object
GHC.Float.fabsDouble_closure:
	.quad	GHC.Float.fabsDouble_info


==================== Asm code ====================
2018-03-16 15:57:31.354858885 UTC

.section .text
.align 8
.globl GHC.Float.fabsDouble_entry
.type GHC.Float.fabsDouble_entry, @object
GHC.Float.fabsDouble_entry:
_c34o3:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c34oa
_c34ob:
	movq $block_c34o0_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c34o0
_c34o1:
	movq (%rbx),%rax
	jmp *(%rax)
_c34oa:
	movl $GHC.Float.fabsDouble_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.fabsDouble_entry, .-GHC.Float.fabsDouble_entry


==================== Asm code ====================
2018-03-16 15:57:31.355513617 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.fabsDouble_info
.type GHC.Float.fabsDouble_info, @object
GHC.Float.fabsDouble_info:
	.quad	GHC.Float.fabsDouble_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:31.356497895 UTC

.section .text
.align 8
_c34o0:
_c34o0:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c34oe
_c34od:
	movsd 7(%rbx),%xmm0
	movsd _n34on(%rip),%xmm1
	andpd %xmm1,%xmm0
	movq $GHC.Types.D#_con_info,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c34oe:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c34o0, .-_c34o0
.section .rodata
.align 8
.align 8
_n34on:
	.quad	9223372036854775807


==================== Asm code ====================
2018-03-16 15:57:31.35722987 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34o0_info:
	.quad	_c34o0
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.359299936 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fNumDouble_closure
.type GHC.Float.$fNumDouble_closure, @object
GHC.Float.$fNumDouble_closure:
	.quad	GHC.Num.C:Num_con_info
	.quad	GHC.Float.plusDouble_closure+2
	.quad	GHC.Float.minusDouble_closure+2
	.quad	GHC.Float.timesDouble_closure+2
	.quad	GHC.Float.negateDouble_closure+1
	.quad	GHC.Float.fabsDouble_closure+1
	.quad	GHC.Float.$fNumDouble_$csignum_closure+1
	.quad	GHC.Float.$fNumDouble_$cfromInteger_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:31.363551077 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fFloatingDouble_$cacosh_closure
.type GHC.Float.$fFloatingDouble_$cacosh_closure, @object
GHC.Float.$fFloatingDouble_$cacosh_closure:
	.quad	GHC.Float.$fFloatingDouble_$cacosh_info


==================== Asm code ====================
2018-03-16 15:57:31.365050069 UTC

.section .text
.align 8
.globl GHC.Float.$fFloatingDouble_$cacosh_entry
.type GHC.Float.$fFloatingDouble_$cacosh_entry, @object
GHC.Float.$fFloatingDouble_$cacosh_entry:
_c34oA:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c34p4
_c34p5:
	movq $block_c34ox_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c34ox
_c34oy:
	movq (%rbx),%rax
	jmp *(%rax)
_c34p4:
	movl $GHC.Float.$fFloatingDouble_$cacosh_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fFloatingDouble_$cacosh_entry, .-GHC.Float.$fFloatingDouble_$cacosh_entry


==================== Asm code ====================
2018-03-16 15:57:31.36577191 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fFloatingDouble_$cacosh_info
.type GHC.Float.$fFloatingDouble_$cacosh_info, @object
GHC.Float.$fFloatingDouble_$cacosh_info:
	.quad	GHC.Float.$fFloatingDouble_$cacosh_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:31.366913072 UTC

.section .text
.align 8
_c34ox:
_c34ox:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c34p8
_c34p7:
	movsd 7(%rbx),%xmm0
	movsd %xmm0,%xmm1
	addsd _n34ph(%rip),%xmm1
	movsd %xmm0,%xmm2
	subsd _n34pk(%rip),%xmm2
	divsd %xmm1,%xmm2
	sqrtsd %xmm2,%xmm1
	subq $8,%rsp
	movsd %xmm0,%xmm2
	addsd _n34po(%rip),%xmm2
	mulsd %xmm1,%xmm2
	addsd %xmm2,%xmm0
	movl $1,%eax
	call log
	addq $8,%rsp
	movq $GHC.Types.D#_con_info,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c34p8:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c34ox, .-_c34ox
.section .rodata
.align 8
.align 8
_n34ph:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	240
	.byte	63
.section .rodata
.align 8
.align 8
_n34pk:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	240
	.byte	63
.section .rodata
.align 8
.align 8
_n34po:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	240
	.byte	63


==================== Asm code ====================
2018-03-16 15:57:31.367986492 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34ox_info:
	.quad	_c34ox
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.372031042 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fFloatingDouble_$casinh_closure
.type GHC.Float.$fFloatingDouble_$casinh_closure, @object
GHC.Float.$fFloatingDouble_$casinh_closure:
	.quad	GHC.Float.$fFloatingDouble_$casinh_info


==================== Asm code ====================
2018-03-16 15:57:31.372905197 UTC

.section .text
.align 8
.globl GHC.Float.$fFloatingDouble_$casinh_entry
.type GHC.Float.$fFloatingDouble_$casinh_entry, @object
GHC.Float.$fFloatingDouble_$casinh_entry:
_c34pD:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c34pY
_c34pZ:
	movq $block_c34pA_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c34pA
_c34pB:
	movq (%rbx),%rax
	jmp *(%rax)
_c34pY:
	movl $GHC.Float.$fFloatingDouble_$casinh_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fFloatingDouble_$casinh_entry, .-GHC.Float.$fFloatingDouble_$casinh_entry


==================== Asm code ====================
2018-03-16 15:57:31.373702014 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fFloatingDouble_$casinh_info
.type GHC.Float.$fFloatingDouble_$casinh_info, @object
GHC.Float.$fFloatingDouble_$casinh_info:
	.quad	GHC.Float.$fFloatingDouble_$casinh_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:31.374600077 UTC

.section .text
.align 8
_c34pA:
_c34pA:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c34q2
_c34q1:
	movsd 7(%rbx),%xmm0
	movsd %xmm0,%xmm1
	mulsd %xmm0,%xmm1
	addsd _n34qb(%rip),%xmm1
	sqrtsd %xmm1,%xmm1
	subq $8,%rsp
	addsd %xmm1,%xmm0
	movl $1,%eax
	call log
	addq $8,%rsp
	movq $GHC.Types.D#_con_info,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c34q2:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c34pA, .-_c34pA
.section .rodata
.align 8
.align 8
_n34qb:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	240
	.byte	63


==================== Asm code ====================
2018-03-16 15:57:31.375300845 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34pA_info:
	.quad	_c34pA
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.378794871 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fFractionalDouble_$crecip_closure
.type GHC.Float.$fFractionalDouble_$crecip_closure, @object
GHC.Float.$fFractionalDouble_$crecip_closure:
	.quad	GHC.Float.$fFractionalDouble_$crecip_info


==================== Asm code ====================
2018-03-16 15:57:31.379709868 UTC

.section .text
.align 8
.globl GHC.Float.$fFractionalDouble_$crecip_entry
.type GHC.Float.$fFractionalDouble_$crecip_entry, @object
GHC.Float.$fFractionalDouble_$crecip_entry:
_c34qq:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c34qx
_c34qy:
	movq $block_c34qn_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c34qn
_c34qo:
	movq (%rbx),%rax
	jmp *(%rax)
_c34qx:
	movl $GHC.Float.$fFractionalDouble_$crecip_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fFractionalDouble_$crecip_entry, .-GHC.Float.$fFractionalDouble_$crecip_entry


==================== Asm code ====================
2018-03-16 15:57:31.380421774 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fFractionalDouble_$crecip_info
.type GHC.Float.$fFractionalDouble_$crecip_info, @object
GHC.Float.$fFractionalDouble_$crecip_info:
	.quad	GHC.Float.$fFractionalDouble_$crecip_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:31.381212351 UTC

.section .text
.align 8
_c34qn:
_c34qn:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c34qB
_c34qA:
	leaq 7(%rbx),%rax
	movsd _n34qL(%rip),%xmm0
	divsd (%rax),%xmm0
	movq $GHC.Types.D#_con_info,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c34qB:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c34qn, .-_c34qn
.section .rodata
.align 8
.align 8
_n34qL:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	240
	.byte	63


==================== Asm code ====================
2018-03-16 15:57:31.381964651 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34qn_info:
	.quad	_c34qn
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.384702238 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.rationalToDouble5_closure
.type GHC.Float.rationalToDouble5_closure, @object
GHC.Float.rationalToDouble5_closure:
	.quad	GHC.Float.rationalToDouble5_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:31.385988618 UTC

.section .text
.align 8
.globl GHC.Float.rationalToDouble5_entry
.type GHC.Float.rationalToDouble5_entry, @object
GHC.Float.rationalToDouble5_entry:
_c34qW:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c34qX
_c34qY:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c34qV
_c34qU:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $GHC.Types.[]_closure+1,%esi
	movl $GHC.Types.True_closure+2,%r14d
	addq $-16,%rbp
	jmp GHC.Integer.Type.mkInteger_entry
_c34qX:
	jmp *-16(%r13)
_c34qV:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Float.rationalToDouble5_entry, .-GHC.Float.rationalToDouble5_entry


==================== Asm code ====================
2018-03-16 15:57:31.386715846 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.rationalToDouble5_info
.type GHC.Float.rationalToDouble5_info, @object
GHC.Float.rationalToDouble5_info:
	.quad	GHC.Float.rationalToDouble5_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:57:31.389843407 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.rationalToDouble1_closure
.type GHC.Float.rationalToDouble1_closure, @object
GHC.Float.rationalToDouble1_closure:
	.quad	GHC.Float.rationalToDouble1_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:31.390922034 UTC

.section .text
.align 8
.globl GHC.Float.rationalToDouble1_entry
.type GHC.Float.rationalToDouble1_entry, @object
GHC.Float.rationalToDouble1_entry:
_c34re:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c34rh
_c34ri:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c34rk
_c34rj:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c34rb
_c34ra:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq $GHC.Types.D#_con_info,-8(%r12)
	xorpd %xmm0,%xmm0
	xorpd %xmm1,%xmm1
	divsd %xmm0,%xmm1
	movsd %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c34rk:
	movq $16,904(%r13)
_c34rh:
	jmp *-16(%r13)
_c34rb:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Float.rationalToDouble1_entry, .-GHC.Float.rationalToDouble1_entry


==================== Asm code ====================
2018-03-16 15:57:31.391676933 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.rationalToDouble1_info
.type GHC.Float.rationalToDouble1_info, @object
GHC.Float.rationalToDouble1_info:
	.quad	GHC.Float.rationalToDouble1_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:57:31.395004313 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.rationalToDouble2_closure
.type GHC.Float.rationalToDouble2_closure, @object
GHC.Float.rationalToDouble2_closure:
	.quad	GHC.Float.rationalToDouble2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:31.396106894 UTC

.section .text
.align 8
.globl GHC.Float.rationalToDouble2_entry
.type GHC.Float.rationalToDouble2_entry, @object
GHC.Float.rationalToDouble2_entry:
_c34rE:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c34rH
_c34rI:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c34rK
_c34rJ:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c34rB
_c34rA:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq $GHC.Types.D#_con_info,-8(%r12)
	xorpd %xmm0,%xmm0
	movsd _n34rP(%rip),%xmm1
	divsd %xmm0,%xmm1
	movsd %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c34rK:
	movq $16,904(%r13)
_c34rH:
	jmp *-16(%r13)
_c34rB:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Float.rationalToDouble2_entry, .-GHC.Float.rationalToDouble2_entry
.section .rodata
.align 8
.align 8
_n34rP:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	240
	.byte	191


==================== Asm code ====================
2018-03-16 15:57:31.396985693 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.rationalToDouble2_info
.type GHC.Float.rationalToDouble2_info, @object
GHC.Float.rationalToDouble2_info:
	.quad	GHC.Float.rationalToDouble2_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:57:31.400649745 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.rationalToDouble3_closure
.type GHC.Float.rationalToDouble3_closure, @object
GHC.Float.rationalToDouble3_closure:
	.quad	GHC.Float.rationalToDouble3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:31.401731853 UTC

.section .text
.align 8
.globl GHC.Float.rationalToDouble3_entry
.type GHC.Float.rationalToDouble3_entry, @object
GHC.Float.rationalToDouble3_entry:
_c34s5:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c34s8
_c34s9:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c34sb
_c34sa:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c34s2
_c34s1:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq $GHC.Types.D#_con_info,-8(%r12)
	xorpd %xmm0,%xmm0
	movsd _n34sg(%rip),%xmm1
	divsd %xmm0,%xmm1
	movsd %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c34sb:
	movq $16,904(%r13)
_c34s8:
	jmp *-16(%r13)
_c34s2:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Float.rationalToDouble3_entry, .-GHC.Float.rationalToDouble3_entry
.section .rodata
.align 8
.align 8
_n34sg:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	240
	.byte	63


==================== Asm code ====================
2018-03-16 15:57:31.402558804 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.rationalToDouble3_info
.type GHC.Float.rationalToDouble3_info, @object
GHC.Float.rationalToDouble3_info:
	.quad	GHC.Float.rationalToDouble3_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:57:31.404327042 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.rationalToDouble4_closure
.type GHC.Float.rationalToDouble4_closure, @object
GHC.Float.rationalToDouble4_closure:
	.quad	GHC.Types.D#_con_info
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0


==================== Asm code ====================
2018-03-16 15:57:31.411420112 UTC

.section .data
.align 8
.align 1
$w$j_r2Upx_closure:
	.quad	$w$j_r2Upx_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:31.412359811 UTC

.section .text
.align 8
$w$j_r2Upx_entry:
_c34sy:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c34sz
_c34sA:
	movq $block_c34st_info,-32(%rbp)
	movq %rsi,%rax
	movl $GHC.Float.rationalToDouble5_closure,%esi
	movq %r14,%rbx
	movq %rdi,%r14
	movq %rbx,-24(%rbp)
	movq %rax,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-32,%rbp
	jmp GHC.Integer.Type.eqInteger#_entry
_c34sz:
	movl $$w$j_r2Upx_closure,%ebx
	jmp *-8(%r13)
	.size $w$j_r2Upx_entry, .-$w$j_r2Upx_entry


==================== Asm code ====================
2018-03-16 15:57:31.413099523 UTC

.section .data.rel.ro
.align 8
.align 1
$w$j_r2Upx_info:
	.quad	$w$j_r2Upx_entry
	.quad	0
	.quad	133143986190
	.quad	12884901907
	.quad	S2VLN_srt+8


==================== Asm code ====================
2018-03-16 15:57:31.413985493 UTC

.section .text
.align 8
_c34st:
_c34st:
	cmpq $1,%rbx
	je _c34sx
_c34sw:
	movq $block_c34sD_info,(%rbp)
	movq 24(%rbp),%rsi
	movq 16(%rbp),%r14
	jmp GHC.Integer.Type.quotRemInteger_entry
_c34sx:
	movl $GHC.Real.divZeroError_closure,%ebx
	addq $32,%rbp
	jmp stg_ap_0_fast
	.size _c34st, .-_c34st


==================== Asm code ====================
2018-03-16 15:57:31.414592327 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34st_info:
	.quad	_c34st
	.quad	67
	.quad	47244640286
	.quad	S2VLN_srt+8


==================== Asm code ====================
2018-03-16 15:57:31.415262635 UTC

.section .text
.align 8
_c34sD:
_c34sD:
	movq $block_c34sF_info,(%rbp)
	movl $1,%esi
	movq %rbx,16(%rbp)
	jmp GHC.Integer.Type.shiftLInteger_entry
	.size _c34sD, .-_c34sD


==================== Asm code ====================
2018-03-16 15:57:31.415828861 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34sD_info:
	.quad	_c34sD
	.quad	195
	.quad	38654705694
	.quad	S2VLN_srt+8


==================== Asm code ====================
2018-03-16 15:57:31.416476204 UTC

.section .text
.align 8
_c34sF:
_c34sF:
	movq $block_c34sL_info,(%rbp)
	movq 24(%rbp),%rsi
	movq %rbx,%r14
	jmp GHC.Integer.Type.compareInteger_entry
	.size _c34sF, .-_c34sF


==================== Asm code ====================
2018-03-16 15:57:31.417048427 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34sF_info:
	.quad	_c34sF
	.quad	67
	.quad	38654705694
	.quad	S2VLN_srt+8


==================== Asm code ====================
2018-03-16 15:57:31.417933385 UTC

.section .text
.align 8
_c34sL:
_c34sL:
	movq 16(%rbp),%rax
	andl $7,%ebx
	cmpq $3,%rbx
	jb _u34tz
_c34tq:
	movq $block_c34to_info,(%rbp)
	movl $GHC.Float.$fRealDouble1_closure,%esi
	movq %rax,%r14
	jmp GHC.Integer.Type.plusInteger_entry
_u34tA:
	addq $8,%rbp
	jmp _c34ti
_u34tz:
	cmpq $2,%rbx
	jb _u34tA
_c34sX:
	movq $block_c34sV_info,(%rbp)
	movq %rax,%r14
	jmp GHC.Integer.Type.integerToInt_entry
	.size _c34sL, .-_c34sL


==================== Asm code ====================
2018-03-16 15:57:31.418629032 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34sL_info:
	.quad	_c34sL
	.quad	323
	.quad	38654705694
	.quad	S2VLN_srt+8


==================== Asm code ====================
2018-03-16 15:57:31.419297858 UTC

.section .text
.align 8
_c34sV:
_c34sV:
	testb $1,%bl
	je _u34tB
_c34ta:
	movq $block_c34t8_info,(%rbp)
	movl $GHC.Float.$fRealDouble1_closure,%esi
	movq 16(%rbp),%r14
	jmp GHC.Integer.Type.plusInteger_entry
_u34tB:
	addq $8,%rbp
	jmp _c34ti
	.size _c34sV, .-_c34sV


==================== Asm code ====================
2018-03-16 15:57:31.419942766 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34sV_info:
	.quad	_c34sV
	.quad	323
	.quad	38654705694
	.quad	S2VLN_srt+8


==================== Asm code ====================
2018-03-16 15:57:31.420591519 UTC

.section .text
.align 8
_c34ti:
_c34ti:
	movq (%rbp),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Integer.Type.encodeDoubleInteger_entry
	.size _c34ti, .-_c34ti


==================== Asm code ====================
2018-03-16 15:57:31.421405539 UTC

.section .text
.align 8
_c34t8:
_c34t8:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $32,%rbp
	jmp GHC.Integer.Type.encodeDoubleInteger_entry
	.size _c34t8, .-_c34t8


==================== Asm code ====================
2018-03-16 15:57:31.42202781 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34t8_info:
	.quad	_c34t8
	.quad	451
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.422678133 UTC

.section .text
.align 8
_c34to:
_c34to:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $32,%rbp
	jmp GHC.Integer.Type.encodeDoubleInteger_entry
	.size _c34to, .-_c34to


==================== Asm code ====================
2018-03-16 15:57:31.423277774 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34to_info:
	.quad	_c34to
	.quad	451
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.451299833 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$w$sfromRat''_closure
.type GHC.Float.$w$sfromRat''_closure, @object
GHC.Float.$w$sfromRat''_closure:
	.quad	GHC.Float.$w$sfromRat''_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:31.452141172 UTC

.section .text
.align 8
.globl GHC.Float.$w$sfromRat''_slow
.type GHC.Float.$w$sfromRat''_slow, @object
GHC.Float.$w$sfromRat''_slow:
_c34u8:
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $32,%rbp
	jmp GHC.Float.$w$sfromRat''_entry
	.size GHC.Float.$w$sfromRat''_slow, .-GHC.Float.$w$sfromRat''_slow


==================== Asm code ====================
2018-03-16 15:57:31.453151539 UTC

.section .text
.align 8
.globl GHC.Float.$w$sfromRat''_entry
.type GHC.Float.$w$sfromRat''_entry, @object
GHC.Float.$w$sfromRat''_entry:
_c34ul:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c34um
_c34un:
	movq $block_c34ue_info,-40(%rbp)
	movq %r8,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _c34ue
_c34uf:
	movq (%rbx),%rax
	jmp *(%rax)
_c34um:
	movl $GHC.Float.$w$sfromRat''_closure,%ebx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	jmp *-8(%r13)
	.size GHC.Float.$w$sfromRat''_entry, .-GHC.Float.$w$sfromRat''_entry


==================== Asm code ====================
2018-03-16 15:57:31.454124701 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$w$sfromRat''_info
.type GHC.Float.$w$sfromRat''_info, @object
GHC.Float.$w$sfromRat''_info:
	.quad	GHC.Float.$w$sfromRat''_entry
	.quad	0
	.quad	4367981740046
	.quad	17179869184
	.quad	S2VLN_srt+8
	.quad	196
	.quad	GHC.Float.$w$sfromRat''_slow


==================== Asm code ====================
2018-03-16 15:57:31.455011432 UTC

.section .text
.align 8
_c34ue:
_c34ue:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c34uj
_c34ui:
	movq $1,-8(%rbp)
	movq $-1,(%rbp)
	addq $-8,%rbp
	jmp _s2UHo
_c34uj:
	movq $block_c34Bw_info,(%rbp)
	movq 7(%rbx),%rsi
	xorl %r14d,%r14d
	jmp GHC.Integer.Logarithms.Internals.integerLog2IsPowerOf2#_couldBe_entry
	.size _c34ue, .-_c34ue


==================== Asm code ====================
2018-03-16 15:57:31.455660086 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34ue_info:
	.quad	_c34ue
	.quad	196
	.quad	2168958484510
	.quad	S2VLN_srt+8


==================== Asm code ====================
2018-03-16 15:57:31.45631398 UTC

.section .text
.align 8
_c34Bw:
_c34Bw:
	movq %rbx,(%rbp)
	movq %r14,-8(%rbp)
	addq $-8,%rbp
	jmp _s2UHo
	.size _c34Bw, .-_c34Bw


==================== Asm code ====================
2018-03-16 15:57:31.456881554 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34Bw_info:
	.quad	_c34Bw
	.quad	196
	.quad	2168958484510
	.quad	S2VLN_srt+8


==================== Asm code ====================
2018-03-16 15:57:31.457784229 UTC

.section .text
.align 8
_s2UHo:
_s2UHo:
	movq 32(%rbp),%rax
	cmpq $0,(%rbp)
	je _c34Ba
_c34wr:
	movq $block_c34uw_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c34uw
_c34ws:
	movq (%rbx),%rax
	jmp *(%rax)
_c34Ba:
	movq $block_c34x1_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c34x1
_c34Bb:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _s2UHo, .-_s2UHo


==================== Asm code ====================
2018-03-16 15:57:31.458637313 UTC

.section .text
.align 8
_c34x1:
_c34x1:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c34Bm
_c34Bh:
	movq $-1,40(%rbp)
	addq $8,%rbp
	jmp _s2UI2
_c34Bm:
	movq $block_c34Bk_info,(%rbp)
	movq 7(%rbx),%rsi
	xorl %r14d,%r14d
	jmp GHC.Integer.Logarithms.Internals.integerLog2#_step_entry
	.size _c34x1, .-_c34x1


==================== Asm code ====================
2018-03-16 15:57:31.459358614 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34x1_info:
	.quad	_c34x1
	.quad	1477
	.quad	2100239007774
	.quad	S2VLN_srt+8


==================== Asm code ====================
2018-03-16 15:57:31.460031168 UTC

.section .text
.align 8
_c34Bk:
_c34Bk:
	movq %rbx,40(%rbp)
	addq $8,%rbp
	jmp _s2UI2
	.size _c34Bk, .-_c34Bk


==================== Asm code ====================
2018-03-16 15:57:31.460613576 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34Bk_info:
	.quad	_c34Bk
	.quad	1477
	.quad	1550483193886
	.quad	S2VLN_srt+8


==================== Asm code ====================
2018-03-16 15:57:31.462134152 UTC

.section .text
.align 8
_s2UI2:
_s2UI2:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rbx
	movq 24(%rbp),%rcx
	movq (%rbp),%rdx
	movq 32(%rbp),%rsi
	movq %rdx,%rdi
	addq %rax,%rdi
	decq %rdi
	cmpq %rdi,%rsi
	jl _c34zo
_c34B9:
	cmpq %rbx,%rsi
	jge _c34B7
_c34B8:
	movq %rdx,%rsi
	negq %rsi
	movq %rcx,%r14
	addq $40,%rbp
	jmp GHC.Integer.Type.encodeDoubleInteger_entry
_c34xW:
	leaq 1(%rsi),%rax
	cmpq %rax,%rdx
	jle _c34xz
_u34Ct:
	addq $40,%rbp
	jmp _c34xU
_c34B7:
	leaq 1(%rsi),%rax
	subq %rbx,%rax
	negq %rax
	testq %rax,%rax
	jl _c34AU
_c34B1:
	movq $block_c34B0_info,-8(%rbp)
	movq %rax,%rsi
	movq %rcx,%r14
	addq $-8,%rbp
	jmp GHC.Integer.Type.shiftLInteger_entry
_c34AU:
	movq $block_c34AS_info,-8(%rbp)
	movq %rax,%rsi
	negq %rsi
	movq %rcx,%r14
	addq $-8,%rbp
	jmp GHC.Integer.Type.shiftRInteger_entry
_c34zo:
	movq %rax,%rdi
	subq %rbx,%rdi
	addq %rdi,%rdx
	testq %rdx,%rdx
	jg _c34zl
_c34zm:
	movq %rax,%rsi
	subq %rbx,%rsi
	subq %rdx,%rsi
	movq %rcx,%r14
	addq $40,%rbp
	jmp GHC.Integer.Type.encodeDoubleInteger_entry
_c34zl:
	cmpq %rsi,%rdx
	jg _c34xW
_c34zj:
	movq %rdx,%rax
	negq %rax
	testq %rax,%rax
	jl _c34z7
_c34ze:
	movq $block_c34zd_info,(%rbp)
	movq %rax,%rsi
	movq %rcx,%r14
	movq %rdx,32(%rbp)
	jmp GHC.Integer.Type.shiftLInteger_entry
_c34z7:
	movq $block_c34z5_info,(%rbp)
	movq %rax,%rsi
	negq %rsi
	movq %rcx,%r14
	movq %rdx,32(%rbp)
	jmp GHC.Integer.Type.shiftRInteger_entry
_c34xz:
	movq $block_c34xx_info,(%rbp)
	movq %rcx,%rbx
	testb $7,%bl
	jne _c34xx
_c34xA:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _s2UI2, .-_s2UI2


==================== Asm code ====================
2018-03-16 15:57:31.463397299 UTC

.section .text
.align 8
_c34xx:
_c34xx:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c34xL
_c34xG:
	movq 8(%rbp),%rsi
	subq 16(%rbp),%rsi
	movl $GHC.Float.$fRealDouble1_closure,%r14d
	addq $40,%rbp
	jmp GHC.Integer.Type.encodeDoubleInteger_entry
_c34xL:
	movq $block_c34xJ_info,(%rbp)
	movq 7(%rbx),%rsi
	xorl %r14d,%r14d
	jmp GHC.Integer.Logarithms.Internals.integerLog2IsPowerOf2#_couldBe_entry
	.size _c34xx, .-_c34xx


==================== Asm code ====================
2018-03-16 15:57:31.464675785 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34xx_info:
	.quad	_c34xx
	.quad	964
	.quad	141733920798
	.quad	S2VLN_srt+32


==================== Asm code ====================
2018-03-16 15:57:31.465500555 UTC

.section .text
.align 8
_c34xJ:
_c34xJ:
	testq %r14,%r14
	je _u34Cu
_c34xS:
	movq 8(%rbp),%rsi
	subq 16(%rbp),%rsi
	movl $GHC.Float.$fRealDouble1_closure,%r14d
	addq $40,%rbp
	jmp GHC.Integer.Type.encodeDoubleInteger_entry
_u34Cu:
	addq $40,%rbp
	jmp _c34xU
	.size _c34xJ, .-_c34xJ


==================== Asm code ====================
2018-03-16 15:57:31.466142076 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34xJ_info:
	.quad	_c34xJ
	.quad	964
	.quad	4294967326
	.quad	S2VLN_srt+32


==================== Asm code ====================
2018-03-16 15:57:31.466804679 UTC

.section .text
.align 8
_c34xU:
_c34xU:
	xorpd %xmm1,%xmm1
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c34xU, .-_c34xU


==================== Asm code ====================
2018-03-16 15:57:31.467424271 UTC

.section .text
.align 8
_c34z5:
_c34z5:
	movq %rbx,(%rbp)
	jmp _s2UIm
	.size _c34z5, .-_c34z5


==================== Asm code ====================
2018-03-16 15:57:31.467971968 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34z5_info:
	.quad	_c34z5
	.quad	708
	.quad	313532612638
	.quad	S2VLN_srt+8


==================== Asm code ====================
2018-03-16 15:57:31.468600935 UTC

.section .text
.align 8
_c34zd:
_c34zd:
	movq %rbx,(%rbp)
	jmp _s2UIm
	.size _c34zd, .-_c34zd


==================== Asm code ====================
2018-03-16 15:57:31.469136869 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34zd_info:
	.quad	_c34zd
	.quad	708
	.quad	313532612638
	.quad	S2VLN_srt+8


==================== Asm code ====================
2018-03-16 15:57:31.469913373 UTC

.section .text
.align 8
_s2UIm:
_s2UIm:
	movq $block_c34ya_info,-8(%rbp)
	movq 32(%rbp),%rax
	leaq -1(%rax),%rsi
	movq 24(%rbp),%r14
	addq $-8,%rbp
	jmp GHC.Integer.Logarithms.Internals.roundingMode#_entry
	.size _s2UIm, .-_s2UIm


==================== Asm code ====================
2018-03-16 15:57:31.470781602 UTC

.section .text
.align 8
_c34ya:
_c34ya:
	movq 16(%rbp),%rax
	movq 24(%rbp),%rcx
	movq 8(%rbp),%rdx
	testq %rbx,%rbx
	je _c34ys
_u34Cf:
	cmpq $1,%rbx
	je _c34yx
_c34yk:
	movq $block_c34yh_info,32(%rbp)
	movl $GHC.Float.$fRealDouble1_closure,%esi
	movq %rdx,%r14
	subq %rcx,%rax
	movq %rax,40(%rbp)
	addq $32,%rbp
	jmp GHC.Integer.Type.plusInteger_entry
_c34yx:
	movq $block_c34yv_info,(%rbp)
	movq %rdx,%r14
	jmp GHC.Integer.Type.integerToInt_entry
_c34ys:
	movq %rax,%rsi
	subq %rcx,%rsi
	movq %rdx,%r14
	addq $48,%rbp
	jmp GHC.Integer.Type.encodeDoubleInteger_entry
	.size _c34ya, .-_c34ya


==================== Asm code ====================
2018-03-16 15:57:31.471488571 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34ya_info:
	.quad	_c34ya
	.quad	1925
	.quad	38654705694
	.quad	S2VLN_srt+8


==================== Asm code ====================
2018-03-16 15:57:31.472313285 UTC

.section .text
.align 8
_c34yv:
_c34yv:
	movq 16(%rbp),%rax
	movq 24(%rbp),%rcx
	movq 8(%rbp),%rdx
	testb $1,%bl
	je _c34yV
_c34yN:
	movq $block_c34yL_info,32(%rbp)
	movl $GHC.Float.$fRealDouble1_closure,%esi
	movq %rdx,%r14
	subq %rcx,%rax
	movq %rax,40(%rbp)
	addq $32,%rbp
	jmp GHC.Integer.Type.plusInteger_entry
_c34yV:
	movq %rax,%rsi
	subq %rcx,%rsi
	movq %rdx,%r14
	addq $48,%rbp
	jmp GHC.Integer.Type.encodeDoubleInteger_entry
	.size _c34yv, .-_c34yv


==================== Asm code ====================
2018-03-16 15:57:31.473021017 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34yv_info:
	.quad	_c34yv
	.quad	1925
	.quad	38654705694
	.quad	S2VLN_srt+8


==================== Asm code ====================
2018-03-16 15:57:31.473818048 UTC

.section .text
.align 8
_c34yL:
_c34yL:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.encodeDoubleInteger_entry
	.size _c34yL, .-_c34yL


==================== Asm code ====================
2018-03-16 15:57:31.474381538 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34yL_info:
	.quad	_c34yL
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.475020768 UTC

.section .text
.align 8
_c34yh:
_c34yh:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.encodeDoubleInteger_entry
	.size _c34yh, .-_c34yh


==================== Asm code ====================
2018-03-16 15:57:31.47559447 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34yh_info:
	.quad	_c34yh
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.476259009 UTC

.section .text
.align 8
_c34AS:
_c34AS:
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp _s2UII
	.size _c34AS, .-_c34AS


==================== Asm code ====================
2018-03-16 15:57:31.476791577 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34AS_info:
	.quad	_c34AS
	.quad	1477
	.quad	313532612638
	.quad	S2VLN_srt+8


==================== Asm code ====================
2018-03-16 15:57:31.477483765 UTC

.section .text
.align 8
_c34B0:
_c34B0:
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp _s2UII
	.size _c34B0, .-_c34B0


==================== Asm code ====================
2018-03-16 15:57:31.478075258 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34B0_info:
	.quad	_c34B0
	.quad	1477
	.quad	313532612638
	.quad	S2VLN_srt+8


==================== Asm code ====================
2018-03-16 15:57:31.47875448 UTC

.section .text
.align 8
_s2UII:
_s2UII:
	movq 32(%rbp),%rax
	subq 16(%rbp),%rax
	movq $block_c34zL_info,-8(%rbp)
	movq %rax,%rsi
	movq 24(%rbp),%r14
	addq $-8,%rbp
	jmp GHC.Integer.Logarithms.Internals.roundingMode#_entry
	.size _s2UII, .-_s2UII


==================== Asm code ====================
2018-03-16 15:57:31.479706139 UTC

.section .text
.align 8
_c34zL:
_c34zL:
	movq 24(%rbp),%rax
	movq 8(%rbp),%rcx
	movq 40(%rbp),%rdx
	movq 16(%rbp),%rsi
	testq %rbx,%rbx
	je _c34At
_u34Cg:
	cmpq $2,%rbx
	je _c34AH
_c34zS:
	movq $block_c34zP_info,(%rbp)
	movq %rsi,%r14
	jmp GHC.Integer.Type.integerToInt_entry
_c34AH:
	movq $block_c34AF_info,32(%rbp)
	movq %rsi,%rbx
	movl $GHC.Float.$fRealDouble1_closure,%esi
	movq %rbx,%r14
	movl $1,%ebx
	subq %rax,%rbx
	subq %rcx,%rbx
	addq %rbx,%rdx
	movq %rdx,40(%rbp)
	addq $32,%rbp
	jmp GHC.Integer.Type.plusInteger_entry
_c34At:
	movl $1,%edi
	subq %rax,%rdi
	subq %rcx,%rdi
	movq %rsi,%rax
	movq %rdx,%rsi
	addq %rdi,%rsi
	movq %rax,%r14
	addq $48,%rbp
	jmp GHC.Integer.Type.encodeDoubleInteger_entry
	.size _c34zL, .-_c34zL


==================== Asm code ====================
2018-03-16 15:57:31.480479656 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34zL_info:
	.quad	_c34zL
	.quad	1861
	.quad	38654705694
	.quad	S2VLN_srt+8


==================== Asm code ====================
2018-03-16 15:57:31.481191402 UTC

.section .text
.align 8
_c34AF:
_c34AF:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.encodeDoubleInteger_entry
	.size _c34AF, .-_c34AF


==================== Asm code ====================
2018-03-16 15:57:31.481860372 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34AF_info:
	.quad	_c34AF
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.482754727 UTC

.section .text
.align 8
_c34zP:
_c34zP:
	movq 24(%rbp),%rax
	movq 8(%rbp),%rcx
	movq 40(%rbp),%rdx
	movq 16(%rbp),%rsi
	testb $1,%bl
	je _c34Am
_c34Ae:
	movq $block_c34Ac_info,32(%rbp)
	movq %rsi,%rbx
	movl $GHC.Float.$fRealDouble1_closure,%esi
	movq %rbx,%r14
	movl $1,%ebx
	subq %rax,%rbx
	subq %rcx,%rbx
	addq %rbx,%rdx
	movq %rdx,40(%rbp)
	addq $32,%rbp
	jmp GHC.Integer.Type.plusInteger_entry
_c34Am:
	movl $1,%ebx
	subq %rax,%rbx
	subq %rcx,%rbx
	movq %rsi,%rax
	movq %rdx,%rsi
	addq %rbx,%rsi
	movq %rax,%r14
	addq $48,%rbp
	jmp GHC.Integer.Type.encodeDoubleInteger_entry
	.size _c34zP, .-_c34zP


==================== Asm code ====================
2018-03-16 15:57:31.483514722 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34zP_info:
	.quad	_c34zP
	.quad	1861
	.quad	38654705694
	.quad	S2VLN_srt+8


==================== Asm code ====================
2018-03-16 15:57:31.484253106 UTC

.section .text
.align 8
_c34Ac:
_c34Ac:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.encodeDoubleInteger_entry
	.size _c34Ac, .-_c34Ac


==================== Asm code ====================
2018-03-16 15:57:31.484879953 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34Ac_info:
	.quad	_c34Ac
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.485816146 UTC

.section .text
.align 8
_c34uw:
_c34uw:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c34wL
_c34wG:
	movq $-1,%rax
	subq 8(%rbp),%rax
	cmpq 16(%rbp),%rax
	jl _u34Cj
_c34wE:
	movq %rax,16(%rbp)
	addq $16,%rbp
	jmp _s2UHs
_u34Cj:
	addq $16,%rbp
	jmp _c34wW
_c34wL:
	movq $block_c34wJ_info,(%rbp)
	movq 7(%rbx),%rsi
	xorl %r14d,%r14d
	jmp GHC.Integer.Logarithms.Internals.integerLog2#_step_entry
	.size _c34uw, .-_c34uw


==================== Asm code ====================
2018-03-16 15:57:31.486515105 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34uw_info:
	.quad	_c34uw
	.quad	453
	.quad	47244640286
	.quad	S2VLN_srt+40


==================== Asm code ====================
2018-03-16 15:57:31.487197776 UTC

.section .text
.align 8
_c34wJ:
_c34wJ:
	subq 8(%rbp),%rbx
	cmpq 16(%rbp),%rbx
	jl _u34Cl
_c34wX:
	movq %rbx,16(%rbp)
	addq $16,%rbp
	jmp _s2UHs
_u34Cl:
	addq $16,%rbp
	jmp _c34wW
	.size _c34wJ, .-_c34wJ


==================== Asm code ====================
2018-03-16 15:57:31.487785171 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34wJ_info:
	.quad	_c34wJ
	.quad	453
	.quad	12884901918
	.quad	S2VLN_srt+40


==================== Asm code ====================
2018-03-16 15:57:31.488454211 UTC

.section .text
.align 8
_c34wW:
_c34wW:
	movq (%rbp),%rax
	movq %rax,(%rbp)
	jmp _s2UHs
	.size _c34wW, .-_c34wW


==================== Asm code ====================
2018-03-16 15:57:31.489569865 UTC

.section .text
.align 8
_s2UHs:
_s2UHs:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rbx
	movq (%rbp),%rcx
	cmpq %rax,%rcx
	jge _c34w2
_c34wj:
	subq %rcx,%rax
	testq %rax,%rax
	jl _c34wf
_c34wi:
	movq $block_c34wh_info,-8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $-8,%rbp
	jmp GHC.Integer.Type.shiftLInteger_entry
_c34wf:
	movq $block_c34wh_info,-8(%rbp)
	movq %rax,%rsi
	negq %rsi
	movq %rbx,%r14
	addq $-8,%rbp
	jmp GHC.Integer.Type.shiftRInteger_entry
_c34w0:
	movq %rbx,24(%rbp)
	movq %rdx,16(%rbp)
	jmp _s2UHu
_c34w2:
	movq 24(%rbp),%rdx
	cmpq %rax,%rcx
	je _c34w0
_c34vT:
	subq %rax,%rcx
	testq %rcx,%rcx
	jl _c34vO
_c34vR:
	movq $block_c34vQ_info,-8(%rbp)
	movq %rcx,%rsi
	movq %rdx,%r14
	addq $-8,%rbp
	jmp GHC.Integer.Type.shiftLInteger_entry
_c34vO:
	movq $block_c34vQ_info,-8(%rbp)
	movq %rcx,%rsi
	negq %rsi
	movq %rdx,%r14
	addq $-8,%rbp
	jmp GHC.Integer.Type.shiftRInteger_entry
	.size _s2UHs, .-_s2UHs


==================== Asm code ====================
2018-03-16 15:57:31.490474806 UTC

.section .text
.align 8
_c34vQ:
_c34vQ:
	movq 24(%rbp),%rax
	movq %rbx,24(%rbp)
	movq %rax,32(%rbp)
	addq $8,%rbp
	jmp _s2UHu
	.size _c34vQ, .-_c34vQ


==================== Asm code ====================
2018-03-16 15:57:31.49122423 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34vQ_info:
	.quad	_c34vQ
	.quad	708
	.quad	12884901918
	.quad	S2VLN_srt+40


==================== Asm code ====================
2018-03-16 15:57:31.491924392 UTC

.section .text
.align 8
_c34wh:
_c34wh:
	movq 32(%rbp),%rax
	movq %rbx,32(%rbp)
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp _s2UHu
	.size _c34wh, .-_c34wh


==================== Asm code ====================
2018-03-16 15:57:31.492575474 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34wh_info:
	.quad	_c34wh
	.quad	452
	.quad	12884901918
	.quad	S2VLN_srt+40


==================== Asm code ====================
2018-03-16 15:57:31.493788835 UTC

.section .text
.align 8
_s2UHu:
_s2UHu:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rbx
	testq %rax,%rax
	jl _c34uP
_c34vc:
	movq $block_c34vb_info,-8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $-8,%rbp
	jmp GHC.Integer.Type.shiftLInteger_entry
_c34uP:
	movq $block_c34uN_info,-8(%rbp)
	movq %rax,%rsi
	negq %rsi
	movq %rbx,%r14
	addq $-8,%rbp
	jmp GHC.Integer.Type.shiftRInteger_entry
	.size _s2UHu, .-_s2UHu


==================== Asm code ====================
2018-03-16 15:57:31.495788595 UTC

.section .text
.align 8
_c34uN:
_c34uN:
	movq $block_c34uT_info,(%rbp)
	movq 32(%rbp),%rsi
	movq %rbx,%r14
	jmp GHC.Integer.Type.leInteger#_entry
	.size _c34uN, .-_c34uN


==================== Asm code ====================
2018-03-16 15:57:31.496750622 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34uN_info:
	.quad	_c34uN
	.quad	196
	.quad	4294967326
	.quad	S2VLN_srt+40


==================== Asm code ====================
2018-03-16 15:57:31.49803206 UTC

.section .text
.align 8
_c34uT:
_c34uT:
	movq 24(%rbp),%rax
	cmpq $1,%rbx
	je _c34v5
_c34v0:
	movq %rax,%rdi
	movq 32(%rbp),%rsi
	movq 8(%rbp),%r14
	subq 16(%rbp),%r14
	addq $40,%rbp
	jmp $w$j_r2Upx_entry
_c34v5:
	movq $block_c34v3_info,(%rbp)
	movl $1,%esi
	movq %rax,%r14
	jmp GHC.Integer.Type.shiftLInteger_entry
	.size _c34uT, .-_c34uT


==================== Asm code ====================
2018-03-16 15:57:31.499065945 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34uT_info:
	.quad	_c34uT
	.quad	196
	.quad	4294967326
	.quad	S2VLN_srt+40


==================== Asm code ====================
2018-03-16 15:57:31.500199367 UTC

.section .text
.align 8
_c34v3:
_c34v3:
	movq %rbx,%rdi
	movq 32(%rbp),%rsi
	movl $1,%eax
	subq 16(%rbp),%rax
	movq 8(%rbp),%r14
	addq %rax,%r14
	addq $40,%rbp
	jmp $w$j_r2Upx_entry
	.size _c34v3, .-_c34v3


==================== Asm code ====================
2018-03-16 15:57:31.50109915 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34v3_info:
	.quad	_c34v3
	.quad	452
	.quad	4294967326
	.quad	S2VLN_srt+40


==================== Asm code ====================
2018-03-16 15:57:31.502095789 UTC

.section .text
.align 8
_c34vb:
_c34vb:
	movq $block_c34vg_info,(%rbp)
	movq 32(%rbp),%rsi
	movq %rbx,%r14
	jmp GHC.Integer.Type.leInteger#_entry
	.size _c34vb, .-_c34vb


==================== Asm code ====================
2018-03-16 15:57:31.503057023 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34vb_info:
	.quad	_c34vb
	.quad	196
	.quad	4294967326
	.quad	S2VLN_srt+40


==================== Asm code ====================
2018-03-16 15:57:31.504293135 UTC

.section .text
.align 8
_c34vg:
_c34vg:
	movq 24(%rbp),%rax
	cmpq $1,%rbx
	je _c34vs
_c34vn:
	movq %rax,%rdi
	movq 32(%rbp),%rsi
	movq 8(%rbp),%r14
	subq 16(%rbp),%r14
	addq $40,%rbp
	jmp $w$j_r2Upx_entry
_c34vs:
	movq $block_c34vq_info,(%rbp)
	movl $1,%esi
	movq %rax,%r14
	jmp GHC.Integer.Type.shiftLInteger_entry
	.size _c34vg, .-_c34vg


==================== Asm code ====================
2018-03-16 15:57:31.505741452 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34vg_info:
	.quad	_c34vg
	.quad	196
	.quad	4294967326
	.quad	S2VLN_srt+40


==================== Asm code ====================
2018-03-16 15:57:31.506758626 UTC

.section .text
.align 8
_c34vq:
_c34vq:
	movq %rbx,%rdi
	movq 32(%rbp),%rsi
	movl $1,%eax
	subq 16(%rbp),%rax
	movq 8(%rbp),%r14
	addq %rax,%r14
	addq $40,%rbp
	jmp $w$j_r2Upx_entry
	.size _c34vq, .-_c34vq


==================== Asm code ====================
2018-03-16 15:57:31.507633468 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34vq_info:
	.quad	_c34vq
	.quad	452
	.quad	4294967326
	.quad	S2VLN_srt+40


==================== Asm code ====================
2018-03-16 15:57:31.514810879 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.fromRat''_$sfromRat''1_closure
.type GHC.Float.fromRat''_$sfromRat''1_closure, @object
GHC.Float.fromRat''_$sfromRat''1_closure:
	.quad	GHC.Float.fromRat''_$sfromRat''1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:31.516272607 UTC

.section .text
.align 8
.globl GHC.Float.fromRat''_$sfromRat''1_entry
.type GHC.Float.fromRat''_$sfromRat''1_entry, @object
GHC.Float.fromRat''_$sfromRat''1_entry:
_c34FN:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c34G0
_c34G1:
	movq $block_c34FK_info,-32(%rbp)
	movq %r14,%rbx
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c34FK
_c34FL:
	movq (%rbx),%rax
	jmp *(%rax)
_c34G0:
	movl $GHC.Float.fromRat''_$sfromRat''1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.fromRat''_$sfromRat''1_entry, .-GHC.Float.fromRat''_$sfromRat''1_entry


==================== Asm code ====================
2018-03-16 15:57:31.518600098 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.fromRat''_$sfromRat''1_info
.type GHC.Float.fromRat''_$sfromRat''1_info, @object
GHC.Float.fromRat''_$sfromRat''1_info:
	.quad	GHC.Float.fromRat''_$sfromRat''1_entry
	.quad	0
	.quad	12884901902
	.quad	17179869208
	.quad	S2VLN_srt+80


==================== Asm code ====================
2018-03-16 15:57:31.519859393 UTC

.section .text
.align 8
_c34FK:
_c34FK:
	movq $block_c34FQ_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c34FQ
_c34FR:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c34FK, .-_c34FK


==================== Asm code ====================
2018-03-16 15:57:31.520826603 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34FK_info:
	.quad	_c34FK
	.quad	3
	.quad	4294967326
	.quad	S2VLN_srt+80


==================== Asm code ====================
2018-03-16 15:57:31.52185579 UTC

.section .text
.align 8
_c34FQ:
_c34FQ:
	movq 24(%rbp),%rax
	movq $block_c34FV_info,24(%rbp)
	movq %rax,%r8
	movq 16(%rbp),%rdi
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Float.$w$sfromRat''_entry
	.size _c34FQ, .-_c34FQ


==================== Asm code ====================
2018-03-16 15:57:31.52275452 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34FQ_info:
	.quad	_c34FQ
	.quad	67
	.quad	4294967326
	.quad	S2VLN_srt+80


==================== Asm code ====================
2018-03-16 15:57:31.523821397 UTC

.section .text
.align 8
_c34FV:
_c34FV:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c34G6
_c34G5:
	movq $GHC.Types.D#_con_info,-8(%r12)
	movsd %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c34G6:
	movq $16,904(%r13)
	jmp stg_gc_d1
	.size _c34FV, .-_c34FV


==================== Asm code ====================
2018-03-16 15:57:31.524758021 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34FV_info:
	.quad	_c34FV
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.536209436 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.rationalToDouble_closure
.type GHC.Float.rationalToDouble_closure, @object
GHC.Float.rationalToDouble_closure:
	.quad	GHC.Float.rationalToDouble_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:31.537596764 UTC

.section .text
.align 8
.globl GHC.Float.rationalToDouble_entry
.type GHC.Float.rationalToDouble_entry, @object
GHC.Float.rationalToDouble_entry:
_c34Gz:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c34GA
_c34GB:
	movq $block_c34Gu_info,-24(%rbp)
	movq %rsi,%rax
	movl $GHC.Float.rationalToDouble5_closure,%esi
	movq %r14,%rbx
	movq %rax,%r14
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Integer.Type.eqInteger#_entry
_c34GA:
	movl $GHC.Float.rationalToDouble_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.rationalToDouble_entry, .-GHC.Float.rationalToDouble_entry


==================== Asm code ====================
2018-03-16 15:57:31.53839301 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.rationalToDouble_info
.type GHC.Float.rationalToDouble_info, @object
GHC.Float.rationalToDouble_info:
	.quad	GHC.Float.rationalToDouble_entry
	.quad	0
	.quad	33539399614478
	.quad	8589934607
	.quad	S2VLN_srt+24


==================== Asm code ====================
2018-03-16 15:57:31.539201417 UTC

.section .text
.align 8
_c34Gu:
_c34Gu:
	movq 8(%rbp),%rax
	cmpq $1,%rbx
	je _c34Gy
_c34Gx:
	movq $block_c34GE_info,(%rbp)
	movl $GHC.Float.rationalToDouble5_closure,%esi
	movq %rax,%r14
	jmp GHC.Integer.Type.eqInteger#_entry
_c34Gy:
	movq $block_c34Hr_info,(%rbp)
	movl $GHC.Float.rationalToDouble5_closure,%esi
	movq %rax,%r14
	jmp GHC.Integer.Type.eqInteger#_entry
	.size _c34Gu, .-_c34Gu


==================== Asm code ====================
2018-03-16 15:57:31.539915699 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34Gu_info:
	.quad	_c34Gu
	.quad	2
	.quad	31340376358942
	.quad	S2VLN_srt+24


==================== Asm code ====================
2018-03-16 15:57:31.540763245 UTC

.section .text
.align 8
_c34Hr:
_c34Hr:
	cmpq $1,%rbx
	je _c34HN
_c34Hz:
	movq $block_c34Hw_info,16(%rbp)
	movl $GHC.Float.rationalToDouble5_closure,%esi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.ltInteger#_entry
_c34HN:
	movl $GHC.Float.rationalToDouble1_closure,%ebx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c34Hr, .-_c34Hr


==================== Asm code ====================
2018-03-16 15:57:31.541678082 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34Hr_info:
	.quad	_c34Hr
	.quad	130
	.quad	30790620545054
	.quad	S2VLN_srt+24


==================== Asm code ====================
2018-03-16 15:57:31.543187168 UTC

.section .text
.align 8
_c34Hw:
_c34Hw:
	cmpq $1,%rbx
	je _c34HJ
_c34HF:
	movl $GHC.Float.rationalToDouble3_closure,%ebx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c34HJ:
	movl $GHC.Float.rationalToDouble2_closure,%ebx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c34Hw, .-_c34Hw


==================== Asm code ====================
2018-03-16 15:57:31.543808005 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34Hw_info:
	.quad	_c34Hw
	.quad	0
	.quad	12884901918
	.quad	S2VLN_srt+112


==================== Asm code ====================
2018-03-16 15:57:31.544545159 UTC

.section .text
.align 8
_c34GE:
_c34GE:
	cmpq $1,%rbx
	je _c34Ho
_c34GM:
	movq $block_c34GJ_info,(%rbp)
	movl $GHC.Float.rationalToDouble5_closure,%esi
	movq 8(%rbp),%r14
	jmp GHC.Integer.Type.ltInteger#_entry
_c34Ho:
	movl $GHC.Float.rationalToDouble4_closure+1,%ebx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c34GE, .-_c34GE


==================== Asm code ====================
2018-03-16 15:57:31.54516954 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34GE_info:
	.quad	_c34GE
	.quad	2
	.quad	554050781214
	.quad	S2VLN_srt+24


==================== Asm code ====================
2018-03-16 15:57:31.546012398 UTC

.section .text
.align 8
_c34GJ:
_c34GJ:
	movq 8(%rbp),%rax
	cmpq $1,%rbx
	je _c34Hg
_c34GX:
	movq 16(%rbp),%rbx
	movq $block_c34GQ_info,16(%rbp)
	movq %rbx,%r8
	movq %rax,%rdi
	movl $53,%esi
	movq $-1021,%r14
	addq $16,%rbp
	jmp GHC.Float.$w$sfromRat''_entry
_c34Hg:
	movq $block_c34H3_info,8(%rbp)
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.negateInteger_entry
	.size _c34GJ, .-_c34GJ


==================== Asm code ====================
2018-03-16 15:57:31.546614947 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34GJ_info:
	.quad	_c34GJ
	.quad	2
	.quad	4294967326
	.quad	S2VLN_srt+80


==================== Asm code ====================
2018-03-16 15:57:31.547309031 UTC

.section .text
.align 8
_c34H3:
_c34H3:
	movq 8(%rbp),%rax
	movq $block_c34H7_info,8(%rbp)
	movq %rax,%r8
	movq %rbx,%rdi
	movl $53,%esi
	movq $-1021,%r14
	addq $8,%rbp
	jmp GHC.Float.$w$sfromRat''_entry
	.size _c34H3, .-_c34H3


==================== Asm code ====================
2018-03-16 15:57:31.547933285 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34H3_info:
	.quad	_c34H3
	.quad	1
	.quad	4294967326
	.quad	S2VLN_srt+80


==================== Asm code ====================
2018-03-16 15:57:31.54865922 UTC

.section .text
.align 8
_c34H7:
_c34H7:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c34Hk
_c34Hj:
	movq $GHC.Types.D#_con_info,-8(%r12)
	movsd _n34Ig(%rip),%xmm0
	xorpd %xmm0,%xmm1
	movsd %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c34Hk:
	movq $16,904(%r13)
	jmp stg_gc_d1
	.size _c34H7, .-_c34H7
.section .rodata
.align 8
.align 8
_n34Ig:
	.quad	-9223372036854775808


==================== Asm code ====================
2018-03-16 15:57:31.549418492 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34H7_info:
	.quad	_c34H7
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.550173344 UTC

.section .text
.align 8
_c34GQ:
_c34GQ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c34H0
_c34GZ:
	movq $GHC.Types.D#_con_info,-8(%r12)
	movsd %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c34H0:
	movq $16,904(%r13)
	jmp stg_gc_d1
	.size _c34GQ, .-_c34GQ


==================== Asm code ====================
2018-03-16 15:57:31.550805546 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34GQ_info:
	.quad	_c34GQ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.554102025 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fFractionalDouble_$cfromRational_closure
.type GHC.Float.$fFractionalDouble_$cfromRational_closure, @object
GHC.Float.$fFractionalDouble_$cfromRational_closure:
	.quad	GHC.Float.$fFractionalDouble_$cfromRational_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:31.555011402 UTC

.section .text
.align 8
.globl GHC.Float.$fFractionalDouble_$cfromRational_entry
.type GHC.Float.$fFractionalDouble_$cfromRational_entry, @object
GHC.Float.$fFractionalDouble_$cfromRational_entry:
_c34Ix:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c34Iy
_c34Iz:
	movq $block_c34Iu_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c34Iu
_c34Iv:
	movq (%rbx),%rax
	jmp *(%rax)
_c34Iy:
	movl $GHC.Float.$fFractionalDouble_$cfromRational_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fFractionalDouble_$cfromRational_entry, .-GHC.Float.$fFractionalDouble_$cfromRational_entry


==================== Asm code ====================
2018-03-16 15:57:31.555683467 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fFractionalDouble_$cfromRational_info
.type GHC.Float.$fFractionalDouble_$cfromRational_info, @object
GHC.Float.$fFractionalDouble_$cfromRational_info:
	.quad	GHC.Float.$fFractionalDouble_$cfromRational_entry
	.quad	0
	.quad	73014444046
	.quad	4294967301
	.quad	S2VLN_srt+96


==================== Asm code ====================
2018-03-16 15:57:31.556366118 UTC

.section .text
.align 8
_c34Iu:
_c34Iu:
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.Float.rationalToDouble_entry
	.size _c34Iu, .-_c34Iu


==================== Asm code ====================
2018-03-16 15:57:31.556988365 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34Iu_info:
	.quad	_c34Iu
	.quad	0
	.quad	4294967326
	.quad	S2VLN_srt+96


==================== Asm code ====================
2018-03-16 15:57:31.559254295 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fFractionalDouble_closure
.type GHC.Float.$fFractionalDouble_closure, @object
GHC.Float.$fFractionalDouble_closure:
	.quad	GHC.Real.C:Fractional_con_info
	.quad	GHC.Float.$fNumDouble_closure+1
	.quad	GHC.Float.divideDouble_closure+2
	.quad	GHC.Float.$fFractionalDouble_$crecip_closure+1
	.quad	GHC.Float.$fFractionalDouble_$cfromRational_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:31.562908806 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fEnumDouble_$snumericEnumFromThen_closure
.type GHC.Float.$fEnumDouble_$snumericEnumFromThen_closure, @object
GHC.Float.$fEnumDouble_$snumericEnumFromThen_closure:
	.quad	GHC.Float.$fEnumDouble_$snumericEnumFromThen_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:31.56377126 UTC

.section .text
.align 8
.globl GHC.Float.$fEnumDouble_$snumericEnumFromThen_entry
.type GHC.Float.$fEnumDouble_$snumericEnumFromThen_entry, @object
GHC.Float.$fEnumDouble_$snumericEnumFromThen_entry:
_c34IV:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c34IW
_c34IX:
	movq $block_c34IS_info,-8(%rbp)
	movq %rsi,%rdi
	movq %r14,%rsi
	movl $GHC.Float.$fFractionalDouble_closure+1,%r14d
	addq $-8,%rbp
	jmp GHC.Real.$wnumericEnumFromThen_entry
_c34IW:
	movl $GHC.Float.$fEnumDouble_$snumericEnumFromThen_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fEnumDouble_$snumericEnumFromThen_entry, .-GHC.Float.$fEnumDouble_$snumericEnumFromThen_entry


==================== Asm code ====================
2018-03-16 15:57:31.564470856 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fEnumDouble_$snumericEnumFromThen_info
.type GHC.Float.$fEnumDouble_$snumericEnumFromThen_info, @object
GHC.Float.$fEnumDouble_$snumericEnumFromThen_info:
	.quad	GHC.Float.$fEnumDouble_$snumericEnumFromThen_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S2VLN_srt+136


==================== Asm code ====================
2018-03-16 15:57:31.565217124 UTC

.section .text
.align 8
_c34IS:
_c34IS:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c34J0
_c34IZ:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c34J0:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c34IS, .-_c34IS


==================== Asm code ====================
2018-03-16 15:57:31.565838818 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34IS_info:
	.quad	_c34IS
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.56920348 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fEnumDouble_$snumericEnumFrom_closure
.type GHC.Float.$fEnumDouble_$snumericEnumFrom_closure, @object
GHC.Float.$fEnumDouble_$snumericEnumFrom_closure:
	.quad	GHC.Float.$fEnumDouble_$snumericEnumFrom_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:31.570227467 UTC

.section .text
.align 8
.globl GHC.Float.$fEnumDouble_$snumericEnumFrom_entry
.type GHC.Float.$fEnumDouble_$snumericEnumFrom_entry, @object
GHC.Float.$fEnumDouble_$snumericEnumFrom_entry:
_c34Jh:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c34Ji
_c34Jj:
	movq $block_c34Je_info,-8(%rbp)
	movq %r14,%rsi
	movl $GHC.Float.$fFractionalDouble_closure+1,%r14d
	addq $-8,%rbp
	jmp GHC.Real.$wnumericEnumFrom_entry
_c34Ji:
	movl $GHC.Float.$fEnumDouble_$snumericEnumFrom_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fEnumDouble_$snumericEnumFrom_entry, .-GHC.Float.$fEnumDouble_$snumericEnumFrom_entry


==================== Asm code ====================
2018-03-16 15:57:31.570930021 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fEnumDouble_$snumericEnumFrom_info
.type GHC.Float.$fEnumDouble_$snumericEnumFrom_info, @object
GHC.Float.$fEnumDouble_$snumericEnumFrom_info:
	.quad	GHC.Float.$fEnumDouble_$snumericEnumFrom_entry
	.quad	0
	.quad	55834574862
	.quad	4294967301
	.quad	S2VLN_srt+136


==================== Asm code ====================
2018-03-16 15:57:31.571728766 UTC

.section .text
.align 8
_c34Je:
_c34Je:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c34Jm
_c34Jl:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c34Jm:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c34Je, .-_c34Je


==================== Asm code ====================
2018-03-16 15:57:31.572433609 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34Je_info:
	.quad	_c34Je
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.576199043 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.rationalToFloat1_closure
.type GHC.Float.rationalToFloat1_closure, @object
GHC.Float.rationalToFloat1_closure:
	.quad	GHC.Float.rationalToFloat1_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:31.577308737 UTC

.section .text
.align 8
.globl GHC.Float.rationalToFloat1_entry
.type GHC.Float.rationalToFloat1_entry, @object
GHC.Float.rationalToFloat1_entry:
_c34JE:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c34JH
_c34JI:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c34JK
_c34JJ:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c34JB
_c34JA:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq $GHC.Types.F#_con_info,-8(%r12)
	xorps %xmm0,%xmm0
	xorps %xmm1,%xmm1
	divss %xmm0,%xmm1
	movss %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c34JK:
	movq $16,904(%r13)
_c34JH:
	jmp *-16(%r13)
_c34JB:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Float.rationalToFloat1_entry, .-GHC.Float.rationalToFloat1_entry


==================== Asm code ====================
2018-03-16 15:57:31.578127239 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.rationalToFloat1_info
.type GHC.Float.rationalToFloat1_info, @object
GHC.Float.rationalToFloat1_info:
	.quad	GHC.Float.rationalToFloat1_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:57:31.58140813 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.rationalToFloat2_closure
.type GHC.Float.rationalToFloat2_closure, @object
GHC.Float.rationalToFloat2_closure:
	.quad	GHC.Float.rationalToFloat2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:31.582445216 UTC

.section .text
.align 8
.globl GHC.Float.rationalToFloat2_entry
.type GHC.Float.rationalToFloat2_entry, @object
GHC.Float.rationalToFloat2_entry:
_c34K4:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c34K7
_c34K8:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c34Ka
_c34K9:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c34K1
_c34K0:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq $GHC.Types.F#_con_info,-8(%r12)
	xorps %xmm0,%xmm0
	movss _n34Kf(%rip),%xmm1
	divss %xmm0,%xmm1
	movss %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c34Ka:
	movq $16,904(%r13)
_c34K7:
	jmp *-16(%r13)
_c34K1:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Float.rationalToFloat2_entry, .-GHC.Float.rationalToFloat2_entry
.section .rodata
.align 8
.align 4
_n34Kf:
	.byte	0
	.byte	0
	.byte	128
	.byte	191


==================== Asm code ====================
2018-03-16 15:57:31.58317423 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.rationalToFloat2_info
.type GHC.Float.rationalToFloat2_info, @object
GHC.Float.rationalToFloat2_info:
	.quad	GHC.Float.rationalToFloat2_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:57:31.586789398 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.rationalToFloat3_closure
.type GHC.Float.rationalToFloat3_closure, @object
GHC.Float.rationalToFloat3_closure:
	.quad	GHC.Float.rationalToFloat3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:31.587829176 UTC

.section .text
.align 8
.globl GHC.Float.rationalToFloat3_entry
.type GHC.Float.rationalToFloat3_entry, @object
GHC.Float.rationalToFloat3_entry:
_c34Kv:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c34Ky
_c34Kz:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c34KB
_c34KA:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c34Ks
_c34Kr:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq $GHC.Types.F#_con_info,-8(%r12)
	xorps %xmm0,%xmm0
	movss _n34KG(%rip),%xmm1
	divss %xmm0,%xmm1
	movss %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c34KB:
	movq $16,904(%r13)
_c34Ky:
	jmp *-16(%r13)
_c34Ks:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Float.rationalToFloat3_entry, .-GHC.Float.rationalToFloat3_entry
.section .rodata
.align 8
.align 4
_n34KG:
	.byte	0
	.byte	0
	.byte	128
	.byte	63


==================== Asm code ====================
2018-03-16 15:57:31.58858512 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.rationalToFloat3_info
.type GHC.Float.rationalToFloat3_info, @object
GHC.Float.rationalToFloat3_info:
	.quad	GHC.Float.rationalToFloat3_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:57:31.590408602 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.rationalToFloat4_closure
.type GHC.Float.rationalToFloat4_closure, @object
GHC.Float.rationalToFloat4_closure:
	.quad	GHC.Types.F#_con_info
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.long	0


==================== Asm code ====================
2018-03-16 15:57:31.596929643 UTC

.section .data
.align 8
.align 1
$w$j1_r2Upy_closure:
	.quad	$w$j1_r2Upy_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:31.597910386 UTC

.section .text
.align 8
$w$j1_r2Upy_entry:
_c34KY:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c34KZ
_c34L0:
	movq $block_c34KT_info,-32(%rbp)
	movq %rsi,%rax
	movl $GHC.Float.rationalToDouble5_closure,%esi
	movq %r14,%rbx
	movq %rdi,%r14
	movq %rbx,-24(%rbp)
	movq %rax,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-32,%rbp
	jmp GHC.Integer.Type.eqInteger#_entry
_c34KZ:
	movl $$w$j1_r2Upy_closure,%ebx
	jmp *-8(%r13)
	.size $w$j1_r2Upy_entry, .-$w$j1_r2Upy_entry


==================== Asm code ====================
2018-03-16 15:57:31.598637884 UTC

.section .data.rel.ro
.align 8
.align 1
$w$j1_r2Upy_info:
	.quad	$w$j1_r2Upy_entry
	.quad	0
	.quad	4503664051879950
	.quad	12884901907
	.quad	S2VLN_srt+8


==================== Asm code ====================
2018-03-16 15:57:31.599340661 UTC

.section .text
.align 8
_c34KT:
_c34KT:
	cmpq $1,%rbx
	je _c34KX
_c34KW:
	movq $block_c34L3_info,(%rbp)
	movq 24(%rbp),%rsi
	movq 16(%rbp),%r14
	jmp GHC.Integer.Type.quotRemInteger_entry
_c34KX:
	movl $GHC.Real.divZeroError_closure,%ebx
	addq $32,%rbp
	jmp stg_ap_0_fast
	.size _c34KT, .-_c34KT


==================== Asm code ====================
2018-03-16 15:57:31.599981184 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34KT_info:
	.quad	_c34KT
	.quad	67
	.quad	47244640286
	.quad	S2VLN_srt+8


==================== Asm code ====================
2018-03-16 15:57:31.600587013 UTC

.section .text
.align 8
_c34L3:
_c34L3:
	movq $block_c34L5_info,(%rbp)
	movl $1,%esi
	movq %rbx,16(%rbp)
	jmp GHC.Integer.Type.shiftLInteger_entry
	.size _c34L3, .-_c34L3


==================== Asm code ====================
2018-03-16 15:57:31.60130528 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34L3_info:
	.quad	_c34L3
	.quad	195
	.quad	38654705694
	.quad	S2VLN_srt+8


==================== Asm code ====================
2018-03-16 15:57:31.601922803 UTC

.section .text
.align 8
_c34L5:
_c34L5:
	movq $block_c34Lb_info,(%rbp)
	movq 24(%rbp),%rsi
	movq %rbx,%r14
	jmp GHC.Integer.Type.compareInteger_entry
	.size _c34L5, .-_c34L5


==================== Asm code ====================
2018-03-16 15:57:31.602513276 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34L5_info:
	.quad	_c34L5
	.quad	67
	.quad	38654705694
	.quad	S2VLN_srt+8


==================== Asm code ====================
2018-03-16 15:57:31.603312131 UTC

.section .text
.align 8
_c34Lb:
_c34Lb:
	movq 16(%rbp),%rax
	andl $7,%ebx
	cmpq $3,%rbx
	jb _u34LZ
_c34LQ:
	movq $block_c34LO_info,(%rbp)
	movl $GHC.Float.$fRealDouble1_closure,%esi
	movq %rax,%r14
	jmp GHC.Integer.Type.plusInteger_entry
_u34M0:
	addq $8,%rbp
	jmp _c34LI
_u34LZ:
	cmpq $2,%rbx
	jb _u34M0
_c34Ln:
	movq $block_c34Ll_info,(%rbp)
	movq %rax,%r14
	jmp GHC.Integer.Type.integerToInt_entry
	.size _c34Lb, .-_c34Lb


==================== Asm code ====================
2018-03-16 15:57:31.60401363 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34Lb_info:
	.quad	_c34Lb
	.quad	323
	.quad	38654705694
	.quad	S2VLN_srt+8


==================== Asm code ====================
2018-03-16 15:57:31.604765425 UTC

.section .text
.align 8
_c34Ll:
_c34Ll:
	testb $1,%bl
	je _u34M1
_c34LA:
	movq $block_c34Ly_info,(%rbp)
	movl $GHC.Float.$fRealDouble1_closure,%esi
	movq 16(%rbp),%r14
	jmp GHC.Integer.Type.plusInteger_entry
_u34M1:
	addq $8,%rbp
	jmp _c34LI
	.size _c34Ll, .-_c34Ll


==================== Asm code ====================
2018-03-16 15:57:31.605525498 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34Ll_info:
	.quad	_c34Ll
	.quad	323
	.quad	38654705694
	.quad	S2VLN_srt+8


==================== Asm code ====================
2018-03-16 15:57:31.606241192 UTC

.section .text
.align 8
_c34LI:
_c34LI:
	movq (%rbp),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Integer.Type.encodeFloatInteger_entry
	.size _c34LI, .-_c34LI


==================== Asm code ====================
2018-03-16 15:57:31.607474615 UTC

.section .text
.align 8
_c34Ly:
_c34Ly:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $32,%rbp
	jmp GHC.Integer.Type.encodeFloatInteger_entry
	.size _c34Ly, .-_c34Ly


==================== Asm code ====================
2018-03-16 15:57:31.608064237 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34Ly_info:
	.quad	_c34Ly
	.quad	451
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.608728558 UTC

.section .text
.align 8
_c34LO:
_c34LO:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $32,%rbp
	jmp GHC.Integer.Type.encodeFloatInteger_entry
	.size _c34LO, .-_c34LO


==================== Asm code ====================
2018-03-16 15:57:31.609842194 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34LO_info:
	.quad	_c34LO
	.quad	451
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.635172513 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$w$sfromRat''1_closure
.type GHC.Float.$w$sfromRat''1_closure, @object
GHC.Float.$w$sfromRat''1_closure:
	.quad	GHC.Float.$w$sfromRat''1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:31.63609297 UTC

.section .text
.align 8
.globl GHC.Float.$w$sfromRat''1_slow
.type GHC.Float.$w$sfromRat''1_slow, @object
GHC.Float.$w$sfromRat''1_slow:
_c34My:
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $32,%rbp
	jmp GHC.Float.$w$sfromRat''1_entry
	.size GHC.Float.$w$sfromRat''1_slow, .-GHC.Float.$w$sfromRat''1_slow


==================== Asm code ====================
2018-03-16 15:57:31.637037772 UTC

.section .text
.align 8
.globl GHC.Float.$w$sfromRat''1_entry
.type GHC.Float.$w$sfromRat''1_entry, @object
GHC.Float.$w$sfromRat''1_entry:
_c34ML:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c34MM
_c34MN:
	movq $block_c34ME_info,-40(%rbp)
	movq %r8,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _c34ME
_c34MF:
	movq (%rbx),%rax
	jmp *(%rax)
_c34MM:
	movl $GHC.Float.$w$sfromRat''1_closure,%ebx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	jmp *-8(%r13)
	.size GHC.Float.$w$sfromRat''1_entry, .-GHC.Float.$w$sfromRat''1_entry


==================== Asm code ====================
2018-03-16 15:57:31.638238648 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$w$sfromRat''1_info
.type GHC.Float.$w$sfromRat''1_info, @object
GHC.Float.$w$sfromRat''1_info:
	.quad	GHC.Float.$w$sfromRat''1_entry
	.quad	0
	.quad	13512899121119246
	.quad	17179869184
	.quad	S2VLN_srt+8
	.quad	196
	.quad	GHC.Float.$w$sfromRat''1_slow


==================== Asm code ====================
2018-03-16 15:57:31.639071696 UTC

.section .text
.align 8
_c34ME:
_c34ME:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c34MJ
_c34MI:
	movq $1,-8(%rbp)
	movq $-1,(%rbp)
	addq $-8,%rbp
	jmp _s2UK7
_c34MJ:
	movq $block_c34TW_info,(%rbp)
	movq 7(%rbx),%rsi
	xorl %r14d,%r14d
	jmp GHC.Integer.Logarithms.Internals.integerLog2IsPowerOf2#_couldBe_entry
	.size _c34ME, .-_c34ME


==================== Asm code ====================
2018-03-16 15:57:31.640588807 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34ME_info:
	.quad	_c34ME
	.quad	196
	.quad	4505699866378270
	.quad	S2VLN_srt+8


==================== Asm code ====================
2018-03-16 15:57:31.641454012 UTC

.section .text
.align 8
_c34TW:
_c34TW:
	movq %rbx,(%rbp)
	movq %r14,-8(%rbp)
	addq $-8,%rbp
	jmp _s2UK7
	.size _c34TW, .-_c34TW


==================== Asm code ====================
2018-03-16 15:57:31.642063189 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34TW_info:
	.quad	_c34TW
	.quad	196
	.quad	4505699866378270
	.quad	S2VLN_srt+8


==================== Asm code ====================
2018-03-16 15:57:31.642884329 UTC

.section .text
.align 8
_s2UK7:
_s2UK7:
	movq 32(%rbp),%rax
	cmpq $0,(%rbp)
	je _c34TA
_c34OR:
	movq $block_c34MW_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c34MW
_c34OS:
	movq (%rbx),%rax
	jmp *(%rax)
_c34TA:
	movq $block_c34Pr_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c34Pr
_c34TB:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _s2UK7, .-_s2UK7


==================== Asm code ====================
2018-03-16 15:57:31.643760653 UTC

.section .text
.align 8
_c34Pr:
_c34Pr:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c34TM
_c34TH:
	movq $-1,40(%rbp)
	addq $8,%rbp
	jmp _s2UKL
_c34TM:
	movq $block_c34TK_info,(%rbp)
	movq 7(%rbx),%rsi
	xorl %r14d,%r14d
	jmp GHC.Integer.Logarithms.Internals.integerLog2#_step_entry
	.size _c34Pr, .-_c34Pr


==================== Asm code ====================
2018-03-16 15:57:31.644394476 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34Pr_info:
	.quad	_c34Pr
	.quad	1477
	.quad	2100239007774
	.quad	S2VLN_srt+8


==================== Asm code ====================
2018-03-16 15:57:31.645035001 UTC

.section .text
.align 8
_c34TK:
_c34TK:
	movq %rbx,40(%rbp)
	addq $8,%rbp
	jmp _s2UKL
	.size _c34TK, .-_c34TK


==================== Asm code ====================
2018-03-16 15:57:31.645727447 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34TK_info:
	.quad	_c34TK
	.quad	1477
	.quad	1550483193886
	.quad	S2VLN_srt+8


==================== Asm code ====================
2018-03-16 15:57:31.647017275 UTC

.section .text
.align 8
_s2UKL:
_s2UKL:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rbx
	movq 24(%rbp),%rcx
	movq (%rbp),%rdx
	movq 32(%rbp),%rsi
	movq %rdx,%rdi
	addq %rax,%rdi
	decq %rdi
	cmpq %rdi,%rsi
	jl _c34RO
_c34Tz:
	cmpq %rbx,%rsi
	jge _c34Tx
_c34Ty:
	movq %rdx,%rsi
	negq %rsi
	movq %rcx,%r14
	addq $40,%rbp
	jmp GHC.Integer.Type.encodeFloatInteger_entry
_c34Qm:
	leaq 1(%rsi),%rax
	cmpq %rax,%rdx
	jle _c34PZ
_u34UT:
	addq $40,%rbp
	jmp _c34Qk
_c34Tx:
	leaq 1(%rsi),%rax
	subq %rbx,%rax
	negq %rax
	testq %rax,%rax
	jl _c34Tk
_c34Tr:
	movq $block_c34Tq_info,-8(%rbp)
	movq %rax,%rsi
	movq %rcx,%r14
	addq $-8,%rbp
	jmp GHC.Integer.Type.shiftLInteger_entry
_c34Tk:
	movq $block_c34Ti_info,-8(%rbp)
	movq %rax,%rsi
	negq %rsi
	movq %rcx,%r14
	addq $-8,%rbp
	jmp GHC.Integer.Type.shiftRInteger_entry
_c34RO:
	movq %rax,%rdi
	subq %rbx,%rdi
	addq %rdi,%rdx
	testq %rdx,%rdx
	jg _c34RL
_c34RM:
	movq %rax,%rsi
	subq %rbx,%rsi
	subq %rdx,%rsi
	movq %rcx,%r14
	addq $40,%rbp
	jmp GHC.Integer.Type.encodeFloatInteger_entry
_c34RL:
	cmpq %rsi,%rdx
	jg _c34Qm
_c34RJ:
	movq %rdx,%rax
	negq %rax
	testq %rax,%rax
	jl _c34Rx
_c34RE:
	movq $block_c34RD_info,(%rbp)
	movq %rax,%rsi
	movq %rcx,%r14
	movq %rdx,32(%rbp)
	jmp GHC.Integer.Type.shiftLInteger_entry
_c34Rx:
	movq $block_c34Rv_info,(%rbp)
	movq %rax,%rsi
	negq %rsi
	movq %rcx,%r14
	movq %rdx,32(%rbp)
	jmp GHC.Integer.Type.shiftRInteger_entry
_c34PZ:
	movq $block_c34PX_info,(%rbp)
	movq %rcx,%rbx
	testb $7,%bl
	jne _c34PX
_c34Q0:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _s2UKL, .-_s2UKL


==================== Asm code ====================
2018-03-16 15:57:31.648135008 UTC

.section .text
.align 8
_c34PX:
_c34PX:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c34Qb
_c34Q6:
	movq 8(%rbp),%rsi
	subq 16(%rbp),%rsi
	movl $GHC.Float.$fRealDouble1_closure,%r14d
	addq $40,%rbp
	jmp GHC.Integer.Type.encodeFloatInteger_entry
_c34Qb:
	movq $block_c34Q9_info,(%rbp)
	movq 7(%rbx),%rsi
	xorl %r14d,%r14d
	jmp GHC.Integer.Logarithms.Internals.integerLog2IsPowerOf2#_couldBe_entry
	.size _c34PX, .-_c34PX


==================== Asm code ====================
2018-03-16 15:57:31.648794213 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34PX_info:
	.quad	_c34PX
	.quad	964
	.quad	141733920798
	.quad	S2VLN_srt+32


==================== Asm code ====================
2018-03-16 15:57:31.649597212 UTC

.section .text
.align 8
_c34Q9:
_c34Q9:
	testq %r14,%r14
	je _u34UU
_c34Qi:
	movq 8(%rbp),%rsi
	subq 16(%rbp),%rsi
	movl $GHC.Float.$fRealDouble1_closure,%r14d
	addq $40,%rbp
	jmp GHC.Integer.Type.encodeFloatInteger_entry
_u34UU:
	addq $40,%rbp
	jmp _c34Qk
	.size _c34Q9, .-_c34Q9


==================== Asm code ====================
2018-03-16 15:57:31.650241215 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34Q9_info:
	.quad	_c34Q9
	.quad	964
	.quad	4294967326
	.quad	S2VLN_srt+32


==================== Asm code ====================
2018-03-16 15:57:31.650915877 UTC

.section .text
.align 8
_c34Qk:
_c34Qk:
	xorps %xmm1,%xmm1
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c34Qk, .-_c34Qk


==================== Asm code ====================
2018-03-16 15:57:31.651601374 UTC

.section .text
.align 8
_c34Rv:
_c34Rv:
	movq %rbx,(%rbp)
	jmp _s2UL5
	.size _c34Rv, .-_c34Rv


==================== Asm code ====================
2018-03-16 15:57:31.652198172 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34Rv_info:
	.quad	_c34Rv
	.quad	708
	.quad	313532612638
	.quad	S2VLN_srt+8


==================== Asm code ====================
2018-03-16 15:57:31.652823732 UTC

.section .text
.align 8
_c34RD:
_c34RD:
	movq %rbx,(%rbp)
	jmp _s2UL5
	.size _c34RD, .-_c34RD


==================== Asm code ====================
2018-03-16 15:57:31.65348534 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34RD_info:
	.quad	_c34RD
	.quad	708
	.quad	313532612638
	.quad	S2VLN_srt+8


==================== Asm code ====================
2018-03-16 15:57:31.654197232 UTC

.section .text
.align 8
_s2UL5:
_s2UL5:
	movq $block_c34QA_info,-8(%rbp)
	movq 32(%rbp),%rax
	leaq -1(%rax),%rsi
	movq 24(%rbp),%r14
	addq $-8,%rbp
	jmp GHC.Integer.Logarithms.Internals.roundingMode#_entry
	.size _s2UL5, .-_s2UL5


==================== Asm code ====================
2018-03-16 15:57:31.655040902 UTC

.section .text
.align 8
_c34QA:
_c34QA:
	movq 16(%rbp),%rax
	movq 24(%rbp),%rcx
	movq 8(%rbp),%rdx
	testq %rbx,%rbx
	je _c34QS
_u34UF:
	cmpq $1,%rbx
	je _c34QX
_c34QK:
	movq $block_c34QH_info,32(%rbp)
	movl $GHC.Float.$fRealDouble1_closure,%esi
	movq %rdx,%r14
	subq %rcx,%rax
	movq %rax,40(%rbp)
	addq $32,%rbp
	jmp GHC.Integer.Type.plusInteger_entry
_c34QX:
	movq $block_c34QV_info,(%rbp)
	movq %rdx,%r14
	jmp GHC.Integer.Type.integerToInt_entry
_c34QS:
	movq %rax,%rsi
	subq %rcx,%rsi
	movq %rdx,%r14
	addq $48,%rbp
	jmp GHC.Integer.Type.encodeFloatInteger_entry
	.size _c34QA, .-_c34QA


==================== Asm code ====================
2018-03-16 15:57:31.655741639 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34QA_info:
	.quad	_c34QA
	.quad	1925
	.quad	38654705694
	.quad	S2VLN_srt+8


==================== Asm code ====================
2018-03-16 15:57:31.656492305 UTC

.section .text
.align 8
_c34QV:
_c34QV:
	movq 16(%rbp),%rax
	movq 24(%rbp),%rcx
	movq 8(%rbp),%rdx
	testb $1,%bl
	je _c34Rl
_c34Rd:
	movq $block_c34Rb_info,32(%rbp)
	movl $GHC.Float.$fRealDouble1_closure,%esi
	movq %rdx,%r14
	subq %rcx,%rax
	movq %rax,40(%rbp)
	addq $32,%rbp
	jmp GHC.Integer.Type.plusInteger_entry
_c34Rl:
	movq %rax,%rsi
	subq %rcx,%rsi
	movq %rdx,%r14
	addq $48,%rbp
	jmp GHC.Integer.Type.encodeFloatInteger_entry
	.size _c34QV, .-_c34QV


==================== Asm code ====================
2018-03-16 15:57:31.657150931 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34QV_info:
	.quad	_c34QV
	.quad	1925
	.quad	38654705694
	.quad	S2VLN_srt+8


==================== Asm code ====================
2018-03-16 15:57:31.657845181 UTC

.section .text
.align 8
_c34Rb:
_c34Rb:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.encodeFloatInteger_entry
	.size _c34Rb, .-_c34Rb


==================== Asm code ====================
2018-03-16 15:57:31.658456636 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34Rb_info:
	.quad	_c34Rb
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.659056474 UTC

.section .text
.align 8
_c34QH:
_c34QH:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.encodeFloatInteger_entry
	.size _c34QH, .-_c34QH


==================== Asm code ====================
2018-03-16 15:57:31.659647592 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34QH_info:
	.quad	_c34QH
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.660260738 UTC

.section .text
.align 8
_c34Ti:
_c34Ti:
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp _s2ULr
	.size _c34Ti, .-_c34Ti


==================== Asm code ====================
2018-03-16 15:57:31.66089568 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34Ti_info:
	.quad	_c34Ti
	.quad	1477
	.quad	313532612638
	.quad	S2VLN_srt+8


==================== Asm code ====================
2018-03-16 15:57:31.661635772 UTC

.section .text
.align 8
_c34Tq:
_c34Tq:
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp _s2ULr
	.size _c34Tq, .-_c34Tq


==================== Asm code ====================
2018-03-16 15:57:31.662212798 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34Tq_info:
	.quad	_c34Tq
	.quad	1477
	.quad	313532612638
	.quad	S2VLN_srt+8


==================== Asm code ====================
2018-03-16 15:57:31.662917977 UTC

.section .text
.align 8
_s2ULr:
_s2ULr:
	movq 32(%rbp),%rax
	subq 16(%rbp),%rax
	movq $block_c34Sb_info,-8(%rbp)
	movq %rax,%rsi
	movq 24(%rbp),%r14
	addq $-8,%rbp
	jmp GHC.Integer.Logarithms.Internals.roundingMode#_entry
	.size _s2ULr, .-_s2ULr


==================== Asm code ====================
2018-03-16 15:57:31.663861171 UTC

.section .text
.align 8
_c34Sb:
_c34Sb:
	movq 24(%rbp),%rax
	movq 8(%rbp),%rcx
	movq 40(%rbp),%rdx
	movq 16(%rbp),%rsi
	testq %rbx,%rbx
	je _c34ST
_u34UG:
	cmpq $2,%rbx
	je _c34T7
_c34Si:
	movq $block_c34Sf_info,(%rbp)
	movq %rsi,%r14
	jmp GHC.Integer.Type.integerToInt_entry
_c34T7:
	movq $block_c34T5_info,32(%rbp)
	movq %rsi,%rbx
	movl $GHC.Float.$fRealDouble1_closure,%esi
	movq %rbx,%r14
	movl $1,%ebx
	subq %rax,%rbx
	subq %rcx,%rbx
	addq %rbx,%rdx
	movq %rdx,40(%rbp)
	addq $32,%rbp
	jmp GHC.Integer.Type.plusInteger_entry
_c34ST:
	movl $1,%edi
	subq %rax,%rdi
	subq %rcx,%rdi
	movq %rsi,%rax
	movq %rdx,%rsi
	addq %rdi,%rsi
	movq %rax,%r14
	addq $48,%rbp
	jmp GHC.Integer.Type.encodeFloatInteger_entry
	.size _c34Sb, .-_c34Sb


==================== Asm code ====================
2018-03-16 15:57:31.664628608 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34Sb_info:
	.quad	_c34Sb
	.quad	1861
	.quad	38654705694
	.quad	S2VLN_srt+8


==================== Asm code ====================
2018-03-16 15:57:31.665451105 UTC

.section .text
.align 8
_c34T5:
_c34T5:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.encodeFloatInteger_entry
	.size _c34T5, .-_c34T5


==================== Asm code ====================
2018-03-16 15:57:31.666079198 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34T5_info:
	.quad	_c34T5
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.666939483 UTC

.section .text
.align 8
_c34Sf:
_c34Sf:
	movq 24(%rbp),%rax
	movq 8(%rbp),%rcx
	movq 40(%rbp),%rdx
	movq 16(%rbp),%rsi
	testb $1,%bl
	je _c34SM
_c34SE:
	movq $block_c34SC_info,32(%rbp)
	movq %rsi,%rbx
	movl $GHC.Float.$fRealDouble1_closure,%esi
	movq %rbx,%r14
	movl $1,%ebx
	subq %rax,%rbx
	subq %rcx,%rbx
	addq %rbx,%rdx
	movq %rdx,40(%rbp)
	addq $32,%rbp
	jmp GHC.Integer.Type.plusInteger_entry
_c34SM:
	movl $1,%ebx
	subq %rax,%rbx
	subq %rcx,%rbx
	movq %rsi,%rax
	movq %rdx,%rsi
	addq %rbx,%rsi
	movq %rax,%r14
	addq $48,%rbp
	jmp GHC.Integer.Type.encodeFloatInteger_entry
	.size _c34Sf, .-_c34Sf


==================== Asm code ====================
2018-03-16 15:57:31.667730481 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34Sf_info:
	.quad	_c34Sf
	.quad	1861
	.quad	38654705694
	.quad	S2VLN_srt+8


==================== Asm code ====================
2018-03-16 15:57:31.668393918 UTC

.section .text
.align 8
_c34SC:
_c34SC:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.encodeFloatInteger_entry
	.size _c34SC, .-_c34SC


==================== Asm code ====================
2018-03-16 15:57:31.66895895 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34SC_info:
	.quad	_c34SC
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.670382129 UTC

.section .text
.align 8
_c34MW:
_c34MW:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c34Pb
_c34P6:
	movq $-1,%rax
	subq 8(%rbp),%rax
	cmpq 16(%rbp),%rax
	jl _u34UJ
_c34P4:
	movq %rax,16(%rbp)
	addq $16,%rbp
	jmp _s2UKb
_u34UJ:
	addq $16,%rbp
	jmp _c34Pm
_c34Pb:
	movq $block_c34P9_info,(%rbp)
	movq 7(%rbx),%rsi
	xorl %r14d,%r14d
	jmp GHC.Integer.Logarithms.Internals.integerLog2#_step_entry
	.size _c34MW, .-_c34MW


==================== Asm code ====================
2018-03-16 15:57:31.671117144 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34MW_info:
	.quad	_c34MW
	.quad	453
	.quad	140758963191838
	.quad	S2VLN_srt+48


==================== Asm code ====================
2018-03-16 15:57:31.671847958 UTC

.section .text
.align 8
_c34P9:
_c34P9:
	subq 8(%rbp),%rbx
	cmpq 16(%rbp),%rbx
	jl _u34UL
_c34Pn:
	movq %rbx,16(%rbp)
	addq $16,%rbp
	jmp _s2UKb
_u34UL:
	addq $16,%rbp
	jmp _c34Pm
	.size _c34P9, .-_c34P9


==================== Asm code ====================
2018-03-16 15:57:31.672451804 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34P9_info:
	.quad	_c34P9
	.quad	453
	.quad	140741783322654
	.quad	S2VLN_srt+48


==================== Asm code ====================
2018-03-16 15:57:31.673112549 UTC

.section .text
.align 8
_c34Pm:
_c34Pm:
	movq (%rbp),%rax
	movq %rax,(%rbp)
	jmp _s2UKb
	.size _c34Pm, .-_c34Pm


==================== Asm code ====================
2018-03-16 15:57:31.674132136 UTC

.section .text
.align 8
_s2UKb:
_s2UKb:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rbx
	movq (%rbp),%rcx
	cmpq %rax,%rcx
	jge _c34Os
_c34OJ:
	subq %rcx,%rax
	testq %rax,%rax
	jl _c34OF
_c34OI:
	movq $block_c34OH_info,-8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $-8,%rbp
	jmp GHC.Integer.Type.shiftLInteger_entry
_c34OF:
	movq $block_c34OH_info,-8(%rbp)
	movq %rax,%rsi
	negq %rsi
	movq %rbx,%r14
	addq $-8,%rbp
	jmp GHC.Integer.Type.shiftRInteger_entry
_c34Oq:
	movq %rbx,24(%rbp)
	movq %rdx,16(%rbp)
	jmp _s2UKd
_c34Os:
	movq 24(%rbp),%rdx
	cmpq %rax,%rcx
	je _c34Oq
_c34Oj:
	subq %rax,%rcx
	testq %rcx,%rcx
	jl _c34Oe
_c34Oh:
	movq $block_c34Og_info,-8(%rbp)
	movq %rcx,%rsi
	movq %rdx,%r14
	addq $-8,%rbp
	jmp GHC.Integer.Type.shiftLInteger_entry
_c34Oe:
	movq $block_c34Og_info,-8(%rbp)
	movq %rcx,%rsi
	negq %rsi
	movq %rdx,%r14
	addq $-8,%rbp
	jmp GHC.Integer.Type.shiftRInteger_entry
	.size _s2UKb, .-_s2UKb


==================== Asm code ====================
2018-03-16 15:57:31.67497874 UTC

.section .text
.align 8
_c34Og:
_c34Og:
	movq 24(%rbp),%rax
	movq %rbx,24(%rbp)
	movq %rax,32(%rbp)
	addq $8,%rbp
	jmp _s2UKd
	.size _c34Og, .-_c34Og


==================== Asm code ====================
2018-03-16 15:57:31.675549952 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34Og_info:
	.quad	_c34Og
	.quad	708
	.quad	140741783322654
	.quad	S2VLN_srt+48


==================== Asm code ====================
2018-03-16 15:57:31.676159622 UTC

.section .text
.align 8
_c34OH:
_c34OH:
	movq 32(%rbp),%rax
	movq %rbx,32(%rbp)
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp _s2UKd
	.size _c34OH, .-_c34OH


==================== Asm code ====================
2018-03-16 15:57:31.676750443 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34OH_info:
	.quad	_c34OH
	.quad	452
	.quad	140741783322654
	.quad	S2VLN_srt+48


==================== Asm code ====================
2018-03-16 15:57:31.677554093 UTC

.section .text
.align 8
_s2UKd:
_s2UKd:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rbx
	testq %rax,%rax
	jl _c34Nf
_c34NC:
	movq $block_c34NB_info,-8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $-8,%rbp
	jmp GHC.Integer.Type.shiftLInteger_entry
_c34Nf:
	movq $block_c34Nd_info,-8(%rbp)
	movq %rax,%rsi
	negq %rsi
	movq %rbx,%r14
	addq $-8,%rbp
	jmp GHC.Integer.Type.shiftRInteger_entry
	.size _s2UKd, .-_s2UKd


==================== Asm code ====================
2018-03-16 15:57:31.678310196 UTC

.section .text
.align 8
_c34Nd:
_c34Nd:
	movq $block_c34Nj_info,(%rbp)
	movq 32(%rbp),%rsi
	movq %rbx,%r14
	jmp GHC.Integer.Type.leInteger#_entry
	.size _c34Nd, .-_c34Nd


==================== Asm code ====================
2018-03-16 15:57:31.67892084 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34Nd_info:
	.quad	_c34Nd
	.quad	196
	.quad	4294967326
	.quad	S2VLN_srt+168


==================== Asm code ====================
2018-03-16 15:57:31.679628543 UTC

.section .text
.align 8
_c34Nj:
_c34Nj:
	movq 24(%rbp),%rax
	cmpq $1,%rbx
	je _c34Nv
_c34Nq:
	movq %rax,%rdi
	movq 32(%rbp),%rsi
	movq 8(%rbp),%r14
	subq 16(%rbp),%r14
	addq $40,%rbp
	jmp $w$j1_r2Upy_entry
_c34Nv:
	movq $block_c34Nt_info,(%rbp)
	movl $1,%esi
	movq %rax,%r14
	jmp GHC.Integer.Type.shiftLInteger_entry
	.size _c34Nj, .-_c34Nj


==================== Asm code ====================
2018-03-16 15:57:31.680280724 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34Nj_info:
	.quad	_c34Nj
	.quad	196
	.quad	4294967326
	.quad	S2VLN_srt+168


==================== Asm code ====================
2018-03-16 15:57:31.680974693 UTC

.section .text
.align 8
_c34Nt:
_c34Nt:
	movq %rbx,%rdi
	movq 32(%rbp),%rsi
	movl $1,%eax
	subq 16(%rbp),%rax
	movq 8(%rbp),%r14
	addq %rax,%r14
	addq $40,%rbp
	jmp $w$j1_r2Upy_entry
	.size _c34Nt, .-_c34Nt


==================== Asm code ====================
2018-03-16 15:57:31.681660073 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34Nt_info:
	.quad	_c34Nt
	.quad	452
	.quad	4294967326
	.quad	S2VLN_srt+168


==================== Asm code ====================
2018-03-16 15:57:31.68230869 UTC

.section .text
.align 8
_c34NB:
_c34NB:
	movq $block_c34NG_info,(%rbp)
	movq 32(%rbp),%rsi
	movq %rbx,%r14
	jmp GHC.Integer.Type.leInteger#_entry
	.size _c34NB, .-_c34NB


==================== Asm code ====================
2018-03-16 15:57:31.682898509 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34NB_info:
	.quad	_c34NB
	.quad	196
	.quad	4294967326
	.quad	S2VLN_srt+168


==================== Asm code ====================
2018-03-16 15:57:31.68372797 UTC

.section .text
.align 8
_c34NG:
_c34NG:
	movq 24(%rbp),%rax
	cmpq $1,%rbx
	je _c34NS
_c34NN:
	movq %rax,%rdi
	movq 32(%rbp),%rsi
	movq 8(%rbp),%r14
	subq 16(%rbp),%r14
	addq $40,%rbp
	jmp $w$j1_r2Upy_entry
_c34NS:
	movq $block_c34NQ_info,(%rbp)
	movl $1,%esi
	movq %rax,%r14
	jmp GHC.Integer.Type.shiftLInteger_entry
	.size _c34NG, .-_c34NG


==================== Asm code ====================
2018-03-16 15:57:31.684419489 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34NG_info:
	.quad	_c34NG
	.quad	196
	.quad	4294967326
	.quad	S2VLN_srt+168


==================== Asm code ====================
2018-03-16 15:57:31.685117956 UTC

.section .text
.align 8
_c34NQ:
_c34NQ:
	movq %rbx,%rdi
	movq 32(%rbp),%rsi
	movl $1,%eax
	subq 16(%rbp),%rax
	movq 8(%rbp),%r14
	addq %rax,%r14
	addq $40,%rbp
	jmp $w$j1_r2Upy_entry
	.size _c34NQ, .-_c34NQ


==================== Asm code ====================
2018-03-16 15:57:31.685816976 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34NQ_info:
	.quad	_c34NQ
	.quad	452
	.quad	4294967326
	.quad	S2VLN_srt+168


==================== Asm code ====================
2018-03-16 15:57:31.691149702 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.fromRat''_$sfromRat''_closure
.type GHC.Float.fromRat''_$sfromRat''_closure, @object
GHC.Float.fromRat''_$sfromRat''_closure:
	.quad	GHC.Float.fromRat''_$sfromRat''_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:31.692111033 UTC

.section .text
.align 8
.globl GHC.Float.fromRat''_$sfromRat''_entry
.type GHC.Float.fromRat''_$sfromRat''_entry, @object
GHC.Float.fromRat''_$sfromRat''_entry:
_c34Yd:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c34Yq
_c34Yr:
	movq $block_c34Ya_info,-32(%rbp)
	movq %r14,%rbx
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c34Ya
_c34Yb:
	movq (%rbx),%rax
	jmp *(%rax)
_c34Yq:
	movl $GHC.Float.fromRat''_$sfromRat''_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.fromRat''_$sfromRat''_entry, .-GHC.Float.fromRat''_$sfromRat''_entry


==================== Asm code ====================
2018-03-16 15:57:31.692804711 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.fromRat''_$sfromRat''_info
.type GHC.Float.fromRat''_$sfromRat''_info, @object
GHC.Float.fromRat''_$sfromRat''_info:
	.quad	GHC.Float.fromRat''_$sfromRat''_entry
	.quad	0
	.quad	12884901902
	.quad	17179869208
	.quad	S2VLN_srt+176


==================== Asm code ====================
2018-03-16 15:57:31.693610996 UTC

.section .text
.align 8
_c34Ya:
_c34Ya:
	movq $block_c34Yg_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c34Yg
_c34Yh:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c34Ya, .-_c34Ya


==================== Asm code ====================
2018-03-16 15:57:31.69427461 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34Ya_info:
	.quad	_c34Ya
	.quad	3
	.quad	4294967326
	.quad	S2VLN_srt+176


==================== Asm code ====================
2018-03-16 15:57:31.69497262 UTC

.section .text
.align 8
_c34Yg:
_c34Yg:
	movq 24(%rbp),%rax
	movq $block_c34Yl_info,24(%rbp)
	movq %rax,%r8
	movq 16(%rbp),%rdi
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Float.$w$sfromRat''1_entry
	.size _c34Yg, .-_c34Yg


==================== Asm code ====================
2018-03-16 15:57:31.695666756 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34Yg_info:
	.quad	_c34Yg
	.quad	67
	.quad	4294967326
	.quad	S2VLN_srt+176


==================== Asm code ====================
2018-03-16 15:57:31.696407458 UTC

.section .text
.align 8
_c34Yl:
_c34Yl:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c34Yw
_c34Yv:
	movq $GHC.Types.F#_con_info,-8(%r12)
	movss %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c34Yw:
	movq $16,904(%r13)
	jmp stg_gc_f1
	.size _c34Yl, .-_c34Yl


==================== Asm code ====================
2018-03-16 15:57:31.697094236 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34Yl_info:
	.quad	_c34Yl
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.705045063 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.rationalToFloat_closure
.type GHC.Float.rationalToFloat_closure, @object
GHC.Float.rationalToFloat_closure:
	.quad	GHC.Float.rationalToFloat_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:31.706079728 UTC

.section .text
.align 8
.globl GHC.Float.rationalToFloat_entry
.type GHC.Float.rationalToFloat_entry, @object
GHC.Float.rationalToFloat_entry:
_c34YZ:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c34Z0
_c34Z1:
	movq $block_c34YU_info,-24(%rbp)
	movq %rsi,%rax
	movl $GHC.Float.rationalToDouble5_closure,%esi
	movq %r14,%rbx
	movq %rax,%r14
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Integer.Type.eqInteger#_entry
_c34Z0:
	movl $GHC.Float.rationalToFloat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.rationalToFloat_entry, .-GHC.Float.rationalToFloat_entry


==================== Asm code ====================
2018-03-16 15:57:31.706947014 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.rationalToFloat_info
.type GHC.Float.rationalToFloat_info, @object
GHC.Float.rationalToFloat_info:
	.quad	GHC.Float.rationalToFloat_entry
	.quad	0
	.quad	137359792929767438
	.quad	8589934607
	.quad	S2VLN_srt+24


==================== Asm code ====================
2018-03-16 15:57:31.708086077 UTC

.section .text
.align 8
_c34YU:
_c34YU:
	movq 8(%rbp),%rax
	cmpq $1,%rbx
	je _c34YY
_c34YX:
	movq $block_c34Z4_info,(%rbp)
	movl $GHC.Float.rationalToDouble5_closure,%esi
	movq %rax,%r14
	jmp GHC.Integer.Type.eqInteger#_entry
_c34YY:
	movq $block_c34ZR_info,(%rbp)
	movl $GHC.Float.rationalToDouble5_closure,%esi
	movq %rax,%r14
	jmp GHC.Integer.Type.eqInteger#_entry
	.size _c34YU, .-_c34YU


==================== Asm code ====================
2018-03-16 15:57:31.708802059 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34YU_info:
	.quad	_c34YU
	.quad	2
	.quad	128352593675026462
	.quad	S2VLN_srt+24


==================== Asm code ====================
2018-03-16 15:57:31.709866427 UTC

.section .text
.align 8
_c34ZR:
_c34ZR:
	cmpq $1,%rbx
	je _c350d
_c34ZZ:
	movq $block_c34ZW_info,16(%rbp)
	movl $GHC.Float.rationalToDouble5_closure,%esi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.ltInteger#_entry
_c350d:
	movl $GHC.Float.rationalToFloat1_closure,%ebx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c34ZR, .-_c34ZR


==================== Asm code ====================
2018-03-16 15:57:31.710511037 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34ZR_info:
	.quad	_c34ZR
	.quad	130
	.quad	126100793861341214
	.quad	S2VLN_srt+24


==================== Asm code ====================
2018-03-16 15:57:31.711275015 UTC

.section .text
.align 8
_c34ZW:
_c34ZW:
	cmpq $1,%rbx
	je _c3509
_c3505:
	movl $GHC.Float.rationalToFloat3_closure,%ebx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c3509:
	movl $GHC.Float.rationalToFloat2_closure,%ebx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c34ZW, .-_c34ZW


==================== Asm code ====================
2018-03-16 15:57:31.711931985 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34ZW_info:
	.quad	_c34ZW
	.quad	0
	.quad	12884901918
	.quad	S2VLN_srt+208


==================== Asm code ====================
2018-03-16 15:57:31.71263752 UTC

.section .text
.align 8
_c34Z4:
_c34Z4:
	cmpq $1,%rbx
	je _c34ZO
_c34Zc:
	movq $block_c34Z9_info,(%rbp)
	movl $GHC.Float.rationalToDouble5_closure,%esi
	movq 8(%rbp),%r14
	jmp GHC.Integer.Type.ltInteger#_entry
_c34ZO:
	movl $GHC.Float.rationalToFloat4_closure+1,%ebx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c34Z4, .-_c34Z4


==================== Asm code ====================
2018-03-16 15:57:31.713371523 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34Z4_info:
	.quad	_c34Z4
	.quad	2
	.quad	2251804108652574
	.quad	S2VLN_srt+24


==================== Asm code ====================
2018-03-16 15:57:31.714120465 UTC

.section .text
.align 8
_c34Z9:
_c34Z9:
	movq 8(%rbp),%rax
	cmpq $1,%rbx
	je _c34ZG
_c34Zn:
	movq 16(%rbp),%rbx
	movq $block_c34Zg_info,16(%rbp)
	movq %rbx,%r8
	movq %rax,%rdi
	movl $24,%esi
	movq $-125,%r14
	addq $16,%rbp
	jmp GHC.Float.$w$sfromRat''1_entry
_c34ZG:
	movq $block_c34Zt_info,8(%rbp)
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.negateInteger_entry
	.size _c34Z9, .-_c34Z9


==================== Asm code ====================
2018-03-16 15:57:31.714791735 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34Z9_info:
	.quad	_c34Z9
	.quad	2
	.quad	4294967326
	.quad	S2VLN_srt+176


==================== Asm code ====================
2018-03-16 15:57:31.715404345 UTC

.section .text
.align 8
_c34Zt:
_c34Zt:
	movq 8(%rbp),%rax
	movq $block_c34Zx_info,8(%rbp)
	movq %rax,%r8
	movq %rbx,%rdi
	movl $24,%esi
	movq $-125,%r14
	addq $8,%rbp
	jmp GHC.Float.$w$sfromRat''1_entry
	.size _c34Zt, .-_c34Zt


==================== Asm code ====================
2018-03-16 15:57:31.716007071 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34Zt_info:
	.quad	_c34Zt
	.quad	1
	.quad	4294967326
	.quad	S2VLN_srt+176


==================== Asm code ====================
2018-03-16 15:57:31.716776844 UTC

.section .text
.align 8
_c34Zx:
_c34Zx:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c34ZK
_c34ZJ:
	movq $GHC.Types.F#_con_info,-8(%r12)
	movss _n350G(%rip),%xmm0
	xorps %xmm0,%xmm1
	movss %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c34ZK:
	movq $16,904(%r13)
	jmp stg_gc_f1
	.size _c34Zx, .-_c34Zx
.section .rodata
.align 8
.align 4
_n350G:
	.long	-2147483648


==================== Asm code ====================
2018-03-16 15:57:31.717572316 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34Zx_info:
	.quad	_c34Zx
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.718303645 UTC

.section .text
.align 8
_c34Zg:
_c34Zg:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c34Zq
_c34Zp:
	movq $GHC.Types.F#_con_info,-8(%r12)
	movss %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c34Zq:
	movq $16,904(%r13)
	jmp stg_gc_f1
	.size _c34Zg, .-_c34Zg


==================== Asm code ====================
2018-03-16 15:57:31.718919763 UTC

.section .data.rel.ro
.align 8
.align 1
block_c34Zg_info:
	.quad	_c34Zg
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.722163478 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fFractionalFloat_$cfromRational_closure
.type GHC.Float.$fFractionalFloat_$cfromRational_closure, @object
GHC.Float.$fFractionalFloat_$cfromRational_closure:
	.quad	GHC.Float.$fFractionalFloat_$cfromRational_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:31.723042032 UTC

.section .text
.align 8
.globl GHC.Float.$fFractionalFloat_$cfromRational_entry
.type GHC.Float.$fFractionalFloat_$cfromRational_entry, @object
GHC.Float.$fFractionalFloat_$cfromRational_entry:
_c350X:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c350Y
_c350Z:
	movq $block_c350U_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c350U
_c350V:
	movq (%rbx),%rax
	jmp *(%rax)
_c350Y:
	movl $GHC.Float.$fFractionalFloat_$cfromRational_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fFractionalFloat_$cfromRational_entry, .-GHC.Float.$fFractionalFloat_$cfromRational_entry


==================== Asm code ====================
2018-03-16 15:57:31.723722163 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fFractionalFloat_$cfromRational_info
.type GHC.Float.$fFractionalFloat_$cfromRational_info, @object
GHC.Float.$fFractionalFloat_$cfromRational_info:
	.quad	GHC.Float.$fFractionalFloat_$cfromRational_entry
	.quad	0
	.quad	73014444046
	.quad	4294967301
	.quad	S2VLN_srt+192


==================== Asm code ====================
2018-03-16 15:57:31.724452121 UTC

.section .text
.align 8
_c350U:
_c350U:
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.Float.rationalToFloat_entry
	.size _c350U, .-_c350U


==================== Asm code ====================
2018-03-16 15:57:31.725037127 UTC

.section .data.rel.ro
.align 8
.align 1
block_c350U_info:
	.quad	_c350U
	.quad	0
	.quad	4294967326
	.quad	S2VLN_srt+192


==================== Asm code ====================
2018-03-16 15:57:31.729448811 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fFloatingFloat_$catanh_closure
.type GHC.Float.$fFloatingFloat_$catanh_closure, @object
GHC.Float.$fFloatingFloat_$catanh_closure:
	.quad	GHC.Float.$fFloatingFloat_$catanh_info


==================== Asm code ====================
2018-03-16 15:57:31.73030534 UTC

.section .text
.align 8
.globl GHC.Float.$fFloatingFloat_$catanh_entry
.type GHC.Float.$fFloatingFloat_$catanh_entry, @object
GHC.Float.$fFloatingFloat_$catanh_entry:
_c351k:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c351E
_c351F:
	movq $block_c351h_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c351h
_c351i:
	movq (%rbx),%rax
	jmp *(%rax)
_c351E:
	movl $GHC.Float.$fFloatingFloat_$catanh_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fFloatingFloat_$catanh_entry, .-GHC.Float.$fFloatingFloat_$catanh_entry


==================== Asm code ====================
2018-03-16 15:57:31.731046802 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fFloatingFloat_$catanh_info
.type GHC.Float.$fFloatingFloat_$catanh_info, @object
GHC.Float.$fFloatingFloat_$catanh_info:
	.quad	GHC.Float.$fFloatingFloat_$catanh_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:31.732026119 UTC

.section .text
.align 8
_c351h:
_c351h:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c351I
_c351H:
	movss 7(%rbx),%xmm0
	subq $8,%rsp
	movss _n351R(%rip),%xmm1
	subss %xmm0,%xmm1
	addss _n351U(%rip),%xmm0
	divss %xmm1,%xmm0
	movl $1,%eax
	call logf
	addq $8,%rsp
	movq $GHC.Types.F#_con_info,-8(%r12)
	mulss _n351X(%rip),%xmm0
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c351I:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c351h, .-_c351h
.section .rodata
.align 8
.align 4
_n351R:
	.byte	0
	.byte	0
	.byte	128
	.byte	63
.section .rodata
.align 8
.align 4
_n351U:
	.byte	0
	.byte	0
	.byte	128
	.byte	63
.section .rodata
.align 8
.align 4
_n351X:
	.byte	0
	.byte	0
	.byte	0
	.byte	63


==================== Asm code ====================
2018-03-16 15:57:31.732797232 UTC

.section .data.rel.ro
.align 8
.align 1
block_c351h_info:
	.quad	_c351h
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.736831109 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fFractionalFloat_$crecip_closure
.type GHC.Float.$fFractionalFloat_$crecip_closure, @object
GHC.Float.$fFractionalFloat_$crecip_closure:
	.quad	GHC.Float.$fFractionalFloat_$crecip_info


==================== Asm code ====================
2018-03-16 15:57:31.737803618 UTC

.section .text
.align 8
.globl GHC.Float.$fFractionalFloat_$crecip_entry
.type GHC.Float.$fFractionalFloat_$crecip_entry, @object
GHC.Float.$fFractionalFloat_$crecip_entry:
_c352a:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c352h
_c352i:
	movq $block_c3527_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3527
_c3528:
	movq (%rbx),%rax
	jmp *(%rax)
_c352h:
	movl $GHC.Float.$fFractionalFloat_$crecip_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fFractionalFloat_$crecip_entry, .-GHC.Float.$fFractionalFloat_$crecip_entry


==================== Asm code ====================
2018-03-16 15:57:31.73846141 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fFractionalFloat_$crecip_info
.type GHC.Float.$fFractionalFloat_$crecip_info, @object
GHC.Float.$fFractionalFloat_$crecip_info:
	.quad	GHC.Float.$fFractionalFloat_$crecip_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:31.739255849 UTC

.section .text
.align 8
_c3527:
_c3527:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c352l
_c352k:
	leaq 7(%rbx),%rax
	movss _n352v(%rip),%xmm0
	divss (%rax),%xmm0
	movq $GHC.Types.F#_con_info,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c352l:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c3527, .-_c3527
.section .rodata
.align 8
.align 4
_n352v:
	.byte	0
	.byte	0
	.byte	128
	.byte	63


==================== Asm code ====================
2018-03-16 15:57:31.739909917 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3527_info:
	.quad	_c3527
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.74186157 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fFractionalFloat_closure
.type GHC.Float.$fFractionalFloat_closure, @object
GHC.Float.$fFractionalFloat_closure:
	.quad	GHC.Real.C:Fractional_con_info
	.quad	GHC.Float.$fNumFloat_closure+1
	.quad	GHC.Float.divideFloat_closure+2
	.quad	GHC.Float.$fFractionalFloat_$crecip_closure+1
	.quad	GHC.Float.$fFractionalFloat_$cfromRational_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:31.745154582 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fEnumFloat_$snumericEnumFromThen_closure
.type GHC.Float.$fEnumFloat_$snumericEnumFromThen_closure, @object
GHC.Float.$fEnumFloat_$snumericEnumFromThen_closure:
	.quad	GHC.Float.$fEnumFloat_$snumericEnumFromThen_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:31.74608006 UTC

.section .text
.align 8
.globl GHC.Float.$fEnumFloat_$snumericEnumFromThen_entry
.type GHC.Float.$fEnumFloat_$snumericEnumFromThen_entry, @object
GHC.Float.$fEnumFloat_$snumericEnumFromThen_entry:
_c352I:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c352J
_c352K:
	movq $block_c352F_info,-8(%rbp)
	movq %rsi,%rdi
	movq %r14,%rsi
	movl $GHC.Float.$fFractionalFloat_closure+1,%r14d
	addq $-8,%rbp
	jmp GHC.Real.$wnumericEnumFromThen_entry
_c352J:
	movl $GHC.Float.$fEnumFloat_$snumericEnumFromThen_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fEnumFloat_$snumericEnumFromThen_entry, .-GHC.Float.$fEnumFloat_$snumericEnumFromThen_entry


==================== Asm code ====================
2018-03-16 15:57:31.746791542 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fEnumFloat_$snumericEnumFromThen_info
.type GHC.Float.$fEnumFloat_$snumericEnumFromThen_info, @object
GHC.Float.$fEnumFloat_$snumericEnumFromThen_info:
	.quad	GHC.Float.$fEnumFloat_$snumericEnumFromThen_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S2VLN_srt+232


==================== Asm code ====================
2018-03-16 15:57:31.747563418 UTC

.section .text
.align 8
_c352F:
_c352F:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c352N
_c352M:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c352N:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c352F, .-_c352F


==================== Asm code ====================
2018-03-16 15:57:31.7482018 UTC

.section .data.rel.ro
.align 8
.align 1
block_c352F_info:
	.quad	_c352F
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.752060574 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fEnumFloat_$snumericEnumFrom_closure
.type GHC.Float.$fEnumFloat_$snumericEnumFrom_closure, @object
GHC.Float.$fEnumFloat_$snumericEnumFrom_closure:
	.quad	GHC.Float.$fEnumFloat_$snumericEnumFrom_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:31.752895706 UTC

.section .text
.align 8
.globl GHC.Float.$fEnumFloat_$snumericEnumFrom_entry
.type GHC.Float.$fEnumFloat_$snumericEnumFrom_entry, @object
GHC.Float.$fEnumFloat_$snumericEnumFrom_entry:
_c3534:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3535
_c3536:
	movq $block_c3531_info,-8(%rbp)
	movq %r14,%rsi
	movl $GHC.Float.$fFractionalFloat_closure+1,%r14d
	addq $-8,%rbp
	jmp GHC.Real.$wnumericEnumFrom_entry
_c3535:
	movl $GHC.Float.$fEnumFloat_$snumericEnumFrom_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fEnumFloat_$snumericEnumFrom_entry, .-GHC.Float.$fEnumFloat_$snumericEnumFrom_entry


==================== Asm code ====================
2018-03-16 15:57:31.753599204 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fEnumFloat_$snumericEnumFrom_info
.type GHC.Float.$fEnumFloat_$snumericEnumFrom_info, @object
GHC.Float.$fEnumFloat_$snumericEnumFrom_info:
	.quad	GHC.Float.$fEnumFloat_$snumericEnumFrom_entry
	.quad	0
	.quad	21994527522830
	.quad	4294967301
	.quad	S2VLN_srt+152


==================== Asm code ====================
2018-03-16 15:57:31.754423137 UTC

.section .text
.align 8
_c3531:
_c3531:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3539
_c3538:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3539:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c3531, .-_c3531


==================== Asm code ====================
2018-03-16 15:57:31.755049707 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3531_info:
	.quad	_c3531
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.75895238 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fFloatingFloat_$cacosh_closure
.type GHC.Float.$fFloatingFloat_$cacosh_closure, @object
GHC.Float.$fFloatingFloat_$cacosh_closure:
	.quad	GHC.Float.$fFloatingFloat_$cacosh_info


==================== Asm code ====================
2018-03-16 15:57:31.759835064 UTC

.section .text
.align 8
.globl GHC.Float.$fFloatingFloat_$cacosh_entry
.type GHC.Float.$fFloatingFloat_$cacosh_entry, @object
GHC.Float.$fFloatingFloat_$cacosh_entry:
_c353q:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c353U
_c353V:
	movq $block_c353n_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c353n
_c353o:
	movq (%rbx),%rax
	jmp *(%rax)
_c353U:
	movl $GHC.Float.$fFloatingFloat_$cacosh_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fFloatingFloat_$cacosh_entry, .-GHC.Float.$fFloatingFloat_$cacosh_entry


==================== Asm code ====================
2018-03-16 15:57:31.760500614 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fFloatingFloat_$cacosh_info
.type GHC.Float.$fFloatingFloat_$cacosh_info, @object
GHC.Float.$fFloatingFloat_$cacosh_info:
	.quad	GHC.Float.$fFloatingFloat_$cacosh_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:31.761650301 UTC

.section .text
.align 8
_c353n:
_c353n:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c353Y
_c353X:
	movss 7(%rbx),%xmm0
	movss %xmm0,%xmm1
	addss _n3547(%rip),%xmm1
	movss %xmm0,%xmm2
	subss _n354a(%rip),%xmm2
	divss %xmm1,%xmm2
	sqrtss %xmm2,%xmm1
	subq $8,%rsp
	movss %xmm0,%xmm2
	addss _n354e(%rip),%xmm2
	mulss %xmm1,%xmm2
	addss %xmm2,%xmm0
	movl $1,%eax
	call logf
	addq $8,%rsp
	movq $GHC.Types.F#_con_info,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c353Y:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c353n, .-_c353n
.section .rodata
.align 8
.align 4
_n3547:
	.byte	0
	.byte	0
	.byte	128
	.byte	63
.section .rodata
.align 8
.align 4
_n354a:
	.byte	0
	.byte	0
	.byte	128
	.byte	63
.section .rodata
.align 8
.align 4
_n354e:
	.byte	0
	.byte	0
	.byte	128
	.byte	63


==================== Asm code ====================
2018-03-16 15:57:31.762448211 UTC

.section .data.rel.ro
.align 8
.align 1
block_c353n_info:
	.quad	_c353n
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.766724768 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fFloatingFloat_$casinh_closure
.type GHC.Float.$fFloatingFloat_$casinh_closure, @object
GHC.Float.$fFloatingFloat_$casinh_closure:
	.quad	GHC.Float.$fFloatingFloat_$casinh_info


==================== Asm code ====================
2018-03-16 15:57:31.767603773 UTC

.section .text
.align 8
.globl GHC.Float.$fFloatingFloat_$casinh_entry
.type GHC.Float.$fFloatingFloat_$casinh_entry, @object
GHC.Float.$fFloatingFloat_$casinh_entry:
_c354t:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c354O
_c354P:
	movq $block_c354q_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c354q
_c354r:
	movq (%rbx),%rax
	jmp *(%rax)
_c354O:
	movl $GHC.Float.$fFloatingFloat_$casinh_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fFloatingFloat_$casinh_entry, .-GHC.Float.$fFloatingFloat_$casinh_entry


==================== Asm code ====================
2018-03-16 15:57:31.768297009 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fFloatingFloat_$casinh_info
.type GHC.Float.$fFloatingFloat_$casinh_info, @object
GHC.Float.$fFloatingFloat_$casinh_info:
	.quad	GHC.Float.$fFloatingFloat_$casinh_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:31.769148005 UTC

.section .text
.align 8
_c354q:
_c354q:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c354S
_c354R:
	movss 7(%rbx),%xmm0
	movss %xmm0,%xmm1
	mulss %xmm0,%xmm1
	addss _n3551(%rip),%xmm1
	sqrtss %xmm1,%xmm1
	subq $8,%rsp
	addss %xmm1,%xmm0
	movl $1,%eax
	call logf
	addq $8,%rsp
	movq $GHC.Types.F#_con_info,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c354S:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c354q, .-_c354q
.section .rodata
.align 8
.align 4
_n3551:
	.byte	0
	.byte	0
	.byte	128
	.byte	63


==================== Asm code ====================
2018-03-16 15:57:31.769918781 UTC

.section .data.rel.ro
.align 8
.align 1
block_c354q_info:
	.quad	_c354q
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.771611295 UTC

.section .data
.align 8
.align 1
sat_s2UN0_closure:
	.quad	GHC.Types.I#_con_info
	.quad	2


==================== Asm code ====================
2018-03-16 15:57:31.773343111 UTC

.section .data
.align 8
.align 1
sat_s2UN1_closure:
	.quad	:_con_info
	.quad	sat_s2UN0_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:31.776181873 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble5_closure
.type GHC.Float.$fRealFloatDouble5_closure, @object
GHC.Float.$fRealFloatDouble5_closure:
	.quad	GHC.Float.$fRealFloatDouble5_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:31.777167409 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFloatDouble5_entry
.type GHC.Float.$fRealFloatDouble5_entry, @object
GHC.Float.$fRealFloatDouble5_entry:
_c355h:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c355i
_c355j:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c355g
_c355f:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $sat_s2UN1_closure+2,%esi
	movl $GHC.Types.True_closure+2,%r14d
	addq $-16,%rbp
	jmp GHC.Integer.Type.mkInteger_entry
_c355i:
	jmp *-16(%r13)
_c355g:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Float.$fRealFloatDouble5_entry, .-GHC.Float.$fRealFloatDouble5_entry


==================== Asm code ====================
2018-03-16 15:57:31.777952449 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble5_info
.type GHC.Float.$fRealFloatDouble5_info, @object
GHC.Float.$fRealFloatDouble5_info:
	.quad	GHC.Float.$fRealFloatDouble5_entry
	.quad	0
	.quad	4294967317
	.quad	S2VLN_srt+256


==================== Asm code ====================
2018-03-16 15:57:31.779703784 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.minExpt_closure
.type GHC.Float.minExpt_closure, @object
GHC.Float.minExpt_closure:
	.quad	GHC.Types.I#_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:31.781438083 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFracFloat2_closure
.type GHC.Float.$fRealFracFloat2_closure, @object
GHC.Float.$fRealFracFloat2_closure:
	.quad	GHC.Types.I#_con_info
	.quad	1


==================== Asm code ====================
2018-03-16 15:57:31.783512625 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFracFloat1_closure
.type GHC.Float.$fRealFracFloat1_closure, @object
GHC.Float.$fRealFracFloat1_closure:
	.quad	GHC.Types.I#_con_info
	.quad	-1


==================== Asm code ====================
2018-03-16 15:57:31.802074705 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$w$cproperFraction1_closure
.type GHC.Float.$w$cproperFraction1_closure, @object
GHC.Float.$w$cproperFraction1_closure:
	.quad	GHC.Float.$w$cproperFraction1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:31.802858755 UTC

.section .text
.align 8
.globl GHC.Float.$w$cproperFraction1_slow
.type GHC.Float.$w$cproperFraction1_slow, @object
GHC.Float.$w$cproperFraction1_slow:
_c355v:
	movss 8(%rbp),%xmm1
	movq (%rbp),%r14
	addq $16,%rbp
	jmp GHC.Float.$w$cproperFraction1_entry
	.size GHC.Float.$w$cproperFraction1_slow, .-GHC.Float.$w$cproperFraction1_slow


==================== Asm code ====================
2018-03-16 15:57:31.8035414 UTC

.section .text
.align 8
$dReal_s2UN7_entry:
_c355H:
	movq 16(%rbx),%r14
	jmp GHC.Real.$p1Integral_entry
	.size $dReal_s2UN7_entry, .-$dReal_s2UN7_entry


==================== Asm code ====================
2018-03-16 15:57:31.804129166 UTC

.section .data.rel.ro
.align 8
.align 1
$dReal_s2UN7_info:
	.quad	$dReal_s2UN7_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:31.804829663 UTC

.section .text
.align 8
$dNum_s2UN8_entry:
_c355O:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c355P
_c355Q:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Real_entry
_c355P:
	jmp *-16(%r13)
	.size $dNum_s2UN8_entry, .-$dNum_s2UN8_entry


==================== Asm code ====================
2018-03-16 15:57:31.805528333 UTC

.section .data.rel.ro
.align 8
.align 1
$dNum_s2UN8_info:
	.quad	$dNum_s2UN8_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:31.80657927 UTC

.section .text
.align 8
i_s2UNa_entry:
_c3563:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3564
_c3565:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3567
_c3566:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	testq %rax,%rax
	jl _c3561
_c3562:
	negq %rbx
	cmpq $64,%rbx
	jl _c356N
_c356U:
	testq %rax,%rax
	jge _c356S
_c356T:
	addq $-16,%r12
	movl $GHC.Float.$fRealFracFloat1_closure+1,%ebx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c356S:
	addq $-16,%r12
	movl $GHC.Float.minExpt_closure+1,%ebx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c356N:
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rbx,%rcx
	sarq %cl,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3561:
	negq %rbx
	cmpq $64,%rbx
	jl _c356q
_c356A:
	negq %rax
	testq %rax,%rax
	jge _c356S
_c356z:
	addq $-16,%r12
	movl $GHC.Float.$fRealFracFloat2_closure+1,%ebx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c356q:
	movq $GHC.Types.I#_con_info,-8(%r12)
	negq %rax
	movq %rbx,%rcx
	sarq %cl,%rax
	negq %rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3567:
	movq $16,904(%r13)
_c3564:
	jmp *-16(%r13)
	.size i_s2UNa_entry, .-i_s2UNa_entry


==================== Asm code ====================
2018-03-16 15:57:31.807537503 UTC

.section .data.rel.ro
.align 8
.align 1
i_s2UNa_info:
	.quad	i_s2UNa_entry
	.quad	8589934592
	.quad	20


==================== Asm code ====================
2018-03-16 15:57:31.808279695 UTC

.section .text
.align 8
sat_s2UNB_entry:
_c3572:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c3573
_c3574:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c356Z_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq 32(%rbx),%rcx
	movq 16(%rbx),%rbx
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _c356Z
_c3570:
	movq (%rbx),%rax
	jmp *(%rax)
_c3573:
	jmp *-16(%r13)
	.size sat_s2UNB_entry, .-sat_s2UNB_entry


==================== Asm code ====================
2018-03-16 15:57:31.808931856 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2UNB_info:
	.quad	sat_s2UNB_entry
	.quad	8589934593
	.quad	15


==================== Asm code ====================
2018-03-16 15:57:31.810249909 UTC

.section .text
.align 8
_c356Z:
_c356Z:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rcx
	negq %rcx
	cmpq $64,%rcx
	jl _c357u
_c357J:
	movq $block_c357A_info,8(%rbp)
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
_c357u:
	movq $block_c357k_info,8(%rbp)
	movq 7(%rbx),%rbx
	shlq %cl,%rbx
	movq %rax,%r14
	subq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
	.size _c356Z, .-_c356Z


==================== Asm code ====================
2018-03-16 15:57:31.811318295 UTC

.section .data.rel.ro
.align 8
.align 1
block_c356Z_info:
	.quad	_c356Z
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.812266811 UTC

.section .text
.align 8
_c357k:
_c357k:
	movq 8(%rbp),%rax
	movq $block_c357o_info,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.encodeFloatInteger_entry
	.size _c357k, .-_c357k


==================== Asm code ====================
2018-03-16 15:57:31.8131726 UTC

.section .data.rel.ro
.align 8
.align 1
block_c357k_info:
	.quad	_c357k
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.814289 UTC

.section .text
.align 8
_c357o:
_c357o:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c357y
_c357x:
	movq $GHC.Types.F#_con_info,-8(%r12)
	movss %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c357y:
	movq $16,904(%r13)
	jmp stg_gc_f1
	.size _c357o, .-_c357o


==================== Asm code ====================
2018-03-16 15:57:31.815223776 UTC

.section .data.rel.ro
.align 8
.align 1
block_c357o_info:
	.quad	_c357o
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.816177507 UTC

.section .text
.align 8
_c357A:
_c357A:
	movq 8(%rbp),%rax
	movq $block_c357E_info,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.encodeFloatInteger_entry
	.size _c357A, .-_c357A


==================== Asm code ====================
2018-03-16 15:57:31.817094624 UTC

.section .data.rel.ro
.align 8
.align 1
block_c357A_info:
	.quad	_c357A
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.818209368 UTC

.section .text
.align 8
_c357E:
_c357E:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c357N
_c357M:
	movq $GHC.Types.F#_con_info,-8(%r12)
	movss %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c357N:
	movq $16,904(%r13)
	jmp stg_gc_f1
	.size _c357E, .-_c357E


==================== Asm code ====================
2018-03-16 15:57:31.819182234 UTC

.section .data.rel.ro
.align 8
.align 1
block_c357E_info:
	.quad	_c357E
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.820277927 UTC

.section .text
.align 8
sat_s2UNp_entry:
_c3580:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3581
_c3582:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c357X_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _c357X
_c357Y:
	movq (%rbx),%rax
	jmp *(%rax)
_c3581:
	jmp *-16(%r13)
	.size sat_s2UNp_entry, .-sat_s2UNp_entry


==================== Asm code ====================
2018-03-16 15:57:31.82142232 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2UNp_info:
	.quad	sat_s2UNp_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:31.822355727 UTC

.section .text
.align 8
_c357X:
_c357X:
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
	.size _c357X, .-_c357X


==================== Asm code ====================
2018-03-16 15:57:31.823262461 UTC

.section .data.rel.ro
.align 8
.align 1
block_c357X_info:
	.quad	_c357X
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.824624186 UTC

.section .text
.align 8
sat_s2UNq_entry:
_c3587:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3588
_c3589:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c358b
_c358a:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $sat_s2UNp_info,-16(%r12)
	movq %rbx,(%r12)
	movq %rax,%r14
	movq $stg_ap_p_info,-32(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c358b:
	movq $24,904(%r13)
_c3588:
	jmp *-16(%r13)
	.size sat_s2UNq_entry, .-sat_s2UNq_entry


==================== Asm code ====================
2018-03-16 15:57:31.825817705 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2UNq_info:
	.quad	sat_s2UNq_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:31.826954104 UTC

.section .text
.align 8
sat_s2UNE_entry:
_c358q:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c358r
_c358s:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Float.$fRealFloatDouble5_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c358r:
	jmp *-16(%r13)
	.size sat_s2UNE_entry, .-sat_s2UNE_entry


==================== Asm code ====================
2018-03-16 15:57:31.827969375 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2UNE_info:
	.quad	sat_s2UNE_entry
	.quad	1
	.quad	4294967312
	.quad	S2VLN_srt+264


==================== Asm code ====================
2018-03-16 15:57:31.829223676 UTC

.section .text
.align 8
sat_s2UNG_entry:
_c358t:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c358u
_c358v:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c358x
_c358w:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $GHC.Types.I#_con_info,-32(%r12)
	movq %rbx,-24(%r12)
	movq $sat_s2UNE_info,-16(%r12)
	movq %rax,(%r12)
	leaq -31(%r12),%r8
	leaq -16(%r12),%rdi
	movl $GHC.Real.$fIntegralInt_closure,%esi
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Real.^_entry
_c358x:
	movq $40,904(%r13)
_c358u:
	jmp *-16(%r13)
	.size sat_s2UNG_entry, .-sat_s2UNG_entry


==================== Asm code ====================
2018-03-16 15:57:31.830431744 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2UNG_info:
	.quad	sat_s2UNG_entry
	.quad	4294967297
	.quad	30064771091
	.quad	S2VLN_srt+264


==================== Asm code ====================
2018-03-16 15:57:31.831447273 UTC

.section .text
.align 8
sat_s2UNC_entry:
_c358G:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c358H
_c358I:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
_c358H:
	jmp *-16(%r13)
	.size sat_s2UNC_entry, .-sat_s2UNC_entry


==================== Asm code ====================
2018-03-16 15:57:31.832402615 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2UNC_info:
	.quad	sat_s2UNC_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 15:57:31.833626588 UTC

.section .text
.align 8
sat_s2UND_entry:
_c358J:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c358K
_c358L:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c358N
_c358M:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $sat_s2UNC_info,-16(%r12)
	movq %rbx,(%r12)
	movq %rax,%r14
	movq $stg_ap_p_info,-32(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c358N:
	movq $24,904(%r13)
_c358K:
	jmp *-16(%r13)
	.size sat_s2UND_entry, .-sat_s2UND_entry


==================== Asm code ====================
2018-03-16 15:57:31.834734682 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2UND_info:
	.quad	sat_s2UND_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 15:57:31.83608658 UTC

.section .text
.align 8
sat_s2UNH_entry:
_c358O:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c358P
_c358Q:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c358S
_c358R:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq $sat_s2UNG_info,-56(%r12)
	movq %rax,-40(%r12)
	movq %rbx,-32(%r12)
	movq $sat_s2UND_info,-24(%r12)
	movq %rax,-8(%r12)
	movq %rcx,(%r12)
	movq %rax,%r14
	movq $stg_ap_pp_info,-40(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-32(%rbp)
	leaq -56(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Num.*_entry
_c358S:
	movq $64,904(%r13)
_c358P:
	jmp *-16(%r13)
	.size sat_s2UNH_entry, .-sat_s2UNH_entry


==================== Asm code ====================
2018-03-16 15:57:31.837287771 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2UNH_info:
	.quad	sat_s2UNH_entry
	.quad	8589934593
	.quad	30064771087
	.quad	S2VLN_srt+264


==================== Asm code ====================
2018-03-16 15:57:31.839240253 UTC

.section .text
.align 8
.globl GHC.Float.$w$cproperFraction1_entry
.type GHC.Float.$w$cproperFraction1_entry, @object
GHC.Float.$w$cproperFraction1_entry:
_c358W:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c358X
_c358Y:
	movq $block_c355z_info,-16(%rbp)
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	jmp stg_decodeFloat_Int#
_c358X:
	movl $GHC.Float.$w$cproperFraction1_closure,%ebx
	movq %r14,-16(%rbp)
	movss %xmm1,-8(%rbp)
	addq $-16,%rbp
	jmp *-8(%r13)
	.size GHC.Float.$w$cproperFraction1_entry, .-GHC.Float.$w$cproperFraction1_entry


==================== Asm code ====================
2018-03-16 15:57:31.840312389 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$w$cproperFraction1_info
.type GHC.Float.$w$cproperFraction1_info, @object
GHC.Float.$w$cproperFraction1_info:
	.quad	GHC.Float.$w$cproperFraction1_entry
	.quad	0
	.quad	64424509454
	.quad	8589934592
	.quad	S2VLN_srt+264
	.quad	130
	.quad	GHC.Float.$w$cproperFraction1_slow


==================== Asm code ====================
2018-03-16 15:57:31.841401223 UTC

.section .text
.align 8
_c355z:
_c355z:
	movq %r14,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp _c355A
	.size _c355z, .-_c355z


==================== Asm code ====================
2018-03-16 15:57:31.842349507 UTC

.section .data.rel.ro
.align 8
.align 1
block_c355z_info:
	.quad	_c355z
	.quad	1
	.quad	30064771102
	.quad	S2VLN_srt+264


==================== Asm code ====================
2018-03-16 15:57:31.843860417 UTC

.section .text
.align 8
_c355A:
_c355A:
	addq $152,%r12
	cmpq 856(%r13),%r12
	ja _c3591
_c3590:
	movq $$dReal_s2UN7_info,-144(%r12)
	movq 24(%rbp),%rax
	movq %rax,-128(%r12)
	movq $$dNum_s2UN8_info,-120(%r12)
	leaq -144(%r12),%rax
	movq %rax,-104(%r12)
	movq 16(%rbp),%rax
	movq 8(%rbp),%rbx
	leaq -120(%r12),%rcx
	testq %rbx,%rbx
	jl _c358U
_c358V:
	movq $sat_s2UNH_info,-96(%r12)
	movq %rcx,-80(%r12)
	movq %rax,-72(%r12)
	movq %rbx,-64(%r12)
	leaq -96(%r12),%rax
	addq $-64,%r12
	movl $GHC.Float.rationalToFloat4_closure+1,%r14d
	movq %rax,%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3591:
	movq $152,904(%r13)
	movq $block_c355A_info,(%rbp)
	jmp stg_gc_noregs
_c358U:
	movq $i_s2UNa_info,-96(%r12)
	movq %rax,-80(%r12)
	movq %rbx,-72(%r12)
	movq $sat_s2UNB_info,-64(%r12)
	leaq -96(%r12),%rdx
	movq %rdx,-48(%r12)
	movq %rax,-40(%r12)
	movq %rbx,-32(%r12)
	movq $sat_s2UNq_info,-24(%r12)
	movq %rcx,-8(%r12)
	movq %rdx,(%r12)
	leaq -64(%r12),%r14
	leaq -24(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c355A, .-_c355A


==================== Asm code ====================
2018-03-16 15:57:31.845217568 UTC

.section .data.rel.ro
.align 8
.align 1
block_c355A_info:
	.quad	_c355A
	.quad	195
	.quad	30064771102
	.quad	S2VLN_srt+264


==================== Asm code ====================
2018-03-16 15:57:31.851624267 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFracFloat_$cproperFraction_closure
.type GHC.Float.$fRealFracFloat_$cproperFraction_closure, @object
GHC.Float.$fRealFracFloat_$cproperFraction_closure:
	.quad	GHC.Float.$fRealFracFloat_$cproperFraction_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:31.853002211 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFracFloat_$cproperFraction_entry
.type GHC.Float.$fRealFracFloat_$cproperFraction_entry, @object
GHC.Float.$fRealFracFloat_$cproperFraction_entry:
_c35aK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c35aQ
_c35aR:
	movq $block_c35aH_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c35aH
_c35aI:
	movq (%rbx),%rax
	jmp *(%rax)
_c35aQ:
	movl $GHC.Float.$fRealFracFloat_$cproperFraction_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFracFloat_$cproperFraction_entry, .-GHC.Float.$fRealFracFloat_$cproperFraction_entry


==================== Asm code ====================
2018-03-16 15:57:31.854139483 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFracFloat_$cproperFraction_info
.type GHC.Float.$fRealFracFloat_$cproperFraction_info, @object
GHC.Float.$fRealFracFloat_$cproperFraction_info:
	.quad	GHC.Float.$fRealFracFloat_$cproperFraction_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S2VLN_srt+288


==================== Asm code ====================
2018-03-16 15:57:31.855168611 UTC

.section .text
.align 8
_c35aH:
_c35aH:
	movq 8(%rbp),%rax
	movq $block_c35aN_info,8(%rbp)
	movss 7(%rbx),%xmm1
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Float.$w$cproperFraction1_entry
	.size _c35aH, .-_c35aH


==================== Asm code ====================
2018-03-16 15:57:31.856045619 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35aH_info:
	.quad	_c35aH
	.quad	1
	.quad	4294967326
	.quad	S2VLN_srt+288


==================== Asm code ====================
2018-03-16 15:57:31.857152856 UTC

.section .text
.align 8
_c35aN:
_c35aN:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c35aV
_c35aU:
	movq $(,)_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c35aV:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c35aN, .-_c35aN


==================== Asm code ====================
2018-03-16 15:57:31.857992294 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35aN_info:
	.quad	_c35aN
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.86150235 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFracFloat_$ctruncate_closure
.type GHC.Float.$fRealFracFloat_$ctruncate_closure, @object
GHC.Float.$fRealFracFloat_$ctruncate_closure:
	.quad	GHC.Float.$fRealFracFloat_$ctruncate_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:31.862304478 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFracFloat_$ctruncate_entry
.type GHC.Float.$fRealFracFloat_$ctruncate_entry, @object
GHC.Float.$fRealFracFloat_$ctruncate_entry:
_c35bh:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c35bl
_c35bm:
	movq $block_c35be_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c35be
_c35bf:
	movq (%rbx),%rax
	jmp *(%rax)
_c35bl:
	movl $GHC.Float.$fRealFracFloat_$ctruncate_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFracFloat_$ctruncate_entry, .-GHC.Float.$fRealFracFloat_$ctruncate_entry


==================== Asm code ====================
2018-03-16 15:57:31.863024239 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFracFloat_$ctruncate_info
.type GHC.Float.$fRealFracFloat_$ctruncate_info, @object
GHC.Float.$fRealFracFloat_$ctruncate_info:
	.quad	GHC.Float.$fRealFracFloat_$ctruncate_entry
	.quad	0
	.quad	21474836494
	.quad	8589934607
	.quad	S2VLN_srt+288


==================== Asm code ====================
2018-03-16 15:57:31.863665899 UTC

.section .text
.align 8
_c35be:
_c35be:
	movq 8(%rbp),%rax
	movq $block_c35bk_info,8(%rbp)
	movss 7(%rbx),%xmm1
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Float.$w$cproperFraction1_entry
	.size _c35be, .-_c35be


==================== Asm code ====================
2018-03-16 15:57:31.86428975 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35be_info:
	.quad	_c35be
	.quad	1
	.quad	4294967326
	.quad	S2VLN_srt+288


==================== Asm code ====================
2018-03-16 15:57:31.864875248 UTC

.section .text
.align 8
_c35bk:
_c35bk:
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c35bk, .-_c35bk


==================== Asm code ====================
2018-03-16 15:57:31.865452531 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35bk_info:
	.quad	_c35bk
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.87112935 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFracFloat_$cceiling_closure
.type GHC.Float.$fRealFracFloat_$cceiling_closure, @object
GHC.Float.$fRealFracFloat_$cceiling_closure:
	.quad	GHC.Float.$fRealFracFloat_$cceiling_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:31.871963709 UTC

.section .text
.align 8
sat_s2UO8_entry:
_c35c9:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c35ca
_c35cb:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Float.$fRealDouble1_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c35ca:
	jmp *-16(%r13)
	.size sat_s2UO8_entry, .-sat_s2UO8_entry


==================== Asm code ====================
2018-03-16 15:57:31.872661501 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2UO8_info:
	.quad	sat_s2UO8_entry
	.quad	1
	.quad	4294967312
	.quad	S2VLN_srt+312


==================== Asm code ====================
2018-03-16 15:57:31.873524191 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFracFloat_$cceiling_entry
.type GHC.Float.$fRealFracFloat_$cceiling_entry, @object
GHC.Float.$fRealFracFloat_$cceiling_entry:
_c35cc:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c35cd
_c35ce:
	movq $block_c35bH_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c35bH
_c35bI:
	movq (%rbx),%rax
	jmp *(%rax)
_c35cd:
	movl $GHC.Float.$fRealFracFloat_$cceiling_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFracFloat_$cceiling_entry, .-GHC.Float.$fRealFracFloat_$cceiling_entry


==================== Asm code ====================
2018-03-16 15:57:31.87426634 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFracFloat_$cceiling_info
.type GHC.Float.$fRealFracFloat_$cceiling_info, @object
GHC.Float.$fRealFracFloat_$cceiling_info:
	.quad	GHC.Float.$fRealFracFloat_$cceiling_entry
	.quad	0
	.quad	107374182414
	.quad	8589934607
	.quad	S2VLN_srt+288


==================== Asm code ====================
2018-03-16 15:57:31.875477161 UTC

.section .text
.align 8
_c35bH:
_c35bH:
	movq $block_c35bM_info,(%rbp)
	movss 7(%rbx),%xmm1
	movq 8(%rbp),%r14
	jmp GHC.Float.$w$cproperFraction1_entry
	.size _c35bH, .-_c35bH


==================== Asm code ====================
2018-03-16 15:57:31.876099664 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35bH_info:
	.quad	_c35bH
	.quad	1
	.quad	38654705694
	.quad	S2VLN_srt+288


==================== Asm code ====================
2018-03-16 15:57:31.876774944 UTC

.section .text
.align 8
_c35bM:
_c35bM:
	movq $block_c35bO_info,-8(%rbp)
	movq %rbx,%rax
	movq %r14,%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c35bO
_c35bP:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c35bM, .-_c35bM


==================== Asm code ====================
2018-03-16 15:57:31.877402201 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35bM_info:
	.quad	_c35bM
	.quad	1
	.quad	4294967326
	.quad	S2VLN_srt+312


==================== Asm code ====================
2018-03-16 15:57:31.878137987 UTC

.section .text
.align 8
_c35bO:
_c35bO:
	movss 7(%rbx),%xmm0
	xorps %xmm1,%xmm1
	ucomiss %xmm1,%xmm0
	ja _c35ck
_c35cj:
	movq 8(%rbp),%rbx
	addq $24,%rbp
	jmp stg_ap_0_fast
_c35ck:
	movq $block_c35bX_info,(%rbp)
	movq 16(%rbp),%r14
	jmp GHC.Real.$p1Integral_entry
	.size _c35bO, .-_c35bO


==================== Asm code ====================
2018-03-16 15:57:31.878775376 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35bO_info:
	.quad	_c35bO
	.quad	2
	.quad	4294967326
	.quad	S2VLN_srt+312


==================== Asm code ====================
2018-03-16 15:57:31.879362837 UTC

.section .text
.align 8
_c35bX:
_c35bX:
	movq $block_c35c1_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p1Real_entry
	.size _c35bX, .-_c35bX


==================== Asm code ====================
2018-03-16 15:57:31.879925741 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35bX_info:
	.quad	_c35bX
	.quad	130
	.quad	4294967326
	.quad	S2VLN_srt+312


==================== Asm code ====================
2018-03-16 15:57:31.880619587 UTC

.section .text
.align 8
_c35c1:
_c35c1:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c35co
_c35cn:
	movq $sat_s2UO8_info,-16(%r12)
	movq %rbx,(%r12)
	movq %rbx,%r14
	movq $stg_ap_pp_info,(%rbp)
	leaq -16(%r12),%rax
	movq %rax,16(%rbp)
	jmp GHC.Num.+_entry
_c35co:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c35c1, .-_c35c1


==================== Asm code ====================
2018-03-16 15:57:31.881321448 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35c1_info:
	.quad	_c35c1
	.quad	130
	.quad	4294967326
	.quad	S2VLN_srt+312


==================== Asm code ====================
2018-03-16 15:57:31.886836741 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFracFloat_$cfloor_closure
.type GHC.Float.$fRealFracFloat_$cfloor_closure, @object
GHC.Float.$fRealFracFloat_$cfloor_closure:
	.quad	GHC.Float.$fRealFracFloat_$cfloor_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:31.887637239 UTC

.section .text
.align 8
sat_s2UOl_entry:
_c35dr:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c35ds
_c35dt:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Float.$fRealDouble1_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c35ds:
	jmp *-16(%r13)
	.size sat_s2UOl_entry, .-sat_s2UOl_entry


==================== Asm code ====================
2018-03-16 15:57:31.888269555 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2UOl_info:
	.quad	sat_s2UOl_entry
	.quad	1
	.quad	4294967312
	.quad	S2VLN_srt+312


==================== Asm code ====================
2018-03-16 15:57:31.889015123 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFracFloat_$cfloor_entry
.type GHC.Float.$fRealFracFloat_$cfloor_entry, @object
GHC.Float.$fRealFracFloat_$cfloor_entry:
_c35du:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c35dv
_c35dw:
	movq $block_c35cZ_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c35cZ
_c35d0:
	movq (%rbx),%rax
	jmp *(%rax)
_c35dv:
	movl $GHC.Float.$fRealFracFloat_$cfloor_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFracFloat_$cfloor_entry, .-GHC.Float.$fRealFracFloat_$cfloor_entry


==================== Asm code ====================
2018-03-16 15:57:31.889763007 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFracFloat_$cfloor_info
.type GHC.Float.$fRealFracFloat_$cfloor_info, @object
GHC.Float.$fRealFracFloat_$cfloor_info:
	.quad	GHC.Float.$fRealFracFloat_$cfloor_entry
	.quad	0
	.quad	176093659150
	.quad	8589934607
	.quad	S2VLN_srt+288


==================== Asm code ====================
2018-03-16 15:57:31.890487778 UTC

.section .text
.align 8
_c35cZ:
_c35cZ:
	movq $block_c35d4_info,(%rbp)
	movss 7(%rbx),%xmm1
	movq 8(%rbp),%r14
	jmp GHC.Float.$w$cproperFraction1_entry
	.size _c35cZ, .-_c35cZ


==================== Asm code ====================
2018-03-16 15:57:31.891084229 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35cZ_info:
	.quad	_c35cZ
	.quad	1
	.quad	38654705694
	.quad	S2VLN_srt+288


==================== Asm code ====================
2018-03-16 15:57:31.891813097 UTC

.section .text
.align 8
_c35d4:
_c35d4:
	movq $block_c35d6_info,-8(%rbp)
	movq %rbx,%rax
	movq %r14,%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c35d6
_c35d7:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c35d4, .-_c35d4


==================== Asm code ====================
2018-03-16 15:57:31.892453542 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35d4_info:
	.quad	_c35d4
	.quad	1
	.quad	4294967326
	.quad	S2VLN_srt+312


==================== Asm code ====================
2018-03-16 15:57:31.893198046 UTC

.section .text
.align 8
_c35d6:
_c35d6:
	movss 7(%rbx),%xmm0
	xorps %xmm1,%xmm1
	ucomiss %xmm1,%xmm0
	jp _c35dB
	jb _c35dC
_c35dB:
	movq 8(%rbp),%rbx
	addq $24,%rbp
	jmp stg_ap_0_fast
_c35dC:
	movq $block_c35df_info,(%rbp)
	movq 16(%rbp),%r14
	jmp GHC.Real.$p1Integral_entry
	.size _c35d6, .-_c35d6


==================== Asm code ====================
2018-03-16 15:57:31.893874847 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35d6_info:
	.quad	_c35d6
	.quad	2
	.quad	4294967326
	.quad	S2VLN_srt+312


==================== Asm code ====================
2018-03-16 15:57:31.894544387 UTC

.section .text
.align 8
_c35df:
_c35df:
	movq $block_c35dj_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p1Real_entry
	.size _c35df, .-_c35df


==================== Asm code ====================
2018-03-16 15:57:31.895121257 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35df_info:
	.quad	_c35df
	.quad	130
	.quad	4294967326
	.quad	S2VLN_srt+312


==================== Asm code ====================
2018-03-16 15:57:31.895937768 UTC

.section .text
.align 8
_c35dj:
_c35dj:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c35dG
_c35dF:
	movq $sat_s2UOl_info,-16(%r12)
	movq %rbx,(%r12)
	movq %rbx,%r14
	movq $stg_ap_pp_info,(%rbp)
	leaq -16(%r12),%rax
	movq %rax,16(%rbp)
	jmp GHC.Num.-_entry
_c35dG:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c35dj, .-_c35dj


==================== Asm code ====================
2018-03-16 15:57:31.896573476 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35dj_info:
	.quad	_c35dj
	.quad	130
	.quad	4294967326
	.quad	S2VLN_srt+312


==================== Asm code ====================
2018-03-16 15:57:31.905298651 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$w$cround1_closure
.type GHC.Float.$w$cround1_closure, @object
GHC.Float.$w$cround1_closure:
	.quad	GHC.Float.$w$cround1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:31.90607789 UTC

.section .text
.align 8
.globl GHC.Float.$w$cround1_slow
.type GHC.Float.$w$cround1_slow, @object
GHC.Float.$w$cround1_slow:
_c35ee:
	movss 8(%rbp),%xmm1
	movq (%rbp),%r14
	addq $16,%rbp
	jmp GHC.Float.$w$cround1_entry
	.size GHC.Float.$w$cround1_slow, .-GHC.Float.$w$cround1_slow


==================== Asm code ====================
2018-03-16 15:57:31.907439661 UTC

.section .text
.align 8
sat_s2UOA_entry:
_c35eS:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c35eT
_c35eU:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Float.$fRealDouble1_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c35eT:
	jmp *-16(%r13)
	.size sat_s2UOA_entry, .-sat_s2UOA_entry


==================== Asm code ====================
2018-03-16 15:57:31.908093185 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2UOA_info:
	.quad	sat_s2UOA_entry
	.quad	1
	.quad	4294967312
	.quad	S2VLN_srt+312


==================== Asm code ====================
2018-03-16 15:57:31.908797773 UTC

.section .text
.align 8
sat_s2UOB_entry:
_c35f0:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c35f1
_c35f2:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Float.$fRealDouble1_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c35f1:
	jmp *-16(%r13)
	.size sat_s2UOB_entry, .-sat_s2UOB_entry


==================== Asm code ====================
2018-03-16 15:57:31.909489069 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2UOB_info:
	.quad	sat_s2UOB_entry
	.quad	1
	.quad	4294967312
	.quad	S2VLN_srt+312


==================== Asm code ====================
2018-03-16 15:57:31.910203415 UTC

.section .text
.align 8
.globl GHC.Float.$w$cround1_entry
.type GHC.Float.$w$cround1_entry, @object
GHC.Float.$w$cround1_entry:
_c35f3:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c35f4
_c35f5:
	movq $block_c35ei_info,-16(%rbp)
	movq %r14,%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Float.$w$cproperFraction1_entry
_c35f4:
	movl $GHC.Float.$w$cround1_closure,%ebx
	movq %r14,-16(%rbp)
	movss %xmm1,-8(%rbp)
	addq $-16,%rbp
	jmp *-8(%r13)
	.size GHC.Float.$w$cround1_entry, .-GHC.Float.$w$cround1_entry


==================== Asm code ====================
2018-03-16 15:57:31.910870345 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$w$cround1_info
.type GHC.Float.$w$cround1_info, @object
GHC.Float.$w$cround1_info:
	.quad	GHC.Float.$w$cround1_entry
	.quad	0
	.quad	863288426510
	.quad	8589934592
	.quad	S2VLN_srt+288
	.quad	130
	.quad	GHC.Float.$w$cround1_slow


==================== Asm code ====================
2018-03-16 15:57:31.911600765 UTC

.section .text
.align 8
_c35ei:
_c35ei:
	movq $block_c35ek_info,-8(%rbp)
	movq %rbx,%rax
	movq %r14,%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c35ek
_c35el:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c35ei, .-_c35ei


==================== Asm code ====================
2018-03-16 15:57:31.912164042 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35ei_info:
	.quad	_c35ei
	.quad	1
	.quad	38654705694
	.quad	S2VLN_srt+312


==================== Asm code ====================
2018-03-16 15:57:31.913016164 UTC

.section .text
.align 8
_c35ek:
_c35ek:
	movq 16(%rbp),%rax
	movq 8(%rbp),%rcx
	movss 7(%rbx),%xmm0
	movss %xmm0,%xmm1
	movss _n35g5(%rip),%xmm2
	andps %xmm2,%xmm1
	subss _n35g7(%rip),%xmm1
	xorps %xmm2,%xmm2
	ucomiss %xmm2,%xmm1
	jp _c35fz
	jb _u35fC
_c35fz:
	xorps %xmm2,%xmm2
	ucomiss %xmm2,%xmm1
	jp _u35fD
	je _c35fn
_u35fD:
	movss %xmm0,(%rbp)
	jmp _s2UOw
_u35fC:
	addq $8,%rbp
	jmp _c35fA
_c35fn:
	movq $block_c35fm_info,-8(%rbp)
	movq %rcx,%rsi
	movq %rax,%r14
	movss %xmm0,(%rbp)
	addq $-8,%rbp
	jmp GHC.Real.even_entry
	.size _c35ek, .-_c35ek
.section .rodata
.align 8
.align 4
_n35g5:
	.long	2147483647
.section .rodata
.align 8
.align 4
_n35g7:
	.byte	0
	.byte	0
	.byte	0
	.byte	63


==================== Asm code ====================
2018-03-16 15:57:31.913935016 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35ek_info:
	.quad	_c35ek
	.quad	2
	.quad	38654705694
	.quad	S2VLN_srt+312


==================== Asm code ====================
2018-03-16 15:57:31.914612069 UTC

.section .text
.align 8
_c35fm:
_c35fm:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u35fE
_u35fF:
	addq $16,%rbp
	jmp _c35fA
_u35fE:
	addq $8,%rbp
	jmp _s2UOw
	.size _c35fm, .-_c35fm


==================== Asm code ====================
2018-03-16 15:57:31.915230063 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35fm_info:
	.quad	_c35fm
	.quad	67
	.quad	4294967326
	.quad	S2VLN_srt+312


==================== Asm code ====================
2018-03-16 15:57:31.915852943 UTC

.section .text
.align 8
_c35fA:
_c35fA:
	movq (%rbp),%rbx
	addq $16,%rbp
	jmp stg_ap_0_fast
	.size _c35fA, .-_c35fA


==================== Asm code ====================
2018-03-16 15:57:31.916482105 UTC

.section .text
.align 8
_s2UOw:
_s2UOw:
	movq $block_c35eD_info,-8(%rbp)
	movq 16(%rbp),%r14
	addq $-8,%rbp
	jmp GHC.Real.$p1Integral_entry
	.size _s2UOw, .-_s2UOw


==================== Asm code ====================
2018-03-16 15:57:31.917112873 UTC

.section .text
.align 8
_c35eD:
_c35eD:
	movq $block_c35eH_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p1Real_entry
	.size _c35eD, .-_c35eD


==================== Asm code ====================
2018-03-16 15:57:31.917711046 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35eD_info:
	.quad	_c35eD
	.quad	323
	.quad	4294967326
	.quad	S2VLN_srt+312


==================== Asm code ====================
2018-03-16 15:57:31.918526534 UTC

.section .text
.align 8
_c35eH:
_c35eH:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c35fc
_c35fb:
	movss 8(%rbp),%xmm0
	xorps %xmm1,%xmm1
	ucomiss %xmm1,%xmm0
	jp _c35fe
	jb _c35ff
_c35fe:
	movq $sat_s2UOA_info,-16(%r12)
	movq %rbx,(%r12)
	movq %rbx,%r14
	movq $stg_ap_pp_info,8(%rbp)
	leaq -16(%r12),%rax
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp GHC.Num.+_entry
_c35ff:
	movq $sat_s2UOB_info,-16(%r12)
	movq %rbx,(%r12)
	movq %rbx,%r14
	movq $stg_ap_pp_info,8(%rbp)
	leaq -16(%r12),%rax
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp GHC.Num.-_entry
_c35fc:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c35eH, .-_c35eH


==================== Asm code ====================
2018-03-16 15:57:31.919268809 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35eH_info:
	.quad	_c35eH
	.quad	323
	.quad	4294967326
	.quad	S2VLN_srt+312


==================== Asm code ====================
2018-03-16 15:57:31.922587951 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFracFloat_$cround_closure
.type GHC.Float.$fRealFracFloat_$cround_closure, @object
GHC.Float.$fRealFracFloat_$cround_closure:
	.quad	GHC.Float.$fRealFracFloat_$cround_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:31.923460525 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFracFloat_$cround_entry
.type GHC.Float.$fRealFracFloat_$cround_entry, @object
GHC.Float.$fRealFracFloat_$cround_entry:
_c35gG:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c35gH
_c35gI:
	movq $block_c35gD_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c35gD
_c35gE:
	movq (%rbx),%rax
	jmp *(%rax)
_c35gH:
	movl $GHC.Float.$fRealFracFloat_$cround_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFracFloat_$cround_entry, .-GHC.Float.$fRealFracFloat_$cround_entry


==================== Asm code ====================
2018-03-16 15:57:31.924151879 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFracFloat_$cround_info
.type GHC.Float.$fRealFracFloat_$cround_info, @object
GHC.Float.$fRealFracFloat_$cround_info:
	.quad	GHC.Float.$fRealFracFloat_$cround_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S2VLN_srt+344


==================== Asm code ====================
2018-03-16 15:57:31.924829395 UTC

.section .text
.align 8
_c35gD:
_c35gD:
	movss 7(%rbx),%xmm1
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Float.$w$cround1_entry
	.size _c35gD, .-_c35gD


==================== Asm code ====================
2018-03-16 15:57:31.925554513 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35gD_info:
	.quad	_c35gD
	.quad	1
	.quad	4294967326
	.quad	S2VLN_srt+344


==================== Asm code ====================
2018-03-16 15:57:31.930907985 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fFloatingDouble_$catanh_closure
.type GHC.Float.$fFloatingDouble_$catanh_closure, @object
GHC.Float.$fFloatingDouble_$catanh_closure:
	.quad	GHC.Float.$fFloatingDouble_$catanh_info


==================== Asm code ====================
2018-03-16 15:57:31.932034703 UTC

.section .text
.align 8
.globl GHC.Float.$fFloatingDouble_$catanh_entry
.type GHC.Float.$fFloatingDouble_$catanh_entry, @object
GHC.Float.$fFloatingDouble_$catanh_entry:
_c35h3:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c35hn
_c35ho:
	movq $block_c35h0_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c35h0
_c35h1:
	movq (%rbx),%rax
	jmp *(%rax)
_c35hn:
	movl $GHC.Float.$fFloatingDouble_$catanh_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fFloatingDouble_$catanh_entry, .-GHC.Float.$fFloatingDouble_$catanh_entry


==================== Asm code ====================
2018-03-16 15:57:31.933106553 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fFloatingDouble_$catanh_info
.type GHC.Float.$fFloatingDouble_$catanh_info, @object
GHC.Float.$fFloatingDouble_$catanh_info:
	.quad	GHC.Float.$fFloatingDouble_$catanh_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:31.935162129 UTC

.section .text
.align 8
_c35h0:
_c35h0:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c35hr
_c35hq:
	movsd 7(%rbx),%xmm0
	subq $8,%rsp
	movsd _n35hA(%rip),%xmm1
	subsd %xmm0,%xmm1
	addsd _n35hD(%rip),%xmm0
	divsd %xmm1,%xmm0
	movl $1,%eax
	call log
	addq $8,%rsp
	movq $GHC.Types.D#_con_info,-8(%r12)
	mulsd _n35hG(%rip),%xmm0
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c35hr:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c35h0, .-_c35h0
.section .rodata
.align 8
.align 8
_n35hA:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	240
	.byte	63
.section .rodata
.align 8
.align 8
_n35hD:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	240
	.byte	63
.section .rodata
.align 8
.align 8
_n35hG:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	224
	.byte	63


==================== Asm code ====================
2018-03-16 15:57:31.936285527 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35h0_info:
	.quad	_c35h0
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.945641472 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$w$ctoRational1_closure
.type GHC.Float.$w$ctoRational1_closure, @object
GHC.Float.$w$ctoRational1_closure:
	.quad	GHC.Float.$w$ctoRational1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:31.946472925 UTC

.section .text
.align 8
.globl GHC.Float.$w$ctoRational1_entry
.type GHC.Float.$w$ctoRational1_entry, @object
GHC.Float.$w$ctoRational1_entry:
_c35hZ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c35i0
_c35i1:
	movq $block_c35hQ_info,-8(%rbp)
	addq $-8,%rbp
	jmp stg_decodeFloat_Int#
_c35i0:
	movl $GHC.Float.$w$ctoRational1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$w$ctoRational1_entry, .-GHC.Float.$w$ctoRational1_entry


==================== Asm code ====================
2018-03-16 15:57:31.947110807 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$w$ctoRational1_info
.type GHC.Float.$w$ctoRational1_info, @object
GHC.Float.$w$ctoRational1_info:
	.quad	GHC.Float.$w$ctoRational1_entry
	.quad	0
	.quad	828928688142
	.quad	4294967302
	.quad	S2VLN_srt+312


==================== Asm code ====================
2018-03-16 15:57:31.947914594 UTC

.section .text
.align 8
_c35hQ:
_c35hQ:
	testq %r14,%r14
	jl _c35hX
_c35hY:
	movq $block_c35iT_info,-8(%rbp)
	movq %r14,%rax
	movq %rbx,%r14
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
_c35iK:
	movq $block_c35iA_info,(%rbp)
	movq %r14,%rsi
	negq %rsi
	movq %rbx,%r14
	jmp GHC.Float.ConversionUtils.elimZerosInt#_entry
_c35hX:
	testb $1,%bl
	je _c35iK
_c35im:
	movq $block_c35id_info,-8(%rbp)
	movq %r14,%rax
	movq %rbx,%r14
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
	.size _c35hQ, .-_c35hQ


==================== Asm code ====================
2018-03-16 15:57:31.948595149 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35hQ_info:
	.quad	_c35hQ
	.quad	0
	.quad	279172874270
	.quad	S2VLN_srt+312


==================== Asm code ====================
2018-03-16 15:57:31.949602233 UTC

.section .text
.align 8
_c35iA:
_c35iA:
	movq $block_c35iE_info,-8(%rbp)
	movq %r14,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c35iE
_c35iF:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c35iA, .-_c35iA


==================== Asm code ====================
2018-03-16 15:57:31.950174149 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35iA_info:
	.quad	_c35iA
	.quad	0
	.quad	4294967326
	.quad	S2VLN_srt+312


==================== Asm code ====================
2018-03-16 15:57:31.950806432 UTC

.section .text
.align 8
_c35iE:
_c35iE:
	movq $block_c35iJ_info,(%rbp)
	movq 8(%rbp),%rsi
	movl $GHC.Float.$fRealDouble1_closure,%r14d
	movq %rbx,8(%rbp)
	jmp GHC.Integer.Type.shiftLInteger_entry
	.size _c35iE, .-_c35iE


==================== Asm code ====================
2018-03-16 15:57:31.951373785 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35iE_info:
	.quad	_c35iE
	.quad	65
	.quad	4294967326
	.quad	S2VLN_srt+312


==================== Asm code ====================
2018-03-16 15:57:31.952022279 UTC

.section .text
.align 8
_c35iJ:
_c35iJ:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c35iJ, .-_c35iJ


==================== Asm code ====================
2018-03-16 15:57:31.952587869 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35iJ_info:
	.quad	_c35iJ
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.953355583 UTC

.section .text
.align 8
_c35id:
_c35id:
	movq $block_c35ik_info,(%rbp)
	movq 8(%rbp),%rsi
	negq %rsi
	movl $GHC.Float.$fRealDouble1_closure,%r14d
	movq %rbx,8(%rbp)
	jmp GHC.Integer.Type.shiftLInteger_entry
	.size _c35id, .-_c35id


==================== Asm code ====================
2018-03-16 15:57:31.954011433 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35id_info:
	.quad	_c35id
	.quad	65
	.quad	4294967326
	.quad	S2VLN_srt+312


==================== Asm code ====================
2018-03-16 15:57:31.954674943 UTC

.section .text
.align 8
_c35ik:
_c35ik:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c35ik, .-_c35ik


==================== Asm code ====================
2018-03-16 15:57:31.955235745 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35ik_info:
	.quad	_c35ik
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.955891809 UTC

.section .text
.align 8
_c35iT:
_c35iT:
	movq 8(%rbp),%rax
	movq $block_c35iX_info,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.shiftLInteger_entry
	.size _c35iT, .-_c35iT


==================== Asm code ====================
2018-03-16 15:57:31.956491602 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35iT_info:
	.quad	_c35iT
	.quad	65
	.quad	4294967326
	.quad	S2VLN_srt+312


==================== Asm code ====================
2018-03-16 15:57:31.957128887 UTC

.section .text
.align 8
_c35iX:
_c35iX:
	movl $GHC.Float.$fRealDouble1_closure,%r14d
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c35iX, .-_c35iX


==================== Asm code ====================
2018-03-16 15:57:31.957737171 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35iX_info:
	.quad	_c35iX
	.quad	0
	.quad	4294967326
	.quad	S2VLN_srt+312


==================== Asm code ====================
2018-03-16 15:57:31.9615264 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloat_$ctoRational_closure
.type GHC.Float.$fRealFloat_$ctoRational_closure, @object
GHC.Float.$fRealFloat_$ctoRational_closure:
	.quad	GHC.Float.$fRealFloat_$ctoRational_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:31.962298319 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFloat_$ctoRational_entry
.type GHC.Float.$fRealFloat_$ctoRational_entry, @object
GHC.Float.$fRealFloat_$ctoRational_entry:
_c35jI:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c35jO
_c35jP:
	movq $block_c35jF_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c35jF
_c35jG:
	movq (%rbx),%rax
	jmp *(%rax)
_c35jO:
	movl $GHC.Float.$fRealFloat_$ctoRational_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFloat_$ctoRational_entry, .-GHC.Float.$fRealFloat_$ctoRational_entry


==================== Asm code ====================
2018-03-16 15:57:31.96295761 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFloat_$ctoRational_info
.type GHC.Float.$fRealFloat_$ctoRational_info, @object
GHC.Float.$fRealFloat_$ctoRational_info:
	.quad	GHC.Float.$fRealFloat_$ctoRational_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S2VLN_srt+368


==================== Asm code ====================
2018-03-16 15:57:31.963581267 UTC

.section .text
.align 8
_c35jF:
_c35jF:
	movq $block_c35jL_info,(%rbp)
	movss 7(%rbx),%xmm1
	jmp GHC.Float.$w$ctoRational1_entry
	.size _c35jF, .-_c35jF


==================== Asm code ====================
2018-03-16 15:57:31.964146238 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35jF_info:
	.quad	_c35jF
	.quad	0
	.quad	4294967326
	.quad	S2VLN_srt+368


==================== Asm code ====================
2018-03-16 15:57:31.964897985 UTC

.section .text
.align 8
_c35jL:
_c35jL:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c35jT
_c35jS:
	movq $GHC.Real.:%_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c35jT:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c35jL, .-_c35jL


==================== Asm code ====================
2018-03-16 15:57:31.965763043 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35jL_info:
	.quad	_c35jL
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.971988064 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$w$ctoRational_closure
.type GHC.Float.$w$ctoRational_closure, @object
GHC.Float.$w$ctoRational_closure:
	.quad	GHC.Float.$w$ctoRational_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:31.972819958 UTC

.section .text
.align 8
.globl GHC.Float.$w$ctoRational_entry
.type GHC.Float.$w$ctoRational_entry, @object
GHC.Float.$w$ctoRational_entry:
_c35kl:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c35km
_c35kn:
	movq $block_c35kc_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.decodeDoubleInteger_entry
_c35km:
	movl $GHC.Float.$w$ctoRational_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$w$ctoRational_entry, .-GHC.Float.$w$ctoRational_entry


==================== Asm code ====================
2018-03-16 15:57:31.973628308 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$w$ctoRational_info
.type GHC.Float.$w$ctoRational_info, @object
GHC.Float.$w$ctoRational_info:
	.quad	GHC.Float.$w$ctoRational_entry
	.quad	0
	.quad	6876242640910
	.quad	4294967303
	.quad	S2VLN_srt+312


==================== Asm code ====================
2018-03-16 15:57:31.974420869 UTC

.section .text
.align 8
_c35kc:
_c35kc:
	testq %r14,%r14
	jl _c35kj
_c35kk:
	movq $block_c35ln_info,(%rbp)
	movq %r14,%rsi
	movq %rbx,%r14
	jmp GHC.Integer.Type.shiftLInteger_entry
_c35kj:
	movq $block_c35kq_info,-16(%rbp)
	movq %r14,%rax
	movq %rbx,%r14
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp GHC.Integer.Type.integerToWord_entry
	.size _c35kc, .-_c35kc


==================== Asm code ====================
2018-03-16 15:57:31.975667293 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35kc_info:
	.quad	_c35kc
	.quad	0
	.quad	279172874270
	.quad	S2VLN_srt+312


==================== Asm code ====================
2018-03-16 15:57:31.976436655 UTC

.section .text
.align 8
_c35kq:
_c35kq:
	movq 16(%rbp),%rax
	testb $1,%bl
	je _c35ld
_c35kL:
	movq $block_c35kB_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c35kB
_c35kC:
	movq (%rbx),%rax
	jmp *(%rax)
_c35ld:
	movq $block_c35kW_info,(%rbp)
	movq %rax,%r14
	jmp GHC.Integer.Type.integerToInt_entry
	.size _c35kq, .-_c35kq


==================== Asm code ====================
2018-03-16 15:57:31.977043674 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35kq_info:
	.quad	_c35kq
	.quad	66
	.quad	279172874270
	.quad	S2VLN_srt+312


==================== Asm code ====================
2018-03-16 15:57:31.977738478 UTC

.section .text
.align 8
_c35kW:
_c35kW:
	movq $block_c35l3_info,16(%rbp)
	movq 8(%rbp),%rsi
	negq %rsi
	movq %rbx,%r14
	addq $16,%rbp
	jmp GHC.Float.ConversionUtils.elimZerosInt#_entry
	.size _c35kW, .-_c35kW


==================== Asm code ====================
2018-03-16 15:57:31.978350839 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35kW_info:
	.quad	_c35kW
	.quad	194
	.quad	279172874270
	.quad	S2VLN_srt+312


==================== Asm code ====================
2018-03-16 15:57:31.979009202 UTC

.section .text
.align 8
_c35l3:
_c35l3:
	movq $block_c35l7_info,-8(%rbp)
	movq %r14,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c35l7
_c35l8:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c35l3, .-_c35l3


==================== Asm code ====================
2018-03-16 15:57:31.979584931 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35l3_info:
	.quad	_c35l3
	.quad	0
	.quad	4294967326
	.quad	S2VLN_srt+312


==================== Asm code ====================
2018-03-16 15:57:31.980227847 UTC

.section .text
.align 8
_c35l7:
_c35l7:
	movq $block_c35lc_info,(%rbp)
	movq 8(%rbp),%rsi
	movl $GHC.Float.$fRealDouble1_closure,%r14d
	movq %rbx,8(%rbp)
	jmp GHC.Integer.Type.shiftLInteger_entry
	.size _c35l7, .-_c35l7


==================== Asm code ====================
2018-03-16 15:57:31.980838844 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35l7_info:
	.quad	_c35l7
	.quad	65
	.quad	4294967326
	.quad	S2VLN_srt+312


==================== Asm code ====================
2018-03-16 15:57:31.981552475 UTC

.section .text
.align 8
_c35lc:
_c35lc:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c35lc, .-_c35lc


==================== Asm code ====================
2018-03-16 15:57:31.982104464 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35lc_info:
	.quad	_c35lc
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.982749608 UTC

.section .text
.align 8
_c35kB:
_c35kB:
	movq 8(%rbp),%rax
	negq %rax
	movq $block_c35kJ_info,8(%rbp)
	movq %rax,%rsi
	movl $GHC.Float.$fRealDouble1_closure,%r14d
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp GHC.Integer.Type.shiftLInteger_entry
	.size _c35kB, .-_c35kB


==================== Asm code ====================
2018-03-16 15:57:31.983277239 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35kB_info:
	.quad	_c35kB
	.quad	194
	.quad	4294967326
	.quad	S2VLN_srt+312


==================== Asm code ====================
2018-03-16 15:57:31.983878578 UTC

.section .text
.align 8
_c35kJ:
_c35kJ:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c35kJ, .-_c35kJ


==================== Asm code ====================
2018-03-16 15:57:31.984438375 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35kJ_info:
	.quad	_c35kJ
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.984988148 UTC

.section .text
.align 8
_c35ln:
_c35ln:
	movl $GHC.Float.$fRealDouble1_closure,%r14d
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c35ln, .-_c35ln


==================== Asm code ====================
2018-03-16 15:57:31.985850989 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35ln_info:
	.quad	_c35ln
	.quad	0
	.quad	4294967326
	.quad	S2VLN_srt+312


==================== Asm code ====================
2018-03-16 15:57:31.989403409 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealDouble_$ctoRational_closure
.type GHC.Float.$fRealDouble_$ctoRational_closure, @object
GHC.Float.$fRealDouble_$ctoRational_closure:
	.quad	GHC.Float.$fRealDouble_$ctoRational_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:31.990233529 UTC

.section .text
.align 8
.globl GHC.Float.$fRealDouble_$ctoRational_entry
.type GHC.Float.$fRealDouble_$ctoRational_entry, @object
GHC.Float.$fRealDouble_$ctoRational_entry:
_c35mc:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c35mi
_c35mj:
	movq $block_c35m9_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c35m9
_c35ma:
	movq (%rbx),%rax
	jmp *(%rax)
_c35mi:
	movl $GHC.Float.$fRealDouble_$ctoRational_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fRealDouble_$ctoRational_entry, .-GHC.Float.$fRealDouble_$ctoRational_entry


==================== Asm code ====================
2018-03-16 15:57:31.990855611 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealDouble_$ctoRational_info
.type GHC.Float.$fRealDouble_$ctoRational_info, @object
GHC.Float.$fRealDouble_$ctoRational_info:
	.quad	GHC.Float.$fRealDouble_$ctoRational_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S2VLN_srt+392


==================== Asm code ====================
2018-03-16 15:57:31.991524786 UTC

.section .text
.align 8
_c35m9:
_c35m9:
	movq $block_c35mf_info,(%rbp)
	movsd 7(%rbx),%xmm1
	jmp GHC.Float.$w$ctoRational_entry
	.size _c35m9, .-_c35m9


==================== Asm code ====================
2018-03-16 15:57:31.992073953 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35m9_info:
	.quad	_c35m9
	.quad	0
	.quad	4294967326
	.quad	S2VLN_srt+392


==================== Asm code ====================
2018-03-16 15:57:31.992791973 UTC

.section .text
.align 8
_c35mf:
_c35mf:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c35mn
_c35mm:
	movq $GHC.Real.:%_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c35mn:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c35mf, .-_c35mf


==================== Asm code ====================
2018-03-16 15:57:31.993470531 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35mf_info:
	.quad	_c35mf
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:31.995387321 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fFloatingFloat_$cpi_closure
.type GHC.Float.$fFloatingFloat_$cpi_closure, @object
GHC.Float.$fFloatingFloat_$cpi_closure:
	.quad	GHC.Types.F#_con_info
	.byte	219
	.byte	15
	.byte	73
	.byte	64
	.long	0


==================== Asm code ====================
2018-03-16 15:57:31.997196496 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fFloatingDouble_$cpi_closure
.type GHC.Float.$fFloatingDouble_$cpi_closure, @object
GHC.Float.$fFloatingDouble_$cpi_closure:
	.quad	GHC.Types.D#_con_info
	.byte	24
	.byte	45
	.byte	68
	.byte	84
	.byte	251
	.byte	33
	.byte	9
	.byte	64


==================== Asm code ====================
2018-03-16 15:57:31.999398576 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat_$cisIEEE_closure
.type GHC.Float.$fRealFloatFloat_$cisIEEE_closure, @object
GHC.Float.$fRealFloatFloat_$cisIEEE_closure:
	.quad	GHC.Float.$fRealFloatFloat_$cisIEEE_info


==================== Asm code ====================
2018-03-16 15:57:32.000088994 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFloatFloat_$cisIEEE_entry
.type GHC.Float.$fRealFloatFloat_$cisIEEE_entry, @object
GHC.Float.$fRealFloatFloat_$cisIEEE_entry:
_c35mI:
	movl $GHC.Types.True_closure+2,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Float.$fRealFloatFloat_$cisIEEE_entry, .-GHC.Float.$fRealFloatFloat_$cisIEEE_entry


==================== Asm code ====================
2018-03-16 15:57:32.000679296 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat_$cisIEEE_info
.type GHC.Float.$fRealFloatFloat_$cisIEEE_info, @object
GHC.Float.$fRealFloatFloat_$cisIEEE_info:
	.quad	GHC.Float.$fRealFloatFloat_$cisIEEE_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:32.004207426 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat_$cencodeFloat_closure
.type GHC.Float.$fRealFloatFloat_$cencodeFloat_closure, @object
GHC.Float.$fRealFloatFloat_$cencodeFloat_closure:
	.quad	GHC.Float.$fRealFloatFloat_$cencodeFloat_info


==================== Asm code ====================
2018-03-16 15:57:32.006035173 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFloatFloat_$cencodeFloat_entry
.type GHC.Float.$fRealFloatFloat_$cencodeFloat_entry, @object
GHC.Float.$fRealFloatFloat_$cencodeFloat_entry:
_c35mX:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c35n5
_c35n6:
	movq $block_c35mU_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c35mU
_c35mV:
	movq (%rbx),%rax
	jmp *(%rax)
_c35n5:
	movl $GHC.Float.$fRealFloatFloat_$cencodeFloat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFloatFloat_$cencodeFloat_entry, .-GHC.Float.$fRealFloatFloat_$cencodeFloat_entry


==================== Asm code ====================
2018-03-16 15:57:32.006707177 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat_$cencodeFloat_info
.type GHC.Float.$fRealFloatFloat_$cencodeFloat_info, @object
GHC.Float.$fRealFloatFloat_$cencodeFloat_info:
	.quad	GHC.Float.$fRealFloatFloat_$cencodeFloat_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:32.00737326 UTC

.section .text
.align 8
_c35mU:
_c35mU:
	movq 8(%rbp),%rax
	movq $block_c35n0_info,8(%rbp)
	movq 7(%rbx),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.encodeFloatInteger_entry
	.size _c35mU, .-_c35mU


==================== Asm code ====================
2018-03-16 15:57:32.007883247 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35mU_info:
	.quad	_c35mU
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.008575857 UTC

.section .text
.align 8
_c35n0:
_c35n0:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c35na
_c35n9:
	movq $GHC.Types.F#_con_info,-8(%r12)
	movss %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c35na:
	movq $16,904(%r13)
	jmp stg_gc_f1
	.size _c35n0, .-_c35n0


==================== Asm code ====================
2018-03-16 15:57:32.009232318 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35n0_info:
	.quad	_c35n0
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.01365785 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat_$cdecodeFloat_closure
.type GHC.Float.$fRealFloatFloat_$cdecodeFloat_closure, @object
GHC.Float.$fRealFloatFloat_$cdecodeFloat_closure:
	.quad	GHC.Float.$fRealFloatFloat_$cdecodeFloat_info


==================== Asm code ====================
2018-03-16 15:57:32.014456636 UTC

.section .text
.align 8
sat_s2UPO_entry:
_c35nH:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c35nI
_c35nJ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
_c35nI:
	jmp *-16(%r13)
	.size sat_s2UPO_entry, .-sat_s2UPO_entry


==================== Asm code ====================
2018-03-16 15:57:32.015071476 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2UPO_info:
	.quad	sat_s2UPO_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 15:57:32.015806082 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFloatFloat_$cdecodeFloat_entry
.type GHC.Float.$fRealFloatFloat_$cdecodeFloat_entry, @object
GHC.Float.$fRealFloatFloat_$cdecodeFloat_entry:
_c35nK:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c35nM
_c35nN:
	movq $block_c35nt_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c35nt
_c35nu:
	movq (%rbx),%rax
	jmp *(%rax)
_c35nM:
	movl $GHC.Float.$fRealFloatFloat_$cdecodeFloat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFloatFloat_$cdecodeFloat_entry, .-GHC.Float.$fRealFloatFloat_$cdecodeFloat_entry


==================== Asm code ====================
2018-03-16 15:57:32.016427011 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat_$cdecodeFloat_info
.type GHC.Float.$fRealFloatFloat_$cdecodeFloat_info, @object
GHC.Float.$fRealFloatFloat_$cdecodeFloat_info:
	.quad	GHC.Float.$fRealFloatFloat_$cdecodeFloat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:32.017050472 UTC

.section .text
.align 8
_c35nt:
_c35nt:
	movq $block_c35ny_info,(%rbp)
	movss 7(%rbx),%xmm1
	jmp stg_decodeFloat_Int#
	.size _c35nt, .-_c35nt


==================== Asm code ====================
2018-03-16 15:57:32.01766317 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35nt_info:
	.quad	_c35nt
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.01826736 UTC

.section .text
.align 8
_c35ny:
_c35ny:
	movq %r14,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp _c35nz
	.size _c35ny, .-_c35ny


==================== Asm code ====================
2018-03-16 15:57:32.018819511 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35ny_info:
	.quad	_c35ny
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.01955439 UTC

.section .text
.align 8
_c35nz:
_c35nz:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c35nR
_c35nQ:
	movq $GHC.Types.I#_con_info,-56(%r12)
	movq 8(%rbp),%rax
	movq %rax,-48(%r12)
	movq $sat_s2UPO_info,-40(%r12)
	movq 16(%rbp),%rax
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -55(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c35nR:
	movq $64,904(%r13)
	movq $block_c35nz_info,(%rbp)
	jmp stg_gc_noregs
	.size _c35nz, .-_c35nz


==================== Asm code ====================
2018-03-16 15:57:32.020208246 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35nz_info:
	.quad	_c35nz
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.024090688 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$w$cexponent1_closure
.type GHC.Float.$w$cexponent1_closure, @object
GHC.Float.$w$cexponent1_closure:
	.quad	GHC.Float.$w$cexponent1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:32.024801231 UTC

.section .text
.align 8
.globl GHC.Float.$w$cexponent1_entry
.type GHC.Float.$w$cexponent1_entry, @object
GHC.Float.$w$cexponent1_entry:
_c35ot:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c35ou
_c35ov:
	movq $block_c35on_info,-8(%rbp)
	addq $-8,%rbp
	jmp stg_decodeFloat_Int#
_c35ou:
	movl $GHC.Float.$w$cexponent1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$w$cexponent1_entry, .-GHC.Float.$w$cexponent1_entry


==================== Asm code ====================
2018-03-16 15:57:32.025529511 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$w$cexponent1_info
.type GHC.Float.$w$cexponent1_info, @object
GHC.Float.$w$cexponent1_info:
	.quad	GHC.Float.$w$cexponent1_entry
	.quad	0
	.quad	12884901902
	.quad	4294967302
	.quad	S2VLN_srt+408


==================== Asm code ====================
2018-03-16 15:57:32.026198901 UTC

.section .text
.align 8
_c35on:
_c35on:
	movq $block_c35or_info,-8(%rbp)
	movq %r14,%rax
	movq %rbx,%r14
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
	.size _c35on, .-_c35on


==================== Asm code ====================
2018-03-16 15:57:32.026806191 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35on_info:
	.quad	_c35on
	.quad	0
	.quad	4294967326
	.quad	S2VLN_srt+416


==================== Asm code ====================
2018-03-16 15:57:32.027461022 UTC

.section .text
.align 8
_c35or:
_c35or:
	movq $block_c35oz_info,(%rbp)
	movl $GHC.Float.rationalToDouble5_closure,%esi
	movq %rbx,%r14
	jmp GHC.Integer.Type.eqInteger#_entry
	.size _c35or, .-_c35or


==================== Asm code ====================
2018-03-16 15:57:32.028066614 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35or_info:
	.quad	_c35or
	.quad	65
	.quad	4294967326
	.quad	S2VLN_srt+416


==================== Asm code ====================
2018-03-16 15:57:32.02878257 UTC

.section .text
.align 8
_c35oz:
_c35oz:
	cmpq $1,%rbx
	je _c35oL
_c35oH:
	movq 8(%rbp),%rax
	leaq 24(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c35oL:
	xorl %ebx,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c35oz, .-_c35oz


==================== Asm code ====================
2018-03-16 15:57:32.029480221 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35oz_info:
	.quad	_c35oz
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.033070841 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat_$cexponent_closure
.type GHC.Float.$fRealFloatFloat_$cexponent_closure, @object
GHC.Float.$fRealFloatFloat_$cexponent_closure:
	.quad	GHC.Float.$fRealFloatFloat_$cexponent_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:32.033960747 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFloatFloat_$cexponent_entry
.type GHC.Float.$fRealFloatFloat_$cexponent_entry, @object
GHC.Float.$fRealFloatFloat_$cexponent_entry:
_c35pa:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c35pi
_c35pj:
	movq $block_c35p7_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c35p7
_c35p8:
	movq (%rbx),%rax
	jmp *(%rax)
_c35pi:
	movl $GHC.Float.$fRealFloatFloat_$cexponent_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFloatFloat_$cexponent_entry, .-GHC.Float.$fRealFloatFloat_$cexponent_entry


==================== Asm code ====================
2018-03-16 15:57:32.034636575 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat_$cexponent_info
.type GHC.Float.$fRealFloatFloat_$cexponent_info, @object
GHC.Float.$fRealFloatFloat_$cexponent_info:
	.quad	GHC.Float.$fRealFloatFloat_$cexponent_entry
	.quad	0
	.quad	21474836494
	.quad	4294967301
	.quad	S2VLN_srt+408


==================== Asm code ====================
2018-03-16 15:57:32.035330664 UTC

.section .text
.align 8
_c35p7:
_c35p7:
	movq $block_c35pd_info,(%rbp)
	movss 7(%rbx),%xmm1
	jmp GHC.Float.$w$cexponent1_entry
	.size _c35p7, .-_c35p7


==================== Asm code ====================
2018-03-16 15:57:32.036468442 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35p7_info:
	.quad	_c35p7
	.quad	0
	.quad	4294967326
	.quad	S2VLN_srt+408


==================== Asm code ====================
2018-03-16 15:57:32.037196219 UTC

.section .text
.align 8
_c35pd:
_c35pd:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c35pn
_c35pm:
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c35pn:
	movq $16,904(%r13)
	jmp stg_gc_unbx_r1
	.size _c35pd, .-_c35pd


==================== Asm code ====================
2018-03-16 15:57:32.037860167 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35pd_info:
	.quad	_c35pd
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.041815088 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat_$csignificand_closure
.type GHC.Float.$fRealFloatFloat_$csignificand_closure, @object
GHC.Float.$fRealFloatFloat_$csignificand_closure:
	.quad	GHC.Float.$fRealFloatFloat_$csignificand_info


==================== Asm code ====================
2018-03-16 15:57:32.042601423 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFloatFloat_$csignificand_entry
.type GHC.Float.$fRealFloatFloat_$csignificand_entry, @object
GHC.Float.$fRealFloatFloat_$csignificand_entry:
_c35pJ:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c35pZ
_c35q0:
	movq $block_c35pG_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c35pG
_c35pH:
	movq (%rbx),%rax
	jmp *(%rax)
_c35pZ:
	movl $GHC.Float.$fRealFloatFloat_$csignificand_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFloatFloat_$csignificand_entry, .-GHC.Float.$fRealFloatFloat_$csignificand_entry


==================== Asm code ====================
2018-03-16 15:57:32.043298943 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat_$csignificand_info
.type GHC.Float.$fRealFloatFloat_$csignificand_info, @object
GHC.Float.$fRealFloatFloat_$csignificand_info:
	.quad	GHC.Float.$fRealFloatFloat_$csignificand_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:32.043952332 UTC

.section .text
.align 8
_c35pG:
_c35pG:
	movq $block_c35pM_info,(%rbp)
	movss 7(%rbx),%xmm1
	jmp stg_decodeFloat_Int#
	.size _c35pG, .-_c35pG


==================== Asm code ====================
2018-03-16 15:57:32.044506762 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35pG_info:
	.quad	_c35pG
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.045124353 UTC

.section .text
.align 8
_c35pM:
_c35pM:
	movq $block_c35pQ_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Integer.Type.smallInteger_entry
	.size _c35pM, .-_c35pM


==================== Asm code ====================
2018-03-16 15:57:32.0457894 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35pM_info:
	.quad	_c35pM
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.046412034 UTC

.section .text
.align 8
_c35pQ:
_c35pQ:
	movq $block_c35pU_info,(%rbp)
	movq $-24,%rsi
	movq %rbx,%r14
	jmp GHC.Integer.Type.encodeFloatInteger_entry
	.size _c35pQ, .-_c35pQ


==================== Asm code ====================
2018-03-16 15:57:32.046974955 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35pQ_info:
	.quad	_c35pQ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.047686965 UTC

.section .text
.align 8
_c35pU:
_c35pU:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c35q6
_c35q5:
	movq $GHC.Types.F#_con_info,-8(%r12)
	movss %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c35q6:
	movq $16,904(%r13)
	jmp stg_gc_f1
	.size _c35pU, .-_c35pU


==================== Asm code ====================
2018-03-16 15:57:32.048304188 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35pU_info:
	.quad	_c35pU
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.050070233 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat4_closure
.type GHC.Float.$fRealFloatFloat4_closure, @object
GHC.Float.$fRealFloatFloat4_closure:
	.quad	GHC.Types.I#_con_info
	.quad	24


==================== Asm code ====================
2018-03-16 15:57:32.052368876 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat_$cfloatDigits_closure
.type GHC.Float.$fRealFloatFloat_$cfloatDigits_closure, @object
GHC.Float.$fRealFloatFloat_$cfloatDigits_closure:
	.quad	GHC.Float.$fRealFloatFloat_$cfloatDigits_info


==================== Asm code ====================
2018-03-16 15:57:32.053046334 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFloatFloat_$cfloatDigits_entry
.type GHC.Float.$fRealFloatFloat_$cfloatDigits_entry, @object
GHC.Float.$fRealFloatFloat_$cfloatDigits_entry:
_c35qw:
	movl $GHC.Float.$fRealFloatFloat4_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Float.$fRealFloatFloat_$cfloatDigits_entry, .-GHC.Float.$fRealFloatFloat_$cfloatDigits_entry


==================== Asm code ====================
2018-03-16 15:57:32.053723434 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat_$cfloatDigits_info
.type GHC.Float.$fRealFloatFloat_$cfloatDigits_info, @object
GHC.Float.$fRealFloatFloat_$cfloatDigits_info:
	.quad	GHC.Float.$fRealFloatFloat_$cfloatDigits_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:32.055817884 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat_$cfloatRadix_closure
.type GHC.Float.$fRealFloatFloat_$cfloatRadix_closure, @object
GHC.Float.$fRealFloatFloat_$cfloatRadix_closure:
	.quad	GHC.Float.$fRealFloatFloat_$cfloatRadix_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:32.056475568 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFloatFloat_$cfloatRadix_entry
.type GHC.Float.$fRealFloatFloat_$cfloatRadix_entry, @object
GHC.Float.$fRealFloatFloat_$cfloatRadix_entry:
_c35qI:
	movl $GHC.Float.$fRealFloatDouble5_closure,%ebx
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Float.$fRealFloatFloat_$cfloatRadix_entry, .-GHC.Float.$fRealFloatFloat_$cfloatRadix_entry


==================== Asm code ====================
2018-03-16 15:57:32.057058945 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat_$cfloatRadix_info
.type GHC.Float.$fRealFloatFloat_$cfloatRadix_info, @object
GHC.Float.$fRealFloatFloat_$cfloatRadix_info:
	.quad	GHC.Float.$fRealFloatFloat_$cfloatRadix_entry
	.quad	0
	.quad	4294967310
	.quad	4294967301
	.quad	S2VLN_srt+264


==================== Asm code ====================
2018-03-16 15:57:32.059104833 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble_$cisIEEE_closure
.type GHC.Float.$fRealFloatDouble_$cisIEEE_closure, @object
GHC.Float.$fRealFloatDouble_$cisIEEE_closure:
	.quad	GHC.Float.$fRealFloatDouble_$cisIEEE_info


==================== Asm code ====================
2018-03-16 15:57:32.05977825 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFloatDouble_$cisIEEE_entry
.type GHC.Float.$fRealFloatDouble_$cisIEEE_entry, @object
GHC.Float.$fRealFloatDouble_$cisIEEE_entry:
_c35qU:
	movl $GHC.Types.True_closure+2,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Float.$fRealFloatDouble_$cisIEEE_entry, .-GHC.Float.$fRealFloatDouble_$cisIEEE_entry


==================== Asm code ====================
2018-03-16 15:57:32.060361348 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble_$cisIEEE_info
.type GHC.Float.$fRealFloatDouble_$cisIEEE_info, @object
GHC.Float.$fRealFloatDouble_$cisIEEE_info:
	.quad	GHC.Float.$fRealFloatDouble_$cisIEEE_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:32.064033624 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble_$cencodeFloat_closure
.type GHC.Float.$fRealFloatDouble_$cencodeFloat_closure, @object
GHC.Float.$fRealFloatDouble_$cencodeFloat_closure:
	.quad	GHC.Float.$fRealFloatDouble_$cencodeFloat_info


==================== Asm code ====================
2018-03-16 15:57:32.065447178 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFloatDouble_$cencodeFloat_entry
.type GHC.Float.$fRealFloatDouble_$cencodeFloat_entry, @object
GHC.Float.$fRealFloatDouble_$cencodeFloat_entry:
_c35r9:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c35rh
_c35ri:
	movq $block_c35r6_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c35r6
_c35r7:
	movq (%rbx),%rax
	jmp *(%rax)
_c35rh:
	movl $GHC.Float.$fRealFloatDouble_$cencodeFloat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFloatDouble_$cencodeFloat_entry, .-GHC.Float.$fRealFloatDouble_$cencodeFloat_entry


==================== Asm code ====================
2018-03-16 15:57:32.066142217 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble_$cencodeFloat_info
.type GHC.Float.$fRealFloatDouble_$cencodeFloat_info, @object
GHC.Float.$fRealFloatDouble_$cencodeFloat_info:
	.quad	GHC.Float.$fRealFloatDouble_$cencodeFloat_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:32.066800748 UTC

.section .text
.align 8
_c35r6:
_c35r6:
	movq 8(%rbp),%rax
	movq $block_c35rc_info,8(%rbp)
	movq 7(%rbx),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.encodeDoubleInteger_entry
	.size _c35r6, .-_c35r6


==================== Asm code ====================
2018-03-16 15:57:32.067407842 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35r6_info:
	.quad	_c35r6
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.0681245 UTC

.section .text
.align 8
_c35rc:
_c35rc:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c35rm
_c35rl:
	movq $GHC.Types.D#_con_info,-8(%r12)
	movsd %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c35rm:
	movq $16,904(%r13)
	jmp stg_gc_d1
	.size _c35rc, .-_c35rc


==================== Asm code ====================
2018-03-16 15:57:32.068706197 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35rc_info:
	.quad	_c35rc
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.072719711 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble_$cdecodeFloat_closure
.type GHC.Float.$fRealFloatDouble_$cdecodeFloat_closure, @object
GHC.Float.$fRealFloatDouble_$cdecodeFloat_closure:
	.quad	GHC.Float.$fRealFloatDouble_$cdecodeFloat_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:32.073680407 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFloatDouble_$cdecodeFloat_entry
.type GHC.Float.$fRealFloatDouble_$cdecodeFloat_entry, @object
GHC.Float.$fRealFloatDouble_$cdecodeFloat_entry:
_c35rI:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c35rR
_c35rS:
	movq $block_c35rF_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c35rF
_c35rG:
	movq (%rbx),%rax
	jmp *(%rax)
_c35rR:
	movl $GHC.Float.$fRealFloatDouble_$cdecodeFloat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFloatDouble_$cdecodeFloat_entry, .-GHC.Float.$fRealFloatDouble_$cdecodeFloat_entry


==================== Asm code ====================
2018-03-16 15:57:32.074631434 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble_$cdecodeFloat_info
.type GHC.Float.$fRealFloatDouble_$cdecodeFloat_info, @object
GHC.Float.$fRealFloatDouble_$cdecodeFloat_info:
	.quad	GHC.Float.$fRealFloatDouble_$cdecodeFloat_entry
	.quad	0
	.quad	279172874254
	.quad	4294967301
	.quad	S2VLN_srt+384


==================== Asm code ====================
2018-03-16 15:57:32.075383158 UTC

.section .text
.align 8
_c35rF:
_c35rF:
	movq $block_c35rL_info,(%rbp)
	movsd 7(%rbx),%xmm1
	jmp GHC.Integer.Type.decodeDoubleInteger_entry
	.size _c35rF, .-_c35rF


==================== Asm code ====================
2018-03-16 15:57:32.07599143 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35rF_info:
	.quad	_c35rF
	.quad	0
	.quad	4294967326
	.quad	S2VLN_srt+384


==================== Asm code ====================
2018-03-16 15:57:32.076619178 UTC

.section .text
.align 8
_c35rL:
_c35rL:
	movq %r14,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp _c35rM
	.size _c35rL, .-_c35rL


==================== Asm code ====================
2018-03-16 15:57:32.077209147 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35rL_info:
	.quad	_c35rL
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.078052376 UTC

.section .text
.align 8
_c35rM:
_c35rM:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c35rW
_c35rV:
	movq $GHC.Types.I#_con_info,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	leaq -31(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c35rW:
	movq $40,904(%r13)
	movq $block_c35rM_info,(%rbp)
	jmp stg_gc_noregs
	.size _c35rM, .-_c35rM


==================== Asm code ====================
2018-03-16 15:57:32.078698137 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35rM_info:
	.quad	_c35rM
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.091603651 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$w$cproperFraction_closure
.type GHC.Float.$w$cproperFraction_closure, @object
GHC.Float.$w$cproperFraction_closure:
	.quad	GHC.Float.$w$cproperFraction_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:32.09233925 UTC

.section .text
.align 8
.globl GHC.Float.$w$cproperFraction_slow
.type GHC.Float.$w$cproperFraction_slow, @object
GHC.Float.$w$cproperFraction_slow:
_c35sk:
	movsd 8(%rbp),%xmm1
	movq (%rbp),%r14
	addq $16,%rbp
	jmp GHC.Float.$w$cproperFraction_entry
	.size GHC.Float.$w$cproperFraction_slow, .-GHC.Float.$w$cproperFraction_slow


==================== Asm code ====================
2018-03-16 15:57:32.092955223 UTC

.section .text
.align 8
$dReal_s2UQs_entry:
_c35sw:
	movq 16(%rbx),%r14
	jmp GHC.Real.$p1Integral_entry
	.size $dReal_s2UQs_entry, .-$dReal_s2UQs_entry


==================== Asm code ====================
2018-03-16 15:57:32.093788101 UTC

.section .data.rel.ro
.align 8
.align 1
$dReal_s2UQs_info:
	.quad	$dReal_s2UQs_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:32.094577217 UTC

.section .text
.align 8
$dNum_s2UQt_entry:
_c35sD:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c35sE
_c35sF:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Real_entry
_c35sE:
	jmp *-16(%r13)
	.size $dNum_s2UQt_entry, .-$dNum_s2UQt_entry


==================== Asm code ====================
2018-03-16 15:57:32.095246132 UTC

.section .data.rel.ro
.align 8
.align 1
$dNum_s2UQt_info:
	.quad	$dNum_s2UQt_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:32.096608458 UTC

.section .text
.align 8
sat_s2UQF_entry:
_c35t6:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c35ta
_c35tb:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c35t4_info,-24(%rbp)
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp GHC.Integer.Type.encodeDoubleInteger_entry
_c35ta:
	jmp *-16(%r13)
	.size sat_s2UQF_entry, .-sat_s2UQF_entry


==================== Asm code ====================
2018-03-16 15:57:32.097330517 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2UQF_info:
	.quad	sat_s2UQF_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 15:57:32.098094284 UTC

.section .text
.align 8
_c35t4:
_c35t4:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c35te
_c35td:
	movq $GHC.Types.D#_con_info,-8(%r12)
	movsd %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c35te:
	movq $16,904(%r13)
	jmp stg_gc_d1
	.size _c35t4, .-_c35t4


==================== Asm code ====================
2018-03-16 15:57:32.098721355 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35t4_info:
	.quad	_c35t4
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.099429131 UTC

.section .text
.align 8
sat_s2UQD_entry:
_c35tj:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c35tk
_c35tl:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c35tk:
	jmp *-16(%r13)
	.size sat_s2UQD_entry, .-sat_s2UQD_entry


==================== Asm code ====================
2018-03-16 15:57:32.100081892 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2UQD_info:
	.quad	sat_s2UQD_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:32.100775678 UTC

.section .text
.align 8
sat_s2UQL_entry:
_c35tA:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c35tB
_c35tC:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Float.$fRealFloatDouble5_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c35tB:
	jmp *-16(%r13)
	.size sat_s2UQL_entry, .-sat_s2UQL_entry


==================== Asm code ====================
2018-03-16 15:57:32.101476566 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2UQL_info:
	.quad	sat_s2UQL_entry
	.quad	1
	.quad	4294967312
	.quad	S2VLN_srt+264


==================== Asm code ====================
2018-03-16 15:57:32.10228207 UTC

.section .text
.align 8
sat_s2UQN_entry:
_c35tD:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c35tE
_c35tF:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c35tH
_c35tG:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $GHC.Types.I#_con_info,-32(%r12)
	movq %rbx,-24(%r12)
	movq $sat_s2UQL_info,-16(%r12)
	movq %rax,(%r12)
	leaq -31(%r12),%r8
	leaq -16(%r12),%rdi
	movl $GHC.Real.$fIntegralInt_closure,%esi
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Real.^_entry
_c35tH:
	movq $40,904(%r13)
_c35tE:
	jmp *-16(%r13)
	.size sat_s2UQN_entry, .-sat_s2UQN_entry


==================== Asm code ====================
2018-03-16 15:57:32.103011984 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2UQN_info:
	.quad	sat_s2UQN_entry
	.quad	4294967297
	.quad	30064771091
	.quad	S2VLN_srt+264


==================== Asm code ====================
2018-03-16 15:57:32.103725862 UTC

.section .text
.align 8
sat_s2UQK_entry:
_c35tM:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c35tN
_c35tO:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c35tN:
	jmp *-16(%r13)
	.size sat_s2UQK_entry, .-sat_s2UQK_entry


==================== Asm code ====================
2018-03-16 15:57:32.104404569 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2UQK_info:
	.quad	sat_s2UQK_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:32.105178012 UTC

.section .text
.align 8
sat_s2UQO_entry:
_c35tP:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c35tQ
_c35tR:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c35tT
_c35tS:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq $sat_s2UQN_info,-56(%r12)
	movq %rcx,-40(%r12)
	movq %rbx,-32(%r12)
	movq $sat_s2UQK_info,-24(%r12)
	movq %rax,-8(%r12)
	movq %rcx,(%r12)
	movq %rcx,%r14
	movq $stg_ap_pp_info,-40(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-32(%rbp)
	leaq -56(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Num.*_entry
_c35tT:
	movq $64,904(%r13)
_c35tQ:
	jmp *-16(%r13)
	.size sat_s2UQO_entry, .-sat_s2UQO_entry


==================== Asm code ====================
2018-03-16 15:57:32.107059779 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2UQO_info:
	.quad	sat_s2UQO_entry
	.quad	4294967298
	.quad	30064771087
	.quad	S2VLN_srt+264


==================== Asm code ====================
2018-03-16 15:57:32.107636765 UTC

.section .data.rel.ro
.align 8
.align 1
u35ux_srtd:
	.quad	S2VLN_srt+16
	.quad	57
	.quad	136304272504520705


==================== Asm code ====================
2018-03-16 15:57:32.108406244 UTC

.section .text
.align 8
.globl GHC.Float.$w$cproperFraction_entry
.type GHC.Float.$w$cproperFraction_entry, @object
GHC.Float.$w$cproperFraction_entry:
_c35tX:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c35tY
_c35tZ:
	movq $block_c35so_info,-16(%rbp)
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Integer.Type.decodeDoubleInteger_entry
_c35tY:
	movl $GHC.Float.$w$cproperFraction_closure,%ebx
	movq %r14,-16(%rbp)
	movsd %xmm1,-8(%rbp)
	addq $-16,%rbp
	jmp *-8(%r13)
	.size GHC.Float.$w$cproperFraction_entry, .-GHC.Float.$w$cproperFraction_entry


==================== Asm code ====================
2018-03-16 15:57:32.109077077 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$w$cproperFraction_info
.type GHC.Float.$w$cproperFraction_info, @object
GHC.Float.$w$cproperFraction_info:
	.quad	GHC.Float.$w$cproperFraction_entry
	.quad	0
	.quad	-4294967282
	.quad	8589934592
	.quad	u35ux_srtd
	.quad	130
	.quad	GHC.Float.$w$cproperFraction_slow


==================== Asm code ====================
2018-03-16 15:57:32.109731396 UTC

.section .data.rel.ro
.align 8
.align 1
u35uy_srtd:
	.quad	S2VLN_srt+16
	.quad	56
	.quad	64176309722415105


==================== Asm code ====================
2018-03-16 15:57:32.110376427 UTC

.section .text
.align 8
_c35so:
_c35so:
	movq %r14,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp _c35sp
	.size _c35so, .-_c35so


==================== Asm code ====================
2018-03-16 15:57:32.110995175 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35so_info:
	.quad	_c35so
	.quad	1
	.quad	-4294967266
	.quad	u35uy_srtd


==================== Asm code ====================
2018-03-16 15:57:32.111528436 UTC

.section .data.rel.ro
.align 8
.align 1
u35uz_srtd:
	.quad	S2VLN_srt+16
	.quad	56
	.quad	64176309722415105


==================== Asm code ====================
2018-03-16 15:57:32.11253602 UTC

.section .text
.align 8
_c35sp:
_c35sp:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c35u2
_c35u1:
	movq $$dReal_s2UQs_info,-80(%r12)
	movq 24(%rbp),%rax
	movq %rax,-64(%r12)
	movq $$dNum_s2UQt_info,-56(%r12)
	leaq -80(%r12),%rax
	movq %rax,-40(%r12)
	movq 8(%rbp),%rax
	leaq -56(%r12),%rbx
	testq %rax,%rax
	jl _c35tV
_c35tW:
	movq $sat_s2UQO_info,-32(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-16(%r12)
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	movl $GHC.Float.rationalToDouble4_closure+1,%r14d
	leaq -32(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c35tV:
	negq %rax
	testq %rax,%rax
	jge _c35up
_c35uq:
	addq $-40,%r12
	movl $GHC.Real.^1_closure,%ebx
	addq $32,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c35un:
	addq $-40,%r12
	movq %rbx,24(%rbp)
	movq $GHC.Real.$fEnumRatio1_closure,(%rbp)
	jmp _s2UQx
_c35up:
	testq %rax,%rax
	je _c35un
_c35ui:
	addq $-40,%r12
	movq $block_c35ug_info,(%rbp)
	movq %rax,%rsi
	movl $GHC.Float.$fRealFloatDouble5_closure,%r14d
	movq %rbx,24(%rbp)
	jmp GHC.Real.$wf_entry
_c35u2:
	movq $88,904(%r13)
	movq $block_c35sp_info,(%rbp)
	jmp stg_gc_noregs
	.size _c35sp, .-_c35sp


==================== Asm code ====================
2018-03-16 15:57:32.113431494 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35sp_info:
	.quad	_c35sp
	.quad	67
	.quad	-4294967266
	.quad	u35uz_srtd


==================== Asm code ====================
2018-03-16 15:57:32.114058421 UTC

.section .data.rel.ro
.align 8
.align 1
u35uA_srtd:
	.quad	S2VLN_srt+16
	.quad	51
	.quad	1125899906842625


==================== Asm code ====================
2018-03-16 15:57:32.114739604 UTC

.section .text
.align 8
_c35ug:
_c35ug:
	movq %rbx,(%rbp)
	jmp _s2UQx
	.size _c35ug, .-_c35ug


==================== Asm code ====================
2018-03-16 15:57:32.115288808 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35ug_info:
	.quad	_c35ug
	.quad	67
	.quad	-4294967266
	.quad	u35uA_srtd


==================== Asm code ====================
2018-03-16 15:57:32.115922747 UTC

.section .text
.align 8
_s2UQx:
_s2UQx:
	movq $block_c35sU_info,-8(%rbp)
	movl $GHC.Float.rationalToDouble5_closure,%esi
	movq (%rbp),%r14
	addq $-8,%rbp
	jmp GHC.Integer.Type.eqInteger#_entry
	.size _s2UQx, .-_s2UQx


==================== Asm code ====================
2018-03-16 15:57:32.116688 UTC

.section .text
.align 8
_c35sU:
_c35sU:
	cmpq $1,%rbx
	je _c35ud
_c35u6:
	movq 8(%rbp),%rax
	movq $block_c35sY_info,8(%rbp)
	movq %rax,%rsi
	movq 24(%rbp),%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.quotRemInteger_entry
_c35ud:
	movl $GHC.Real.divZeroError_closure,%ebx
	addq $40,%rbp
	jmp stg_ap_0_fast
	.size _c35sU, .-_c35sU


==================== Asm code ====================
2018-03-16 15:57:32.117347212 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35sU_info:
	.quad	_c35sU
	.quad	132
	.quad	4294967326
	.quad	S2VLN_srt+472


==================== Asm code ====================
2018-03-16 15:57:32.118112605 UTC

.section .text
.align 8
_c35sY:
_c35sY:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c35u9
_c35u8:
	movq $sat_s2UQF_info,-56(%r12)
	movq %r14,-40(%r12)
	movq 8(%rbp),%rax
	movq %rax,-32(%r12)
	movq $sat_s2UQD_info,-24(%r12)
	movq 24(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -56(%r12),%r14
	leaq -24(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c35u9:
	movq $64,904(%r13)
	jmp stg_gc_pp
	.size _c35sY, .-_c35sY


==================== Asm code ====================
2018-03-16 15:57:32.11873089 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35sY_info:
	.quad	_c35sY
	.quad	195
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.122781831 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFracDouble_$cproperFraction_closure
.type GHC.Float.$fRealFracDouble_$cproperFraction_closure, @object
GHC.Float.$fRealFracDouble_$cproperFraction_closure:
	.quad	GHC.Float.$fRealFracDouble_$cproperFraction_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:32.12371217 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFracDouble_$cproperFraction_entry
.type GHC.Float.$fRealFracDouble_$cproperFraction_entry, @object
GHC.Float.$fRealFracDouble_$cproperFraction_entry:
_c35vV:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c35w1
_c35w2:
	movq $block_c35vS_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c35vS
_c35vT:
	movq (%rbx),%rax
	jmp *(%rax)
_c35w1:
	movl $GHC.Float.$fRealFracDouble_$cproperFraction_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFracDouble_$cproperFraction_entry, .-GHC.Float.$fRealFracDouble_$cproperFraction_entry


==================== Asm code ====================
2018-03-16 15:57:32.124322475 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFracDouble_$cproperFraction_info
.type GHC.Float.$fRealFracDouble_$cproperFraction_info, @object
GHC.Float.$fRealFracDouble_$cproperFraction_info:
	.quad	GHC.Float.$fRealFracDouble_$cproperFraction_entry
	.quad	0
	.quad	21474836494
	.quad	8589934607
	.quad	S2VLN_srt+464


==================== Asm code ====================
2018-03-16 15:57:32.125041895 UTC

.section .text
.align 8
_c35vS:
_c35vS:
	movq 8(%rbp),%rax
	movq $block_c35vY_info,8(%rbp)
	movsd 7(%rbx),%xmm1
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Float.$w$cproperFraction_entry
	.size _c35vS, .-_c35vS


==================== Asm code ====================
2018-03-16 15:57:32.125946151 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35vS_info:
	.quad	_c35vS
	.quad	1
	.quad	4294967326
	.quad	S2VLN_srt+464


==================== Asm code ====================
2018-03-16 15:57:32.127274153 UTC

.section .text
.align 8
_c35vY:
_c35vY:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c35w6
_c35w5:
	movq $(,)_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c35w6:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c35vY, .-_c35vY


==================== Asm code ====================
2018-03-16 15:57:32.127919073 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35vY_info:
	.quad	_c35vY
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.131317508 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFracDouble_$ctruncate_closure
.type GHC.Float.$fRealFracDouble_$ctruncate_closure, @object
GHC.Float.$fRealFracDouble_$ctruncate_closure:
	.quad	GHC.Float.$fRealFracDouble_$ctruncate_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:32.13217827 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFracDouble_$ctruncate_entry
.type GHC.Float.$fRealFracDouble_$ctruncate_entry, @object
GHC.Float.$fRealFracDouble_$ctruncate_entry:
_c35ws:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c35ww
_c35wx:
	movq $block_c35wp_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c35wp
_c35wq:
	movq (%rbx),%rax
	jmp *(%rax)
_c35ww:
	movl $GHC.Float.$fRealFracDouble_$ctruncate_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFracDouble_$ctruncate_entry, .-GHC.Float.$fRealFracDouble_$ctruncate_entry


==================== Asm code ====================
2018-03-16 15:57:32.13288071 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFracDouble_$ctruncate_info
.type GHC.Float.$fRealFracDouble_$ctruncate_info, @object
GHC.Float.$fRealFracDouble_$ctruncate_info:
	.quad	GHC.Float.$fRealFracDouble_$ctruncate_entry
	.quad	0
	.quad	38654705678
	.quad	8589934607
	.quad	S2VLN_srt+464


==================== Asm code ====================
2018-03-16 15:57:32.133580452 UTC

.section .text
.align 8
_c35wp:
_c35wp:
	movq 8(%rbp),%rax
	movq $block_c35wv_info,8(%rbp)
	movsd 7(%rbx),%xmm1
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Float.$w$cproperFraction_entry
	.size _c35wp, .-_c35wp


==================== Asm code ====================
2018-03-16 15:57:32.134154253 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35wp_info:
	.quad	_c35wp
	.quad	1
	.quad	4294967326
	.quad	S2VLN_srt+464


==================== Asm code ====================
2018-03-16 15:57:32.134739644 UTC

.section .text
.align 8
_c35wv:
_c35wv:
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c35wv, .-_c35wv


==================== Asm code ====================
2018-03-16 15:57:32.135304901 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35wv_info:
	.quad	_c35wv
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.140983173 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFracDouble_$cceiling_closure
.type GHC.Float.$fRealFracDouble_$cceiling_closure, @object
GHC.Float.$fRealFracDouble_$cceiling_closure:
	.quad	GHC.Float.$fRealFracDouble_$cceiling_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:32.141834743 UTC

.section .text
.align 8
sat_s2URf_entry:
_c35xk:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c35xl
_c35xm:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Float.$fRealDouble1_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c35xl:
	jmp *-16(%r13)
	.size sat_s2URf_entry, .-sat_s2URf_entry


==================== Asm code ====================
2018-03-16 15:57:32.14240748 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2URf_info:
	.quad	sat_s2URf_entry
	.quad	1
	.quad	4294967312
	.quad	S2VLN_srt+312


==================== Asm code ====================
2018-03-16 15:57:32.143131939 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFracDouble_$cceiling_entry
.type GHC.Float.$fRealFracDouble_$cceiling_entry, @object
GHC.Float.$fRealFracDouble_$cceiling_entry:
_c35xn:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c35xo
_c35xp:
	movq $block_c35wS_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c35wS
_c35wT:
	movq (%rbx),%rax
	jmp *(%rax)
_c35xo:
	movl $GHC.Float.$fRealFracDouble_$cceiling_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFracDouble_$cceiling_entry, .-GHC.Float.$fRealFracDouble_$cceiling_entry


==================== Asm code ====================
2018-03-16 15:57:32.143787477 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFracDouble_$cceiling_info
.type GHC.Float.$fRealFracDouble_$cceiling_info, @object
GHC.Float.$fRealFracDouble_$cceiling_info:
	.quad	GHC.Float.$fRealFracDouble_$cceiling_entry
	.quad	0
	.quad	38280601127616526
	.quad	8589934607
	.quad	S2VLN_srt+312


==================== Asm code ====================
2018-03-16 15:57:32.14446684 UTC

.section .text
.align 8
_c35wS:
_c35wS:
	movq $block_c35wX_info,(%rbp)
	movsd 7(%rbx),%xmm1
	movq 8(%rbp),%r14
	jmp GHC.Float.$w$cproperFraction_entry
	.size _c35wS, .-_c35wS


==================== Asm code ====================
2018-03-16 15:57:32.145037458 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35wS_info:
	.quad	_c35wS
	.quad	1
	.quad	2251804108652574
	.quad	S2VLN_srt+312


==================== Asm code ====================
2018-03-16 15:57:32.145832545 UTC

.section .text
.align 8
_c35wX:
_c35wX:
	movq $block_c35wZ_info,-8(%rbp)
	movq %rbx,%rax
	movq %r14,%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c35wZ
_c35x0:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c35wX, .-_c35wX


==================== Asm code ====================
2018-03-16 15:57:32.146428458 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35wX_info:
	.quad	_c35wX
	.quad	1
	.quad	4294967326
	.quad	S2VLN_srt+312


==================== Asm code ====================
2018-03-16 15:57:32.147104904 UTC

.section .text
.align 8
_c35wZ:
_c35wZ:
	movsd 7(%rbx),%xmm0
	xorpd %xmm1,%xmm1
	ucomisd %xmm1,%xmm0
	ja _c35xv
_c35xu:
	movq 8(%rbp),%rbx
	addq $24,%rbp
	jmp stg_ap_0_fast
_c35xv:
	movq $block_c35x8_info,(%rbp)
	movq 16(%rbp),%r14
	jmp GHC.Real.$p1Integral_entry
	.size _c35wZ, .-_c35wZ


==================== Asm code ====================
2018-03-16 15:57:32.147732468 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35wZ_info:
	.quad	_c35wZ
	.quad	2
	.quad	4294967326
	.quad	S2VLN_srt+312


==================== Asm code ====================
2018-03-16 15:57:32.148423886 UTC

.section .text
.align 8
_c35x8:
_c35x8:
	movq $block_c35xc_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p1Real_entry
	.size _c35x8, .-_c35x8


==================== Asm code ====================
2018-03-16 15:57:32.149003526 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35x8_info:
	.quad	_c35x8
	.quad	130
	.quad	4294967326
	.quad	S2VLN_srt+312


==================== Asm code ====================
2018-03-16 15:57:32.15026397 UTC

.section .text
.align 8
_c35xc:
_c35xc:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c35xz
_c35xy:
	movq $sat_s2URf_info,-16(%r12)
	movq %rbx,(%r12)
	movq %rbx,%r14
	movq $stg_ap_pp_info,(%rbp)
	leaq -16(%r12),%rax
	movq %rax,16(%rbp)
	jmp GHC.Num.+_entry
_c35xz:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c35xc, .-_c35xc


==================== Asm code ====================
2018-03-16 15:57:32.150956816 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35xc_info:
	.quad	_c35xc
	.quad	130
	.quad	4294967326
	.quad	S2VLN_srt+312


==================== Asm code ====================
2018-03-16 15:57:32.156685129 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFracDouble_$cfloor_closure
.type GHC.Float.$fRealFracDouble_$cfloor_closure, @object
GHC.Float.$fRealFracDouble_$cfloor_closure:
	.quad	GHC.Float.$fRealFracDouble_$cfloor_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:32.15759763 UTC

.section .text
.align 8
sat_s2URs_entry:
_c35yC:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c35yD
_c35yE:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Float.$fRealDouble1_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c35yD:
	jmp *-16(%r13)
	.size sat_s2URs_entry, .-sat_s2URs_entry


==================== Asm code ====================
2018-03-16 15:57:32.158873472 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2URs_info:
	.quad	sat_s2URs_entry
	.quad	1
	.quad	4294967312
	.quad	S2VLN_srt+312


==================== Asm code ====================
2018-03-16 15:57:32.159646677 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFracDouble_$cfloor_entry
.type GHC.Float.$fRealFracDouble_$cfloor_entry, @object
GHC.Float.$fRealFracDouble_$cfloor_entry:
_c35yF:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c35yG
_c35yH:
	movq $block_c35ya_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c35ya
_c35yb:
	movq (%rbx),%rax
	jmp *(%rax)
_c35yG:
	movl $GHC.Float.$fRealFracDouble_$cfloor_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFracDouble_$cfloor_entry, .-GHC.Float.$fRealFracDouble_$cfloor_entry


==================== Asm code ====================
2018-03-16 15:57:32.160334192 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFracDouble_$cfloor_info
.type GHC.Float.$fRealFracDouble_$cfloor_info, @object
GHC.Float.$fRealFracDouble_$cfloor_info:
	.quad	GHC.Float.$fRealFracDouble_$cfloor_entry
	.quad	0
	.quad	74309398146580494
	.quad	8589934607
	.quad	S2VLN_srt+312


==================== Asm code ====================
2018-03-16 15:57:32.160958424 UTC

.section .text
.align 8
_c35ya:
_c35ya:
	movq $block_c35yf_info,(%rbp)
	movsd 7(%rbx),%xmm1
	movq 8(%rbp),%r14
	jmp GHC.Float.$w$cproperFraction_entry
	.size _c35ya, .-_c35ya


==================== Asm code ====================
2018-03-16 15:57:32.161560436 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35ya_info:
	.quad	_c35ya
	.quad	1
	.quad	2251804108652574
	.quad	S2VLN_srt+312


==================== Asm code ====================
2018-03-16 15:57:32.162242323 UTC

.section .text
.align 8
_c35yf:
_c35yf:
	movq $block_c35yh_info,-8(%rbp)
	movq %rbx,%rax
	movq %r14,%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c35yh
_c35yi:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c35yf, .-_c35yf


==================== Asm code ====================
2018-03-16 15:57:32.162825281 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35yf_info:
	.quad	_c35yf
	.quad	1
	.quad	4294967326
	.quad	S2VLN_srt+312


==================== Asm code ====================
2018-03-16 15:57:32.163506307 UTC

.section .text
.align 8
_c35yh:
_c35yh:
	movsd 7(%rbx),%xmm0
	xorpd %xmm1,%xmm1
	ucomisd %xmm1,%xmm0
	jp _c35yM
	jb _c35yN
_c35yM:
	movq 8(%rbp),%rbx
	addq $24,%rbp
	jmp stg_ap_0_fast
_c35yN:
	movq $block_c35yq_info,(%rbp)
	movq 16(%rbp),%r14
	jmp GHC.Real.$p1Integral_entry
	.size _c35yh, .-_c35yh


==================== Asm code ====================
2018-03-16 15:57:32.164148291 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35yh_info:
	.quad	_c35yh
	.quad	2
	.quad	4294967326
	.quad	S2VLN_srt+312


==================== Asm code ====================
2018-03-16 15:57:32.164789265 UTC

.section .text
.align 8
_c35yq:
_c35yq:
	movq $block_c35yu_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p1Real_entry
	.size _c35yq, .-_c35yq


==================== Asm code ====================
2018-03-16 15:57:32.165436805 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35yq_info:
	.quad	_c35yq
	.quad	130
	.quad	4294967326
	.quad	S2VLN_srt+312


==================== Asm code ====================
2018-03-16 15:57:32.166150741 UTC

.section .text
.align 8
_c35yu:
_c35yu:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c35yR
_c35yQ:
	movq $sat_s2URs_info,-16(%r12)
	movq %rbx,(%r12)
	movq %rbx,%r14
	movq $stg_ap_pp_info,(%rbp)
	leaq -16(%r12),%rax
	movq %rax,16(%rbp)
	jmp GHC.Num.-_entry
_c35yR:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c35yu, .-_c35yu


==================== Asm code ====================
2018-03-16 15:57:32.16674479 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35yu_info:
	.quad	_c35yu
	.quad	130
	.quad	4294967326
	.quad	S2VLN_srt+312


==================== Asm code ====================
2018-03-16 15:57:32.170334546 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$w$cexponent_closure
.type GHC.Float.$w$cexponent_closure, @object
GHC.Float.$w$cexponent_closure:
	.quad	GHC.Float.$w$cexponent_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:32.171126317 UTC

.section .text
.align 8
.globl GHC.Float.$w$cexponent_entry
.type GHC.Float.$w$cexponent_entry, @object
GHC.Float.$w$cexponent_entry:
_c35zB:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c35zC
_c35zD:
	movq $block_c35zs_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.decodeDoubleInteger_entry
_c35zC:
	movl $GHC.Float.$w$cexponent_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$w$cexponent_entry, .-GHC.Float.$w$cexponent_entry


==================== Asm code ====================
2018-03-16 15:57:32.17176318 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$w$cexponent_info
.type GHC.Float.$w$cexponent_info, @object
GHC.Float.$w$cexponent_info:
	.quad	GHC.Float.$w$cexponent_entry
	.quad	0
	.quad	281547991154702
	.quad	4294967303
	.quad	S2VLN_srt+384


==================== Asm code ====================
2018-03-16 15:57:32.172437656 UTC

.section .text
.align 8
_c35zs:
_c35zs:
	movq $block_c35zw_info,-8(%rbp)
	movl $GHC.Float.rationalToDouble5_closure,%esi
	movq %r14,%rax
	movq %rbx,%r14
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.eqInteger#_entry
	.size _c35zs, .-_c35zs


==================== Asm code ====================
2018-03-16 15:57:32.173019926 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35zs_info:
	.quad	_c35zs
	.quad	0
	.quad	4294967326
	.quad	S2VLN_srt+416


==================== Asm code ====================
2018-03-16 15:57:32.173787238 UTC

.section .text
.align 8
_c35zw:
_c35zw:
	cmpq $1,%rbx
	je _c35zA
_c35zz:
	movq 8(%rbp),%rax
	leaq 53(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c35zA:
	xorl %ebx,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c35zw, .-_c35zw


==================== Asm code ====================
2018-03-16 15:57:32.17438745 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35zw_info:
	.quad	_c35zw
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.177872531 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble_$cexponent_closure
.type GHC.Float.$fRealFloatDouble_$cexponent_closure, @object
GHC.Float.$fRealFloatDouble_$cexponent_closure:
	.quad	GHC.Float.$fRealFloatDouble_$cexponent_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:32.178744008 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFloatDouble_$cexponent_entry
.type GHC.Float.$fRealFloatDouble_$cexponent_entry, @object
GHC.Float.$fRealFloatDouble_$cexponent_entry:
_c35A7:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c35Af
_c35Ag:
	movq $block_c35A4_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c35A4
_c35A5:
	movq (%rbx),%rax
	jmp *(%rax)
_c35Af:
	movl $GHC.Float.$fRealFloatDouble_$cexponent_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFloatDouble_$cexponent_entry, .-GHC.Float.$fRealFloatDouble_$cexponent_entry


==================== Asm code ====================
2018-03-16 15:57:32.179373194 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble_$cexponent_info
.type GHC.Float.$fRealFloatDouble_$cexponent_info, @object
GHC.Float.$fRealFloatDouble_$cexponent_info:
	.quad	GHC.Float.$fRealFloatDouble_$cexponent_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S2VLN_srt+512


==================== Asm code ====================
2018-03-16 15:57:32.180004828 UTC

.section .text
.align 8
_c35A4:
_c35A4:
	movq $block_c35Aa_info,(%rbp)
	movsd 7(%rbx),%xmm1
	jmp GHC.Float.$w$cexponent_entry
	.size _c35A4, .-_c35A4


==================== Asm code ====================
2018-03-16 15:57:32.180604435 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35A4_info:
	.quad	_c35A4
	.quad	0
	.quad	4294967326
	.quad	S2VLN_srt+512


==================== Asm code ====================
2018-03-16 15:57:32.18140187 UTC

.section .text
.align 8
_c35Aa:
_c35Aa:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c35Ak
_c35Aj:
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c35Ak:
	movq $16,904(%r13)
	jmp stg_gc_unbx_r1
	.size _c35Aa, .-_c35Aa


==================== Asm code ====================
2018-03-16 15:57:32.182033751 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35Aa_info:
	.quad	_c35Aa
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.186135013 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble_$csignificand_closure
.type GHC.Float.$fRealFloatDouble_$csignificand_closure, @object
GHC.Float.$fRealFloatDouble_$csignificand_closure:
	.quad	GHC.Float.$fRealFloatDouble_$csignificand_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:32.186964694 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFloatDouble_$csignificand_entry
.type GHC.Float.$fRealFloatDouble_$csignificand_entry, @object
GHC.Float.$fRealFloatDouble_$csignificand_entry:
_c35AG:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c35AS
_c35AT:
	movq $block_c35AD_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c35AD
_c35AE:
	movq (%rbx),%rax
	jmp *(%rax)
_c35AS:
	movl $GHC.Float.$fRealFloatDouble_$csignificand_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFloatDouble_$csignificand_entry, .-GHC.Float.$fRealFloatDouble_$csignificand_entry


==================== Asm code ====================
2018-03-16 15:57:32.187715062 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble_$csignificand_info
.type GHC.Float.$fRealFloatDouble_$csignificand_info, @object
GHC.Float.$fRealFloatDouble_$csignificand_info:
	.quad	GHC.Float.$fRealFloatDouble_$csignificand_entry
	.quad	0
	.quad	1125904201809934
	.quad	4294967301
	.quad	S2VLN_srt+384


==================== Asm code ====================
2018-03-16 15:57:32.188944504 UTC

.section .text
.align 8
_c35AD:
_c35AD:
	movq $block_c35AJ_info,(%rbp)
	movsd 7(%rbx),%xmm1
	jmp GHC.Integer.Type.decodeDoubleInteger_entry
	.size _c35AD, .-_c35AD


==================== Asm code ====================
2018-03-16 15:57:32.189566988 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35AD_info:
	.quad	_c35AD
	.quad	0
	.quad	4294967326
	.quad	S2VLN_srt+384


==================== Asm code ====================
2018-03-16 15:57:32.190232874 UTC

.section .text
.align 8
_c35AJ:
_c35AJ:
	movq $block_c35AN_info,(%rbp)
	movq $-53,%rsi
	movq %rbx,%r14
	jmp GHC.Integer.Type.encodeDoubleInteger_entry
	.size _c35AJ, .-_c35AJ


==================== Asm code ====================
2018-03-16 15:57:32.190828776 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35AJ_info:
	.quad	_c35AJ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.191520292 UTC

.section .text
.align 8
_c35AN:
_c35AN:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c35AY
_c35AX:
	movq $GHC.Types.D#_con_info,-8(%r12)
	movsd %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c35AY:
	movq $16,904(%r13)
	jmp stg_gc_d1
	.size _c35AN, .-_c35AN


==================== Asm code ====================
2018-03-16 15:57:32.19210567 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35AN_info:
	.quad	_c35AN
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.199750143 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$w$cround_closure
.type GHC.Float.$w$cround_closure, @object
GHC.Float.$w$cround_closure:
	.quad	GHC.Float.$w$cround_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:32.200443639 UTC

.section .text
.align 8
.globl GHC.Float.$w$cround_slow
.type GHC.Float.$w$cround_slow, @object
GHC.Float.$w$cround_slow:
_c35Bh:
	movsd 8(%rbp),%xmm1
	movq (%rbp),%r14
	addq $16,%rbp
	jmp GHC.Float.$w$cround_entry
	.size GHC.Float.$w$cround_slow, .-GHC.Float.$w$cround_slow


==================== Asm code ====================
2018-03-16 15:57:32.201227612 UTC

.section .text
.align 8
sat_s2URX_entry:
_c35BV:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c35BW
_c35BX:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Float.$fRealDouble1_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c35BW:
	jmp *-16(%r13)
	.size sat_s2URX_entry, .-sat_s2URX_entry


==================== Asm code ====================
2018-03-16 15:57:32.201907888 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2URX_info:
	.quad	sat_s2URX_entry
	.quad	1
	.quad	4294967312
	.quad	S2VLN_srt+312


==================== Asm code ====================
2018-03-16 15:57:32.202573219 UTC

.section .text
.align 8
sat_s2URY_entry:
_c35C3:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c35C4
_c35C5:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Float.$fRealDouble1_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c35C4:
	jmp *-16(%r13)
	.size sat_s2URY_entry, .-sat_s2URY_entry


==================== Asm code ====================
2018-03-16 15:57:32.2032006 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2URY_info:
	.quad	sat_s2URY_entry
	.quad	1
	.quad	4294967312
	.quad	S2VLN_srt+312


==================== Asm code ====================
2018-03-16 15:57:32.203906941 UTC

.section .text
.align 8
.globl GHC.Float.$w$cround_entry
.type GHC.Float.$w$cround_entry, @object
GHC.Float.$w$cround_entry:
_c35C6:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c35C7
_c35C8:
	movq $block_c35Bl_info,-16(%rbp)
	movq %r14,%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Float.$w$cproperFraction_entry
_c35C7:
	movl $GHC.Float.$w$cround_closure,%ebx
	movq %r14,-16(%rbp)
	movsd %xmm1,-8(%rbp)
	addq $-16,%rbp
	jmp *-8(%r13)
	.size GHC.Float.$w$cround_entry, .-GHC.Float.$w$cround_entry


==================== Asm code ====================
2018-03-16 15:57:32.204598396 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$w$cround_info
.type GHC.Float.$w$cround_info, @object
GHC.Float.$w$cround_info:
	.quad	GHC.Float.$w$cround_entry
	.quad	0
	.quad	1155173343075237902
	.quad	8589934592
	.quad	S2VLN_srt+312
	.quad	130
	.quad	GHC.Float.$w$cround_slow


==================== Asm code ====================
2018-03-16 15:57:32.205375845 UTC

.section .text
.align 8
_c35Bl:
_c35Bl:
	movq $block_c35Bn_info,-8(%rbp)
	movq %rbx,%rax
	movq %r14,%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c35Bn
_c35Bo:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c35Bl, .-_c35Bl


==================== Asm code ====================
2018-03-16 15:57:32.205994241 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35Bl_info:
	.quad	_c35Bl
	.quad	1
	.quad	38654705694
	.quad	S2VLN_srt+312


==================== Asm code ====================
2018-03-16 15:57:32.20685771 UTC

.section .text
.align 8
_c35Bn:
_c35Bn:
	movq 16(%rbp),%rax
	movq 8(%rbp),%rcx
	movsd 7(%rbx),%xmm0
	movsd %xmm0,%xmm1
	movsd _n35D8(%rip),%xmm2
	andpd %xmm2,%xmm1
	subsd _n35Da(%rip),%xmm1
	xorpd %xmm2,%xmm2
	ucomisd %xmm2,%xmm1
	jp _c35CC
	jb _u35CF
_c35CC:
	xorpd %xmm2,%xmm2
	ucomisd %xmm2,%xmm1
	jp _u35CG
	je _c35Cq
_u35CG:
	movsd %xmm0,(%rbp)
	jmp _s2URT
_u35CF:
	addq $8,%rbp
	jmp _c35CD
_c35Cq:
	movq $block_c35Cp_info,-8(%rbp)
	movq %rcx,%rsi
	movq %rax,%r14
	movsd %xmm0,(%rbp)
	addq $-8,%rbp
	jmp GHC.Real.even_entry
	.size _c35Bn, .-_c35Bn
.section .rodata
.align 8
.align 8
_n35D8:
	.quad	9223372036854775807
.section .rodata
.align 8
.align 8
_n35Da:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	224
	.byte	63


==================== Asm code ====================
2018-03-16 15:57:32.207569177 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35Bn_info:
	.quad	_c35Bn
	.quad	2
	.quad	38654705694
	.quad	S2VLN_srt+312


==================== Asm code ====================
2018-03-16 15:57:32.208294062 UTC

.section .text
.align 8
_c35Cp:
_c35Cp:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u35CH
_u35CI:
	addq $16,%rbp
	jmp _c35CD
_u35CH:
	addq $8,%rbp
	jmp _s2URT
	.size _c35Cp, .-_c35Cp


==================== Asm code ====================
2018-03-16 15:57:32.208890846 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35Cp_info:
	.quad	_c35Cp
	.quad	67
	.quad	4294967326
	.quad	S2VLN_srt+312


==================== Asm code ====================
2018-03-16 15:57:32.209563067 UTC

.section .text
.align 8
_c35CD:
_c35CD:
	movq (%rbp),%rbx
	addq $16,%rbp
	jmp stg_ap_0_fast
	.size _c35CD, .-_c35CD


==================== Asm code ====================
2018-03-16 15:57:32.21021656 UTC

.section .text
.align 8
_s2URT:
_s2URT:
	movq $block_c35BG_info,-8(%rbp)
	movq 16(%rbp),%r14
	addq $-8,%rbp
	jmp GHC.Real.$p1Integral_entry
	.size _s2URT, .-_s2URT


==================== Asm code ====================
2018-03-16 15:57:32.210830284 UTC

.section .text
.align 8
_c35BG:
_c35BG:
	movq $block_c35BK_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p1Real_entry
	.size _c35BG, .-_c35BG


==================== Asm code ====================
2018-03-16 15:57:32.211394395 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35BG_info:
	.quad	_c35BG
	.quad	323
	.quad	4294967326
	.quad	S2VLN_srt+312


==================== Asm code ====================
2018-03-16 15:57:32.212212381 UTC

.section .text
.align 8
_c35BK:
_c35BK:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c35Cf
_c35Ce:
	movsd 8(%rbp),%xmm0
	xorpd %xmm1,%xmm1
	ucomisd %xmm1,%xmm0
	jp _c35Ch
	jb _c35Ci
_c35Ch:
	movq $sat_s2URX_info,-16(%r12)
	movq %rbx,(%r12)
	movq %rbx,%r14
	movq $stg_ap_pp_info,8(%rbp)
	leaq -16(%r12),%rax
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp GHC.Num.+_entry
_c35Ci:
	movq $sat_s2URY_info,-16(%r12)
	movq %rbx,(%r12)
	movq %rbx,%r14
	movq $stg_ap_pp_info,8(%rbp)
	leaq -16(%r12),%rax
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp GHC.Num.-_entry
_c35Cf:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c35BK, .-_c35BK


==================== Asm code ====================
2018-03-16 15:57:32.212990758 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35BK_info:
	.quad	_c35BK
	.quad	323
	.quad	4294967326
	.quad	S2VLN_srt+312


==================== Asm code ====================
2018-03-16 15:57:32.216190066 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFracDouble_$cround_closure
.type GHC.Float.$fRealFracDouble_$cround_closure, @object
GHC.Float.$fRealFracDouble_$cround_closure:
	.quad	GHC.Float.$fRealFracDouble_$cround_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:32.217049895 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFracDouble_$cround_entry
.type GHC.Float.$fRealFracDouble_$cround_entry, @object
GHC.Float.$fRealFracDouble_$cround_entry:
_c35DJ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c35DK
_c35DL:
	movq $block_c35DG_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c35DG
_c35DH:
	movq (%rbx),%rax
	jmp *(%rax)
_c35DK:
	movl $GHC.Float.$fRealFracDouble_$cround_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFracDouble_$cround_entry, .-GHC.Float.$fRealFracDouble_$cround_entry


==================== Asm code ====================
2018-03-16 15:57:32.218430547 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFracDouble_$cround_info
.type GHC.Float.$fRealFracDouble_$cround_info, @object
GHC.Float.$fRealFracDouble_$cround_info:
	.quad	GHC.Float.$fRealFracDouble_$cround_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S2VLN_srt+536


==================== Asm code ====================
2018-03-16 15:57:32.219157586 UTC

.section .text
.align 8
_c35DG:
_c35DG:
	movsd 7(%rbx),%xmm1
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Float.$w$cround_entry
	.size _c35DG, .-_c35DG


==================== Asm code ====================
2018-03-16 15:57:32.219761213 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35DG_info:
	.quad	_c35DG
	.quad	1
	.quad	4294967326
	.quad	S2VLN_srt+536


==================== Asm code ====================
2018-03-16 15:57:32.221527642 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble4_closure
.type GHC.Float.$fRealFloatDouble4_closure, @object
GHC.Float.$fRealFloatDouble4_closure:
	.quad	GHC.Types.I#_con_info
	.quad	53


==================== Asm code ====================
2018-03-16 15:57:32.223608338 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble_$cfloatDigits_closure
.type GHC.Float.$fRealFloatDouble_$cfloatDigits_closure, @object
GHC.Float.$fRealFloatDouble_$cfloatDigits_closure:
	.quad	GHC.Float.$fRealFloatDouble_$cfloatDigits_info


==================== Asm code ====================
2018-03-16 15:57:32.224252219 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFloatDouble_$cfloatDigits_entry
.type GHC.Float.$fRealFloatDouble_$cfloatDigits_entry, @object
GHC.Float.$fRealFloatDouble_$cfloatDigits_entry:
_c35E4:
	movl $GHC.Float.$fRealFloatDouble4_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Float.$fRealFloatDouble_$cfloatDigits_entry, .-GHC.Float.$fRealFloatDouble_$cfloatDigits_entry


==================== Asm code ====================
2018-03-16 15:57:32.224860585 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble_$cfloatDigits_info
.type GHC.Float.$fRealFloatDouble_$cfloatDigits_info, @object
GHC.Float.$fRealFloatDouble_$cfloatDigits_info:
	.quad	GHC.Float.$fRealFloatDouble_$cfloatDigits_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:32.227412236 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble_$cfloatRadix_closure
.type GHC.Float.$fRealFloatDouble_$cfloatRadix_closure, @object
GHC.Float.$fRealFloatDouble_$cfloatRadix_closure:
	.quad	GHC.Float.$fRealFloatDouble_$cfloatRadix_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:32.228117002 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFloatDouble_$cfloatRadix_entry
.type GHC.Float.$fRealFloatDouble_$cfloatRadix_entry, @object
GHC.Float.$fRealFloatDouble_$cfloatRadix_entry:
_c35Eg:
	movl $GHC.Float.$fRealFloatDouble5_closure,%ebx
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Float.$fRealFloatDouble_$cfloatRadix_entry, .-GHC.Float.$fRealFloatDouble_$cfloatRadix_entry


==================== Asm code ====================
2018-03-16 15:57:32.228711099 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble_$cfloatRadix_info
.type GHC.Float.$fRealFloatDouble_$cfloatRadix_info, @object
GHC.Float.$fRealFloatDouble_$cfloatRadix_info:
	.quad	GHC.Float.$fRealFloatDouble_$cfloatRadix_entry
	.quad	0
	.quad	4294967310
	.quad	4294967301
	.quad	S2VLN_srt+552


==================== Asm code ====================
2018-03-16 15:57:32.2700346 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$dmatan2_closure
.type GHC.Float.$dmatan2_closure, @object
GHC.Float.$dmatan2_closure:
	.quad	GHC.Float.$dmatan2_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:32.270884399 UTC

.section .text
.align 8
$dNum_s2USc_entry:
_c35EE:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c35EF
_c35EG:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Real_entry
_c35EF:
	jmp *-16(%r13)
	.size $dNum_s2USc_entry, .-$dNum_s2USc_entry


==================== Asm code ====================
2018-03-16 15:57:32.271544849 UTC

.section .data.rel.ro
.align 8
.align 1
$dNum_s2USc_info:
	.quad	$dNum_s2USc_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:32.272269074 UTC

.section .text
.align 8
$dFloating_s2USe_entry:
_c35EP:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c35EQ
_c35ER:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Float.$p2RealFloat_entry
_c35EQ:
	jmp *-16(%r13)
	.size $dFloating_s2USe_entry, .-$dFloating_s2USe_entry


==================== Asm code ====================
2018-03-16 15:57:32.272924864 UTC

.section .data.rel.ro
.align 8
.align 1
$dFloating_s2USe_info:
	.quad	$dFloating_s2USe_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:32.273666813 UTC

.section .text
.align 8
sat_s2USf_entry:
_c35EW:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c35EX
_c35EY:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Float.rationalToDouble5_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c35EX:
	jmp *-16(%r13)
	.size sat_s2USf_entry, .-sat_s2USf_entry


==================== Asm code ====================
2018-03-16 15:57:32.274338213 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2USf_info:
	.quad	sat_s2USf_entry
	.quad	1
	.quad	4294967312
	.quad	S2VLN_srt+416


==================== Asm code ====================
2018-03-16 15:57:32.275137545 UTC

.section .text
.align 8
sat_s2USU_entry:
_c35Fb:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c35Fc
_c35Fd:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Float.rationalToDouble5_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c35Fc:
	jmp *-16(%r13)
	.size sat_s2USU_entry, .-sat_s2USU_entry


==================== Asm code ====================
2018-03-16 15:57:32.27610058 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2USU_info:
	.quad	sat_s2USU_entry
	.quad	1
	.quad	4294967312
	.quad	S2VLN_srt+416


==================== Asm code ====================
2018-03-16 15:57:32.277201501 UTC

.section .text
.align 8
sat_s2USM_entry:
_c35Fn:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c35Fo
_c35Fp:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Float.rationalToDouble5_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c35Fo:
	jmp *-16(%r13)
	.size sat_s2USM_entry, .-sat_s2USM_entry


==================== Asm code ====================
2018-03-16 15:57:32.278247388 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2USM_info:
	.quad	sat_s2USM_entry
	.quad	1
	.quad	4294967312
	.quad	S2VLN_srt+416


==================== Asm code ====================
2018-03-16 15:57:32.279402692 UTC

.section .text
.align 8
sat_s2USG_entry:
_c35Fz:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c35FA
_c35FB:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Float.rationalToDouble5_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c35FA:
	jmp *-16(%r13)
	.size sat_s2USG_entry, .-sat_s2USG_entry


==================== Asm code ====================
2018-03-16 15:57:32.280441818 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2USG_info:
	.quad	sat_s2USG_entry
	.quad	1
	.quad	4294967312
	.quad	S2VLN_srt+416


==================== Asm code ====================
2018-03-16 15:57:32.28164958 UTC

.section .text
.align 8
sat_s2USB_entry:
_c35FL:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c35FM
_c35FN:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Float.rationalToDouble5_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c35FM:
	jmp *-16(%r13)
	.size sat_s2USB_entry, .-sat_s2USB_entry


==================== Asm code ====================
2018-03-16 15:57:32.283740668 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2USB_info:
	.quad	sat_s2USB_entry
	.quad	1
	.quad	4294967312
	.quad	S2VLN_srt+416


==================== Asm code ====================
2018-03-16 15:57:32.284828151 UTC

.section .text
.align 8
sat_s2USs_entry:
_c35G2:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c35G3
_c35G4:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Float.rationalToDouble5_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c35G3:
	jmp *-16(%r13)
	.size sat_s2USs_entry, .-sat_s2USs_entry


==================== Asm code ====================
2018-03-16 15:57:32.285874416 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2USs_info:
	.quad	sat_s2USs_entry
	.quad	1
	.quad	4294967312
	.quad	S2VLN_srt+416


==================== Asm code ====================
2018-03-16 15:57:32.286916577 UTC

.section .text
.align 8
sat_s2USo_entry:
_c35Ge:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c35Gf
_c35Gg:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Float.rationalToDouble5_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c35Gf:
	jmp *-16(%r13)
	.size sat_s2USo_entry, .-sat_s2USo_entry


==================== Asm code ====================
2018-03-16 15:57:32.287913059 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2USo_info:
	.quad	sat_s2USo_entry
	.quad	1
	.quad	4294967312
	.quad	S2VLN_srt+416


==================== Asm code ====================
2018-03-16 15:57:32.289004145 UTC

.section .text
.align 8
sat_s2USq_entry:
_c35Gq:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c35Gr
_c35Gs:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Float.rationalToDouble5_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c35Gr:
	jmp *-16(%r13)
	.size sat_s2USq_entry, .-sat_s2USq_entry


==================== Asm code ====================
2018-03-16 15:57:32.290142302 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2USq_info:
	.quad	sat_s2USq_entry
	.quad	1
	.quad	4294967312
	.quad	S2VLN_srt+416


==================== Asm code ====================
2018-03-16 15:57:32.29125954 UTC

.section .text
.align 8
sat_s2USu_entry:
_c35GC:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c35GD
_c35GE:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Float.rationalToDouble5_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c35GD:
	jmp *-16(%r13)
	.size sat_s2USu_entry, .-sat_s2USu_entry


==================== Asm code ====================
2018-03-16 15:57:32.291891595 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2USu_info:
	.quad	sat_s2USu_entry
	.quad	1
	.quad	4294967312
	.quad	S2VLN_srt+416


==================== Asm code ====================
2018-03-16 15:57:32.292610412 UTC

.section .text
.align 8
sat_s2USz_entry:
_c35GX:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c35GY
_c35GZ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.negate_entry
_c35GY:
	jmp *-16(%r13)
	.size sat_s2USz_entry, .-sat_s2USz_entry


==================== Asm code ====================
2018-03-16 15:57:32.293308828 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2USz_info:
	.quad	sat_s2USz_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:32.29413863 UTC

.section .text
.align 8
sat_s2USA_entry:
_c35H0:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c35H1
_c35H2:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c35H4
_c35H3:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rbx
	movq $sat_s2USz_info,-24(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq %rax,%r14
	movq $stg_ap_pp_info,-40(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-32(%rbp)
	movq %rdx,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Float.atan2_entry
_c35H4:
	movq $32,904(%r13)
_c35H1:
	jmp *-16(%r13)
	.size sat_s2USA_entry, .-sat_s2USA_entry


==================== Asm code ====================
2018-03-16 15:57:32.29522005 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2USA_info:
	.quad	sat_s2USA_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 15:57:32.29628185 UTC

.section .text
.align 8
sat_s2USE_entry:
_c35Hn:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c35Ho
_c35Hp:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.negate_entry
_c35Ho:
	jmp *-16(%r13)
	.size sat_s2USE_entry, .-sat_s2USE_entry


==================== Asm code ====================
2018-03-16 15:57:32.29722932 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2USE_info:
	.quad	sat_s2USE_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:32.298451329 UTC

.section .text
.align 8
sat_s2USF_entry:
_c35Hq:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c35Hr
_c35Hs:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c35Hu
_c35Ht:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rbx
	movq $sat_s2USE_info,-24(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq %rax,%r14
	movq $stg_ap_pp_info,-40(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-32(%rbp)
	movq %rdx,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Float.atan2_entry
_c35Hu:
	movq $32,904(%r13)
_c35Hr:
	jmp *-16(%r13)
	.size sat_s2USF_entry, .-sat_s2USF_entry


==================== Asm code ====================
2018-03-16 15:57:32.299499785 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2USF_info:
	.quad	sat_s2USF_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 15:57:32.300503122 UTC

.section .text
.align 8
sat_s2USI_entry:
_c35HE:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c35HF
_c35HG:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Float.rationalToDouble5_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c35HF:
	jmp *-16(%r13)
	.size sat_s2USI_entry, .-sat_s2USI_entry


==================== Asm code ====================
2018-03-16 15:57:32.301438616 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2USI_info:
	.quad	sat_s2USI_entry
	.quad	1
	.quad	4294967312
	.quad	S2VLN_srt+416


==================== Asm code ====================
2018-03-16 15:57:32.302189863 UTC

.section .text
.align 8
sat_s2USK_entry:
_c35HU:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c35HV
_c35HW:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.negate_entry
_c35HV:
	jmp *-16(%r13)
	.size sat_s2USK_entry, .-sat_s2USK_entry


==================== Asm code ====================
2018-03-16 15:57:32.302831095 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2USK_info:
	.quad	sat_s2USK_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:32.303624193 UTC

.section .text
.align 8
sat_s2USL_entry:
_c35HX:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c35HY
_c35HZ:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c35I1
_c35I0:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rbx
	movq $sat_s2USK_info,-24(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq %rax,%r14
	movq $stg_ap_pp_info,-40(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-32(%rbp)
	movq %rdx,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Float.atan2_entry
_c35I1:
	movq $32,904(%r13)
_c35HY:
	jmp *-16(%r13)
	.size sat_s2USL_entry, .-sat_s2USL_entry


==================== Asm code ====================
2018-03-16 15:57:32.304368526 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2USL_info:
	.quad	sat_s2USL_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 15:57:32.305066553 UTC

.section .text
.align 8
sat_s2USO_entry:
_c35Ib:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c35Ic
_c35Id:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Float.rationalToDouble5_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c35Ic:
	jmp *-16(%r13)
	.size sat_s2USO_entry, .-sat_s2USO_entry


==================== Asm code ====================
2018-03-16 15:57:32.305755504 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2USO_info:
	.quad	sat_s2USO_entry
	.quad	1
	.quad	4294967312
	.quad	S2VLN_srt+416


==================== Asm code ====================
2018-03-16 15:57:32.306432985 UTC

.section .text
.align 8
sat_s2USS_entry:
_c35It:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c35Iu
_c35Iv:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c35Ir_info,-40(%rbp)
	movq 32(%rbx),%r14
	movq 16(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Real.$p2RealFrac_entry
_c35Iu:
	jmp *-16(%r13)
	.size sat_s2USS_entry, .-sat_s2USS_entry


==================== Asm code ====================
2018-03-16 15:57:32.307057687 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2USS_info:
	.quad	sat_s2USS_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:57:32.307646698 UTC

.section .text
.align 8
_c35Ir:
_c35Ir:
	movq %rbx,%r14
	movq $stg_ap_pp_info,(%rbp)
	jmp GHC.Real./_entry
	.size _c35Ir, .-_c35Ir


==================== Asm code ====================
2018-03-16 15:57:32.308168319 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35Ir_info:
	.quad	_c35Ir
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.30892531 UTC

.section .text
.align 8
sat_s2UST_entry:
_c35Iz:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c35IA
_c35IB:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c35ID
_c35IC:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rbx
	movq $sat_s2USS_info,-32(%r12)
	movq %rax,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rdx,(%r12)
	movq %rbx,%r14
	movq $stg_ap_p_info,-32(%rbp)
	leaq -32(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Float.atan_entry
_c35ID:
	movq $40,904(%r13)
_c35IA:
	jmp *-16(%r13)
	.size sat_s2UST_entry, .-sat_s2UST_entry


==================== Asm code ====================
2018-03-16 15:57:32.309995491 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2UST_info:
	.quad	sat_s2UST_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 15:57:32.31070667 UTC

.section .text
.align 8
sat_s2USQ_entry:
_c35II:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c35IJ
_c35IK:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Float.pi_entry
_c35IJ:
	jmp *-16(%r13)
	.size sat_s2USQ_entry, .-sat_s2USQ_entry


==================== Asm code ====================
2018-03-16 15:57:32.311336978 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2USQ_info:
	.quad	sat_s2USQ_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:32.312202468 UTC

.section .text
.align 8
sat_s2USW_entry:
_c35IU:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c35IV
_c35IW:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Float.rationalToDouble5_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c35IV:
	jmp *-16(%r13)
	.size sat_s2USW_entry, .-sat_s2USW_entry


==================== Asm code ====================
2018-03-16 15:57:32.312848967 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2USW_info:
	.quad	sat_s2USW_entry
	.quad	1
	.quad	4294967312
	.quad	S2VLN_srt+416


==================== Asm code ====================
2018-03-16 15:57:32.313628651 UTC

.section .text
.align 8
sat_s2UT0_entry:
_c35J6:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c35J7
_c35J8:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Float.$fRealFloatDouble5_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c35J7:
	jmp *-16(%r13)
	.size sat_s2UT0_entry, .-sat_s2UT0_entry


==================== Asm code ====================
2018-03-16 15:57:32.314293831 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2UT0_info:
	.quad	sat_s2UT0_entry
	.quad	1
	.quad	4294967312
	.quad	S2VLN_srt+552


==================== Asm code ====================
2018-03-16 15:57:32.314997211 UTC

.section .text
.align 8
sat_s2USZ_entry:
_c35Jd:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c35Je
_c35Jf:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Float.pi_entry
_c35Je:
	jmp *-16(%r13)
	.size sat_s2USZ_entry, .-sat_s2USZ_entry


==================== Asm code ====================
2018-03-16 15:57:32.315658338 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2USZ_info:
	.quad	sat_s2USZ_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:32.316403028 UTC

.section .text
.align 8
sat_s2UT2_entry:
_c35Jo:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c35Jp
_c35Jq:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c35Jm_info,-40(%rbp)
	movq 32(%rbx),%r14
	movq 16(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Real.$p2RealFrac_entry
_c35Jp:
	jmp *-16(%r13)
	.size sat_s2UT2_entry, .-sat_s2UT2_entry


==================== Asm code ====================
2018-03-16 15:57:32.317118081 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2UT2_info:
	.quad	sat_s2UT2_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:57:32.318959585 UTC

.section .text
.align 8
_c35Jm:
_c35Jm:
	movq %rbx,%r14
	movq $stg_ap_pp_info,(%rbp)
	jmp GHC.Real./_entry
	.size _c35Jm, .-_c35Jm


==================== Asm code ====================
2018-03-16 15:57:32.319816792 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35Jm_info:
	.quad	_c35Jm
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.320872075 UTC

.section .text
.align 8
.globl GHC.Float.$dmatan2_entry
.type GHC.Float.$dmatan2_entry, @object
GHC.Float.$dmatan2_entry:
_c35Ju:
	leaq -96(%rbp),%rax
	cmpq %r15,%rax
	jb _c35Jv
_c35Jw:
	movq $block_c35Es_info,-32(%rbp)
	movq %r14,%rax
	movq %rax,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-32,%rbp
	jmp GHC.Float.$p1RealFloat_entry
_c35Jv:
	movl $GHC.Float.$dmatan2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$dmatan2_entry, .-GHC.Float.$dmatan2_entry


==================== Asm code ====================
2018-03-16 15:57:32.321944474 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$dmatan2_info
.type GHC.Float.$dmatan2_info, @object
GHC.Float.$dmatan2_info:
	.quad	GHC.Float.$dmatan2_entry
	.quad	0
	.quad	1688854155231246
	.quad	12884901911
	.quad	S2VLN_srt+416


==================== Asm code ====================
2018-03-16 15:57:32.322958079 UTC

.section .text
.align 8
_c35Es:
_c35Es:
	movq $block_c35Ew_info,-8(%rbp)
	movq %rbx,%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp GHC.Real.$p1RealFrac_entry
	.size _c35Es, .-_c35Es


==================== Asm code ====================
2018-03-16 15:57:32.323842322 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35Es_info:
	.quad	_c35Es
	.quad	3
	.quad	562954248388638
	.quad	S2VLN_srt+416


==================== Asm code ====================
2018-03-16 15:57:32.324925211 UTC

.section .text
.align 8
_c35Ew:
_c35Ew:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c35JA
_c35Jz:
	movq $$dNum_s2USc_info,-16(%r12)
	movq %rbx,(%r12)
	movq $block_c35EH_info,-8(%rbp)
	movq %rbx,%r14
	leaq -16(%r12),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp GHC.Real.$p2Real_entry
_c35JA:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c35Ew, .-_c35Ew


==================== Asm code ====================
2018-03-16 15:57:32.325981466 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35Ew_info:
	.quad	_c35Ew
	.quad	4
	.quad	562954248388638
	.quad	S2VLN_srt+416


==================== Asm code ====================
2018-03-16 15:57:32.327142286 UTC

.section .text
.align 8
_c35EH:
_c35EH:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c35JD
_c35JC:
	movq $$dFloating_s2USe_info,-40(%r12)
	movq 24(%rbp),%rax
	movq %rax,-24(%r12)
	movq $sat_s2USf_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	movq $block_c35EZ_info,-16(%rbp)
	movq %rbx,%r14
	movq $stg_ap_pp_info,-40(%rbp)
	movq 40(%rbp),%rax
	movq %rax,-32(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-24(%rbp)
	movq %rbx,-8(%rbp)
	leaq -40(%r12),%rax
	movq %rax,(%rbp)
	addq $-40,%rbp
	jmp GHC.Classes.>_entry
_c35JD:
	movq $48,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c35EH, .-_c35EH


==================== Asm code ====================
2018-03-16 15:57:32.328275366 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35EH_info:
	.quad	_c35EH
	.quad	5
	.quad	562954248388638
	.quad	S2VLN_srt+416


==================== Asm code ====================
2018-03-16 15:57:32.329594979 UTC

.section .text
.align 8
_c35EZ:
_c35EZ:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c35JG
_c35M6:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c35M9
_c35M8:
	movq $sat_s2UT2_info,-32(%r12)
	movq 48(%rbp),%rax
	movq %rax,-16(%r12)
	movq 56(%rbp),%rax
	movq %rax,-8(%r12)
	movq 32(%rbp),%rax
	movq %rax,(%r12)
	movq 16(%rbp),%r14
	movq $stg_ap_p_info,48(%rbp)
	leaq -32(%r12),%rax
	movq %rax,56(%rbp)
	addq $48,%rbp
	jmp GHC.Float.atan_entry
_c35M9:
	movq $40,904(%r13)
	jmp stg_gc_unpt_r1
_c35JG:
	movq $block_c35F3_info,(%rbp)
	movq 8(%rbp),%r14
	jmp GHC.Classes.$p1Ord_entry
	.size _c35EZ, .-_c35EZ


==================== Asm code ====================
2018-03-16 15:57:32.330762356 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35EZ_info:
	.quad	_c35EZ
	.quad	7
	.quad	562954248388638
	.quad	S2VLN_srt+416


==================== Asm code ====================
2018-03-16 15:57:32.331858546 UTC

.section .text
.align 8
_c35F3:
_c35F3:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c35JJ
_c35JI:
	movq $sat_s2USU_info,-16(%r12)
	movq 24(%rbp),%rax
	movq %rax,(%r12)
	movq $block_c35IL_info,-8(%rbp)
	movq %rbx,%r14
	movq $stg_ap_pp_info,-32(%rbp)
	movq 56(%rbp),%rax
	movq %rax,-24(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-16(%rbp)
	movq %rbx,(%rbp)
	addq $-32,%rbp
	jmp GHC.Classes.==_entry
_c35JJ:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c35F3, .-_c35F3


==================== Asm code ====================
2018-03-16 15:57:32.332960128 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35F3_info:
	.quad	_c35F3
	.quad	7
	.quad	562954248388638
	.quad	S2VLN_srt+416


==================== Asm code ====================
2018-03-16 15:57:32.334250934 UTC

.section .text
.align 8
_c35IL:
_c35IL:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c35Fh
_c35LP:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c35LS
_c35LR:
	movq $sat_s2USW_info,-16(%r12)
	movq 32(%rbp),%rax
	movq %rax,(%r12)
	movq $block_c35IX_info,(%rbp)
	movq 16(%rbp),%r14
	movq $stg_ap_pp_info,-24(%rbp)
	movq 56(%rbp),%rax
	movq %rax,-16(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Classes.>_entry
_c35LS:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c35IL, .-_c35IL


==================== Asm code ====================
2018-03-16 15:57:32.335345064 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35IL_info:
	.quad	_c35IL
	.quad	8
	.quad	562954248388638
	.quad	S2VLN_srt+416


==================== Asm code ====================
2018-03-16 15:57:32.33650451 UTC

.section .text
.align 8
_c35IX:
_c35IX:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c35Fh
_c35LY:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c35M1
_c35M0:
	movq $sat_s2UT0_info,-40(%r12)
	movq 32(%rbp),%rax
	movq %rax,-24(%r12)
	movq $sat_s2USZ_info,-16(%r12)
	movq 24(%rbp),%rax
	movq %rax,(%r12)
	movq $block_c35LX_info,48(%rbp)
	movq 40(%rbp),%r14
	leaq -16(%r12),%rax
	movq %rax,56(%rbp)
	leaq -40(%r12),%rax
	movq %rax,64(%rbp)
	addq $48,%rbp
	jmp GHC.Real.$p2RealFrac_entry
_c35M1:
	movq $48,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c35IX, .-_c35IX


==================== Asm code ====================
2018-03-16 15:57:32.337631758 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35IX_info:
	.quad	_c35IX
	.quad	8
	.quad	562954248388638
	.quad	S2VLN_srt+416


==================== Asm code ====================
2018-03-16 15:57:32.338752526 UTC

.section .text
.align 8
_c35Fh:
_c35Fh:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c35JM
_c35JL:
	movq $sat_s2USM_info,-16(%r12)
	movq 32(%rbp),%rax
	movq %rax,(%r12)
	movq $block_c35I2_info,(%rbp)
	movq 16(%rbp),%r14
	movq $stg_ap_pp_info,-24(%rbp)
	movq 64(%rbp),%rax
	movq %rax,-16(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Classes.<_entry
_c35JM:
	movq $24,904(%r13)
	movq $block_c35Fh_info,(%rbp)
	jmp stg_gc_noregs
	.size _c35Fh, .-_c35Fh


==================== Asm code ====================
2018-03-16 15:57:32.339826078 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35Fh_info:
	.quad	_c35Fh
	.quad	8
	.quad	4294967326
	.quad	S2VLN_srt+416


==================== Asm code ====================
2018-03-16 15:57:32.340940007 UTC

.section .text
.align 8
_c35I2:
_c35I2:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c35Ft
_c35Lz:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c35LC
_c35LB:
	movq $sat_s2USO_info,-16(%r12)
	movq 32(%rbp),%rax
	movq %rax,(%r12)
	movq $block_c35Ie_info,(%rbp)
	movq 16(%rbp),%r14
	movq $stg_ap_pp_info,-24(%rbp)
	movq 56(%rbp),%rax
	movq %rax,-16(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Classes.>_entry
_c35LC:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c35I2, .-_c35I2


==================== Asm code ====================
2018-03-16 15:57:32.342044415 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35I2_info:
	.quad	_c35I2
	.quad	8
	.quad	4294967326
	.quad	S2VLN_srt+416


==================== Asm code ====================
2018-03-16 15:57:32.343335408 UTC

.section .text
.align 8
_c35Ie:
_c35Ie:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c35Ft
_c35LH:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c35LK
_c35LJ:
	movq $sat_s2UST_info,-64(%r12)
	movq 56(%rbp),%rax
	movq %rax,-48(%r12)
	movq 64(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq 24(%rbp),%rax
	movq %rax,-24(%r12)
	movq $sat_s2USQ_info,-16(%r12)
	movq %rax,(%r12)
	movq 32(%rbp),%r14
	movq $stg_ap_pp_info,48(%rbp)
	leaq -16(%r12),%rax
	movq %rax,56(%rbp)
	leaq -64(%r12),%rax
	movq %rax,64(%rbp)
	addq $48,%rbp
	jmp GHC.Num.+_entry
_c35LK:
	movq $72,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c35Ie, .-_c35Ie


==================== Asm code ====================
2018-03-16 15:57:32.344457453 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35Ie_info:
	.quad	_c35Ie
	.quad	8
	.quad	4294967326
	.quad	S2VLN_srt+416


==================== Asm code ====================
2018-03-16 15:57:32.346107332 UTC

.section .text
.align 8
_c35Ft:
_c35Ft:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c35JP
_c35JO:
	movq $sat_s2USG_info,-16(%r12)
	movq 32(%rbp),%rax
	movq %rax,(%r12)
	movq $block_c35Hv_info,(%rbp)
	movq 16(%rbp),%r14
	movq $stg_ap_pp_info,-24(%rbp)
	movq 64(%rbp),%rax
	movq %rax,-16(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Classes.<=_entry
_c35JP:
	movq $24,904(%r13)
	movq $block_c35Ft_info,(%rbp)
	jmp stg_gc_noregs
	.size _c35Ft, .-_c35Ft


==================== Asm code ====================
2018-03-16 15:57:32.347228428 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35Ft_info:
	.quad	_c35Ft
	.quad	1032
	.quad	4294967326
	.quad	S2VLN_srt+416


==================== Asm code ====================
2018-03-16 15:57:32.348484565 UTC

.section .text
.align 8
_c35Hv:
_c35Hv:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c35FF
_c35Lj:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c35Lm
_c35Ll:
	movq $sat_s2USI_info,-16(%r12)
	movq 32(%rbp),%rax
	movq %rax,(%r12)
	movq $block_c35HH_info,(%rbp)
	movq 16(%rbp),%r14
	movq $stg_ap_pp_info,-24(%rbp)
	movq 56(%rbp),%rax
	movq %rax,-16(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Classes.<_entry
_c35Lm:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c35Hv, .-_c35Hv


==================== Asm code ====================
2018-03-16 15:57:32.349640941 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35Hv_info:
	.quad	_c35Hv
	.quad	1032
	.quad	4294967326
	.quad	S2VLN_srt+416


==================== Asm code ====================
2018-03-16 15:57:32.350988807 UTC

.section .text
.align 8
_c35HH:
_c35HH:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c35FF
_c35Lr:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c35Lu
_c35Lt:
	movq $sat_s2USL_info,-40(%r12)
	movq 48(%rbp),%rax
	movq %rax,-24(%r12)
	movq 56(%rbp),%rax
	movq %rax,-16(%r12)
	movq 64(%rbp),%rax
	movq %rax,-8(%r12)
	movq 32(%rbp),%rax
	movq %rax,(%r12)
	movq %rax,%r14
	movq $stg_ap_p_info,56(%rbp)
	leaq -40(%r12),%rax
	movq %rax,64(%rbp)
	addq $56,%rbp
	jmp GHC.Num.negate_entry
_c35Lu:
	movq $48,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c35HH, .-_c35HH


==================== Asm code ====================
2018-03-16 15:57:32.352072425 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35HH_info:
	.quad	_c35HH
	.quad	1032
	.quad	4294967326
	.quad	S2VLN_srt+416


==================== Asm code ====================
2018-03-16 15:57:32.353141878 UTC

.section .text
.align 8
_c35FF:
_c35FF:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c35JS
_c35JR:
	movq $sat_s2USB_info,-16(%r12)
	movq 32(%rbp),%rax
	movq %rax,(%r12)
	movq $block_c35H5_info,(%rbp)
	movq 16(%rbp),%r14
	movq $stg_ap_pp_info,-24(%rbp)
	movq 64(%rbp),%rax
	movq %rax,-16(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Classes.<_entry
_c35JS:
	movq $24,904(%r13)
	movq $block_c35FF_info,(%rbp)
	jmp stg_gc_noregs
	.size _c35FF, .-_c35FF


==================== Asm code ====================
2018-03-16 15:57:32.354306358 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35FF_info:
	.quad	_c35FF
	.quad	1032
	.quad	4294967326
	.quad	S2VLN_srt+416


==================== Asm code ====================
2018-03-16 15:57:32.355460789 UTC

.section .text
.align 8
_c35H5:
_c35H5:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u35Mq
_c35L6:
	movq $block_c35Ha_info,(%rbp)
	movq 48(%rbp),%r14
	movq $stg_ap_p_info,-16(%rbp)
	movq 56(%rbp),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Float.isNegativeZero_entry
_u35Mq:
	addq $8,%rbp
	jmp _s2USl
	.size _c35H5, .-_c35H5


==================== Asm code ====================
2018-03-16 15:57:32.356370266 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35H5_info:
	.quad	_c35H5
	.quad	1032
	.quad	4294967326
	.quad	S2VLN_srt+416


==================== Asm code ====================
2018-03-16 15:57:32.358054022 UTC

.section .text
.align 8
_c35Ha:
_c35Ha:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _u35Mr
_c35Lb:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c35Le
_c35Ld:
	movq $sat_s2USF_info,-40(%r12)
	movq 48(%rbp),%rax
	movq %rax,-24(%r12)
	movq 56(%rbp),%rax
	movq %rax,-16(%r12)
	movq 64(%rbp),%rax
	movq %rax,-8(%r12)
	movq 32(%rbp),%rax
	movq %rax,(%r12)
	movq %rax,%r14
	movq $stg_ap_p_info,56(%rbp)
	leaq -40(%r12),%rax
	movq %rax,64(%rbp)
	addq $56,%rbp
	jmp GHC.Num.negate_entry
_u35Mr:
	addq $8,%rbp
	jmp _s2USl
_c35Le:
	movq $48,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c35Ha, .-_c35Ha


==================== Asm code ====================
2018-03-16 15:57:32.358798692 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35Ha_info:
	.quad	_c35Ha
	.quad	1032
	.quad	4294967326
	.quad	S2VLN_srt+416


==================== Asm code ====================
2018-03-16 15:57:32.359479757 UTC

.section .text
.align 8
_s2USl:
_s2USl:
	movq $block_c35GF_info,-8(%rbp)
	movq 40(%rbp),%r14
	movq $stg_ap_p_info,-24(%rbp)
	movq 56(%rbp),%rax
	movq %rax,-16(%rbp)
	addq $-24,%rbp
	jmp GHC.Float.isNegativeZero_entry
	.size _s2USl, .-_s2USl


==================== Asm code ====================
2018-03-16 15:57:32.360307528 UTC

.section .text
.align 8
_c35GF:
_c35GF:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c35FW
_c35KS:
	movq $block_c35GK_info,(%rbp)
	movq 48(%rbp),%r14
	movq $stg_ap_p_info,-16(%rbp)
	movq 56(%rbp),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Float.isNegativeZero_entry
	.size _c35GF, .-_c35GF


==================== Asm code ====================
2018-03-16 15:57:32.36103309 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35GF_info:
	.quad	_c35GF
	.quad	1032
	.quad	4294967326
	.quad	S2VLN_srt+416


==================== Asm code ====================
2018-03-16 15:57:32.362489091 UTC

.section .text
.align 8
_c35GK:
_c35GK:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c35FW
_c35KX:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c35L0
_c35KZ:
	movq $sat_s2USA_info,-40(%r12)
	movq 48(%rbp),%rax
	movq %rax,-24(%r12)
	movq 56(%rbp),%rax
	movq %rax,-16(%r12)
	movq 64(%rbp),%rax
	movq %rax,-8(%r12)
	movq 32(%rbp),%rax
	movq %rax,(%r12)
	movq %rax,%r14
	movq $stg_ap_p_info,56(%rbp)
	leaq -40(%r12),%rax
	movq %rax,64(%rbp)
	addq $56,%rbp
	jmp GHC.Num.negate_entry
_c35L0:
	movq $48,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c35GK, .-_c35GK


==================== Asm code ====================
2018-03-16 15:57:32.363229631 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35GK_info:
	.quad	_c35GK
	.quad	1032
	.quad	4294967326
	.quad	S2VLN_srt+416


==================== Asm code ====================
2018-03-16 15:57:32.364104485 UTC

.section .text
.align 8
_c35FW:
_c35FW:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c35JW
_c35JV:
	movq $sat_s2USs_info,-16(%r12)
	movq 32(%rbp),%rax
	movq %rax,(%r12)
	movq $block_c35Gt_info,(%rbp)
	movq 8(%rbp),%r14
	movq $stg_ap_pp_info,-24(%rbp)
	movq 56(%rbp),%rax
	movq %rax,-16(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Classes.==_entry
_c35JW:
	movq $24,904(%r13)
	movq $block_c35FW_info,(%rbp)
	jmp stg_gc_noregs
	.size _c35FW, .-_c35FW


==================== Asm code ====================
2018-03-16 15:57:32.365322638 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35FW_info:
	.quad	_c35FW
	.quad	1032
	.quad	4294967326
	.quad	S2VLN_srt+416


==================== Asm code ====================
2018-03-16 15:57:32.366326751 UTC

.section .text
.align 8
_c35Gt:
_c35Gt:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c35G8
_c35Ko:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c35Kr
_c35Kq:
	movq $sat_s2USu_info,-16(%r12)
	movq 32(%rbp),%rax
	movq %rax,(%r12)
	movq $block_c35Kn_info,(%rbp)
	movq 16(%rbp),%r14
	movq $stg_ap_pp_info,-24(%rbp)
	movq 64(%rbp),%rax
	movq %rax,-16(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Classes.<_entry
_c35Kr:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c35Gt, .-_c35Gt


==================== Asm code ====================
2018-03-16 15:57:32.367061533 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35Gt_info:
	.quad	_c35Gt
	.quad	1032
	.quad	4294967326
	.quad	S2VLN_srt+416


==================== Asm code ====================
2018-03-16 15:57:32.367820203 UTC

.section .text
.align 8
_c35Kn:
_c35Kn:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c35Ky
_u35Ms:
	addq $24,%rbp
	jmp _c35KM
_c35Ky:
	movq $block_c35Kv_info,(%rbp)
	movq 48(%rbp),%r14
	movq $stg_ap_p_info,-16(%rbp)
	movq 64(%rbp),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Float.isNegativeZero_entry
	.size _c35Kn, .-_c35Kn


==================== Asm code ====================
2018-03-16 15:57:32.368432945 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35Kn_info:
	.quad	_c35Kn
	.quad	1160
	.quad	4294967326
	.quad	S2VLN_srt+416


==================== Asm code ====================
2018-03-16 15:57:32.369062748 UTC

.section .text
.align 8
_c35Kv:
_c35Kv:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c35G8
_u35Mt:
	addq $24,%rbp
	jmp _c35KM
	.size _c35Kv, .-_c35Kv


==================== Asm code ====================
2018-03-16 15:57:32.369704374 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35Kv_info:
	.quad	_c35Kv
	.quad	3208
	.quad	4294967326
	.quad	S2VLN_srt+416


==================== Asm code ====================
2018-03-16 15:57:32.370493024 UTC

.section .text
.align 8
_c35G8:
_c35G8:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c35JZ
_c35JY:
	movq $sat_s2USo_info,-16(%r12)
	movq 32(%rbp),%rax
	movq %rax,(%r12)
	movq $block_c35Gh_info,(%rbp)
	movq 8(%rbp),%r14
	movq $stg_ap_pp_info,-24(%rbp)
	movq 64(%rbp),%rax
	movq %rax,-16(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Classes.==_entry
_c35JZ:
	movq $24,904(%r13)
	movq $block_c35G8_info,(%rbp)
	jmp stg_gc_noregs
	.size _c35G8, .-_c35G8


==================== Asm code ====================
2018-03-16 15:57:32.37116257 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35G8_info:
	.quad	_c35G8
	.quad	3464
	.quad	4294967326
	.quad	S2VLN_srt+416


==================== Asm code ====================
2018-03-16 15:57:32.372022038 UTC

.section .text
.align 8
_c35Gh:
_c35Gh:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _u35Mu
_c35K5:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c35K8
_c35K7:
	movq $sat_s2USq_info,-16(%r12)
	movq 32(%rbp),%rax
	movq %rax,(%r12)
	movq $block_c35K4_info,24(%rbp)
	movq 8(%rbp),%r14
	movq $stg_ap_pp_info,(%rbp)
	movq 56(%rbp),%rax
	movq %rax,8(%rbp)
	leaq -16(%r12),%rax
	movq %rax,16(%rbp)
	jmp GHC.Classes.==_entry
_u35Mu:
	addq $32,%rbp
	jmp _c35Ke
_c35K8:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c35Gh, .-_c35Gh


==================== Asm code ====================
2018-03-16 15:57:32.373158387 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35Gh_info:
	.quad	_c35Gh
	.quad	3464
	.quad	4294967326
	.quad	S2VLN_srt+416


==================== Asm code ====================
2018-03-16 15:57:32.374448134 UTC

.section .text
.align 8
_c35K4:
_c35K4:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u35Mv
_c35Ki:
	movq 32(%rbp),%rbx
	addq $48,%rbp
	jmp stg_ap_0_fast
_u35Mv:
	addq $8,%rbp
	jmp _c35Ke
	.size _c35K4, .-_c35K4


==================== Asm code ====================
2018-03-16 15:57:32.375466311 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35K4_info:
	.quad	_c35K4
	.quad	389
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.376430968 UTC

.section .text
.align 8
_c35Ke:
_c35Ke:
	movq (%rbp),%r14
	movq $stg_ap_pp_info,16(%rbp)
	movq 24(%rbp),%rax
	movq 32(%rbp),%rbx
	movq %rbx,24(%rbp)
	movq %rax,32(%rbp)
	addq $16,%rbp
	jmp GHC.Num.+_entry
	.size _c35Ke, .-_c35Ke


==================== Asm code ====================
2018-03-16 15:57:32.377402144 UTC

.section .text
.align 8
_c35KM:
_c35KM:
	movq (%rbp),%r14
	addq $48,%rbp
	jmp GHC.Float.pi_entry
	.size _c35KM, .-_c35KM


==================== Asm code ====================
2018-03-16 15:57:32.378285267 UTC

.section .text
.align 8
_c35LX:
_c35LX:
	movq %rbx,%r14
	movq $stg_ap_pp_info,(%rbp)
	jmp GHC.Real./_entry
	.size _c35LX, .-_c35LX


==================== Asm code ====================
2018-03-16 15:57:32.379280021 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35LX_info:
	.quad	_c35LX
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.387903744 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$dmlog1mexp_closure
.type GHC.Float.$dmlog1mexp_closure, @object
GHC.Float.$dmlog1mexp_closure:
	.quad	GHC.Float.$dmlog1mexp_info


==================== Asm code ====================
2018-03-16 15:57:32.389288104 UTC

.section .text
.align 8
sat_s2UT7_entry:
_c35RZ:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c35S0
_c35S1:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Float.exp_entry
_c35S0:
	jmp *-16(%r13)
	.size sat_s2UT7_entry, .-sat_s2UT7_entry


==================== Asm code ====================
2018-03-16 15:57:32.390279997 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2UT7_info:
	.quad	sat_s2UT7_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:32.391627299 UTC

.section .text
.align 8
sat_s2UT8_entry:
_c35S4:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c35S8
_c35S9:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c35Sb
_c35Sa:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $sat_s2UT7_info,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	movq $block_c35S2_info,-32(%rbp)
	movq %rax,%r14
	leaq -24(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Float.$p1Floating_entry
_c35Sb:
	movq $32,904(%r13)
_c35S8:
	jmp *-16(%r13)
	.size sat_s2UT8_entry, .-sat_s2UT8_entry


==================== Asm code ====================
2018-03-16 15:57:32.392814687 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2UT8_info:
	.quad	sat_s2UT8_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:32.393881453 UTC

.section .text
.align 8
_c35S2:
_c35S2:
	movq $block_c35S7_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p1Fractional_entry
	.size _c35S2, .-_c35S2


==================== Asm code ====================
2018-03-16 15:57:32.394728966 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35S2_info:
	.quad	_c35S2
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.395711991 UTC

.section .text
.align 8
_c35S7:
_c35S7:
	movq %rbx,%r14
	movq $stg_ap_p_info,(%rbp)
	jmp GHC.Num.negate_entry
	.size _c35S7, .-_c35S7


==================== Asm code ====================
2018-03-16 15:57:32.396669263 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35S7_info:
	.quad	_c35S7
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.398233674 UTC

.section .text
.align 8
.globl GHC.Float.$dmlog1mexp_entry
.type GHC.Float.$dmlog1mexp_entry, @object
GHC.Float.$dmlog1mexp_entry:
_c35Sh:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c35Si
_c35Sj:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c35Sl
_c35Sk:
	movq $sat_s2UT8_info,-24(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	movq $stg_ap_p_info,-16(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Float.log1p_entry
_c35Sl:
	movq $32,904(%r13)
_c35Si:
	movl $GHC.Float.$dmlog1mexp_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$dmlog1mexp_entry, .-GHC.Float.$dmlog1mexp_entry


==================== Asm code ====================
2018-03-16 15:57:32.399174455 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$dmlog1mexp_info
.type GHC.Float.$dmlog1mexp_info, @object
GHC.Float.$dmlog1mexp_info:
	.quad	GHC.Float.$dmlog1mexp_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:32.403497385 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$dmlog1pexp_closure
.type GHC.Float.$dmlog1pexp_closure, @object
GHC.Float.$dmlog1pexp_closure:
	.quad	GHC.Float.$dmlog1pexp_info


==================== Asm code ====================
2018-03-16 15:57:32.404607002 UTC

.section .text
.align 8
sat_s2UTb_entry:
_c35SQ:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c35SR
_c35SS:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Float.exp_entry
_c35SR:
	jmp *-16(%r13)
	.size sat_s2UTb_entry, .-sat_s2UTb_entry


==================== Asm code ====================
2018-03-16 15:57:32.406095242 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2UTb_info:
	.quad	sat_s2UTb_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:32.407415766 UTC

.section .text
.align 8
.globl GHC.Float.$dmlog1pexp_entry
.type GHC.Float.$dmlog1pexp_entry, @object
GHC.Float.$dmlog1pexp_entry:
_c35ST:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c35SU
_c35SV:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c35SX
_c35SW:
	movq $sat_s2UTb_info,-24(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	movq $stg_ap_p_info,-16(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Float.log1p_entry
_c35SX:
	movq $32,904(%r13)
_c35SU:
	movl $GHC.Float.$dmlog1pexp_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$dmlog1pexp_entry, .-GHC.Float.$dmlog1pexp_entry


==================== Asm code ====================
2018-03-16 15:57:32.408473147 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$dmlog1pexp_info
.type GHC.Float.$dmlog1pexp_info, @object
GHC.Float.$dmlog1pexp_info:
	.quad	GHC.Float.$dmlog1pexp_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:32.416666768 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$dmexpm1_closure
.type GHC.Float.$dmexpm1_closure, @object
GHC.Float.$dmexpm1_closure:
	.quad	GHC.Float.$dmexpm1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:32.41791176 UTC

.section .text
.align 8
sat_s2UTh_entry:
_c35Tp:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c35Tq
_c35Tr:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Float.$fRealDouble1_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c35Tq:
	jmp *-16(%r13)
	.size sat_s2UTh_entry, .-sat_s2UTh_entry


==================== Asm code ====================
2018-03-16 15:57:32.418858556 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2UTh_info:
	.quad	sat_s2UTh_entry
	.quad	1
	.quad	4294967312
	.quad	S2VLN_srt+312


==================== Asm code ====================
2018-03-16 15:57:32.420043835 UTC

.section .text
.align 8
sat_s2UTg_entry:
_c35Tw:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c35Tx
_c35Ty:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Float.exp_entry
_c35Tx:
	jmp *-16(%r13)
	.size sat_s2UTg_entry, .-sat_s2UTg_entry


==================== Asm code ====================
2018-03-16 15:57:32.421086003 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2UTg_info:
	.quad	sat_s2UTg_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:32.422872974 UTC

.section .text
.align 8
.globl GHC.Float.$dmexpm1_entry
.type GHC.Float.$dmexpm1_entry, @object
GHC.Float.$dmexpm1_entry:
_c35Tz:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c35TA
_c35TB:
	movq $block_c35Td_info,-24(%rbp)
	movq %r14,%rax
	movq %rax,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Float.$p1Floating_entry
_c35TA:
	movl $GHC.Float.$dmexpm1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$dmexpm1_entry, .-GHC.Float.$dmexpm1_entry


==================== Asm code ====================
2018-03-16 15:57:32.423927356 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$dmexpm1_info
.type GHC.Float.$dmexpm1_info, @object
GHC.Float.$dmexpm1_info:
	.quad	GHC.Float.$dmexpm1_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S2VLN_srt+568


==================== Asm code ====================
2018-03-16 15:57:32.424931259 UTC

.section .text
.align 8
_c35Td:
_c35Td:
	movq $block_c35Th_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p1Fractional_entry
	.size _c35Td, .-_c35Td


==================== Asm code ====================
2018-03-16 15:57:32.425630415 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35Td_info:
	.quad	_c35Td
	.quad	2
	.quad	4294967326
	.quad	S2VLN_srt+576


==================== Asm code ====================
2018-03-16 15:57:32.426495832 UTC

.section .text
.align 8
_c35Th:
_c35Th:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c35TF
_c35TE:
	movq $sat_s2UTh_info,-48(%r12)
	movq %rbx,-32(%r12)
	movq $sat_s2UTg_info,-24(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	movq %rbx,%r14
	movq $stg_ap_pp_info,(%rbp)
	leaq -24(%r12),%rax
	movq %rax,8(%rbp)
	leaq -48(%r12),%rax
	movq %rax,16(%rbp)
	jmp GHC.Num.-_entry
_c35TF:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c35Th, .-_c35Th


==================== Asm code ====================
2018-03-16 15:57:32.427174967 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35Th_info:
	.quad	_c35Th
	.quad	2
	.quad	4294967326
	.quad	S2VLN_srt+576


==================== Asm code ====================
2018-03-16 15:57:32.432358861 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$dmlog1p_closure
.type GHC.Float.$dmlog1p_closure, @object
GHC.Float.$dmlog1p_closure:
	.quad	GHC.Float.$dmlog1p_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:32.433292626 UTC

.section .text
.align 8
sat_s2UTm_entry:
_c35Uo:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c35Up
_c35Uq:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Float.$fRealDouble1_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c35Up:
	jmp *-16(%r13)
	.size sat_s2UTm_entry, .-sat_s2UTm_entry


==================== Asm code ====================
2018-03-16 15:57:32.433912749 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2UTm_info:
	.quad	sat_s2UTm_entry
	.quad	1
	.quad	4294967312
	.quad	S2VLN_srt+576


==================== Asm code ====================
2018-03-16 15:57:32.434695698 UTC

.section .text
.align 8
sat_s2UTn_entry:
_c35Ur:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c35Us
_c35Ut:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c35Uc_info,-32(%rbp)
	movq 16(%rbx),%r14
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Float.$p1Floating_entry
_c35Us:
	jmp *-16(%r13)
	.size sat_s2UTn_entry, .-sat_s2UTn_entry


==================== Asm code ====================
2018-03-16 15:57:32.435404614 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2UTn_info:
	.quad	sat_s2UTn_entry
	.quad	2
	.quad	4294967314
	.quad	S2VLN_srt+576


==================== Asm code ====================
2018-03-16 15:57:32.436195937 UTC

.section .text
.align 8
_c35Uc:
_c35Uc:
	movq $block_c35Ug_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p1Fractional_entry
	.size _c35Uc, .-_c35Uc


==================== Asm code ====================
2018-03-16 15:57:32.436834895 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35Uc_info:
	.quad	_c35Uc
	.quad	1
	.quad	4294967326
	.quad	S2VLN_srt+576


==================== Asm code ====================
2018-03-16 15:57:32.437713983 UTC

.section .text
.align 8
_c35Ug:
_c35Ug:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c35Ux
_c35Uw:
	movq $sat_s2UTm_info,-16(%r12)
	movq %rbx,(%r12)
	movq %rbx,%r14
	movq $stg_ap_pp_info,-8(%rbp)
	leaq -16(%r12),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp GHC.Num.+_entry
_c35Ux:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c35Ug, .-_c35Ug


==================== Asm code ====================
2018-03-16 15:57:32.438456079 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35Ug_info:
	.quad	_c35Ug
	.quad	1
	.quad	4294967326
	.quad	S2VLN_srt+576


==================== Asm code ====================
2018-03-16 15:57:32.439375293 UTC

.section .text
.align 8
.globl GHC.Float.$dmlog1p_entry
.type GHC.Float.$dmlog1p_entry, @object
GHC.Float.$dmlog1p_entry:
_c35Uy:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c35Uz
_c35UA:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c35UC
_c35UB:
	movq $sat_s2UTn_info,-24(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	movq $stg_ap_p_info,-16(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Float.log_entry
_c35UC:
	movq $32,904(%r13)
_c35Uz:
	movl $GHC.Float.$dmlog1p_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$dmlog1p_entry, .-GHC.Float.$dmlog1p_entry


==================== Asm code ====================
2018-03-16 15:57:32.440224955 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$dmlog1p_info
.type GHC.Float.$dmlog1p_info, @object
GHC.Float.$dmlog1p_info:
	.quad	GHC.Float.$dmlog1p_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S2VLN_srt+576


==================== Asm code ====================
2018-03-16 15:57:32.446065424 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$dmtanh_closure
.type GHC.Float.$dmtanh_closure, @object
GHC.Float.$dmtanh_closure:
	.quad	GHC.Float.$dmtanh_info


==================== Asm code ====================
2018-03-16 15:57:32.446962683 UTC

.section .text
.align 8
sat_s2UTs_entry:
_c35V7:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c35V8
_c35V9:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Float.cosh_entry
_c35V8:
	jmp *-16(%r13)
	.size sat_s2UTs_entry, .-sat_s2UTs_entry


==================== Asm code ====================
2018-03-16 15:57:32.447649083 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2UTs_info:
	.quad	sat_s2UTs_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:32.448412355 UTC

.section .text
.align 8
sat_s2UTr_entry:
_c35Ve:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c35Vf
_c35Vg:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Float.sinh_entry
_c35Vf:
	jmp *-16(%r13)
	.size sat_s2UTr_entry, .-sat_s2UTr_entry


==================== Asm code ====================
2018-03-16 15:57:32.449040715 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2UTr_info:
	.quad	sat_s2UTr_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:32.449952006 UTC

.section .text
.align 8
.globl GHC.Float.$dmtanh_entry
.type GHC.Float.$dmtanh_entry, @object
GHC.Float.$dmtanh_entry:
_c35Vj:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c35Vk
_c35Vl:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c35Vn
_c35Vm:
	movq $sat_s2UTs_info,-56(%r12)
	movq %r14,-40(%r12)
	movq %rsi,-32(%r12)
	movq $sat_s2UTr_info,-24(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	movq $block_c35Vh_info,-24(%rbp)
	leaq -56(%r12),%rax
	movq %rax,-16(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Float.$p1Floating_entry
_c35Vn:
	movq $64,904(%r13)
_c35Vk:
	movl $GHC.Float.$dmtanh_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$dmtanh_entry, .-GHC.Float.$dmtanh_entry


==================== Asm code ====================
2018-03-16 15:57:32.450691325 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$dmtanh_info
.type GHC.Float.$dmtanh_info, @object
GHC.Float.$dmtanh_info:
	.quad	GHC.Float.$dmtanh_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:32.451361079 UTC

.section .text
.align 8
_c35Vh:
_c35Vh:
	movq %rbx,%r14
	movq $stg_ap_pp_info,(%rbp)
	movq 8(%rbp),%rax
	movq 16(%rbp),%rbx
	movq %rbx,8(%rbp)
	movq %rax,16(%rbp)
	jmp GHC.Real./_entry
	.size _c35Vh, .-_c35Vh


==================== Asm code ====================
2018-03-16 15:57:32.451949954 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35Vh_info:
	.quad	_c35Vh
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.457412886 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$dmtan_closure
.type GHC.Float.$dmtan_closure, @object
GHC.Float.$dmtan_closure:
	.quad	GHC.Float.$dmtan_info


==================== Asm code ====================
2018-03-16 15:57:32.458686256 UTC

.section .text
.align 8
sat_s2UTx_entry:
_c35VU:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c35VV
_c35VW:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Float.cos_entry
_c35VV:
	jmp *-16(%r13)
	.size sat_s2UTx_entry, .-sat_s2UTx_entry


==================== Asm code ====================
2018-03-16 15:57:32.459707678 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2UTx_info:
	.quad	sat_s2UTx_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:32.460883447 UTC

.section .text
.align 8
sat_s2UTw_entry:
_c35W1:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c35W2
_c35W3:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Float.sin_entry
_c35W2:
	jmp *-16(%r13)
	.size sat_s2UTw_entry, .-sat_s2UTw_entry


==================== Asm code ====================
2018-03-16 15:57:32.462257576 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2UTw_info:
	.quad	sat_s2UTw_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:32.463626683 UTC

.section .text
.align 8
.globl GHC.Float.$dmtan_entry
.type GHC.Float.$dmtan_entry, @object
GHC.Float.$dmtan_entry:
_c35W6:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c35W7
_c35W8:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c35Wa
_c35W9:
	movq $sat_s2UTx_info,-56(%r12)
	movq %r14,-40(%r12)
	movq %rsi,-32(%r12)
	movq $sat_s2UTw_info,-24(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	movq $block_c35W4_info,-24(%rbp)
	leaq -56(%r12),%rax
	movq %rax,-16(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Float.$p1Floating_entry
_c35Wa:
	movq $64,904(%r13)
_c35W7:
	movl $GHC.Float.$dmtan_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$dmtan_entry, .-GHC.Float.$dmtan_entry


==================== Asm code ====================
2018-03-16 15:57:32.464824139 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$dmtan_info
.type GHC.Float.$dmtan_info, @object
GHC.Float.$dmtan_info:
	.quad	GHC.Float.$dmtan_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:32.465986542 UTC

.section .text
.align 8
_c35W4:
_c35W4:
	movq %rbx,%r14
	movq $stg_ap_pp_info,(%rbp)
	movq 8(%rbp),%rax
	movq 16(%rbp),%rbx
	movq %rbx,8(%rbp)
	movq %rax,16(%rbp)
	jmp GHC.Real./_entry
	.size _c35W4, .-_c35W4


==================== Asm code ====================
2018-03-16 15:57:32.466945697 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35W4_info:
	.quad	_c35W4
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.475380105 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$dmlogBase_closure
.type GHC.Float.$dmlogBase_closure, @object
GHC.Float.$dmlogBase_closure:
	.quad	GHC.Float.$dmlogBase_info


==================== Asm code ====================
2018-03-16 15:57:32.476686084 UTC

.section .text
.align 8
sat_s2UTD_entry:
_c35WH:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c35WI
_c35WJ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Float.log_entry
_c35WI:
	jmp *-16(%r13)
	.size sat_s2UTD_entry, .-sat_s2UTD_entry


==================== Asm code ====================
2018-03-16 15:57:32.477792678 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2UTD_info:
	.quad	sat_s2UTD_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:32.478993326 UTC

.section .text
.align 8
sat_s2UTC_entry:
_c35WO:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c35WP
_c35WQ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Float.log_entry
_c35WP:
	jmp *-16(%r13)
	.size sat_s2UTC_entry, .-sat_s2UTC_entry


==================== Asm code ====================
2018-03-16 15:57:32.480005403 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2UTC_info:
	.quad	sat_s2UTC_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:32.481586879 UTC

.section .text
.align 8
.globl GHC.Float.$dmlogBase_entry
.type GHC.Float.$dmlogBase_entry, @object
GHC.Float.$dmlogBase_entry:
_c35WT:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c35WU
_c35WV:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c35WX
_c35WW:
	movq $sat_s2UTD_info,-56(%r12)
	movq %r14,-40(%r12)
	movq %rsi,-32(%r12)
	movq $sat_s2UTC_info,-24(%r12)
	movq %r14,-8(%r12)
	movq %rdi,(%r12)
	movq $block_c35WR_info,-24(%rbp)
	leaq -56(%r12),%rax
	movq %rax,-16(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Float.$p1Floating_entry
_c35WX:
	movq $64,904(%r13)
_c35WU:
	movl $GHC.Float.$dmlogBase_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$dmlogBase_entry, .-GHC.Float.$dmlogBase_entry


==================== Asm code ====================
2018-03-16 15:57:32.483973224 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$dmlogBase_info
.type GHC.Float.$dmlogBase_info, @object
GHC.Float.$dmlogBase_info:
	.quad	GHC.Float.$dmlogBase_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:57:32.485192882 UTC

.section .text
.align 8
_c35WR:
_c35WR:
	movq %rbx,%r14
	movq $stg_ap_pp_info,(%rbp)
	movq 8(%rbp),%rax
	movq 16(%rbp),%rbx
	movq %rbx,8(%rbp)
	movq %rax,16(%rbp)
	jmp GHC.Real./_entry
	.size _c35WR, .-_c35WR


==================== Asm code ====================
2018-03-16 15:57:32.48618459 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35WR_info:
	.quad	_c35WR
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.495204813 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$dm**_closure
.type GHC.Float.$dm**_closure, @object
GHC.Float.$dm**_closure:
	.quad	GHC.Float.$dm**_info


==================== Asm code ====================
2018-03-16 15:57:32.496545337 UTC

.section .text
.align 8
sat_s2UTJ_entry:
_c35Xy:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c35Xz
_c35XA:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Float.log_entry
_c35Xz:
	jmp *-16(%r13)
	.size sat_s2UTJ_entry, .-sat_s2UTJ_entry


==================== Asm code ====================
2018-03-16 15:57:32.497695726 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2UTJ_info:
	.quad	sat_s2UTJ_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:32.498963806 UTC

.section .text
.align 8
sat_s2UTK_entry:
_c35XD:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c35XH
_c35XI:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c35XK
_c35XJ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq $sat_s2UTJ_info,-24(%r12)
	movq %rax,-8(%r12)
	movq %rcx,(%r12)
	movq $block_c35XB_info,-40(%rbp)
	movq %rax,%r14
	leaq -24(%r12),%rax
	movq %rax,-32(%rbp)
	movq %rbx,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Float.$p1Floating_entry
_c35XK:
	movq $32,904(%r13)
_c35XH:
	jmp *-16(%r13)
	.size sat_s2UTK_entry, .-sat_s2UTK_entry


==================== Asm code ====================
2018-03-16 15:57:32.500069493 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2UTK_info:
	.quad	sat_s2UTK_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:57:32.50100545 UTC

.section .text
.align 8
_c35XB:
_c35XB:
	movq $block_c35XG_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p1Fractional_entry
	.size _c35XB, .-_c35XB


==================== Asm code ====================
2018-03-16 15:57:32.501847505 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35XB_info:
	.quad	_c35XB
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.502778068 UTC

.section .text
.align 8
_c35XG:
_c35XG:
	movq %rbx,%r14
	movq $stg_ap_pp_info,(%rbp)
	jmp GHC.Num.*_entry
	.size _c35XG, .-_c35XG


==================== Asm code ====================
2018-03-16 15:57:32.503657101 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35XG_info:
	.quad	_c35XG
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.505100133 UTC

.section .text
.align 8
.globl GHC.Float.$dm**_entry
.type GHC.Float.$dm**_entry, @object
GHC.Float.$dm**_entry:
_c35XQ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c35XR
_c35XS:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c35XU
_c35XT:
	movq $sat_s2UTK_info,-32(%r12)
	movq %r14,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rdi,(%r12)
	movq $stg_ap_p_info,-16(%rbp)
	leaq -32(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Float.exp_entry
_c35XU:
	movq $40,904(%r13)
_c35XR:
	movl $GHC.Float.$dm**_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$dm**_entry, .-GHC.Float.$dm**_entry


==================== Asm code ====================
2018-03-16 15:57:32.50628046 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$dm**_info
.type GHC.Float.$dm**_info, @object
GHC.Float.$dm**_info:
	.quad	GHC.Float.$dm**_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:57:32.509047231 UTC

.section .data
.align 8
.align 1
lvl1_r2Upz_closure:
	.quad	GHC.Real.:%_con_info
	.quad	GHC.Float.$fRealDouble1_closure
	.quad	GHC.Float.$fRealFloatDouble5_closure
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:32.518824407 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$dmsqrt_closure
.type GHC.Float.$dmsqrt_closure, @object
GHC.Float.$dmsqrt_closure:
	.quad	GHC.Float.$dmsqrt_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:32.520112977 UTC

.section .text
.align 8
sat_s2UTO_entry:
_c35Ys:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c35Yt
_c35Yu:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c35Yq_info,-24(%rbp)
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp GHC.Float.$p1Floating_entry
_c35Yt:
	jmp *-16(%r13)
	.size sat_s2UTO_entry, .-sat_s2UTO_entry


==================== Asm code ====================
2018-03-16 15:57:32.521074261 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2UTO_info:
	.quad	sat_s2UTO_entry
	.quad	1
	.quad	4294967312
	.quad	S2VLN_srt+592


==================== Asm code ====================
2018-03-16 15:57:32.522145127 UTC

.section .text
.align 8
_c35Yq:
_c35Yq:
	movq %rbx,%r14
	movq $stg_ap_p_info,-8(%rbp)
	movq $lvl1_r2Upz_closure+1,(%rbp)
	addq $-8,%rbp
	jmp GHC.Real.fromRational_entry
	.size _c35Yq, .-_c35Yq


==================== Asm code ====================
2018-03-16 15:57:32.523065099 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35Yq_info:
	.quad	_c35Yq
	.quad	0
	.quad	4294967326
	.quad	S2VLN_srt+592


==================== Asm code ====================
2018-03-16 15:57:32.524480449 UTC

.section .text
.align 8
.globl GHC.Float.$dmsqrt_entry
.type GHC.Float.$dmsqrt_entry, @object
GHC.Float.$dmsqrt_entry:
_c35Yy:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c35Yz
_c35YA:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c35YC
_c35YB:
	movq $sat_s2UTO_info,-16(%r12)
	movq %r14,(%r12)
	movq $stg_ap_pp_info,-24(%rbp)
	movq %rsi,-16(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Float.**_entry
_c35YC:
	movq $24,904(%r13)
_c35Yz:
	movl $GHC.Float.$dmsqrt_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$dmsqrt_entry, .-GHC.Float.$dmsqrt_entry


==================== Asm code ====================
2018-03-16 15:57:32.525674886 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$dmsqrt_info
.type GHC.Float.$dmsqrt_info, @object
GHC.Float.$dmsqrt_info:
	.quad	GHC.Float.$dmsqrt_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S2VLN_srt+592


==================== Asm code ====================
2018-03-16 15:57:32.53081414 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.roundTo2_closure
.type GHC.Float.roundTo2_closure, @object
GHC.Float.roundTo2_closure:
	.quad	GHC.Float.roundTo2_info


==================== Asm code ====================
2018-03-16 15:57:32.532106253 UTC

.section .text
.align 8
.globl GHC.Float.roundTo2_entry
.type GHC.Float.roundTo2_entry, @object
GHC.Float.roundTo2_entry:
_c35YX:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c35YY
_c35YZ:
	movq $block_c35YU_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c35YU
_c35YV:
	movq (%rbx),%rax
	jmp *(%rax)
_c35YY:
	movl $GHC.Float.roundTo2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.roundTo2_entry, .-GHC.Float.roundTo2_entry


==================== Asm code ====================
2018-03-16 15:57:32.536113138 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.roundTo2_info
.type GHC.Float.roundTo2_info, @object
GHC.Float.roundTo2_info:
	.quad	GHC.Float.roundTo2_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:32.537775805 UTC

.section .text
.align 8
_c35YU:
_c35YU:
	cmpq $0,7(%rbx)
	je _c35Z6
_c35Z5:
	movl $GHC.Types.False_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c35Z6:
	movl $GHC.Types.True_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c35YU, .-_c35YU


==================== Asm code ====================
2018-03-16 15:57:32.540135335 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35YU_info:
	.quad	_c35YU
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.54320823 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl2_r2UpA_bytes:
	.asciz "roundTo: bad Value"


==================== Asm code ====================
2018-03-16 15:57:32.549280507 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.roundTo1_closure
.type GHC.Float.roundTo1_closure, @object
GHC.Float.roundTo1_closure:
	.quad	GHC.Float.roundTo1_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:32.551117845 UTC

.section .text
.align 8
.globl GHC.Float.roundTo1_entry
.type GHC.Float.roundTo1_entry, @object
GHC.Float.roundTo1_entry:
_c35Zs:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c35Zt
_c35Zu:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c35Zp
_c35Zo:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq $block_c35Zq_info,-24(%rbp)
	movl $lvl2_r2UpA_bytes,%r14d
	addq $-24,%rbp
	jmp GHC.CString.unpackCString#_entry
_c35Zt:
	jmp *-16(%r13)
_c35Zp:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Float.roundTo1_entry, .-GHC.Float.roundTo1_entry


==================== Asm code ====================
2018-03-16 15:57:32.552486704 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.roundTo1_info
.type GHC.Float.roundTo1_info, @object
GHC.Float.roundTo1_info:
	.quad	GHC.Float.roundTo1_entry
	.quad	0
	.quad	4294967317
	.quad	S2VLN_srt+608


==================== Asm code ====================
2018-03-16 15:57:32.553738489 UTC

.section .text
.align 8
_c35Zq:
_c35Zq:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Err.errorWithoutStackTrace_entry
	.size _c35Zq, .-_c35Zq


==================== Asm code ====================
2018-03-16 15:57:32.554422068 UTC

.section .data.rel.ro
.align 8
.align 1
block_c35Zq_info:
	.quad	_c35Zq
	.quad	0
	.quad	4294967326
	.quad	S2VLN_srt+608


==================== Asm code ====================
2018-03-16 15:57:32.556271617 UTC

.section .data
.align 8
.align 1
lvl3_r2UpB_closure:
	.quad	:_con_info
	.quad	GHC.Float.minExpt_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:32.561089164 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$wxs_closure
.type GHC.Float.$wxs_closure, @object
GHC.Float.$wxs_closure:
	.quad	GHC.Float.$wxs_info


==================== Asm code ====================
2018-03-16 15:57:32.562169598 UTC

.section .text
.align 8
sat_s2UTX_entry:
_c35ZV:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c35ZW
_c35ZX:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	leaq -1(%rax),%r14
	addq $-16,%rbp
	jmp GHC.Float.$wxs_entry
_c35ZW:
	jmp *-16(%r13)
	.size sat_s2UTX_entry, .-sat_s2UTX_entry


==================== Asm code ====================
2018-03-16 15:57:32.562885744 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2UTX_info:
	.quad	sat_s2UTX_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 15:57:32.563833336 UTC

.section .text
.align 8
.globl GHC.Float.$wxs_entry
.type GHC.Float.$wxs_entry, @object
GHC.Float.$wxs_entry:
_c3601:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c3605
_c3604:
	cmpq $1,%r14
	je _c3600
_c35ZZ:
	movq $sat_s2UTX_info,-40(%r12)
	movq %r14,-24(%r12)
	movq $:_con_info,-16(%r12)
	movq $GHC.Float.minExpt_closure+1,-8(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c3605:
	movq $48,904(%r13)
	movl $GHC.Float.$wxs_closure,%ebx
	jmp *-8(%r13)
_c3600:
	addq $-48,%r12
	movl $lvl3_r2UpB_closure+2,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Float.$wxs_entry, .-GHC.Float.$wxs_entry


==================== Asm code ====================
2018-03-16 15:57:32.564572119 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$wxs_info
.type GHC.Float.$wxs_info, @object
GHC.Float.$wxs_info:
	.quad	GHC.Float.$wxs_entry
	.quad	0
	.quad	14
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:57:32.586972532 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$wroundTo_closure
.type GHC.Float.$wroundTo_closure, @object
GHC.Float.$wroundTo_closure:
	.quad	GHC.Float.$wroundTo_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:32.587958422 UTC

.section .text
.align 8
b2_s2UU1_entry:
_c360u:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c360B
_c360C:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c360r_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _c360r
_c360s:
	movq (%rbx),%rax
	jmp *(%rax)
_c360B:
	jmp *-16(%r13)
	.size b2_s2UU1_entry, .-b2_s2UU1_entry


==================== Asm code ====================
2018-03-16 15:57:32.588701386 UTC

.section .data.rel.ro
.align 8
.align 1
b2_s2UU1_info:
	.quad	b2_s2UU1_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:32.589624836 UTC

.section .text
.align 8
_c360r:
_c360r:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c360F
_c360E:
	movq 7(%rbx),%rax
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rax,%rbx
	shrq $63,%rbx
	addq %rbx,%rax
	sarq $1,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c360F:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c360r, .-_c360r


==================== Asm code ====================
2018-03-16 15:57:32.590302074 UTC

.section .data.rel.ro
.align 8
.align 1
block_c360r_info:
	.quad	_c360r
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.591106165 UTC

.section .text
.align 8
sat_s2UUd_entry:
_c360Y:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c360Z
_c3610:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c360V_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _c360V
_c360W:
	movq (%rbx),%rax
	jmp *(%rax)
_c360Z:
	jmp *-16(%r13)
	.size sat_s2UUd_entry, .-sat_s2UUd_entry


==================== Asm code ====================
2018-03-16 15:57:32.591759973 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2UUd_info:
	.quad	sat_s2UUd_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:32.592467837 UTC

.section .text
.align 8
_c360V:
_c360V:
	movq 7(%rbx),%rax
	cmpq $0,%rax
	jle _c3617
_c3618:
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Float.$wxs_entry
_c3617:
	movl $[]_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c360V, .-_c360V


==================== Asm code ====================
2018-03-16 15:57:32.593138144 UTC

.section .data.rel.ro
.align 8
.align 1
block_c360V_info:
	.quad	_c360V
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.593794458 UTC

.section .text
.align 8
sat_s2UUl_entry:
_c361n:
	movq 16(%rbx),%r14
	jmp GHC.Float.$seven_entry
	.size sat_s2UUl_entry, .-sat_s2UUl_entry


==================== Asm code ====================
2018-03-16 15:57:32.594381381 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2UUl_info:
	.quad	sat_s2UUl_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:32.595326624 UTC

.section .text
.align 8
sat_s2UUG_entry:
_c361N:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c361O
_c361P:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq 24(%rbx),%rax
	jl _c361L
_c361M:
	movl $GHC.Float.$fRealFracFloat2_closure+1,%ebx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c361O:
	jmp *-16(%r13)
_c361L:
	movl $GHC.Float.minExpt_closure+1,%ebx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s2UUG_entry, .-sat_s2UUG_entry


==================== Asm code ====================
2018-03-16 15:57:32.596134662 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2UUG_info:
	.quad	sat_s2UUG_entry
	.quad	8589934592
	.quad	20


==================== Asm code ====================
2018-03-16 15:57:32.596920192 UTC

.section .text
.align 8
sat_s2UUJ_entry:
_c3625:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3626
_c3627:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq 24(%rbx),%rax
	jl _c3623
_c3624:
	movl $GHC.Float.$fRealFracFloat2_closure+1,%ebx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3626:
	jmp *-16(%r13)
_c3623:
	movl $GHC.Float.minExpt_closure+1,%ebx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s2UUJ_entry, .-sat_s2UUJ_entry


==================== Asm code ====================
2018-03-16 15:57:32.597625094 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2UUJ_info:
	.quad	sat_s2UUJ_entry
	.quad	8589934592
	.quad	20


==================== Asm code ====================
2018-03-16 15:57:32.598427941 UTC

.section .text
.align 8
sat_s2UUM_entry:
_c362n:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c362o
_c362p:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq 24(%rbx),%rax
	jl _c362l
_c362m:
	movl $GHC.Float.$fRealFracFloat2_closure+1,%ebx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c362o:
	jmp *-16(%r13)
_c362l:
	movl $GHC.Float.minExpt_closure+1,%ebx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s2UUM_entry, .-sat_s2UUM_entry


==================== Asm code ====================
2018-03-16 15:57:32.599268894 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2UUM_info:
	.quad	sat_s2UUM_entry
	.quad	8589934592
	.quad	20


==================== Asm code ====================
2018-03-16 15:57:32.600077254 UTC

.section .text
.align 8
$wf1_s2UU5_entry:
_c362u:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _c362v
_c362w:
	movq $block_c360M_info,-48(%rbp)
	movq %rbx,%rax
	movq 5(%rbx),%rcx
	movq 13(%rbx),%rbx
	movq %rbx,%rdx
	movq %rdi,%rbx
	movq %rcx,-40(%rbp)
	movq %rdx,-32(%rbp)
	movq %rax,-24(%rbp)
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-48,%rbp
	testb $7,%bl
	jne _c360M
_c360N:
	movq (%rbx),%rax
	jmp *(%rax)
_c362v:
	jmp *-8(%r13)
	.size $wf1_s2UU5_entry, .-$wf1_s2UU5_entry


==================== Asm code ====================
2018-03-16 15:57:32.600743527 UTC

.section .data.rel.ro
.align 8
.align 1
$wf1_s2UU5_info:
	.quad	$wf1_s2UU5_entry
	.quad	2
	.quad	11
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:57:32.601786889 UTC

.section .text
.align 8
_c360M:
_c360M:
	movq 32(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c362r
_c362s:
	movq $block_c361c_info,-8(%rbp)
	movq 6(%rbx),%rcx
	movq 14(%rbx),%rbx
	movq %rbx,%rdx
	movq %rax,%rbx
	movq %rdx,(%rbp)
	movq %rcx,32(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c361c
_c361d:
	movq (%rbx),%rax
	jmp *(%rax)
_c362z:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_c362r:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c362z
_c362y:
	movq $sat_s2UUd_info,-16(%r12)
	movq %rax,(%r12)
	leaq -16(%r12),%r14
	movl $GHC.Float.minExpt_closure+1,%ebx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c360M, .-_c360M


==================== Asm code ====================
2018-03-16 15:57:32.602675366 UTC

.section .data.rel.ro
.align 8
.align 1
block_c360M_info:
	.quad	_c360M
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.603587868 UTC

.section .text
.align 8
_c361c:
_c361c:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c362D
_c362C:
	movq 40(%rbp),%rax
	movq 7(%rbx),%rbx
	testq %rbx,%rbx
	jne _c362W
_c363k:
	addq $-40,%r12
	movq $block_c361r_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c361r
_c361s:
	movq (%rbx),%rax
	jmp *(%rax)
_c362W:
	movq $sat_s2UUl_info,-32(%r12)
	movq %rax,-16(%r12)
	movq $GHC.Types.I#_con_info,-8(%r12)
	leaq -1(%rbx),%rax
	movq %rax,(%r12)
	movq 8(%rbp),%rax
	movq $block_c362I_info,8(%rbp)
	movq %rax,%rdi
	leaq -32(%r12),%rsi
	leaq -7(%r12),%r14
	movq 32(%rbp),%rbx
	addq $8,%rbp
	jmp $wf1_s2UU5_entry
_c362D:
	movq $40,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c361c, .-_c361c


==================== Asm code ====================
2018-03-16 15:57:32.604374588 UTC

.section .data.rel.ro
.align 8
.align 1
block_c361c_info:
	.quad	_c361c
	.quad	6
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.605082341 UTC

.section .text
.align 8
_c362I:
_c362I:
	movq $block_c362K_info,(%rbp)
	movq %r14,40(%rbp)
	testb $7,%bl
	jne _c362K
_c362L:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c362I, .-_c362I


==================== Asm code ====================
2018-03-16 15:57:32.605780185 UTC

.section .data.rel.ro
.align 8
.align 1
block_c362I_info:
	.quad	_c362I
	.quad	1413
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.606466485 UTC

.section .text
.align 8
_c362K:
_c362K:
	movq $block_c362P_info,(%rbp)
	movq 7(%rbx),%rax
	movq 32(%rbp),%rbx
	movq %rax,32(%rbp)
	testb $7,%bl
	jne _c362P
_c362Q:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c362K, .-_c362K


==================== Asm code ====================
2018-03-16 15:57:32.607316269 UTC

.section .data.rel.ro
.align 8
.align 1
block_c362K_info:
	.quad	_c362K
	.quad	389
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.60848664 UTC

.section .text
.align 8
_c362P:
_c362P:
	movq $block_c362U_info,16(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,24(%rbp)
	addq $16,%rbp
	testb $7,%bl
	jne _c362U
_c3630:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c362P, .-_c362P


==================== Asm code ====================
2018-03-16 15:57:32.609500728 UTC

.section .data.rel.ro
.align 8
.align 1
block_c362P_info:
	.quad	_c362P
	.quad	901
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.610840102 UTC

.section .text
.align 8
_c362U:
_c362U:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c3636
_c3635:
	movq 24(%rbp),%rax
	movq 16(%rbp),%rcx
	addq 8(%rbp),%rcx
	cmpq 7(%rbx),%rcx
	je _c363j
_c363g:
	movq $GHC.Types.I#_con_info,-32(%r12)
	movq %rcx,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -31(%r12),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%r14
	movl $GHC.Float.minExpt_closure+1,%ebx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c363j:
	movq $:_con_info,-32(%r12)
	movq $GHC.Float.minExpt_closure+1,-24(%r12)
	movq %rax,-16(%r12)
	leaq -30(%r12),%rax
	addq $-16,%r12
	movq %rax,%r14
	movl $GHC.Float.$fRealFracFloat2_closure+1,%ebx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3636:
	movq $40,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c362U, .-_c362U


==================== Asm code ====================
2018-03-16 15:57:32.612125341 UTC

.section .data.rel.ro
.align 8
.align 1
block_c362U_info:
	.quad	_c362U
	.quad	195
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.614131216 UTC

.section .text
.align 8
_c361r:
_c361r:
	movq $block_c361w_info,(%rbp)
	movq 7(%rbx),%rax
	movq 24(%rbp),%rbx
	movq %rax,40(%rbp)
	testb $7,%bl
	jne _c361w
_c361x:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c361r, .-_c361r


==================== Asm code ====================
2018-03-16 15:57:32.615047359 UTC

.section .data.rel.ro
.align 8
.align 1
block_c361r_info:
	.quad	_c361r
	.quad	1670
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.616371378 UTC

.section .text
.align 8
_c361w:
_c361w:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c363o
_c363n:
	movq 40(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq %rbx,%rax
	je _c363r
_c363q:
	movq $sat_s2UUG_info,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	movl $GHC.Types.[]_closure+1,%r14d
	leaq -24(%r12),%rbx
	addq $56,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c363o:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
_c363r:
	addq $-32,%r12
	movq $block_c361R_info,(%rbp)
	movq %rbx,%rax
	movq 48(%rbp),%rbx
	movq %rax,48(%rbp)
	testb $7,%bl
	jne _c361R
_c361S:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c361w, .-_c361w


==================== Asm code ====================
2018-03-16 15:57:32.617540664 UTC

.section .data.rel.ro
.align 8
.align 1
block_c361w_info:
	.quad	_c361w
	.quad	1926
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.618769656 UTC

.section .text
.align 8
_c361R:
_c361R:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c363t
_c363y:
	movq $block_c362a_info,32(%rbp)
	movq 8(%rbp),%rsi
	movl $GHC.Float.roundTo2_closure+1,%r14d
	addq $32,%rbp
	jmp GHC.List.all_entry
_c363w:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
_c363t:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c363w
_c363v:
	movq $sat_s2UUJ_info,-24(%r12)
	movq 40(%rbp),%rax
	movq %rax,-8(%r12)
	movq 48(%rbp),%rax
	movq %rax,(%r12)
	movl $GHC.Types.[]_closure+1,%r14d
	leaq -24(%r12),%rbx
	addq $56,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c361R, .-_c361R


==================== Asm code ====================
2018-03-16 15:57:32.619977304 UTC

.section .data.rel.ro
.align 8
.align 1
block_c361R_info:
	.quad	_c361R
	.quad	3974
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.621377737 UTC

.section .text
.align 8
_c362a:
_c362a:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c363A
_c363H:
	movl $GHC.Types.[]_closure+1,%r14d
	movl $GHC.Float.minExpt_closure+1,%ebx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c363D:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
_c363A:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c363D
_c363C:
	movq $sat_s2UUM_info,-24(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	movl $GHC.Types.[]_closure+1,%r14d
	leaq -24(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c362a, .-_c362a


==================== Asm code ====================
2018-03-16 15:57:32.622539344 UTC

.section .data.rel.ro
.align 8
.align 1
block_c362a_info:
	.quad	_c362a
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.623781985 UTC

.section .text
.align 8
.globl GHC.Float.$wroundTo_entry
.type GHC.Float.$wroundTo_entry, @object
GHC.Float.$wroundTo_entry:
_c363X:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c363Y
_c363Z:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c3641
_c3640:
	movq $b2_s2UU1_info,-40(%r12)
	movq %r14,-24(%r12)
	movq $$wf1_s2UU5_info,-16(%r12)
	movq %r14,-8(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	movq $block_c363S_info,-8(%rbp)
	movq %rsi,%rax
	movl $GHC.Types.True_closure+2,%esi
	movq %rax,%r14
	leaq -13(%r12),%rbx
	addq $-8,%rbp
	jmp $wf1_s2UU5_entry
_c3641:
	movq $48,904(%r13)
_c363Y:
	movl $GHC.Float.$wroundTo_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$wroundTo_entry, .-GHC.Float.$wroundTo_entry


==================== Asm code ====================
2018-03-16 15:57:32.62492577 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$wroundTo_info
.type GHC.Float.$wroundTo_info, @object
GHC.Float.$wroundTo_info:
	.quad	GHC.Float.$wroundTo_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	S2VLN_srt+616


==================== Asm code ====================
2018-03-16 15:57:32.626161181 UTC

.section .text
.align 8
_c363S:
_c363S:
	movq $block_c363U_info,-16(%rbp)
	movq %rbx,%rax
	movq %r14,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c363U
_c363V:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c363S, .-_c363S


==================== Asm code ====================
2018-03-16 15:57:32.627108694 UTC

.section .data.rel.ro
.align 8
.align 1
block_c363S_info:
	.quad	_c363S
	.quad	0
	.quad	4294967326
	.quad	S2VLN_srt+624


==================== Asm code ====================
2018-03-16 15:57:32.628527046 UTC

.section .text
.align 8
_c363U:
_c363U:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3647
_c3646:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	testq %rbx,%rbx
	jne _u364h
_c364b:
	addq $-24,%r12
	movq %rax,%r14
	movq 16(%rbp),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u364h:
	cmpq $1,%rbx
	jne _c364a
_c364g:
	movq $:_con_info,-16(%r12)
	movq $GHC.Float.$fRealFracFloat2_closure+1,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%r14
	movl $GHC.Float.$fRealFracFloat2_closure+1,%ebx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c364a:
	addq $-24,%r12
	movl $GHC.Float.roundTo1_closure,%ebx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c3647:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c363U, .-_c363U


==================== Asm code ====================
2018-03-16 15:57:32.629660586 UTC

.section .data.rel.ro
.align 8
.align 1
block_c363U_info:
	.quad	_c363U
	.quad	2
	.quad	4294967326
	.quad	S2VLN_srt+624


==================== Asm code ====================
2018-03-16 15:57:32.632894269 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.roundTo_closure
.type GHC.Float.roundTo_closure, @object
GHC.Float.roundTo_closure:
	.quad	GHC.Float.roundTo_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:32.633814187 UTC

.section .text
.align 8
.globl GHC.Float.roundTo_entry
.type GHC.Float.roundTo_entry, @object
GHC.Float.roundTo_entry:
_c366p:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c366q
_c366r:
	movq $block_c366m_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Float.$wroundTo_entry
_c366q:
	movl $GHC.Float.roundTo_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.roundTo_entry, .-GHC.Float.roundTo_entry


==================== Asm code ====================
2018-03-16 15:57:32.634475141 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.roundTo_info
.type GHC.Float.roundTo_info, @object
GHC.Float.roundTo_info:
	.quad	GHC.Float.roundTo_entry
	.quad	0
	.quad	21474836494
	.quad	12884901911
	.quad	S2VLN_srt+616


==================== Asm code ====================
2018-03-16 15:57:32.635272505 UTC

.section .text
.align 8
_c366m:
_c366m:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c366u
_c366t:
	movq $(,)_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c366u:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c366m, .-_c366m


==================== Asm code ====================
2018-03-16 15:57:32.635914772 UTC

.section .data.rel.ro
.align 8
.align 1
block_c366m_info:
	.quad	_c366m
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.637782319 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.maxExpt_closure
.type GHC.Float.maxExpt_closure, @object
GHC.Float.maxExpt_closure:
	.quad	GHC.Types.I#_con_info
	.quad	1100


==================== Asm code ====================
2018-03-16 15:57:32.639551666 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.maxExpt10_closure
.type GHC.Float.maxExpt10_closure, @object
GHC.Float.maxExpt10_closure:
	.quad	GHC.Types.I#_con_info
	.quad	324


==================== Asm code ====================
2018-03-16 15:57:32.643354559 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.gtFloat_closure
.type GHC.Float.gtFloat_closure, @object
GHC.Float.gtFloat_closure:
	.quad	GHC.Float.gtFloat_info


==================== Asm code ====================
2018-03-16 15:57:32.644263447 UTC

.section .text
.align 8
.globl GHC.Float.gtFloat_entry
.type GHC.Float.gtFloat_entry, @object
GHC.Float.gtFloat_entry:
_c366N:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c366R
_c366S:
	movq $block_c366K_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c366K
_c366L:
	movq (%rbx),%rax
	jmp *(%rax)
_c366R:
	movl $GHC.Float.gtFloat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.gtFloat_entry, .-GHC.Float.gtFloat_entry


==================== Asm code ====================
2018-03-16 15:57:32.64498979 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.gtFloat_info
.type GHC.Float.gtFloat_info, @object
GHC.Float.gtFloat_info:
	.quad	GHC.Float.gtFloat_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:32.645770411 UTC

.section .text
.align 8
_c366K:
_c366K:
	movq $block_c366Q_info,(%rbp)
	movss 7(%rbx),%xmm0
	movq 8(%rbp),%rbx
	movss %xmm0,8(%rbp)
	testb $7,%bl
	jne _c366Q
_c366U:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c366K, .-_c366K


==================== Asm code ====================
2018-03-16 15:57:32.646418623 UTC

.section .data.rel.ro
.align 8
.align 1
block_c366K_info:
	.quad	_c366K
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.647199783 UTC

.section .text
.align 8
_c366Q:
_c366Q:
	movss 8(%rbp),%xmm0
	ucomiss 7(%rbx),%xmm0
	seta %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c366Q, .-_c366Q


==================== Asm code ====================
2018-03-16 15:57:32.648424027 UTC

.section .data.rel.ro
.align 8
.align 1
block_c366Q_info:
	.quad	_c366Q
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.652140201 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.geFloat_closure
.type GHC.Float.geFloat_closure, @object
GHC.Float.geFloat_closure:
	.quad	GHC.Float.geFloat_info


==================== Asm code ====================
2018-03-16 15:57:32.653072141 UTC

.section .text
.align 8
.globl GHC.Float.geFloat_entry
.type GHC.Float.geFloat_entry, @object
GHC.Float.geFloat_entry:
_c367r:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c367v
_c367w:
	movq $block_c367o_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c367o
_c367p:
	movq (%rbx),%rax
	jmp *(%rax)
_c367v:
	movl $GHC.Float.geFloat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.geFloat_entry, .-GHC.Float.geFloat_entry


==================== Asm code ====================
2018-03-16 15:57:32.653811717 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.geFloat_info
.type GHC.Float.geFloat_info, @object
GHC.Float.geFloat_info:
	.quad	GHC.Float.geFloat_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:32.654583128 UTC

.section .text
.align 8
_c367o:
_c367o:
	movq $block_c367u_info,(%rbp)
	movss 7(%rbx),%xmm0
	movq 8(%rbp),%rbx
	movss %xmm0,8(%rbp)
	testb $7,%bl
	jne _c367u
_c367y:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c367o, .-_c367o


==================== Asm code ====================
2018-03-16 15:57:32.655164221 UTC

.section .data.rel.ro
.align 8
.align 1
block_c367o_info:
	.quad	_c367o
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.655895289 UTC

.section .text
.align 8
_c367u:
_c367u:
	movss 8(%rbp),%xmm0
	ucomiss 7(%rbx),%xmm0
	setae %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c367u, .-_c367u


==================== Asm code ====================
2018-03-16 15:57:32.656514817 UTC

.section .data.rel.ro
.align 8
.align 1
block_c367u_info:
	.quad	_c367u
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.660182727 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.ltFloat_closure
.type GHC.Float.ltFloat_closure, @object
GHC.Float.ltFloat_closure:
	.quad	GHC.Float.ltFloat_info


==================== Asm code ====================
2018-03-16 15:57:32.661085912 UTC

.section .text
.align 8
.globl GHC.Float.ltFloat_entry
.type GHC.Float.ltFloat_entry, @object
GHC.Float.ltFloat_entry:
_c3685:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3689
_c368a:
	movq $block_c3682_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3682
_c3683:
	movq (%rbx),%rax
	jmp *(%rax)
_c3689:
	movl $GHC.Float.ltFloat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.ltFloat_entry, .-GHC.Float.ltFloat_entry


==================== Asm code ====================
2018-03-16 15:57:32.66181774 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.ltFloat_info
.type GHC.Float.ltFloat_info, @object
GHC.Float.ltFloat_info:
	.quad	GHC.Float.ltFloat_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:32.662544242 UTC

.section .text
.align 8
_c3682:
_c3682:
	movq $block_c3688_info,(%rbp)
	movss 7(%rbx),%xmm0
	movq 8(%rbp),%rbx
	movss %xmm0,8(%rbp)
	testb $7,%bl
	jne _c3688
_c368c:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3682, .-_c3682


==================== Asm code ====================
2018-03-16 15:57:32.663163835 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3682_info:
	.quad	_c3682
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.663902714 UTC

.section .text
.align 8
_c3688:
_c3688:
	movss 8(%rbp),%xmm0
	ucomiss 7(%rbx),%xmm0
	setb %al
	setnp %bl
	andb %al,%bl
	movzbl %bl,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3688, .-_c3688


==================== Asm code ====================
2018-03-16 15:57:32.664549799 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3688_info:
	.quad	_c3688
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.668343738 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.leFloat_closure
.type GHC.Float.leFloat_closure, @object
GHC.Float.leFloat_closure:
	.quad	GHC.Float.leFloat_info


==================== Asm code ====================
2018-03-16 15:57:32.66922783 UTC

.section .text
.align 8
.globl GHC.Float.leFloat_entry
.type GHC.Float.leFloat_entry, @object
GHC.Float.leFloat_entry:
_c368J:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c368N
_c368O:
	movq $block_c368G_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c368G
_c368H:
	movq (%rbx),%rax
	jmp *(%rax)
_c368N:
	movl $GHC.Float.leFloat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.leFloat_entry, .-GHC.Float.leFloat_entry


==================== Asm code ====================
2018-03-16 15:57:32.669938431 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.leFloat_info
.type GHC.Float.leFloat_info, @object
GHC.Float.leFloat_info:
	.quad	GHC.Float.leFloat_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:32.670674531 UTC

.section .text
.align 8
_c368G:
_c368G:
	movq $block_c368M_info,(%rbp)
	movss 7(%rbx),%xmm0
	movq 8(%rbp),%rbx
	movss %xmm0,8(%rbp)
	testb $7,%bl
	jne _c368M
_c368Q:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c368G, .-_c368G


==================== Asm code ====================
2018-03-16 15:57:32.671312283 UTC

.section .data.rel.ro
.align 8
.align 1
block_c368G_info:
	.quad	_c368G
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.672018611 UTC

.section .text
.align 8
_c368M:
_c368M:
	movss 8(%rbp),%xmm0
	ucomiss 7(%rbx),%xmm0
	setbe %al
	setnp %bl
	andb %al,%bl
	movzbl %bl,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c368M, .-_c368M


==================== Asm code ====================
2018-03-16 15:57:32.67267025 UTC

.section .data.rel.ro
.align 8
.align 1
block_c368M_info:
	.quad	_c368M
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.676092046 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.expFloat_closure
.type GHC.Float.expFloat_closure, @object
GHC.Float.expFloat_closure:
	.quad	GHC.Float.expFloat_info


==================== Asm code ====================
2018-03-16 15:57:32.676966859 UTC

.section .text
.align 8
.globl GHC.Float.expFloat_entry
.type GHC.Float.expFloat_entry, @object
GHC.Float.expFloat_entry:
_c369n:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c369v
_c369w:
	movq $block_c369k_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c369k
_c369l:
	movq (%rbx),%rax
	jmp *(%rax)
_c369v:
	movl $GHC.Float.expFloat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.expFloat_entry, .-GHC.Float.expFloat_entry


==================== Asm code ====================
2018-03-16 15:57:32.677750355 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.expFloat_info
.type GHC.Float.expFloat_info, @object
GHC.Float.expFloat_info:
	.quad	GHC.Float.expFloat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:32.678628799 UTC

.section .text
.align 8
_c369k:
_c369k:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c369z
_c369y:
	subq $8,%rsp
	movss 7(%rbx),%xmm0
	movl $1,%eax
	call expf
	addq $8,%rsp
	movq $GHC.Types.F#_con_info,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c369z:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c369k, .-_c369k


==================== Asm code ====================
2018-03-16 15:57:32.67990294 UTC

.section .data.rel.ro
.align 8
.align 1
block_c369k_info:
	.quad	_c369k
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.684196725 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fFloatingFloat_$clog1pexp_closure
.type GHC.Float.$fFloatingFloat_$clog1pexp_closure, @object
GHC.Float.$fFloatingFloat_$clog1pexp_closure:
	.quad	GHC.Float.$fFloatingFloat_$clog1pexp_info


==================== Asm code ====================
2018-03-16 15:57:32.685043697 UTC

.section .text
.align 8
.globl GHC.Float.$fFloatingFloat_$clog1pexp_entry
.type GHC.Float.$fFloatingFloat_$clog1pexp_entry, @object
GHC.Float.$fFloatingFloat_$clog1pexp_entry:
_c369S:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c369T
_c369U:
	movq $block_c369P_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c369P
_c369Q:
	movq (%rbx),%rax
	jmp *(%rax)
_c369T:
	movl $GHC.Float.$fFloatingFloat_$clog1pexp_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fFloatingFloat_$clog1pexp_entry, .-GHC.Float.$fFloatingFloat_$clog1pexp_entry


==================== Asm code ====================
2018-03-16 15:57:32.685755313 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fFloatingFloat_$clog1pexp_info
.type GHC.Float.$fFloatingFloat_$clog1pexp_info, @object
GHC.Float.$fFloatingFloat_$clog1pexp_info:
	.quad	GHC.Float.$fFloatingFloat_$clog1pexp_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:32.686908451 UTC

.section .text
.align 8
_c369P:
_c369P:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c369Z
_c369Y:
	movss 7(%rbx),%xmm0
	ucomiss _n36aE(%rip),%xmm0
	jp _c36am
	jbe _c36av
_c36am:
	ucomiss _n36aN(%rip),%xmm0
	jp _c36a6
	jbe _c36ak
_c36a6:
	addq $-16,%r12
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c36av:
	subq $8,%rsp
	movl $1,%eax
	call expf
	addq $8,%rsp
	subq $8,%rsp
	movl $1,%eax
	call ghczuwrapperZC1ZCbaseZCGHCziFloatZClog1pf
	addq $8,%rsp
	movq $GHC.Types.F#_con_info,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36ak:
	subq $8,%rsp
	movsd %xmm0,%xmm1
	movss _n36aI(%rip),%xmm2
	xorps %xmm2,%xmm0
	movl $1,%eax
	movsd %xmm1,72(%rsp)
	call expf
	addq $8,%rsp
	movq $GHC.Types.F#_con_info,-8(%r12)
	movsd 64(%rsp),%xmm1
	addss %xmm0,%xmm1
	movss %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c369Z:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c369P, .-_c369P
.section .rodata
.align 8
.align 4
_n36aE:
	.byte	0
	.byte	0
	.byte	144
	.byte	65
.section .rodata
.align 8
.align 4
_n36aI:
	.long	-2147483648
.section .rodata
.align 8
.align 4
_n36aN:
	.byte	0
	.byte	0
	.byte	200
	.byte	66


==================== Asm code ====================
2018-03-16 15:57:32.687774214 UTC

.section .data.rel.ro
.align 8
.align 1
block_c369P_info:
	.quad	_c369P
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.691259446 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.logFloat_closure
.type GHC.Float.logFloat_closure, @object
GHC.Float.logFloat_closure:
	.quad	GHC.Float.logFloat_info


==================== Asm code ====================
2018-03-16 15:57:32.692138122 UTC

.section .text
.align 8
.globl GHC.Float.logFloat_entry
.type GHC.Float.logFloat_entry, @object
GHC.Float.logFloat_entry:
_c36aZ:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c36b7
_c36b8:
	movq $block_c36aW_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c36aW
_c36aX:
	movq (%rbx),%rax
	jmp *(%rax)
_c36b7:
	movl $GHC.Float.logFloat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.logFloat_entry, .-GHC.Float.logFloat_entry


==================== Asm code ====================
2018-03-16 15:57:32.692822775 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.logFloat_info
.type GHC.Float.logFloat_info, @object
GHC.Float.logFloat_info:
	.quad	GHC.Float.logFloat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:32.69367193 UTC

.section .text
.align 8
_c36aW:
_c36aW:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36bb
_c36ba:
	subq $8,%rsp
	movss 7(%rbx),%xmm0
	movl $1,%eax
	call logf
	addq $8,%rsp
	movq $GHC.Types.F#_con_info,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36bb:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c36aW, .-_c36aW


==================== Asm code ====================
2018-03-16 15:57:32.694353276 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36aW_info:
	.quad	_c36aW
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.698556589 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fFloatingFloat_$clogBase_closure
.type GHC.Float.$fFloatingFloat_$clogBase_closure, @object
GHC.Float.$fFloatingFloat_$clogBase_closure:
	.quad	GHC.Float.$fFloatingFloat_$clogBase_info


==================== Asm code ====================
2018-03-16 15:57:32.699445213 UTC

.section .text
.align 8
.globl GHC.Float.$fFloatingFloat_$clogBase_entry
.type GHC.Float.$fFloatingFloat_$clogBase_entry, @object
GHC.Float.$fFloatingFloat_$clogBase_entry:
_c36bu:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c36bO
_c36bP:
	movq $block_c36br_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c36br
_c36bs:
	movq (%rbx),%rax
	jmp *(%rax)
_c36bO:
	movl $GHC.Float.$fFloatingFloat_$clogBase_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fFloatingFloat_$clogBase_entry, .-GHC.Float.$fFloatingFloat_$clogBase_entry


==================== Asm code ====================
2018-03-16 15:57:32.70014843 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fFloatingFloat_$clogBase_info
.type GHC.Float.$fFloatingFloat_$clogBase_info, @object
GHC.Float.$fFloatingFloat_$clogBase_info:
	.quad	GHC.Float.$fFloatingFloat_$clogBase_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:32.700969028 UTC

.section .text
.align 8
_c36br:
_c36br:
	movq 8(%rbp),%rax
	subq $8,%rsp
	movss 7(%rbx),%xmm0
	movq %rax,%rbx
	movl $1,%eax
	call logf
	addq $8,%rsp
	movq $block_c36bB_info,(%rbp)
	movss %xmm0,8(%rbp)
	testb $7,%bl
	jne _c36bB
_c36bC:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c36br, .-_c36br


==================== Asm code ====================
2018-03-16 15:57:32.702588138 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36br_info:
	.quad	_c36br
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.703858332 UTC

.section .text
.align 8
_c36bB:
_c36bB:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36bT
_c36bS:
	movss 8(%rbp),%xmm0
	subq $8,%rsp
	movsd %xmm0,%xmm1
	movss 7(%rbx),%xmm0
	movl $1,%eax
	movsd %xmm1,72(%rsp)
	call logf
	addq $8,%rsp
	movq $GHC.Types.F#_con_info,-8(%r12)
	movsd 64(%rsp),%xmm1
	divss %xmm0,%xmm1
	movss %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36bT:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c36bB, .-_c36bB


==================== Asm code ====================
2018-03-16 15:57:32.704843248 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36bB_info:
	.quad	_c36bB
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.709476198 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.sqrtFloat_closure
.type GHC.Float.sqrtFloat_closure, @object
GHC.Float.sqrtFloat_closure:
	.quad	GHC.Float.sqrtFloat_info


==================== Asm code ====================
2018-03-16 15:57:32.710657779 UTC

.section .text
.align 8
.globl GHC.Float.sqrtFloat_entry
.type GHC.Float.sqrtFloat_entry, @object
GHC.Float.sqrtFloat_entry:
_c36cj:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c36cr
_c36cs:
	movq $block_c36cg_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c36cg
_c36ch:
	movq (%rbx),%rax
	jmp *(%rax)
_c36cr:
	movl $GHC.Float.sqrtFloat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.sqrtFloat_entry, .-GHC.Float.sqrtFloat_entry


==================== Asm code ====================
2018-03-16 15:57:32.711596458 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.sqrtFloat_info
.type GHC.Float.sqrtFloat_info, @object
GHC.Float.sqrtFloat_info:
	.quad	GHC.Float.sqrtFloat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:32.712629875 UTC

.section .text
.align 8
_c36cg:
_c36cg:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36cv
_c36cu:
	movss 7(%rbx),%xmm0
	sqrtss %xmm0,%xmm0
	movq $GHC.Types.F#_con_info,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36cv:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c36cg, .-_c36cg


==================== Asm code ====================
2018-03-16 15:57:32.713601136 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36cg_info:
	.quad	_c36cg
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.718561317 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.sinFloat_closure
.type GHC.Float.sinFloat_closure, @object
GHC.Float.sinFloat_closure:
	.quad	GHC.Float.sinFloat_info


==================== Asm code ====================
2018-03-16 15:57:32.71951039 UTC

.section .text
.align 8
.globl GHC.Float.sinFloat_entry
.type GHC.Float.sinFloat_entry, @object
GHC.Float.sinFloat_entry:
_c36cP:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c36cX
_c36cY:
	movq $block_c36cM_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c36cM
_c36cN:
	movq (%rbx),%rax
	jmp *(%rax)
_c36cX:
	movl $GHC.Float.sinFloat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.sinFloat_entry, .-GHC.Float.sinFloat_entry


==================== Asm code ====================
2018-03-16 15:57:32.720527723 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.sinFloat_info
.type GHC.Float.sinFloat_info, @object
GHC.Float.sinFloat_info:
	.quad	GHC.Float.sinFloat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:32.721731358 UTC

.section .text
.align 8
_c36cM:
_c36cM:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36d1
_c36d0:
	subq $8,%rsp
	movss 7(%rbx),%xmm0
	movl $1,%eax
	call sinf
	addq $8,%rsp
	movq $GHC.Types.F#_con_info,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36d1:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c36cM, .-_c36cM


==================== Asm code ====================
2018-03-16 15:57:32.722714299 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36cM_info:
	.quad	_c36cM
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.727200626 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.cosFloat_closure
.type GHC.Float.cosFloat_closure, @object
GHC.Float.cosFloat_closure:
	.quad	GHC.Float.cosFloat_info


==================== Asm code ====================
2018-03-16 15:57:32.728221058 UTC

.section .text
.align 8
.globl GHC.Float.cosFloat_entry
.type GHC.Float.cosFloat_entry, @object
GHC.Float.cosFloat_entry:
_c36dk:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c36ds
_c36dt:
	movq $block_c36dh_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c36dh
_c36di:
	movq (%rbx),%rax
	jmp *(%rax)
_c36ds:
	movl $GHC.Float.cosFloat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.cosFloat_entry, .-GHC.Float.cosFloat_entry


==================== Asm code ====================
2018-03-16 15:57:32.72900119 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.cosFloat_info
.type GHC.Float.cosFloat_info, @object
GHC.Float.cosFloat_info:
	.quad	GHC.Float.cosFloat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:32.730470095 UTC

.section .text
.align 8
_c36dh:
_c36dh:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36dw
_c36dv:
	subq $8,%rsp
	movss 7(%rbx),%xmm0
	movl $1,%eax
	call cosf
	addq $8,%rsp
	movq $GHC.Types.F#_con_info,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36dw:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c36dh, .-_c36dh


==================== Asm code ====================
2018-03-16 15:57:32.731424525 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36dh_info:
	.quad	_c36dh
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.735665204 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.tanFloat_closure
.type GHC.Float.tanFloat_closure, @object
GHC.Float.tanFloat_closure:
	.quad	GHC.Float.tanFloat_info


==================== Asm code ====================
2018-03-16 15:57:32.736735891 UTC

.section .text
.align 8
.globl GHC.Float.tanFloat_entry
.type GHC.Float.tanFloat_entry, @object
GHC.Float.tanFloat_entry:
_c36dP:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c36dX
_c36dY:
	movq $block_c36dM_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c36dM
_c36dN:
	movq (%rbx),%rax
	jmp *(%rax)
_c36dX:
	movl $GHC.Float.tanFloat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.tanFloat_entry, .-GHC.Float.tanFloat_entry


==================== Asm code ====================
2018-03-16 15:57:32.73769564 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.tanFloat_info
.type GHC.Float.tanFloat_info, @object
GHC.Float.tanFloat_info:
	.quad	GHC.Float.tanFloat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:32.738704783 UTC

.section .text
.align 8
_c36dM:
_c36dM:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36e1
_c36e0:
	subq $8,%rsp
	movss 7(%rbx),%xmm0
	movl $1,%eax
	call tanf
	addq $8,%rsp
	movq $GHC.Types.F#_con_info,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36e1:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c36dM, .-_c36dM


==================== Asm code ====================
2018-03-16 15:57:32.73967736 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36dM_info:
	.quad	_c36dM
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.742952405 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.asinFloat_closure
.type GHC.Float.asinFloat_closure, @object
GHC.Float.asinFloat_closure:
	.quad	GHC.Float.asinFloat_info


==================== Asm code ====================
2018-03-16 15:57:32.74375936 UTC

.section .text
.align 8
.globl GHC.Float.asinFloat_entry
.type GHC.Float.asinFloat_entry, @object
GHC.Float.asinFloat_entry:
_c36ek:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c36es
_c36et:
	movq $block_c36eh_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c36eh
_c36ei:
	movq (%rbx),%rax
	jmp *(%rax)
_c36es:
	movl $GHC.Float.asinFloat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.asinFloat_entry, .-GHC.Float.asinFloat_entry


==================== Asm code ====================
2018-03-16 15:57:32.744392968 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.asinFloat_info
.type GHC.Float.asinFloat_info, @object
GHC.Float.asinFloat_info:
	.quad	GHC.Float.asinFloat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:32.745190093 UTC

.section .text
.align 8
_c36eh:
_c36eh:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36ew
_c36ev:
	subq $8,%rsp
	movss 7(%rbx),%xmm0
	movl $1,%eax
	call asinf
	addq $8,%rsp
	movq $GHC.Types.F#_con_info,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36ew:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c36eh, .-_c36eh


==================== Asm code ====================
2018-03-16 15:57:32.746084926 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36eh_info:
	.quad	_c36eh
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.749183052 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.acosFloat_closure
.type GHC.Float.acosFloat_closure, @object
GHC.Float.acosFloat_closure:
	.quad	GHC.Float.acosFloat_info


==================== Asm code ====================
2018-03-16 15:57:32.750055407 UTC

.section .text
.align 8
.globl GHC.Float.acosFloat_entry
.type GHC.Float.acosFloat_entry, @object
GHC.Float.acosFloat_entry:
_c36eP:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c36eX
_c36eY:
	movq $block_c36eM_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c36eM
_c36eN:
	movq (%rbx),%rax
	jmp *(%rax)
_c36eX:
	movl $GHC.Float.acosFloat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.acosFloat_entry, .-GHC.Float.acosFloat_entry


==================== Asm code ====================
2018-03-16 15:57:32.750743603 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.acosFloat_info
.type GHC.Float.acosFloat_info, @object
GHC.Float.acosFloat_info:
	.quad	GHC.Float.acosFloat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:32.751562408 UTC

.section .text
.align 8
_c36eM:
_c36eM:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36f1
_c36f0:
	subq $8,%rsp
	movss 7(%rbx),%xmm0
	movl $1,%eax
	call acosf
	addq $8,%rsp
	movq $GHC.Types.F#_con_info,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36f1:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c36eM, .-_c36eM


==================== Asm code ====================
2018-03-16 15:57:32.752833592 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36eM_info:
	.quad	_c36eM
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.756190972 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.atanFloat_closure
.type GHC.Float.atanFloat_closure, @object
GHC.Float.atanFloat_closure:
	.quad	GHC.Float.atanFloat_info


==================== Asm code ====================
2018-03-16 15:57:32.757035006 UTC

.section .text
.align 8
.globl GHC.Float.atanFloat_entry
.type GHC.Float.atanFloat_entry, @object
GHC.Float.atanFloat_entry:
_c36fk:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c36fs
_c36ft:
	movq $block_c36fh_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c36fh
_c36fi:
	movq (%rbx),%rax
	jmp *(%rax)
_c36fs:
	movl $GHC.Float.atanFloat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.atanFloat_entry, .-GHC.Float.atanFloat_entry


==================== Asm code ====================
2018-03-16 15:57:32.75790236 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.atanFloat_info
.type GHC.Float.atanFloat_info, @object
GHC.Float.atanFloat_info:
	.quad	GHC.Float.atanFloat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:32.758667032 UTC

.section .text
.align 8
_c36fh:
_c36fh:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36fw
_c36fv:
	subq $8,%rsp
	movss 7(%rbx),%xmm0
	movl $1,%eax
	call atanf
	addq $8,%rsp
	movq $GHC.Types.F#_con_info,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36fw:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c36fh, .-_c36fh


==================== Asm code ====================
2018-03-16 15:57:32.759287582 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36fh_info:
	.quad	_c36fh
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.762482011 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.sinhFloat_closure
.type GHC.Float.sinhFloat_closure, @object
GHC.Float.sinhFloat_closure:
	.quad	GHC.Float.sinhFloat_info


==================== Asm code ====================
2018-03-16 15:57:32.763289406 UTC

.section .text
.align 8
.globl GHC.Float.sinhFloat_entry
.type GHC.Float.sinhFloat_entry, @object
GHC.Float.sinhFloat_entry:
_c36fP:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c36fX
_c36fY:
	movq $block_c36fM_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c36fM
_c36fN:
	movq (%rbx),%rax
	jmp *(%rax)
_c36fX:
	movl $GHC.Float.sinhFloat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.sinhFloat_entry, .-GHC.Float.sinhFloat_entry


==================== Asm code ====================
2018-03-16 15:57:32.763962942 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.sinhFloat_info
.type GHC.Float.sinhFloat_info, @object
GHC.Float.sinhFloat_info:
	.quad	GHC.Float.sinhFloat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:32.764748082 UTC

.section .text
.align 8
_c36fM:
_c36fM:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36g1
_c36g0:
	subq $8,%rsp
	movss 7(%rbx),%xmm0
	movl $1,%eax
	call sinhf
	addq $8,%rsp
	movq $GHC.Types.F#_con_info,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36g1:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c36fM, .-_c36fM


==================== Asm code ====================
2018-03-16 15:57:32.765440793 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36fM_info:
	.quad	_c36fM
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.768566537 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.coshFloat_closure
.type GHC.Float.coshFloat_closure, @object
GHC.Float.coshFloat_closure:
	.quad	GHC.Float.coshFloat_info


==================== Asm code ====================
2018-03-16 15:57:32.769699882 UTC

.section .text
.align 8
.globl GHC.Float.coshFloat_entry
.type GHC.Float.coshFloat_entry, @object
GHC.Float.coshFloat_entry:
_c36gk:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c36gs
_c36gt:
	movq $block_c36gh_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c36gh
_c36gi:
	movq (%rbx),%rax
	jmp *(%rax)
_c36gs:
	movl $GHC.Float.coshFloat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.coshFloat_entry, .-GHC.Float.coshFloat_entry


==================== Asm code ====================
2018-03-16 15:57:32.770376935 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.coshFloat_info
.type GHC.Float.coshFloat_info, @object
GHC.Float.coshFloat_info:
	.quad	GHC.Float.coshFloat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:32.771147463 UTC

.section .text
.align 8
_c36gh:
_c36gh:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36gw
_c36gv:
	subq $8,%rsp
	movss 7(%rbx),%xmm0
	movl $1,%eax
	call coshf
	addq $8,%rsp
	movq $GHC.Types.F#_con_info,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36gw:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c36gh, .-_c36gh


==================== Asm code ====================
2018-03-16 15:57:32.771825281 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36gh_info:
	.quad	_c36gh
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.77561171 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.tanhFloat_closure
.type GHC.Float.tanhFloat_closure, @object
GHC.Float.tanhFloat_closure:
	.quad	GHC.Float.tanhFloat_info


==================== Asm code ====================
2018-03-16 15:57:32.776842343 UTC

.section .text
.align 8
.globl GHC.Float.tanhFloat_entry
.type GHC.Float.tanhFloat_entry, @object
GHC.Float.tanhFloat_entry:
_c36gP:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c36gX
_c36gY:
	movq $block_c36gM_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c36gM
_c36gN:
	movq (%rbx),%rax
	jmp *(%rax)
_c36gX:
	movl $GHC.Float.tanhFloat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.tanhFloat_entry, .-GHC.Float.tanhFloat_entry


==================== Asm code ====================
2018-03-16 15:57:32.77800816 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.tanhFloat_info
.type GHC.Float.tanhFloat_info, @object
GHC.Float.tanhFloat_info:
	.quad	GHC.Float.tanhFloat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:32.779015324 UTC

.section .text
.align 8
_c36gM:
_c36gM:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36h1
_c36h0:
	subq $8,%rsp
	movss 7(%rbx),%xmm0
	movl $1,%eax
	call tanhf
	addq $8,%rsp
	movq $GHC.Types.F#_con_info,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36h1:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c36gM, .-_c36gM


==================== Asm code ====================
2018-03-16 15:57:32.780062493 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36gM_info:
	.quad	_c36gM
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.785769865 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.powerFloat_closure
.type GHC.Float.powerFloat_closure, @object
GHC.Float.powerFloat_closure:
	.quad	GHC.Float.powerFloat_info


==================== Asm code ====================
2018-03-16 15:57:32.787530505 UTC

.section .text
.align 8
.globl GHC.Float.powerFloat_entry
.type GHC.Float.powerFloat_entry, @object
GHC.Float.powerFloat_entry:
_c36hk:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c36hy
_c36hz:
	movq $block_c36hh_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c36hh
_c36hi:
	movq (%rbx),%rax
	jmp *(%rax)
_c36hy:
	movl $GHC.Float.powerFloat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.powerFloat_entry, .-GHC.Float.powerFloat_entry


==================== Asm code ====================
2018-03-16 15:57:32.788450593 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.powerFloat_info
.type GHC.Float.powerFloat_info, @object
GHC.Float.powerFloat_info:
	.quad	GHC.Float.powerFloat_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:32.789438691 UTC

.section .text
.align 8
_c36hh:
_c36hh:
	movq $block_c36hn_info,(%rbp)
	movss 7(%rbx),%xmm0
	movq 8(%rbp),%rbx
	movss %xmm0,8(%rbp)
	testb $7,%bl
	jne _c36hn
_c36ho:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c36hh, .-_c36hh


==================== Asm code ====================
2018-03-16 15:57:32.790237623 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36hh_info:
	.quad	_c36hh
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.791284034 UTC

.section .text
.align 8
_c36hn:
_c36hn:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36hD
_c36hC:
	subq $8,%rsp
	movss 8(%rbp),%xmm0
	movss 7(%rbx),%xmm1
	movl $2,%eax
	call powf
	addq $8,%rsp
	movq $GHC.Types.F#_con_info,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36hD:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c36hn, .-_c36hn


==================== Asm code ====================
2018-03-16 15:57:32.792197614 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36hn_info:
	.quad	_c36hn
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.797360341 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.gtDouble_closure
.type GHC.Float.gtDouble_closure, @object
GHC.Float.gtDouble_closure:
	.quad	GHC.Float.gtDouble_info


==================== Asm code ====================
2018-03-16 15:57:32.798413111 UTC

.section .text
.align 8
.globl GHC.Float.gtDouble_entry
.type GHC.Float.gtDouble_entry, @object
GHC.Float.gtDouble_entry:
_c36i1:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c36i5
_c36i6:
	movq $block_c36hY_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c36hY
_c36hZ:
	movq (%rbx),%rax
	jmp *(%rax)
_c36i5:
	movl $GHC.Float.gtDouble_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.gtDouble_entry, .-GHC.Float.gtDouble_entry


==================== Asm code ====================
2018-03-16 15:57:32.799410581 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.gtDouble_info
.type GHC.Float.gtDouble_info, @object
GHC.Float.gtDouble_info:
	.quad	GHC.Float.gtDouble_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:32.8003619 UTC

.section .text
.align 8
_c36hY:
_c36hY:
	movq $block_c36i4_info,(%rbp)
	movsd 7(%rbx),%xmm0
	movq 8(%rbp),%rbx
	movsd %xmm0,8(%rbp)
	testb $7,%bl
	jne _c36i4
_c36i8:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c36hY, .-_c36hY


==================== Asm code ====================
2018-03-16 15:57:32.80113084 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36hY_info:
	.quad	_c36hY
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.802050911 UTC

.section .text
.align 8
_c36i4:
_c36i4:
	movsd 8(%rbp),%xmm0
	ucomisd 7(%rbx),%xmm0
	seta %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c36i4, .-_c36i4


==================== Asm code ====================
2018-03-16 15:57:32.802838069 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36i4_info:
	.quad	_c36i4
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.807550004 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.geDouble_closure
.type GHC.Float.geDouble_closure, @object
GHC.Float.geDouble_closure:
	.quad	GHC.Float.geDouble_info


==================== Asm code ====================
2018-03-16 15:57:32.808666778 UTC

.section .text
.align 8
.globl GHC.Float.geDouble_entry
.type GHC.Float.geDouble_entry, @object
GHC.Float.geDouble_entry:
_c36iF:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c36iJ
_c36iK:
	movq $block_c36iC_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c36iC
_c36iD:
	movq (%rbx),%rax
	jmp *(%rax)
_c36iJ:
	movl $GHC.Float.geDouble_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.geDouble_entry, .-GHC.Float.geDouble_entry


==================== Asm code ====================
2018-03-16 15:57:32.809903851 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.geDouble_info
.type GHC.Float.geDouble_info, @object
GHC.Float.geDouble_info:
	.quad	GHC.Float.geDouble_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:32.810852041 UTC

.section .text
.align 8
_c36iC:
_c36iC:
	movq $block_c36iI_info,(%rbp)
	movsd 7(%rbx),%xmm0
	movq 8(%rbp),%rbx
	movsd %xmm0,8(%rbp)
	testb $7,%bl
	jne _c36iI
_c36iM:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c36iC, .-_c36iC


==================== Asm code ====================
2018-03-16 15:57:32.811647684 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36iC_info:
	.quad	_c36iC
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.812535361 UTC

.section .text
.align 8
_c36iI:
_c36iI:
	movsd 8(%rbp),%xmm0
	ucomisd 7(%rbx),%xmm0
	setae %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c36iI, .-_c36iI


==================== Asm code ====================
2018-03-16 15:57:32.813372342 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36iI_info:
	.quad	_c36iI
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.818310126 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.ltDouble_closure
.type GHC.Float.ltDouble_closure, @object
GHC.Float.ltDouble_closure:
	.quad	GHC.Float.ltDouble_info


==================== Asm code ====================
2018-03-16 15:57:32.8194009 UTC

.section .text
.align 8
.globl GHC.Float.ltDouble_entry
.type GHC.Float.ltDouble_entry, @object
GHC.Float.ltDouble_entry:
_c36jj:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c36jn
_c36jo:
	movq $block_c36jg_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c36jg
_c36jh:
	movq (%rbx),%rax
	jmp *(%rax)
_c36jn:
	movl $GHC.Float.ltDouble_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.ltDouble_entry, .-GHC.Float.ltDouble_entry


==================== Asm code ====================
2018-03-16 15:57:32.820302384 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.ltDouble_info
.type GHC.Float.ltDouble_info, @object
GHC.Float.ltDouble_info:
	.quad	GHC.Float.ltDouble_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:32.821303525 UTC

.section .text
.align 8
_c36jg:
_c36jg:
	movq $block_c36jm_info,(%rbp)
	movsd 7(%rbx),%xmm0
	movq 8(%rbp),%rbx
	movsd %xmm0,8(%rbp)
	testb $7,%bl
	jne _c36jm
_c36jq:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c36jg, .-_c36jg


==================== Asm code ====================
2018-03-16 15:57:32.822115283 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36jg_info:
	.quad	_c36jg
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.823158654 UTC

.section .text
.align 8
_c36jm:
_c36jm:
	movsd 8(%rbp),%xmm0
	ucomisd 7(%rbx),%xmm0
	setb %al
	setnp %bl
	andb %al,%bl
	movzbl %bl,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c36jm, .-_c36jm


==================== Asm code ====================
2018-03-16 15:57:32.8240849 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36jm_info:
	.quad	_c36jm
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.829769371 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.leDouble_closure
.type GHC.Float.leDouble_closure, @object
GHC.Float.leDouble_closure:
	.quad	GHC.Float.leDouble_info


==================== Asm code ====================
2018-03-16 15:57:32.830592591 UTC

.section .text
.align 8
.globl GHC.Float.leDouble_entry
.type GHC.Float.leDouble_entry, @object
GHC.Float.leDouble_entry:
_c36jX:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c36k1
_c36k2:
	movq $block_c36jU_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c36jU
_c36jV:
	movq (%rbx),%rax
	jmp *(%rax)
_c36k1:
	movl $GHC.Float.leDouble_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.leDouble_entry, .-GHC.Float.leDouble_entry


==================== Asm code ====================
2018-03-16 15:57:32.831255147 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.leDouble_info
.type GHC.Float.leDouble_info, @object
GHC.Float.leDouble_info:
	.quad	GHC.Float.leDouble_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:32.831958913 UTC

.section .text
.align 8
_c36jU:
_c36jU:
	movq $block_c36k0_info,(%rbp)
	movsd 7(%rbx),%xmm0
	movq 8(%rbp),%rbx
	movsd %xmm0,8(%rbp)
	testb $7,%bl
	jne _c36k0
_c36k4:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c36jU, .-_c36jU


==================== Asm code ====================
2018-03-16 15:57:32.832578384 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36jU_info:
	.quad	_c36jU
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.833290074 UTC

.section .text
.align 8
_c36k0:
_c36k0:
	movsd 8(%rbp),%xmm0
	ucomisd 7(%rbx),%xmm0
	setbe %al
	setnp %bl
	andb %al,%bl
	movzbl %bl,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c36k0, .-_c36k0


==================== Asm code ====================
2018-03-16 15:57:32.833864716 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36k0_info:
	.quad	_c36k0
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.837041552 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.double2Float_closure
.type GHC.Float.double2Float_closure, @object
GHC.Float.double2Float_closure:
	.quad	GHC.Float.double2Float_info


==================== Asm code ====================
2018-03-16 15:57:32.838222461 UTC

.section .text
.align 8
.globl GHC.Float.double2Float_entry
.type GHC.Float.double2Float_entry, @object
GHC.Float.double2Float_entry:
_c36kB:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c36kI
_c36kJ:
	movq $block_c36ky_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c36ky
_c36kz:
	movq (%rbx),%rax
	jmp *(%rax)
_c36kI:
	movl $GHC.Float.double2Float_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.double2Float_entry, .-GHC.Float.double2Float_entry


==================== Asm code ====================
2018-03-16 15:57:32.838860129 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.double2Float_info
.type GHC.Float.double2Float_info, @object
GHC.Float.double2Float_info:
	.quad	GHC.Float.double2Float_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:32.839635425 UTC

.section .text
.align 8
_c36ky:
_c36ky:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36kM
_c36kL:
	movsd 7(%rbx),%xmm0
	cvtsd2ss %xmm0,%xmm0
	movq $GHC.Types.F#_con_info,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36kM:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c36ky, .-_c36ky


==================== Asm code ====================
2018-03-16 15:57:32.840302835 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36ky_info:
	.quad	_c36ky
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.843576415 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.float2Double_closure
.type GHC.Float.float2Double_closure, @object
GHC.Float.float2Double_closure:
	.quad	GHC.Float.float2Double_info


==================== Asm code ====================
2018-03-16 15:57:32.844417961 UTC

.section .text
.align 8
.globl GHC.Float.float2Double_entry
.type GHC.Float.float2Double_entry, @object
GHC.Float.float2Double_entry:
_c36l6:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c36ld
_c36le:
	movq $block_c36l3_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c36l3
_c36l4:
	movq (%rbx),%rax
	jmp *(%rax)
_c36ld:
	movl $GHC.Float.float2Double_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.float2Double_entry, .-GHC.Float.float2Double_entry


==================== Asm code ====================
2018-03-16 15:57:32.845127848 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.float2Double_info
.type GHC.Float.float2Double_info, @object
GHC.Float.float2Double_info:
	.quad	GHC.Float.float2Double_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:32.845900438 UTC

.section .text
.align 8
_c36l3:
_c36l3:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36lh
_c36lg:
	movss 7(%rbx),%xmm0
	cvtss2sd %xmm0,%xmm0
	movq $GHC.Types.D#_con_info,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36lh:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c36l3, .-_c36l3


==================== Asm code ====================
2018-03-16 15:57:32.846552924 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36l3_info:
	.quad	_c36l3
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.849821188 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.expDouble_closure
.type GHC.Float.expDouble_closure, @object
GHC.Float.expDouble_closure:
	.quad	GHC.Float.expDouble_info


==================== Asm code ====================
2018-03-16 15:57:32.850638313 UTC

.section .text
.align 8
.globl GHC.Float.expDouble_entry
.type GHC.Float.expDouble_entry, @object
GHC.Float.expDouble_entry:
_c36lB:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c36lJ
_c36lK:
	movq $block_c36ly_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c36ly
_c36lz:
	movq (%rbx),%rax
	jmp *(%rax)
_c36lJ:
	movl $GHC.Float.expDouble_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.expDouble_entry, .-GHC.Float.expDouble_entry


==================== Asm code ====================
2018-03-16 15:57:32.851315418 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.expDouble_info
.type GHC.Float.expDouble_info, @object
GHC.Float.expDouble_info:
	.quad	GHC.Float.expDouble_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:32.852121979 UTC

.section .text
.align 8
_c36ly:
_c36ly:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36lN
_c36lM:
	subq $8,%rsp
	movsd 7(%rbx),%xmm0
	movl $1,%eax
	call exp
	addq $8,%rsp
	movq $GHC.Types.D#_con_info,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36lN:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c36ly, .-_c36ly


==================== Asm code ====================
2018-03-16 15:57:32.852832011 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36ly_info:
	.quad	_c36ly
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.857678158 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fFloatingDouble_$clog1pexp_closure
.type GHC.Float.$fFloatingDouble_$clog1pexp_closure, @object
GHC.Float.$fFloatingDouble_$clog1pexp_closure:
	.quad	GHC.Float.$fFloatingDouble_$clog1pexp_info


==================== Asm code ====================
2018-03-16 15:57:32.859146053 UTC

.section .text
.align 8
.globl GHC.Float.$fFloatingDouble_$clog1pexp_entry
.type GHC.Float.$fFloatingDouble_$clog1pexp_entry, @object
GHC.Float.$fFloatingDouble_$clog1pexp_entry:
_c36m6:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c36m7
_c36m8:
	movq $block_c36m3_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c36m3
_c36m4:
	movq (%rbx),%rax
	jmp *(%rax)
_c36m7:
	movl $GHC.Float.$fFloatingDouble_$clog1pexp_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fFloatingDouble_$clog1pexp_entry, .-GHC.Float.$fFloatingDouble_$clog1pexp_entry


==================== Asm code ====================
2018-03-16 15:57:32.859801442 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fFloatingDouble_$clog1pexp_info
.type GHC.Float.$fFloatingDouble_$clog1pexp_info, @object
GHC.Float.$fFloatingDouble_$clog1pexp_info:
	.quad	GHC.Float.$fFloatingDouble_$clog1pexp_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:32.860908648 UTC

.section .text
.align 8
_c36m3:
_c36m3:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36md
_c36mc:
	movsd 7(%rbx),%xmm0
	ucomisd _n36mS(%rip),%xmm0
	jp _c36mA
	jbe _c36mJ
_c36mA:
	ucomisd _n36n1(%rip),%xmm0
	jp _c36mk
	jbe _c36my
_c36mk:
	addq $-16,%r12
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c36mJ:
	subq $8,%rsp
	movl $1,%eax
	call exp
	addq $8,%rsp
	subq $8,%rsp
	movl $1,%eax
	call ghczuwrapperZC3ZCbaseZCGHCziFloatZClog1p
	addq $8,%rsp
	movq $GHC.Types.D#_con_info,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36my:
	subq $8,%rsp
	movsd %xmm0,%xmm1
	movsd _n36mW(%rip),%xmm2
	xorpd %xmm2,%xmm0
	movl $1,%eax
	movsd %xmm1,72(%rsp)
	call exp
	addq $8,%rsp
	movq $GHC.Types.D#_con_info,-8(%r12)
	movsd 64(%rsp),%xmm1
	addsd %xmm0,%xmm1
	movsd %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36md:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c36m3, .-_c36m3
.section .rodata
.align 8
.align 8
_n36mS:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	50
	.byte	64
.section .rodata
.align 8
.align 8
_n36mW:
	.quad	-9223372036854775808
.section .rodata
.align 8
.align 8
_n36n1:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	89
	.byte	64


==================== Asm code ====================
2018-03-16 15:57:32.862010085 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36m3_info:
	.quad	_c36m3
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.865152485 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.logDouble_closure
.type GHC.Float.logDouble_closure, @object
GHC.Float.logDouble_closure:
	.quad	GHC.Float.logDouble_info


==================== Asm code ====================
2018-03-16 15:57:32.866050399 UTC

.section .text
.align 8
.globl GHC.Float.logDouble_entry
.type GHC.Float.logDouble_entry, @object
GHC.Float.logDouble_entry:
_c36nd:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c36nl
_c36nm:
	movq $block_c36na_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c36na
_c36nb:
	movq (%rbx),%rax
	jmp *(%rax)
_c36nl:
	movl $GHC.Float.logDouble_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.logDouble_entry, .-GHC.Float.logDouble_entry


==================== Asm code ====================
2018-03-16 15:57:32.866715572 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.logDouble_info
.type GHC.Float.logDouble_info, @object
GHC.Float.logDouble_info:
	.quad	GHC.Float.logDouble_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:32.867526119 UTC

.section .text
.align 8
_c36na:
_c36na:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36np
_c36no:
	subq $8,%rsp
	movsd 7(%rbx),%xmm0
	movl $1,%eax
	call log
	addq $8,%rsp
	movq $GHC.Types.D#_con_info,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36np:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c36na, .-_c36na


==================== Asm code ====================
2018-03-16 15:57:32.868211149 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36na_info:
	.quad	_c36na
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.87216771 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fFloatingDouble_$clogBase_closure
.type GHC.Float.$fFloatingDouble_$clogBase_closure, @object
GHC.Float.$fFloatingDouble_$clogBase_closure:
	.quad	GHC.Float.$fFloatingDouble_$clogBase_info


==================== Asm code ====================
2018-03-16 15:57:32.873038401 UTC

.section .text
.align 8
.globl GHC.Float.$fFloatingDouble_$clogBase_entry
.type GHC.Float.$fFloatingDouble_$clogBase_entry, @object
GHC.Float.$fFloatingDouble_$clogBase_entry:
_c36nI:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c36o2
_c36o3:
	movq $block_c36nF_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c36nF
_c36nG:
	movq (%rbx),%rax
	jmp *(%rax)
_c36o2:
	movl $GHC.Float.$fFloatingDouble_$clogBase_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fFloatingDouble_$clogBase_entry, .-GHC.Float.$fFloatingDouble_$clogBase_entry


==================== Asm code ====================
2018-03-16 15:57:32.873937208 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fFloatingDouble_$clogBase_info
.type GHC.Float.$fFloatingDouble_$clogBase_info, @object
GHC.Float.$fFloatingDouble_$clogBase_info:
	.quad	GHC.Float.$fFloatingDouble_$clogBase_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:32.874716834 UTC

.section .text
.align 8
_c36nF:
_c36nF:
	movq 8(%rbp),%rax
	subq $8,%rsp
	movsd 7(%rbx),%xmm0
	movq %rax,%rbx
	movl $1,%eax
	call log
	addq $8,%rsp
	movq $block_c36nP_info,(%rbp)
	movsd %xmm0,8(%rbp)
	testb $7,%bl
	jne _c36nP
_c36nQ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c36nF, .-_c36nF


==================== Asm code ====================
2018-03-16 15:57:32.875345921 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36nF_info:
	.quad	_c36nF
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.876188369 UTC

.section .text
.align 8
_c36nP:
_c36nP:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36o7
_c36o6:
	movsd 8(%rbp),%xmm0
	subq $8,%rsp
	movsd %xmm0,%xmm1
	movsd 7(%rbx),%xmm0
	movl $1,%eax
	movsd %xmm1,72(%rsp)
	call log
	addq $8,%rsp
	movq $GHC.Types.D#_con_info,-8(%r12)
	movsd 64(%rsp),%xmm1
	divsd %xmm0,%xmm1
	movsd %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36o7:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c36nP, .-_c36nP


==================== Asm code ====================
2018-03-16 15:57:32.876890817 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36nP_info:
	.quad	_c36nP
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.880174876 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.sqrtDouble_closure
.type GHC.Float.sqrtDouble_closure, @object
GHC.Float.sqrtDouble_closure:
	.quad	GHC.Float.sqrtDouble_info


==================== Asm code ====================
2018-03-16 15:57:32.881005718 UTC

.section .text
.align 8
.globl GHC.Float.sqrtDouble_entry
.type GHC.Float.sqrtDouble_entry, @object
GHC.Float.sqrtDouble_entry:
_c36ox:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c36oF
_c36oG:
	movq $block_c36ou_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c36ou
_c36ov:
	movq (%rbx),%rax
	jmp *(%rax)
_c36oF:
	movl $GHC.Float.sqrtDouble_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.sqrtDouble_entry, .-GHC.Float.sqrtDouble_entry


==================== Asm code ====================
2018-03-16 15:57:32.881735051 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.sqrtDouble_info
.type GHC.Float.sqrtDouble_info, @object
GHC.Float.sqrtDouble_info:
	.quad	GHC.Float.sqrtDouble_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:32.882541059 UTC

.section .text
.align 8
_c36ou:
_c36ou:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36oJ
_c36oI:
	movsd 7(%rbx),%xmm0
	sqrtsd %xmm0,%xmm0
	movq $GHC.Types.D#_con_info,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36oJ:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c36ou, .-_c36ou


==================== Asm code ====================
2018-03-16 15:57:32.883223131 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36ou_info:
	.quad	_c36ou
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.886735753 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.sinDouble_closure
.type GHC.Float.sinDouble_closure, @object
GHC.Float.sinDouble_closure:
	.quad	GHC.Float.sinDouble_info


==================== Asm code ====================
2018-03-16 15:57:32.887616112 UTC

.section .text
.align 8
.globl GHC.Float.sinDouble_entry
.type GHC.Float.sinDouble_entry, @object
GHC.Float.sinDouble_entry:
_c36p3:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c36pb
_c36pc:
	movq $block_c36p0_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c36p0
_c36p1:
	movq (%rbx),%rax
	jmp *(%rax)
_c36pb:
	movl $GHC.Float.sinDouble_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.sinDouble_entry, .-GHC.Float.sinDouble_entry


==================== Asm code ====================
2018-03-16 15:57:32.888818255 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.sinDouble_info
.type GHC.Float.sinDouble_info, @object
GHC.Float.sinDouble_info:
	.quad	GHC.Float.sinDouble_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:32.88969205 UTC

.section .text
.align 8
_c36p0:
_c36p0:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36pf
_c36pe:
	subq $8,%rsp
	movsd 7(%rbx),%xmm0
	movl $1,%eax
	call sin
	addq $8,%rsp
	movq $GHC.Types.D#_con_info,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36pf:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c36p0, .-_c36p0


==================== Asm code ====================
2018-03-16 15:57:32.890338352 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36p0_info:
	.quad	_c36p0
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.89358479 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.cosDouble_closure
.type GHC.Float.cosDouble_closure, @object
GHC.Float.cosDouble_closure:
	.quad	GHC.Float.cosDouble_info


==================== Asm code ====================
2018-03-16 15:57:32.894396642 UTC

.section .text
.align 8
.globl GHC.Float.cosDouble_entry
.type GHC.Float.cosDouble_entry, @object
GHC.Float.cosDouble_entry:
_c36py:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c36pG
_c36pH:
	movq $block_c36pv_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c36pv
_c36pw:
	movq (%rbx),%rax
	jmp *(%rax)
_c36pG:
	movl $GHC.Float.cosDouble_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.cosDouble_entry, .-GHC.Float.cosDouble_entry


==================== Asm code ====================
2018-03-16 15:57:32.895068332 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.cosDouble_info
.type GHC.Float.cosDouble_info, @object
GHC.Float.cosDouble_info:
	.quad	GHC.Float.cosDouble_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:32.895862119 UTC

.section .text
.align 8
_c36pv:
_c36pv:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36pK
_c36pJ:
	subq $8,%rsp
	movsd 7(%rbx),%xmm0
	movl $1,%eax
	call cos
	addq $8,%rsp
	movq $GHC.Types.D#_con_info,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36pK:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c36pv, .-_c36pv


==================== Asm code ====================
2018-03-16 15:57:32.89651006 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36pv_info:
	.quad	_c36pv
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.900112157 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.tanDouble_closure
.type GHC.Float.tanDouble_closure, @object
GHC.Float.tanDouble_closure:
	.quad	GHC.Float.tanDouble_info


==================== Asm code ====================
2018-03-16 15:57:32.900969794 UTC

.section .text
.align 8
.globl GHC.Float.tanDouble_entry
.type GHC.Float.tanDouble_entry, @object
GHC.Float.tanDouble_entry:
_c36q3:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c36qb
_c36qc:
	movq $block_c36q0_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c36q0
_c36q1:
	movq (%rbx),%rax
	jmp *(%rax)
_c36qb:
	movl $GHC.Float.tanDouble_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.tanDouble_entry, .-GHC.Float.tanDouble_entry


==================== Asm code ====================
2018-03-16 15:57:32.901690646 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.tanDouble_info
.type GHC.Float.tanDouble_info, @object
GHC.Float.tanDouble_info:
	.quad	GHC.Float.tanDouble_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:32.902503423 UTC

.section .text
.align 8
_c36q0:
_c36q0:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36qf
_c36qe:
	subq $8,%rsp
	movsd 7(%rbx),%xmm0
	movl $1,%eax
	call tan
	addq $8,%rsp
	movq $GHC.Types.D#_con_info,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36qf:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c36q0, .-_c36q0


==================== Asm code ====================
2018-03-16 15:57:32.903144446 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36q0_info:
	.quad	_c36q0
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.906922431 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.asinDouble_closure
.type GHC.Float.asinDouble_closure, @object
GHC.Float.asinDouble_closure:
	.quad	GHC.Float.asinDouble_info


==================== Asm code ====================
2018-03-16 15:57:32.907779197 UTC

.section .text
.align 8
.globl GHC.Float.asinDouble_entry
.type GHC.Float.asinDouble_entry, @object
GHC.Float.asinDouble_entry:
_c36qy:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c36qG
_c36qH:
	movq $block_c36qv_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c36qv
_c36qw:
	movq (%rbx),%rax
	jmp *(%rax)
_c36qG:
	movl $GHC.Float.asinDouble_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.asinDouble_entry, .-GHC.Float.asinDouble_entry


==================== Asm code ====================
2018-03-16 15:57:32.90846214 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.asinDouble_info
.type GHC.Float.asinDouble_info, @object
GHC.Float.asinDouble_info:
	.quad	GHC.Float.asinDouble_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:32.909522979 UTC

.section .text
.align 8
_c36qv:
_c36qv:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36qK
_c36qJ:
	subq $8,%rsp
	movsd 7(%rbx),%xmm0
	movl $1,%eax
	call asin
	addq $8,%rsp
	movq $GHC.Types.D#_con_info,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36qK:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c36qv, .-_c36qv


==================== Asm code ====================
2018-03-16 15:57:32.910188328 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36qv_info:
	.quad	_c36qv
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.913451986 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.acosDouble_closure
.type GHC.Float.acosDouble_closure, @object
GHC.Float.acosDouble_closure:
	.quad	GHC.Float.acosDouble_info


==================== Asm code ====================
2018-03-16 15:57:32.914320663 UTC

.section .text
.align 8
.globl GHC.Float.acosDouble_entry
.type GHC.Float.acosDouble_entry, @object
GHC.Float.acosDouble_entry:
_c36r3:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c36rb
_c36rc:
	movq $block_c36r0_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c36r0
_c36r1:
	movq (%rbx),%rax
	jmp *(%rax)
_c36rb:
	movl $GHC.Float.acosDouble_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.acosDouble_entry, .-GHC.Float.acosDouble_entry


==================== Asm code ====================
2018-03-16 15:57:32.91499309 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.acosDouble_info
.type GHC.Float.acosDouble_info, @object
GHC.Float.acosDouble_info:
	.quad	GHC.Float.acosDouble_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:32.915874175 UTC

.section .text
.align 8
_c36r0:
_c36r0:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36rf
_c36re:
	subq $8,%rsp
	movsd 7(%rbx),%xmm0
	movl $1,%eax
	call acos
	addq $8,%rsp
	movq $GHC.Types.D#_con_info,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36rf:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c36r0, .-_c36r0


==================== Asm code ====================
2018-03-16 15:57:32.916531388 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36r0_info:
	.quad	_c36r0
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.920413313 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.atanDouble_closure
.type GHC.Float.atanDouble_closure, @object
GHC.Float.atanDouble_closure:
	.quad	GHC.Float.atanDouble_info


==================== Asm code ====================
2018-03-16 15:57:32.921591486 UTC

.section .text
.align 8
.globl GHC.Float.atanDouble_entry
.type GHC.Float.atanDouble_entry, @object
GHC.Float.atanDouble_entry:
_c36ry:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c36rG
_c36rH:
	movq $block_c36rv_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c36rv
_c36rw:
	movq (%rbx),%rax
	jmp *(%rax)
_c36rG:
	movl $GHC.Float.atanDouble_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.atanDouble_entry, .-GHC.Float.atanDouble_entry


==================== Asm code ====================
2018-03-16 15:57:32.922241007 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.atanDouble_info
.type GHC.Float.atanDouble_info, @object
GHC.Float.atanDouble_info:
	.quad	GHC.Float.atanDouble_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:32.923062296 UTC

.section .text
.align 8
_c36rv:
_c36rv:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36rK
_c36rJ:
	subq $8,%rsp
	movsd 7(%rbx),%xmm0
	movl $1,%eax
	call atan
	addq $8,%rsp
	movq $GHC.Types.D#_con_info,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36rK:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c36rv, .-_c36rv


==================== Asm code ====================
2018-03-16 15:57:32.923716458 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36rv_info:
	.quad	_c36rv
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.927122161 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.sinhDouble_closure
.type GHC.Float.sinhDouble_closure, @object
GHC.Float.sinhDouble_closure:
	.quad	GHC.Float.sinhDouble_info


==================== Asm code ====================
2018-03-16 15:57:32.927966317 UTC

.section .text
.align 8
.globl GHC.Float.sinhDouble_entry
.type GHC.Float.sinhDouble_entry, @object
GHC.Float.sinhDouble_entry:
_c36s3:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c36sb
_c36sc:
	movq $block_c36s0_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c36s0
_c36s1:
	movq (%rbx),%rax
	jmp *(%rax)
_c36sb:
	movl $GHC.Float.sinhDouble_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.sinhDouble_entry, .-GHC.Float.sinhDouble_entry


==================== Asm code ====================
2018-03-16 15:57:32.928637288 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.sinhDouble_info
.type GHC.Float.sinhDouble_info, @object
GHC.Float.sinhDouble_info:
	.quad	GHC.Float.sinhDouble_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:32.929466842 UTC

.section .text
.align 8
_c36s0:
_c36s0:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36sf
_c36se:
	subq $8,%rsp
	movsd 7(%rbx),%xmm0
	movl $1,%eax
	call sinh
	addq $8,%rsp
	movq $GHC.Types.D#_con_info,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36sf:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c36s0, .-_c36s0


==================== Asm code ====================
2018-03-16 15:57:32.93015712 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36s0_info:
	.quad	_c36s0
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.933397109 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.coshDouble_closure
.type GHC.Float.coshDouble_closure, @object
GHC.Float.coshDouble_closure:
	.quad	GHC.Float.coshDouble_info


==================== Asm code ====================
2018-03-16 15:57:32.934280826 UTC

.section .text
.align 8
.globl GHC.Float.coshDouble_entry
.type GHC.Float.coshDouble_entry, @object
GHC.Float.coshDouble_entry:
_c36sy:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c36sG
_c36sH:
	movq $block_c36sv_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c36sv
_c36sw:
	movq (%rbx),%rax
	jmp *(%rax)
_c36sG:
	movl $GHC.Float.coshDouble_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.coshDouble_entry, .-GHC.Float.coshDouble_entry


==================== Asm code ====================
2018-03-16 15:57:32.93494168 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.coshDouble_info
.type GHC.Float.coshDouble_info, @object
GHC.Float.coshDouble_info:
	.quad	GHC.Float.coshDouble_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:32.935746986 UTC

.section .text
.align 8
_c36sv:
_c36sv:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36sK
_c36sJ:
	subq $8,%rsp
	movsd 7(%rbx),%xmm0
	movl $1,%eax
	call cosh
	addq $8,%rsp
	movq $GHC.Types.D#_con_info,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36sK:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c36sv, .-_c36sv


==================== Asm code ====================
2018-03-16 15:57:32.936451812 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36sv_info:
	.quad	_c36sv
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.939853056 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.tanhDouble_closure
.type GHC.Float.tanhDouble_closure, @object
GHC.Float.tanhDouble_closure:
	.quad	GHC.Float.tanhDouble_info


==================== Asm code ====================
2018-03-16 15:57:32.940637378 UTC

.section .text
.align 8
.globl GHC.Float.tanhDouble_entry
.type GHC.Float.tanhDouble_entry, @object
GHC.Float.tanhDouble_entry:
_c36t3:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c36tb
_c36tc:
	movq $block_c36t0_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c36t0
_c36t1:
	movq (%rbx),%rax
	jmp *(%rax)
_c36tb:
	movl $GHC.Float.tanhDouble_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.tanhDouble_entry, .-GHC.Float.tanhDouble_entry


==================== Asm code ====================
2018-03-16 15:57:32.941315087 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.tanhDouble_info
.type GHC.Float.tanhDouble_info, @object
GHC.Float.tanhDouble_info:
	.quad	GHC.Float.tanhDouble_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:32.942109994 UTC

.section .text
.align 8
_c36t0:
_c36t0:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36tf
_c36te:
	subq $8,%rsp
	movsd 7(%rbx),%xmm0
	movl $1,%eax
	call tanh
	addq $8,%rsp
	movq $GHC.Types.D#_con_info,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36tf:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c36t0, .-_c36t0


==================== Asm code ====================
2018-03-16 15:57:32.942810449 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36t0_info:
	.quad	_c36t0
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.946634416 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.powerDouble_closure
.type GHC.Float.powerDouble_closure, @object
GHC.Float.powerDouble_closure:
	.quad	GHC.Float.powerDouble_info


==================== Asm code ====================
2018-03-16 15:57:32.947495173 UTC

.section .text
.align 8
.globl GHC.Float.powerDouble_entry
.type GHC.Float.powerDouble_entry, @object
GHC.Float.powerDouble_entry:
_c36ty:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c36tM
_c36tN:
	movq $block_c36tv_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c36tv
_c36tw:
	movq (%rbx),%rax
	jmp *(%rax)
_c36tM:
	movl $GHC.Float.powerDouble_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.powerDouble_entry, .-GHC.Float.powerDouble_entry


==================== Asm code ====================
2018-03-16 15:57:32.948204437 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.powerDouble_info
.type GHC.Float.powerDouble_info, @object
GHC.Float.powerDouble_info:
	.quad	GHC.Float.powerDouble_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:32.948956247 UTC

.section .text
.align 8
_c36tv:
_c36tv:
	movq $block_c36tB_info,(%rbp)
	movsd 7(%rbx),%xmm0
	movq 8(%rbp),%rbx
	movsd %xmm0,8(%rbp)
	testb $7,%bl
	jne _c36tB
_c36tC:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c36tv, .-_c36tv


==================== Asm code ====================
2018-03-16 15:57:32.949698067 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36tv_info:
	.quad	_c36tv
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.951060632 UTC

.section .text
.align 8
_c36tB:
_c36tB:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36tR
_c36tQ:
	subq $8,%rsp
	movsd 8(%rbp),%xmm0
	movsd 7(%rbx),%xmm1
	movl $2,%eax
	call pow
	addq $8,%rsp
	movq $GHC.Types.D#_con_info,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36tR:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c36tB, .-_c36tB


==================== Asm code ====================
2018-03-16 15:57:32.951727258 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36tB_info:
	.quad	_c36tB
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.955148471 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.word2Double_closure
.type GHC.Float.word2Double_closure, @object
GHC.Float.word2Double_closure:
	.quad	GHC.Float.word2Double_info


==================== Asm code ====================
2018-03-16 15:57:32.956043138 UTC

.section .text
.align 8
.globl GHC.Float.word2Double_entry
.type GHC.Float.word2Double_entry, @object
GHC.Float.word2Double_entry:
_c36uf:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c36un
_c36uo:
	movq $block_c36uc_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c36uc
_c36ud:
	movq (%rbx),%rax
	jmp *(%rax)
_c36un:
	movl $GHC.Float.word2Double_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.word2Double_entry, .-GHC.Float.word2Double_entry


==================== Asm code ====================
2018-03-16 15:57:32.956729798 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.word2Double_info
.type GHC.Float.word2Double_info, @object
GHC.Float.word2Double_info:
	.quad	GHC.Float.word2Double_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:32.957781238 UTC

.section .text
.align 8
_c36uc:
_c36uc:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36ur
_c36uq:
	subq $8,%rsp
	movq 7(%rbx),%rdi
	xorl %eax,%eax
	call hs_word2float64
	addq $8,%rsp
	movq $GHC.Types.D#_con_info,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36ur:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c36uc, .-_c36uc


==================== Asm code ====================
2018-03-16 15:57:32.958446741 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36uc_info:
	.quad	_c36uc
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.961656166 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.word2Float_closure
.type GHC.Float.word2Float_closure, @object
GHC.Float.word2Float_closure:
	.quad	GHC.Float.word2Float_info


==================== Asm code ====================
2018-03-16 15:57:32.962494674 UTC

.section .text
.align 8
.globl GHC.Float.word2Float_entry
.type GHC.Float.word2Float_entry, @object
GHC.Float.word2Float_entry:
_c36uK:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c36uS
_c36uT:
	movq $block_c36uH_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c36uH
_c36uI:
	movq (%rbx),%rax
	jmp *(%rax)
_c36uS:
	movl $GHC.Float.word2Float_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.word2Float_entry, .-GHC.Float.word2Float_entry


==================== Asm code ====================
2018-03-16 15:57:32.963167693 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.word2Float_info
.type GHC.Float.word2Float_info, @object
GHC.Float.word2Float_info:
	.quad	GHC.Float.word2Float_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:32.963980224 UTC

.section .text
.align 8
_c36uH:
_c36uH:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36uW
_c36uV:
	subq $8,%rsp
	movq 7(%rbx),%rdi
	xorl %eax,%eax
	call hs_word2float32
	addq $8,%rsp
	movq $GHC.Types.F#_con_info,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36uW:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c36uH, .-_c36uH


==================== Asm code ====================
2018-03-16 15:57:32.964591509 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36uH_info:
	.quad	_c36uH
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:32.966646961 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Float.$trModule4_bytes
.type GHC.Float.$trModule4_bytes, @object
GHC.Float.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 15:57:32.96832887 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$trModule3_closure
.type GHC.Float.$trModule3_closure, @object
GHC.Float.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Float.$trModule4_bytes


==================== Asm code ====================
2018-03-16 15:57:32.970086219 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Float.$trModule2_bytes
.type GHC.Float.$trModule2_bytes, @object
GHC.Float.$trModule2_bytes:
	.asciz "GHC.Float"


==================== Asm code ====================
2018-03-16 15:57:32.971781238 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$trModule1_closure
.type GHC.Float.$trModule1_closure, @object
GHC.Float.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Float.$trModule2_bytes


==================== Asm code ====================
2018-03-16 15:57:32.973562742 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$trModule_closure
.type GHC.Float.$trModule_closure, @object
GHC.Float.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	GHC.Float.$trModule3_closure+1
	.quad	GHC.Float.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:32.975388318 UTC

.section .data
.align 8
.align 1
$krep_r2UpC_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Types.$tcBool_closure
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:32.977230591 UTC

.section .data
.align 8
.align 1
$krep1_r2UpD_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Types.$tcInt_closure
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:32.979667899 UTC

.section .data
.align 8
.align 1
$krep2_r2UpE_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Integer.Type.$tcInteger_closure
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:32.981717189 UTC

.section .data
.align 8
.align 1
$krep3_r2UpF_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Types.$tcConstraint_closure
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:32.983423245 UTC

.section .data
.align 8
.align 1
$krep4_r2UpG_closure:
	.quad	:_con_info
	.quad	$krep1_r2UpD_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:32.985099637 UTC

.section .data
.align 8
.align 1
$krep5_r2UpH_closure:
	.quad	:_con_info
	.quad	$krep2_r2UpE_closure+1
	.quad	$krep4_r2UpG_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:32.986886559 UTC

.section .data
.align 8
.align 1
$krep6_r2UpI_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Tuple.$tc(,)_closure
	.quad	$krep5_r2UpH_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:32.988544555 UTC

.section .data
.align 8
.align 1
$krep7_r2UpJ_closure:
	.quad	:_con_info
	.quad	$krep1_r2UpD_closure+1
	.quad	$krep4_r2UpG_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:32.990375468 UTC

.section .data
.align 8
.align 1
$krep8_r2UpK_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Tuple.$tc(,)_closure
	.quad	$krep7_r2UpJ_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:32.99209285 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$tcFloating1_closure
.type GHC.Float.$tcFloating1_closure, @object
GHC.Float.$tcFloating1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	GHC.Types.krep$*_closure
	.quad	$krep3_r2UpF_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:32.994060096 UTC

.section .data
.align 8
.align 1
$krep9_r2UpL_closure:
	.quad	GHC.Types.KindRepVar_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:32.995736865 UTC

.section .data
.align 8
.align 1
$krep10_r2UpM_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep9_r2UpL_closure+2
	.quad	$krep9_r2UpL_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:32.997437959 UTC

.section .data
.align 8
.align 1
$krep11_r2UpN_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep1_r2UpD_closure+1
	.quad	$krep10_r2UpM_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:32.999111161 UTC

.section .data
.align 8
.align 1
$krep12_r2UpO_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep9_r2UpL_closure+2
	.quad	$krep10_r2UpM_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.00075838 UTC

.section .data
.align 8
.align 1
$krep13_r2UpP_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep9_r2UpL_closure+2
	.quad	$krep8_r2UpK_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.002446177 UTC

.section .data
.align 8
.align 1
$krep14_r2UpQ_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep9_r2UpL_closure+2
	.quad	$krep6_r2UpI_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.004718617 UTC

.section .data
.align 8
.align 1
$krep15_r2UpR_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep9_r2UpL_closure+2
	.quad	$krep2_r2UpE_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.006885152 UTC

.section .data
.align 8
.align 1
$krep16_r2UpS_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep9_r2UpL_closure+2
	.quad	$krep1_r2UpD_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.008562042 UTC

.section .data
.align 8
.align 1
$krep17_r2UpT_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep9_r2UpL_closure+2
	.quad	$krep_r2UpC_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.010343417 UTC

.section .data
.align 8
.align 1
$krep18_r2UpU_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep1_r2UpD_closure+1
	.quad	$krep9_r2UpL_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.012063922 UTC

.section .data
.align 8
.align 1
$krep19_r2UpV_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep2_r2UpE_closure+1
	.quad	$krep18_r2UpU_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.013781688 UTC

.section .data
.align 8
.align 1
$krep20_r2UpW_closure:
	.quad	:_con_info
	.quad	$krep9_r2UpL_closure+2
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.015561877 UTC

.section .data
.align 8
.align 1
$krep21_r2UpX_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Real.$tcRealFrac_closure
	.quad	$krep20_r2UpW_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.017682419 UTC

.section .data
.align 8
.align 1
$krep22_r2UpY_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Real.$tcFractional_closure
	.quad	$krep20_r2UpW_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.019311818 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Float.$tcFloating3_bytes
.type GHC.Float.$tcFloating3_bytes, @object
GHC.Float.$tcFloating3_bytes:
	.asciz "Floating"


==================== Asm code ====================
2018-03-16 15:57:33.020957294 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$tcFloating2_closure
.type GHC.Float.$tcFloating2_closure, @object
GHC.Float.$tcFloating2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Float.$tcFloating3_bytes


==================== Asm code ====================
2018-03-16 15:57:33.022837086 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$tcFloating_closure
.type GHC.Float.$tcFloating_closure, @object
GHC.Float.$tcFloating_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Float.$trModule_closure+1
	.quad	GHC.Float.$tcFloating2_closure+1
	.quad	GHC.Float.$tcFloating1_closure+4
	.quad	7129224378091624681
	.quad	-3282061009426630484
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.024590352 UTC

.section .data
.align 8
.align 1
$krep23_r2UpZ_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Float.$tcFloating_closure+1
	.quad	$krep20_r2UpW_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.026356932 UTC

.section .data
.align 8
.align 1
$krep24_r2Uq0_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep10_r2UpM_closure+4
	.quad	$krep23_r2UpZ_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.028123122 UTC

.section .data
.align 8
.align 1
$krep25_r2Uq1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep10_r2UpM_closure+4
	.quad	$krep24_r2Uq0_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.03082372 UTC

.section .data
.align 8
.align 1
$krep26_r2Uq2_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep10_r2UpM_closure+4
	.quad	$krep25_r2Uq1_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.032654559 UTC

.section .data
.align 8
.align 1
$krep27_r2Uq3_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep10_r2UpM_closure+4
	.quad	$krep26_r2Uq2_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.034359701 UTC

.section .data
.align 8
.align 1
$krep28_r2Uq4_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep10_r2UpM_closure+4
	.quad	$krep27_r2Uq3_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.036059453 UTC

.section .data
.align 8
.align 1
$krep29_r2Uq5_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep10_r2UpM_closure+4
	.quad	$krep28_r2Uq4_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.037845243 UTC

.section .data
.align 8
.align 1
$krep30_r2Uq6_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep10_r2UpM_closure+4
	.quad	$krep29_r2Uq5_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.039605376 UTC

.section .data
.align 8
.align 1
$krep31_r2Uq7_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep10_r2UpM_closure+4
	.quad	$krep30_r2Uq6_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.041229185 UTC

.section .data
.align 8
.align 1
$krep32_r2Uq8_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep10_r2UpM_closure+4
	.quad	$krep31_r2Uq7_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.04361779 UTC

.section .data
.align 8
.align 1
$krep33_r2Uq9_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep10_r2UpM_closure+4
	.quad	$krep32_r2Uq8_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.045383491 UTC

.section .data
.align 8
.align 1
$krep34_r2Uqa_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep10_r2UpM_closure+4
	.quad	$krep33_r2Uq9_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.047060507 UTC

.section .data
.align 8
.align 1
$krep35_r2Uqb_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep10_r2UpM_closure+4
	.quad	$krep34_r2Uqa_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.048758006 UTC

.section .data
.align 8
.align 1
$krep36_r2Uqc_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep10_r2UpM_closure+4
	.quad	$krep35_r2Uqb_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.050511213 UTC

.section .data
.align 8
.align 1
$krep37_r2Uqd_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep10_r2UpM_closure+4
	.quad	$krep36_r2Uqc_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.052228286 UTC

.section .data
.align 8
.align 1
$krep38_r2Uqe_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep10_r2UpM_closure+4
	.quad	$krep37_r2Uqd_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.054096452 UTC

.section .data
.align 8
.align 1
$krep39_r2Uqf_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep10_r2UpM_closure+4
	.quad	$krep38_r2Uqe_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.055863311 UTC

.section .data
.align 8
.align 1
$krep40_r2Uqg_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep12_r2UpO_closure+4
	.quad	$krep39_r2Uqf_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.058489366 UTC

.section .data
.align 8
.align 1
$krep41_r2Uqh_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep12_r2UpO_closure+4
	.quad	$krep40_r2Uqg_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.060165095 UTC

.section .data
.align 8
.align 1
$krep42_r2Uqi_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep10_r2UpM_closure+4
	.quad	$krep41_r2Uqh_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.061891003 UTC

.section .data
.align 8
.align 1
$krep43_r2Uqj_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep10_r2UpM_closure+4
	.quad	$krep42_r2Uqi_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.063597634 UTC

.section .data
.align 8
.align 1
$krep44_r2Uqk_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep10_r2UpM_closure+4
	.quad	$krep43_r2Uqj_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.065422229 UTC

.section .data
.align 8
.align 1
$krep45_r2Uql_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep9_r2UpL_closure+2
	.quad	$krep44_r2Uqk_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.067178451 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$tc'C:Floating1_closure
.type GHC.Float.$tc'C:Floating1_closure, @object
GHC.Float.$tc'C:Floating1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep22_r2UpY_closure+1
	.quad	$krep45_r2Uql_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.068877745 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Float.$tc'C:Floating3_bytes
.type GHC.Float.$tc'C:Floating3_bytes, @object
GHC.Float.$tc'C:Floating3_bytes:
	.asciz "'C:Floating"


==================== Asm code ====================
2018-03-16 15:57:33.070673307 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$tc'C:Floating2_closure
.type GHC.Float.$tc'C:Floating2_closure, @object
GHC.Float.$tc'C:Floating2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Float.$tc'C:Floating3_bytes


==================== Asm code ====================
2018-03-16 15:57:33.072560519 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$tc'C:Floating_closure
.type GHC.Float.$tc'C:Floating_closure, @object
GHC.Float.$tc'C:Floating_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Float.$trModule_closure+1
	.quad	GHC.Float.$tc'C:Floating2_closure+1
	.quad	GHC.Float.$tc'C:Floating1_closure+4
	.quad	-5033759850909561461
	.quad	5552297363459117532
	.quad	1
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.074578985 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Float.$tcRealFloat2_bytes
.type GHC.Float.$tcRealFloat2_bytes, @object
GHC.Float.$tcRealFloat2_bytes:
	.asciz "RealFloat"


==================== Asm code ====================
2018-03-16 15:57:33.076298296 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$tcRealFloat1_closure
.type GHC.Float.$tcRealFloat1_closure, @object
GHC.Float.$tcRealFloat1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Float.$tcRealFloat2_bytes


==================== Asm code ====================
2018-03-16 15:57:33.078223671 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$tcRealFloat_closure
.type GHC.Float.$tcRealFloat_closure, @object
GHC.Float.$tcRealFloat_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Float.$trModule_closure+1
	.quad	GHC.Float.$tcRealFloat1_closure+1
	.quad	GHC.Float.$tcFloating1_closure+4
	.quad	3941731172860576649
	.quad	6292609957384615911
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.080008801 UTC

.section .data
.align 8
.align 1
$krep46_r2Uqm_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Float.$tcRealFloat_closure+1
	.quad	$krep20_r2UpW_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.082554547 UTC

.section .data
.align 8
.align 1
$krep47_r2Uqn_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep12_r2UpO_closure+4
	.quad	$krep46_r2Uqm_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.084917708 UTC

.section .data
.align 8
.align 1
$krep48_r2Uqo_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep17_r2UpT_closure+4
	.quad	$krep47_r2Uqn_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.08667301 UTC

.section .data
.align 8
.align 1
$krep49_r2Uqp_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep17_r2UpT_closure+4
	.quad	$krep48_r2Uqo_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.088444505 UTC

.section .data
.align 8
.align 1
$krep50_r2Uqq_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep17_r2UpT_closure+4
	.quad	$krep49_r2Uqp_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.090227665 UTC

.section .data
.align 8
.align 1
$krep51_r2Uqr_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep17_r2UpT_closure+4
	.quad	$krep50_r2Uqq_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.091943054 UTC

.section .data
.align 8
.align 1
$krep52_r2Uqs_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep17_r2UpT_closure+4
	.quad	$krep51_r2Uqr_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.09377323 UTC

.section .data
.align 8
.align 1
$krep53_r2Uqt_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep11_r2UpN_closure+4
	.quad	$krep52_r2Uqs_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.09548282 UTC

.section .data
.align 8
.align 1
$krep54_r2Uqu_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep10_r2UpM_closure+4
	.quad	$krep53_r2Uqt_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.097654932 UTC

.section .data
.align 8
.align 1
$krep55_r2Uqv_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep16_r2UpS_closure+4
	.quad	$krep54_r2Uqu_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.099320862 UTC

.section .data
.align 8
.align 1
$krep56_r2Uqw_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep19_r2UpV_closure+4
	.quad	$krep55_r2Uqv_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.101059394 UTC

.section .data
.align 8
.align 1
$krep57_r2Uqx_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep14_r2UpQ_closure+4
	.quad	$krep56_r2Uqw_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.102845614 UTC

.section .data
.align 8
.align 1
$krep58_r2Uqy_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep13_r2UpP_closure+4
	.quad	$krep57_r2Uqx_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.104571301 UTC

.section .data
.align 8
.align 1
$krep59_r2Uqz_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep16_r2UpS_closure+4
	.quad	$krep58_r2Uqy_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.10639551 UTC

.section .data
.align 8
.align 1
$krep60_r2UqA_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep15_r2UpR_closure+4
	.quad	$krep59_r2Uqz_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.108149569 UTC

.section .data
.align 8
.align 1
$krep61_r2UqB_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep23_r2UpZ_closure+1
	.quad	$krep60_r2UqA_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.110700257 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$tc'C:RealFloat1_closure
.type GHC.Float.$tc'C:RealFloat1_closure, @object
GHC.Float.$tc'C:RealFloat1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep21_r2UpX_closure+1
	.quad	$krep61_r2UqB_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.112352233 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Float.$tc'C:RealFloat3_bytes
.type GHC.Float.$tc'C:RealFloat3_bytes, @object
GHC.Float.$tc'C:RealFloat3_bytes:
	.asciz "'C:RealFloat"


==================== Asm code ====================
2018-03-16 15:57:33.114155807 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$tc'C:RealFloat2_closure
.type GHC.Float.$tc'C:RealFloat2_closure, @object
GHC.Float.$tc'C:RealFloat2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Float.$tc'C:RealFloat3_bytes


==================== Asm code ====================
2018-03-16 15:57:33.115971563 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$tc'C:RealFloat_closure
.type GHC.Float.$tc'C:RealFloat_closure, @object
GHC.Float.$tc'C:RealFloat_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Float.$trModule_closure+1
	.quad	GHC.Float.$tc'C:RealFloat2_closure+1
	.quad	GHC.Float.$tc'C:RealFloat1_closure+4
	.quad	9049810847819341732
	.quad	-8295682842096717869
	.quad	1
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.117821273 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Float.$tcFFFormat2_bytes
.type GHC.Float.$tcFFFormat2_bytes, @object
GHC.Float.$tcFFFormat2_bytes:
	.asciz "FFFormat"


==================== Asm code ====================
2018-03-16 15:57:33.119569626 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$tcFFFormat1_closure
.type GHC.Float.$tcFFFormat1_closure, @object
GHC.Float.$tcFFFormat1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Float.$tcFFFormat2_bytes


==================== Asm code ====================
2018-03-16 15:57:33.121496164 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$tcFFFormat_closure
.type GHC.Float.$tcFFFormat_closure, @object
GHC.Float.$tcFFFormat_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Float.$trModule_closure+1
	.quad	GHC.Float.$tcFFFormat1_closure+1
	.quad	GHC.Types.krep$*_closure
	.quad	1010825520712496676
	.quad	1474964314088479952
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.123260326 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$tc'FFExponent1_closure
.type GHC.Float.$tc'FFExponent1_closure, @object
GHC.Float.$tc'FFExponent1_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Float.$tcFFFormat_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.12495215 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Float.$tc'FFExponent3_bytes
.type GHC.Float.$tc'FFExponent3_bytes, @object
GHC.Float.$tc'FFExponent3_bytes:
	.asciz "'FFExponent"


==================== Asm code ====================
2018-03-16 15:57:33.127226788 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$tc'FFExponent2_closure
.type GHC.Float.$tc'FFExponent2_closure, @object
GHC.Float.$tc'FFExponent2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Float.$tc'FFExponent3_bytes


==================== Asm code ====================
2018-03-16 15:57:33.129232902 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$tc'FFExponent_closure
.type GHC.Float.$tc'FFExponent_closure, @object
GHC.Float.$tc'FFExponent_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Float.$trModule_closure+1
	.quad	GHC.Float.$tc'FFExponent2_closure+1
	.quad	GHC.Float.$tc'FFExponent1_closure+1
	.quad	5889061327753760791
	.quad	-4865309098699357616
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.131018695 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Float.$tc'FFFixed2_bytes
.type GHC.Float.$tc'FFFixed2_bytes, @object
GHC.Float.$tc'FFFixed2_bytes:
	.asciz "'FFFixed"


==================== Asm code ====================
2018-03-16 15:57:33.132841571 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$tc'FFFixed1_closure
.type GHC.Float.$tc'FFFixed1_closure, @object
GHC.Float.$tc'FFFixed1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Float.$tc'FFFixed2_bytes


==================== Asm code ====================
2018-03-16 15:57:33.134891152 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$tc'FFFixed_closure
.type GHC.Float.$tc'FFFixed_closure, @object
GHC.Float.$tc'FFFixed_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Float.$trModule_closure+1
	.quad	GHC.Float.$tc'FFFixed1_closure+1
	.quad	GHC.Float.$tc'FFExponent1_closure+1
	.quad	-1473113365748875527
	.quad	5471565003344425987
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.137372159 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Float.$tc'FFGeneric2_bytes
.type GHC.Float.$tc'FFGeneric2_bytes, @object
GHC.Float.$tc'FFGeneric2_bytes:
	.asciz "'FFGeneric"


==================== Asm code ====================
2018-03-16 15:57:33.139192328 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$tc'FFGeneric1_closure
.type GHC.Float.$tc'FFGeneric1_closure, @object
GHC.Float.$tc'FFGeneric1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Float.$tc'FFGeneric2_bytes


==================== Asm code ====================
2018-03-16 15:57:33.141034741 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$tc'FFGeneric_closure
.type GHC.Float.$tc'FFGeneric_closure, @object
GHC.Float.$tc'FFGeneric_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Float.$trModule_closure+1
	.quad	GHC.Float.$tc'FFGeneric1_closure+1
	.quad	GHC.Float.$tc'FFExponent1_closure+1
	.quad	-2660460686654006056
	.quad	-8183479453991749983
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.144588765 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.isFloatNaN_closure
.type GHC.Float.isFloatNaN_closure, @object
GHC.Float.isFloatNaN_closure:
	.quad	GHC.Float.isFloatNaN_info


==================== Asm code ====================
2018-03-16 15:57:33.145531472 UTC

.section .text
.align 8
.globl GHC.Float.isFloatNaN_entry
.type GHC.Float.isFloatNaN_entry, @object
GHC.Float.isFloatNaN_entry:
_c36wM:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c36wS
_c36wT:
	movq $block_c36wJ_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c36wJ
_c36wK:
	movq (%rbx),%rax
	jmp *(%rax)
_c36wS:
	movl $GHC.Float.isFloatNaN_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.isFloatNaN_entry, .-GHC.Float.isFloatNaN_entry


==================== Asm code ====================
2018-03-16 15:57:33.146207054 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.isFloatNaN_info
.type GHC.Float.isFloatNaN_info, @object
GHC.Float.isFloatNaN_info:
	.quad	GHC.Float.isFloatNaN_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:33.147014538 UTC

.section .text
.align 8
_c36wJ:
_c36wJ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36wW
_c36wV:
	subq $8,%rsp
	movss 7(%rbx),%xmm0
	movl $1,%eax
	call isFloatNaN
	addq $8,%rsp
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36wW:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c36wJ, .-_c36wJ


==================== Asm code ====================
2018-03-16 15:57:33.147661338 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36wJ_info:
	.quad	_c36wJ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.151053093 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.isFloatInfinite_closure
.type GHC.Float.isFloatInfinite_closure, @object
GHC.Float.isFloatInfinite_closure:
	.quad	GHC.Float.isFloatInfinite_info


==================== Asm code ====================
2018-03-16 15:57:33.151919343 UTC

.section .text
.align 8
.globl GHC.Float.isFloatInfinite_entry
.type GHC.Float.isFloatInfinite_entry, @object
GHC.Float.isFloatInfinite_entry:
_c36xf:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c36xl
_c36xm:
	movq $block_c36xc_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c36xc
_c36xd:
	movq (%rbx),%rax
	jmp *(%rax)
_c36xl:
	movl $GHC.Float.isFloatInfinite_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.isFloatInfinite_entry, .-GHC.Float.isFloatInfinite_entry


==================== Asm code ====================
2018-03-16 15:57:33.152575582 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.isFloatInfinite_info
.type GHC.Float.isFloatInfinite_info, @object
GHC.Float.isFloatInfinite_info:
	.quad	GHC.Float.isFloatInfinite_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:33.15340596 UTC

.section .text
.align 8
_c36xc:
_c36xc:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36xp
_c36xo:
	subq $8,%rsp
	movss 7(%rbx),%xmm0
	movl $1,%eax
	call isFloatInfinite
	addq $8,%rsp
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36xp:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c36xc, .-_c36xc


==================== Asm code ====================
2018-03-16 15:57:33.154031269 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36xc_info:
	.quad	_c36xc
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.157389933 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.isFloatDenormalized_closure
.type GHC.Float.isFloatDenormalized_closure, @object
GHC.Float.isFloatDenormalized_closure:
	.quad	GHC.Float.isFloatDenormalized_info


==================== Asm code ====================
2018-03-16 15:57:33.15823242 UTC

.section .text
.align 8
.globl GHC.Float.isFloatDenormalized_entry
.type GHC.Float.isFloatDenormalized_entry, @object
GHC.Float.isFloatDenormalized_entry:
_c36xI:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c36xO
_c36xP:
	movq $block_c36xF_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c36xF
_c36xG:
	movq (%rbx),%rax
	jmp *(%rax)
_c36xO:
	movl $GHC.Float.isFloatDenormalized_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.isFloatDenormalized_entry, .-GHC.Float.isFloatDenormalized_entry


==================== Asm code ====================
2018-03-16 15:57:33.158881253 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.isFloatDenormalized_info
.type GHC.Float.isFloatDenormalized_info, @object
GHC.Float.isFloatDenormalized_info:
	.quad	GHC.Float.isFloatDenormalized_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:33.1596788 UTC

.section .text
.align 8
_c36xF:
_c36xF:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36xS
_c36xR:
	subq $8,%rsp
	movss 7(%rbx),%xmm0
	movl $1,%eax
	call isFloatDenormalized
	addq $8,%rsp
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36xS:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c36xF, .-_c36xF


==================== Asm code ====================
2018-03-16 15:57:33.160301596 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36xF_info:
	.quad	_c36xF
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.163745762 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.isFloatNegativeZero_closure
.type GHC.Float.isFloatNegativeZero_closure, @object
GHC.Float.isFloatNegativeZero_closure:
	.quad	GHC.Float.isFloatNegativeZero_info


==================== Asm code ====================
2018-03-16 15:57:33.16470135 UTC

.section .text
.align 8
.globl GHC.Float.isFloatNegativeZero_entry
.type GHC.Float.isFloatNegativeZero_entry, @object
GHC.Float.isFloatNegativeZero_entry:
_c36yb:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c36yh
_c36yi:
	movq $block_c36y8_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c36y8
_c36y9:
	movq (%rbx),%rax
	jmp *(%rax)
_c36yh:
	movl $GHC.Float.isFloatNegativeZero_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.isFloatNegativeZero_entry, .-GHC.Float.isFloatNegativeZero_entry


==================== Asm code ====================
2018-03-16 15:57:33.165739063 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.isFloatNegativeZero_info
.type GHC.Float.isFloatNegativeZero_info, @object
GHC.Float.isFloatNegativeZero_info:
	.quad	GHC.Float.isFloatNegativeZero_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:33.167243298 UTC

.section .text
.align 8
_c36y8:
_c36y8:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36yl
_c36yk:
	subq $8,%rsp
	movss 7(%rbx),%xmm0
	movl $1,%eax
	call isFloatNegativeZero
	addq $8,%rsp
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36yl:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c36y8, .-_c36y8


==================== Asm code ====================
2018-03-16 15:57:33.167902404 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36y8_info:
	.quad	_c36y8
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.17135622 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.isFloatFinite_closure
.type GHC.Float.isFloatFinite_closure, @object
GHC.Float.isFloatFinite_closure:
	.quad	GHC.Float.isFloatFinite_info


==================== Asm code ====================
2018-03-16 15:57:33.172190652 UTC

.section .text
.align 8
.globl GHC.Float.isFloatFinite_entry
.type GHC.Float.isFloatFinite_entry, @object
GHC.Float.isFloatFinite_entry:
_c36yE:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c36yK
_c36yL:
	movq $block_c36yB_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c36yB
_c36yC:
	movq (%rbx),%rax
	jmp *(%rax)
_c36yK:
	movl $GHC.Float.isFloatFinite_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.isFloatFinite_entry, .-GHC.Float.isFloatFinite_entry


==================== Asm code ====================
2018-03-16 15:57:33.172826895 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.isFloatFinite_info
.type GHC.Float.isFloatFinite_info, @object
GHC.Float.isFloatFinite_info:
	.quad	GHC.Float.isFloatFinite_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:33.173673676 UTC

.section .text
.align 8
_c36yB:
_c36yB:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36yO
_c36yN:
	subq $8,%rsp
	movss 7(%rbx),%xmm0
	movl $1,%eax
	call isFloatFinite
	addq $8,%rsp
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36yO:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c36yB, .-_c36yB


==================== Asm code ====================
2018-03-16 15:57:33.174365167 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36yB_info:
	.quad	_c36yB
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.179689737 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$w$cscaleFloat1_closure
.type GHC.Float.$w$cscaleFloat1_closure, @object
GHC.Float.$w$cscaleFloat1_closure:
	.quad	GHC.Float.$w$cscaleFloat1_info


==================== Asm code ====================
2018-03-16 15:57:33.180446157 UTC

.section .text
.align 8
.globl GHC.Float.$w$cscaleFloat1_slow
.type GHC.Float.$w$cscaleFloat1_slow, @object
GHC.Float.$w$cscaleFloat1_slow:
_c36z1:
	movss 8(%rbp),%xmm1
	movq (%rbp),%r14
	addq $16,%rbp
	jmp GHC.Float.$w$cscaleFloat1_entry
	.size GHC.Float.$w$cscaleFloat1_slow, .-GHC.Float.$w$cscaleFloat1_slow


==================== Asm code ====================
2018-03-16 15:57:33.181535617 UTC

.section .text
.align 8
.globl GHC.Float.$w$cscaleFloat1_entry
.type GHC.Float.$w$cscaleFloat1_entry, @object
GHC.Float.$w$cscaleFloat1_entry:
_c36z9:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c36za
_c36zb:
	testq %r14,%r14
	je _c36z8
_c36z7:
	xorps %xmm0,%xmm0
	ucomiss %xmm0,%xmm1
	jp _c36A1
	je _c36z8
_c36A1:
	subq $8,%rsp
	movss %xmm1,%xmm0
	movl $1,%eax
	movsd %xmm1,72(%rsp)
	call isFloatFinite
	addq $8,%rsp
	testq %rax,%rax
	je _n36Ac
_c36zm:
	movq $block_c36zk_info,-16(%rbp)
	movsd 64(%rsp),%xmm0
	movss %xmm0,%xmm1
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	jmp stg_decodeFloat_Int#
_c36za:
	movl $GHC.Float.$w$cscaleFloat1_closure,%ebx
	movq %r14,-16(%rbp)
	movss %xmm1,-8(%rbp)
	addq $-16,%rbp
	jmp *-8(%r13)
_n36Ac:
	movsd 64(%rsp),%xmm1
_c36z8:
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Float.$w$cscaleFloat1_entry, .-GHC.Float.$w$cscaleFloat1_entry


==================== Asm code ====================
2018-03-16 15:57:33.182299019 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$w$cscaleFloat1_info
.type GHC.Float.$w$cscaleFloat1_info, @object
GHC.Float.$w$cscaleFloat1_info:
	.quad	GHC.Float.$w$cscaleFloat1_entry
	.quad	0
	.quad	14
	.quad	8589934592
	.quad	0
	.quad	194
	.quad	GHC.Float.$w$cscaleFloat1_slow


==================== Asm code ====================
2018-03-16 15:57:33.183184555 UTC

.section .text
.align 8
_c36zk:
_c36zk:
	movq 8(%rbp),%rax
	cmpq $349,%rax
	jl _s2UZq
_c36zY:
	movl $349,%eax
_s2UZq:
	cmpq $-349,%rax
	jl _c36zF
_c36zP:
	movq $block_c36zO_info,(%rbp)
	movq %r14,%rcx
	movq %rbx,%r14
	addq %rax,%rcx
	movq %rcx,8(%rbp)
	jmp GHC.Integer.Type.smallInteger_entry
_c36zF:
	movq $block_c36zD_info,(%rbp)
	movq %r14,%rax
	movq %rbx,%r14
	addq $-349,%rax
	movq %rax,8(%rbp)
	jmp GHC.Integer.Type.smallInteger_entry
	.size _c36zk, .-_c36zk


==================== Asm code ====================
2018-03-16 15:57:33.183845331 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36zk_info:
	.quad	_c36zk
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.184542879 UTC

.section .text
.align 8
_c36zD:
_c36zD:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.encodeFloatInteger_entry
	.size _c36zD, .-_c36zD


==================== Asm code ====================
2018-03-16 15:57:33.185166394 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36zD_info:
	.quad	_c36zD
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.187306751 UTC

.section .text
.align 8
_c36zO:
_c36zO:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.encodeFloatInteger_entry
	.size _c36zO, .-_c36zO


==================== Asm code ====================
2018-03-16 15:57:33.187900548 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36zO_info:
	.quad	_c36zO
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.192154093 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat_$cscaleFloat_closure
.type GHC.Float.$fRealFloatFloat_$cscaleFloat_closure, @object
GHC.Float.$fRealFloatFloat_$cscaleFloat_closure:
	.quad	GHC.Float.$fRealFloatFloat_$cscaleFloat_info


==================== Asm code ====================
2018-03-16 15:57:33.193065159 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFloatFloat_$cscaleFloat_entry
.type GHC.Float.$fRealFloatFloat_$cscaleFloat_entry, @object
GHC.Float.$fRealFloatFloat_$cscaleFloat_entry:
_c36Ax:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c36AK
_c36AL:
	movq $block_c36Au_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c36Au
_c36Av:
	movq (%rbx),%rax
	jmp *(%rax)
_c36AK:
	movl $GHC.Float.$fRealFloatFloat_$cscaleFloat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFloatFloat_$cscaleFloat_entry, .-GHC.Float.$fRealFloatFloat_$cscaleFloat_entry


==================== Asm code ====================
2018-03-16 15:57:33.193772874 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat_$cscaleFloat_info
.type GHC.Float.$fRealFloatFloat_$cscaleFloat_info, @object
GHC.Float.$fRealFloatFloat_$cscaleFloat_info:
	.quad	GHC.Float.$fRealFloatFloat_$cscaleFloat_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:33.194491038 UTC

.section .text
.align 8
_c36Au:
_c36Au:
	movq $block_c36AA_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c36AA
_c36AB:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c36Au, .-_c36Au


==================== Asm code ====================
2018-03-16 15:57:33.195098454 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36Au_info:
	.quad	_c36Au
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.195796694 UTC

.section .text
.align 8
_c36AA:
_c36AA:
	movq 8(%rbp),%rax
	movq $block_c36AF_info,8(%rbp)
	movss 7(%rbx),%xmm1
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Float.$w$cscaleFloat1_entry
	.size _c36AA, .-_c36AA


==================== Asm code ====================
2018-03-16 15:57:33.196352705 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36AA_info:
	.quad	_c36AA
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.197191177 UTC

.section .text
.align 8
_c36AF:
_c36AF:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36AQ
_c36AP:
	movq $GHC.Types.F#_con_info,-8(%r12)
	movss %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36AQ:
	movq $16,904(%r13)
	jmp stg_gc_f1
	.size _c36AF, .-_c36AF


==================== Asm code ====================
2018-03-16 15:57:33.198471002 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36AF_info:
	.quad	_c36AF
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.202273442 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.isDoubleNaN_closure
.type GHC.Float.isDoubleNaN_closure, @object
GHC.Float.isDoubleNaN_closure:
	.quad	GHC.Float.isDoubleNaN_info


==================== Asm code ====================
2018-03-16 15:57:33.203102477 UTC

.section .text
.align 8
.globl GHC.Float.isDoubleNaN_entry
.type GHC.Float.isDoubleNaN_entry, @object
GHC.Float.isDoubleNaN_entry:
_c36Bh:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c36Bn
_c36Bo:
	movq $block_c36Be_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c36Be
_c36Bf:
	movq (%rbx),%rax
	jmp *(%rax)
_c36Bn:
	movl $GHC.Float.isDoubleNaN_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.isDoubleNaN_entry, .-GHC.Float.isDoubleNaN_entry


==================== Asm code ====================
2018-03-16 15:57:33.203787855 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.isDoubleNaN_info
.type GHC.Float.isDoubleNaN_info, @object
GHC.Float.isDoubleNaN_info:
	.quad	GHC.Float.isDoubleNaN_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:33.204539026 UTC

.section .text
.align 8
_c36Be:
_c36Be:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36Br
_c36Bq:
	subq $8,%rsp
	movsd 7(%rbx),%xmm0
	movl $1,%eax
	call isDoubleNaN
	addq $8,%rsp
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36Br:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c36Be, .-_c36Be


==================== Asm code ====================
2018-03-16 15:57:33.205136896 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36Be_info:
	.quad	_c36Be
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.208413956 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.isDoubleInfinite_closure
.type GHC.Float.isDoubleInfinite_closure, @object
GHC.Float.isDoubleInfinite_closure:
	.quad	GHC.Float.isDoubleInfinite_info


==================== Asm code ====================
2018-03-16 15:57:33.209431915 UTC

.section .text
.align 8
.globl GHC.Float.isDoubleInfinite_entry
.type GHC.Float.isDoubleInfinite_entry, @object
GHC.Float.isDoubleInfinite_entry:
_c36BK:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c36BQ
_c36BR:
	movq $block_c36BH_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c36BH
_c36BI:
	movq (%rbx),%rax
	jmp *(%rax)
_c36BQ:
	movl $GHC.Float.isDoubleInfinite_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.isDoubleInfinite_entry, .-GHC.Float.isDoubleInfinite_entry


==================== Asm code ====================
2018-03-16 15:57:33.210119972 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.isDoubleInfinite_info
.type GHC.Float.isDoubleInfinite_info, @object
GHC.Float.isDoubleInfinite_info:
	.quad	GHC.Float.isDoubleInfinite_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:33.21089812 UTC

.section .text
.align 8
_c36BH:
_c36BH:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36BU
_c36BT:
	subq $8,%rsp
	movsd 7(%rbx),%xmm0
	movl $1,%eax
	call isDoubleInfinite
	addq $8,%rsp
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36BU:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c36BH, .-_c36BH


==================== Asm code ====================
2018-03-16 15:57:33.211549291 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36BH_info:
	.quad	_c36BH
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.214907326 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.isDoubleDenormalized_closure
.type GHC.Float.isDoubleDenormalized_closure, @object
GHC.Float.isDoubleDenormalized_closure:
	.quad	GHC.Float.isDoubleDenormalized_info


==================== Asm code ====================
2018-03-16 15:57:33.21578176 UTC

.section .text
.align 8
.globl GHC.Float.isDoubleDenormalized_entry
.type GHC.Float.isDoubleDenormalized_entry, @object
GHC.Float.isDoubleDenormalized_entry:
_c36Cd:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c36Cj
_c36Ck:
	movq $block_c36Ca_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c36Ca
_c36Cb:
	movq (%rbx),%rax
	jmp *(%rax)
_c36Cj:
	movl $GHC.Float.isDoubleDenormalized_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.isDoubleDenormalized_entry, .-GHC.Float.isDoubleDenormalized_entry


==================== Asm code ====================
2018-03-16 15:57:33.216411679 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.isDoubleDenormalized_info
.type GHC.Float.isDoubleDenormalized_info, @object
GHC.Float.isDoubleDenormalized_info:
	.quad	GHC.Float.isDoubleDenormalized_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:33.217223557 UTC

.section .text
.align 8
_c36Ca:
_c36Ca:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36Cn
_c36Cm:
	subq $8,%rsp
	movsd 7(%rbx),%xmm0
	movl $1,%eax
	call isDoubleDenormalized
	addq $8,%rsp
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36Cn:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c36Ca, .-_c36Ca


==================== Asm code ====================
2018-03-16 15:57:33.217955001 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36Ca_info:
	.quad	_c36Ca
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.221567374 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.isDoubleNegativeZero_closure
.type GHC.Float.isDoubleNegativeZero_closure, @object
GHC.Float.isDoubleNegativeZero_closure:
	.quad	GHC.Float.isDoubleNegativeZero_info


==================== Asm code ====================
2018-03-16 15:57:33.222460196 UTC

.section .text
.align 8
.globl GHC.Float.isDoubleNegativeZero_entry
.type GHC.Float.isDoubleNegativeZero_entry, @object
GHC.Float.isDoubleNegativeZero_entry:
_c36CG:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c36CM
_c36CN:
	movq $block_c36CD_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c36CD
_c36CE:
	movq (%rbx),%rax
	jmp *(%rax)
_c36CM:
	movl $GHC.Float.isDoubleNegativeZero_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.isDoubleNegativeZero_entry, .-GHC.Float.isDoubleNegativeZero_entry


==================== Asm code ====================
2018-03-16 15:57:33.223160596 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.isDoubleNegativeZero_info
.type GHC.Float.isDoubleNegativeZero_info, @object
GHC.Float.isDoubleNegativeZero_info:
	.quad	GHC.Float.isDoubleNegativeZero_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:33.223967933 UTC

.section .text
.align 8
_c36CD:
_c36CD:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36CQ
_c36CP:
	subq $8,%rsp
	movsd 7(%rbx),%xmm0
	movl $1,%eax
	call isDoubleNegativeZero
	addq $8,%rsp
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36CQ:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c36CD, .-_c36CD


==================== Asm code ====================
2018-03-16 15:57:33.224673161 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36CD_info:
	.quad	_c36CD
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.228138543 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.isDoubleFinite_closure
.type GHC.Float.isDoubleFinite_closure, @object
GHC.Float.isDoubleFinite_closure:
	.quad	GHC.Float.isDoubleFinite_info


==================== Asm code ====================
2018-03-16 15:57:33.229090699 UTC

.section .text
.align 8
.globl GHC.Float.isDoubleFinite_entry
.type GHC.Float.isDoubleFinite_entry, @object
GHC.Float.isDoubleFinite_entry:
_c36D9:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c36Df
_c36Dg:
	movq $block_c36D6_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c36D6
_c36D7:
	movq (%rbx),%rax
	jmp *(%rax)
_c36Df:
	movl $GHC.Float.isDoubleFinite_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.isDoubleFinite_entry, .-GHC.Float.isDoubleFinite_entry


==================== Asm code ====================
2018-03-16 15:57:33.230421416 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.isDoubleFinite_info
.type GHC.Float.isDoubleFinite_info, @object
GHC.Float.isDoubleFinite_info:
	.quad	GHC.Float.isDoubleFinite_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:33.231234912 UTC

.section .text
.align 8
_c36D6:
_c36D6:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36Dj
_c36Di:
	subq $8,%rsp
	movsd 7(%rbx),%xmm0
	movl $1,%eax
	call isDoubleFinite
	addq $8,%rsp
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36Dj:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c36D6, .-_c36D6


==================== Asm code ====================
2018-03-16 15:57:33.231839078 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36D6_info:
	.quad	_c36D6
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.236408506 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$w$cscaleFloat_closure
.type GHC.Float.$w$cscaleFloat_closure, @object
GHC.Float.$w$cscaleFloat_closure:
	.quad	GHC.Float.$w$cscaleFloat_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:33.237159357 UTC

.section .text
.align 8
.globl GHC.Float.$w$cscaleFloat_slow
.type GHC.Float.$w$cscaleFloat_slow, @object
GHC.Float.$w$cscaleFloat_slow:
_c36Dw:
	movsd 8(%rbp),%xmm1
	movq (%rbp),%r14
	addq $16,%rbp
	jmp GHC.Float.$w$cscaleFloat_entry
	.size GHC.Float.$w$cscaleFloat_slow, .-GHC.Float.$w$cscaleFloat_slow


==================== Asm code ====================
2018-03-16 15:57:33.238268443 UTC

.section .text
.align 8
.globl GHC.Float.$w$cscaleFloat_entry
.type GHC.Float.$w$cscaleFloat_entry, @object
GHC.Float.$w$cscaleFloat_entry:
_c36DE:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c36DF
_c36DG:
	testq %r14,%r14
	je _c36DD
_c36DC:
	xorpd %xmm0,%xmm0
	ucomisd %xmm0,%xmm1
	jp _c36Ee
	je _c36DD
_c36Ee:
	subq $8,%rsp
	movsd %xmm1,%xmm0
	movl $1,%eax
	movsd %xmm1,72(%rsp)
	call isDoubleFinite
	addq $8,%rsp
	testq %rax,%rax
	je _n36Et
_c36DR:
	movq $block_c36DP_info,-16(%rbp)
	movsd 64(%rsp),%xmm0
	movsd %xmm0,%xmm1
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Integer.Type.decodeDoubleInteger_entry
_c36DF:
	movl $GHC.Float.$w$cscaleFloat_closure,%ebx
	movq %r14,-16(%rbp)
	movsd %xmm1,-8(%rbp)
	addq $-16,%rbp
	jmp *-8(%r13)
_n36Et:
	movsd 64(%rsp),%xmm1
_c36DD:
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Float.$w$cscaleFloat_entry, .-GHC.Float.$w$cscaleFloat_entry


==================== Asm code ====================
2018-03-16 15:57:33.239028935 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$w$cscaleFloat_info
.type GHC.Float.$w$cscaleFloat_info, @object
GHC.Float.$w$cscaleFloat_info:
	.quad	GHC.Float.$w$cscaleFloat_entry
	.quad	0
	.quad	12884901902
	.quad	8589934592
	.quad	S2VLN_srt+640
	.quad	194
	.quad	GHC.Float.$w$cscaleFloat_slow


==================== Asm code ====================
2018-03-16 15:57:33.239854146 UTC

.section .text
.align 8
_c36DP:
_c36DP:
	movq 8(%rbp),%rax
	cmpq $2257,%rax
	jl _s2V0q
_c36Eb:
	movl $2257,%eax
_s2V0q:
	cmpq $-2257,%rax
	jl _c36E5
_c36E6:
	movq %r14,%rsi
	addq %rax,%rsi
	movq %rbx,%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.encodeDoubleInteger_entry
_c36E5:
	leaq -2257(%r14),%rsi
	movq %rbx,%r14
	addq $16,%rbp
	jmp GHC.Integer.Type.encodeDoubleInteger_entry
	.size _c36DP, .-_c36DP


==================== Asm code ====================
2018-03-16 15:57:33.240513361 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36DP_info:
	.quad	_c36DP
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.246394879 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble_$cscaleFloat_closure
.type GHC.Float.$fRealFloatDouble_$cscaleFloat_closure, @object
GHC.Float.$fRealFloatDouble_$cscaleFloat_closure:
	.quad	GHC.Float.$fRealFloatDouble_$cscaleFloat_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:33.247296834 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFloatDouble_$cscaleFloat_entry
.type GHC.Float.$fRealFloatDouble_$cscaleFloat_entry, @object
GHC.Float.$fRealFloatDouble_$cscaleFloat_entry:
_c36EG:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c36ET
_c36EU:
	movq $block_c36ED_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c36ED
_c36EE:
	movq (%rbx),%rax
	jmp *(%rax)
_c36ET:
	movl $GHC.Float.$fRealFloatDouble_$cscaleFloat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFloatDouble_$cscaleFloat_entry, .-GHC.Float.$fRealFloatDouble_$cscaleFloat_entry


==================== Asm code ====================
2018-03-16 15:57:33.248024187 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble_$cscaleFloat_info
.type GHC.Float.$fRealFloatDouble_$cscaleFloat_info, @object
GHC.Float.$fRealFloatDouble_$cscaleFloat_info:
	.quad	GHC.Float.$fRealFloatDouble_$cscaleFloat_entry
	.quad	0
	.quad	21474836494
	.quad	8589934607
	.quad	S2VLN_srt+640


==================== Asm code ====================
2018-03-16 15:57:33.248753086 UTC

.section .text
.align 8
_c36ED:
_c36ED:
	movq $block_c36EJ_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c36EJ
_c36EK:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c36ED, .-_c36ED


==================== Asm code ====================
2018-03-16 15:57:33.249430467 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36ED_info:
	.quad	_c36ED
	.quad	1
	.quad	4294967326
	.quad	S2VLN_srt+640


==================== Asm code ====================
2018-03-16 15:57:33.250118271 UTC

.section .text
.align 8
_c36EJ:
_c36EJ:
	movq 8(%rbp),%rax
	movq $block_c36EO_info,8(%rbp)
	movsd 7(%rbx),%xmm1
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Float.$w$cscaleFloat_entry
	.size _c36EJ, .-_c36EJ


==================== Asm code ====================
2018-03-16 15:57:33.250745042 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36EJ_info:
	.quad	_c36EJ
	.quad	65
	.quad	4294967326
	.quad	S2VLN_srt+640


==================== Asm code ====================
2018-03-16 15:57:33.251457382 UTC

.section .text
.align 8
_c36EO:
_c36EO:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36EZ
_c36EY:
	movq $GHC.Types.D#_con_info,-8(%r12)
	movsd %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36EZ:
	movq $16,904(%r13)
	jmp stg_gc_d1
	.size _c36EO, .-_c36EO


==================== Asm code ====================
2018-03-16 15:57:33.252107346 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36EO_info:
	.quad	_c36EO
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.25561953 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.log1pDouble_closure
.type GHC.Float.log1pDouble_closure, @object
GHC.Float.log1pDouble_closure:
	.quad	GHC.Float.log1pDouble_info


==================== Asm code ====================
2018-03-16 15:57:33.256499556 UTC

.section .text
.align 8
.globl GHC.Float.log1pDouble_entry
.type GHC.Float.log1pDouble_entry, @object
GHC.Float.log1pDouble_entry:
_c36Fq:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c36Fw
_c36Fx:
	movq $block_c36Fn_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c36Fn
_c36Fo:
	movq (%rbx),%rax
	jmp *(%rax)
_c36Fw:
	movl $GHC.Float.log1pDouble_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.log1pDouble_entry, .-GHC.Float.log1pDouble_entry


==================== Asm code ====================
2018-03-16 15:57:33.257180002 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.log1pDouble_info
.type GHC.Float.log1pDouble_info, @object
GHC.Float.log1pDouble_info:
	.quad	GHC.Float.log1pDouble_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:33.258184205 UTC

.section .text
.align 8
_c36Fn:
_c36Fn:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36FA
_c36Fz:
	subq $8,%rsp
	movsd 7(%rbx),%xmm0
	movl $1,%eax
	call ghczuwrapperZC3ZCbaseZCGHCziFloatZClog1p
	addq $8,%rsp
	movq $GHC.Types.D#_con_info,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36FA:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c36Fn, .-_c36Fn


==================== Asm code ====================
2018-03-16 15:57:33.258923768 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36Fn_info:
	.quad	_c36Fn
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.263415357 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.expm1Double_closure
.type GHC.Float.expm1Double_closure, @object
GHC.Float.expm1Double_closure:
	.quad	GHC.Float.expm1Double_info


==================== Asm code ====================
2018-03-16 15:57:33.264376515 UTC

.section .text
.align 8
.globl GHC.Float.expm1Double_entry
.type GHC.Float.expm1Double_entry, @object
GHC.Float.expm1Double_entry:
_c36FT:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c36FZ
_c36G0:
	movq $block_c36FQ_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c36FQ
_c36FR:
	movq (%rbx),%rax
	jmp *(%rax)
_c36FZ:
	movl $GHC.Float.expm1Double_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.expm1Double_entry, .-GHC.Float.expm1Double_entry


==================== Asm code ====================
2018-03-16 15:57:33.265043454 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.expm1Double_info
.type GHC.Float.expm1Double_info, @object
GHC.Float.expm1Double_info:
	.quad	GHC.Float.expm1Double_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:33.266178959 UTC

.section .text
.align 8
_c36FQ:
_c36FQ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36G3
_c36G2:
	subq $8,%rsp
	movsd 7(%rbx),%xmm0
	movl $1,%eax
	call ghczuwrapperZC2ZCbaseZCGHCziFloatZCexpm1
	addq $8,%rsp
	movq $GHC.Types.D#_con_info,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36G3:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c36FQ, .-_c36FQ


==================== Asm code ====================
2018-03-16 15:57:33.266923373 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36FQ_info:
	.quad	_c36FQ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.27020839 UTC

.section .data
.align 8
.align 1
lvl4_r2UqC_closure:
	.quad	lvl4_r2UqC_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:33.271257253 UTC

.section .text
.align 8
lvl4_r2UqC_entry:
_c36Go:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c36Gr
_c36Gs:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36Gu
_c36Gt:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c36Gk
_c36Gj:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	subq $8,%rsp
	movsd _n36Gy(%rip),%xmm0
	movl $1,%eax
	call log
	addq $8,%rsp
	movq $GHC.Types.D#_con_info,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36Gu:
	movq $16,904(%r13)
_c36Gr:
	jmp *-16(%r13)
_c36Gk:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl4_r2UqC_entry, .-lvl4_r2UqC_entry
.section .rodata
.align 8
.align 8
_n36Gy:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	64


==================== Asm code ====================
2018-03-16 15:57:33.272167563 UTC

.section .data.rel.ro
.align 8
.align 1
lvl4_r2UqC_info:
	.quad	lvl4_r2UqC_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:57:33.276711396 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fFloatingDouble_$clog1mexp_closure
.type GHC.Float.$fFloatingDouble_$clog1mexp_closure, @object
GHC.Float.$fFloatingDouble_$clog1mexp_closure:
	.quad	GHC.Float.$fFloatingDouble_$clog1mexp_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:33.278205123 UTC

.section .text
.align 8
.globl GHC.Float.$fFloatingDouble_$clog1mexp_entry
.type GHC.Float.$fFloatingDouble_$clog1mexp_entry, @object
GHC.Float.$fFloatingDouble_$clog1mexp_entry:
_c36GL:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c36GP
_c36GQ:
	movq $block_c36GI_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c36GI
_c36GJ:
	movq (%rbx),%rax
	jmp *(%rax)
_c36GP:
	movl $GHC.Float.$fFloatingDouble_$clog1mexp_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fFloatingDouble_$clog1mexp_entry, .-GHC.Float.$fFloatingDouble_$clog1mexp_entry


==================== Asm code ====================
2018-03-16 15:57:33.278860089 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fFloatingDouble_$clog1mexp_info
.type GHC.Float.$fFloatingDouble_$clog1mexp_info, @object
GHC.Float.$fFloatingDouble_$clog1mexp_info:
	.quad	GHC.Float.$fFloatingDouble_$clog1mexp_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S2VLN_srt+664


==================== Asm code ====================
2018-03-16 15:57:33.279572286 UTC

.section .text
.align 8
_c36GI:
_c36GI:
	movq $block_c36GO_info,-8(%rbp)
	movsd 7(%rbx),%xmm0
	movl $lvl4_r2UqC_closure,%ebx
	movsd %xmm0,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c36GO
_c36GS:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c36GI, .-_c36GI


==================== Asm code ====================
2018-03-16 15:57:33.280192669 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36GI_info:
	.quad	_c36GI
	.quad	0
	.quad	4294967326
	.quad	S2VLN_srt+672


==================== Asm code ====================
2018-03-16 15:57:33.281175374 UTC

.section .text
.align 8
_c36GO:
_c36GO:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36GY
_c36GX:
	movsd 8(%rbp),%xmm0
	ucomisd 7(%rbx),%xmm0
	jp _c36Hd
	jbe _c36Hp
_c36Hd:
	subq $8,%rsp
	movl $1,%eax
	call exp
	addq $8,%rsp
	subq $8,%rsp
	movsd _n36HE(%rip),%xmm1
	xorpd %xmm1,%xmm0
	movl $1,%eax
	call ghczuwrapperZC3ZCbaseZCGHCziFloatZClog1p
	addq $8,%rsp
	movq $GHC.Types.D#_con_info,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36Hp:
	subq $8,%rsp
	movl $1,%eax
	call ghczuwrapperZC2ZCbaseZCGHCziFloatZCexpm1
	addq $8,%rsp
	subq $8,%rsp
	movsd _n36HH(%rip),%xmm1
	xorpd %xmm1,%xmm0
	movl $1,%eax
	call log
	addq $8,%rsp
	movq $GHC.Types.D#_con_info,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36GY:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c36GO, .-_c36GO
.section .rodata
.align 8
.align 8
_n36HE:
	.quad	-9223372036854775808
.section .rodata
.align 8
.align 8
_n36HH:
	.quad	-9223372036854775808


==================== Asm code ====================
2018-03-16 15:57:33.28206097 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36GO_info:
	.quad	_c36GO
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.28433117 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fFloatingDouble_closure
.type GHC.Float.$fFloatingDouble_closure, @object
GHC.Float.$fFloatingDouble_closure:
	.quad	GHC.Float.C:Floating_con_info
	.quad	GHC.Float.$fFractionalDouble_closure+1
	.quad	GHC.Float.$fFloatingDouble_$cpi_closure+1
	.quad	GHC.Float.expDouble_closure+1
	.quad	GHC.Float.logDouble_closure+1
	.quad	GHC.Float.sqrtDouble_closure+1
	.quad	GHC.Float.powerDouble_closure+2
	.quad	GHC.Float.$fFloatingDouble_$clogBase_closure+2
	.quad	GHC.Float.sinDouble_closure+1
	.quad	GHC.Float.cosDouble_closure+1
	.quad	GHC.Float.tanDouble_closure+1
	.quad	GHC.Float.asinDouble_closure+1
	.quad	GHC.Float.acosDouble_closure+1
	.quad	GHC.Float.atanDouble_closure+1
	.quad	GHC.Float.sinhDouble_closure+1
	.quad	GHC.Float.coshDouble_closure+1
	.quad	GHC.Float.tanhDouble_closure+1
	.quad	GHC.Float.$fFloatingDouble_$casinh_closure+1
	.quad	GHC.Float.$fFloatingDouble_$cacosh_closure+1
	.quad	GHC.Float.$fFloatingDouble_$catanh_closure+1
	.quad	GHC.Float.log1pDouble_closure+1
	.quad	GHC.Float.expm1Double_closure+1
	.quad	GHC.Float.$fFloatingDouble_$clog1pexp_closure+1
	.quad	GHC.Float.$fFloatingDouble_$clog1mexp_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:33.287769348 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.log1pFloat_closure
.type GHC.Float.log1pFloat_closure, @object
GHC.Float.log1pFloat_closure:
	.quad	GHC.Float.log1pFloat_info


==================== Asm code ====================
2018-03-16 15:57:33.288619971 UTC

.section .text
.align 8
.globl GHC.Float.log1pFloat_entry
.type GHC.Float.log1pFloat_entry, @object
GHC.Float.log1pFloat_entry:
_c36HU:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c36I0
_c36I1:
	movq $block_c36HR_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c36HR
_c36HS:
	movq (%rbx),%rax
	jmp *(%rax)
_c36I0:
	movl $GHC.Float.log1pFloat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.log1pFloat_entry, .-GHC.Float.log1pFloat_entry


==================== Asm code ====================
2018-03-16 15:57:33.289353232 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.log1pFloat_info
.type GHC.Float.log1pFloat_info, @object
GHC.Float.log1pFloat_info:
	.quad	GHC.Float.log1pFloat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:33.290167922 UTC

.section .text
.align 8
_c36HR:
_c36HR:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36I4
_c36I3:
	subq $8,%rsp
	movss 7(%rbx),%xmm0
	movl $1,%eax
	call ghczuwrapperZC1ZCbaseZCGHCziFloatZClog1pf
	addq $8,%rsp
	movq $GHC.Types.F#_con_info,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36I4:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c36HR, .-_c36HR


==================== Asm code ====================
2018-03-16 15:57:33.290839154 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36HR_info:
	.quad	_c36HR
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.294967039 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.expm1Float_closure
.type GHC.Float.expm1Float_closure, @object
GHC.Float.expm1Float_closure:
	.quad	GHC.Float.expm1Float_info


==================== Asm code ====================
2018-03-16 15:57:33.295880954 UTC

.section .text
.align 8
.globl GHC.Float.expm1Float_entry
.type GHC.Float.expm1Float_entry, @object
GHC.Float.expm1Float_entry:
_c36In:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c36It
_c36Iu:
	movq $block_c36Ik_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c36Ik
_c36Il:
	movq (%rbx),%rax
	jmp *(%rax)
_c36It:
	movl $GHC.Float.expm1Float_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.expm1Float_entry, .-GHC.Float.expm1Float_entry


==================== Asm code ====================
2018-03-16 15:57:33.296559706 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.expm1Float_info
.type GHC.Float.expm1Float_info, @object
GHC.Float.expm1Float_info:
	.quad	GHC.Float.expm1Float_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:33.297519941 UTC

.section .text
.align 8
_c36Ik:
_c36Ik:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36Ix
_c36Iw:
	subq $8,%rsp
	movss 7(%rbx),%xmm0
	movl $1,%eax
	call ghczuwrapperZC0ZCbaseZCGHCziFloatZCexpm1f
	addq $8,%rsp
	movq $GHC.Types.F#_con_info,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36Ix:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c36Ik, .-_c36Ik


==================== Asm code ====================
2018-03-16 15:57:33.298161827 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36Ik_info:
	.quad	_c36Ik
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.301098444 UTC

.section .data
.align 8
.align 1
lvl5_r2UqD_closure:
	.quad	lvl5_r2UqD_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:33.30217013 UTC

.section .text
.align 8
lvl5_r2UqD_entry:
_c36IS:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c36IV
_c36IW:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36IY
_c36IX:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c36IO
_c36IN:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	subq $8,%rsp
	movss _n36J2(%rip),%xmm0
	movl $1,%eax
	call logf
	addq $8,%rsp
	movq $GHC.Types.F#_con_info,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36IY:
	movq $16,904(%r13)
_c36IV:
	jmp *-16(%r13)
_c36IO:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl5_r2UqD_entry, .-lvl5_r2UqD_entry
.section .rodata
.align 8
.align 4
_n36J2:
	.byte	0
	.byte	0
	.byte	0
	.byte	64


==================== Asm code ====================
2018-03-16 15:57:33.302909418 UTC

.section .data.rel.ro
.align 8
.align 1
lvl5_r2UqD_info:
	.quad	lvl5_r2UqD_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:57:33.307147848 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fFloatingFloat_$clog1mexp_closure
.type GHC.Float.$fFloatingFloat_$clog1mexp_closure, @object
GHC.Float.$fFloatingFloat_$clog1mexp_closure:
	.quad	GHC.Float.$fFloatingFloat_$clog1mexp_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:33.307948132 UTC

.section .text
.align 8
.globl GHC.Float.$fFloatingFloat_$clog1mexp_entry
.type GHC.Float.$fFloatingFloat_$clog1mexp_entry, @object
GHC.Float.$fFloatingFloat_$clog1mexp_entry:
_c36Jf:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c36Jj
_c36Jk:
	movq $block_c36Jc_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c36Jc
_c36Jd:
	movq (%rbx),%rax
	jmp *(%rax)
_c36Jj:
	movl $GHC.Float.$fFloatingFloat_$clog1mexp_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fFloatingFloat_$clog1mexp_entry, .-GHC.Float.$fFloatingFloat_$clog1mexp_entry


==================== Asm code ====================
2018-03-16 15:57:33.30859048 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fFloatingFloat_$clog1mexp_info
.type GHC.Float.$fFloatingFloat_$clog1mexp_info, @object
GHC.Float.$fFloatingFloat_$clog1mexp_info:
	.quad	GHC.Float.$fFloatingFloat_$clog1mexp_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S2VLN_srt+680


==================== Asm code ====================
2018-03-16 15:57:33.309314046 UTC

.section .text
.align 8
_c36Jc:
_c36Jc:
	movq $block_c36Ji_info,-8(%rbp)
	movss 7(%rbx),%xmm0
	movl $lvl5_r2UqD_closure,%ebx
	movss %xmm0,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c36Ji
_c36Jm:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c36Jc, .-_c36Jc


==================== Asm code ====================
2018-03-16 15:57:33.309927881 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36Jc_info:
	.quad	_c36Jc
	.quad	0
	.quad	4294967326
	.quad	S2VLN_srt+688


==================== Asm code ====================
2018-03-16 15:57:33.310885763 UTC

.section .text
.align 8
_c36Ji:
_c36Ji:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36Js
_c36Jr:
	movss 8(%rbp),%xmm0
	ucomiss 7(%rbx),%xmm0
	jp _c36JH
	jbe _c36JT
_c36JH:
	subq $8,%rsp
	movl $1,%eax
	call expf
	addq $8,%rsp
	subq $8,%rsp
	movss _n36K8(%rip),%xmm1
	xorps %xmm1,%xmm0
	movl $1,%eax
	call ghczuwrapperZC1ZCbaseZCGHCziFloatZClog1pf
	addq $8,%rsp
	movq $GHC.Types.F#_con_info,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36JT:
	subq $8,%rsp
	movl $1,%eax
	call ghczuwrapperZC0ZCbaseZCGHCziFloatZCexpm1f
	addq $8,%rsp
	subq $8,%rsp
	movss _n36Kb(%rip),%xmm1
	xorps %xmm1,%xmm0
	movl $1,%eax
	call logf
	addq $8,%rsp
	movq $GHC.Types.F#_con_info,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36Js:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c36Ji, .-_c36Ji
.section .rodata
.align 8
.align 4
_n36K8:
	.long	-2147483648
.section .rodata
.align 8
.align 4
_n36Kb:
	.long	-2147483648


==================== Asm code ====================
2018-03-16 15:57:33.311721427 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36Ji_info:
	.quad	_c36Ji
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.314057563 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fFloatingFloat_closure
.type GHC.Float.$fFloatingFloat_closure, @object
GHC.Float.$fFloatingFloat_closure:
	.quad	GHC.Float.C:Floating_con_info
	.quad	GHC.Float.$fFractionalFloat_closure+1
	.quad	GHC.Float.$fFloatingFloat_$cpi_closure+1
	.quad	GHC.Float.expFloat_closure+1
	.quad	GHC.Float.logFloat_closure+1
	.quad	GHC.Float.sqrtFloat_closure+1
	.quad	GHC.Float.powerFloat_closure+2
	.quad	GHC.Float.$fFloatingFloat_$clogBase_closure+2
	.quad	GHC.Float.sinFloat_closure+1
	.quad	GHC.Float.cosFloat_closure+1
	.quad	GHC.Float.tanFloat_closure+1
	.quad	GHC.Float.asinFloat_closure+1
	.quad	GHC.Float.acosFloat_closure+1
	.quad	GHC.Float.atanFloat_closure+1
	.quad	GHC.Float.sinhFloat_closure+1
	.quad	GHC.Float.coshFloat_closure+1
	.quad	GHC.Float.tanhFloat_closure+1
	.quad	GHC.Float.$fFloatingFloat_$casinh_closure+1
	.quad	GHC.Float.$fFloatingFloat_$cacosh_closure+1
	.quad	GHC.Float.$fFloatingFloat_$catanh_closure+1
	.quad	GHC.Float.log1pFloat_closure+1
	.quad	GHC.Float.expm1Float_closure+1
	.quad	GHC.Float.$fFloatingFloat_$clog1pexp_closure+1
	.quad	GHC.Float.$fFloatingFloat_$clog1mexp_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:33.316373582 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.stgWord32ToFloat_closure
.type GHC.Float.stgWord32ToFloat_closure, @object
GHC.Float.stgWord32ToFloat_closure:
	.quad	GHC.Float.stgWord32ToFloat_info


==================== Asm code ====================
2018-03-16 15:57:33.317061644 UTC

.section .text
.align 8
.globl GHC.Float.stgWord32ToFloat_entry
.type GHC.Float.stgWord32ToFloat_entry, @object
GHC.Float.stgWord32ToFloat_entry:
_c36Kl:
	movq %r14,%rbx
	jmp stg_word32ToFloatzh
	.size GHC.Float.stgWord32ToFloat_entry, .-GHC.Float.stgWord32ToFloat_entry


==================== Asm code ====================
2018-03-16 15:57:33.317672147 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.stgWord32ToFloat_info
.type GHC.Float.stgWord32ToFloat_info, @object
GHC.Float.stgWord32ToFloat_info:
	.quad	GHC.Float.stgWord32ToFloat_entry
	.quad	0
	.quad	14
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:57:33.321045833 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.castWord32ToFloat_closure
.type GHC.Float.castWord32ToFloat_closure, @object
GHC.Float.castWord32ToFloat_closure:
	.quad	GHC.Float.castWord32ToFloat_info


==================== Asm code ====================
2018-03-16 15:57:33.321937793 UTC

.section .text
.align 8
.globl GHC.Float.castWord32ToFloat_entry
.type GHC.Float.castWord32ToFloat_entry, @object
GHC.Float.castWord32ToFloat_entry:
_c36Kz:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c36KH
_c36KI:
	movq $block_c36Kw_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c36Kw
_c36Kx:
	movq (%rbx),%rax
	jmp *(%rax)
_c36KH:
	movl $GHC.Float.castWord32ToFloat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.castWord32ToFloat_entry, .-GHC.Float.castWord32ToFloat_entry


==================== Asm code ====================
2018-03-16 15:57:33.322633366 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.castWord32ToFloat_info
.type GHC.Float.castWord32ToFloat_info, @object
GHC.Float.castWord32ToFloat_info:
	.quad	GHC.Float.castWord32ToFloat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:33.323345107 UTC

.section .text
.align 8
_c36Kw:
_c36Kw:
	movq $block_c36KC_info,(%rbp)
	movq 7(%rbx),%rbx
	jmp stg_word32ToFloatzh
	.size _c36Kw, .-_c36Kw


==================== Asm code ====================
2018-03-16 15:57:33.323952026 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36Kw_info:
	.quad	_c36Kw
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.325941867 UTC

.section .text
.align 8
_c36KC:
_c36KC:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36KM
_c36KL:
	movq $GHC.Types.F#_con_info,-8(%r12)
	movss %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36KM:
	movq $16,904(%r13)
	jmp stg_gc_f1
	.size _c36KC, .-_c36KC


==================== Asm code ====================
2018-03-16 15:57:33.326606286 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36KC_info:
	.quad	_c36KC
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.328755155 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.stgFloatToWord32_closure
.type GHC.Float.stgFloatToWord32_closure, @object
GHC.Float.stgFloatToWord32_closure:
	.quad	GHC.Float.stgFloatToWord32_info


==================== Asm code ====================
2018-03-16 15:57:33.329472143 UTC

.section .text
.align 8
.globl GHC.Float.stgFloatToWord32_entry
.type GHC.Float.stgFloatToWord32_entry, @object
GHC.Float.stgFloatToWord32_entry:
_c36L5:
	jmp stg_floatToWord32zh
	.size GHC.Float.stgFloatToWord32_entry, .-GHC.Float.stgFloatToWord32_entry


==================== Asm code ====================
2018-03-16 15:57:33.330020995 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.stgFloatToWord32_info
.type GHC.Float.stgFloatToWord32_info, @object
GHC.Float.stgFloatToWord32_info:
	.quad	GHC.Float.stgFloatToWord32_entry
	.quad	0
	.quad	14
	.quad	4294967302


==================== Asm code ====================
2018-03-16 15:57:33.333392935 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.castFloatToWord32_closure
.type GHC.Float.castFloatToWord32_closure, @object
GHC.Float.castFloatToWord32_closure:
	.quad	GHC.Float.castFloatToWord32_info


==================== Asm code ====================
2018-03-16 15:57:33.334192989 UTC

.section .text
.align 8
.globl GHC.Float.castFloatToWord32_entry
.type GHC.Float.castFloatToWord32_entry, @object
GHC.Float.castFloatToWord32_entry:
_c36Lj:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c36Lr
_c36Ls:
	movq $block_c36Lg_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c36Lg
_c36Lh:
	movq (%rbx),%rax
	jmp *(%rax)
_c36Lr:
	movl $GHC.Float.castFloatToWord32_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.castFloatToWord32_entry, .-GHC.Float.castFloatToWord32_entry


==================== Asm code ====================
2018-03-16 15:57:33.334853517 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.castFloatToWord32_info
.type GHC.Float.castFloatToWord32_info, @object
GHC.Float.castFloatToWord32_info:
	.quad	GHC.Float.castFloatToWord32_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:33.335474529 UTC

.section .text
.align 8
_c36Lg:
_c36Lg:
	movq $block_c36Lm_info,(%rbp)
	movss 7(%rbx),%xmm1
	jmp stg_floatToWord32zh
	.size _c36Lg, .-_c36Lg


==================== Asm code ====================
2018-03-16 15:57:33.336047545 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36Lg_info:
	.quad	_c36Lg
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.336753595 UTC

.section .text
.align 8
_c36Lm:
_c36Lm:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36Lw
_c36Lv:
	movq $GHC.Word.W32#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36Lw:
	movq $16,904(%r13)
	jmp stg_gc_unbx_r1
	.size _c36Lm, .-_c36Lm


==================== Asm code ====================
2018-03-16 15:57:33.337420848 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36Lm_info:
	.quad	_c36Lm
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.339645207 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.stgWord64ToDouble_closure
.type GHC.Float.stgWord64ToDouble_closure, @object
GHC.Float.stgWord64ToDouble_closure:
	.quad	GHC.Float.stgWord64ToDouble_info


==================== Asm code ====================
2018-03-16 15:57:33.340313442 UTC

.section .text
.align 8
.globl GHC.Float.stgWord64ToDouble_entry
.type GHC.Float.stgWord64ToDouble_entry, @object
GHC.Float.stgWord64ToDouble_entry:
_c36LP:
	movq %r14,%rbx
	jmp stg_word64ToDoublezh
	.size GHC.Float.stgWord64ToDouble_entry, .-GHC.Float.stgWord64ToDouble_entry


==================== Asm code ====================
2018-03-16 15:57:33.340886251 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.stgWord64ToDouble_info
.type GHC.Float.stgWord64ToDouble_info, @object
GHC.Float.stgWord64ToDouble_info:
	.quad	GHC.Float.stgWord64ToDouble_entry
	.quad	0
	.quad	14
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:57:33.344315524 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.castWord64ToDouble_closure
.type GHC.Float.castWord64ToDouble_closure, @object
GHC.Float.castWord64ToDouble_closure:
	.quad	GHC.Float.castWord64ToDouble_info


==================== Asm code ====================
2018-03-16 15:57:33.34514378 UTC

.section .text
.align 8
.globl GHC.Float.castWord64ToDouble_entry
.type GHC.Float.castWord64ToDouble_entry, @object
GHC.Float.castWord64ToDouble_entry:
_c36M3:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c36Mb
_c36Mc:
	movq $block_c36M0_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c36M0
_c36M1:
	movq (%rbx),%rax
	jmp *(%rax)
_c36Mb:
	movl $GHC.Float.castWord64ToDouble_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.castWord64ToDouble_entry, .-GHC.Float.castWord64ToDouble_entry


==================== Asm code ====================
2018-03-16 15:57:33.345859186 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.castWord64ToDouble_info
.type GHC.Float.castWord64ToDouble_info, @object
GHC.Float.castWord64ToDouble_info:
	.quad	GHC.Float.castWord64ToDouble_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:33.346545908 UTC

.section .text
.align 8
_c36M0:
_c36M0:
	movq $block_c36M6_info,(%rbp)
	movq 7(%rbx),%rbx
	jmp stg_word64ToDoublezh
	.size _c36M0, .-_c36M0


==================== Asm code ====================
2018-03-16 15:57:33.347106991 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36M0_info:
	.quad	_c36M0
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.34780423 UTC

.section .text
.align 8
_c36M6:
_c36M6:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36Mg
_c36Mf:
	movq $GHC.Types.D#_con_info,-8(%r12)
	movsd %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36Mg:
	movq $16,904(%r13)
	jmp stg_gc_d1
	.size _c36M6, .-_c36M6


==================== Asm code ====================
2018-03-16 15:57:33.348407733 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36M6_info:
	.quad	_c36M6
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.350651418 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.stgDoubleToWord64_closure
.type GHC.Float.stgDoubleToWord64_closure, @object
GHC.Float.stgDoubleToWord64_closure:
	.quad	GHC.Float.stgDoubleToWord64_info


==================== Asm code ====================
2018-03-16 15:57:33.351355831 UTC

.section .text
.align 8
.globl GHC.Float.stgDoubleToWord64_entry
.type GHC.Float.stgDoubleToWord64_entry, @object
GHC.Float.stgDoubleToWord64_entry:
_c36Mz:
	jmp stg_doubleToWord64zh
	.size GHC.Float.stgDoubleToWord64_entry, .-GHC.Float.stgDoubleToWord64_entry


==================== Asm code ====================
2018-03-16 15:57:33.351958874 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.stgDoubleToWord64_info
.type GHC.Float.stgDoubleToWord64_info, @object
GHC.Float.stgDoubleToWord64_info:
	.quad	GHC.Float.stgDoubleToWord64_entry
	.quad	0
	.quad	14
	.quad	4294967303


==================== Asm code ====================
2018-03-16 15:57:33.356307846 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.castDoubleToWord64_closure
.type GHC.Float.castDoubleToWord64_closure, @object
GHC.Float.castDoubleToWord64_closure:
	.quad	GHC.Float.castDoubleToWord64_info


==================== Asm code ====================
2018-03-16 15:57:33.357140142 UTC

.section .text
.align 8
.globl GHC.Float.castDoubleToWord64_entry
.type GHC.Float.castDoubleToWord64_entry, @object
GHC.Float.castDoubleToWord64_entry:
_c36MN:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c36MV
_c36MW:
	movq $block_c36MK_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c36MK
_c36ML:
	movq (%rbx),%rax
	jmp *(%rax)
_c36MV:
	movl $GHC.Float.castDoubleToWord64_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.castDoubleToWord64_entry, .-GHC.Float.castDoubleToWord64_entry


==================== Asm code ====================
2018-03-16 15:57:33.357829823 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.castDoubleToWord64_info
.type GHC.Float.castDoubleToWord64_info, @object
GHC.Float.castDoubleToWord64_info:
	.quad	GHC.Float.castDoubleToWord64_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:33.358498062 UTC

.section .text
.align 8
_c36MK:
_c36MK:
	movq $block_c36MQ_info,(%rbp)
	movsd 7(%rbx),%xmm1
	jmp stg_doubleToWord64zh
	.size _c36MK, .-_c36MK


==================== Asm code ====================
2018-03-16 15:57:33.35903323 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36MK_info:
	.quad	_c36MK
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.359765707 UTC

.section .text
.align 8
_c36MQ:
_c36MQ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36N0
_c36MZ:
	movq $GHC.Word.W64#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36N0:
	movq $16,904(%r13)
	jmp stg_gc_unbx_r1
	.size _c36MQ, .-_c36MQ


==================== Asm code ====================
2018-03-16 15:57:33.360411866 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36MQ_info:
	.quad	_c36MQ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.36390235 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fEnumFloat_$csucc_closure
.type GHC.Float.$fEnumFloat_$csucc_closure, @object
GHC.Float.$fEnumFloat_$csucc_closure:
	.quad	GHC.Float.$fEnumFloat_$csucc_info


==================== Asm code ====================
2018-03-16 15:57:33.36474204 UTC

.section .text
.align 8
.globl GHC.Float.$fEnumFloat_$csucc_entry
.type GHC.Float.$fEnumFloat_$csucc_entry, @object
GHC.Float.$fEnumFloat_$csucc_entry:
_c36Nm:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c36Nt
_c36Nu:
	movq $block_c36Nj_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c36Nj
_c36Nk:
	movq (%rbx),%rax
	jmp *(%rax)
_c36Nt:
	movl $GHC.Float.$fEnumFloat_$csucc_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fEnumFloat_$csucc_entry, .-GHC.Float.$fEnumFloat_$csucc_entry


==================== Asm code ====================
2018-03-16 15:57:33.365442931 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fEnumFloat_$csucc_info
.type GHC.Float.$fEnumFloat_$csucc_info, @object
GHC.Float.$fEnumFloat_$csucc_info:
	.quad	GHC.Float.$fEnumFloat_$csucc_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:33.366198386 UTC

.section .text
.align 8
_c36Nj:
_c36Nj:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36Nx
_c36Nw:
	movss 7(%rbx),%xmm0
	addss _n36NG(%rip),%xmm0
	movq $GHC.Types.F#_con_info,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36Nx:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c36Nj, .-_c36Nj
.section .rodata
.align 8
.align 4
_n36NG:
	.byte	0
	.byte	0
	.byte	128
	.byte	63


==================== Asm code ====================
2018-03-16 15:57:33.366854737 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36Nj_info:
	.quad	_c36Nj
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.370158967 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fEnumFloat_$cpred_closure
.type GHC.Float.$fEnumFloat_$cpred_closure, @object
GHC.Float.$fEnumFloat_$cpred_closure:
	.quad	GHC.Float.$fEnumFloat_$cpred_info


==================== Asm code ====================
2018-03-16 15:57:33.371031654 UTC

.section .text
.align 8
.globl GHC.Float.$fEnumFloat_$cpred_entry
.type GHC.Float.$fEnumFloat_$cpred_entry, @object
GHC.Float.$fEnumFloat_$cpred_entry:
_c36NS:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c36NZ
_c36O0:
	movq $block_c36NP_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c36NP
_c36NQ:
	movq (%rbx),%rax
	jmp *(%rax)
_c36NZ:
	movl $GHC.Float.$fEnumFloat_$cpred_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fEnumFloat_$cpred_entry, .-GHC.Float.$fEnumFloat_$cpred_entry


==================== Asm code ====================
2018-03-16 15:57:33.371690187 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fEnumFloat_$cpred_info
.type GHC.Float.$fEnumFloat_$cpred_info, @object
GHC.Float.$fEnumFloat_$cpred_info:
	.quad	GHC.Float.$fEnumFloat_$cpred_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:33.372462271 UTC

.section .text
.align 8
_c36NP:
_c36NP:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36O3
_c36O2:
	movss 7(%rbx),%xmm0
	subss _n36Oc(%rip),%xmm0
	movq $GHC.Types.F#_con_info,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36O3:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c36NP, .-_c36NP
.section .rodata
.align 8
.align 4
_n36Oc:
	.byte	0
	.byte	0
	.byte	128
	.byte	63


==================== Asm code ====================
2018-03-16 15:57:33.373148859 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36NP_info:
	.quad	_c36NP
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.375559402 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloat_closure
.type GHC.Float.$fRealFloat_closure, @object
GHC.Float.$fRealFloat_closure:
	.quad	GHC.Real.C:Real_con_info
	.quad	GHC.Float.$fNumFloat_closure+1
	.quad	GHC.Classes.$fOrdFloat_closure
	.quad	GHC.Float.$fRealFloat_$ctoRational_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:33.377482612 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFracFloat_closure
.type GHC.Float.$fRealFracFloat_closure, @object
GHC.Float.$fRealFracFloat_closure:
	.quad	GHC.Real.C:RealFrac_con_info
	.quad	GHC.Float.$fRealFloat_closure+1
	.quad	GHC.Float.$fFractionalFloat_closure+1
	.quad	GHC.Float.$fRealFracFloat_$cproperFraction_closure+2
	.quad	GHC.Float.$fRealFracFloat_$ctruncate_closure+2
	.quad	GHC.Float.$fRealFracFloat_$cround_closure+2
	.quad	GHC.Float.$fRealFracFloat_$cceiling_closure+2
	.quad	GHC.Float.$fRealFracFloat_$cfloor_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:33.380842191 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fEnumDouble_$csucc_closure
.type GHC.Float.$fEnumDouble_$csucc_closure, @object
GHC.Float.$fEnumDouble_$csucc_closure:
	.quad	GHC.Float.$fEnumDouble_$csucc_info


==================== Asm code ====================
2018-03-16 15:57:33.38174287 UTC

.section .text
.align 8
.globl GHC.Float.$fEnumDouble_$csucc_entry
.type GHC.Float.$fEnumDouble_$csucc_entry, @object
GHC.Float.$fEnumDouble_$csucc_entry:
_c36Oq:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c36Ox
_c36Oy:
	movq $block_c36On_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c36On
_c36Oo:
	movq (%rbx),%rax
	jmp *(%rax)
_c36Ox:
	movl $GHC.Float.$fEnumDouble_$csucc_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fEnumDouble_$csucc_entry, .-GHC.Float.$fEnumDouble_$csucc_entry


==================== Asm code ====================
2018-03-16 15:57:33.382413612 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fEnumDouble_$csucc_info
.type GHC.Float.$fEnumDouble_$csucc_info, @object
GHC.Float.$fEnumDouble_$csucc_info:
	.quad	GHC.Float.$fEnumDouble_$csucc_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:33.383211679 UTC

.section .text
.align 8
_c36On:
_c36On:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36OB
_c36OA:
	movsd 7(%rbx),%xmm0
	addsd _n36OK(%rip),%xmm0
	movq $GHC.Types.D#_con_info,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36OB:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c36On, .-_c36On
.section .rodata
.align 8
.align 8
_n36OK:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	240
	.byte	63


==================== Asm code ====================
2018-03-16 15:57:33.383889122 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36On_info:
	.quad	_c36On
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.387726369 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fEnumDouble_$cpred_closure
.type GHC.Float.$fEnumDouble_$cpred_closure, @object
GHC.Float.$fEnumDouble_$cpred_closure:
	.quad	GHC.Float.$fEnumDouble_$cpred_info


==================== Asm code ====================
2018-03-16 15:57:33.388549094 UTC

.section .text
.align 8
.globl GHC.Float.$fEnumDouble_$cpred_entry
.type GHC.Float.$fEnumDouble_$cpred_entry, @object
GHC.Float.$fEnumDouble_$cpred_entry:
_c36OW:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c36P3
_c36P4:
	movq $block_c36OT_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c36OT
_c36OU:
	movq (%rbx),%rax
	jmp *(%rax)
_c36P3:
	movl $GHC.Float.$fEnumDouble_$cpred_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fEnumDouble_$cpred_entry, .-GHC.Float.$fEnumDouble_$cpred_entry


==================== Asm code ====================
2018-03-16 15:57:33.38923206 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fEnumDouble_$cpred_info
.type GHC.Float.$fEnumDouble_$cpred_info, @object
GHC.Float.$fEnumDouble_$cpred_info:
	.quad	GHC.Float.$fEnumDouble_$cpred_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:33.390348321 UTC

.section .text
.align 8
_c36OT:
_c36OT:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36P7
_c36P6:
	movsd 7(%rbx),%xmm0
	subsd _n36Pg(%rip),%xmm0
	movq $GHC.Types.D#_con_info,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36P7:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c36OT, .-_c36OT
.section .rodata
.align 8
.align 8
_n36Pg:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	240
	.byte	63


==================== Asm code ====================
2018-03-16 15:57:33.391006165 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36OT_info:
	.quad	_c36OT
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.392873014 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealDouble_closure
.type GHC.Float.$fRealDouble_closure, @object
GHC.Float.$fRealDouble_closure:
	.quad	GHC.Real.C:Real_con_info
	.quad	GHC.Float.$fNumDouble_closure+1
	.quad	GHC.Classes.$fOrdDouble_closure
	.quad	GHC.Float.$fRealDouble_$ctoRational_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:33.394734551 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFracDouble_closure
.type GHC.Float.$fRealFracDouble_closure, @object
GHC.Float.$fRealFracDouble_closure:
	.quad	GHC.Real.C:RealFrac_con_info
	.quad	GHC.Float.$fRealDouble_closure+1
	.quad	GHC.Float.$fFractionalDouble_closure+1
	.quad	GHC.Float.$fRealFracDouble_$cproperFraction_closure+2
	.quad	GHC.Float.$fRealFracDouble_$ctruncate_closure+2
	.quad	GHC.Float.$fRealFracDouble_$cround_closure+2
	.quad	GHC.Float.$fRealFracDouble_$cceiling_closure+2
	.quad	GHC.Float.$fRealFracDouble_$cfloor_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:33.397973368 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble_$cisNaN_closure
.type GHC.Float.$fRealFloatDouble_$cisNaN_closure, @object
GHC.Float.$fRealFloatDouble_$cisNaN_closure:
	.quad	GHC.Float.$fRealFloatDouble_$cisNaN_info


==================== Asm code ====================
2018-03-16 15:57:33.398820256 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFloatDouble_$cisNaN_entry
.type GHC.Float.$fRealFloatDouble_$cisNaN_entry, @object
GHC.Float.$fRealFloatDouble_$cisNaN_entry:
_c36Pu:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c36Pv
_c36Pw:
	movq $block_c36Pr_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c36Pr
_c36Ps:
	movq (%rbx),%rax
	jmp *(%rax)
_c36Pv:
	movl $GHC.Float.$fRealFloatDouble_$cisNaN_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFloatDouble_$cisNaN_entry, .-GHC.Float.$fRealFloatDouble_$cisNaN_entry


==================== Asm code ====================
2018-03-16 15:57:33.399461406 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble_$cisNaN_info
.type GHC.Float.$fRealFloatDouble_$cisNaN_info, @object
GHC.Float.$fRealFloatDouble_$cisNaN_info:
	.quad	GHC.Float.$fRealFloatDouble_$cisNaN_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:33.40024816 UTC

.section .text
.align 8
_c36Pr:
_c36Pr:
	subq $8,%rsp
	movsd 7(%rbx),%xmm0
	movl $1,%eax
	call isDoubleNaN
	addq $8,%rsp
	testq %rax,%rax
	je _c36PF
_c36PE:
	movl $GHC.Types.True_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36PF:
	movl $GHC.Types.False_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c36Pr, .-_c36Pr


==================== Asm code ====================
2018-03-16 15:57:33.400861898 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36Pr_info:
	.quad	_c36Pr
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.404193082 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble_$cisInfinite_closure
.type GHC.Float.$fRealFloatDouble_$cisInfinite_closure, @object
GHC.Float.$fRealFloatDouble_$cisInfinite_closure:
	.quad	GHC.Float.$fRealFloatDouble_$cisInfinite_info


==================== Asm code ====================
2018-03-16 15:57:33.40500784 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFloatDouble_$cisInfinite_entry
.type GHC.Float.$fRealFloatDouble_$cisInfinite_entry, @object
GHC.Float.$fRealFloatDouble_$cisInfinite_entry:
_c36PZ:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c36Q0
_c36Q1:
	movq $block_c36PW_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c36PW
_c36PX:
	movq (%rbx),%rax
	jmp *(%rax)
_c36Q0:
	movl $GHC.Float.$fRealFloatDouble_$cisInfinite_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFloatDouble_$cisInfinite_entry, .-GHC.Float.$fRealFloatDouble_$cisInfinite_entry


==================== Asm code ====================
2018-03-16 15:57:33.405778038 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble_$cisInfinite_info
.type GHC.Float.$fRealFloatDouble_$cisInfinite_info, @object
GHC.Float.$fRealFloatDouble_$cisInfinite_info:
	.quad	GHC.Float.$fRealFloatDouble_$cisInfinite_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:33.406518933 UTC

.section .text
.align 8
_c36PW:
_c36PW:
	subq $8,%rsp
	movsd 7(%rbx),%xmm0
	movl $1,%eax
	call isDoubleInfinite
	addq $8,%rsp
	testq %rax,%rax
	je _c36Qa
_c36Q9:
	movl $GHC.Types.True_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36Qa:
	movl $GHC.Types.False_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c36PW, .-_c36PW


==================== Asm code ====================
2018-03-16 15:57:33.40718344 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36PW_info:
	.quad	_c36PW
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.410386762 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble_$cisDenormalized_closure
.type GHC.Float.$fRealFloatDouble_$cisDenormalized_closure, @object
GHC.Float.$fRealFloatDouble_$cisDenormalized_closure:
	.quad	GHC.Float.$fRealFloatDouble_$cisDenormalized_info


==================== Asm code ====================
2018-03-16 15:57:33.411243848 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFloatDouble_$cisDenormalized_entry
.type GHC.Float.$fRealFloatDouble_$cisDenormalized_entry, @object
GHC.Float.$fRealFloatDouble_$cisDenormalized_entry:
_c36Qu:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c36Qv
_c36Qw:
	movq $block_c36Qr_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c36Qr
_c36Qs:
	movq (%rbx),%rax
	jmp *(%rax)
_c36Qv:
	movl $GHC.Float.$fRealFloatDouble_$cisDenormalized_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFloatDouble_$cisDenormalized_entry, .-GHC.Float.$fRealFloatDouble_$cisDenormalized_entry


==================== Asm code ====================
2018-03-16 15:57:33.411957745 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble_$cisDenormalized_info
.type GHC.Float.$fRealFloatDouble_$cisDenormalized_info, @object
GHC.Float.$fRealFloatDouble_$cisDenormalized_info:
	.quad	GHC.Float.$fRealFloatDouble_$cisDenormalized_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:33.412767697 UTC

.section .text
.align 8
_c36Qr:
_c36Qr:
	subq $8,%rsp
	movsd 7(%rbx),%xmm0
	movl $1,%eax
	call isDoubleDenormalized
	addq $8,%rsp
	testq %rax,%rax
	je _c36QF
_c36QE:
	movl $GHC.Types.True_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36QF:
	movl $GHC.Types.False_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c36Qr, .-_c36Qr


==================== Asm code ====================
2018-03-16 15:57:33.413560785 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36Qr_info:
	.quad	_c36Qr
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.417441412 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble_$cisNegativeZero_closure
.type GHC.Float.$fRealFloatDouble_$cisNegativeZero_closure, @object
GHC.Float.$fRealFloatDouble_$cisNegativeZero_closure:
	.quad	GHC.Float.$fRealFloatDouble_$cisNegativeZero_info


==================== Asm code ====================
2018-03-16 15:57:33.418350758 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFloatDouble_$cisNegativeZero_entry
.type GHC.Float.$fRealFloatDouble_$cisNegativeZero_entry, @object
GHC.Float.$fRealFloatDouble_$cisNegativeZero_entry:
_c36QZ:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c36R0
_c36R1:
	movq $block_c36QW_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c36QW
_c36QX:
	movq (%rbx),%rax
	jmp *(%rax)
_c36R0:
	movl $GHC.Float.$fRealFloatDouble_$cisNegativeZero_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFloatDouble_$cisNegativeZero_entry, .-GHC.Float.$fRealFloatDouble_$cisNegativeZero_entry


==================== Asm code ====================
2018-03-16 15:57:33.419055693 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble_$cisNegativeZero_info
.type GHC.Float.$fRealFloatDouble_$cisNegativeZero_info, @object
GHC.Float.$fRealFloatDouble_$cisNegativeZero_info:
	.quad	GHC.Float.$fRealFloatDouble_$cisNegativeZero_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:33.419840443 UTC

.section .text
.align 8
_c36QW:
_c36QW:
	subq $8,%rsp
	movsd 7(%rbx),%xmm0
	movl $1,%eax
	call isDoubleNegativeZero
	addq $8,%rsp
	testq %rax,%rax
	je _c36Ra
_c36R9:
	movl $GHC.Types.True_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36Ra:
	movl $GHC.Types.False_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c36QW, .-_c36QW


==================== Asm code ====================
2018-03-16 15:57:33.420509584 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36QW_info:
	.quad	_c36QW
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.423976775 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat_$cisNaN_closure
.type GHC.Float.$fRealFloatFloat_$cisNaN_closure, @object
GHC.Float.$fRealFloatFloat_$cisNaN_closure:
	.quad	GHC.Float.$fRealFloatFloat_$cisNaN_info


==================== Asm code ====================
2018-03-16 15:57:33.424797292 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFloatFloat_$cisNaN_entry
.type GHC.Float.$fRealFloatFloat_$cisNaN_entry, @object
GHC.Float.$fRealFloatFloat_$cisNaN_entry:
_c36Ru:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c36Rv
_c36Rw:
	movq $block_c36Rr_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c36Rr
_c36Rs:
	movq (%rbx),%rax
	jmp *(%rax)
_c36Rv:
	movl $GHC.Float.$fRealFloatFloat_$cisNaN_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFloatFloat_$cisNaN_entry, .-GHC.Float.$fRealFloatFloat_$cisNaN_entry


==================== Asm code ====================
2018-03-16 15:57:33.425520977 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat_$cisNaN_info
.type GHC.Float.$fRealFloatFloat_$cisNaN_info, @object
GHC.Float.$fRealFloatFloat_$cisNaN_info:
	.quad	GHC.Float.$fRealFloatFloat_$cisNaN_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:33.426307647 UTC

.section .text
.align 8
_c36Rr:
_c36Rr:
	subq $8,%rsp
	movss 7(%rbx),%xmm0
	movl $1,%eax
	call isFloatNaN
	addq $8,%rsp
	testq %rax,%rax
	je _c36RF
_c36RE:
	movl $GHC.Types.True_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36RF:
	movl $GHC.Types.False_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c36Rr, .-_c36Rr


==================== Asm code ====================
2018-03-16 15:57:33.426959893 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36Rr_info:
	.quad	_c36Rr
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.43019849 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat_$cisInfinite_closure
.type GHC.Float.$fRealFloatFloat_$cisInfinite_closure, @object
GHC.Float.$fRealFloatFloat_$cisInfinite_closure:
	.quad	GHC.Float.$fRealFloatFloat_$cisInfinite_info


==================== Asm code ====================
2018-03-16 15:57:33.431071029 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFloatFloat_$cisInfinite_entry
.type GHC.Float.$fRealFloatFloat_$cisInfinite_entry, @object
GHC.Float.$fRealFloatFloat_$cisInfinite_entry:
_c36RZ:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c36S0
_c36S1:
	movq $block_c36RW_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c36RW
_c36RX:
	movq (%rbx),%rax
	jmp *(%rax)
_c36S0:
	movl $GHC.Float.$fRealFloatFloat_$cisInfinite_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFloatFloat_$cisInfinite_entry, .-GHC.Float.$fRealFloatFloat_$cisInfinite_entry


==================== Asm code ====================
2018-03-16 15:57:33.431762938 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat_$cisInfinite_info
.type GHC.Float.$fRealFloatFloat_$cisInfinite_info, @object
GHC.Float.$fRealFloatFloat_$cisInfinite_info:
	.quad	GHC.Float.$fRealFloatFloat_$cisInfinite_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:33.432564958 UTC

.section .text
.align 8
_c36RW:
_c36RW:
	subq $8,%rsp
	movss 7(%rbx),%xmm0
	movl $1,%eax
	call isFloatInfinite
	addq $8,%rsp
	testq %rax,%rax
	je _c36Sa
_c36S9:
	movl $GHC.Types.True_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36Sa:
	movl $GHC.Types.False_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c36RW, .-_c36RW


==================== Asm code ====================
2018-03-16 15:57:33.433191678 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36RW_info:
	.quad	_c36RW
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.436769555 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat_$cisDenormalized_closure
.type GHC.Float.$fRealFloatFloat_$cisDenormalized_closure, @object
GHC.Float.$fRealFloatFloat_$cisDenormalized_closure:
	.quad	GHC.Float.$fRealFloatFloat_$cisDenormalized_info


==================== Asm code ====================
2018-03-16 15:57:33.437690362 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFloatFloat_$cisDenormalized_entry
.type GHC.Float.$fRealFloatFloat_$cisDenormalized_entry, @object
GHC.Float.$fRealFloatFloat_$cisDenormalized_entry:
_c36Su:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c36Sv
_c36Sw:
	movq $block_c36Sr_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c36Sr
_c36Ss:
	movq (%rbx),%rax
	jmp *(%rax)
_c36Sv:
	movl $GHC.Float.$fRealFloatFloat_$cisDenormalized_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFloatFloat_$cisDenormalized_entry, .-GHC.Float.$fRealFloatFloat_$cisDenormalized_entry


==================== Asm code ====================
2018-03-16 15:57:33.438362111 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat_$cisDenormalized_info
.type GHC.Float.$fRealFloatFloat_$cisDenormalized_info, @object
GHC.Float.$fRealFloatFloat_$cisDenormalized_info:
	.quad	GHC.Float.$fRealFloatFloat_$cisDenormalized_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:33.439186207 UTC

.section .text
.align 8
_c36Sr:
_c36Sr:
	subq $8,%rsp
	movss 7(%rbx),%xmm0
	movl $1,%eax
	call isFloatDenormalized
	addq $8,%rsp
	testq %rax,%rax
	je _c36SF
_c36SE:
	movl $GHC.Types.True_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36SF:
	movl $GHC.Types.False_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c36Sr, .-_c36Sr


==================== Asm code ====================
2018-03-16 15:57:33.439871932 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36Sr_info:
	.quad	_c36Sr
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.44322358 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat_$cisNegativeZero_closure
.type GHC.Float.$fRealFloatFloat_$cisNegativeZero_closure, @object
GHC.Float.$fRealFloatFloat_$cisNegativeZero_closure:
	.quad	GHC.Float.$fRealFloatFloat_$cisNegativeZero_info


==================== Asm code ====================
2018-03-16 15:57:33.444151284 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFloatFloat_$cisNegativeZero_entry
.type GHC.Float.$fRealFloatFloat_$cisNegativeZero_entry, @object
GHC.Float.$fRealFloatFloat_$cisNegativeZero_entry:
_c36SZ:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c36T0
_c36T1:
	movq $block_c36SW_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c36SW
_c36SX:
	movq (%rbx),%rax
	jmp *(%rax)
_c36T0:
	movl $GHC.Float.$fRealFloatFloat_$cisNegativeZero_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFloatFloat_$cisNegativeZero_entry, .-GHC.Float.$fRealFloatFloat_$cisNegativeZero_entry


==================== Asm code ====================
2018-03-16 15:57:33.445803254 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat_$cisNegativeZero_info
.type GHC.Float.$fRealFloatFloat_$cisNegativeZero_info, @object
GHC.Float.$fRealFloatFloat_$cisNegativeZero_info:
	.quad	GHC.Float.$fRealFloatFloat_$cisNegativeZero_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:33.446694869 UTC

.section .text
.align 8
_c36SW:
_c36SW:
	subq $8,%rsp
	movss 7(%rbx),%xmm0
	movl $1,%eax
	call isFloatNegativeZero
	addq $8,%rsp
	testq %rax,%rax
	je _c36Ta
_c36T9:
	movl $GHC.Types.True_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36Ta:
	movl $GHC.Types.False_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c36SW, .-_c36SW


==================== Asm code ====================
2018-03-16 15:57:33.447342099 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36SW_info:
	.quad	_c36SW
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.449104332 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl6_r2UqE_bytes:
	.asciz "Int"


==================== Asm code ====================
2018-03-16 15:57:33.451914584 UTC

.section .data
.align 8
.align 1
lvl7_r2UqF_closure:
	.quad	lvl7_r2UqF_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:33.452882693 UTC

.section .text
.align 8
lvl7_r2UqF_entry:
_c36Tu:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c36Tv
_c36Tw:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c36Tt
_c36Ts:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl6_r2UqE_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c36Tv:
	jmp *-16(%r13)
_c36Tt:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl7_r2UqF_entry, .-lvl7_r2UqF_entry


==================== Asm code ====================
2018-03-16 15:57:33.453624283 UTC

.section .data.rel.ro
.align 8
.align 1
lvl7_r2UqF_info:
	.quad	lvl7_r2UqF_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:57:33.456429285 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.expts2_closure
.type GHC.Float.expts2_closure, @object
GHC.Float.expts2_closure:
	.quad	GHC.Float.expts2_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:33.45751958 UTC

.section .text
.align 8
.globl GHC.Float.expts2_entry
.type GHC.Float.expts2_entry, @object
GHC.Float.expts2_entry:
_c36TJ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36TN
_c36TM:
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %r14,(%r12)
	movl $lvl7_r2UqF_closure,%r9d
	leaq -7(%r12),%r8
	movl $GHC.Float.maxExpt_closure+1,%edi
	movl $GHC.Float.minExpt_closure+1,%esi
	movl $GHC.Show.$fShowInt_closure,%r14d
	jmp GHC.Arr.$windexError_entry
_c36TN:
	movq $16,904(%r13)
	movl $GHC.Float.expts2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.expts2_entry, .-GHC.Float.expts2_entry


==================== Asm code ====================
2018-03-16 15:57:33.458187624 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.expts2_info
.type GHC.Float.expts2_info, @object
GHC.Float.expts2_info:
	.quad	GHC.Float.expts2_entry
	.quad	0
	.quad	30064771086
	.quad	4294967300
	.quad	S2VLN_srt+696


==================== Asm code ====================
2018-03-16 15:57:33.464600169 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.expts1_closure
.type GHC.Float.expts1_closure, @object
GHC.Float.expts1_closure:
	.quad	GHC.Float.expts1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:33.465570927 UTC

.section .text
.align 8
sat_s2V3I_entry:
_c36Um:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c36Un
_c36Ut:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	testq %rax,%rax
	jge _c36Uk
_c36Ul:
	movl $GHC.Real.^1_closure,%ebx
	addq $-16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c36Us:
	movl $GHC.Real.$fEnumRatio1_closure,%ebx
	addq $-16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c36Uk:
	testq %rax,%rax
	je _c36Us
_c36Ur:
	movq %rax,%rsi
	movl $GHC.Float.$fRealFloatDouble5_closure,%r14d
	addq $-16,%rbp
	jmp GHC.Real.$wf_entry
_c36Un:
	jmp *-16(%r13)
	.size sat_s2V3I_entry, .-sat_s2V3I_entry


==================== Asm code ====================
2018-03-16 15:57:33.466347237 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2V3I_info:
	.quad	sat_s2V3I_entry
	.quad	4294967296
	.quad	70398808948753
	.quad	S2VLN_srt+440


==================== Asm code ====================
2018-03-16 15:57:33.46695605 UTC

.section .data.rel.ro
.align 8
.align 1
u36V1_srtd:
	.quad	S2VLN_srt+440
	.quad	37
	.quad	111669166087


==================== Asm code ====================
2018-03-16 15:57:33.467665844 UTC

.section .text
.align 8
.globl GHC.Float.expts1_entry
.type GHC.Float.expts1_entry, @object
GHC.Float.expts1_entry:
_c36Uu:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c36Uv
_c36Uw:
	movq $block_c36TW_info,-8(%rbp)
	movl $GHC.Arr.arrEleBottom_closure,%r14d
	movl $1101,%ebx
	addq $-8,%rbp
	jmp stg_newArray#
_c36Uv:
	movl $GHC.Float.expts1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.expts1_entry, .-GHC.Float.expts1_entry


==================== Asm code ====================
2018-03-16 15:57:33.46833622 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.expts1_info
.type GHC.Float.expts1_info, @object
GHC.Float.expts1_info:
	.quad	GHC.Float.expts1_entry
	.quad	0
	.quad	-4294967282
	.quad	4294967299
	.quad	u36V1_srtd


==================== Asm code ====================
2018-03-16 15:57:33.468929386 UTC

.section .data.rel.ro
.align 8
.align 1
u36V2_srtd:
	.quad	S2VLN_srt+440
	.quad	34
	.quad	8589950983


==================== Asm code ====================
2018-03-16 15:57:33.469893425 UTC

.section .text
.align 8
_c36TW:
_c36TW:
	movq $0,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp _c36U3
	.size _c36TW, .-_c36TW


==================== Asm code ====================
2018-03-16 15:57:33.47048021 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36TW_info:
	.quad	_c36TW
	.quad	0
	.quad	-4294967266
	.quad	u36V2_srtd


==================== Asm code ====================
2018-03-16 15:57:33.471453063 UTC

.section .text
.align 8
_c36U3:
_c36U3:
	addq $24,%r12
	movq (%rbp),%rax
	cmpq 856(%r13),%r12
	ja _c36UH
_c36UG:
	cmpq $0,%rax
	jl _c36UL
_c36UR:
	cmpq $1100,%rax
	jg _c36UL
_c36UQ:
	movq $sat_s2V3I_info,-16(%r12)
	movq %rax,(%r12)
	movq 8(%rbp),%rbx
	leaq -16(%r12),%rcx
	movq %rcx,24(%rbx,%rax,8)
	movq $stg_MUT_ARR_PTRS_DIRTY_info,(%rbx)
	leaq 24(%rbx),%rcx
	movq %rax,%rdx
	shrq $7,%rdx
	movq 8(%rbx),%rbx
	shlq $3,%rbx
	addq %rdx,%rbx
	movb $1,(%rcx,%rbx,1)
	cmpq $1100,%rax
	je _c36Uz
_c36UO:
	incq %rax
	movq %rax,(%rbp)
	jmp _c36U3
_c36UL:
	addq $-24,%r12
	movq %rax,%r14
	addq $16,%rbp
	jmp GHC.Float.expts2_entry
_c36UH:
	movq $24,904(%r13)
	movq $block_c36U2_info,(%rbp)
	movq %rax,%rbx
	jmp stg_gc_unbx_r1
	.size _c36U3, .-_c36U3


==================== Asm code ====================
2018-03-16 15:57:33.472265144 UTC

.section .data.rel.ro
.align 8
.align 1
u36V3_srtd:
	.quad	S2VLN_srt+440
	.quad	34
	.quad	8589950983


==================== Asm code ====================
2018-03-16 15:57:33.472875128 UTC

.section .text
.align 8
_c36U2:
_c36U2:
	movq %rbx,(%rbp)
	jmp _c36U3
	.size _c36U2, .-_c36U2


==================== Asm code ====================
2018-03-16 15:57:33.473516726 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36U2_info:
	.quad	_c36U2
	.quad	1
	.quad	-4294967266
	.quad	u36V3_srtd


==================== Asm code ====================
2018-03-16 15:57:33.474371899 UTC

.section .text
.align 8
_c36Uz:
_c36Uz:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c36UE
_c36UD:
	movq 8(%rbp),%rax
	movq $stg_MUT_ARR_PTRS_FROZEN0_info,(%rax)
	movq $GHC.Arr.Array_con_info,-32(%r12)
	movq $GHC.Float.minExpt_closure+1,-24(%r12)
	movq $GHC.Float.maxExpt_closure+1,-16(%r12)
	movq %rax,-8(%r12)
	movq $1101,(%r12)
	leaq -31(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36UE:
	movq $40,904(%r13)
	movq $block_c36Uz_info,(%rbp)
	jmp stg_gc_noregs
	.size _c36Uz, .-_c36Uz


==================== Asm code ====================
2018-03-16 15:57:33.475691351 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36Uz_info:
	.quad	_c36Uz
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.478997626 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.expts_closure
.type GHC.Float.expts_closure, @object
GHC.Float.expts_closure:
	.quad	GHC.Float.expts_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:33.479907595 UTC

.section .text
.align 8
.globl GHC.Float.expts_entry
.type GHC.Float.expts_entry, @object
GHC.Float.expts_entry:
_c36VI:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c36VJ
_c36VK:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c36VF
_c36VE:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq $block_c36VG_info,-24(%rbp)
	addq $-24,%rbp
	jmp GHC.Float.expts1_entry
_c36VJ:
	jmp *-16(%r13)
_c36VF:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Float.expts_entry, .-GHC.Float.expts_entry


==================== Asm code ====================
2018-03-16 15:57:33.480612607 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.expts_info
.type GHC.Float.expts_info, @object
GHC.Float.expts_info:
	.quad	GHC.Float.expts_entry
	.quad	0
	.quad	4294967317
	.quad	S2VLN_srt+728


==================== Asm code ====================
2018-03-16 15:57:33.481311738 UTC

.section .text
.align 8
_c36VG:
_c36VG:
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c36VG, .-_c36VG


==================== Asm code ====================
2018-03-16 15:57:33.481878254 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36VG_info:
	.quad	_c36VG
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.483629421 UTC

.section .data
.align 8
.align 1
sat_s2V3P_closure:
	.quad	GHC.Types.I#_con_info
	.quad	10


==================== Asm code ====================
2018-03-16 15:57:33.485755383 UTC

.section .data
.align 8
.align 1
sat_s2V3Q_closure:
	.quad	:_con_info
	.quad	sat_s2V3P_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:33.488521408 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.expts4_closure
.type GHC.Float.expts4_closure, @object
GHC.Float.expts4_closure:
	.quad	GHC.Float.expts4_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:33.489466967 UTC

.section .text
.align 8
.globl GHC.Float.expts4_entry
.type GHC.Float.expts4_entry, @object
GHC.Float.expts4_entry:
_c36W6:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c36W7
_c36W8:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c36W5
_c36W4:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $sat_s2V3Q_closure+2,%esi
	movl $GHC.Types.True_closure+2,%r14d
	addq $-16,%rbp
	jmp GHC.Integer.Type.mkInteger_entry
_c36W7:
	jmp *-16(%r13)
_c36W5:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Float.expts4_entry, .-GHC.Float.expts4_entry


==================== Asm code ====================
2018-03-16 15:57:33.490173088 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.expts4_info
.type GHC.Float.expts4_info, @object
GHC.Float.expts4_info:
	.quad	GHC.Float.expts4_entry
	.quad	0
	.quad	4294967317
	.quad	S2VLN_srt+736


==================== Asm code ====================
2018-03-16 15:57:33.492935498 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.expts5_closure
.type GHC.Float.expts5_closure, @object
GHC.Float.expts5_closure:
	.quad	GHC.Float.expts5_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:33.493812248 UTC

.section .text
.align 8
.globl GHC.Float.expts5_entry
.type GHC.Float.expts5_entry, @object
GHC.Float.expts5_entry:
_c36Wl:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36Wp
_c36Wo:
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %r14,(%r12)
	movl $lvl7_r2UqF_closure,%r9d
	leaq -7(%r12),%r8
	movl $GHC.Float.maxExpt10_closure+1,%edi
	movl $GHC.Float.minExpt_closure+1,%esi
	movl $GHC.Show.$fShowInt_closure,%r14d
	jmp GHC.Arr.$windexError_entry
_c36Wp:
	movq $16,904(%r13)
	movl $GHC.Float.expts5_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.expts5_entry, .-GHC.Float.expts5_entry


==================== Asm code ====================
2018-03-16 15:57:33.494485381 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.expts5_info
.type GHC.Float.expts5_info, @object
GHC.Float.expts5_info:
	.quad	GHC.Float.expts5_entry
	.quad	0
	.quad	296352743438
	.quad	4294967300
	.quad	S2VLN_srt+696


==================== Asm code ====================
2018-03-16 15:57:33.50114036 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.expts3_closure
.type GHC.Float.expts3_closure, @object
GHC.Float.expts3_closure:
	.quad	GHC.Float.expts3_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:33.502163979 UTC

.section .text
.align 8
sat_s2V4c_entry:
_c36WY:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c36WZ
_c36X5:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	testq %rax,%rax
	jge _c36WW
_c36WX:
	movl $GHC.Real.^1_closure,%ebx
	addq $-16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c36X4:
	movl $GHC.Real.$fEnumRatio1_closure,%ebx
	addq $-16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c36WW:
	testq %rax,%rax
	je _c36X4
_c36X3:
	movq %rax,%rsi
	movl $GHC.Float.expts4_closure,%r14d
	addq $-16,%rbp
	jmp GHC.Real.$wf_entry
_c36WZ:
	jmp *-16(%r13)
	.size sat_s2V4c_entry, .-sat_s2V4c_entry


==================== Asm code ====================
2018-03-16 15:57:33.502929267 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2V4c_info:
	.quad	sat_s2V4c_entry
	.quad	4294967296
	.quad	64424509457
	.quad	S2VLN_srt+752


==================== Asm code ====================
2018-03-16 15:57:33.503720089 UTC

.section .text
.align 8
.globl GHC.Float.expts3_entry
.type GHC.Float.expts3_entry, @object
GHC.Float.expts3_entry:
_c36X6:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c36X7
_c36X8:
	movq $block_c36Wy_info,-8(%rbp)
	movl $GHC.Arr.arrEleBottom_closure,%r14d
	movl $325,%ebx
	addq $-8,%rbp
	jmp stg_newArray#
_c36X7:
	movl $GHC.Float.expts3_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.expts3_entry, .-GHC.Float.expts3_entry


==================== Asm code ====================
2018-03-16 15:57:33.504414416 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.expts3_info
.type GHC.Float.expts3_info, @object
GHC.Float.expts3_info:
	.quad	GHC.Float.expts3_entry
	.quad	0
	.quad	2168958484494
	.quad	4294967299
	.quad	S2VLN_srt+720


==================== Asm code ====================
2018-03-16 15:57:33.505121391 UTC

.section .text
.align 8
_c36Wy:
_c36Wy:
	movq $0,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp _c36WF
	.size _c36Wy, .-_c36Wy


==================== Asm code ====================
2018-03-16 15:57:33.506424515 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36Wy_info:
	.quad	_c36Wy
	.quad	0
	.quad	133143986206
	.quad	S2VLN_srt+744


==================== Asm code ====================
2018-03-16 15:57:33.507405418 UTC

.section .text
.align 8
_c36WF:
_c36WF:
	addq $24,%r12
	movq (%rbp),%rax
	cmpq 856(%r13),%r12
	ja _c36Xj
_c36Xi:
	cmpq $0,%rax
	jl _c36Xn
_c36Xt:
	cmpq $324,%rax
	jg _c36Xn
_c36Xs:
	movq $sat_s2V4c_info,-16(%r12)
	movq %rax,(%r12)
	movq 8(%rbp),%rbx
	leaq -16(%r12),%rcx
	movq %rcx,24(%rbx,%rax,8)
	movq $stg_MUT_ARR_PTRS_DIRTY_info,(%rbx)
	leaq 24(%rbx),%rcx
	movq %rax,%rdx
	shrq $7,%rdx
	movq 8(%rbx),%rbx
	shlq $3,%rbx
	addq %rdx,%rbx
	movb $1,(%rcx,%rbx,1)
	cmpq $324,%rax
	je _c36Xb
_c36Xq:
	incq %rax
	movq %rax,(%rbp)
	jmp _c36WF
_c36Xn:
	addq $-24,%r12
	movq %rax,%r14
	addq $16,%rbp
	jmp GHC.Float.expts5_entry
_c36Xj:
	movq $24,904(%r13)
	movq $block_c36WE_info,(%rbp)
	movq %rax,%rbx
	jmp stg_gc_unbx_r1
	.size _c36WF, .-_c36WF


==================== Asm code ====================
2018-03-16 15:57:33.50817526 UTC

.section .text
.align 8
_c36WE:
_c36WE:
	movq %rbx,(%rbp)
	jmp _c36WF
	.size _c36WE, .-_c36WE


==================== Asm code ====================
2018-03-16 15:57:33.508710212 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36WE_info:
	.quad	_c36WE
	.quad	1
	.quad	133143986206
	.quad	S2VLN_srt+744


==================== Asm code ====================
2018-03-16 15:57:33.509879573 UTC

.section .text
.align 8
_c36Xb:
_c36Xb:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c36Xg
_c36Xf:
	movq 8(%rbp),%rax
	movq $stg_MUT_ARR_PTRS_FROZEN0_info,(%rax)
	movq $GHC.Arr.Array_con_info,-32(%r12)
	movq $GHC.Float.minExpt_closure+1,-24(%r12)
	movq $GHC.Float.maxExpt10_closure+1,-16(%r12)
	movq %rax,-8(%r12)
	movq $325,(%r12)
	leaq -31(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36Xg:
	movq $40,904(%r13)
	movq $block_c36Xb_info,(%rbp)
	jmp stg_gc_noregs
	.size _c36Xb, .-_c36Xb


==================== Asm code ====================
2018-03-16 15:57:33.510537754 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36Xb_info:
	.quad	_c36Xb
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.513774542 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.expts10_closure
.type GHC.Float.expts10_closure, @object
GHC.Float.expts10_closure:
	.quad	GHC.Float.expts10_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:33.514751071 UTC

.section .text
.align 8
.globl GHC.Float.expts10_entry
.type GHC.Float.expts10_entry, @object
GHC.Float.expts10_entry:
_c36Ye:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c36Yf
_c36Yg:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c36Yb
_c36Ya:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq $block_c36Yc_info,-24(%rbp)
	addq $-24,%rbp
	jmp GHC.Float.expts3_entry
_c36Yf:
	jmp *-16(%r13)
_c36Yb:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Float.expts10_entry, .-GHC.Float.expts10_entry


==================== Asm code ====================
2018-03-16 15:57:33.51551982 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.expts10_info
.type GHC.Float.expts10_info, @object
GHC.Float.expts10_info:
	.quad	GHC.Float.expts10_entry
	.quad	0
	.quad	4294967317
	.quad	S2VLN_srt+784


==================== Asm code ====================
2018-03-16 15:57:33.516198493 UTC

.section .text
.align 8
_c36Yc:
_c36Yc:
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c36Yc, .-_c36Yc


==================== Asm code ====================
2018-03-16 15:57:33.516778484 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36Yc_info:
	.quad	_c36Yc
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.521740571 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$wintegerLogBase_closure
.type GHC.Float.$wintegerLogBase_closure, @object
GHC.Float.$wintegerLogBase_closure:
	.quad	GHC.Float.$wintegerLogBase_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:33.522293838 UTC

.section .data.rel.ro
.align 8
.align 1
u36Zb_srtd:
	.quad	S2VLN_srt+64
	.quad	93
	.quad	2305843009213693953
	.quad	402653184


==================== Asm code ====================
2018-03-16 15:57:33.523194939 UTC

.section .text
.align 8
.globl GHC.Float.$wintegerLogBase_entry
.type GHC.Float.$wintegerLogBase_entry, @object
GHC.Float.$wintegerLogBase_entry:
_c36YD:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c36YE
_c36YF:
	movq $block_c36Yy_info,-24(%rbp)
	movq %rsi,%rax
	movq %r14,%rsi
	movq %r14,%rbx
	movq %rax,%r14
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Integer.Type.ltInteger#_entry
_c36YE:
	movl $GHC.Float.$wintegerLogBase_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$wintegerLogBase_entry, .-GHC.Float.$wintegerLogBase_entry


==================== Asm code ====================
2018-03-16 15:57:33.523886269 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$wintegerLogBase_info
.type GHC.Float.$wintegerLogBase_info, @object
GHC.Float.$wintegerLogBase_info:
	.quad	GHC.Float.$wintegerLogBase_entry
	.quad	0
	.quad	-4294967282
	.quad	8589934607
	.quad	u36Zb_srtd


==================== Asm code ====================
2018-03-16 15:57:33.524472914 UTC

.section .data.rel.ro
.align 8
.align 1
u36Zc_srtd:
	.quad	S2VLN_srt+64
	.quad	92
	.quad	2305843009213693953
	.quad	134217728


==================== Asm code ====================
2018-03-16 15:57:33.525626852 UTC

.section .text
.align 8
_c36Yy:
_c36Yy:
	cmpq $1,%rbx
	je _c36YC
_c36YB:
	movq $block_c36YI_info,(%rbp)
	movl $GHC.Float.$fRealFloatDouble5_closure,%esi
	movq 8(%rbp),%r14
	jmp GHC.Integer.Type.eqInteger#_entry
_c36YC:
	xorl %ebx,%ebx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c36Yy, .-_c36Yy


==================== Asm code ====================
2018-03-16 15:57:33.526278684 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36Yy_info:
	.quad	_c36Yy
	.quad	2
	.quad	-4294967266
	.quad	u36Zc_srtd


==================== Asm code ====================
2018-03-16 15:57:33.526863274 UTC

.section .data.rel.ro
.align 8
.align 1
u36Zd_srtd:
	.quad	S2VLN_srt+64
	.quad	92
	.quad	1
	.quad	134217728


==================== Asm code ====================
2018-03-16 15:57:33.527737947 UTC

.section .text
.align 8
_c36YI:
_c36YI:
	movq 16(%rbp),%rax
	cmpq $1,%rbx
	je _c36YU
_c36YP:
	movq %rax,%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Integer.Logarithms.integerLogBase#_entry
_c36YU:
	movq $block_c36YS_info,16(%rbp)
	movq %rax,%rbx
	addq $16,%rbp
	testb $7,%bl
	jne _c36YS
_c36YV:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c36YI, .-_c36YI


==================== Asm code ====================
2018-03-16 15:57:33.528417226 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36YI_info:
	.quad	_c36YI
	.quad	2
	.quad	-4294967266
	.quad	u36Zd_srtd


==================== Asm code ====================
2018-03-16 15:57:33.529137324 UTC

.section .text
.align 8
_c36YS:
_c36YS:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c36Z5
_c36Z1:
	movq $-1,%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36Z5:
	movq 7(%rbx),%rsi
	xorl %r14d,%r14d
	addq $8,%rbp
	jmp GHC.Integer.Logarithms.Internals.integerLog2#_step_entry
	.size _c36YS, .-_c36YS


==================== Asm code ====================
2018-03-16 15:57:33.529805502 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36YS_info:
	.quad	_c36YS
	.quad	0
	.quad	4294967326
	.quad	S2VLN_srt+808


==================== Asm code ====================
2018-03-16 15:57:33.533080176 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.integerLogBase_closure
.type GHC.Float.integerLogBase_closure, @object
GHC.Float.integerLogBase_closure:
	.quad	GHC.Float.integerLogBase_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:33.534025642 UTC

.section .text
.align 8
.globl GHC.Float.integerLogBase_entry
.type GHC.Float.integerLogBase_entry, @object
GHC.Float.integerLogBase_entry:
_c36ZG:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c36ZK
_c36ZL:
	movq $block_c36ZE_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Float.$wintegerLogBase_entry
_c36ZK:
	movl $GHC.Float.integerLogBase_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.integerLogBase_entry, .-GHC.Float.integerLogBase_entry


==================== Asm code ====================
2018-03-16 15:57:33.53475853 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.integerLogBase_info
.type GHC.Float.integerLogBase_info, @object
GHC.Float.integerLogBase_info:
	.quad	GHC.Float.integerLogBase_entry
	.quad	0
	.quad	21474836494
	.quad	8589934607
	.quad	S2VLN_srt+800


==================== Asm code ====================
2018-03-16 15:57:33.535558442 UTC

.section .text
.align 8
_c36ZE:
_c36ZE:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c36ZO
_c36ZN:
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c36ZO:
	movq $16,904(%r13)
	jmp stg_gc_unbx_r1
	.size _c36ZE, .-_c36ZE


==================== Asm code ====================
2018-03-16 15:57:33.536893219 UTC

.section .data.rel.ro
.align 8
.align 1
block_c36ZE_info:
	.quad	_c36ZE
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.542167741 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$dmexponent_closure
.type GHC.Float.$dmexponent_closure, @object
GHC.Float.$dmexponent_closure:
	.quad	GHC.Float.$dmexponent_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:33.543069407 UTC

.section .text
.align 8
.globl GHC.Float.$dmexponent_entry
.type GHC.Float.$dmexponent_entry, @object
GHC.Float.$dmexponent_entry:
_c3704:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c3705
_c3706:
	movq $block_c3702_info,-24(%rbp)
	movq %r14,%rax
	movq $stg_ap_p_info,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rax,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-40,%rbp
	jmp GHC.Float.decodeFloat_entry
_c3705:
	movl $GHC.Float.$dmexponent_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$dmexponent_entry, .-GHC.Float.$dmexponent_entry


==================== Asm code ====================
2018-03-16 15:57:33.543802315 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$dmexponent_info
.type GHC.Float.$dmexponent_info, @object
GHC.Float.$dmexponent_info:
	.quad	GHC.Float.$dmexponent_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S2VLN_srt+824


==================== Asm code ====================
2018-03-16 15:57:33.544555743 UTC

.section .text
.align 8
_c3702:
_c3702:
	movq $block_c3709_info,-8(%rbp)
	movl $GHC.Float.rationalToDouble5_closure,%esi
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.eqInteger#_entry
	.size _c3702, .-_c3702


==================== Asm code ====================
2018-03-16 15:57:33.545147337 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3702_info:
	.quad	_c3702
	.quad	2
	.quad	4294967326
	.quad	S2VLN_srt+832


==================== Asm code ====================
2018-03-16 15:57:33.546036378 UTC

.section .text
.align 8
_c3709:
_c3709:
	cmpq $1,%rbx
	je _c370B
_c370t:
	movq 8(%rbp),%rax
	movq $block_c370e_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c370e
_c370f:
	movq (%rbx),%rax
	jmp *(%rax)
_c370B:
	movl $GHC.Float.minExpt_closure+1,%ebx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3709, .-_c3709


==================== Asm code ====================
2018-03-16 15:57:33.54673983 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3709_info:
	.quad	_c3709
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.547502563 UTC

.section .text
.align 8
_c370e:
_c370e:
	movq 8(%rbp),%rax
	movq $block_c370j_info,8(%rbp)
	movq %rax,%r14
	movq $stg_ap_p_info,-8(%rbp)
	movq 16(%rbp),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq %rax,16(%rbp)
	addq $-8,%rbp
	jmp GHC.Float.floatDigits_entry
	.size _c370e, .-_c370e


==================== Asm code ====================
2018-03-16 15:57:33.548152566 UTC

.section .data.rel.ro
.align 8
.align 1
block_c370e_info:
	.quad	_c370e
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.548922919 UTC

.section .text
.align 8
_c370j:
_c370j:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c370x
_c370w:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	addq (%rax),%rbx
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c370x:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c370j, .-_c370j


==================== Asm code ====================
2018-03-16 15:57:33.549628202 UTC

.section .data.rel.ro
.align 8
.align 1
block_c370j_info:
	.quad	_c370j
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.554892913 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$dmsignificand_closure
.type GHC.Float.$dmsignificand_closure, @object
GHC.Float.$dmsignificand_closure:
	.quad	GHC.Float.$dmsignificand_info


==================== Asm code ====================
2018-03-16 15:57:33.555783698 UTC

.section .text
.align 8
sat_s2V4M_entry:
_c371c:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c371j
_c371k:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c371a_info,-24(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	addq $-40,%rbp
	jmp GHC.Float.floatDigits_entry
_c371j:
	jmp *-16(%r13)
	.size sat_s2V4M_entry, .-sat_s2V4M_entry


==================== Asm code ====================
2018-03-16 15:57:33.556472824 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2V4M_info:
	.quad	sat_s2V4M_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:33.557737058 UTC

.section .text
.align 8
_c371a:
_c371a:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c371n
_c371m:
	movq 7(%rbx),%rax
	negq %rax
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c371n:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c371a, .-_c371a


==================== Asm code ====================
2018-03-16 15:57:33.558391634 UTC

.section .data.rel.ro
.align 8
.align 1
block_c371a_info:
	.quad	_c371a
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.559223895 UTC

.section .text
.align 8
sat_s2V4I_entry:
_c371u:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c371v
_c371w:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c371s_info,-24(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	addq $-40,%rbp
	jmp GHC.Float.decodeFloat_entry
_c371v:
	jmp *-16(%r13)
	.size sat_s2V4I_entry, .-sat_s2V4I_entry


==================== Asm code ====================
2018-03-16 15:57:33.559894339 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2V4I_info:
	.quad	sat_s2V4I_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:33.560609738 UTC

.section .text
.align 8
_c371s:
_c371s:
	movq 7(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c371s, .-_c371s


==================== Asm code ====================
2018-03-16 15:57:33.561208772 UTC

.section .data.rel.ro
.align 8
.align 1
block_c371s_info:
	.quad	_c371s
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.562154736 UTC

.section .text
.align 8
.globl GHC.Float.$dmsignificand_entry
.type GHC.Float.$dmsignificand_entry, @object
GHC.Float.$dmsignificand_entry:
_c371A:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c371B
_c371C:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c371E
_c371D:
	movq $sat_s2V4M_info,-56(%r12)
	movq %r14,-40(%r12)
	movq %rsi,-32(%r12)
	movq $sat_s2V4I_info,-24(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	movq $stg_ap_pp_info,-24(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-16(%rbp)
	leaq -56(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Float.encodeFloat_entry
_c371E:
	movq $64,904(%r13)
_c371B:
	movl $GHC.Float.$dmsignificand_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$dmsignificand_entry, .-GHC.Float.$dmsignificand_entry


==================== Asm code ====================
2018-03-16 15:57:33.562917076 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$dmsignificand_info
.type GHC.Float.$dmsignificand_info, @object
GHC.Float.$dmsignificand_info:
	.quad	GHC.Float.$dmsignificand_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:33.564830351 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble3_closure
.type GHC.Float.$fRealFloatDouble3_closure, @object
GHC.Float.$fRealFloatDouble3_closure:
	.quad	GHC.Types.I#_con_info
	.quad	-1021


==================== Asm code ====================
2018-03-16 15:57:33.567345101 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble2_closure
.type GHC.Float.$fRealFloatDouble2_closure, @object
GHC.Float.$fRealFloatDouble2_closure:
	.quad	GHC.Types.I#_con_info
	.quad	1024


==================== Asm code ====================
2018-03-16 15:57:33.569221256 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble1_closure
.type GHC.Float.$fRealFloatDouble1_closure, @object
GHC.Float.$fRealFloatDouble1_closure:
	.quad	(,)_con_info
	.quad	GHC.Float.$fRealFloatDouble3_closure+1
	.quad	GHC.Float.$fRealFloatDouble2_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.571675383 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble_$cfloatRange_closure
.type GHC.Float.$fRealFloatDouble_$cfloatRange_closure, @object
GHC.Float.$fRealFloatDouble_$cfloatRange_closure:
	.quad	GHC.Float.$fRealFloatDouble_$cfloatRange_info


==================== Asm code ====================
2018-03-16 15:57:33.57236544 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFloatDouble_$cfloatRange_entry
.type GHC.Float.$fRealFloatDouble_$cfloatRange_entry, @object
GHC.Float.$fRealFloatDouble_$cfloatRange_entry:
_c372c:
	movl $GHC.Float.$fRealFloatDouble1_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Float.$fRealFloatDouble_$cfloatRange_entry, .-GHC.Float.$fRealFloatDouble_$cfloatRange_entry


==================== Asm code ====================
2018-03-16 15:57:33.572924643 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble_$cfloatRange_info
.type GHC.Float.$fRealFloatDouble_$cfloatRange_info, @object
GHC.Float.$fRealFloatDouble_$cfloatRange_info:
	.quad	GHC.Float.$fRealFloatDouble_$cfloatRange_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:33.585779559 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$w$catan2_closure
.type GHC.Float.$w$catan2_closure, @object
GHC.Float.$w$catan2_closure:
	.quad	GHC.Float.$w$catan2_info


==================== Asm code ====================
2018-03-16 15:57:33.586583176 UTC

.section .text
.align 8
.globl GHC.Float.$w$catan2_slow
.type GHC.Float.$w$catan2_slow, @object
GHC.Float.$w$catan2_slow:
_c372l:
	movsd 8(%rbp),%xmm1
	movq (%rbp),%r14
	addq $16,%rbp
	jmp GHC.Float.$w$catan2_entry
	.size GHC.Float.$w$catan2_slow, .-GHC.Float.$w$catan2_slow


==================== Asm code ====================
2018-03-16 15:57:33.587396451 UTC

.section .text
.align 8
sat_s2V4U_entry:
_c372L:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c372M
_c372N:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Float.negateDouble_entry
_c372M:
	jmp *-16(%r13)
	.size sat_s2V4U_entry, .-sat_s2V4U_entry


==================== Asm code ====================
2018-03-16 15:57:33.588076274 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2V4U_info:
	.quad	sat_s2V4U_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:33.589033112 UTC

.section .text
.align 8
.globl GHC.Float.$w$catan2_entry
.type GHC.Float.$w$catan2_entry, @object
GHC.Float.$w$catan2_entry:
_c372R:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c372S
_c372T:
	xorpd %xmm0,%xmm0
	ucomisd %xmm0,%xmm1
	ja _c372Q
_c372P:
	xorpd %xmm0,%xmm0
	ucomisd %xmm0,%xmm1
	jp _u375K
	je _c375n
_u375K:
	movq %r14,-16(%rbp)
	movsd %xmm1,-8(%rbp)
	addq $-16,%rbp
	jmp _s2V4R
_c372Q:
	movq $block_c375z_info,-16(%rbp)
	movq %r14,%rbx
	movsd %xmm1,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c375z
_c375A:
	movq (%rbx),%rax
	jmp *(%rax)
_c375n:
	movq $block_c375m_info,-24(%rbp)
	movq %r14,%rbx
	movq %r14,-16(%rbp)
	movsd %xmm1,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c375m
_c375o:
	movq (%rbx),%rax
	jmp *(%rax)
_c372S:
	movl $GHC.Float.$w$catan2_closure,%ebx
	movq %r14,-16(%rbp)
	movsd %xmm1,-8(%rbp)
	addq $-16,%rbp
	jmp *-8(%r13)
	.size GHC.Float.$w$catan2_entry, .-GHC.Float.$w$catan2_entry


==================== Asm code ====================
2018-03-16 15:57:33.589875502 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$w$catan2_info
.type GHC.Float.$w$catan2_info, @object
GHC.Float.$w$catan2_info:
	.quad	GHC.Float.$w$catan2_entry
	.quad	0
	.quad	14
	.quad	8589934592
	.quad	0
	.quad	130
	.quad	GHC.Float.$w$catan2_slow


==================== Asm code ====================
2018-03-16 15:57:33.590620636 UTC

.section .text
.align 8
_c375z:
_c375z:
	subq $8,%rsp
	movsd 7(%rbx),%xmm0
	divsd 8(%rbp),%xmm0
	movl $1,%eax
	call atan
	addq $8,%rsp
	movsd %xmm0,%xmm1
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c375z, .-_c375z


==================== Asm code ====================
2018-03-16 15:57:33.59125743 UTC

.section .data.rel.ro
.align 8
.align 1
block_c375z_info:
	.quad	_c375z
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.592002688 UTC

.section .text
.align 8
_c375m:
_c375m:
	movsd 7(%rbx),%xmm0
	xorpd %xmm1,%xmm1
	ucomisd %xmm1,%xmm0
	ja _c375x
_u375L:
	addq $8,%rbp
	jmp _s2V4R
_c375x:
	movsd _n376C(%rip),%xmm1
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c375m, .-_c375m
.section .rodata
.align 8
.align 8
_n376C:
	.byte	24
	.byte	45
	.byte	68
	.byte	84
	.byte	251
	.byte	33
	.byte	249
	.byte	63


==================== Asm code ====================
2018-03-16 15:57:33.592648379 UTC

.section .data.rel.ro
.align 8
.align 1
block_c375m_info:
	.quad	_c375m
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.593765684 UTC

.section .text
.align 8
_s2V4R:
_s2V4R:
	movsd 8(%rbp),%xmm0
	xorpd %xmm1,%xmm1
	ucomisd %xmm1,%xmm0
	jp _s2V4S
	jb _c374V
	jmp _s2V4S
_c374V:
	movq $block_c374U_info,-8(%rbp)
	movq (%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c374U
_c374W:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _s2V4R, .-_s2V4R


==================== Asm code ====================
2018-03-16 15:57:33.59467352 UTC

.section .text
.align 8
_c374U:
_c374U:
	movsd 7(%rbx),%xmm0
	xorpd %xmm1,%xmm1
	ucomisd %xmm1,%xmm0
	ja _c375f
_u375M:
	addq $8,%rbp
	jmp _s2V4S
_c375f:
	subq $8,%rsp
	divsd 16(%rbp),%xmm0
	movl $1,%eax
	call atan
	addq $8,%rsp
	movsd %xmm0,%xmm1
	addsd _n376Q(%rip),%xmm1
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c374U, .-_c374U
.section .rodata
.align 8
.align 8
_n376Q:
	.byte	24
	.byte	45
	.byte	68
	.byte	84
	.byte	251
	.byte	33
	.byte	9
	.byte	64


==================== Asm code ====================
2018-03-16 15:57:33.595353869 UTC

.section .data.rel.ro
.align 8
.align 1
block_c374U_info:
	.quad	_c374U
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.596770757 UTC

.section .text
.align 8
_s2V4S:
_s2V4S:
	movsd 8(%rbp),%xmm0
	xorpd %xmm1,%xmm1
	ucomisd %xmm1,%xmm0
	jp _s2V4W
	jbe _c374D
	jmp _s2V4W
_c374D:
	movq $block_c374C_info,-8(%rbp)
	movq (%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c374C
_c374E:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _s2V4S, .-_s2V4S


==================== Asm code ====================
2018-03-16 15:57:33.597601763 UTC

.section .text
.align 8
_c374C:
_c374C:
	movsd 7(%rbx),%xmm0
	xorpd %xmm1,%xmm1
	ucomisd %xmm1,%xmm0
	jp _u375N
	jb _c372F
_u375N:
	addq $8,%rbp
	jmp _s2V4W
	.size _c374C, .-_c374C


==================== Asm code ====================
2018-03-16 15:57:33.598187047 UTC

.section .data.rel.ro
.align 8
.align 1
block_c374C_info:
	.quad	_c374C
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.598919104 UTC

.section .text
.align 8
_s2V4W:
_s2V4W:
	movsd 8(%rbp),%xmm0
	xorpd %xmm1,%xmm1
	ucomisd %xmm1,%xmm0
	jp _s2V4X
	jb _c374k
	jmp _s2V4X
_c374k:
	movq $block_c374j_info,-8(%rbp)
	movq (%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c374j
_c374l:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _s2V4W, .-_s2V4W


==================== Asm code ====================
2018-03-16 15:57:33.599662907 UTC

.section .text
.align 8
_c374j:
_c374j:
	subq $8,%rsp
	movsd 7(%rbx),%xmm0
	movl $1,%eax
	call isDoubleNegativeZero
	addq $8,%rsp
	testq %rax,%rax
	je _u375O
	jmp _c372F
_u375O:
	addq $8,%rbp
	jmp _s2V4X
	.size _c374j, .-_c374j


==================== Asm code ====================
2018-03-16 15:57:33.600286908 UTC

.section .data.rel.ro
.align 8
.align 1
block_c374j_info:
	.quad	_c374j
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.601042508 UTC

.section .text
.align 8
_s2V4X:
_s2V4X:
	movq (%rbp),%rax
	subq $8,%rsp
	movsd 8(%rbp),%xmm0
	movq %rax,%rbx
	movl $1,%eax
	call isDoubleNegativeZero
	addq $8,%rsp
	testq %rax,%rax
	je _u375P
_c3740:
	movq $block_c373Y_info,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c373Y
_c3741:
	movq (%rbx),%rax
	jmp *(%rax)
_u375P:
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp _s2V52
	.size _s2V4X, .-_s2V4X


==================== Asm code ====================
2018-03-16 15:57:33.601853532 UTC

.section .text
.align 8
_c373Y:
_c373Y:
	subq $8,%rsp
	movsd 7(%rbx),%xmm0
	movl $1,%eax
	call isDoubleNegativeZero
	addq $8,%rsp
	testq %rax,%rax
	je _u375Q
_u375R:
	addq $8,%rbp
	jmp _c372F
_u375Q:
	addq $8,%rbp
	jmp _s2V52
	.size _c373Y, .-_c373Y


==================== Asm code ====================
2018-03-16 15:57:33.60248367 UTC

.section .data.rel.ro
.align 8
.align 1
block_c373Y_info:
	.quad	_c373Y
	.quad	323
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.60316512 UTC

.section .text
.align 8
_s2V52:
_s2V52:
	movq $block_c373o_info,-8(%rbp)
	movq 8(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c373o
_c373q:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _s2V52, .-_s2V52


==================== Asm code ====================
2018-03-16 15:57:33.604068063 UTC

.section .text
.align 8
_c373o:
_c373o:
	movsd 24(%rbp),%xmm0
	movsd 7(%rbx),%xmm1
	xorpd %xmm2,%xmm2
	ucomisd %xmm2,%xmm1
	jp _c373A
	je _c373V
_c373A:
	movsd %xmm1,%xmm2
	movsd %xmm0,%xmm1
	addsd %xmm2,%xmm1
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c373U:
	movsd _n377z(%rip),%xmm1
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c373Q:
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c373V:
	xorpd %xmm2,%xmm2
	ucomisd %xmm2,%xmm0
	jp _c373T
	jb _c373U
_c373T:
	cmpq $0,8(%rbp)
	jne _c373U
_c373R:
	xorpd %xmm2,%xmm2
	ucomisd %xmm2,%xmm0
	jp _c373P
	je _c373Q
_c373P:
	movsd %xmm1,%xmm2
	movsd %xmm0,%xmm1
	addsd %xmm2,%xmm1
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c373o, .-_c373o
.section .rodata
.align 8
.align 8
_n377z:
	.byte	24
	.byte	45
	.byte	68
	.byte	84
	.byte	251
	.byte	33
	.byte	9
	.byte	64


==================== Asm code ====================
2018-03-16 15:57:33.604858357 UTC

.section .data.rel.ro
.align 8
.align 1
block_c373o_info:
	.quad	_c373o
	.quad	451
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.605757673 UTC

.section .text
.align 8
_c372F:
_c372F:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3733
_c3732:
	movq $sat_s2V4U_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	movsd 16(%rbp),%xmm0
	movq $block_c372W_info,16(%rbp)
	movsd %xmm0,%xmm1
	leaq -16(%r12),%r14
	addq $16,%rbp
	jmp GHC.Float.$w$catan2_entry
_c3733:
	movq $24,904(%r13)
	movq $block_c372F_info,(%rbp)
	jmp stg_gc_noregs
	.size _c372F, .-_c372F


==================== Asm code ====================
2018-03-16 15:57:33.606412951 UTC

.section .data.rel.ro
.align 8
.align 1
block_c372F_info:
	.quad	_c372F
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.607090612 UTC

.section .text
.align 8
_c372W:
_c372W:
	movsd _n377K(%rip),%xmm0
	xorpd %xmm0,%xmm1
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c372W, .-_c372W
.section .rodata
.align 8
.align 8
_n377K:
	.quad	-9223372036854775808


==================== Asm code ====================
2018-03-16 15:57:33.607678798 UTC

.section .data.rel.ro
.align 8
.align 1
block_c372W_info:
	.quad	_c372W
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.611373464 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble_$catan2_closure
.type GHC.Float.$fRealFloatDouble_$catan2_closure, @object
GHC.Float.$fRealFloatDouble_$catan2_closure:
	.quad	GHC.Float.$fRealFloatDouble_$catan2_info


==================== Asm code ====================
2018-03-16 15:57:33.612258565 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFloatDouble_$catan2_entry
.type GHC.Float.$fRealFloatDouble_$catan2_entry, @object
GHC.Float.$fRealFloatDouble_$catan2_entry:
_c377W:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3784
_c3785:
	movq $block_c377T_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c377T
_c377U:
	movq (%rbx),%rax
	jmp *(%rax)
_c3784:
	movl $GHC.Float.$fRealFloatDouble_$catan2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFloatDouble_$catan2_entry, .-GHC.Float.$fRealFloatDouble_$catan2_entry


==================== Asm code ====================
2018-03-16 15:57:33.612968301 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble_$catan2_info
.type GHC.Float.$fRealFloatDouble_$catan2_info, @object
GHC.Float.$fRealFloatDouble_$catan2_info:
	.quad	GHC.Float.$fRealFloatDouble_$catan2_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:33.613765759 UTC

.section .text
.align 8
_c377T:
_c377T:
	movq 8(%rbp),%rax
	movq $block_c377Z_info,8(%rbp)
	movsd 7(%rbx),%xmm1
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Float.$w$catan2_entry
	.size _c377T, .-_c377T


==================== Asm code ====================
2018-03-16 15:57:33.61438681 UTC

.section .data.rel.ro
.align 8
.align 1
block_c377T_info:
	.quad	_c377T
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.61513558 UTC

.section .text
.align 8
_c377Z:
_c377Z:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3789
_c3788:
	movq $GHC.Types.D#_con_info,-8(%r12)
	movsd %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3789:
	movq $16,904(%r13)
	jmp stg_gc_d1
	.size _c377Z, .-_c377Z


==================== Asm code ====================
2018-03-16 15:57:33.615801702 UTC

.section .data.rel.ro
.align 8
.align 1
block_c377Z_info:
	.quad	_c377Z
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.618546435 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble_closure
.type GHC.Float.$fRealFloatDouble_closure, @object
GHC.Float.$fRealFloatDouble_closure:
	.quad	GHC.Float.C:RealFloat_con_info
	.quad	GHC.Float.$fRealFracDouble_closure+1
	.quad	GHC.Float.$fFloatingDouble_closure+1
	.quad	GHC.Float.$fRealFloatDouble_$cfloatRadix_closure+1
	.quad	GHC.Float.$fRealFloatDouble_$cfloatDigits_closure+1
	.quad	GHC.Float.$fRealFloatDouble_$cfloatRange_closure+1
	.quad	GHC.Float.$fRealFloatDouble_$cdecodeFloat_closure+1
	.quad	GHC.Float.$fRealFloatDouble_$cencodeFloat_closure+2
	.quad	GHC.Float.$fRealFloatDouble_$cexponent_closure+1
	.quad	GHC.Float.$fRealFloatDouble_$csignificand_closure+1
	.quad	GHC.Float.$fRealFloatDouble_$cscaleFloat_closure+2
	.quad	GHC.Float.$fRealFloatDouble_$cisNaN_closure+1
	.quad	GHC.Float.$fRealFloatDouble_$cisInfinite_closure+1
	.quad	GHC.Float.$fRealFloatDouble_$cisDenormalized_closure+1
	.quad	GHC.Float.$fRealFloatDouble_$cisNegativeZero_closure+1
	.quad	GHC.Float.$fRealFloatDouble_$cisIEEE_closure+1
	.quad	GHC.Float.$fRealFloatDouble_$catan2_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:33.620521776 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat3_closure
.type GHC.Float.$fRealFloatFloat3_closure, @object
GHC.Float.$fRealFloatFloat3_closure:
	.quad	GHC.Types.I#_con_info
	.quad	-125


==================== Asm code ====================
2018-03-16 15:57:33.622438224 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat2_closure
.type GHC.Float.$fRealFloatFloat2_closure, @object
GHC.Float.$fRealFloatFloat2_closure:
	.quad	GHC.Types.I#_con_info
	.quad	128


==================== Asm code ====================
2018-03-16 15:57:33.624971816 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat1_closure
.type GHC.Float.$fRealFloatFloat1_closure, @object
GHC.Float.$fRealFloatFloat1_closure:
	.quad	(,)_con_info
	.quad	GHC.Float.$fRealFloatFloat3_closure+1
	.quad	GHC.Float.$fRealFloatFloat2_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:33.627348784 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat_$cfloatRange_closure
.type GHC.Float.$fRealFloatFloat_$cfloatRange_closure, @object
GHC.Float.$fRealFloatFloat_$cfloatRange_closure:
	.quad	GHC.Float.$fRealFloatFloat_$cfloatRange_info


==================== Asm code ====================
2018-03-16 15:57:33.628130123 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFloatFloat_$cfloatRange_entry
.type GHC.Float.$fRealFloatFloat_$cfloatRange_entry, @object
GHC.Float.$fRealFloatFloat_$cfloatRange_entry:
_c378w:
	movl $GHC.Float.$fRealFloatFloat1_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Float.$fRealFloatFloat_$cfloatRange_entry, .-GHC.Float.$fRealFloatFloat_$cfloatRange_entry


==================== Asm code ====================
2018-03-16 15:57:33.628769744 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat_$cfloatRange_info
.type GHC.Float.$fRealFloatFloat_$cfloatRange_info, @object
GHC.Float.$fRealFloatFloat_$cfloatRange_info:
	.quad	GHC.Float.$fRealFloatFloat_$cfloatRange_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:33.641609811 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$w$catan1_closure
.type GHC.Float.$w$catan1_closure, @object
GHC.Float.$w$catan1_closure:
	.quad	GHC.Float.$w$catan1_info


==================== Asm code ====================
2018-03-16 15:57:33.642428783 UTC

.section .text
.align 8
.globl GHC.Float.$w$catan1_slow
.type GHC.Float.$w$catan1_slow, @object
GHC.Float.$w$catan1_slow:
_c378F:
	movss 8(%rbp),%xmm1
	movq (%rbp),%r14
	addq $16,%rbp
	jmp GHC.Float.$w$catan1_entry
	.size GHC.Float.$w$catan1_slow, .-GHC.Float.$w$catan1_slow


==================== Asm code ====================
2018-03-16 15:57:33.643245397 UTC

.section .text
.align 8
sat_s2V5S_entry:
_c3795:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3796
_c3797:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Float.negateFloat_entry
_c3796:
	jmp *-16(%r13)
	.size sat_s2V5S_entry, .-sat_s2V5S_entry


==================== Asm code ====================
2018-03-16 15:57:33.643939644 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2V5S_info:
	.quad	sat_s2V5S_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:33.645106702 UTC

.section .text
.align 8
.globl GHC.Float.$w$catan1_entry
.type GHC.Float.$w$catan1_entry, @object
GHC.Float.$w$catan1_entry:
_c379b:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c379c
_c379d:
	xorps %xmm0,%xmm0
	ucomiss %xmm0,%xmm1
	ja _c379a
_c3799:
	xorps %xmm0,%xmm0
	ucomiss %xmm0,%xmm1
	jp _u37c4
	je _c37bH
_u37c4:
	movq %r14,-16(%rbp)
	movss %xmm1,-8(%rbp)
	addq $-16,%rbp
	jmp _s2V5P
_c379a:
	movq $block_c37bT_info,-16(%rbp)
	movq %r14,%rbx
	movss %xmm1,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c37bT
_c37bU:
	movq (%rbx),%rax
	jmp *(%rax)
_c37bH:
	movq $block_c37bG_info,-24(%rbp)
	movq %r14,%rbx
	movq %r14,-16(%rbp)
	movss %xmm1,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c37bG
_c37bI:
	movq (%rbx),%rax
	jmp *(%rax)
_c379c:
	movl $GHC.Float.$w$catan1_closure,%ebx
	movq %r14,-16(%rbp)
	movss %xmm1,-8(%rbp)
	addq $-16,%rbp
	jmp *-8(%r13)
	.size GHC.Float.$w$catan1_entry, .-GHC.Float.$w$catan1_entry


==================== Asm code ====================
2018-03-16 15:57:33.646274263 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$w$catan1_info
.type GHC.Float.$w$catan1_info, @object
GHC.Float.$w$catan1_info:
	.quad	GHC.Float.$w$catan1_entry
	.quad	0
	.quad	14
	.quad	8589934592
	.quad	0
	.quad	130
	.quad	GHC.Float.$w$catan1_slow


==================== Asm code ====================
2018-03-16 15:57:33.647362953 UTC

.section .text
.align 8
_c37bT:
_c37bT:
	subq $8,%rsp
	movss 7(%rbx),%xmm0
	divss 8(%rbp),%xmm0
	movl $1,%eax
	call atanf
	addq $8,%rsp
	movss %xmm0,%xmm1
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c37bT, .-_c37bT


==================== Asm code ====================
2018-03-16 15:57:33.648261177 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37bT_info:
	.quad	_c37bT
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.649588779 UTC

.section .text
.align 8
_c37bG:
_c37bG:
	movss 7(%rbx),%xmm0
	xorps %xmm1,%xmm1
	ucomiss %xmm1,%xmm0
	ja _c37bR
_u37c5:
	addq $8,%rbp
	jmp _s2V5P
_c37bR:
	movss _n37cW(%rip),%xmm1
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c37bG, .-_c37bG
.section .rodata
.align 8
.align 4
_n37cW:
	.byte	219
	.byte	15
	.byte	201
	.byte	63


==================== Asm code ====================
2018-03-16 15:57:33.650528709 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37bG_info:
	.quad	_c37bG
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.651586063 UTC

.section .text
.align 8
_s2V5P:
_s2V5P:
	movss 8(%rbp),%xmm0
	xorps %xmm1,%xmm1
	ucomiss %xmm1,%xmm0
	jp _s2V5Q
	jb _c37bf
	jmp _s2V5Q
_c37bf:
	movq $block_c37be_info,-8(%rbp)
	movq (%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c37be
_c37bg:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _s2V5P, .-_s2V5P


==================== Asm code ====================
2018-03-16 15:57:33.652761006 UTC

.section .text
.align 8
_c37be:
_c37be:
	movss 7(%rbx),%xmm0
	xorps %xmm1,%xmm1
	ucomiss %xmm1,%xmm0
	ja _c37bz
_u37c6:
	addq $8,%rbp
	jmp _s2V5Q
_c37bz:
	subq $8,%rsp
	divss 16(%rbp),%xmm0
	movl $1,%eax
	call atanf
	addq $8,%rsp
	movss %xmm0,%xmm1
	addss _n37da(%rip),%xmm1
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c37be, .-_c37be
.section .rodata
.align 8
.align 4
_n37da:
	.byte	219
	.byte	15
	.byte	73
	.byte	64


==================== Asm code ====================
2018-03-16 15:57:33.653786744 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37be_info:
	.quad	_c37be
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.654786249 UTC

.section .text
.align 8
_s2V5Q:
_s2V5Q:
	movss 8(%rbp),%xmm0
	xorps %xmm1,%xmm1
	ucomiss %xmm1,%xmm0
	jp _s2V5U
	jbe _c37aX
	jmp _s2V5U
_c37aX:
	movq $block_c37aW_info,-8(%rbp)
	movq (%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c37aW
_c37aY:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _s2V5Q, .-_s2V5Q


==================== Asm code ====================
2018-03-16 15:57:33.655876068 UTC

.section .text
.align 8
_c37aW:
_c37aW:
	movss 7(%rbx),%xmm0
	xorps %xmm1,%xmm1
	ucomiss %xmm1,%xmm0
	jp _u37c7
	jb _c378Z
_u37c7:
	addq $8,%rbp
	jmp _s2V5U
	.size _c37aW, .-_c37aW


==================== Asm code ====================
2018-03-16 15:57:33.657482421 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37aW_info:
	.quad	_c37aW
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.658485796 UTC

.section .text
.align 8
_s2V5U:
_s2V5U:
	movss 8(%rbp),%xmm0
	xorps %xmm1,%xmm1
	ucomiss %xmm1,%xmm0
	jp _s2V5V
	jb _c37aE
	jmp _s2V5V
_c37aE:
	movq $block_c37aD_info,-8(%rbp)
	movq (%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c37aD
_c37aF:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _s2V5U, .-_s2V5U


==================== Asm code ====================
2018-03-16 15:57:33.659467552 UTC

.section .text
.align 8
_c37aD:
_c37aD:
	subq $8,%rsp
	movss 7(%rbx),%xmm0
	movl $1,%eax
	call isFloatNegativeZero
	addq $8,%rsp
	testq %rax,%rax
	je _u37c8
	jmp _c378Z
_u37c8:
	addq $8,%rbp
	jmp _s2V5V
	.size _c37aD, .-_c37aD


==================== Asm code ====================
2018-03-16 15:57:33.660257466 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37aD_info:
	.quad	_c37aD
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.661561565 UTC

.section .text
.align 8
_s2V5V:
_s2V5V:
	movq (%rbp),%rax
	subq $8,%rsp
	movss 8(%rbp),%xmm0
	movq %rax,%rbx
	movl $1,%eax
	call isFloatNegativeZero
	addq $8,%rsp
	testq %rax,%rax
	je _u37c9
_c37ak:
	movq $block_c37ai_info,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c37ai
_c37al:
	movq (%rbx),%rax
	jmp *(%rax)
_u37c9:
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp _s2V60
	.size _s2V5V, .-_s2V5V


==================== Asm code ====================
2018-03-16 15:57:33.662608227 UTC

.section .text
.align 8
_c37ai:
_c37ai:
	subq $8,%rsp
	movss 7(%rbx),%xmm0
	movl $1,%eax
	call isFloatNegativeZero
	addq $8,%rsp
	testq %rax,%rax
	je _u37ca
_u37cb:
	addq $8,%rbp
	jmp _c378Z
_u37ca:
	addq $8,%rbp
	jmp _s2V60
	.size _c37ai, .-_c37ai


==================== Asm code ====================
2018-03-16 15:57:33.663287802 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37ai_info:
	.quad	_c37ai
	.quad	323
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.663971166 UTC

.section .text
.align 8
_s2V60:
_s2V60:
	movq $block_c379I_info,-8(%rbp)
	movq 8(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c379I
_c379K:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _s2V60, .-_s2V60


==================== Asm code ====================
2018-03-16 15:57:33.664932864 UTC

.section .text
.align 8
_c379I:
_c379I:
	movss 24(%rbp),%xmm0
	movss 7(%rbx),%xmm1
	xorps %xmm2,%xmm2
	ucomiss %xmm2,%xmm1
	jp _c379U
	je _c37af
_c379U:
	movsd %xmm1,%xmm2
	movss %xmm0,%xmm1
	addss %xmm2,%xmm1
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c37ae:
	movss _n37dT(%rip),%xmm1
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c37aa:
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c37af:
	xorps %xmm2,%xmm2
	ucomiss %xmm2,%xmm0
	jp _c37ad
	jb _c37ae
_c37ad:
	cmpq $0,8(%rbp)
	jne _c37ae
_c37ab:
	xorps %xmm2,%xmm2
	ucomiss %xmm2,%xmm0
	jp _c37a9
	je _c37aa
_c37a9:
	movsd %xmm1,%xmm2
	movss %xmm0,%xmm1
	addss %xmm2,%xmm1
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c379I, .-_c379I
.section .rodata
.align 8
.align 4
_n37dT:
	.byte	219
	.byte	15
	.byte	73
	.byte	64


==================== Asm code ====================
2018-03-16 15:57:33.665696211 UTC

.section .data.rel.ro
.align 8
.align 1
block_c379I_info:
	.quad	_c379I
	.quad	451
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.666472849 UTC

.section .text
.align 8
_c378Z:
_c378Z:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c379n
_c379m:
	movq $sat_s2V5S_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	movss 16(%rbp),%xmm0
	movq $block_c379g_info,16(%rbp)
	movss %xmm0,%xmm1
	leaq -16(%r12),%r14
	addq $16,%rbp
	jmp GHC.Float.$w$catan1_entry
_c379n:
	movq $24,904(%r13)
	movq $block_c378Z_info,(%rbp)
	jmp stg_gc_noregs
	.size _c378Z, .-_c378Z


==================== Asm code ====================
2018-03-16 15:57:33.667136138 UTC

.section .data.rel.ro
.align 8
.align 1
block_c378Z_info:
	.quad	_c378Z
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.667805432 UTC

.section .text
.align 8
_c379g:
_c379g:
	movss _n37e4(%rip),%xmm0
	xorps %xmm0,%xmm1
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c379g, .-_c379g
.section .rodata
.align 8
.align 4
_n37e4:
	.long	-2147483648


==================== Asm code ====================
2018-03-16 15:57:33.668383975 UTC

.section .data.rel.ro
.align 8
.align 1
block_c379g_info:
	.quad	_c379g
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.67198997 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat_$catan2_closure
.type GHC.Float.$fRealFloatFloat_$catan2_closure, @object
GHC.Float.$fRealFloatFloat_$catan2_closure:
	.quad	GHC.Float.$fRealFloatFloat_$catan2_info


==================== Asm code ====================
2018-03-16 15:57:33.672854454 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFloatFloat_$catan2_entry
.type GHC.Float.$fRealFloatFloat_$catan2_entry, @object
GHC.Float.$fRealFloatFloat_$catan2_entry:
_c37eg:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c37eo
_c37ep:
	movq $block_c37ed_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c37ed
_c37ee:
	movq (%rbx),%rax
	jmp *(%rax)
_c37eo:
	movl $GHC.Float.$fRealFloatFloat_$catan2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFloatFloat_$catan2_entry, .-GHC.Float.$fRealFloatFloat_$catan2_entry


==================== Asm code ====================
2018-03-16 15:57:33.673939974 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat_$catan2_info
.type GHC.Float.$fRealFloatFloat_$catan2_info, @object
GHC.Float.$fRealFloatFloat_$catan2_info:
	.quad	GHC.Float.$fRealFloatFloat_$catan2_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:33.674638477 UTC

.section .text
.align 8
_c37ed:
_c37ed:
	movq 8(%rbp),%rax
	movq $block_c37ej_info,8(%rbp)
	movss 7(%rbx),%xmm1
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Float.$w$catan1_entry
	.size _c37ed, .-_c37ed


==================== Asm code ====================
2018-03-16 15:57:33.675255981 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37ed_info:
	.quad	_c37ed
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.675981254 UTC

.section .text
.align 8
_c37ej:
_c37ej:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c37et
_c37es:
	movq $GHC.Types.F#_con_info,-8(%r12)
	movss %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c37et:
	movq $16,904(%r13)
	jmp stg_gc_f1
	.size _c37ej, .-_c37ej


==================== Asm code ====================
2018-03-16 15:57:33.67666073 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37ej_info:
	.quad	_c37ej
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.678858545 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat_closure
.type GHC.Float.$fRealFloatFloat_closure, @object
GHC.Float.$fRealFloatFloat_closure:
	.quad	GHC.Float.C:RealFloat_con_info
	.quad	GHC.Float.$fRealFracFloat_closure+1
	.quad	GHC.Float.$fFloatingFloat_closure+1
	.quad	GHC.Float.$fRealFloatFloat_$cfloatRadix_closure+1
	.quad	GHC.Float.$fRealFloatFloat_$cfloatDigits_closure+1
	.quad	GHC.Float.$fRealFloatFloat_$cfloatRange_closure+1
	.quad	GHC.Float.$fRealFloatFloat_$cdecodeFloat_closure+1
	.quad	GHC.Float.$fRealFloatFloat_$cencodeFloat_closure+2
	.quad	GHC.Float.$fRealFloatFloat_$cexponent_closure+1
	.quad	GHC.Float.$fRealFloatFloat_$csignificand_closure+1
	.quad	GHC.Float.$fRealFloatFloat_$cscaleFloat_closure+2
	.quad	GHC.Float.$fRealFloatFloat_$cisNaN_closure+1
	.quad	GHC.Float.$fRealFloatFloat_$cisInfinite_closure+1
	.quad	GHC.Float.$fRealFloatFloat_$cisDenormalized_closure+1
	.quad	GHC.Float.$fRealFloatFloat_$cisNegativeZero_closure+1
	.quad	GHC.Float.$fRealFloatFloat_$cisIEEE_closure+1
	.quad	GHC.Float.$fRealFloatFloat_$catan2_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:33.680735993 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fShowDouble3_closure
.type GHC.Float.$fShowDouble3_closure, @object
GHC.Float.$fShowDouble3_closure:
	.quad	GHC.Types.C#_con_info
	.quad	45


==================== Asm code ====================
2018-03-16 15:57:33.690690706 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$w$sshowSignedFloat1_closure
.type GHC.Float.$w$sshowSignedFloat1_closure, @object
GHC.Float.$w$sshowSignedFloat1_closure:
	.quad	GHC.Float.$w$sshowSignedFloat1_info


==================== Asm code ====================
2018-03-16 15:57:33.691664974 UTC

.section .text
.align 8
.globl GHC.Float.$w$sshowSignedFloat1_slow
.type GHC.Float.$w$sshowSignedFloat1_slow, @object
GHC.Float.$w$sshowSignedFloat1_slow:
_c37eL:
	movss 16(%rbp),%xmm1
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $24,%rbp
	jmp GHC.Float.$w$sshowSignedFloat1_entry
	.size GHC.Float.$w$sshowSignedFloat1_slow, .-GHC.Float.$w$sshowSignedFloat1_slow


==================== Asm code ====================
2018-03-16 15:57:33.692841148 UTC

.section .text
.align 8
g_s2V6P_entry:
_c37f5:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c37f8
_c37f9:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c37fb
_c37fa:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movss 24(%rbx),%xmm0
	movss _n37gl(%rip),%xmm1
	xorps %xmm1,%xmm0
	movq $GHC.Types.F#_con_info,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%r14
	movq %rax,%rbx
	addq $-16,%rbp
	jmp stg_ap_p_fast
_c37fb:
	movq $16,904(%r13)
_c37f8:
	jmp *-16(%r13)
	.size g_s2V6P_entry, .-g_s2V6P_entry
.section .rodata
.align 8
.align 4
_n37gl:
	.long	-2147483648


==================== Asm code ====================
2018-03-16 15:57:33.693827255 UTC

.section .data.rel.ro
.align 8
.align 1
g_s2V6P_info:
	.quad	g_s2V6P_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 15:57:33.694861244 UTC

.section .text
.align 8
sat_s2V6V_entry:
_c37fm:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c37fq
_c37fp:
	movq 7(%rbx),%rax
	movq $stg_ap_2_upd_info,-48(%r12)
	movq %rax,-32(%r12)
	movq %r14,-24(%r12)
	movq $:_con_info,-16(%r12)
	movq $GHC.Float.$fShowDouble3_closure+1,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c37fq:
	movq $56,904(%r13)
	jmp *-8(%r13)
	.size sat_s2V6V_entry, .-sat_s2V6V_entry


==================== Asm code ====================
2018-03-16 15:57:33.695811797 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2V6V_info:
	.quad	sat_s2V6V_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:33.696886164 UTC

.section .text
.align 8
sat_s2V6Y_entry:
_c37fC:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c37fD
_c37fE:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c37fG
_c37fF:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $:_con_info,-16(%r12)
	movq $GHC.Show.$fShow(,)2_closure,-8(%r12)
	movq %rbx,(%r12)
	leaq -14(%r12),%r14
	movq %rax,%rbx
	addq $-16,%rbp
	jmp stg_ap_p_fast
_c37fG:
	movq $24,904(%r13)
_c37fD:
	jmp *-16(%r13)
	.size sat_s2V6Y_entry, .-sat_s2V6Y_entry


==================== Asm code ====================
2018-03-16 15:57:33.697887169 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2V6Y_info:
	.quad	sat_s2V6Y_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:33.698943677 UTC

.section .text
.align 8
sat_s2V70_entry:
_c37fJ:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _c37fN
_c37fM:
	movq 7(%rbx),%rax
	movq $sat_s2V6Y_info,-72(%r12)
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	movq $:_con_info,-40(%r12)
	movq $GHC.Float.$fShowDouble3_closure+1,-32(%r12)
	leaq -72(%r12),%rax
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	movq $GHC.Show.$fShow(,)4_closure,-8(%r12)
	leaq -38(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c37fN:
	movq $80,904(%r13)
	jmp *-8(%r13)
	.size sat_s2V70_entry, .-sat_s2V70_entry


==================== Asm code ====================
2018-03-16 15:57:33.699882273 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2V70_info:
	.quad	sat_s2V70_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:33.701235968 UTC

.section .text
.align 8
.globl GHC.Float.$w$sshowSignedFloat1_entry
.type GHC.Float.$w$sshowSignedFloat1_entry, @object
GHC.Float.$w$sshowSignedFloat1_entry:
_c37fT:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c37fU
_c37fV:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c37fX
_c37fW:
	xorps %xmm0,%xmm0
	ucomiss %xmm0,%xmm1
	jp _c37fR
	jb _c37fS
_c37fR:
	subq $8,%rsp
	movss %xmm1,%xmm0
	movl $1,%eax
	movq %rsi,%rbx
	movsd %xmm1,72(%rsp)
	call isFloatNegativeZero
	addq $8,%rsp
	testq %rax,%rax
	jne _n37gK
_c37ge:
	movq $GHC.Types.F#_con_info,-8(%r12)
	movsd 64(%rsp),%xmm0
	movss %xmm0,(%r12)
	movq %r14,%rax
	leaq -7(%r12),%r14
	movq %rax,%rbx
	jmp stg_ap_p_fast
_c37fX:
	movq $16,904(%r13)
_c37fU:
	movl $GHC.Float.$w$sshowSignedFloat1_closure,%ebx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movss %xmm1,-8(%rbp)
	addq $-24,%rbp
	jmp *-8(%r13)
_n37gK:
	movsd 64(%rsp),%xmm1
	movq %rbx,%rsi
_c37fS:
	addq $-16,%r12
	movq $block_c37eU_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movss %xmm1,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c37eU
_c37eV:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Float.$w$sshowSignedFloat1_entry, .-GHC.Float.$w$sshowSignedFloat1_entry


==================== Asm code ====================
2018-03-16 15:57:33.702427333 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$w$sshowSignedFloat1_info
.type GHC.Float.$w$sshowSignedFloat1_info, @object
GHC.Float.$w$sshowSignedFloat1_info:
	.quad	GHC.Float.$w$sshowSignedFloat1_entry
	.quad	0
	.quad	14
	.quad	12884901888
	.quad	0
	.quad	259
	.quad	GHC.Float.$w$sshowSignedFloat1_slow


==================== Asm code ====================
2018-03-16 15:57:33.703591577 UTC

.section .text
.align 8
_c37eU:
_c37eU:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c37g1
_c37g0:
	movq 7(%rbx),%rax
	movq $g_s2V6P_info,-40(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-24(%r12)
	movss 16(%rbp),%xmm0
	movss %xmm0,-16(%r12)
	leaq -40(%r12),%rbx
	cmpq $6,%rax
	jle _c37g3
_c37g4:
	movq $sat_s2V70_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c37g3:
	movq $sat_s2V6V_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c37g1:
	movq $48,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c37eU, .-_c37eU


==================== Asm code ====================
2018-03-16 15:57:33.704589616 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37eU_info:
	.quad	_c37eU
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.708819642 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fShowFloat_$sshowSignedFloat_closure
.type GHC.Float.$fShowFloat_$sshowSignedFloat_closure, @object
GHC.Float.$fShowFloat_$sshowSignedFloat_closure:
	.quad	GHC.Float.$fShowFloat_$sshowSignedFloat_info


==================== Asm code ====================
2018-03-16 15:57:33.710252309 UTC

.section .text
.align 8
.globl GHC.Float.$fShowFloat_$sshowSignedFloat_entry
.type GHC.Float.$fShowFloat_$sshowSignedFloat_entry, @object
GHC.Float.$fShowFloat_$sshowSignedFloat_entry:
_c37h0:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c37h1
_c37h2:
	movq $block_c37gX_info,-24(%rbp)
	movq %rdi,%rbx
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c37gX
_c37gY:
	movq (%rbx),%rax
	jmp *(%rax)
_c37h1:
	movl $GHC.Float.$fShowFloat_$sshowSignedFloat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fShowFloat_$sshowSignedFloat_entry, .-GHC.Float.$fShowFloat_$sshowSignedFloat_entry


==================== Asm code ====================
2018-03-16 15:57:33.711205558 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fShowFloat_$sshowSignedFloat_info
.type GHC.Float.$fShowFloat_$sshowSignedFloat_info, @object
GHC.Float.$fShowFloat_$sshowSignedFloat_info:
	.quad	GHC.Float.$fShowFloat_$sshowSignedFloat_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:57:33.712085629 UTC

.section .text
.align 8
_c37gX:
_c37gX:
	movss 7(%rbx),%xmm1
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Float.$w$sshowSignedFloat1_entry
	.size _c37gX, .-_c37gX


==================== Asm code ====================
2018-03-16 15:57:33.712917327 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37gX_info:
	.quad	_c37gX
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.72160884 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$w$sshowSignedFloat_closure
.type GHC.Float.$w$sshowSignedFloat_closure, @object
GHC.Float.$w$sshowSignedFloat_closure:
	.quad	GHC.Float.$w$sshowSignedFloat_info


==================== Asm code ====================
2018-03-16 15:57:33.722366413 UTC

.section .text
.align 8
.globl GHC.Float.$w$sshowSignedFloat_slow
.type GHC.Float.$w$sshowSignedFloat_slow, @object
GHC.Float.$w$sshowSignedFloat_slow:
_c37hh:
	movsd 16(%rbp),%xmm1
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $24,%rbp
	jmp GHC.Float.$w$sshowSignedFloat_entry
	.size GHC.Float.$w$sshowSignedFloat_slow, .-GHC.Float.$w$sshowSignedFloat_slow


==================== Asm code ====================
2018-03-16 15:57:33.723964458 UTC

.section .text
.align 8
g_s2V7j_entry:
_c37hB:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c37hE
_c37hF:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c37hH
_c37hG:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movsd 24(%rbx),%xmm0
	movsd _n37iR(%rip),%xmm1
	xorpd %xmm1,%xmm0
	movq $GHC.Types.D#_con_info,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%r14
	movq %rax,%rbx
	addq $-16,%rbp
	jmp stg_ap_p_fast
_c37hH:
	movq $16,904(%r13)
_c37hE:
	jmp *-16(%r13)
	.size g_s2V7j_entry, .-g_s2V7j_entry
.section .rodata
.align 8
.align 8
_n37iR:
	.quad	-9223372036854775808


==================== Asm code ====================
2018-03-16 15:57:33.724750206 UTC

.section .data.rel.ro
.align 8
.align 1
g_s2V7j_info:
	.quad	g_s2V7j_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 15:57:33.725596276 UTC

.section .text
.align 8
sat_s2V7p_entry:
_c37hS:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c37hW
_c37hV:
	movq 7(%rbx),%rax
	movq $stg_ap_2_upd_info,-48(%r12)
	movq %rax,-32(%r12)
	movq %r14,-24(%r12)
	movq $:_con_info,-16(%r12)
	movq $GHC.Float.$fShowDouble3_closure+1,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c37hW:
	movq $56,904(%r13)
	jmp *-8(%r13)
	.size sat_s2V7p_entry, .-sat_s2V7p_entry


==================== Asm code ====================
2018-03-16 15:57:33.726233085 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2V7p_info:
	.quad	sat_s2V7p_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:33.727000501 UTC

.section .text
.align 8
sat_s2V7s_entry:
_c37i8:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c37i9
_c37ia:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c37ic
_c37ib:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $:_con_info,-16(%r12)
	movq $GHC.Show.$fShow(,)2_closure,-8(%r12)
	movq %rbx,(%r12)
	leaq -14(%r12),%r14
	movq %rax,%rbx
	addq $-16,%rbp
	jmp stg_ap_p_fast
_c37ic:
	movq $24,904(%r13)
_c37i9:
	jmp *-16(%r13)
	.size sat_s2V7s_entry, .-sat_s2V7s_entry


==================== Asm code ====================
2018-03-16 15:57:33.727735472 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2V7s_info:
	.quad	sat_s2V7s_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:33.72845379 UTC

.section .text
.align 8
sat_s2V7u_entry:
_c37if:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _c37ij
_c37ii:
	movq 7(%rbx),%rax
	movq $sat_s2V7s_info,-72(%r12)
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	movq $:_con_info,-40(%r12)
	movq $GHC.Float.$fShowDouble3_closure+1,-32(%r12)
	leaq -72(%r12),%rax
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	movq $GHC.Show.$fShow(,)4_closure,-8(%r12)
	leaq -38(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c37ij:
	movq $80,904(%r13)
	jmp *-8(%r13)
	.size sat_s2V7u_entry, .-sat_s2V7u_entry


==================== Asm code ====================
2018-03-16 15:57:33.729164574 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2V7u_info:
	.quad	sat_s2V7u_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:33.730954882 UTC

.section .text
.align 8
.globl GHC.Float.$w$sshowSignedFloat_entry
.type GHC.Float.$w$sshowSignedFloat_entry, @object
GHC.Float.$w$sshowSignedFloat_entry:
_c37ip:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c37iq
_c37ir:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c37it
_c37is:
	xorpd %xmm0,%xmm0
	ucomisd %xmm0,%xmm1
	jp _c37in
	jb _c37io
_c37in:
	subq $8,%rsp
	movsd %xmm1,%xmm0
	movl $1,%eax
	movq %rsi,%rbx
	movsd %xmm1,72(%rsp)
	call isDoubleNegativeZero
	addq $8,%rsp
	testq %rax,%rax
	jne _n37jg
_c37iK:
	movq $GHC.Types.D#_con_info,-8(%r12)
	movsd 64(%rsp),%xmm0
	movsd %xmm0,(%r12)
	movq %r14,%rax
	leaq -7(%r12),%r14
	movq %rax,%rbx
	jmp stg_ap_p_fast
_c37it:
	movq $16,904(%r13)
_c37iq:
	movl $GHC.Float.$w$sshowSignedFloat_closure,%ebx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movsd %xmm1,-8(%rbp)
	addq $-24,%rbp
	jmp *-8(%r13)
_n37jg:
	movsd 64(%rsp),%xmm1
	movq %rbx,%rsi
_c37io:
	addq $-16,%r12
	movq $block_c37hq_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movsd %xmm1,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c37hq
_c37hr:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Float.$w$sshowSignedFloat_entry, .-GHC.Float.$w$sshowSignedFloat_entry


==================== Asm code ====================
2018-03-16 15:57:33.732153336 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$w$sshowSignedFloat_info
.type GHC.Float.$w$sshowSignedFloat_info, @object
GHC.Float.$w$sshowSignedFloat_info:
	.quad	GHC.Float.$w$sshowSignedFloat_entry
	.quad	0
	.quad	14
	.quad	12884901888
	.quad	0
	.quad	259
	.quad	GHC.Float.$w$sshowSignedFloat_slow


==================== Asm code ====================
2018-03-16 15:57:33.733290076 UTC

.section .text
.align 8
_c37hq:
_c37hq:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c37ix
_c37iw:
	movq 7(%rbx),%rax
	movq $g_s2V7j_info,-40(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-24(%r12)
	movsd 16(%rbp),%xmm0
	movsd %xmm0,-16(%r12)
	leaq -40(%r12),%rbx
	cmpq $6,%rax
	jle _c37iz
_c37iA:
	movq $sat_s2V7u_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c37iz:
	movq $sat_s2V7p_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c37ix:
	movq $48,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c37hq, .-_c37hq


==================== Asm code ====================
2018-03-16 15:57:33.734242349 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37hq_info:
	.quad	_c37hq
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.738426907 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fShowDouble_$sshowSignedFloat_closure
.type GHC.Float.$fShowDouble_$sshowSignedFloat_closure, @object
GHC.Float.$fShowDouble_$sshowSignedFloat_closure:
	.quad	GHC.Float.$fShowDouble_$sshowSignedFloat_info


==================== Asm code ====================
2018-03-16 15:57:33.73956706 UTC

.section .text
.align 8
.globl GHC.Float.$fShowDouble_$sshowSignedFloat_entry
.type GHC.Float.$fShowDouble_$sshowSignedFloat_entry, @object
GHC.Float.$fShowDouble_$sshowSignedFloat_entry:
_c37jw:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c37jx
_c37jy:
	movq $block_c37jt_info,-24(%rbp)
	movq %rdi,%rbx
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c37jt
_c37ju:
	movq (%rbx),%rax
	jmp *(%rax)
_c37jx:
	movl $GHC.Float.$fShowDouble_$sshowSignedFloat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fShowDouble_$sshowSignedFloat_entry, .-GHC.Float.$fShowDouble_$sshowSignedFloat_entry


==================== Asm code ====================
2018-03-16 15:57:33.740455881 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fShowDouble_$sshowSignedFloat_info
.type GHC.Float.$fShowDouble_$sshowSignedFloat_info, @object
GHC.Float.$fShowDouble_$sshowSignedFloat_info:
	.quad	GHC.Float.$fShowDouble_$sshowSignedFloat_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:57:33.74148793 UTC

.section .text
.align 8
_c37jt:
_c37jt:
	movsd 7(%rbx),%xmm1
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Float.$w$sshowSignedFloat_entry
	.size _c37jt, .-_c37jt


==================== Asm code ====================
2018-03-16 15:57:33.742292827 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37jt_info:
	.quad	_c37jt
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.757738024 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.showSignedFloat_closure
.type GHC.Float.showSignedFloat_closure, @object
GHC.Float.showSignedFloat_closure:
	.quad	GHC.Float.showSignedFloat_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:33.758848799 UTC

.section .text
.align 8
$dNum_s2V7N_entry:
_c37k2:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c37k3
_c37k4:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Real_entry
_c37k3:
	jmp *-16(%r13)
	.size $dNum_s2V7N_entry, .-$dNum_s2V7N_entry


==================== Asm code ====================
2018-03-16 15:57:33.759742671 UTC

.section .data.rel.ro
.align 8
.align 1
$dNum_s2V7N_info:
	.quad	$dNum_s2V7N_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:33.761418032 UTC

.section .text
.align 8
sat_s2V83_entry:
_c37k9:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c37ka
_c37kb:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Float.rationalToDouble5_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c37ka:
	jmp *-16(%r13)
	.size sat_s2V83_entry, .-sat_s2V83_entry


==================== Asm code ====================
2018-03-16 15:57:33.762366376 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2V83_info:
	.quad	sat_s2V83_entry
	.quad	1
	.quad	4294967312
	.quad	S2VLN_srt+832


==================== Asm code ====================
2018-03-16 15:57:33.763288473 UTC

.section .text
.align 8
sat_s2V7S_entry:
_c37ky:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c37kz
_c37kA:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.negate_entry
_c37kz:
	jmp *-16(%r13)
	.size sat_s2V7S_entry, .-sat_s2V7S_entry


==================== Asm code ====================
2018-03-16 15:57:33.764125765 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2V7S_info:
	.quad	sat_s2V7S_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:33.765170786 UTC

.section .text
.align 8
g_s2V7R_entry:
_c37kB:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c37kC
_c37kD:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c37kF
_c37kE:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq $sat_s2V7S_info,-24(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%r14
	movq %rax,%rbx
	addq $-16,%rbp
	jmp stg_ap_p_fast
_c37kF:
	movq $32,904(%r13)
_c37kC:
	jmp *-16(%r13)
	.size g_s2V7R_entry, .-g_s2V7R_entry


==================== Asm code ====================
2018-03-16 15:57:33.766105506 UTC

.section .data.rel.ro
.align 8
.align 1
g_s2V7R_info:
	.quad	g_s2V7R_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:57:33.767089071 UTC

.section .text
.align 8
sat_s2V7W_entry:
_c37kQ:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c37kU
_c37kT:
	movq 7(%rbx),%rax
	movq $stg_ap_2_upd_info,-48(%r12)
	movq %rax,-32(%r12)
	movq %r14,-24(%r12)
	movq $:_con_info,-16(%r12)
	movq $GHC.Float.$fShowDouble3_closure+1,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c37kU:
	movq $56,904(%r13)
	jmp *-8(%r13)
	.size sat_s2V7W_entry, .-sat_s2V7W_entry


==================== Asm code ====================
2018-03-16 15:57:33.768046538 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2V7W_info:
	.quad	sat_s2V7W_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:33.769103145 UTC

.section .text
.align 8
sat_s2V7Z_entry:
_c37l6:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c37l7
_c37l8:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c37la
_c37l9:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $:_con_info,-16(%r12)
	movq $GHC.Show.$fShow(,)2_closure,-8(%r12)
	movq %rbx,(%r12)
	leaq -14(%r12),%r14
	movq %rax,%rbx
	addq $-16,%rbp
	jmp stg_ap_p_fast
_c37la:
	movq $24,904(%r13)
_c37l7:
	jmp *-16(%r13)
	.size sat_s2V7Z_entry, .-sat_s2V7Z_entry


==================== Asm code ====================
2018-03-16 15:57:33.770061936 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2V7Z_info:
	.quad	sat_s2V7Z_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:33.771049869 UTC

.section .text
.align 8
sat_s2V81_entry:
_c37ld:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _c37lh
_c37lg:
	movq 7(%rbx),%rax
	movq $sat_s2V7Z_info,-72(%r12)
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	movq $:_con_info,-40(%r12)
	movq $GHC.Float.$fShowDouble3_closure+1,-32(%r12)
	leaq -72(%r12),%rax
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	movq $GHC.Show.$fShow(,)4_closure,-8(%r12)
	leaq -38(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c37lh:
	movq $80,904(%r13)
	jmp *-8(%r13)
	.size sat_s2V81_entry, .-sat_s2V81_entry


==================== Asm code ====================
2018-03-16 15:57:33.77203067 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2V81_info:
	.quad	sat_s2V81_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:33.772963394 UTC

.section .text
.align 8
.globl GHC.Float.showSignedFloat_entry
.type GHC.Float.showSignedFloat_entry, @object
GHC.Float.showSignedFloat_entry:
_c37li:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _c37lj
_c37lk:
	movq $block_c37jQ_info,-40(%rbp)
	movq %r14,%rax
	movq %rax,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-40,%rbp
	jmp GHC.Float.$p1RealFloat_entry
_c37lj:
	movl $GHC.Float.showSignedFloat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.showSignedFloat_entry, .-GHC.Float.showSignedFloat_entry


==================== Asm code ====================
2018-03-16 15:57:33.774407269 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.showSignedFloat_info
.type GHC.Float.showSignedFloat_info, @object
GHC.Float.showSignedFloat_info:
	.quad	GHC.Float.showSignedFloat_entry
	.quad	0
	.quad	12884901902
	.quad	17179869208
	.quad	S2VLN_srt+832


==================== Asm code ====================
2018-03-16 15:57:33.775258686 UTC

.section .text
.align 8
_c37jQ:
_c37jQ:
	movq $block_c37jU_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p1RealFrac_entry
	.size _c37jQ, .-_c37jQ


==================== Asm code ====================
2018-03-16 15:57:33.776035789 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37jQ_info:
	.quad	_c37jQ
	.quad	4
	.quad	4294967326
	.quad	S2VLN_srt+832


==================== Asm code ====================
2018-03-16 15:57:33.777031867 UTC

.section .text
.align 8
_c37jU:
_c37jU:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c37lo
_c37ln:
	movq $$dNum_s2V7N_info,-40(%r12)
	movq %rbx,-24(%r12)
	movq $sat_s2V83_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	movq $block_c37kc_info,-16(%rbp)
	movq %rbx,%r14
	leaq -16(%r12),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp GHC.Real.$p2Real_entry
_c37lo:
	movq $48,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c37jU, .-_c37jU


==================== Asm code ====================
2018-03-16 15:57:33.778052445 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37jU_info:
	.quad	_c37jU
	.quad	4
	.quad	4294967326
	.quad	S2VLN_srt+832


==================== Asm code ====================
2018-03-16 15:57:33.778955492 UTC

.section .text
.align 8
_c37kc:
_c37kc:
	movq 8(%rbp),%rax
	movq $block_c37lp_info,8(%rbp)
	movq %rbx,%r14
	movq $stg_ap_pp_info,-16(%rbp)
	movq 48(%rbp),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp GHC.Classes.<_entry
	.size _c37kc, .-_c37kc


==================== Asm code ====================
2018-03-16 15:57:33.779849368 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37kc_info:
	.quad	_c37kc
	.quad	6
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.780810095 UTC

.section .text
.align 8
_c37lp:
_c37lp:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c37lE
_u37lV:
	addq $8,%rbp
	jmp _s2V7O
_c37lE:
	movq $block_c37lB_info,(%rbp)
	movq 16(%rbp),%r14
	movq $stg_ap_p_info,-16(%rbp)
	movq 40(%rbp),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Float.isNegativeZero_entry
	.size _c37lp, .-_c37lp


==================== Asm code ====================
2018-03-16 15:57:33.781821285 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37lp_info:
	.quad	_c37lp
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.782703691 UTC

.section .text
.align 8
_c37lB:
_c37lB:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c37lK
_u37lW:
	addq $8,%rbp
	jmp _s2V7O
_c37lK:
	movq 40(%rbp),%r14
	movq 24(%rbp),%rbx
	addq $48,%rbp
	jmp stg_ap_p_fast
	.size _c37lB, .-_c37lB


==================== Asm code ====================
2018-03-16 15:57:33.783553009 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37lB_info:
	.quad	_c37lB
	.quad	133
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.784489722 UTC

.section .text
.align 8
_s2V7O:
_s2V7O:
	movq $block_c37kl_info,-8(%rbp)
	movq 24(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c37kl
_c37km:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _s2V7O, .-_s2V7O


==================== Asm code ====================
2018-03-16 15:57:33.7856739 UTC

.section .text
.align 8
_c37kl:
_c37kl:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c37lu
_c37lt:
	movq 7(%rbx),%rax
	movq $g_s2V7R_info,-48(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq 40(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-16(%r12)
	leaq -48(%r12),%rbx
	cmpq $6,%rax
	jle _c37lw
_c37lx:
	movq $sat_s2V81_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c37lw:
	movq $sat_s2V7W_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c37lu:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c37kl, .-_c37kl


==================== Asm code ====================
2018-03-16 15:57:33.786420035 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37kl_info:
	.quad	_c37kl
	.quad	645
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.791142914 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.clamp_closure
.type GHC.Float.clamp_closure, @object
GHC.Float.clamp_closure:
	.quad	GHC.Float.clamp_info


==================== Asm code ====================
2018-03-16 15:57:33.791952149 UTC

.section .text
.align 8
.globl GHC.Float.clamp_entry
.type GHC.Float.clamp_entry, @object
GHC.Float.clamp_entry:
_c37nf:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c37nj
_c37nk:
	movq $block_c37nc_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c37nc
_c37nd:
	movq (%rbx),%rax
	jmp *(%rax)
_c37nj:
	movl $GHC.Float.clamp_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.clamp_entry, .-GHC.Float.clamp_entry


==================== Asm code ====================
2018-03-16 15:57:33.792660759 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.clamp_info
.type GHC.Float.clamp_info, @object
GHC.Float.clamp_info:
	.quad	GHC.Float.clamp_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:33.793428397 UTC

.section .text
.align 8
_c37nc:
_c37nc:
	movq $block_c37ni_info,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c37ni
_c37nm:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c37nc, .-_c37nc


==================== Asm code ====================
2018-03-16 15:57:33.794095605 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37nc_info:
	.quad	_c37nc
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.795557184 UTC

.section .text
.align 8
_c37ni:
_c37ni:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c37ns
_c37nr:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rcx
	movq %rax,%rdx
	negq %rdx
	cmpq %rcx,%rax
	jg _c37nH
_c37nQ:
	cmpq %rax,%rdx
	jg _c37nO
_c37nP:
	addq $-16,%r12
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c37nO:
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rdx,(%r12)
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c37nH:
	cmpq %rcx,%rdx
	jg _c37nE
_c37nF:
	addq $-16,%r12
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c37nE:
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rdx,(%r12)
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c37ns:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c37ni, .-_c37ni


==================== Asm code ====================
2018-03-16 15:57:33.796356269 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37ni_info:
	.quad	_c37ni
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.809918413 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$dmscaleFloat_closure
.type GHC.Float.$dmscaleFloat_closure, @object
GHC.Float.$dmscaleFloat_closure:
	.quad	GHC.Float.$dmscaleFloat_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:33.810740546 UTC

.section .text
.align 8
sat_s2V8r_entry:
_c37oB:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c37oC
_c37oD:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c37oz_info,-24(%rbp)
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp GHC.Real.$p1Real_entry
_c37oC:
	jmp *-16(%r13)
	.size sat_s2V8r_entry, .-sat_s2V8r_entry


==================== Asm code ====================
2018-03-16 15:57:33.811396502 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2V8r_info:
	.quad	sat_s2V8r_entry
	.quad	1
	.quad	4294967312
	.quad	S2VLN_srt+832


==================== Asm code ====================
2018-03-16 15:57:33.812036008 UTC

.section .text
.align 8
_c37oz:
_c37oz:
	movq %rbx,%r14
	movq $stg_ap_p_info,-8(%rbp)
	movq $GHC.Float.rationalToDouble5_closure,(%rbp)
	addq $-8,%rbp
	jmp GHC.Num.fromInteger_entry
	.size _c37oz, .-_c37oz


==================== Asm code ====================
2018-03-16 15:57:33.812613818 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37oz_info:
	.quad	_c37oz
	.quad	0
	.quad	4294967326
	.quad	S2VLN_srt+832


==================== Asm code ====================
2018-03-16 15:57:33.813379202 UTC

.section .text
.align 8
ds2_s2V8v_entry:
_c37p5:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c37p6
_c37p7:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Float.decodeFloat_entry
_c37p6:
	jmp *-16(%r13)
	.size ds2_s2V8v_entry, .-ds2_s2V8v_entry


==================== Asm code ====================
2018-03-16 15:57:33.814037189 UTC

.section .data.rel.ro
.align 8
.align 1
ds2_s2V8v_info:
	.quad	ds2_s2V8v_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:33.814810183 UTC

.section .text
.align 8
sat_s2V8Z_entry:
_c37pf:
	leaq -80(%rbp),%rax
	cmpq %r15,%rax
	jb _c37pC
_c37pD:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c37pc_info,-48(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 40(%rbx),%rdx
	movq 32(%rbx),%rbx
	movq %rax,-40(%rbp)
	movq %rcx,-32(%rbp)
	movq %rdx,-24(%rbp)
	addq $-48,%rbp
	testb $7,%bl
	jne _c37pc
_c37pd:
	movq (%rbx),%rax
	jmp *(%rax)
_c37pC:
	jmp *-16(%r13)
	.size sat_s2V8Z_entry, .-sat_s2V8Z_entry


==================== Asm code ====================
2018-03-16 15:57:33.815519609 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2V8Z_info:
	.quad	sat_s2V8Z_entry
	.quad	4294967299
	.quad	15


==================== Asm code ====================
2018-03-16 15:57:33.816210631 UTC

.section .text
.align 8
_c37pc:
_c37pc:
	movq $block_c37pi_info,(%rbp)
	movq 15(%rbx),%rbx
	testb $7,%bl
	jne _c37pi
_c37pj:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c37pc, .-_c37pc


==================== Asm code ====================
2018-03-16 15:57:33.816818307 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37pc_info:
	.quad	_c37pc
	.quad	259
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.817543421 UTC

.section .text
.align 8
_c37pi:
_c37pi:
	movq $block_c37pn_info,-8(%rbp)
	movq 8(%rbp),%r14
	movq $stg_ap_p_info,-24(%rbp)
	movq 16(%rbp),%rax
	movq %rax,-16(%rbp)
	movq 7(%rbx),%rax
	movq %rax,(%rbp)
	addq $-24,%rbp
	jmp GHC.Float.floatRange_entry
	.size _c37pi, .-_c37pi


==================== Asm code ====================
2018-03-16 15:57:33.818119389 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37pi_info:
	.quad	_c37pi
	.quad	259
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.818793568 UTC

.section .text
.align 8
_c37pn:
_c37pn:
	movq $block_c37pr_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c37pr
_c37ps:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c37pn, .-_c37pn


==================== Asm code ====================
2018-03-16 15:57:33.819385681 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37pn_info:
	.quad	_c37pn
	.quad	580
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.820109579 UTC

.section .text
.align 8
_c37pr:
_c37pr:
	movq $block_c37pw_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c37pw
_c37px:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c37pr, .-_c37pr


==================== Asm code ====================
2018-03-16 15:57:33.820778303 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37pr_info:
	.quad	_c37pr
	.quad	1157
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.821495234 UTC

.section .text
.align 8
_c37pw:
_c37pw:
	movq $block_c37pB_info,(%rbp)
	movq 24(%rbp),%r14
	movq $stg_ap_p_info,-16(%rbp)
	movq 32(%rbp),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq %rax,32(%rbp)
	addq $-16,%rbp
	jmp GHC.Float.floatDigits_entry
	.size _c37pw, .-_c37pw


==================== Asm code ====================
2018-03-16 15:57:33.822174306 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37pw_info:
	.quad	_c37pw
	.quad	1221
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.823239088 UTC

.section .text
.align 8
_c37pB:
_c37pB:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c37pO
_c37pN:
	movq 40(%rbp),%rax
	movq 16(%rbp),%rcx
	movq 7(%rbx),%rbx
	shlq $2,%rbx
	subq 32(%rbp),%rbx
	movq 8(%rbp),%rdx
	addq %rbx,%rdx
	movq %rdx,%rbx
	negq %rbx
	cmpq %rax,%rdx
	jg _c37qk
_c37qB:
	cmpq %rdx,%rbx
	jg _c37qu
_c37qA:
	movq $GHC.Types.I#_con_info,-8(%r12)
	addq %rdx,%rcx
	movq %rcx,(%r12)
	leaq -7(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c37qu:
	movq $GHC.Types.I#_con_info,-8(%r12)
	addq %rbx,%rcx
	movq %rcx,(%r12)
	leaq -7(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c37qk:
	cmpq %rax,%rbx
	jg _c37qc
_c37qi:
	movq $GHC.Types.I#_con_info,-8(%r12)
	addq %rax,%rcx
	movq %rcx,(%r12)
	leaq -7(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c37qc:
	movq $GHC.Types.I#_con_info,-8(%r12)
	addq %rbx,%rcx
	movq %rcx,(%r12)
	leaq -7(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c37pO:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c37pB, .-_c37pB


==================== Asm code ====================
2018-03-16 15:57:33.824712354 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37pB_info:
	.quad	_c37pB
	.quad	1989
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.825744872 UTC

.section .text
.align 8
.globl GHC.Float.$dmscaleFloat_entry
.type GHC.Float.$dmscaleFloat_entry, @object
GHC.Float.$dmscaleFloat_entry:
_c37qG:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _c37qH
_c37qI:
	movq $block_c37og_info,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c37og
_c37oh:
	movq (%rbx),%rax
	jmp *(%rax)
_c37qH:
	movl $GHC.Float.$dmscaleFloat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$dmscaleFloat_entry, .-GHC.Float.$dmscaleFloat_entry


==================== Asm code ====================
2018-03-16 15:57:33.826435488 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$dmscaleFloat_info
.type GHC.Float.$dmscaleFloat_info, @object
GHC.Float.$dmscaleFloat_info:
	.quad	GHC.Float.$dmscaleFloat_entry
	.quad	0
	.quad	21474836494
	.quad	12884901911
	.quad	S2VLN_srt+832


==================== Asm code ====================
2018-03-16 15:57:33.827125861 UTC

.section .text
.align 8
_c37og:
_c37og:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jne _c37qL
_u37rk:
	addq $16,%rbp
	jmp _c37rf
_c37qL:
	movq $block_c37on_info,-8(%rbp)
	movq 8(%rbp),%r14
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp GHC.Float.$p1RealFloat_entry
	.size _c37og, .-_c37og


==================== Asm code ====================
2018-03-16 15:57:33.827771427 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37og_info:
	.quad	_c37og
	.quad	2
	.quad	4294967326
	.quad	S2VLN_srt+832


==================== Asm code ====================
2018-03-16 15:57:33.828401798 UTC

.section .text
.align 8
_c37on:
_c37on:
	movq $block_c37or_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p1RealFrac_entry
	.size _c37on, .-_c37on


==================== Asm code ====================
2018-03-16 15:57:33.829008075 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37on_info:
	.quad	_c37on
	.quad	67
	.quad	4294967326
	.quad	S2VLN_srt+832


==================== Asm code ====================
2018-03-16 15:57:33.829912088 UTC

.section .text
.align 8
_c37or:
_c37or:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c37qP
_c37qO:
	movq $sat_s2V8r_info,-16(%r12)
	movq %rbx,(%r12)
	movq $block_c37oH_info,-8(%rbp)
	movq %rbx,%r14
	leaq -16(%r12),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp GHC.Real.$p2Real_entry
_c37qP:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c37or, .-_c37or


==================== Asm code ====================
2018-03-16 15:57:33.830737073 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37or_info:
	.quad	_c37or
	.quad	67
	.quad	4294967326
	.quad	S2VLN_srt+832


==================== Asm code ====================
2018-03-16 15:57:33.83157897 UTC

.section .text
.align 8
_c37oH:
_c37oH:
	movq $block_c37oL_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Classes.$p1Ord_entry
	.size _c37oH, .-_c37oH


==================== Asm code ====================
2018-03-16 15:57:33.832297357 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37oH_info:
	.quad	_c37oH
	.quad	132
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.83318469 UTC

.section .text
.align 8
_c37oL:
_c37oL:
	movq 8(%rbp),%rax
	movq $block_c37oP_info,8(%rbp)
	movq %rbx,%r14
	movq $stg_ap_pp_info,-16(%rbp)
	movq 32(%rbp),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp GHC.Classes.==_entry
	.size _c37oL, .-_c37oL


==================== Asm code ====================
2018-03-16 15:57:33.834073351 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37oL_info:
	.quad	_c37oL
	.quad	132
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.835053862 UTC

.section .text
.align 8
_c37oP:
_c37oP:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c37qU
_u37rl:
	addq $24,%rbp
	jmp _c37rf
_c37qU:
	movq $block_c37oT_info,(%rbp)
	movq 16(%rbp),%r14
	movq $stg_ap_p_info,-16(%rbp)
	movq 24(%rbp),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Float.isNaN_entry
	.size _c37oP, .-_c37oP


==================== Asm code ====================
2018-03-16 15:57:33.835888189 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37oP_info:
	.quad	_c37oP
	.quad	67
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.836822469 UTC

.section .text
.align 8
_c37oT:
_c37oT:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c37qX
_u37rm:
	addq $24,%rbp
	jmp _c37rf
_c37qX:
	movq $block_c37oX_info,(%rbp)
	movq 16(%rbp),%r14
	movq $stg_ap_p_info,-16(%rbp)
	movq 24(%rbp),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Float.isInfinite_entry
	.size _c37oT, .-_c37oT


==================== Asm code ====================
2018-03-16 15:57:33.837746472 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37oT_info:
	.quad	_c37oT
	.quad	67
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.83888559 UTC

.section .text
.align 8
_c37oX:
_c37oX:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c37qZ
_u37rn:
	addq $24,%rbp
	jmp _c37rf
_c37r2:
	movq $104,904(%r13)
	jmp stg_gc_unpt_r1
_c37qZ:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _c37r2
_c37r1:
	movq $ds2_s2V8v_info,-96(%r12)
	movq 16(%rbp),%rax
	movq %rax,-80(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-72(%r12)
	movq $sat_s2V8Z_info,-64(%r12)
	movq %rax,-48(%r12)
	movq %rbx,-40(%r12)
	leaq -96(%r12),%rbx
	movq %rbx,-32(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-24(%r12)
	movq $stg_sel_0_upd_info,-16(%r12)
	movq %rbx,(%r12)
	movq %rax,%r14
	movq $stg_ap_pp_info,8(%rbp)
	leaq -16(%r12),%rax
	movq %rax,16(%rbp)
	leaq -64(%r12),%rax
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp GHC.Float.encodeFloat_entry
	.size _c37oX, .-_c37oX


==================== Asm code ====================
2018-03-16 15:57:33.839852376 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37oX_info:
	.quad	_c37oX
	.quad	67
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.840667597 UTC

.section .text
.align 8
_c37rf:
_c37rf:
	movq (%rbp),%rbx
	addq $8,%rbp
	jmp stg_ap_0_fast
	.size _c37rf, .-_c37rf


==================== Asm code ====================
2018-03-16 15:57:33.895333416 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$wfromRat''_closure
.type GHC.Float.$wfromRat''_closure, @object
GHC.Float.$wfromRat''_closure:
	.quad	GHC.Float.$wfromRat''_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:33.896166014 UTC

.section .text
.align 8
.globl GHC.Float.$wfromRat''_slow
.type GHC.Float.$wfromRat''_slow, @object
GHC.Float.$wfromRat''_slow:
_c37t8:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.Float.$wfromRat''_entry
	.size GHC.Float.$wfromRat''_slow, .-GHC.Float.$wfromRat''_slow


==================== Asm code ====================
2018-03-16 15:57:33.897000117 UTC

.section .text
.align 8
sat_s2V9o_entry:
_c37tQ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c37tR
_c37tS:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movl $1,%esi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Integer.Type.shiftLInteger_entry
_c37tR:
	jmp *-16(%r13)
	.size sat_s2V9o_entry, .-sat_s2V9o_entry


==================== Asm code ====================
2018-03-16 15:57:33.897708649 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2V9o_info:
	.quad	sat_s2V9o_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:33.898396782 UTC

.section .text
.align 8
sat_s2V9w_entry:
_c37u7:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c37u8
_c37u9:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movl $1,%esi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Integer.Type.shiftLInteger_entry
_c37u8:
	jmp *-16(%r13)
	.size sat_s2V9w_entry, .-sat_s2V9w_entry


==================== Asm code ====================
2018-03-16 15:57:33.89903499 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2V9w_info:
	.quad	sat_s2V9w_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:33.899599839 UTC

.section .data.rel.ro
.align 8
.align 1
u37E0_srtd:
	.quad	S2VLN_srt+48
	.quad	96
	.quad	1
	.quad	2147483648


==================== Asm code ====================
2018-03-16 15:57:33.900471643 UTC

.section .text
.align 8
ds_s2V99_entry:
_c37uh:
	leaq -64(%rbp),%rax
	cmpq %r15,%rax
	jb _c37ui
_c37w3:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c37ua_info,-64(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rbx
	movq %rbx,%rdi
	movq %rax,%rbx
	movq %rdx,-56(%rbp)
	movq %rsi,-48(%rbp)
	movq %rax,-40(%rbp)
	movq %rcx,-32(%rbp)
	movq %rdi,-24(%rbp)
	addq $-64,%rbp
	testb $7,%bl
	jne _c37ua
_c37ub:
	movq (%rbx),%rax
	jmp *(%rax)
_c37ui:
	jmp *-16(%r13)
	.size ds_s2V99_entry, .-ds_s2V99_entry


==================== Asm code ====================
2018-03-16 15:57:33.901280701 UTC

.section .data.rel.ro
.align 8
.align 1
ds_s2V99_info:
	.quad	ds_s2V99_entry
	.quad	12884901890
	.quad	-4294967281
	.quad	u37E0_srtd


==================== Asm code ====================
2018-03-16 15:57:33.902768698 UTC

.section .data.rel.ro
.align 8
.align 1
u37E1_srtd:
	.quad	S2VLN_srt+48
	.quad	96
	.quad	1
	.quad	2147483648


==================== Asm code ====================
2018-03-16 15:57:33.903669896 UTC

.section .text
.align 8
_c37ua:
_c37ua:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c37uf
_c37ue:
	movq $-1,%rax
	subq 40(%rbp),%rax
	cmpq 8(%rbp),%rax
	jl _u37wv
_c37we:
	movq %rax,40(%rbp)
	addq $16,%rbp
	jmp _s2V9a
_u37wv:
	addq $8,%rbp
	jmp _c37wt
_c37uf:
	movq $block_c37wh_info,(%rbp)
	movq 7(%rbx),%rsi
	xorl %r14d,%r14d
	jmp GHC.Integer.Logarithms.Internals.integerLog2#_step_entry
	.size _c37ua, .-_c37ua


==================== Asm code ====================
2018-03-16 15:57:33.904348523 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37ua_info:
	.quad	_c37ua
	.quad	1221
	.quad	-4294967266
	.quad	u37E1_srtd


==================== Asm code ====================
2018-03-16 15:57:33.905044002 UTC

.section .text
.align 8
_c37wh:
_c37wh:
	subq 40(%rbp),%rbx
	cmpq 8(%rbp),%rbx
	jl _u37wx
_c37wu:
	movq %rbx,40(%rbp)
	addq $16,%rbp
	jmp _s2V9a
_u37wx:
	addq $8,%rbp
	jmp _c37wt
	.size _c37wh, .-_c37wh


==================== Asm code ====================
2018-03-16 15:57:33.905714905 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37wh_info:
	.quad	_c37wh
	.quad	1221
	.quad	4294967326
	.quad	S2VLN_srt+856


==================== Asm code ====================
2018-03-16 15:57:33.906341941 UTC

.section .text
.align 8
_c37wt:
_c37wt:
	movq (%rbp),%rax
	movq %rax,32(%rbp)
	addq $8,%rbp
	jmp _s2V9a
	.size _c37wt, .-_c37wt


==================== Asm code ====================
2018-03-16 15:57:33.907316565 UTC

.section .text
.align 8
_s2V9a:
_s2V9a:
	movq (%rbp),%rax
	movq 8(%rbp),%rbx
	movq 24(%rbp),%rcx
	cmpq %rax,%rcx
	jge _c37vF
_c37vW:
	subq %rcx,%rax
	testq %rax,%rax
	jl _c37vS
_c37vV:
	movq $block_c37vU_info,-8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $-8,%rbp
	jmp GHC.Integer.Type.shiftLInteger_entry
_c37vS:
	movq $block_c37vU_info,-8(%rbp)
	movq %rax,%rsi
	negq %rsi
	movq %rbx,%r14
	addq $-8,%rbp
	jmp GHC.Integer.Type.shiftRInteger_entry
_c37vD:
	movq %rbx,16(%rbp)
	movq %rdx,8(%rbp)
	jmp _s2V9c
_c37vF:
	movq 16(%rbp),%rdx
	cmpq %rax,%rcx
	je _c37vD
_c37vw:
	subq %rax,%rcx
	testq %rcx,%rcx
	jl _c37vr
_c37vu:
	movq $block_c37vt_info,-8(%rbp)
	movq %rcx,%rsi
	movq %rdx,%r14
	addq $-8,%rbp
	jmp GHC.Integer.Type.shiftLInteger_entry
_c37vr:
	movq $block_c37vt_info,-8(%rbp)
	movq %rcx,%rsi
	negq %rsi
	movq %rdx,%r14
	addq $-8,%rbp
	jmp GHC.Integer.Type.shiftRInteger_entry
	.size _s2V9a, .-_s2V9a


==================== Asm code ====================
2018-03-16 15:57:33.908164713 UTC

.section .text
.align 8
_c37vt:
_c37vt:
	movq 16(%rbp),%rax
	movq %rbx,16(%rbp)
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp _s2V9c
	.size _c37vt, .-_c37vt


==================== Asm code ====================
2018-03-16 15:57:33.908782901 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37vt_info:
	.quad	_c37vt
	.quad	836
	.quad	4294967326
	.quad	S2VLN_srt+856


==================== Asm code ====================
2018-03-16 15:57:33.909492093 UTC

.section .text
.align 8
_c37vU:
_c37vU:
	movq 24(%rbp),%rax
	movq %rbx,24(%rbp)
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _s2V9c
	.size _c37vU, .-_c37vU


==================== Asm code ====================
2018-03-16 15:57:33.910074399 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37vU_info:
	.quad	_c37vU
	.quad	708
	.quad	4294967326
	.quad	S2VLN_srt+856


==================== Asm code ====================
2018-03-16 15:57:33.910806399 UTC

.section .text
.align 8
_s2V9c:
_s2V9c:
	movq (%rbp),%rax
	movq 8(%rbp),%rbx
	testq %rax,%rax
	jl _c37um
_c37uL:
	movq $block_c37tU_info,-8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $-8,%rbp
	jmp GHC.Integer.Type.shiftLInteger_entry
_c37um:
	movq $block_c37tD_info,-8(%rbp)
	movq %rax,%rsi
	negq %rsi
	movq %rbx,%r14
	addq $-8,%rbp
	jmp GHC.Integer.Type.shiftRInteger_entry
	.size _s2V9c, .-_s2V9c


==================== Asm code ====================
2018-03-16 15:57:33.911503792 UTC

.section .text
.align 8
_c37tD:
_c37tD:
	movq $block_c37tH_info,(%rbp)
	movq 24(%rbp),%rsi
	movq %rbx,%r14
	jmp GHC.Integer.Type.leInteger#_entry
	.size _c37tD, .-_c37tD


==================== Asm code ====================
2018-03-16 15:57:33.912038535 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37tD_info:
	.quad	_c37tD
	.quad	580
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.91298396 UTC

.section .text
.align 8
_c37tH:
_c37tH:
	movq 8(%rbp),%rax
	movq 32(%rbp),%rcx
	movq 24(%rbp),%rdx
	movq 16(%rbp),%rsi
	cmpq $1,%rbx
	je _c37uH
_c37uv:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c37uy
_c37ux:
	movq $GHC.Types.I#_con_info,-40(%r12)
	subq %rax,%rcx
	movq %rcx,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	leaq -39(%r12),%rax
	movq %rax,-16(%r12)
	movq %rdx,-8(%r12)
	movq %rsi,(%r12)
	leaq -23(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c37uK:
	movq $72,904(%r13)
	jmp stg_gc_unbx_r1
_c37uH:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c37uK
_c37uJ:
	movq $sat_s2V9o_info,-64(%r12)
	movq %rsi,-48(%r12)
	movq $GHC.Types.I#_con_info,-40(%r12)
	subq %rax,%rcx
	leaq 1(%rcx),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	leaq -39(%r12),%rax
	movq %rax,-16(%r12)
	movq %rdx,-8(%r12)
	leaq -64(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c37uy:
	movq $48,904(%r13)
	jmp stg_gc_unbx_r1
	.size _c37tH, .-_c37tH


==================== Asm code ====================
2018-03-16 15:57:33.913850944 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37tH_info:
	.quad	_c37tH
	.quad	580
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.914447735 UTC

.section .text
.align 8
_c37tU:
_c37tU:
	movq $block_c37tY_info,(%rbp)
	movq 24(%rbp),%rsi
	movq %rbx,%r14
	jmp GHC.Integer.Type.leInteger#_entry
	.size _c37tU, .-_c37tU


==================== Asm code ====================
2018-03-16 15:57:33.915029287 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37tU_info:
	.quad	_c37tU
	.quad	580
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.915994814 UTC

.section .text
.align 8
_c37tY:
_c37tY:
	movq 8(%rbp),%rax
	movq 32(%rbp),%rcx
	movq 24(%rbp),%rdx
	movq 16(%rbp),%rsi
	cmpq $1,%rbx
	je _c37v6
_c37uU:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c37uX
_c37uW:
	movq $GHC.Types.I#_con_info,-40(%r12)
	subq %rax,%rcx
	movq %rcx,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	leaq -39(%r12),%rax
	movq %rax,-16(%r12)
	movq %rdx,-8(%r12)
	movq %rsi,(%r12)
	leaq -23(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c37v9:
	movq $72,904(%r13)
	jmp stg_gc_unbx_r1
_c37v6:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c37v9
_c37v8:
	movq $sat_s2V9w_info,-64(%r12)
	movq %rsi,-48(%r12)
	movq $GHC.Types.I#_con_info,-40(%r12)
	subq %rax,%rcx
	leaq 1(%rcx),%rax
	movq %rax,-32(%r12)
	movq $(,,)_con_info,-24(%r12)
	leaq -39(%r12),%rax
	movq %rax,-16(%r12)
	movq %rdx,-8(%r12)
	leaq -64(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c37uX:
	movq $48,904(%r13)
	jmp stg_gc_unbx_r1
	.size _c37tY, .-_c37tY


==================== Asm code ====================
2018-03-16 15:57:33.916842293 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37tY_info:
	.quad	_c37tY
	.quad	580
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.9174659 UTC

.section .data.rel.ro
.align 8
.align 1
u37E2_srtd:
	.quad	S2VLN_srt+8
	.quad	104
	.quad	288230376151711745
	.quad	549755814016


==================== Asm code ====================
2018-03-16 15:57:33.918247632 UTC

.section .text
.align 8
sat_s2Va1_entry:
_c37wU:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c37wV
_c37wW:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c37wR_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _c37wR
_c37wS:
	movq (%rbx),%rax
	jmp *(%rax)
_c37wV:
	jmp *-16(%r13)
	.size sat_s2Va1_entry, .-sat_s2Va1_entry


==================== Asm code ====================
2018-03-16 15:57:33.918893129 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Va1_info:
	.quad	sat_s2Va1_entry
	.quad	1
	.quad	-4294967280
	.quad	u37E2_srtd


==================== Asm code ====================
2018-03-16 15:57:33.919434483 UTC

.section .data.rel.ro
.align 8
.align 1
u37E3_srtd:
	.quad	S2VLN_srt+8
	.quad	104
	.quad	288230376151711745
	.quad	549755814016


==================== Asm code ====================
2018-03-16 15:57:33.920167635 UTC

.section .text
.align 8
_c37wR:
_c37wR:
	movq $block_c37wZ_info,-16(%rbp)
	movl $GHC.Float.rationalToDouble5_closure,%esi
	movq 23(%rbx),%rax
	movq %rax,%r14
	movq %rax,-8(%rbp)
	movq 15(%rbx),%rax
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp GHC.Integer.Type.eqInteger#_entry
	.size _c37wR, .-_c37wR


==================== Asm code ====================
2018-03-16 15:57:33.920810226 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37wR_info:
	.quad	_c37wR
	.quad	0
	.quad	-4294967266
	.quad	u37E3_srtd


==================== Asm code ====================
2018-03-16 15:57:33.921588037 UTC

.section .text
.align 8
_c37wZ:
_c37wZ:
	cmpq $1,%rbx
	je _c37xR
_c37x9:
	movq $block_c37x4_info,(%rbp)
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	jmp GHC.Integer.Type.quotRemInteger_entry
_c37xR:
	movl $GHC.Real.divZeroError_closure,%ebx
	addq $24,%rbp
	jmp stg_ap_0_fast
	.size _c37wZ, .-_c37wZ


==================== Asm code ====================
2018-03-16 15:57:33.922212821 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37wZ_info:
	.quad	_c37wZ
	.quad	2
	.quad	30064771102
	.quad	S2VLN_srt+864


==================== Asm code ====================
2018-03-16 15:57:33.922886045 UTC

.section .text
.align 8
_c37x4:
_c37x4:
	movq $block_c37x6_info,(%rbp)
	movl $1,%esi
	movq %rbx,16(%rbp)
	jmp GHC.Integer.Type.shiftLInteger_entry
	.size _c37x4, .-_c37x4


==================== Asm code ====================
2018-03-16 15:57:33.923489354 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37x4_info:
	.quad	_c37x4
	.quad	130
	.quad	21474836510
	.quad	S2VLN_srt+864


==================== Asm code ====================
2018-03-16 15:57:33.924164792 UTC

.section .text
.align 8
_c37x6:
_c37x6:
	movq 8(%rbp),%rax
	movq $block_c37xe_info,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.compareInteger_entry
	.size _c37x6, .-_c37x6


==================== Asm code ====================
2018-03-16 15:57:33.924781526 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37x6_info:
	.quad	_c37x6
	.quad	2
	.quad	21474836510
	.quad	S2VLN_srt+864


==================== Asm code ====================
2018-03-16 15:57:33.925575217 UTC

.section .text
.align 8
_c37xe:
_c37xe:
	andl $7,%ebx
	cmpq $3,%rbx
	jb _u37xT
_u37xU:
	addq $8,%rbp
	jmp _c37xN
_u37xV:
	addq $8,%rbp
	jmp _c37xG
_u37xT:
	cmpq $2,%rbx
	jb _u37xV
_c37xq:
	movq $block_c37xo_info,(%rbp)
	movq 8(%rbp),%r14
	jmp GHC.Integer.Type.integerToInt_entry
	.size _c37xe, .-_c37xe


==================== Asm code ====================
2018-03-16 15:57:33.926268589 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37xe_info:
	.quad	_c37xe
	.quad	1
	.quad	21474836510
	.quad	S2VLN_srt+864


==================== Asm code ====================
2018-03-16 15:57:33.926997554 UTC

.section .text
.align 8
_c37xo:
_c37xo:
	testb $1,%bl
	je _u37xW
_u37xX:
	addq $8,%rbp
	jmp _c37xN
_u37xW:
	addq $8,%rbp
	jmp _c37xG
	.size _c37xo, .-_c37xo


==================== Asm code ====================
2018-03-16 15:57:33.927611758 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37xo_info:
	.quad	_c37xo
	.quad	1
	.quad	21474836510
	.quad	S2VLN_srt+864


==================== Asm code ====================
2018-03-16 15:57:33.928232218 UTC

.section .text
.align 8
_c37xG:
_c37xG:
	movq (%rbp),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c37xG, .-_c37xG


==================== Asm code ====================
2018-03-16 15:57:33.92894104 UTC

.section .text
.align 8
_c37xN:
_c37xN:
	movl $GHC.Float.$fRealDouble1_closure,%esi
	movq (%rbp),%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.plusInteger_entry
	.size _c37xN, .-_c37xN


==================== Asm code ====================
2018-03-16 15:57:33.930065035 UTC

.section .text
.align 8
n'_s2Vas_entry:
_c37yB:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c37yC
_c37yJ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	negq %rbx
	testq %rbx,%rbx
	jl _c37yH
_c37yI:
	movq %rbx,%rsi
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Integer.Type.shiftLInteger_entry
_c37yH:
	movq %rbx,%rsi
	negq %rsi
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Integer.Type.shiftRInteger_entry
_c37yC:
	jmp *-16(%r13)
	.size n'_s2Vas_entry, .-n'_s2Vas_entry


==================== Asm code ====================
2018-03-16 15:57:33.931423179 UTC

.section .data.rel.ro
.align 8
.align 1
n'_s2Vas_info:
	.quad	n'_s2Vas_entry
	.quad	4294967297
	.quad	4294967315
	.quad	S2VLN_srt+856


==================== Asm code ====================
2018-03-16 15:57:33.93226312 UTC

.section .text
.align 8
sat_s2Vay_entry:
_c37z1:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c37z2
_c37z3:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movl $GHC.Float.$fRealDouble1_closure,%esi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Integer.Type.plusInteger_entry
_c37z2:
	jmp *-16(%r13)
	.size sat_s2Vay_entry, .-sat_s2Vay_entry


==================== Asm code ====================
2018-03-16 15:57:33.932853334 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Vay_info:
	.quad	sat_s2Vay_entry
	.quad	1
	.quad	21474836496
	.quad	S2VLN_srt+864


==================== Asm code ====================
2018-03-16 15:57:33.933624486 UTC

.section .text
.align 8
sat_s2VaF_entry:
_c37zp:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c37zq
_c37zr:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movl $GHC.Float.$fRealDouble1_closure,%esi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Integer.Type.plusInteger_entry
_c37zq:
	jmp *-16(%r13)
	.size sat_s2VaF_entry, .-sat_s2VaF_entry


==================== Asm code ====================
2018-03-16 15:57:33.93419159 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2VaF_info:
	.quad	sat_s2VaF_entry
	.quad	1
	.quad	21474836496
	.quad	S2VLN_srt+864


==================== Asm code ====================
2018-03-16 15:57:33.934707675 UTC

.section .data.rel.ro
.align 8
.align 1
u37E4_srtd:
	.quad	S2VLN_srt+56
	.quad	104
	.quad	1
	.quad	755914244096


==================== Asm code ====================
2018-03-16 15:57:33.935559497 UTC

.section .text
.align 8
sat_s2Vb1_entry:
_c37zM:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _c37zN
_c37AX:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	leaq 1(%rbx),%rdx
	subq %rcx,%rdx
	negq %rdx
	testq %rdx,%rdx
	jl _c37AL
_c37AS:
	movq $block_c37AR_info,-48(%rbp)
	movq %rdx,%rsi
	movq %rax,%r14
	movq %rcx,-40(%rbp)
	movq %rax,-32(%rbp)
	movq %rbx,-24(%rbp)
	addq $-48,%rbp
	jmp GHC.Integer.Type.shiftLInteger_entry
_c37AL:
	movq $block_c37AJ_info,-48(%rbp)
	movq %rdx,%rsi
	negq %rsi
	movq %rax,%r14
	movq %rcx,-40(%rbp)
	movq %rax,-32(%rbp)
	movq %rbx,-24(%rbp)
	addq $-48,%rbp
	jmp GHC.Integer.Type.shiftRInteger_entry
_c37zN:
	jmp *-16(%r13)
	.size sat_s2Vb1_entry, .-sat_s2Vb1_entry


==================== Asm code ====================
2018-03-16 15:57:33.936342392 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Vb1_info:
	.quad	sat_s2Vb1_entry
	.quad	8589934593
	.quad	-4294967281
	.quad	u37E4_srtd


==================== Asm code ====================
2018-03-16 15:57:33.936906315 UTC

.section .data.rel.ro
.align 8
.align 1
u37E5_srtd:
	.quad	S2VLN_srt+56
	.quad	104
	.quad	1
	.quad	687194767360


==================== Asm code ====================
2018-03-16 15:57:33.937628266 UTC

.section .text
.align 8
_c37AJ:
_c37AJ:
	movq %rbx,(%rbp)
	jmp _s2VaR
	.size _c37AJ, .-_c37AJ


==================== Asm code ====================
2018-03-16 15:57:33.938203462 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37AJ_info:
	.quad	_c37AJ
	.quad	323
	.quad	-4294967266
	.quad	u37E5_srtd


==================== Asm code ====================
2018-03-16 15:57:33.93872314 UTC

.section .data.rel.ro
.align 8
.align 1
u37E6_srtd:
	.quad	S2VLN_srt+56
	.quad	104
	.quad	1
	.quad	687194767360


==================== Asm code ====================
2018-03-16 15:57:33.939362185 UTC

.section .text
.align 8
_c37AR:
_c37AR:
	movq %rbx,(%rbp)
	jmp _s2VaR
	.size _c37AR, .-_c37AR


==================== Asm code ====================
2018-03-16 15:57:33.939881871 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37AR_info:
	.quad	_c37AR
	.quad	323
	.quad	-4294967266
	.quad	u37E6_srtd


==================== Asm code ====================
2018-03-16 15:57:33.940603481 UTC

.section .text
.align 8
_s2VaR:
_s2VaR:
	movq 24(%rbp),%rax
	subq 8(%rbp),%rax
	movq $block_c37A4_info,-8(%rbp)
	movq %rax,%rsi
	movq 16(%rbp),%r14
	addq $-8,%rbp
	jmp GHC.Integer.Logarithms.Internals.roundingMode#_entry
	.size _s2VaR, .-_s2VaR


==================== Asm code ====================
2018-03-16 15:57:33.941786635 UTC

.section .text
.align 8
_c37A4:
_c37A4:
	testq %rbx,%rbx
	je _u37B1
_u37AY:
	cmpq $2,%rbx
	je _u37B2
_c37Ab:
	movq $block_c37A8_info,(%rbp)
	movq 8(%rbp),%r14
	jmp GHC.Integer.Type.integerToInt_entry
_u37B2:
	addq $8,%rbp
	jmp _c37AC
_u37B1:
	addq $8,%rbp
	jmp _c37Ay
	.size _c37A4, .-_c37A4


==================== Asm code ====================
2018-03-16 15:57:33.942440653 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37A4_info:
	.quad	_c37A4
	.quad	900
	.quad	21474836510
	.quad	S2VLN_srt+864


==================== Asm code ====================
2018-03-16 15:57:33.943156093 UTC

.section .text
.align 8
_c37A8:
_c37A8:
	testb $1,%bl
	je _u37B3
_u37B4:
	addq $8,%rbp
	jmp _c37AC
_u37B3:
	addq $8,%rbp
	jmp _c37Ay
	.size _c37A8, .-_c37A8


==================== Asm code ====================
2018-03-16 15:57:33.943771985 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37A8_info:
	.quad	_c37A8
	.quad	900
	.quad	21474836510
	.quad	S2VLN_srt+864


==================== Asm code ====================
2018-03-16 15:57:33.944463222 UTC

.section .text
.align 8
_c37Ay:
_c37Ay:
	movq (%rbp),%rbx
	andq $-8,%rbx
	addq $32,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c37Ay, .-_c37Ay


==================== Asm code ====================
2018-03-16 15:57:33.945134748 UTC

.section .text
.align 8
_c37AC:
_c37AC:
	movl $GHC.Float.$fRealDouble1_closure,%esi
	movq (%rbp),%r14
	addq $32,%rbp
	jmp GHC.Integer.Type.plusInteger_entry
	.size _c37AC, .-_c37AC


==================== Asm code ====================
2018-03-16 15:57:33.945798073 UTC

.section .data.rel.ro
.align 8
.align 1
u37E7_srtd:
	.quad	S2VLN_srt+56
	.quad	105
	.quad	5
	.quad	2139967455232


==================== Asm code ====================
2018-03-16 15:57:33.946596114 UTC

.section .text
.align 8
.globl GHC.Float.$wfromRat''_entry
.type GHC.Float.$wfromRat''_entry, @object
GHC.Float.$wfromRat''_entry:
_c37Bi:
	leaq -64(%rbp),%rax
	cmpq %r15,%rax
	jb _c37Bj
_c37Bk:
	movq $block_c37Bb_info,-48(%rbp)
	movq %r9,%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-48,%rbp
	testb $7,%bl
	jne _c37Bb
_c37Bc:
	movq (%rbx),%rax
	jmp *(%rax)
_c37Bj:
	movl $GHC.Float.$wfromRat''_closure,%ebx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.Float.$wfromRat''_entry, .-GHC.Float.$wfromRat''_entry


==================== Asm code ====================
2018-03-16 15:57:33.947318232 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$wfromRat''_info
.type GHC.Float.$wfromRat''_info, @object
GHC.Float.$wfromRat''_info:
	.quad	GHC.Float.$wfromRat''_entry
	.quad	0
	.quad	-4294967282
	.quad	21474836480
	.quad	u37E7_srtd
	.quad	389
	.quad	GHC.Float.$wfromRat''_slow


==================== Asm code ====================
2018-03-16 15:57:33.947861233 UTC

.section .data.rel.ro
.align 8
.align 1
u37E8_srtd:
	.quad	S2VLN_srt+56
	.quad	104
	.quad	5
	.quad	1040455827456


==================== Asm code ====================
2018-03-16 15:57:33.94862597 UTC

.section .text
.align 8
_c37Bb:
_c37Bb:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c37Bg
_c37Bf:
	movq $1,-8(%rbp)
	movq $-1,(%rbp)
	addq $-16,%rbp
	jmp _c37te
_c37Bg:
	movq $block_c37D0_info,(%rbp)
	movq 7(%rbx),%rsi
	xorl %r14d,%r14d
	jmp GHC.Integer.Logarithms.Internals.integerLog2IsPowerOf2#_couldBe_entry
	.size _c37Bb, .-_c37Bb


==================== Asm code ====================
2018-03-16 15:57:33.949316058 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37Bb_info:
	.quad	_c37Bb
	.quad	389
	.quad	-4294967266
	.quad	u37E8_srtd


==================== Asm code ====================
2018-03-16 15:57:33.949902004 UTC

.section .data.rel.ro
.align 8
.align 1
u37E9_srtd:
	.quad	S2VLN_srt+56
	.quad	104
	.quad	5
	.quad	1040455827456


==================== Asm code ====================
2018-03-16 15:57:33.95058691 UTC

.section .text
.align 8
_c37D0:
_c37D0:
	movq %rbx,(%rbp)
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	jmp _c37te
	.size _c37D0, .-_c37D0


==================== Asm code ====================
2018-03-16 15:57:33.951216635 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37D0_info:
	.quad	_c37D0
	.quad	389
	.quad	-4294967266
	.quad	u37E9_srtd


==================== Asm code ====================
2018-03-16 15:57:33.951775284 UTC

.section .data.rel.ro
.align 8
.align 1
u37Ea_srtd:
	.quad	S2VLN_srt+56
	.quad	104
	.quad	5
	.quad	1040455827456


==================== Asm code ====================
2018-03-16 15:57:33.952773692 UTC

.section .text
.align 8
_c37te:
_c37te:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _c37Bn
_c37Bm:
	movq 48(%rbp),%rax
	cmpq $0,8(%rbp)
	je _c37CE
_c37Bp:
	movq $ds_s2V99_info,-96(%r12)
	movq %rax,-80(%r12)
	movq 56(%rbp),%rax
	movq %rax,-72(%r12)
	movq 32(%rbp),%rax
	movq %rax,-64(%r12)
	movq 40(%rbp),%rax
	movq %rax,-56(%r12)
	movq 16(%rbp),%rax
	movq %rax,-48(%r12)
	movq $stg_sel_0_upd_info,-40(%r12)
	leaq -96(%r12),%rax
	movq %rax,-24(%r12)
	movq $sat_s2Va1_info,-16(%r12)
	movq %rax,(%r12)
	movq 24(%rbp),%r14
	movq $stg_ap_pp_info,40(%rbp)
	leaq -16(%r12),%rax
	movq %rax,48(%rbp)
	leaq -40(%r12),%rax
	movq %rax,56(%rbp)
	addq $40,%rbp
	jmp GHC.Float.encodeFloat_entry
_c37CE:
	addq $-104,%r12
	movq $block_c37Bq_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c37Bq
_c37CF:
	movq (%rbx),%rax
	jmp *(%rax)
_c37Bn:
	movq $104,904(%r13)
	movq $block_c37te_info,(%rbp)
	jmp stg_gc_noregs
	.size _c37te, .-_c37te


==================== Asm code ====================
2018-03-16 15:57:33.954065231 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37te_info:
	.quad	_c37te
	.quad	1735
	.quad	-4294967266
	.quad	u37Ea_srtd


==================== Asm code ====================
2018-03-16 15:57:33.954688464 UTC

.section .data.rel.ro
.align 8
.align 1
u37Eb_srtd:
	.quad	S2VLN_srt+56
	.quad	104
	.quad	5
	.quad	765577920512


==================== Asm code ====================
2018-03-16 15:57:33.955483497 UTC

.section .text
.align 8
_c37Bq:
_c37Bq:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c37CQ
_c37CL:
	movq $-1,48(%rbp)
	addq $8,%rbp
	jmp _c37y7
_c37CQ:
	movq $block_c37CO_info,(%rbp)
	movq 7(%rbx),%rsi
	xorl %r14d,%r14d
	jmp GHC.Integer.Logarithms.Internals.integerLog2#_step_entry
	.size _c37Bq, .-_c37Bq


==================== Asm code ====================
2018-03-16 15:57:33.956155512 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37Bq_info:
	.quad	_c37Bq
	.quad	2886
	.quad	-4294967266
	.quad	u37Eb_srtd


==================== Asm code ====================
2018-03-16 15:57:33.956764019 UTC

.section .data.rel.ro
.align 8
.align 1
u37Ec_srtd:
	.quad	S2VLN_srt+56
	.quad	104
	.quad	5
	.quad	764504178688


==================== Asm code ====================
2018-03-16 15:57:33.957502636 UTC

.section .text
.align 8
_c37CO:
_c37CO:
	movq %rbx,48(%rbp)
	addq $8,%rbp
	jmp _c37y7
	.size _c37CO, .-_c37CO


==================== Asm code ====================
2018-03-16 15:57:33.958120045 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37CO_info:
	.quad	_c37CO
	.quad	2886
	.quad	-4294967266
	.quad	u37Ec_srtd


==================== Asm code ====================
2018-03-16 15:57:33.960121747 UTC

.section .text
.align 8
_c37y7:
_c37y7:
	addq $56,%r12
	movq 40(%rbp),%rax
	cmpq 856(%r13),%r12
	ja _c37Bt
_c37Bs:
	movq 8(%rbp),%rbx
	movq 16(%rbp),%rcx
	movq 24(%rbp),%rdx
	movq 32(%rbp),%rsi
	movq (%rbp),%rdi
	movq %rdi,%r8
	addq %rcx,%r8
	decq %r8
	cmpq %r8,%rax
	jl _c37Cz
_c37CD:
	cmpq %rdx,%rax
	jge _c37CB
_c37CC:
	movq $GHC.Types.I#_con_info,-48(%r12)
	negq %rdi
	movq %rdi,-40(%r12)
	leaq -47(%r12),%rax
	addq $-40,%r12
	movq %rbx,%r14
	movq $stg_ap_pp_info,24(%rbp)
	movq %rax,40(%rbp)
	addq $24,%rbp
	jmp GHC.Float.encodeFloat_entry
_c37CB:
	movq $GHC.Types.I#_con_info,-48(%r12)
	movl $1,%ecx
	subq %rdx,%rcx
	subq %rdi,%rcx
	movq %rax,%rdi
	addq %rcx,%rdi
	movq %rdi,-40(%r12)
	movq $sat_s2Vb1_info,-32(%r12)
	movq %rsi,-16(%r12)
	movq %rdx,-8(%r12)
	movq %rax,(%r12)
	movq %rbx,%r14
	movq $stg_ap_pp_info,24(%rbp)
	leaq -32(%r12),%rax
	movq %rax,32(%rbp)
	leaq -47(%r12),%rax
	movq %rax,40(%rbp)
	addq $24,%rbp
	jmp GHC.Float.encodeFloat_entry
_c37Cz:
	movq %rcx,%r8
	subq %rdx,%r8
	addq %r8,%rdi
	testq %rdi,%rdi
	jg _c37Cw
_c37Cx:
	movq $GHC.Types.I#_con_info,-48(%r12)
	subq %rdx,%rcx
	subq %rdi,%rcx
	movq %rcx,-40(%r12)
	leaq -47(%r12),%rax
	addq $-40,%r12
	movq %rbx,%r14
	movq $stg_ap_pp_info,24(%rbp)
	movq %rax,40(%rbp)
	addq $24,%rbp
	jmp GHC.Float.encodeFloat_entry
_c37Cw:
	cmpq %rax,%rdi
	jg _c37C3
_c37C4:
	movq $n'_s2Vas_info,-48(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	leaq -48(%r12),%rax
	addq $-24,%r12
	movq $block_c37yP_info,(%rbp)
	movq %rsi,%rbx
	leaq -1(%rdi),%rsi
	movq %rbx,%r14
	movq %rax,40(%rbp)
	jmp GHC.Integer.Logarithms.Internals.roundingMode#_entry
_c37C3:
	incq %rax
	cmpq %rax,%rdi
	jle _c37BC
_c37C1:
	addq $-56,%r12
	movq %rbx,%r14
	movq $stg_ap_pp_info,24(%rbp)
	movq $GHC.Float.rationalToDouble5_closure,32(%rbp)
	movq $GHC.Float.minExpt_closure+1,40(%rbp)
	addq $24,%rbp
	jmp GHC.Float.encodeFloat_entry
_c37BC:
	addq $-56,%r12
	movq $block_c37BA_info,(%rbp)
	movq %rsi,%rbx
	testb $7,%bl
	jne _c37BA
_c37BD:
	movq (%rbx),%rax
	jmp *(%rax)
_c37Bt:
	movq $56,904(%r13)
	movq $block_c37y6_info,-8(%rbp)
	movq %rax,%rbx
	addq $-8,%rbp
	jmp stg_gc_unbx_r1
	.size _c37y7, .-_c37y7


==================== Asm code ====================
2018-03-16 15:57:33.961376554 UTC

.section .data.rel.ro
.align 8
.align 1
u37Ed_srtd:
	.quad	S2VLN_srt+56
	.quad	104
	.quad	5
	.quad	764504178688


==================== Asm code ====================
2018-03-16 15:57:33.962067242 UTC

.section .text
.align 8
_c37y6:
_c37y6:
	movq %rbx,48(%rbp)
	addq $8,%rbp
	jmp _c37y7
	.size _c37y6, .-_c37y6


==================== Asm code ====================
2018-03-16 15:57:33.962602336 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37y6_info:
	.quad	_c37y6
	.quad	2886
	.quad	-4294967266
	.quad	u37Ed_srtd


==================== Asm code ====================
2018-03-16 15:57:33.963148705 UTC

.section .data.rel.ro
.align 8
.align 1
u37Ee_srtd:
	.quad	S2VLN_srt+72
	.quad	100
	.quad	1
	.quad	36507222016


==================== Asm code ====================
2018-03-16 15:57:33.963992116 UTC

.section .text
.align 8
_c37BA:
_c37BA:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c37BQ
_c37BG:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c37BL
_c37BK:
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq 16(%rbp),%rax
	subq 24(%rbp),%rax
	movq %rax,(%r12)
	movq 8(%rbp),%r14
	movq $stg_ap_pp_info,24(%rbp)
	movq $GHC.Float.$fRealDouble1_closure,32(%rbp)
	leaq -7(%r12),%rax
	movq %rax,40(%rbp)
	addq $24,%rbp
	jmp GHC.Float.encodeFloat_entry
_c37BQ:
	movq $block_c37BO_info,(%rbp)
	movq 7(%rbx),%rsi
	xorl %r14d,%r14d
	jmp GHC.Integer.Logarithms.Internals.integerLog2IsPowerOf2#_couldBe_entry
_c37BL:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c37BA, .-_c37BA


==================== Asm code ====================
2018-03-16 15:57:33.964714914 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37BA_info:
	.quad	_c37BA
	.quad	1925
	.quad	-4294967266
	.quad	u37Ee_srtd


==================== Asm code ====================
2018-03-16 15:57:33.965400199 UTC

.section .text
.align 8
_c37BO:
_c37BO:
	movq %r14,40(%rbp)
	jmp _c37BR
	.size _c37BO, .-_c37BO


==================== Asm code ====================
2018-03-16 15:57:33.96595129 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37BO_info:
	.quad	_c37BO
	.quad	1925
	.quad	73014444062
	.quad	S2VLN_srt+832


==================== Asm code ====================
2018-03-16 15:57:33.966791259 UTC

.section .text
.align 8
_c37BR:
_c37BR:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c37BW
_c37BV:
	movq 8(%rbp),%rax
	cmpq $0,40(%rbp)
	je _c37C0
_c37BZ:
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq 16(%rbp),%rbx
	subq 24(%rbp),%rbx
	movq %rbx,(%r12)
	movq %rax,%r14
	movq $stg_ap_pp_info,24(%rbp)
	movq $GHC.Float.$fRealDouble1_closure,32(%rbp)
	leaq -7(%r12),%rax
	movq %rax,40(%rbp)
	addq $24,%rbp
	jmp GHC.Float.encodeFloat_entry
_c37C0:
	addq $-16,%r12
	movq %rax,%r14
	movq $stg_ap_pp_info,24(%rbp)
	movq $GHC.Float.rationalToDouble5_closure,32(%rbp)
	movq $GHC.Float.minExpt_closure+1,40(%rbp)
	addq $24,%rbp
	jmp GHC.Float.encodeFloat_entry
_c37BW:
	movq $16,904(%r13)
	movq $block_c37BR_info,(%rbp)
	jmp stg_gc_noregs
	.size _c37BR, .-_c37BR


==================== Asm code ====================
2018-03-16 15:57:33.967523583 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37BR_info:
	.quad	_c37BR
	.quad	1925
	.quad	73014444062
	.quad	S2VLN_srt+832


==================== Asm code ====================
2018-03-16 15:57:33.968472562 UTC

.section .text
.align 8
_c37yP:
_c37yP:
	movq 40(%rbp),%rax
	movq 8(%rbp),%rcx
	movq 16(%rbp),%rdx
	movq 24(%rbp),%rsi
	testq %rbx,%rbx
	je _c37Ca
_u37DC:
	cmpq $1,%rbx
	je _c37Cg
_c37C6:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c37C9
_c37C8:
	movq $GHC.Types.I#_con_info,-32(%r12)
	subq %rsi,%rdx
	movq %rdx,-24(%r12)
	movq $sat_s2Vay_info,-16(%r12)
	movq %rax,(%r12)
	movq %rcx,%r14
	movq $stg_ap_pp_info,24(%rbp)
	leaq -16(%r12),%rax
	movq %rax,32(%rbp)
	leaq -31(%r12),%rax
	movq %rax,40(%rbp)
	addq $24,%rbp
	jmp GHC.Float.encodeFloat_entry
_c37Cg:
	movq $block_c37z7_info,(%rbp)
	movq %rax,%r14
	jmp GHC.Integer.Type.integerToInt_entry
_c37Ce:
	movq $16,904(%r13)
	jmp stg_gc_unbx_r1
_c37Ca:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c37Ce
_c37Cd:
	movq $GHC.Types.I#_con_info,-8(%r12)
	subq %rsi,%rdx
	movq %rdx,(%r12)
	movq %rcx,%r14
	movq $stg_ap_pp_info,24(%rbp)
	movq %rax,32(%rbp)
	leaq -7(%r12),%rax
	movq %rax,40(%rbp)
	addq $24,%rbp
	jmp GHC.Float.encodeFloat_entry
_c37C9:
	movq $40,904(%r13)
	jmp stg_gc_unbx_r1
	.size _c37yP, .-_c37yP


==================== Asm code ====================
2018-03-16 15:57:33.969881811 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37yP_info:
	.quad	_c37yP
	.quad	901
	.quad	21474836510
	.quad	S2VLN_srt+864


==================== Asm code ====================
2018-03-16 15:57:33.970579877 UTC

.section .text
.align 8
_c37z7:
_c37z7:
	andl $1,%ebx
	testq %rbx,%rbx
	jne _u37DK
_u37DJ:
	movq %rbx,32(%rbp)
	addq $8,%rbp
	jmp _c37Cq
_u37DK:
	movq %rbx,32(%rbp)
	addq $8,%rbp
	jmp _c37zf
	.size _c37z7, .-_c37z7


==================== Asm code ====================
2018-03-16 15:57:33.971174744 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37z7_info:
	.quad	_c37z7
	.quad	901
	.quad	21474836510
	.quad	S2VLN_srt+864


==================== Asm code ====================
2018-03-16 15:57:33.971989727 UTC

.section .text
.align 8
_c37zf:
_c37zf:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c37Cm
_c37Cl:
	movq $GHC.Types.I#_con_info,-32(%r12)
	movq 8(%rbp),%rax
	subq 16(%rbp),%rax
	movq %rax,-24(%r12)
	movq $sat_s2VaF_info,-16(%r12)
	movq 32(%rbp),%rax
	movq %rax,(%r12)
	movq (%rbp),%r14
	movq $stg_ap_pp_info,16(%rbp)
	leaq -16(%r12),%rax
	movq %rax,24(%rbp)
	leaq -31(%r12),%rax
	movq %rax,32(%rbp)
	addq $16,%rbp
	jmp GHC.Float.encodeFloat_entry
_c37Cm:
	movq $40,904(%r13)
	movq $block_c37ze_info,-8(%rbp)
	movq 24(%rbp),%rbx
	addq $-8,%rbp
	jmp stg_gc_unbx_r1
	.size _c37zf, .-_c37zf


==================== Asm code ====================
2018-03-16 15:57:33.972815301 UTC

.section .text
.align 8
_c37ze:
_c37ze:
	movq %rbx,32(%rbp)
	addq $8,%rbp
	jmp _c37zf
	.size _c37ze, .-_c37ze


==================== Asm code ====================
2018-03-16 15:57:33.973434747 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37ze_info:
	.quad	_c37ze
	.quad	901
	.quad	21474836510
	.quad	S2VLN_srt+864


==================== Asm code ====================
2018-03-16 15:57:33.974209546 UTC

.section .text
.align 8
_c37Cq:
_c37Cq:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c37Cu
_c37Ct:
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq 8(%rbp),%rax
	subq 16(%rbp),%rax
	movq %rax,(%r12)
	movq (%rbp),%r14
	movq $stg_ap_pp_info,16(%rbp)
	movq 32(%rbp),%rax
	movq %rax,24(%rbp)
	leaq -7(%r12),%rax
	movq %rax,32(%rbp)
	addq $16,%rbp
	jmp GHC.Float.encodeFloat_entry
_c37Cu:
	movq $16,904(%r13)
	movq $block_c37Co_info,-8(%rbp)
	movq 24(%rbp),%rbx
	addq $-8,%rbp
	jmp stg_gc_unbx_r1
	.size _c37Cq, .-_c37Cq


==================== Asm code ====================
2018-03-16 15:57:33.974964631 UTC

.section .text
.align 8
_c37Co:
_c37Co:
	movq %rbx,32(%rbp)
	addq $8,%rbp
	jmp _c37Cq
	.size _c37Co, .-_c37Co


==================== Asm code ====================
2018-03-16 15:57:33.975537434 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37Co_info:
	.quad	_c37Co
	.quad	901
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.979493983 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.fromRat''_closure
.type GHC.Float.fromRat''_closure, @object
GHC.Float.fromRat''_closure:
	.quad	GHC.Float.fromRat''_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:33.980443418 UTC

.section .text
.align 8
.globl GHC.Float.fromRat''_entry
.type GHC.Float.fromRat''_entry, @object
GHC.Float.fromRat''_entry:
_c37IA:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c37IE
_c37IF:
	movq $block_c37Ix_info,-40(%rbp)
	movq %rsi,%rbx
	movq %r14,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _c37Ix
_c37Iy:
	movq (%rbx),%rax
	jmp *(%rax)
_c37IE:
	movl $GHC.Float.fromRat''_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.fromRat''_entry, .-GHC.Float.fromRat''_entry


==================== Asm code ====================
2018-03-16 15:57:33.981146862 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.fromRat''_info
.type GHC.Float.fromRat''_info, @object
GHC.Float.fromRat''_info:
	.quad	GHC.Float.fromRat''_entry
	.quad	0
	.quad	12884901902
	.quad	21474836505
	.quad	S2VLN_srt+888


==================== Asm code ====================
2018-03-16 15:57:33.981911308 UTC

.section .text
.align 8
_c37Ix:
_c37Ix:
	movq $block_c37ID_info,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c37ID
_c37IH:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c37Ix, .-_c37Ix


==================== Asm code ====================
2018-03-16 15:57:33.982493449 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37Ix_info:
	.quad	_c37Ix
	.quad	4
	.quad	4294967326
	.quad	S2VLN_srt+888


==================== Asm code ====================
2018-03-16 15:57:33.983184176 UTC

.section .text
.align 8
_c37ID:
_c37ID:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 7(%rbx),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $40,%rbp
	jmp GHC.Float.$wfromRat''_entry
	.size _c37ID, .-_c37ID


==================== Asm code ====================
2018-03-16 15:57:33.983760266 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37ID_info:
	.quad	_c37ID
	.quad	132
	.quad	4294967326
	.quad	S2VLN_srt+888


==================== Asm code ====================
2018-03-16 15:57:33.990321554 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$w$cfromEnum_closure
.type GHC.Float.$w$cfromEnum_closure, @object
GHC.Float.$w$cfromEnum_closure:
	.quad	GHC.Float.$w$cfromEnum_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:33.990927189 UTC

.section .data.rel.ro
.align 8
.align 1
u37K3_srtd:
	.quad	S2VLN_srt+648
	.quad	33
	.quad	4303355905


==================== Asm code ====================
2018-03-16 15:57:33.991754708 UTC

.section .text
.align 8
.globl GHC.Float.$w$cfromEnum_entry
.type GHC.Float.$w$cfromEnum_entry, @object
GHC.Float.$w$cfromEnum_entry:
_c37Je:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c37Jf
_c37Jg:
	movq $block_c37J5_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.decodeDoubleInteger_entry
_c37Jf:
	movl $GHC.Float.$w$cfromEnum_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$w$cfromEnum_entry, .-GHC.Float.$w$cfromEnum_entry


==================== Asm code ====================
2018-03-16 15:57:33.992390507 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$w$cfromEnum_info
.type GHC.Float.$w$cfromEnum_info, @object
GHC.Float.$w$cfromEnum_info:
	.quad	GHC.Float.$w$cfromEnum_entry
	.quad	0
	.quad	-4294967282
	.quad	4294967303
	.quad	u37K3_srtd


==================== Asm code ====================
2018-03-16 15:57:33.993182077 UTC

.section .text
.align 8
_c37J5:
_c37J5:
	testq %r14,%r14
	jge _c37Jc
_c37Jd:
	negq %r14
	cmpq $52,%r14
	jle _c37Jx
_c37K2:
	xorl %ebx,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c37Jx:
	movq $block_c37Jv_info,-16(%rbp)
	movl $GHC.Float.rationalToDouble5_closure,%esi
	movq %r14,%rax
	movq %rbx,%r14
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp GHC.Integer.Type.ltInteger#_entry
_c37Jc:
	movq $block_c37Jj_info,(%rbp)
	movq %r14,%rsi
	movq %rbx,%r14
	jmp GHC.Integer.Type.shiftLInteger_entry
	.size _c37J5, .-_c37J5


==================== Asm code ====================
2018-03-16 15:57:33.993893742 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37J5_info:
	.quad	_c37J5
	.quad	0
	.quad	4294967326
	.quad	S2VLN_srt+832


==================== Asm code ====================
2018-03-16 15:57:33.994545622 UTC

.section .text
.align 8
_c37Jj:
_c37Jj:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.integerToInt_entry
	.size _c37Jj, .-_c37Jj


==================== Asm code ====================
2018-03-16 15:57:33.995096137 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37Jj_info:
	.quad	_c37Jj
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.995857619 UTC

.section .text
.align 8
_c37Jv:
_c37Jv:
	movq 16(%rbp),%rax
	cmpq $1,%rbx
	je _c37JZ
_c37JI:
	movq $block_c37JB_info,(%rbp)
	movq %rax,%r14
	jmp GHC.Integer.Type.integerToInt_entry
_c37JZ:
	movq $block_c37JM_info,(%rbp)
	movq %rax,%r14
	jmp GHC.Integer.Type.negateInteger_entry
	.size _c37Jv, .-_c37Jv


==================== Asm code ====================
2018-03-16 15:57:33.996465637 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37Jv_info:
	.quad	_c37Jv
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.997091177 UTC

.section .text
.align 8
_c37JM:
_c37JM:
	movq $block_c37JQ_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Integer.Type.integerToInt_entry
	.size _c37JM, .-_c37JM


==================== Asm code ====================
2018-03-16 15:57:33.997745536 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37JM_info:
	.quad	_c37JM
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.99837834 UTC

.section .text
.align 8
_c37JQ:
_c37JQ:
	movq 8(%rbp),%rcx
	sarq %cl,%rbx
	negq %rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c37JQ, .-_c37JQ


==================== Asm code ====================
2018-03-16 15:57:33.998963651 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37JQ_info:
	.quad	_c37JQ
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:33.999592483 UTC

.section .text
.align 8
_c37JB:
_c37JB:
	movq 8(%rbp),%rcx
	sarq %cl,%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c37JB, .-_c37JB


==================== Asm code ====================
2018-03-16 15:57:34.000171151 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37JB_info:
	.quad	_c37JB
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:34.003966628 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fEnumDouble_$cfromEnum_closure
.type GHC.Float.$fEnumDouble_$cfromEnum_closure, @object
GHC.Float.$fEnumDouble_$cfromEnum_closure:
	.quad	GHC.Float.$fEnumDouble_$cfromEnum_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:34.00478787 UTC

.section .text
.align 8
.globl GHC.Float.$fEnumDouble_$cfromEnum_entry
.type GHC.Float.$fEnumDouble_$cfromEnum_entry, @object
GHC.Float.$fEnumDouble_$cfromEnum_entry:
_c37KE:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c37KM
_c37KN:
	movq $block_c37KB_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c37KB
_c37KC:
	movq (%rbx),%rax
	jmp *(%rax)
_c37KM:
	movl $GHC.Float.$fEnumDouble_$cfromEnum_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fEnumDouble_$cfromEnum_entry, .-GHC.Float.$fEnumDouble_$cfromEnum_entry


==================== Asm code ====================
2018-03-16 15:57:34.005480961 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fEnumDouble_$cfromEnum_info
.type GHC.Float.$fEnumDouble_$cfromEnum_info, @object
GHC.Float.$fEnumDouble_$cfromEnum_info:
	.quad	GHC.Float.$fEnumDouble_$cfromEnum_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S2VLN_srt+904


==================== Asm code ====================
2018-03-16 15:57:34.006112956 UTC

.section .text
.align 8
_c37KB:
_c37KB:
	movq $block_c37KH_info,(%rbp)
	movsd 7(%rbx),%xmm1
	jmp GHC.Float.$w$cfromEnum_entry
	.size _c37KB, .-_c37KB


==================== Asm code ====================
2018-03-16 15:57:34.006663181 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37KB_info:
	.quad	_c37KB
	.quad	0
	.quad	4294967326
	.quad	S2VLN_srt+904


==================== Asm code ====================
2018-03-16 15:57:34.007367953 UTC

.section .text
.align 8
_c37KH:
_c37KH:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c37KR
_c37KQ:
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c37KR:
	movq $16,904(%r13)
	jmp stg_gc_unbx_r1
	.size _c37KH, .-_c37KH


==================== Asm code ====================
2018-03-16 15:57:34.008032214 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37KH_info:
	.quad	_c37KH
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:34.010405124 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fEnumDouble_$cenumFromTo_closure
.type GHC.Float.$fEnumDouble_$cenumFromTo_closure, @object
GHC.Float.$fEnumDouble_$cenumFromTo_closure:
	.quad	GHC.Float.$fEnumDouble_$cenumFromTo_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:34.011094572 UTC

.section .text
.align 8
.globl GHC.Float.$fEnumDouble_$cenumFromTo_entry
.type GHC.Float.$fEnumDouble_$cenumFromTo_entry, @object
GHC.Float.$fEnumDouble_$cenumFromTo_entry:
_c37La:
	movq %rsi,%r8
	movq %r14,%rdi
	movl $GHC.Float.$fFractionalDouble_closure+1,%esi
	movl $GHC.Classes.$fOrdDouble_closure,%r14d
	jmp GHC.Real.numericEnumFromTo_entry
	.size GHC.Float.$fEnumDouble_$cenumFromTo_entry, .-GHC.Float.$fEnumDouble_$cenumFromTo_entry


==================== Asm code ====================
2018-03-16 15:57:34.011709738 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fEnumDouble_$cenumFromTo_info
.type GHC.Float.$fEnumDouble_$cenumFromTo_info, @object
GHC.Float.$fEnumDouble_$cenumFromTo_info:
	.quad	GHC.Float.$fEnumDouble_$cenumFromTo_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S2VLN_srt+920


==================== Asm code ====================
2018-03-16 15:57:34.014260923 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fEnumDouble_$cenumFromThenTo_closure
.type GHC.Float.$fEnumDouble_$cenumFromThenTo_closure, @object
GHC.Float.$fEnumDouble_$cenumFromThenTo_closure:
	.quad	GHC.Float.$fEnumDouble_$cenumFromThenTo_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:34.015005994 UTC

.section .text
.align 8
.globl GHC.Float.$fEnumDouble_$cenumFromThenTo_entry
.type GHC.Float.$fEnumDouble_$cenumFromThenTo_entry, @object
GHC.Float.$fEnumDouble_$cenumFromThenTo_entry:
_c37Ll:
	movq %rdi,%r9
	movq %rsi,%r8
	movq %r14,%rdi
	movl $GHC.Float.$fFractionalDouble_closure+1,%esi
	movl $GHC.Classes.$fOrdDouble_closure,%r14d
	jmp GHC.Real.numericEnumFromThenTo_entry
	.size GHC.Float.$fEnumDouble_$cenumFromThenTo_entry, .-GHC.Float.$fEnumDouble_$cenumFromThenTo_entry


==================== Asm code ====================
2018-03-16 15:57:34.015699218 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fEnumDouble_$cenumFromThenTo_info
.type GHC.Float.$fEnumDouble_$cenumFromThenTo_info, @object
GHC.Float.$fEnumDouble_$cenumFromThenTo_info:
	.quad	GHC.Float.$fEnumDouble_$cenumFromThenTo_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	S2VLN_srt+928


==================== Asm code ====================
2018-03-16 15:57:34.017757118 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fEnumDouble_closure
.type GHC.Float.$fEnumDouble_closure, @object
GHC.Float.$fEnumDouble_closure:
	.quad	GHC.Enum.C:Enum_con_info
	.quad	GHC.Float.$fEnumDouble_$csucc_closure+1
	.quad	GHC.Float.$fEnumDouble_$cpred_closure+1
	.quad	GHC.Float.RealFracMethods.int2Double_closure+1
	.quad	GHC.Float.$fEnumDouble_$cfromEnum_closure+1
	.quad	GHC.Float.$fEnumDouble_$snumericEnumFrom_closure+1
	.quad	GHC.Float.$fEnumDouble_$snumericEnumFromThen_closure+2
	.quad	GHC.Float.$fEnumDouble_$cenumFromTo_closure+2
	.quad	GHC.Float.$fEnumDouble_$cenumFromThenTo_closure+3
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:34.021007251 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fEnumFloat_$cenumFromTo_closure
.type GHC.Float.$fEnumFloat_$cenumFromTo_closure, @object
GHC.Float.$fEnumFloat_$cenumFromTo_closure:
	.quad	GHC.Float.$fEnumFloat_$cenumFromTo_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:34.021711609 UTC

.section .data.rel.ro
.align 8
.align 1
u37LA_srtd:
	.quad	S2VLN_srt+232
	.quad	87
	.quad	1
	.quad	4194304


==================== Asm code ====================
2018-03-16 15:57:34.022417704 UTC

.section .text
.align 8
.globl GHC.Float.$fEnumFloat_$cenumFromTo_entry
.type GHC.Float.$fEnumFloat_$cenumFromTo_entry, @object
GHC.Float.$fEnumFloat_$cenumFromTo_entry:
_c37Lx:
	movq %rsi,%r8
	movq %r14,%rdi
	movl $GHC.Float.$fFractionalFloat_closure+1,%esi
	movl $GHC.Classes.$fOrdFloat_closure,%r14d
	jmp GHC.Real.numericEnumFromTo_entry
	.size GHC.Float.$fEnumFloat_$cenumFromTo_entry, .-GHC.Float.$fEnumFloat_$cenumFromTo_entry


==================== Asm code ====================
2018-03-16 15:57:34.023026538 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fEnumFloat_$cenumFromTo_info
.type GHC.Float.$fEnumFloat_$cenumFromTo_info, @object
GHC.Float.$fEnumFloat_$cenumFromTo_info:
	.quad	GHC.Float.$fEnumFloat_$cenumFromTo_entry
	.quad	0
	.quad	-4294967282
	.quad	8589934607
	.quad	u37LA_srtd


==================== Asm code ====================
2018-03-16 15:57:34.025602008 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fEnumFloat_$cenumFromThenTo_closure
.type GHC.Float.$fEnumFloat_$cenumFromThenTo_closure, @object
GHC.Float.$fEnumFloat_$cenumFromThenTo_closure:
	.quad	GHC.Float.$fEnumFloat_$cenumFromThenTo_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:34.026116207 UTC

.section .data.rel.ro
.align 8
.align 1
u37LN_srtd:
	.quad	S2VLN_srt+232
	.quad	89
	.quad	1
	.quad	16777216


==================== Asm code ====================
2018-03-16 15:57:34.026849082 UTC

.section .text
.align 8
.globl GHC.Float.$fEnumFloat_$cenumFromThenTo_entry
.type GHC.Float.$fEnumFloat_$cenumFromThenTo_entry, @object
GHC.Float.$fEnumFloat_$cenumFromThenTo_entry:
_c37LK:
	movq %rdi,%r9
	movq %rsi,%r8
	movq %r14,%rdi
	movl $GHC.Float.$fFractionalFloat_closure+1,%esi
	movl $GHC.Classes.$fOrdFloat_closure,%r14d
	jmp GHC.Real.numericEnumFromThenTo_entry
	.size GHC.Float.$fEnumFloat_$cenumFromThenTo_entry, .-GHC.Float.$fEnumFloat_$cenumFromThenTo_entry


==================== Asm code ====================
2018-03-16 15:57:34.027456917 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fEnumFloat_$cenumFromThenTo_info
.type GHC.Float.$fEnumFloat_$cenumFromThenTo_info, @object
GHC.Float.$fEnumFloat_$cenumFromThenTo_info:
	.quad	GHC.Float.$fEnumFloat_$cenumFromThenTo_entry
	.quad	0
	.quad	-4294967282
	.quad	12884901911
	.quad	u37LN_srtd


==================== Asm code ====================
2018-03-16 15:57:34.031640107 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$w$cfromEnum1_closure
.type GHC.Float.$w$cfromEnum1_closure, @object
GHC.Float.$w$cfromEnum1_closure:
	.quad	GHC.Float.$w$cfromEnum1_info


==================== Asm code ====================
2018-03-16 15:57:34.032503096 UTC

.section .text
.align 8
.globl GHC.Float.$w$cfromEnum1_entry
.type GHC.Float.$w$cfromEnum1_entry, @object
GHC.Float.$w$cfromEnum1_entry:
_c37M6:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c37M7
_c37M8:
	movq $block_c37LX_info,-8(%rbp)
	addq $-8,%rbp
	jmp stg_decodeFloat_Int#
_c37M7:
	movl $GHC.Float.$w$cfromEnum1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$w$cfromEnum1_entry, .-GHC.Float.$w$cfromEnum1_entry


==================== Asm code ====================
2018-03-16 15:57:34.033146096 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$w$cfromEnum1_info
.type GHC.Float.$w$cfromEnum1_info, @object
GHC.Float.$w$cfromEnum1_info:
	.quad	GHC.Float.$w$cfromEnum1_entry
	.quad	0
	.quad	14
	.quad	4294967302


==================== Asm code ====================
2018-03-16 15:57:34.034357164 UTC

.section .text
.align 8
_c37LX:
_c37LX:
	testq %r14,%r14
	jge _c37M4
_c37M5:
	negq %r14
	cmpq $23,%r14
	jle _c37MI
_c37MJ:
	xorl %ebx,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c37MI:
	testq %rbx,%rbx
	jge _c37Mx
_c37MG:
	negq %rbx
	movq %r14,%rcx
	sarq %cl,%rbx
	negq %rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c37Mx:
	movq %r14,%rcx
	shrq %cl,%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c37M4:
	movq $block_c37Mb_info,-8(%rbp)
	movq %r14,%rax
	movq %rbx,%r14
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
	.size _c37LX, .-_c37LX


==================== Asm code ====================
2018-03-16 15:57:34.035065976 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37LX_info:
	.quad	_c37LX
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:34.035708182 UTC

.section .text
.align 8
_c37Mb:
_c37Mb:
	movq 8(%rbp),%rax
	movq $block_c37Mf_info,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.shiftLInteger_entry
	.size _c37Mb, .-_c37Mb


==================== Asm code ====================
2018-03-16 15:57:34.036316175 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37Mb_info:
	.quad	_c37Mb
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:34.036932935 UTC

.section .text
.align 8
_c37Mf:
_c37Mf:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.integerToInt_entry
	.size _c37Mf, .-_c37Mf


==================== Asm code ====================
2018-03-16 15:57:34.037549171 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37Mf_info:
	.quad	_c37Mf
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:34.04115361 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fEnumFloat_$cfromEnum_closure
.type GHC.Float.$fEnumFloat_$cfromEnum_closure, @object
GHC.Float.$fEnumFloat_$cfromEnum_closure:
	.quad	GHC.Float.$fEnumFloat_$cfromEnum_info


==================== Asm code ====================
2018-03-16 15:57:34.042115034 UTC

.section .text
.align 8
.globl GHC.Float.$fEnumFloat_$cfromEnum_entry
.type GHC.Float.$fEnumFloat_$cfromEnum_entry, @object
GHC.Float.$fEnumFloat_$cfromEnum_entry:
_c37Na:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c37Ni
_c37Nj:
	movq $block_c37N7_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c37N7
_c37N8:
	movq (%rbx),%rax
	jmp *(%rax)
_c37Ni:
	movl $GHC.Float.$fEnumFloat_$cfromEnum_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fEnumFloat_$cfromEnum_entry, .-GHC.Float.$fEnumFloat_$cfromEnum_entry


==================== Asm code ====================
2018-03-16 15:57:34.042791914 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fEnumFloat_$cfromEnum_info
.type GHC.Float.$fEnumFloat_$cfromEnum_info, @object
GHC.Float.$fEnumFloat_$cfromEnum_info:
	.quad	GHC.Float.$fEnumFloat_$cfromEnum_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:34.043460358 UTC

.section .text
.align 8
_c37N7:
_c37N7:
	movq $block_c37Nd_info,(%rbp)
	movss 7(%rbx),%xmm1
	jmp GHC.Float.$w$cfromEnum1_entry
	.size _c37N7, .-_c37N7


==================== Asm code ====================
2018-03-16 15:57:34.044023677 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37N7_info:
	.quad	_c37N7
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:34.044785466 UTC

.section .text
.align 8
_c37Nd:
_c37Nd:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c37Nn
_c37Nm:
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c37Nn:
	movq $16,904(%r13)
	jmp stg_gc_unbx_r1
	.size _c37Nd, .-_c37Nd


==================== Asm code ====================
2018-03-16 15:57:34.045441411 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37Nd_info:
	.quad	_c37Nd
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:34.047381804 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fEnumFloat_closure
.type GHC.Float.$fEnumFloat_closure, @object
GHC.Float.$fEnumFloat_closure:
	.quad	GHC.Enum.C:Enum_con_info
	.quad	GHC.Float.$fEnumFloat_$csucc_closure+1
	.quad	GHC.Float.$fEnumFloat_$cpred_closure+1
	.quad	GHC.Float.RealFracMethods.int2Float_closure+1
	.quad	GHC.Float.$fEnumFloat_$cfromEnum_closure+1
	.quad	GHC.Float.$fEnumFloat_$snumericEnumFrom_closure+1
	.quad	GHC.Float.$fEnumFloat_$snumericEnumFromThen_closure+2
	.quad	GHC.Float.$fEnumFloat_$cenumFromTo_closure+2
	.quad	GHC.Float.$fEnumFloat_$cenumFromThenTo_closure+3
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:34.05056069 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.expt1_closure
.type GHC.Float.expt1_closure, @object
GHC.Float.expt1_closure:
	.quad	GHC.Float.expt1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:34.051288157 UTC

.section .text
.align 8
.globl GHC.Float.expt1_entry
.type GHC.Float.expt1_entry, @object
GHC.Float.expt1_entry:
_c37NH:
	movl $lvl7_r2UqF_closure,%r9d
	movq %rdi,%r8
	movq %r14,%rdi
	movl $GHC.Show.$fShowInt_closure,%r14d
	jmp GHC.Arr.$windexError_entry
	.size GHC.Float.expt1_entry, .-GHC.Float.expt1_entry


==================== Asm code ====================
2018-03-16 15:57:34.051883617 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.expt1_info
.type GHC.Float.expt1_info, @object
GHC.Float.expt1_info:
	.quad	GHC.Float.expt1_entry
	.quad	0
	.quad	21474836494
	.quad	12884901911
	.quad	S2VLN_srt+696


==================== Asm code ====================
2018-03-16 15:57:34.061584571 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$wexpt_closure
.type GHC.Float.$wexpt_closure, @object
GHC.Float.$wexpt_closure:
	.quad	GHC.Float.$wexpt_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:34.062166713 UTC

.section .data.rel.ro
.align 8
.align 1
u37Qf_srtd:
	.quad	S2VLN_srt+552
	.quad	53
	.quad	8444249804636161


==================== Asm code ====================
2018-03-16 15:57:34.063019238 UTC

.section .text
.align 8
.globl GHC.Float.$wexpt_entry
.type GHC.Float.$wexpt_entry, @object
GHC.Float.$wexpt_entry:
_c37NU:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c37NV
_c37NW:
	movq $block_c37NS_info,-24(%rbp)
	movq %rsi,%rax
	movl $GHC.Float.$fRealFloatDouble5_closure,%esi
	movq %r14,%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Integer.Type.eqInteger#_entry
_c37NV:
	movl $GHC.Float.$wexpt_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$wexpt_entry, .-GHC.Float.$wexpt_entry


==================== Asm code ====================
2018-03-16 15:57:34.063707278 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$wexpt_info
.type GHC.Float.$wexpt_info, @object
GHC.Float.$wexpt_info:
	.quad	GHC.Float.$wexpt_entry
	.quad	0
	.quad	-4294967282
	.quad	8589934606
	.quad	u37Qf_srtd


==================== Asm code ====================
2018-03-16 15:57:34.064671836 UTC

.section .text
.align 8
_c37NS:
_c37NS:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c37O1
_c37O0:
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	movq 8(%rbp),%rcx
	leaq -7(%r12),%rdx
	cmpq $1,%rbx
	jne _s2Vc3
_c37Q2:
	testq %rax,%rax
	jl _s2Vc3
_c37Q1:
	cmpq $1100,%rax
	jg _s2Vc3
_c37PH:
	movq $block_c37Pw_info,(%rbp)
	movl $GHC.Float.expts_closure,%ebx
	movq %rdx,8(%rbp)
	testb $7,%bl
	jne _c37Pw
_c37Px:
	movq (%rbx),%rax
	jmp *(%rax)
_s2Vc3:
	movq $block_c37O8_info,-8(%rbp)
	movl $GHC.Float.expts4_closure,%esi
	movq %rcx,%r14
	movq %rdx,(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.eqInteger#_entry
_c37O1:
	movq $16,904(%r13)
	jmp stg_gc_unbx_r1
	.size _c37NS, .-_c37NS


==================== Asm code ====================
2018-03-16 15:57:34.065437207 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37NS_info:
	.quad	_c37NS
	.quad	130
	.quad	792633598841716766
	.quad	S2VLN_srt+752


==================== Asm code ====================
2018-03-16 15:57:34.066148954 UTC

.section .text
.align 8
_c37Pw:
_c37Pw:
	movq $block_c37PB_info,-16(%rbp)
	movq 15(%rbx),%rax
	movq 23(%rbx),%rcx
	movq 7(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c37PB
_c37PC:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c37Pw, .-_c37Pw


==================== Asm code ====================
2018-03-16 15:57:34.066770863 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37Pw_info:
	.quad	_c37Pw
	.quad	130
	.quad	4294967326
	.quad	S2VLN_srt+968


==================== Asm code ====================
2018-03-16 15:57:34.067565931 UTC

.section .text
.align 8
_c37PB:
_c37PB:
	movq $block_c37PG_info,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c37PG
_c37PK:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c37PB, .-_c37PB


==================== Asm code ====================
2018-03-16 15:57:34.068218982 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37PB_info:
	.quad	_c37PB
	.quad	516
	.quad	4294967326
	.quad	S2VLN_srt+968


==================== Asm code ====================
2018-03-16 15:57:34.069012621 UTC

.section .text
.align 8
_c37PG:
_c37PG:
	movq 32(%rbp),%rax
	movq 40(%rbp),%rcx
	movq 24(%rbp),%rdx
	movq 8(%rbp),%rsi
	movq %rbx,%rdi
	cmpq %rcx,%rsi
	jg _c37PY
_c37Q0:
	cmpq 7(%rbx),%rcx
	jg _c37PY
_c37PZ:
	movq 16(%rbp),%rax
	subq %rsi,%rcx
	movq 24(%rax,%rcx,8),%rbx
	andq $-8,%rbx
	addq $48,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c37PY:
	movq %rdi,%rcx
	movq %rax,%rdi
	movq %rdx,%rsi
	movq %rcx,%r14
	addq $48,%rbp
	jmp GHC.Float.expt1_entry
	.size _c37PG, .-_c37PG


==================== Asm code ====================
2018-03-16 15:57:34.069764638 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37PG_info:
	.quad	_c37PG
	.quad	1093
	.quad	4294967326
	.quad	S2VLN_srt+968


==================== Asm code ====================
2018-03-16 15:57:34.070672326 UTC

.section .text
.align 8
_c37O8:
_c37O8:
	movq 16(%rbp),%rax
	movq 24(%rbp),%rcx
	cmpq $1,%rbx
	je _c37Pe
_c37Op:
	testq %rcx,%rcx
	jl _c37OF
_c37Om:
	testq %rcx,%rcx
	je _c37OC
_c37Oj:
	movq %rcx,%rsi
	movq %rax,%r14
	addq $32,%rbp
	jmp GHC.Real.$wf_entry
_c37Pe:
	cmpq $324,%rcx
	jg _c37OH
_c37OU:
	movq $block_c37OJ_info,(%rbp)
	movl $GHC.Float.expts10_closure,%ebx
	testb $7,%bl
	jne _c37OJ
_c37OK:
	movq (%rbx),%rax
	jmp *(%rax)
_c37OF:
	movl $GHC.Real.^1_closure,%ebx
	addq $32,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c37OC:
	movl $GHC.Real.$fEnumRatio1_closure,%ebx
	addq $32,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c37OH:
	testq %rcx,%rcx
	jl _c37OF
_c37OE:
	testq %rcx,%rcx
	je _c37OC
_c37OB:
	movq %rcx,%rsi
	movq %rax,%r14
	addq $32,%rbp
	jmp GHC.Real.$wf_entry
	.size _c37O8, .-_c37O8


==================== Asm code ====================
2018-03-16 15:57:34.071471048 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37O8_info:
	.quad	_c37O8
	.quad	259
	.quad	360288000254410782
	.quad	S2VLN_srt+760


==================== Asm code ====================
2018-03-16 15:57:34.072159576 UTC

.section .text
.align 8
_c37OJ:
_c37OJ:
	movq $block_c37OO_info,-8(%rbp)
	movq 15(%rbx),%rax
	movq 23(%rbx),%rcx
	movq 7(%rbx),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c37OO
_c37OP:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c37OJ, .-_c37OJ


==================== Asm code ====================
2018-03-16 15:57:34.072759345 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37OJ_info:
	.quad	_c37OJ
	.quad	387
	.quad	4294967326
	.quad	S2VLN_srt+968


==================== Asm code ====================
2018-03-16 15:57:34.073555549 UTC

.section .text
.align 8
_c37OO:
_c37OO:
	movq $block_c37OT_info,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 24(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,24(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c37OT
_c37OX:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c37OO, .-_c37OO


==================== Asm code ====================
2018-03-16 15:57:34.074220201 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37OO_info:
	.quad	_c37OO
	.quad	516
	.quad	4294967326
	.quad	S2VLN_srt+968


==================== Asm code ====================
2018-03-16 15:57:34.075076135 UTC

.section .text
.align 8
_c37OT:
_c37OT:
	movq 24(%rbp),%rax
	movq 40(%rbp),%rcx
	movq 32(%rbp),%rdx
	movq 8(%rbp),%rsi
	movq %rbx,%rdi
	cmpq %rcx,%rsi
	jg _c37Pb
_c37Pd:
	cmpq 7(%rbx),%rcx
	jg _c37Pb
_c37Pc:
	movq 16(%rbp),%rax
	subq %rsi,%rcx
	movq 24(%rax,%rcx,8),%rbx
	andq $-8,%rbx
	addq $48,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c37Pb:
	movq %rdi,%rcx
	movq %rax,%rdi
	movq %rdx,%rsi
	movq %rcx,%r14
	addq $48,%rbp
	jmp GHC.Float.expt1_entry
	.size _c37OT, .-_c37OT


==================== Asm code ====================
2018-03-16 15:57:34.075808439 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37OT_info:
	.quad	_c37OT
	.quad	1093
	.quad	4294967326
	.quad	S2VLN_srt+968


==================== Asm code ====================
2018-03-16 15:57:34.079662128 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.expt_closure
.type GHC.Float.expt_closure, @object
GHC.Float.expt_closure:
	.quad	GHC.Float.expt_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:34.080523491 UTC

.section .text
.align 8
.globl GHC.Float.expt_entry
.type GHC.Float.expt_entry, @object
GHC.Float.expt_entry:
_c37R9:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c37Ra
_c37Rb:
	movq $block_c37R6_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c37R6
_c37R7:
	movq (%rbx),%rax
	jmp *(%rax)
_c37Ra:
	movl $GHC.Float.expt_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.expt_entry, .-GHC.Float.expt_entry


==================== Asm code ====================
2018-03-16 15:57:34.08120211 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.expt_info
.type GHC.Float.expt_info, @object
GHC.Float.expt_info:
	.quad	GHC.Float.expt_entry
	.quad	0
	.quad	21474836494
	.quad	8589934607
	.quad	S2VLN_srt+960


==================== Asm code ====================
2018-03-16 15:57:34.082233168 UTC

.section .text
.align 8
_c37R6:
_c37R6:
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Float.$wexpt_entry
	.size _c37R6, .-_c37R6


==================== Asm code ====================
2018-03-16 15:57:34.082855146 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37R6_info:
	.quad	_c37R6
	.quad	1
	.quad	4294967326
	.quad	S2VLN_srt+960


==================== Asm code ====================
2018-03-16 15:57:34.099143979 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.fromRat'_closure
.type GHC.Float.fromRat'_closure, @object
GHC.Float.fromRat'_closure:
	.quad	GHC.Float.fromRat'_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:34.100085074 UTC

.section .text
.align 8
sat_s2VcY_entry:
_c37Sw:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c37SA
_c37SB:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c37St_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _c37St
_c37Su:
	movq (%rbx),%rax
	jmp *(%rax)
_c37SA:
	jmp *-16(%r13)
	.size sat_s2VcY_entry, .-sat_s2VcY_entry


==================== Asm code ====================
2018-03-16 15:57:34.100744069 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2VcY_info:
	.quad	sat_s2VcY_entry
	.quad	1
	.quad	12884901904
	.quad	S2VLN_srt+984


==================== Asm code ====================
2018-03-16 15:57:34.101497184 UTC

.section .text
.align 8
_c37St:
_c37St:
	movq $block_c37Sz_info,(%rbp)
	movq 7(%rbx),%rbx
	testb $7,%bl
	jne _c37Sz
_c37SD:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c37St, .-_c37St


==================== Asm code ====================
2018-03-16 15:57:34.102108836 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37St_info:
	.quad	_c37St
	.quad	0
	.quad	12884901918
	.quad	S2VLN_srt+984


==================== Asm code ====================
2018-03-16 15:57:34.102786852 UTC

.section .text
.align 8
_c37Sz:
_c37Sz:
	movq 15(%rbx),%rdi
	movq 7(%rbx),%rsi
	movl $GHC.Real.$fIntegralInteger_closure,%r14d
	addq $8,%rbp
	jmp GHC.Real.$w$s$cround_entry
	.size _c37Sz, .-_c37Sz


==================== Asm code ====================
2018-03-16 15:57:34.103421207 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37Sz_info:
	.quad	_c37Sz
	.quad	0
	.quad	12884901918
	.quad	S2VLN_srt+984


==================== Asm code ====================
2018-03-16 15:57:34.104260345 UTC

.section .text
.align 8
r_s2VcP_entry:
_c37SK:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c37SL
_c37SM:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c37SO
_c37SN:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $stg_sel_1_upd_info,-40(%r12)
	movq %rbx,-24(%r12)
	movq $sat_s2VcY_info,-16(%r12)
	movq %rbx,(%r12)
	movq %rax,%r14
	movq $stg_ap_pp_info,-40(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-32(%rbp)
	leaq -40(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Float.encodeFloat_entry
_c37SO:
	movq $48,904(%r13)
_c37SL:
	jmp *-16(%r13)
	.size r_s2VcP_entry, .-r_s2VcP_entry


==================== Asm code ====================
2018-03-16 15:57:34.104984115 UTC

.section .data.rel.ro
.align 8
.align 1
r_s2VcP_info:
	.quad	r_s2VcP_entry
	.quad	2
	.quad	12884901906
	.quad	S2VLN_srt+984


==================== Asm code ====================
2018-03-16 15:57:34.105787406 UTC

.section .text
.align 8
b_s2VcQ_entry:
_c37SR:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c37SS
_c37ST:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Float.floatRadix_entry
_c37SS:
	jmp *-16(%r13)
	.size b_s2VcQ_entry, .-b_s2VcQ_entry


==================== Asm code ====================
2018-03-16 15:57:34.106504214 UTC

.section .data.rel.ro
.align 8
.align 1
b_s2VcQ_info:
	.quad	b_s2VcQ_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:34.107267118 UTC

.section .text
.align 8
sat_s2Vdu_entry:
_c37TC:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c37TD
_c37TE:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c37Tz_info,-24(%rbp)
	movl $GHC.Real.$fEnumRatio1_closure,%r8d
	movq 16(%rbx),%rdi
	movq 32(%rbx),%rsi
	movq 24(%rbx),%r14
	addq $-24,%rbp
	jmp GHC.Real.$w$s$c/_entry
_c37TD:
	jmp *-16(%r13)
	.size sat_s2Vdu_entry, .-sat_s2Vdu_entry


==================== Asm code ====================
2018-03-16 15:57:34.108684853 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Vdu_info:
	.quad	sat_s2Vdu_entry
	.quad	3
	.quad	1152921508901814287
	.quad	S2VLN_srt+776


==================== Asm code ====================
2018-03-16 15:57:34.109513285 UTC

.section .text
.align 8
_c37Tz:
_c37Tz:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c37TH
_c37TG:
	movq $GHC.Real.:%_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c37TH:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c37Tz, .-_c37Tz


==================== Asm code ====================
2018-03-16 15:57:34.110126092 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37Tz_info:
	.quad	_c37Tz
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:34.110899744 UTC

.section .text
.align 8
ds_s2VcR_entry:
_c37TI:
	leaq -104(%rbp),%rax
	cmpq %r15,%rax
	jb _c37TJ
_c37TK:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c37RB_info,-56(%rbp)
	movq 16(%rbx),%rax
	movq %rax,%r14
	movq $stg_ap_p_info,-72(%rbp)
	movq 32(%rbx),%rcx
	movq %rcx,-64(%rbp)
	movq %rax,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq %rcx,-32(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-72,%rbp
	jmp GHC.Float.floatDigits_entry
_c37TJ:
	jmp *-16(%r13)
	.size ds_s2VcR_entry, .-ds_s2VcR_entry


==================== Asm code ====================
2018-03-16 15:57:34.111551279 UTC

.section .data.rel.ro
.align 8
.align 1
ds_s2VcR_info:
	.quad	ds_s2VcR_entry
	.quad	4
	.quad	3494802145587232783
	.quad	S2VLN_srt+776


==================== Asm code ====================
2018-03-16 15:57:34.11222249 UTC

.section .text
.align 8
_c37RB:
_c37RB:
	movq $block_c37RF_info,-8(%rbp)
	movq 7(%rbx),%rax
	movq %rax,%rsi
	movq 32(%rbp),%r14
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp GHC.Float.$wexpt_entry
	.size _c37RB, .-_c37RB


==================== Asm code ====================
2018-03-16 15:57:34.112827295 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37RB_info:
	.quad	_c37RB
	.quad	4
	.quad	3494802145587232798
	.quad	S2VLN_srt+776


==================== Asm code ====================
2018-03-16 15:57:34.114006133 UTC

.section .text
.align 8
_c37RF:
_c37RF:
	movq $block_c37RJ_info,(%rbp)
	movq %rbx,%rax
	movq 24(%rbp),%rbx
	movq %rax,24(%rbp)
	testb $7,%bl
	jne _c37RJ
_c37RK:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c37RF, .-_c37RF


==================== Asm code ====================
2018-03-16 15:57:34.114638282 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37RF_info:
	.quad	_c37RF
	.quad	69
	.quad	3494802145587232798
	.quad	S2VLN_srt+776


==================== Asm code ====================
2018-03-16 15:57:34.115329484 UTC

.section .text
.align 8
_c37RJ:
_c37RJ:
	movq $block_c37RO_info,-16(%rbp)
	movq 7(%rbx),%rax
	movq %rax,%rsi
	movq 40(%rbp),%r14
	movq 15(%rbx),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp GHC.Float.$wintegerLogBase_entry
	.size _c37RJ, .-_c37RJ


==================== Asm code ====================
2018-03-16 15:57:34.115922946 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37RJ_info:
	.quad	_c37RJ
	.quad	69
	.quad	3494802145587232798
	.quad	S2VLN_srt+776


==================== Asm code ====================
2018-03-16 15:57:34.116634283 UTC

.section .text
.align 8
_c37RO:
_c37RO:
	movq $block_c37RS_info,-8(%rbp)
	movq 8(%rbp),%rsi
	movq 56(%rbp),%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp GHC.Float.$wintegerLogBase_entry
	.size _c37RO, .-_c37RO


==================== Asm code ====================
2018-03-16 15:57:34.117229217 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37RO_info:
	.quad	_c37RO
	.quad	263
	.quad	3494802145587232798
	.quad	S2VLN_srt+776


==================== Asm code ====================
2018-03-16 15:57:34.117940854 UTC

.section .text
.align 8
_c37RS:
_c37RS:
	movq $block_c37RW_info,(%rbp)
	movq 40(%rbp),%r14
	movq $stg_ap_p_info,-16(%rbp)
	movq 56(%rbp),%rax
	movq %rax,-8(%rbp)
	movq %rbx,56(%rbp)
	addq $-16,%rbp
	jmp GHC.Float.floatRange_entry
	.size _c37RS, .-_c37RS


==================== Asm code ====================
2018-03-16 15:57:34.118558798 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37RS_info:
	.quad	_c37RS
	.quad	584
	.quad	3494802111227494430
	.quad	S2VLN_srt+776


==================== Asm code ====================
2018-03-16 15:57:34.119237128 UTC

.section .text
.align 8
_c37RW:
_c37RW:
	movq $block_c37S0_info,(%rbp)
	movq 7(%rbx),%rbx
	testb $7,%bl
	jne _c37S0
_c37S1:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c37RW, .-_c37RW


==================== Asm code ====================
2018-03-16 15:57:34.119849507 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37RW_info:
	.quad	_c37RW
	.quad	5704
	.quad	3494802111227494430
	.quad	S2VLN_srt+776


==================== Asm code ====================
2018-03-16 15:57:34.120801348 UTC

.section .text
.align 8
_c37S0:
_c37S0:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c37TT
_c37TS:
	movq 64(%rbp),%rax
	movq 32(%rbp),%rcx
	movq 8(%rbp),%rdx
	subq 56(%rbp),%rdx
	subq %rcx,%rdx
	movq 7(%rbx),%rbx
	subq %rcx,%rbx
	cmpq %rbx,%rdx
	jg _c37Ul
_c37Um:
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rcx
_s2Vdj:
	testq %rbx,%rbx
	jge _c37Ua
_c37Uf:
	movq $block_c37Td_info,8(%rbp)
	movq %rbx,%rsi
	negq %rsi
	movq %rax,%r14
	movq %rcx,40(%rbp)
	movq %rbx,56(%rbp)
	addq $8,%rbp
	jmp GHC.Float.$wexpt_entry
_c37Ul:
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rdx,(%r12)
	leaq -7(%r12),%rbx
_n37VC:
	movq %rbx,%rcx
	movq %rdx,%rbx
	jmp _s2Vdj
_c37Ua:
	movq $block_c37T2_info,8(%rbp)
	movq %rbx,%rsi
	movq %rax,%r14
	movq %rcx,40(%rbp)
	movq %rbx,56(%rbp)
	addq $8,%rbp
	jmp GHC.Float.$wexpt_entry
_c37TT:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c37S0, .-_c37S0


==================== Asm code ====================
2018-03-16 15:57:34.122499898 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37S0_info:
	.quad	_c37S0
	.quad	5704
	.quad	3494802111227494430
	.quad	S2VLN_srt+776


==================== Asm code ====================
2018-03-16 15:57:34.123194418 UTC

.section .text
.align 8
_c37T2:
_c37T2:
	movq $block_c37T6_info,24(%rbp)
	movl $GHC.Float.$fRealDouble1_closure,%r8d
	movq %rbx,%rdi
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Real.$w$s$c/_entry
	.size _c37T2, .-_c37T2


==================== Asm code ====================
2018-03-16 15:57:34.123766585 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37T2_info:
	.quad	_c37T2
	.quad	2311
	.quad	3458773314208530462
	.quad	S2VLN_srt+776


==================== Asm code ====================
2018-03-16 15:57:34.124490513 UTC

.section .text
.align 8
_c37T6:
_c37T6:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c37Ue
_c37Ud:
	movq $GHC.Real.:%_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq %r14,-16(%rbp)
	leaq -15(%r12),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp _s2Vdm
_c37Ue:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c37T6, .-_c37T6


==================== Asm code ====================
2018-03-16 15:57:34.125104943 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37T6_info:
	.quad	_c37T6
	.quad	260
	.quad	3458764518115508254
	.quad	S2VLN_srt+776


==================== Asm code ====================
2018-03-16 15:57:34.125806535 UTC

.section .text
.align 8
_c37Td:
_c37Td:
	movq $block_c37Th_info,24(%rbp)
	movq %rbx,%r8
	movl $GHC.Float.$fRealDouble1_closure,%edi
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Real.$w$s$c/_entry
	.size _c37Td, .-_c37Td


==================== Asm code ====================
2018-03-16 15:57:34.126394016 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37Td_info:
	.quad	_c37Td
	.quad	2311
	.quad	3458773314208530462
	.quad	S2VLN_srt+776


==================== Asm code ====================
2018-03-16 15:57:34.127066789 UTC

.section .text
.align 8
_c37Th:
_c37Th:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c37Uj
_c37Ui:
	movq $GHC.Real.:%_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq %rbx,(%rbp)
	movq %r14,-16(%rbp)
	leaq -15(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp _s2Vdm
_c37Uj:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c37Th, .-_c37Th


==================== Asm code ====================
2018-03-16 15:57:34.1277364 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37Th_info:
	.quad	_c37Th
	.quad	260
	.quad	3458764518115508254
	.quad	S2VLN_srt+776


==================== Asm code ====================
2018-03-16 15:57:34.128350459 UTC

.section .text
.align 8
_s2Vdm:
_s2Vdm:
	movq $block_c37Tn_info,-8(%rbp)
	movl $GHC.Real.$fEnumRatio1_closure,%r8d
	movq 32(%rbp),%rdi
	movq (%rbp),%rsi
	movq 16(%rbp),%r14
	addq $-8,%rbp
	jmp GHC.Real.$w$s$ccompare_entry
	.size _s2Vdm, .-_s2Vdm


==================== Asm code ====================
2018-03-16 15:57:34.129403727 UTC

.section .text
.align 8
_c37Tn:
_c37Tn:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c37U5
_c37TY:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _c37U1
_c37U0:
	movq $GHC.Types.I#_con_info,-72(%r12)
	movq 48(%rbp),%rax
	incq %rax
	movq %rax,-64(%r12)
	movq $sat_s2Vdu_info,-56(%r12)
	movq 56(%rbp),%rax
	movq %rax,-40(%r12)
	movq 24(%rbp),%rax
	movq %rax,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -56(%r12),%rax
	movq %rax,-8(%r12)
	leaq -71(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $64,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c37U8:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_c37U5:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c37U8
_c37U7:
	movq $(,)_con_info,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 32(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $64,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c37U1:
	movq $80,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c37Tn, .-_c37Tn


==================== Asm code ====================
2018-03-16 15:57:34.130277546 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37Tn_info:
	.quad	_c37Tn
	.quad	3079
	.quad	1152921508901814302
	.quad	S2VLN_srt+776


==================== Asm code ====================
2018-03-16 15:57:34.131142603 UTC

.section .text
.align 8
.globl GHC.Float.fromRat'_entry
.type GHC.Float.fromRat'_entry, @object
GHC.Float.fromRat'_entry:
_c37Uu:
	addq $112,%r12
	cmpq 856(%r13),%r12
	ja _c37Uy
_c37Ux:
	movq $r_s2VcP_info,-104(%r12)
	movq %r14,-88(%r12)
	leaq -40(%r12),%rax
	movq %rax,-80(%r12)
	movq $b_s2VcQ_info,-72(%r12)
	movq %r14,-56(%r12)
	leaq -104(%r12),%rax
	movq %rax,-48(%r12)
	movq $ds_s2VcR_info,-40(%r12)
	movq %r14,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rax,-8(%r12)
	leaq -72(%r12),%rbx
	movq %rbx,(%r12)
	movq %rax,%rbx
	jmp stg_ap_0_fast
_c37Uy:
	movq $112,904(%r13)
	movl $GHC.Float.fromRat'_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.fromRat'_entry, .-GHC.Float.fromRat'_entry


==================== Asm code ====================
2018-03-16 15:57:34.131892005 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.fromRat'_info
.type GHC.Float.fromRat'_info, @object
GHC.Float.fromRat'_info:
	.quad	GHC.Float.fromRat'_entry
	.quad	0
	.quad	8971179292469755918
	.quad	8589934607
	.quad	S2VLN_srt+776


==================== Asm code ====================
2018-03-16 15:57:34.150441287 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$wfromRat_closure
.type GHC.Float.$wfromRat_closure, @object
GHC.Float.$wfromRat_closure:
	.quad	GHC.Float.$wfromRat_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:34.15140631 UTC

.section .text
.align 8
$dRealFrac_s2VdP_entry:
_c37Wn:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c37Wo
_c37Wp:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Float.$p1RealFloat_entry
_c37Wo:
	jmp *-16(%r13)
	.size $dRealFrac_s2VdP_entry, .-$dRealFrac_s2VdP_entry


==================== Asm code ====================
2018-03-16 15:57:34.152033829 UTC

.section .data.rel.ro
.align 8
.align 1
$dRealFrac_s2VdP_info:
	.quad	$dRealFrac_s2VdP_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:34.152678379 UTC

.section .text
.align 8
$dReal_s2VdQ_entry:
_c37Wu:
	movq 16(%rbx),%r14
	jmp GHC.Real.$p1RealFrac_entry
	.size $dReal_s2VdQ_entry, .-$dReal_s2VdQ_entry


==================== Asm code ====================
2018-03-16 15:57:34.153285771 UTC

.section .data.rel.ro
.align 8
.align 1
$dReal_s2VdQ_info:
	.quad	$dReal_s2VdQ_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:34.154045707 UTC

.section .text
.align 8
$dNum_s2VdR_entry:
_c37WB:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c37WC
_c37WD:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Real_entry
_c37WC:
	jmp *-16(%r13)
	.size $dNum_s2VdR_entry, .-$dNum_s2VdR_entry


==================== Asm code ====================
2018-03-16 15:57:34.154641238 UTC

.section .data.rel.ro
.align 8
.align 1
$dNum_s2VdR_info:
	.quad	$dNum_s2VdR_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:34.155331496 UTC

.section .text
.align 8
sat_s2VdW_entry:
_c37X1:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c37X5
_c37X6:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c37WZ_info,-32(%rbp)
	movq 16(%rbx),%r14
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Integer.Type.negateInteger_entry
_c37X5:
	jmp *-16(%r13)
	.size sat_s2VdW_entry, .-sat_s2VdW_entry


==================== Asm code ====================
2018-03-16 15:57:34.155961396 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2VdW_info:
	.quad	sat_s2VdW_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:34.156667574 UTC

.section .text
.align 8
_c37WZ:
_c37WZ:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c37X9
_c37X8:
	movq $GHC.Real.:%_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c37X9:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c37WZ, .-_c37WZ


==================== Asm code ====================
2018-03-16 15:57:34.157364514 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37WZ_info:
	.quad	_c37WZ
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:34.15822392 UTC

.section .text
.align 8
sat_s2VdX_entry:
_c37Xa:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c37Xb
_c37Xc:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c37Xe
_c37Xd:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq $sat_s2VdW_info,-24(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rsi
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Float.fromRat'_entry
_c37Xe:
	movq $32,904(%r13)
_c37Xb:
	jmp *-16(%r13)
	.size sat_s2VdX_entry, .-sat_s2VdX_entry


==================== Asm code ====================
2018-03-16 15:57:34.158885536 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2VdX_info:
	.quad	sat_s2VdX_entry
	.quad	3
	.quad	4294967311
	.quad	S2VLN_srt+1016


==================== Asm code ====================
2018-03-16 15:57:34.159694669 UTC

.section .text
.align 8
sat_s2Ve3_entry:
_c37Xt:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c37Xu
_c37Xv:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Float.rationalToDouble5_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c37Xu:
	jmp *-16(%r13)
	.size sat_s2Ve3_entry, .-sat_s2Ve3_entry


==================== Asm code ====================
2018-03-16 15:57:34.160450103 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Ve3_info:
	.quad	sat_s2Ve3_entry
	.quad	1
	.quad	4294967312
	.quad	S2VLN_srt+832


==================== Asm code ====================
2018-03-16 15:57:34.161365981 UTC

.section .text
.align 8
sat_s2Ve2_entry:
_c37XA:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c37XB
_c37XC:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Float.rationalToDouble5_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c37XB:
	jmp *-16(%r13)
	.size sat_s2Ve2_entry, .-sat_s2Ve2_entry


==================== Asm code ====================
2018-03-16 15:57:34.162085065 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Ve2_info:
	.quad	sat_s2Ve2_entry
	.quad	1
	.quad	4294967312
	.quad	S2VLN_srt+832


==================== Asm code ====================
2018-03-16 15:57:34.162836314 UTC

.section .text
.align 8
sat_s2Ve6_entry:
_c37XN:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c37XO
_c37XP:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Float.rationalToDouble5_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c37XO:
	jmp *-16(%r13)
	.size sat_s2Ve6_entry, .-sat_s2Ve6_entry


==================== Asm code ====================
2018-03-16 15:57:34.163518946 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Ve6_info:
	.quad	sat_s2Ve6_entry
	.quad	1
	.quad	4294967312
	.quad	S2VLN_srt+832


==================== Asm code ====================
2018-03-16 15:57:34.164404378 UTC

.section .text
.align 8
sat_s2Ve5_entry:
_c37XU:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c37XV
_c37XW:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Float.$fRealDouble1_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c37XV:
	jmp *-16(%r13)
	.size sat_s2Ve5_entry, .-sat_s2Ve5_entry


==================== Asm code ====================
2018-03-16 15:57:34.165066131 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Ve5_info:
	.quad	sat_s2Ve5_entry
	.quad	1
	.quad	4294967312
	.quad	S2VLN_srt+864


==================== Asm code ====================
2018-03-16 15:57:34.166407187 UTC

.section .text
.align 8
sat_s2Ve7_entry:
_c37XZ:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c37Y0
_c37Y1:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c37Y3
_c37Y2:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $sat_s2Ve6_info,-40(%r12)
	movq %rbx,-24(%r12)
	movq $sat_s2Ve5_info,-16(%r12)
	movq %rbx,(%r12)
	movq $block_c37XX_info,-40(%rbp)
	movq %rax,%r14
	leaq -40(%r12),%rax
	movq %rax,-32(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Real.$p2RealFrac_entry
_c37Y3:
	movq $48,904(%r13)
_c37Y0:
	jmp *-16(%r13)
	.size sat_s2Ve7_entry, .-sat_s2Ve7_entry


==================== Asm code ====================
2018-03-16 15:57:34.167653682 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Ve7_info:
	.quad	sat_s2Ve7_entry
	.quad	2
	.quad	73014444050
	.quad	S2VLN_srt+832


==================== Asm code ====================
2018-03-16 15:57:34.169540456 UTC

.section .text
.align 8
_c37XX:
_c37XX:
	movq %rbx,%r14
	movq $stg_ap_pp_info,(%rbp)
	movq 8(%rbp),%rax
	movq 16(%rbp),%rbx
	movq %rbx,8(%rbp)
	movq %rax,16(%rbp)
	jmp GHC.Real./_entry
	.size _c37XX, .-_c37XX


==================== Asm code ====================
2018-03-16 15:57:34.170486845 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37XX_info:
	.quad	_c37XX
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:34.171537428 UTC

.section .text
.align 8
sat_s2Vea_entry:
_c37Yd:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c37Ye
_c37Yf:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Float.rationalToDouble5_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c37Ye:
	jmp *-16(%r13)
	.size sat_s2Vea_entry, .-sat_s2Vea_entry


==================== Asm code ====================
2018-03-16 15:57:34.172174467 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Vea_info:
	.quad	sat_s2Vea_entry
	.quad	1
	.quad	4294967312
	.quad	S2VLN_srt+832


==================== Asm code ====================
2018-03-16 15:57:34.172917331 UTC

.section .text
.align 8
sat_s2Ve9_entry:
_c37Yk:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c37Yl
_c37Ym:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Float.$fRealDouble1_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c37Yl:
	jmp *-16(%r13)
	.size sat_s2Ve9_entry, .-sat_s2Ve9_entry


==================== Asm code ====================
2018-03-16 15:57:34.173668572 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Ve9_info:
	.quad	sat_s2Ve9_entry
	.quad	1
	.quad	4294967312
	.quad	S2VLN_srt+864


==================== Asm code ====================
2018-03-16 15:57:34.174591891 UTC

.section .text
.align 8
.globl GHC.Float.$wfromRat_entry
.type GHC.Float.$wfromRat_entry, @object
GHC.Float.$wfromRat_entry:
_c37Yq:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c37Yr
_c37Ys:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c37Yu
_c37Yt:
	movq $$dRealFrac_s2VdP_info,-64(%r12)
	movq %r14,-48(%r12)
	movq $$dReal_s2VdQ_info,-40(%r12)
	leaq -64(%r12),%rax
	movq %rax,-24(%r12)
	movq $$dNum_s2VdR_info,-16(%r12)
	leaq -40(%r12),%rbx
	movq %rbx,(%r12)
	movq $block_c37WE_info,-48(%rbp)
	movq %rsi,%rbx
	movl $GHC.Float.rationalToDouble5_closure,%esi
	movq %r14,%rcx
	movq %rdi,%r14
	movq %rax,-40(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	movq %rbx,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-48,%rbp
	jmp GHC.Integer.Type.eqInteger#_entry
_c37Yu:
	movq $72,904(%r13)
_c37Yr:
	movl $GHC.Float.$wfromRat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$wfromRat_entry, .-GHC.Float.$wfromRat_entry


==================== Asm code ====================
2018-03-16 15:57:34.175447675 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$wfromRat_info
.type GHC.Float.$wfromRat_info, @object
GHC.Float.$wfromRat_info:
	.quad	GHC.Float.$wfromRat_entry
	.quad	0
	.quad	108086464071335950
	.quad	12884901911
	.quad	S2VLN_srt+832


==================== Asm code ====================
2018-03-16 15:57:34.176188183 UTC

.section .text
.align 8
_c37WE:
_c37WE:
	movq 32(%rbp),%rax
	cmpq $1,%rbx
	je _c37Yp
_c37Yo:
	movq $block_c37WI_info,8(%rbp)
	movl $GHC.Float.rationalToDouble5_closure,%esi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.gtInteger#_entry
_c37Yp:
	movq $block_c37Xh_info,(%rbp)
	movl $GHC.Float.rationalToDouble5_closure,%esi
	movq %rax,%r14
	jmp GHC.Integer.Type.gtInteger#_entry
	.size _c37WE, .-_c37WE


==================== Asm code ====================
2018-03-16 15:57:34.176866735 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37WE_info:
	.quad	_c37WE
	.quad	5
	.quad	36028870033408030
	.quad	S2VLN_srt+832


==================== Asm code ====================
2018-03-16 15:57:34.178046216 UTC

.section .text
.align 8
_c37Xh:
_c37Xh:
	cmpq $1,%rbx
	je _c37Z7
_c37YR:
	movq $block_c37Xl_info,(%rbp)
	movl $GHC.Float.rationalToDouble5_closure,%esi
	movq 32(%rbp),%r14
	jmp GHC.Integer.Type.ltInteger#_entry
_c37Za:
	movq $48,904(%r13)
	jmp stg_gc_unbx_r1
_c37Z7:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c37Za
_c37Z9:
	movq $sat_s2Vea_info,-40(%r12)
	movq 16(%rbp),%rax
	movq %rax,-24(%r12)
	movq $sat_s2Ve9_info,-16(%r12)
	movq %rax,(%r12)
	movq $block_c37Z6_info,24(%rbp)
	movq 8(%rbp),%r14
	leaq -16(%r12),%rax
	movq %rax,32(%rbp)
	leaq -40(%r12),%rax
	movq %rax,40(%rbp)
	addq $24,%rbp
	jmp GHC.Real.$p2RealFrac_entry
	.size _c37Xh, .-_c37Xh


==================== Asm code ====================
2018-03-16 15:57:34.178766322 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37Xh_info:
	.quad	_c37Xh
	.quad	1285
	.quad	73014444062
	.quad	S2VLN_srt+832


==================== Asm code ====================
2018-03-16 15:57:34.179440369 UTC

.section .text
.align 8
_c37Z6:
_c37Z6:
	movq %rbx,%r14
	movq $stg_ap_pp_info,(%rbp)
	jmp GHC.Real./_entry
	.size _c37Z6, .-_c37Z6


==================== Asm code ====================
2018-03-16 15:57:34.180013745 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37Z6_info:
	.quad	_c37Z6
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:34.181048362 UTC

.section .text
.align 8
_c37Xl:
_c37Xl:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rcx
	cmpq $1,%rbx
	je _c37Z2
_c37YU:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c37YX
_c37YW:
	movq $sat_s2Ve3_info,-40(%r12)
	movq %rcx,-24(%r12)
	movq $sat_s2Ve2_info,-16(%r12)
	movq %rcx,(%r12)
	movq $block_c37YS_info,24(%rbp)
	movq %rax,%r14
	leaq -16(%r12),%rax
	movq %rax,32(%rbp)
	leaq -40(%r12),%rax
	movq %rax,40(%rbp)
	addq $24,%rbp
	jmp GHC.Real.$p2RealFrac_entry
_c37Z5:
	movq $32,904(%r13)
	jmp stg_gc_unbx_r1
_c37Z2:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c37Z5
_c37Z4:
	movq $sat_s2Ve7_info,-24(%r12)
	movq %rax,-8(%r12)
	movq %rcx,(%r12)
	movq %rcx,%r14
	movq $stg_ap_p_info,32(%rbp)
	leaq -24(%r12),%rax
	movq %rax,40(%rbp)
	addq $32,%rbp
	jmp GHC.Num.negate_entry
_c37YX:
	movq $48,904(%r13)
	jmp stg_gc_unbx_r1
	.size _c37Xl, .-_c37Xl


==================== Asm code ====================
2018-03-16 15:57:34.182384873 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37Xl_info:
	.quad	_c37Xl
	.quad	1797
	.quad	73014444062
	.quad	S2VLN_srt+832


==================== Asm code ====================
2018-03-16 15:57:34.183138025 UTC

.section .text
.align 8
_c37YS:
_c37YS:
	movq %rbx,%r14
	movq $stg_ap_pp_info,(%rbp)
	jmp GHC.Real./_entry
	.size _c37YS, .-_c37YS


==================== Asm code ====================
2018-03-16 15:57:34.183726555 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37YS_info:
	.quad	_c37YS
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:34.184563171 UTC

.section .text
.align 8
_c37WI:
_c37WI:
	movq 24(%rbp),%rax
	cmpq $1,%rbx
	je _c37YK
_c37Yy:
	movq $block_c37WM_info,(%rbp)
	movl $GHC.Float.rationalToDouble5_closure,%esi
	movq %rax,%r14
	jmp GHC.Integer.Type.ltInteger#_entry
_c37YN:
	movq $24,904(%r13)
	jmp stg_gc_unbx_r1
_c37YK:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c37YN
_c37YM:
	movq $GHC.Real.:%_con_info,-16(%r12)
	movq %rax,-8(%r12)
	movq 32(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rsi
	movq 16(%rbp),%r14
	addq $40,%rbp
	jmp GHC.Float.fromRat'_entry
	.size _c37WI, .-_c37WI


==================== Asm code ====================
2018-03-16 15:57:34.185339645 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37WI_info:
	.quad	_c37WI
	.quad	4
	.quad	36028801313931294
	.quad	S2VLN_srt+832


==================== Asm code ====================
2018-03-16 15:57:34.186191456 UTC

.section .text
.align 8
_c37WM:
_c37WM:
	movq 16(%rbp),%rax
	cmpq $1,%rbx
	je _c37YD
_c37YC:
	movq %rax,%r14
	movq $stg_ap_pp_info,16(%rbp)
	movq $GHC.Float.rationalToDouble5_closure,24(%rbp)
	movq $GHC.Float.minExpt_closure+1,32(%rbp)
	addq $16,%rbp
	jmp GHC.Float.encodeFloat_entry
_c37YG:
	movq $40,904(%r13)
	jmp stg_gc_unbx_r1
_c37YD:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c37YG
_c37YF:
	movq $sat_s2VdX_info,-32(%r12)
	movq %rax,-16(%r12)
	movq 24(%rbp),%rax
	movq %rax,-8(%r12)
	movq 32(%rbp),%rax
	movq %rax,(%r12)
	movq 8(%rbp),%r14
	movq $stg_ap_p_info,24(%rbp)
	leaq -32(%r12),%rax
	movq %rax,32(%rbp)
	addq $24,%rbp
	jmp GHC.Num.negate_entry
	.size _c37WM, .-_c37WM


==================== Asm code ====================
2018-03-16 15:57:34.186902246 UTC

.section .data.rel.ro
.align 8
.align 1
block_c37WM_info:
	.quad	_c37WM
	.quad	4
	.quad	36028801313931294
	.quad	S2VLN_srt+832


==================== Asm code ====================
2018-03-16 15:57:34.19009905 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.fromRat_closure
.type GHC.Float.fromRat_closure, @object
GHC.Float.fromRat_closure:
	.quad	GHC.Float.fromRat_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:34.190968035 UTC

.section .text
.align 8
.globl GHC.Float.fromRat_entry
.type GHC.Float.fromRat_entry, @object
GHC.Float.fromRat_entry:
_c380U:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c380V
_c380W:
	movq $block_c380R_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c380R
_c380S:
	movq (%rbx),%rax
	jmp *(%rax)
_c380V:
	movl $GHC.Float.fromRat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.fromRat_entry, .-GHC.Float.fromRat_entry


==================== Asm code ====================
2018-03-16 15:57:34.191649481 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.fromRat_info
.type GHC.Float.fromRat_info, @object
GHC.Float.fromRat_info:
	.quad	GHC.Float.fromRat_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S2VLN_srt+1024


==================== Asm code ====================
2018-03-16 15:57:34.192336431 UTC

.section .text
.align 8
_c380R:
_c380R:
	movq 15(%rbx),%rdi
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Float.$wfromRat_entry
	.size _c380R, .-_c380R


==================== Asm code ====================
2018-03-16 15:57:34.192933597 UTC

.section .data.rel.ro
.align 8
.align 1
block_c380R_info:
	.quad	_c380R
	.quad	1
	.quad	4294967326
	.quad	S2VLN_srt+1024


==================== Asm code ====================
2018-03-16 15:57:34.196196699 UTC

.section .data
.align 8
.align 1
lvl8_r2UqG_closure:
	.quad	lvl8_r2UqG_info


==================== Asm code ====================
2018-03-16 15:57:34.197136991 UTC

.section .text
.align 8
lvl8_r2UqG_entry:
_c381g:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c381k
_c381l:
	movq $block_c381e_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.integerToInt_entry
_c381k:
	movl $lvl8_r2UqG_closure,%ebx
	jmp *-8(%r13)
	.size lvl8_r2UqG_entry, .-lvl8_r2UqG_entry


==================== Asm code ====================
2018-03-16 15:57:34.19786691 UTC

.section .data.rel.ro
.align 8
.align 1
lvl8_r2UqG_info:
	.quad	lvl8_r2UqG_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:34.198591652 UTC

.section .text
.align 8
_c381e:
_c381e:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c381o
_c381n:
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c381o:
	movq $16,904(%r13)
	jmp stg_gc_unbx_r1
	.size _c381e, .-_c381e


==================== Asm code ====================
2018-03-16 15:57:34.199247803 UTC

.section .data.rel.ro
.align 8
.align 1
block_c381e_info:
	.quad	_c381e
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:34.202939773 UTC

.section .data
.align 8
.align 1
lvl9_r2UqH_closure:
	.quad	lvl9_r2UqH_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:34.203527855 UTC

.section .data.rel.ro
.align 8
.align 1
u381H_srtd:
	.quad	S2VLN_srt+552
	.quad	52
	.quad	2251799813685249


==================== Asm code ====================
2018-03-16 15:57:34.204502432 UTC

.section .text
.align 8
lvl9_r2UqH_entry:
_c381E:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c381F
_c381G:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c381D
_c381C:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $23,%esi
	movl $GHC.Float.$fRealFloatDouble5_closure,%r14d
	addq $-16,%rbp
	jmp GHC.Float.$wexpt_entry
_c381F:
	jmp *-16(%r13)
_c381D:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl9_r2UqH_entry, .-lvl9_r2UqH_entry


==================== Asm code ====================
2018-03-16 15:57:34.205169563 UTC

.section .data.rel.ro
.align 8
.align 1
lvl9_r2UqH_info:
	.quad	lvl9_r2UqH_entry
	.quad	0
	.quad	-4294967275
	.quad	u381H_srtd


==================== Asm code ====================
2018-03-16 15:57:34.207399335 UTC

.section .data
.align 8
.align 1
sat_s2Vei_closure:
	.quad	GHC.Types.I#_con_info
	.quad	4


==================== Asm code ====================
2018-03-16 15:57:34.209114349 UTC

.section .data
.align 8
.align 1
sat_s2Vej_closure:
	.quad	:_con_info
	.quad	sat_s2Vei_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:34.211981272 UTC

.section .data
.align 8
.align 1
lvl10_r2UqI_closure:
	.quad	lvl10_r2UqI_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:34.212921732 UTC

.section .text
.align 8
lvl10_r2UqI_entry:
_c381Y:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c381Z
_c3820:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c381X
_c381W:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $sat_s2Vej_closure+2,%esi
	movl $GHC.Types.True_closure+2,%r14d
	addq $-16,%rbp
	jmp GHC.Integer.Type.mkInteger_entry
_c381Z:
	jmp *-16(%r13)
_c381X:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl10_r2UqI_entry, .-lvl10_r2UqI_entry


==================== Asm code ====================
2018-03-16 15:57:34.213695732 UTC

.section .data.rel.ro
.align 8
.align 1
lvl10_r2UqI_info:
	.quad	lvl10_r2UqI_entry
	.quad	0
	.quad	4294967317
	.quad	S2VLN_srt+1040


==================== Asm code ====================
2018-03-16 15:57:34.270480869 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$w$sfloatToDigits1_closure
.type GHC.Float.$w$sfloatToDigits1_closure, @object
GHC.Float.$w$sfloatToDigits1_closure:
	.quad	GHC.Float.$w$sfloatToDigits1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:34.271271338 UTC

.section .text
.align 8
.globl GHC.Float.$w$sfloatToDigits1_slow
.type GHC.Float.$w$sfloatToDigits1_slow, @object
GHC.Float.$w$sfloatToDigits1_slow:
_c3829:
	movss 8(%rbp),%xmm1
	movq (%rbp),%r14
	addq $16,%rbp
	jmp GHC.Float.$w$sfloatToDigits1_entry
	.size GHC.Float.$w$sfloatToDigits1_slow, .-GHC.Float.$w$sfloatToDigits1_slow


==================== Asm code ====================
2018-03-16 15:57:34.272031236 UTC

.section .text
.align 8
sat_s2Ver_entry:
_c382t:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c382u
_c382v:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Integer.Type.smallInteger_entry
_c382u:
	jmp *-16(%r13)
	.size sat_s2Ver_entry, .-sat_s2Ver_entry


==================== Asm code ====================
2018-03-16 15:57:34.272645438 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Ver_info:
	.quad	sat_s2Ver_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 15:57:34.273430668 UTC

.section .text
.align 8
ds_s2Ven_entry:
_c382x:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c382y
_c382z:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c382k_info,-24(%rbp)
	movss 16(%rbx),%xmm1
	addq $-24,%rbp
	jmp stg_decodeFloat_Int#
_c382y:
	jmp *-16(%r13)
	.size ds_s2Ven_entry, .-ds_s2Ven_entry


==================== Asm code ====================
2018-03-16 15:57:34.274045954 UTC

.section .data.rel.ro
.align 8
.align 1
ds_s2Ven_info:
	.quad	ds_s2Ven_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 15:57:34.274684941 UTC

.section .text
.align 8
_c382k:
_c382k:
	movq %r14,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp _c382l
	.size _c382k, .-_c382k


==================== Asm code ====================
2018-03-16 15:57:34.275275928 UTC

.section .data.rel.ro
.align 8
.align 1
block_c382k_info:
	.quad	_c382k
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:34.276003359 UTC

.section .text
.align 8
_c382l:
_c382l:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c382C
_c382B:
	movq $GHC.Types.I#_con_info,-56(%r12)
	movq 8(%rbp),%rax
	movq %rax,-48(%r12)
	movq $sat_s2Ver_info,-40(%r12)
	movq 16(%rbp),%rax
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -55(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c382C:
	movq $64,904(%r13)
	movq $block_c382l_info,(%rbp)
	jmp stg_gc_noregs
	.size _c382l, .-_c382l


==================== Asm code ====================
2018-03-16 15:57:34.276716851 UTC

.section .data.rel.ro
.align 8
.align 1
block_c382l_info:
	.quad	_c382l
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:34.277352771 UTC

.section .data.rel.ro
.align 8
.align 1
u38dk_srtd:
	.quad	S2VLN_srt+552
	.quad	52
	.quad	2252933685051393


==================== Asm code ====================
2018-03-16 15:57:34.278121878 UTC

.section .text
.align 8
sat_s2VeD_entry:
_c383a:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c383b
_c383c:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c3838_info,-32(%rbp)
	movq 24(%rbx),%rsi
	movl $GHC.Float.$fRealFloatDouble5_closure,%r14d
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Float.$wexpt_entry
_c383b:
	jmp *-16(%r13)
	.size sat_s2VeD_entry, .-sat_s2VeD_entry


==================== Asm code ====================
2018-03-16 15:57:34.278765227 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2VeD_info:
	.quad	sat_s2VeD_entry
	.quad	4294967297
	.quad	-4294967277
	.quad	u38dk_srtd


==================== Asm code ====================
2018-03-16 15:57:34.279428606 UTC

.section .text
.align 8
_c3838:
_c3838:
	movq $block_c383f_info,-8(%rbp)
	movl $GHC.Float.rationalToDouble5_closure,%esi
	movq %rbx,%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.eqInteger#_entry
	.size _c3838, .-_c3838


==================== Asm code ====================
2018-03-16 15:57:34.280021455 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3838_info:
	.quad	_c3838
	.quad	1
	.quad	141733920798
	.quad	S2VLN_srt+832


==================== Asm code ====================
2018-03-16 15:57:34.280687976 UTC

.section .text
.align 8
_c383f:
_c383f:
	cmpq $1,%rbx
	je _c383q
_c383m:
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Integer.Type.quotInteger_entry
_c383q:
	movl $GHC.Real.divZeroError_closure,%ebx
	addq $24,%rbp
	jmp stg_ap_0_fast
	.size _c383f, .-_c383f


==================== Asm code ====================
2018-03-16 15:57:34.281343949 UTC

.section .data.rel.ro
.align 8
.align 1
block_c383f_info:
	.quad	_c383f
	.quad	2
	.quad	4294967326
	.quad	S2VLN_srt+872


==================== Asm code ====================
2018-03-16 15:57:34.281904517 UTC

.section .data.rel.ro
.align 8
.align 1
u38dl_srtd:
	.quad	S2VLN_srt+552
	.quad	52
	.quad	2252933685051393


==================== Asm code ====================
2018-03-16 15:57:34.282695227 UTC

.section .text
.align 8
ds1_s2Vet_entry:
_c383r:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c383s
_c383t:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c382J_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _c382J
_c382K:
	movq (%rbx),%rax
	jmp *(%rax)
_c383s:
	jmp *-16(%r13)
	.size ds1_s2Vet_entry, .-ds1_s2Vet_entry


==================== Asm code ====================
2018-03-16 15:57:34.283330366 UTC

.section .data.rel.ro
.align 8
.align 1
ds1_s2Vet_info:
	.quad	ds1_s2Vet_entry
	.quad	1
	.quad	-4294967280
	.quad	u38dl_srtd


==================== Asm code ====================
2018-03-16 15:57:34.283980802 UTC

.section .data.rel.ro
.align 8
.align 1
u38dm_srtd:
	.quad	S2VLN_srt+552
	.quad	52
	.quad	2252933685051393


==================== Asm code ====================
2018-03-16 15:57:34.284681257 UTC

.section .text
.align 8
_c382J:
_c382J:
	movq $block_c382O_info,-16(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c382O
_c382P:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c382J, .-_c382J


==================== Asm code ====================
2018-03-16 15:57:34.285340155 UTC

.section .data.rel.ro
.align 8
.align 1
block_c382J_info:
	.quad	_c382J
	.quad	0
	.quad	-4294967266
	.quad	u38dm_srtd


==================== Asm code ====================
2018-03-16 15:57:34.285899337 UTC

.section .data.rel.ro
.align 8
.align 1
u38dn_srtd:
	.quad	S2VLN_srt+552
	.quad	52
	.quad	2252933685051393


==================== Asm code ====================
2018-03-16 15:57:34.286747619 UTC

.section .text
.align 8
_c382O:
_c382O:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c383x
_c383w:
	movq 7(%rbx),%rax
	movq $-149,%rbx
	subq %rax,%rbx
	testq %rbx,%rbx
	jle _c383z
_c383B:
	movq $GHC.Types.I#_con_info,-64(%r12)
	addq %rbx,%rax
	movq %rax,-56(%r12)
	movq $sat_s2VeD_info,-48(%r12)
	movq 8(%rbp),%rax
	movq %rax,-32(%r12)
	movq %rbx,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -48(%r12),%rax
	movq %rax,-8(%r12)
	leaq -63(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c383z:
	addq $-72,%r12
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c383x:
	movq $72,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c382O, .-_c382O


==================== Asm code ====================
2018-03-16 15:57:34.287547143 UTC

.section .data.rel.ro
.align 8
.align 1
block_c382O_info:
	.quad	_c382O
	.quad	2
	.quad	-4294967266
	.quad	u38dn_srtd


==================== Asm code ====================
2018-03-16 15:57:34.288105808 UTC

.section .data.rel.ro
.align 8
.align 1
u38do_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4613937818241073153


==================== Asm code ====================
2018-03-16 15:57:34.288828631 UTC

.section .text
.align 8
sat_s2VeV_entry:
_c3847:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c384a
_c384b:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c3849_info,-24(%rbp)
	movq 16(%rbx),%rsi
	negq %rsi
	movl $GHC.Float.$fRealFloatDouble5_closure,%r14d
	addq $-24,%rbp
	jmp GHC.Float.$wexpt_entry
_c384a:
	jmp *-16(%r13)
	.size sat_s2VeV_entry, .-sat_s2VeV_entry


==================== Asm code ====================
2018-03-16 15:57:34.289516038 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2VeV_info:
	.quad	sat_s2VeV_entry
	.quad	4294967296
	.quad	-4294967279
	.quad	u38do_srtd


==================== Asm code ====================
2018-03-16 15:57:34.290120338 UTC

.section .data.rel.ro
.align 8
.align 1
u38dp_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:34.290783898 UTC

.section .text
.align 8
_c3849:
_c3849:
	movl $GHC.Float.$fRealFloatDouble5_closure,%esi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c3849, .-_c3849


==================== Asm code ====================
2018-03-16 15:57:34.291363412 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3849_info:
	.quad	_c3849
	.quad	0
	.quad	-4294967266
	.quad	u38dp_srtd


==================== Asm code ====================
2018-03-16 15:57:34.291944326 UTC

.section .data.rel.ro
.align 8
.align 1
u38dq_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:34.293353019 UTC

.section .text
.align 8
sat_s2VeS_entry:
_c384k:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c384l
_c384m:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movl $GHC.Float.$fRealFloatDouble5_closure,%esi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
_c384l:
	jmp *-16(%r13)
	.size sat_s2VeS_entry, .-sat_s2VeS_entry


==================== Asm code ====================
2018-03-16 15:57:34.294066758 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2VeS_info:
	.quad	sat_s2VeS_entry
	.quad	1
	.quad	-4294967280
	.quad	u38dq_srtd


==================== Asm code ====================
2018-03-16 15:57:34.294625922 UTC

.section .data.rel.ro
.align 8
.align 1
u38dr_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4613937818241073153


==================== Asm code ====================
2018-03-16 15:57:34.295319175 UTC

.section .text
.align 8
sat_s2Vf3_entry:
_c384C:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c384I
_c384J:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c384H_info,-24(%rbp)
	movq 16(%rbx),%rax
	negq %rax
	leaq 1(%rax),%rsi
	movl $GHC.Float.$fRealFloatDouble5_closure,%r14d
	addq $-24,%rbp
	jmp GHC.Float.$wexpt_entry
_c384I:
	jmp *-16(%r13)
	.size sat_s2Vf3_entry, .-sat_s2Vf3_entry


==================== Asm code ====================
2018-03-16 15:57:34.295964608 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Vf3_info:
	.quad	sat_s2Vf3_entry
	.quad	4294967296
	.quad	-4294967279
	.quad	u38dr_srtd


==================== Asm code ====================
2018-03-16 15:57:34.296489519 UTC

.section .data.rel.ro
.align 8
.align 1
u38ds_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:34.297216138 UTC

.section .text
.align 8
_c384H:
_c384H:
	movl $GHC.Float.$fRealFloatDouble5_closure,%esi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c384H, .-_c384H


==================== Asm code ====================
2018-03-16 15:57:34.297859499 UTC

.section .data.rel.ro
.align 8
.align 1
block_c384H_info:
	.quad	_c384H
	.quad	0
	.quad	-4294967266
	.quad	u38ds_srtd


==================== Asm code ====================
2018-03-16 15:57:34.298445035 UTC

.section .data.rel.ro
.align 8
.align 1
u38dt_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:34.299179917 UTC

.section .text
.align 8
sat_s2VeZ_entry:
_c384U:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c384V
_c384W:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c384S_info,-24(%rbp)
	movl $GHC.Float.$fRealFloatDouble5_closure,%esi
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
_c384V:
	jmp *-16(%r13)
	.size sat_s2VeZ_entry, .-sat_s2VeZ_entry


==================== Asm code ====================
2018-03-16 15:57:34.299792431 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2VeZ_info:
	.quad	sat_s2VeZ_entry
	.quad	1
	.quad	-4294967280
	.quad	u38dt_srtd


==================== Asm code ====================
2018-03-16 15:57:34.300347033 UTC

.section .data.rel.ro
.align 8
.align 1
u38du_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:34.300971657 UTC

.section .text
.align 8
_c384S:
_c384S:
	movl $GHC.Float.$fRealFloatDouble5_closure,%esi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c384S, .-_c384S


==================== Asm code ====================
2018-03-16 15:57:34.301606347 UTC

.section .data.rel.ro
.align 8
.align 1
block_c384S_info:
	.quad	_c384S
	.quad	0
	.quad	-4294967266
	.quad	u38du_srtd


==================== Asm code ====================
2018-03-16 15:57:34.302161603 UTC

.section .data.rel.ro
.align 8
.align 1
u38dv_srtd:
	.quad	S2VLN_srt+552
	.quad	52
	.quad	2251799813685249


==================== Asm code ====================
2018-03-16 15:57:34.302861462 UTC

.section .text
.align 8
be_s2Vf4_entry:
_c3855:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3856
_c3857:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rsi
	movl $GHC.Float.$fRealFloatDouble5_closure,%r14d
	addq $-16,%rbp
	jmp GHC.Float.$wexpt_entry
_c3856:
	jmp *-16(%r13)
	.size be_s2Vf4_entry, .-be_s2Vf4_entry


==================== Asm code ====================
2018-03-16 15:57:34.303499943 UTC

.section .data.rel.ro
.align 8
.align 1
be_s2Vf4_info:
	.quad	be_s2Vf4_entry
	.quad	4294967296
	.quad	-4294967279
	.quad	u38dv_srtd


==================== Asm code ====================
2018-03-16 15:57:34.304094091 UTC

.section .data.rel.ro
.align 8
.align 1
u38dw_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:34.304765031 UTC

.section .text
.align 8
sat_s2Vf7_entry:
_c385i:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c385j
_c385k:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c385g_info,-24(%rbp)
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
_c385j:
	jmp *-16(%r13)
	.size sat_s2Vf7_entry, .-sat_s2Vf7_entry


==================== Asm code ====================
2018-03-16 15:57:34.30590622 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Vf7_info:
	.quad	sat_s2Vf7_entry
	.quad	2
	.quad	-4294967278
	.quad	u38dw_srtd


==================== Asm code ====================
2018-03-16 15:57:34.306442007 UTC

.section .data.rel.ro
.align 8
.align 1
u38dx_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:34.307076724 UTC

.section .text
.align 8
_c385g:
_c385g:
	movl $GHC.Float.$fRealFloatDouble5_closure,%esi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c385g, .-_c385g


==================== Asm code ====================
2018-03-16 15:57:34.307707086 UTC

.section .data.rel.ro
.align 8
.align 1
block_c385g_info:
	.quad	_c385g
	.quad	0
	.quad	-4294967266
	.quad	u38dx_srtd


==================== Asm code ====================
2018-03-16 15:57:34.308217948 UTC

.section .data.rel.ro
.align 8
.align 1
u38dy_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:34.30888364 UTC

.section .text
.align 8
sat_s2Vfb_entry:
_c385u:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c385v
_c385w:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movl $GHC.Float.$fRealFloatDouble5_closure,%esi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
_c385v:
	jmp *-16(%r13)
	.size sat_s2Vfb_entry, .-sat_s2Vfb_entry


==================== Asm code ====================
2018-03-16 15:57:34.30955016 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Vfb_info:
	.quad	sat_s2Vfb_entry
	.quad	1
	.quad	-4294967280
	.quad	u38dy_srtd


==================== Asm code ====================
2018-03-16 15:57:34.310103644 UTC

.section .data.rel.ro
.align 8
.align 1
u38dz_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:34.310806328 UTC

.section .text
.align 8
sat_s2Vfa_entry:
_c385D:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c385H
_c385I:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c385B_info,-24(%rbp)
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
_c385H:
	jmp *-16(%r13)
	.size sat_s2Vfa_entry, .-sat_s2Vfa_entry


==================== Asm code ====================
2018-03-16 15:57:34.311410133 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Vfa_info:
	.quad	sat_s2Vfa_entry
	.quad	2
	.quad	-4294967278
	.quad	u38dz_srtd


==================== Asm code ====================
2018-03-16 15:57:34.312027779 UTC

.section .data.rel.ro
.align 8
.align 1
u38dA_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:34.31268438 UTC

.section .text
.align 8
_c385B:
_c385B:
	movq $block_c385G_info,(%rbp)
	movl $GHC.Float.$fRealFloatDouble5_closure,%esi
	movq %rbx,%r14
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c385B, .-_c385B


==================== Asm code ====================
2018-03-16 15:57:34.313210248 UTC

.section .data.rel.ro
.align 8
.align 1
block_c385B_info:
	.quad	_c385B
	.quad	0
	.quad	-4294967266
	.quad	u38dA_srtd


==================== Asm code ====================
2018-03-16 15:57:34.313797839 UTC

.section .data.rel.ro
.align 8
.align 1
u38dB_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:34.314442442 UTC

.section .text
.align 8
_c385G:
_c385G:
	movl $GHC.Float.$fRealFloatDouble5_closure,%esi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c385G, .-_c385G


==================== Asm code ====================
2018-03-16 15:57:34.315001959 UTC

.section .data.rel.ro
.align 8
.align 1
block_c385G_info:
	.quad	_c385G
	.quad	0
	.quad	-4294967266
	.quad	u38dB_srtd


==================== Asm code ====================
2018-03-16 15:57:34.315613149 UTC

.section .data.rel.ro
.align 8
.align 1
u38dC_srtd:
	.quad	S2VLN_srt+552
	.quad	65
	.quad	-4609433668857888767
	.quad	1


==================== Asm code ====================
2018-03-16 15:57:34.316423158 UTC

.section .text
.align 8
ds2_s2VeK_entry:
_c385O:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c385P
_c385Q:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c383J_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c383J
_c383K:
	movq (%rbx),%rax
	jmp *(%rax)
_c385P:
	jmp *-16(%r13)
	.size ds2_s2VeK_entry, .-ds2_s2VeK_entry


==================== Asm code ====================
2018-03-16 15:57:34.317092356 UTC

.section .data.rel.ro
.align 8
.align 1
ds2_s2VeK_info:
	.quad	ds2_s2VeK_entry
	.quad	2
	.quad	-4294967278
	.quad	u38dC_srtd


==================== Asm code ====================
2018-03-16 15:57:34.317705286 UTC

.section .data.rel.ro
.align 8
.align 1
u38dD_srtd:
	.quad	S2VLN_srt+552
	.quad	65
	.quad	-4609433668857888767
	.quad	1


==================== Asm code ====================
2018-03-16 15:57:34.318413859 UTC

.section .text
.align 8
_c383J:
_c383J:
	movq $block_c383O_info,(%rbp)
	movq 15(%rbx),%rbx
	testb $7,%bl
	jne _c383O
_c383P:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c383J, .-_c383J


==================== Asm code ====================
2018-03-16 15:57:34.319054156 UTC

.section .data.rel.ro
.align 8
.align 1
block_c383J_info:
	.quad	_c383J
	.quad	1
	.quad	-4294967266
	.quad	u38dD_srtd


==================== Asm code ====================
2018-03-16 15:57:34.319617134 UTC

.section .data.rel.ro
.align 8
.align 1
u38dE_srtd:
	.quad	S2VLN_srt+552
	.quad	65
	.quad	-4609433668857888767
	.quad	1


==================== Asm code ====================
2018-03-16 15:57:34.321153102 UTC

.section .text
.align 8
_c383O:
_c383O:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c385U
_c385T:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	testq %rbx,%rbx
	jl _c386c
_c386d:
	movq $be_s2Vf4_info,-16(%r12)
	movq %rbx,(%r12)
	movq $block_c3858_info,-8(%rbp)
	movl $lvl9_r2UqH_closure,%esi
	movq %rax,%r14
	leaq -16(%r12),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.eqInteger#_entry
_c386c:
	cmpq $-149,%rbx
	jle _c3860
_c3861:
	addq $-24,%r12
	movq $block_c384r_info,-8(%rbp)
	movl $lvl9_r2UqH_closure,%esi
	movq %rax,%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.eqInteger#_entry
_c3860:
	addq $-24,%r12
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp _c383Z
_c385U:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c383O, .-_c383O


==================== Asm code ====================
2018-03-16 15:57:34.322434644 UTC

.section .data.rel.ro
.align 8
.align 1
block_c383O_info:
	.quad	_c383O
	.quad	1
	.quad	-4294967266
	.quad	u38dE_srtd


==================== Asm code ====================
2018-03-16 15:57:34.32296336 UTC

.section .data.rel.ro
.align 8
.align 1
u38dF_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4613938367996887041


==================== Asm code ====================
2018-03-16 15:57:34.323753207 UTC

.section .text
.align 8
_c384r:
_c384r:
	cmpq $1,%rbx
	je _c3867
	jmp _c383Z
_c386a:
	movq $88,904(%r13)
	jmp stg_gc_unbx_r1
_c3867:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c386a
_c3869:
	movq $sat_s2Vf3_info,-80(%r12)
	movq 8(%rbp),%rax
	movq %rax,-64(%r12)
	movq $sat_s2VeZ_info,-56(%r12)
	movq 16(%rbp),%rax
	movq %rax,-40(%r12)
	movq $(,,,)_con_info,-32(%r12)
	leaq -56(%r12),%rax
	movq %rax,-24(%r12)
	leaq -80(%r12),%rax
	movq %rax,-16(%r12)
	movq $GHC.Float.$fRealFloatDouble5_closure,-8(%r12)
	movq $GHC.Float.$fRealDouble1_closure,(%r12)
	leaq -31(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c384r, .-_c384r


==================== Asm code ====================
2018-03-16 15:57:34.324448776 UTC

.section .data.rel.ro
.align 8
.align 1
block_c384r_info:
	.quad	_c384r
	.quad	66
	.quad	-4294967266
	.quad	u38dF_srtd


==================== Asm code ====================
2018-03-16 15:57:34.32501334 UTC

.section .data.rel.ro
.align 8
.align 1
u38dG_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4613938367996887041


==================== Asm code ====================
2018-03-16 15:57:34.325841631 UTC

.section .text
.align 8
_c383Z:
_c383Z:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c385Y
_c385X:
	movq $sat_s2VeV_info,-80(%r12)
	movq 8(%rbp),%rax
	movq %rax,-64(%r12)
	movq $sat_s2VeS_info,-56(%r12)
	movq 16(%rbp),%rax
	movq %rax,-40(%r12)
	movq $(,,,)_con_info,-32(%r12)
	leaq -56(%r12),%rax
	movq %rax,-24(%r12)
	leaq -80(%r12),%rax
	movq %rax,-16(%r12)
	movq $GHC.Float.$fRealDouble1_closure,-8(%r12)
	movq $GHC.Float.$fRealDouble1_closure,(%r12)
	leaq -31(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c385Y:
	movq $88,904(%r13)
	movq $block_c383Z_info,(%rbp)
	jmp stg_gc_noregs
	.size _c383Z, .-_c383Z


==================== Asm code ====================
2018-03-16 15:57:34.326516307 UTC

.section .data.rel.ro
.align 8
.align 1
block_c383Z_info:
	.quad	_c383Z
	.quad	66
	.quad	-4294967266
	.quad	u38dG_srtd


==================== Asm code ====================
2018-03-16 15:57:34.327085036 UTC

.section .data.rel.ro
.align 8
.align 1
u38dH_srtd:
	.quad	S2VLN_srt+552
	.quad	65
	.quad	4611686018427387905
	.quad	1


==================== Asm code ====================
2018-03-16 15:57:34.327974624 UTC

.section .text
.align 8
_c3858:
_c3858:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rcx
	cmpq $1,%rbx
	je _c386l
_c386g:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c386j
_c386i:
	movq $sat_s2Vf7_info,-64(%r12)
	movq %rcx,-48(%r12)
	movq %rax,-40(%r12)
	movq $(,,,)_con_info,-32(%r12)
	leaq -64(%r12),%rbx
	movq %rbx,-24(%r12)
	movq $GHC.Float.$fRealFloatDouble5_closure,-16(%r12)
	movq %rax,-8(%r12)
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c386o:
	movq $96,904(%r13)
	jmp stg_gc_unbx_r1
_c386l:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _c386o
_c386n:
	movq $sat_s2Vfb_info,-88(%r12)
	movq %rax,-72(%r12)
	movq $sat_s2Vfa_info,-64(%r12)
	movq %rcx,-48(%r12)
	movq %rax,-40(%r12)
	movq $(,,,)_con_info,-32(%r12)
	leaq -64(%r12),%rbx
	movq %rbx,-24(%r12)
	movq $lvl10_r2UqI_closure,-16(%r12)
	leaq -88(%r12),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c386j:
	movq $72,904(%r13)
	jmp stg_gc_unbx_r1
	.size _c3858, .-_c3858


==================== Asm code ====================
2018-03-16 15:57:34.328757259 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3858_info:
	.quad	_c3858
	.quad	2
	.quad	-4294967266
	.quad	u38dH_srtd


==================== Asm code ====================
2018-03-16 15:57:34.329331568 UTC

.section .data.rel.ro
.align 8
.align 1
u38dI_srtd:
	.quad	S2VLN_srt+688
	.quad	46
	.quad	35201572929793


==================== Asm code ====================
2018-03-16 15:57:34.330069219 UTC

.section .text
.align 8
k_s2Vfu_entry:
_c386D:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _c386E
_c386F:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c386B_info,-64(%rbp)
	movq 64(%rbx),%rsi
	movq 56(%rbx),%r14
	movq 16(%rbx),%rax
	movq %rax,-56(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-48(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 48(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-64,%rbp
	jmp GHC.Integer.Type.plusInteger_entry
_c386E:
	jmp *-16(%r13)
	.size k_s2Vfu_entry, .-k_s2Vfu_entry


==================== Asm code ====================
2018-03-16 15:57:34.330761577 UTC

.section .data.rel.ro
.align 8
.align 1
k_s2Vfu_info:
	.quad	k_s2Vfu_entry
	.quad	7
	.quad	-4294967281
	.quad	u38dI_srtd


==================== Asm code ====================
2018-03-16 15:57:34.33130027 UTC

.section .data.rel.ro
.align 8
.align 1
u38dJ_srtd:
	.quad	S2VLN_srt+688
	.quad	46
	.quad	35201572929793


==================== Asm code ====================
2018-03-16 15:57:34.331944539 UTC

.section .text
.align 8
_c386B:
_c386B:
	movq $block_c386K_info,-8(%rbp)
	movl $GHC.Float.expts4_closure,%esi
	movq 8(%rbp),%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.eqInteger#_entry
	.size _c386B, .-_c386B


==================== Asm code ====================
2018-03-16 15:57:34.33254778 UTC

.section .data.rel.ro
.align 8
.align 1
block_c386B_info:
	.quad	_c386B
	.quad	5
	.quad	-4294967266
	.quad	u38dJ_srtd


==================== Asm code ====================
2018-03-16 15:57:34.333113746 UTC

.section .data.rel.ro
.align 8
.align 1
u38dK_srtd:
	.quad	S2VLN_srt+688
	.quad	46
	.quad	35201572929537


==================== Asm code ====================
2018-03-16 15:57:34.33407193 UTC

.section .text
.align 8
_c386K:
_c386K:
	cmpq $1,%rbx
	je _c3893
_c388j:
	movq $block_c387P_info,(%rbp)
	movl $GHC.Float.$fRealDouble1_closure,%esi
	movq 40(%rbp),%r14
	jmp GHC.Integer.Type.plusInteger_entry
_c3893:
	movq $block_c388W_info,(%rbp)
	movq 24(%rbp),%rbx
	testb $7,%bl
	jne _c388W
_c388X:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c386K, .-_c386K


==================== Asm code ====================
2018-03-16 15:57:34.334697033 UTC

.section .data.rel.ro
.align 8
.align 1
block_c386K_info:
	.quad	_c386K
	.quad	6
	.quad	-4294967266
	.quad	u38dK_srtd


==================== Asm code ====================
2018-03-16 15:57:34.335355426 UTC

.section .text
.align 8
_c388W:
_c388W:
	movq $block_c3891_info,(%rbp)
	movq 15(%rbx),%rbx
	testb $7,%bl
	jne _c3891
_c3895:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c388W, .-_c388W


==================== Asm code ====================
2018-03-16 15:57:34.33594124 UTC

.section .data.rel.ro
.align 8
.align 1
block_c388W_info:
	.quad	_c388W
	.quad	1798
	.quad	8800387989534
	.quad	S2VLN_srt+960


==================== Asm code ====================
2018-03-16 15:57:34.336702738 UTC

.section .text
.align 8
_c3891:
_c3891:
	movq 7(%rbx),%rax
	addq $23,%rax
	testq %rax,%rax
	jl _c389g
_c389h:
	movl $28738,%ebx
	imulq $8651,%rax
	cqto
	idivq %rbx
	incq %rax
	movq %rax,40(%rbp)
	addq $8,%rbp
	jmp _c386N
_c389g:
	movl $28738,%ebx
	imulq $8651,%rax
	cqto
	idivq %rbx
	movq %rax,40(%rbp)
	addq $8,%rbp
	jmp _c386N
	.size _c3891, .-_c3891


==================== Asm code ====================
2018-03-16 15:57:34.337440864 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3891_info:
	.quad	_c3891
	.quad	1798
	.quad	8800387989534
	.quad	S2VLN_srt+960


==================== Asm code ====================
2018-03-16 15:57:34.337980783 UTC

.section .data.rel.ro
.align 8
.align 1
u38dL_srtd:
	.quad	S2VLN_srt+688
	.quad	46
	.quad	35201551958017


==================== Asm code ====================
2018-03-16 15:57:34.338634849 UTC

.section .text
.align 8
_c387P:
_c387P:
	movq $block_c387T_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Integer.Type.floatFromInteger_entry
	.size _c387P, .-_c387P


==================== Asm code ====================
2018-03-16 15:57:34.339248383 UTC

.section .data.rel.ro
.align 8
.align 1
block_c387P_info:
	.quad	_c387P
	.quad	1286
	.quad	-4294967266
	.quad	u38dL_srtd


==================== Asm code ====================
2018-03-16 15:57:34.339800878 UTC

.section .data.rel.ro
.align 8
.align 1
u38dM_srtd:
	.quad	S2VLN_srt+688
	.quad	46
	.quad	35201551958017


==================== Asm code ====================
2018-03-16 15:57:34.340624851 UTC

.section .text
.align 8
_c387T:
_c387T:
	movq 32(%rbp),%rax
	subq $8,%rsp
	movss %xmm1,%xmm0
	movq %rax,%rbx
	movl $1,%eax
	call logf
	addq $8,%rsp
	movq $block_c3881_info,(%rbp)
	movss %xmm0,40(%rbp)
	testb $7,%bl
	jne _c3881
_c3882:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c387T, .-_c387T


==================== Asm code ====================
2018-03-16 15:57:34.341349836 UTC

.section .data.rel.ro
.align 8
.align 1
block_c387T_info:
	.quad	_c387T
	.quad	1286
	.quad	-4294967266
	.quad	u38dM_srtd


==================== Asm code ====================
2018-03-16 15:57:34.34190686 UTC

.section .data.rel.ro
.align 8
.align 1
u38dN_srtd:
	.quad	S2VLN_srt+688
	.quad	46
	.quad	35201551958017


==================== Asm code ====================
2018-03-16 15:57:34.342568047 UTC

.section .text
.align 8
_c3881:
_c3881:
	movq $block_c3886_info,(%rbp)
	movq 15(%rbx),%rbx
	testb $7,%bl
	jne _c3886
_c3887:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3881, .-_c3881


==================== Asm code ====================
2018-03-16 15:57:34.343225216 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3881_info:
	.quad	_c3881
	.quad	1798
	.quad	-4294967266
	.quad	u38dN_srtd


==================== Asm code ====================
2018-03-16 15:57:34.343759607 UTC

.section .data.rel.ro
.align 8
.align 1
u38dO_srtd:
	.quad	S2VLN_srt+688
	.quad	46
	.quad	35201551958017


==================== Asm code ====================
2018-03-16 15:57:34.344521309 UTC

.section .text
.align 8
_c3886:
_c3886:
	movq $block_c388b_info,(%rbp)
	movq 7(%rbx),%rax
	movl $lvl5_r2UqD_closure,%ebx
	movq %rax,32(%rbp)
	testb $7,%bl
	jne _c388b
_c388c:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3886, .-_c3886


==================== Asm code ====================
2018-03-16 15:57:34.345138711 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3886_info:
	.quad	_c3886
	.quad	1798
	.quad	-4294967266
	.quad	u38dO_srtd


==================== Asm code ====================
2018-03-16 15:57:34.346296107 UTC

.section .text
.align 8
_c388b:
_c388b:
	movq $block_c388g_info,(%rbp)
	movq 16(%rbp),%r14
	movss 7(%rbx),%xmm0
	movss %xmm0,24(%rbp)
	jmp GHC.Integer.Type.floatFromInteger_entry
	.size _c388b, .-_c388b


==================== Asm code ====================
2018-03-16 15:57:34.346897598 UTC

.section .data.rel.ro
.align 8
.align 1
block_c388b_info:
	.quad	_c388b
	.quad	1798
	.quad	8800387989534
	.quad	S2VLN_srt+960


==================== Asm code ====================
2018-03-16 15:57:34.347852631 UTC

.section .text
.align 8
_c388g:
_c388g:
	movss 40(%rbp),%xmm0
	movq 32(%rbp),%rax
	movss 24(%rbp),%xmm2
	subq $8,%rsp
	movsd %xmm0,%xmm3
	movss %xmm1,%xmm0
	movq %rax,%rbx
	movl $1,%eax
	movsd %xmm3,72(%rsp)
	movsd %xmm2,80(%rsp)
	call logf
	addq $8,%rsp
	cvtsi2ssq %rbx,%xmm1
	movsd 72(%rsp),%xmm2
	mulss %xmm2,%xmm1
	movsd 64(%rsp),%xmm2
	addss %xmm1,%xmm2
	divss %xmm0,%xmm2
	cvttss2siq %xmm2,%rax
	cvtsi2ssq %rax,%xmm0
	ucomiss %xmm2,%xmm0
	jp _c388S
	jb _c388T
_c388S:
	movq %rax,40(%rbp)
	addq $8,%rbp
	jmp _c386N
_c388T:
	incq %rax
	movq %rax,40(%rbp)
	addq $8,%rbp
	jmp _c386N
	.size _c388g, .-_c388g


==================== Asm code ====================
2018-03-16 15:57:34.349228049 UTC

.section .data.rel.ro
.align 8
.align 1
block_c388g_info:
	.quad	_c388g
	.quad	1798
	.quad	8800387989534
	.quad	S2VLN_srt+960


==================== Asm code ====================
2018-03-16 15:57:34.350104907 UTC

.section .text
.align 8
_c386N:
_c386N:
	movq 8(%rbp),%rax
	movq 32(%rbp),%rbx
	testq %rbx,%rbx
	jl _c3872
_c387s:
	movq $block_c387n_info,-8(%rbp)
	movq %rbx,%rsi
	movq %rax,%r14
	addq $-8,%rbp
	jmp GHC.Float.$wexpt_entry
_c3872:
	movq $block_c386W_info,-8(%rbp)
	movq %rbx,%rsi
	negq %rsi
	movq %rax,%r14
	addq $-8,%rbp
	jmp GHC.Float.$wexpt_entry
	.size _c386N, .-_c386N


==================== Asm code ====================
2018-03-16 15:57:34.350818403 UTC

.section .text
.align 8
_c386W:
_c386W:
	movq $block_c3870_info,(%rbp)
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c386W, .-_c386W


==================== Asm code ====================
2018-03-16 15:57:34.351422126 UTC

.section .data.rel.ro
.align 8
.align 1
block_c386W_info:
	.quad	_c386W
	.quad	1798
	.quad	8800387989534
	.quad	S2VLN_srt+960


==================== Asm code ====================
2018-03-16 15:57:34.352069692 UTC

.section .text
.align 8
_c3870:
_c3870:
	movq $block_c3877_info,(%rbp)
	movq 48(%rbp),%rsi
	movq %rbx,%r14
	jmp GHC.Integer.Type.leInteger#_entry
	.size _c3870, .-_c3870


==================== Asm code ====================
2018-03-16 15:57:34.352667092 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3870_info:
	.quad	_c3870
	.quad	1798
	.quad	8800387989534
	.quad	S2VLN_srt+960


==================== Asm code ====================
2018-03-16 15:57:34.353534841 UTC

.section .text
.align 8
_c3877:
_c3877:
	movq 40(%rbp),%rax
	cmpq $1,%rbx
	je _c387i
_c387e:
	incq %rax
	movq %rax,40(%rbp)
	addq $8,%rbp
	jmp _c386N
_c387l:
	movq $16,904(%r13)
	jmp stg_gc_unbx_r1
_c387i:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c387l
_c387k:
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $56,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3877, .-_c3877


==================== Asm code ====================
2018-03-16 15:57:34.354288224 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3877_info:
	.quad	_c3877
	.quad	1798
	.quad	8800387989534
	.quad	S2VLN_srt+960


==================== Asm code ====================
2018-03-16 15:57:34.354898138 UTC

.section .text
.align 8
_c387n:
_c387n:
	movq $block_c387r_info,(%rbp)
	movq 48(%rbp),%rsi
	movq %rbx,%r14
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c387n, .-_c387n


==================== Asm code ====================
2018-03-16 15:57:34.355524896 UTC

.section .data.rel.ro
.align 8
.align 1
block_c387n_info:
	.quad	_c387n
	.quad	1798
	.quad	8800387989534
	.quad	S2VLN_srt+960


==================== Asm code ====================
2018-03-16 15:57:34.356154994 UTC

.section .text
.align 8
_c387r:
_c387r:
	movq $block_c387x_info,(%rbp)
	movq %rbx,%rsi
	movq 8(%rbp),%r14
	jmp GHC.Integer.Type.leInteger#_entry
	.size _c387r, .-_c387r


==================== Asm code ====================
2018-03-16 15:57:34.356745219 UTC

.section .data.rel.ro
.align 8
.align 1
block_c387r_info:
	.quad	_c387r
	.quad	1798
	.quad	8800387989534
	.quad	S2VLN_srt+960


==================== Asm code ====================
2018-03-16 15:57:34.358002432 UTC

.section .text
.align 8
_c387x:
_c387x:
	movq 40(%rbp),%rax
	cmpq $1,%rbx
	je _c387I
_c387E:
	incq %rax
	movq %rax,40(%rbp)
	addq $8,%rbp
	jmp _c386N
_c387L:
	movq $16,904(%r13)
	jmp stg_gc_unbx_r1
_c387I:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c387L
_c387K:
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $56,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c387x, .-_c387x


==================== Asm code ====================
2018-03-16 15:57:34.358608429 UTC

.section .data.rel.ro
.align 8
.align 1
block_c387x_info:
	.quad	_c387x
	.quad	1798
	.quad	8800387989534
	.quad	S2VLN_srt+960


==================== Asm code ====================
2018-03-16 15:57:34.359338312 UTC

.section .text
.align 8
sat_s2Vgz_entry:
_c38aH:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c38aI
_c38aJ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movl $GHC.Float.$fRealDouble1_closure,%esi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Integer.Type.plusInteger_entry
_c38aI:
	jmp *-16(%r13)
	.size sat_s2Vgz_entry, .-sat_s2Vgz_entry


==================== Asm code ====================
2018-03-16 15:57:34.359968051 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Vgz_info:
	.quad	sat_s2Vgz_entry
	.quad	1
	.quad	21474836496
	.quad	S2VLN_srt+864


==================== Asm code ====================
2018-03-16 15:57:34.360702782 UTC

.section .text
.align 8
sat_s2VgD_entry:
_c38b1:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c38b2
_c38b3:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movl $GHC.Float.$fRealDouble1_closure,%esi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Integer.Type.plusInteger_entry
_c38b2:
	jmp *-16(%r13)
	.size sat_s2VgD_entry, .-sat_s2VgD_entry


==================== Asm code ====================
2018-03-16 15:57:34.361394717 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2VgD_info:
	.quad	sat_s2VgD_entry
	.quad	1
	.quad	21474836496
	.quad	S2VLN_srt+864


==================== Asm code ====================
2018-03-16 15:57:34.362013526 UTC

.section .data.rel.ro
.align 8
.align 1
u38dP_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611689901077823489


==================== Asm code ====================
2018-03-16 15:57:34.362758085 UTC

.section .text
.align 8
gen_s2Vgh_entry:
_c38b7:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _c38b8
_u38bP:
	movq %rbx,-48(%rbp)
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-48,%rbp
	jmp _c38a2
_c38b8:
	jmp *-8(%r13)
	.size gen_s2Vgh_entry, .-gen_s2Vgh_entry


==================== Asm code ====================
2018-03-16 15:57:34.363388123 UTC

.section .data.rel.ro
.align 8
.align 1
gen_s2Vgh_info:
	.quad	gen_s2Vgh_entry
	.quad	1
	.quad	-4294967287
	.quad	21474836505
	.quad	u38dP_srtd


==================== Asm code ====================
2018-03-16 15:57:34.364075789 UTC

.section .text
.align 8
_c38a2:
_c38a2:
	movq (%rbp),%rax
	movq 3(%rax),%rax
	movq $block_c38a5_info,-16(%rbp)
	movl $GHC.Float.rationalToDouble5_closure,%esi
	movq 24(%rbp),%r14
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Integer.Type.eqInteger#_entry
	.size _c38a2, .-_c38a2


==================== Asm code ====================
2018-03-16 15:57:34.364734306 UTC

.section .data.rel.ro
.align 8
.align 1
u38dQ_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611689901077823489


==================== Asm code ====================
2018-03-16 15:57:34.365511195 UTC

.section .text
.align 8
_c38a5:
_c38a5:
	cmpq $1,%rbx
	je _c38b6
_c38b5:
	movq $block_c38a9_info,(%rbp)
	movq 8(%rbp),%rsi
	movq 32(%rbp),%r14
	jmp GHC.Integer.Type.timesInteger_entry
_c38b6:
	movl $GHC.Real.divZeroError_closure,%ebx
	addq $64,%rbp
	jmp stg_ap_0_fast
	.size _c38a5, .-_c38a5


==================== Asm code ====================
2018-03-16 15:57:34.366140084 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38a5_info:
	.quad	_c38a5
	.quad	7
	.quad	-4294967266
	.quad	u38dQ_srtd


==================== Asm code ====================
2018-03-16 15:57:34.366729146 UTC

.section .data.rel.ro
.align 8
.align 1
u38dR_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611689901077823489


==================== Asm code ====================
2018-03-16 15:57:34.367378783 UTC

.section .text
.align 8
_c38a9:
_c38a9:
	movq $block_c38ad_info,(%rbp)
	movq 40(%rbp),%rsi
	movq %rbx,%r14
	jmp GHC.Integer.Type.quotRemInteger_entry
	.size _c38a9, .-_c38a9


==================== Asm code ====================
2018-03-16 15:57:34.368003515 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38a9_info:
	.quad	_c38a9
	.quad	519
	.quad	-4294967266
	.quad	u38dR_srtd


==================== Asm code ====================
2018-03-16 15:57:34.368560849 UTC

.section .data.rel.ro
.align 8
.align 1
u38dS_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611689901077823489


==================== Asm code ====================
2018-03-16 15:57:34.369624863 UTC

.section .text
.align 8
_c38ad:
_c38ad:
	movq $block_c38af_info,(%rbp)
	movq 8(%rbp),%rsi
	movq %r14,%rax
	movq 48(%rbp),%r14
	movq %rax,32(%rbp)
	movq %rbx,48(%rbp)
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c38ad, .-_c38ad


==================== Asm code ====================
2018-03-16 15:57:34.370234894 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38ad_info:
	.quad	_c38ad
	.quad	519
	.quad	-4294967266
	.quad	u38dS_srtd


==================== Asm code ====================
2018-03-16 15:57:34.370813228 UTC

.section .data.rel.ro
.align 8
.align 1
u38dT_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611689901077823489


==================== Asm code ====================
2018-03-16 15:57:34.371493904 UTC

.section .text
.align 8
_c38af:
_c38af:
	movq $block_c38aj_info,-8(%rbp)
	movq %rbx,%rsi
	movq 32(%rbp),%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.plusInteger_entry
	.size _c38af, .-_c38af


==================== Asm code ====================
2018-03-16 15:57:34.372151647 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38af_info:
	.quad	_c38af
	.quad	7
	.quad	-4294967266
	.quad	u38dT_srtd


==================== Asm code ====================
2018-03-16 15:57:34.372712442 UTC

.section .data.rel.ro
.align 8
.align 1
u38dU_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611689901077823489


==================== Asm code ====================
2018-03-16 15:57:34.373483507 UTC

.section .text
.align 8
_c38aj:
_c38aj:
	movq $block_c38an_info,(%rbp)
	movq 48(%rbp),%rsi
	movq %rbx,%r14
	jmp GHC.Integer.Type.gtInteger#_entry
	.size _c38aj, .-_c38aj


==================== Asm code ====================
2018-03-16 15:57:34.374105495 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38aj_info:
	.quad	_c38aj
	.quad	8
	.quad	-4294967266
	.quad	u38dU_srtd


==================== Asm code ====================
2018-03-16 15:57:34.374689001 UTC

.section .data.rel.ro
.align 8
.align 1
u38dV_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611689901077823489


==================== Asm code ====================
2018-03-16 15:57:34.375340847 UTC

.section .text
.align 8
_c38an:
_c38an:
	movq $block_c38ar_info,(%rbp)
	movq 16(%rbp),%rsi
	movq 64(%rbp),%r14
	movq %rbx,64(%rbp)
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c38an, .-_c38an


==================== Asm code ====================
2018-03-16 15:57:34.376475901 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38an_info:
	.quad	_c38an
	.quad	8
	.quad	-4294967266
	.quad	u38dV_srtd


==================== Asm code ====================
2018-03-16 15:57:34.377115366 UTC

.section .data.rel.ro
.align 8
.align 1
u38dW_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611689901077823489


==================== Asm code ====================
2018-03-16 15:57:34.377890449 UTC

.section .text
.align 8
_c38ar:
_c38ar:
	movq $block_c38av_info,(%rbp)
	movq %rbx,%rsi
	movq 40(%rbp),%r14
	movq %rbx,16(%rbp)
	jmp GHC.Integer.Type.ltInteger#_entry
	.size _c38ar, .-_c38ar


==================== Asm code ====================
2018-03-16 15:57:34.37854346 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38ar_info:
	.quad	_c38ar
	.quad	8328
	.quad	-4294967266
	.quad	u38dW_srtd


==================== Asm code ====================
2018-03-16 15:57:34.379130568 UTC

.section .data.rel.ro
.align 8
.align 1
u38dX_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611689901077823489


==================== Asm code ====================
2018-03-16 15:57:34.380185608 UTC

.section .text
.align 8
_c38av:
_c38av:
	movq 32(%rbp),%rax
	movq 56(%rbp),%rcx
	movq 40(%rbp),%rdx
	movq 64(%rbp),%rsi
	cmpq $1,%rbx
	je _c38bq
_c38bi:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c38bl
_c38bk:
	cmpq $1,%rsi
	je _c38bp
_c38bn:
	movq $:_con_info,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rax,-24(%r12)
	leaq -38(%r12),%rax
	addq $-24,%r12
	movq %rax,32(%rbp)
	movq %rdx,40(%rbp)
	movq 48(%rbp),%rax
	movq %rax,48(%rbp)
	movq 8(%rbp),%rax
	movq %rax,56(%rbp)
	movq 16(%rbp),%rax
	movq %rax,64(%rbp)
	addq $24,%rbp
	jmp _c38a2
_c38bx:
	addq $-24,%r12
	movq $block_c38aP_info,24(%rbp)
	movl $GHC.Float.$fRealFloatDouble5_closure,%esi
	movq %rdx,%r14
	addq $24,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
_c38bq:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c38bt
_c38bs:
	cmpq $1,%rsi
	je _c38bx
_c38bw:
	movq $:_con_info,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $72,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c38bt:
	movq $24,904(%r13)
	jmp stg_gc_unbx_r1
_c38bp:
	movq $sat_s2Vgz_info,-40(%r12)
	movq %rcx,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -40(%r12),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $72,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c38bl:
	movq $48,904(%r13)
	jmp stg_gc_unbx_r1
	.size _c38av, .-_c38av


==================== Asm code ====================
2018-03-16 15:57:34.381153032 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38av_info:
	.quad	_c38av
	.quad	8200
	.quad	-4294967266
	.quad	u38dX_srtd


==================== Asm code ====================
2018-03-16 15:57:34.382166613 UTC

.section .text
.align 8
_c38aP:
_c38aP:
	movq $block_c38aT_info,(%rbp)
	movq 24(%rbp),%rsi
	movq %rbx,%r14
	jmp GHC.Integer.Type.ltInteger#_entry
	.size _c38aP, .-_c38aP


==================== Asm code ====================
2018-03-16 15:57:34.382750105 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38aP_info:
	.quad	_c38aP
	.quad	1157
	.quad	21474836510
	.quad	S2VLN_srt+864


==================== Asm code ====================
2018-03-16 15:57:34.383665733 UTC

.section .text
.align 8
_c38aT:
_c38aT:
	movq 8(%rbp),%rax
	movq 32(%rbp),%rcx
	cmpq $1,%rbx
	je _c38bI
_c38bB:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c38bE
_c38bD:
	movq $sat_s2VgD_info,-40(%r12)
	movq %rcx,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -40(%r12),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c38bL:
	movq $24,904(%r13)
	jmp stg_gc_unbx_r1
_c38bI:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c38bL
_c38bK:
	movq $:_con_info,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c38bE:
	movq $48,904(%r13)
	jmp stg_gc_unbx_r1
	.size _c38aT, .-_c38aT


==================== Asm code ====================
2018-03-16 15:57:34.38454295 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38aT_info:
	.quad	_c38aT
	.quad	1413
	.quad	21474836510
	.quad	S2VLN_srt+864


==================== Asm code ====================
2018-03-16 15:57:34.385078215 UTC

.section .data.rel.ro
.align 8
.align 1
u38dY_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4613941700891508737


==================== Asm code ====================
2018-03-16 15:57:34.385930428 UTC

.section .text
.align 8
sat_s2Vh1_entry:
_c38bT:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _c38bU
_c38bV:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c389V_info,-64(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%rbx
	movq %rax,-56(%rbp)
	movq %rcx,-48(%rbp)
	movq %rdx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	addq $-64,%rbp
	testb $7,%bl
	jne _c389V
_c389W:
	movq (%rbx),%rax
	jmp *(%rax)
_c38bU:
	jmp *-16(%r13)
	.size sat_s2Vh1_entry, .-sat_s2Vh1_entry


==================== Asm code ====================
2018-03-16 15:57:34.386622371 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Vh1_info:
	.quad	sat_s2Vh1_entry
	.quad	6
	.quad	-4294967281
	.quad	u38dY_srtd


==================== Asm code ====================
2018-03-16 15:57:34.387227701 UTC

.section .data.rel.ro
.align 8
.align 1
u38dZ_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4613941700891508737


==================== Asm code ====================
2018-03-16 15:57:34.388123902 UTC

.section .text
.align 8
_c389V:
_c389V:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c38bY
_c38bX:
	movq 7(%rbx),%rax
	movq $gen_s2Vgh_info,-8(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,(%r12)
	movq 16(%rbp),%rbx
	leaq -3(%r12),%rcx
	testq %rax,%rax
	jl _c38cw
_c38d0:
	movq $block_c38cI_info,-8(%rbp)
	movq %rax,(%rbp)
	movq %rcx,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c38cI
_c38cJ:
	movq (%rbx),%rax
	jmp *(%rax)
_c38cw:
	movq $block_c38c2_info,-8(%rbp)
	movq %rax,(%rbp)
	movq %rcx,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c38c2
_c38c3:
	movq (%rbx),%rax
	jmp *(%rax)
_c38bY:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c389V, .-_c389V


==================== Asm code ====================
2018-03-16 15:57:34.388851787 UTC

.section .data.rel.ro
.align 8
.align 1
block_c389V_info:
	.quad	_c389V
	.quad	5
	.quad	-4294967266
	.quad	u38dZ_srtd


==================== Asm code ====================
2018-03-16 15:57:34.389480131 UTC

.section .data.rel.ro
.align 8
.align 1
u38e0_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4613941700891508737


==================== Asm code ====================
2018-03-16 15:57:34.390195688 UTC

.section .text
.align 8
_c38c2:
_c38c2:
	movq 8(%rbp),%rax
	negq %rax
	movq $block_c38ca_info,8(%rbp)
	movq %rax,%rsi
	movq 16(%rbp),%r14
	movq 31(%rbx),%rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp GHC.Float.$wexpt_entry
	.size _c38c2, .-_c38c2


==================== Asm code ====================
2018-03-16 15:57:34.390785635 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38c2_info:
	.quad	_c38c2
	.quad	70
	.quad	-4294967266
	.quad	u38e0_srtd


==================== Asm code ====================
2018-03-16 15:57:34.39135758 UTC

.section .data.rel.ro
.align 8
.align 1
u38e1_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611689901077823489


==================== Asm code ====================
2018-03-16 15:57:34.391973634 UTC

.section .text
.align 8
_c38ca:
_c38ca:
	movq $block_c38ce_info,(%rbp)
	movq %rbx,%rsi
	movq 8(%rbp),%r14
	movq %rbx,8(%rbp)
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c38ca, .-_c38ca


==================== Asm code ====================
2018-03-16 15:57:34.392574453 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38ca_info:
	.quad	_c38ca
	.quad	5
	.quad	-4294967266
	.quad	u38e1_srtd


==================== Asm code ====================
2018-03-16 15:57:34.393165959 UTC

.section .data.rel.ro
.align 8
.align 1
u38e2_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611689901077823489


==================== Asm code ====================
2018-03-16 15:57:34.394272957 UTC

.section .text
.align 8
_c38ce:
_c38ce:
	movq $block_c38ci_info,(%rbp)
	movq 8(%rbp),%rsi
	movq 40(%rbp),%r14
	movq %rbx,40(%rbp)
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c38ce, .-_c38ce


==================== Asm code ====================
2018-03-16 15:57:34.394861424 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38ce_info:
	.quad	_c38ce
	.quad	5
	.quad	-4294967266
	.quad	u38e2_srtd


==================== Asm code ====================
2018-03-16 15:57:34.39539618 UTC

.section .data.rel.ro
.align 8
.align 1
u38e3_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611689901077823489


==================== Asm code ====================
2018-03-16 15:57:34.396070564 UTC

.section .text
.align 8
_c38ci:
_c38ci:
	movq 8(%rbp),%rax
	movq $block_c38cm_info,8(%rbp)
	movq %rax,%rsi
	movq 32(%rbp),%r14
	movq %rbx,32(%rbp)
	addq $8,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c38ci, .-_c38ci


==================== Asm code ====================
2018-03-16 15:57:34.396781406 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38ci_info:
	.quad	_c38ci
	.quad	5
	.quad	-4294967266
	.quad	u38e3_srtd


==================== Asm code ====================
2018-03-16 15:57:34.397509443 UTC

.section .data.rel.ro
.align 8
.align 1
u38e4_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611689901077823489


==================== Asm code ====================
2018-03-16 15:57:34.398199835 UTC

.section .text
.align 8
_c38cm:
_c38cm:
	movq 32(%rbp),%rax
	movq $block_c38cq_info,32(%rbp)
	movq %rax,%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq %rbx,%rsi
	movl $GHC.Types.[]_closure+1,%r14d
	movq 8(%rbp),%rbx
	addq $32,%rbp
	jmp gen_s2Vgh_entry
	.size _c38cm, .-_c38cm


==================== Asm code ====================
2018-03-16 15:57:34.398858277 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38cm_info:
	.quad	_c38cm
	.quad	4
	.quad	-4294967266
	.quad	u38e4_srtd


==================== Asm code ====================
2018-03-16 15:57:34.399519941 UTC

.section .text
.align 8
_c38cq:
_c38cq:
	movq $block_c38cu_info,(%rbp)
	movl $GHC.Types.[]_closure+1,%esi
	movq %rbx,%r14
	jmp GHC.List.reverse1_entry
	.size _c38cq, .-_c38cq


==================== Asm code ====================
2018-03-16 15:57:34.400151581 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38cq_info:
	.quad	_c38cq
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:34.400810682 UTC

.section .text
.align 8
_c38cu:
_c38cu:
	movq %rbx,%rsi
	movl $lvl8_r2UqG_closure+1,%r14d
	addq $8,%rbp
	jmp GHC.Base.map_entry
	.size _c38cu, .-_c38cu


==================== Asm code ====================
2018-03-16 15:57:34.401415815 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38cu_info:
	.quad	_c38cu
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:34.402006068 UTC

.section .data.rel.ro
.align 8
.align 1
u38e5_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4613941700891508737


==================== Asm code ====================
2018-03-16 15:57:34.40275163 UTC

.section .text
.align 8
_c38cI:
_c38cI:
	movq 8(%rbp),%rax
	movq $block_c38cN_info,8(%rbp)
	movq %rax,%rsi
	movq 16(%rbp),%r14
	movq 31(%rbx),%rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp GHC.Float.$wexpt_entry
	.size _c38cI, .-_c38cI


==================== Asm code ====================
2018-03-16 15:57:34.403949302 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38cI_info:
	.quad	_c38cI
	.quad	70
	.quad	-4294967266
	.quad	u38e5_srtd


==================== Asm code ====================
2018-03-16 15:57:34.404931364 UTC

.section .data.rel.ro
.align 8
.align 1
u38e6_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611689901077823489


==================== Asm code ====================
2018-03-16 15:57:34.40590292 UTC

.section .text
.align 8
_c38cN:
_c38cN:
	movq $block_c38cR_info,(%rbp)
	movq %rbx,%rsi
	movq 24(%rbp),%r14
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c38cN, .-_c38cN


==================== Asm code ====================
2018-03-16 15:57:34.406517095 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38cN_info:
	.quad	_c38cN
	.quad	5
	.quad	-4294967266
	.quad	u38e6_srtd


==================== Asm code ====================
2018-03-16 15:57:34.407082127 UTC

.section .data.rel.ro
.align 8
.align 1
u38e7_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611689901077823489


==================== Asm code ====================
2018-03-16 15:57:34.407784834 UTC

.section .text
.align 8
_c38cR:
_c38cR:
	movq 40(%rbp),%rax
	movq $block_c38cV_info,40(%rbp)
	movq 8(%rbp),%r9
	movq %rax,%r8
	movq %rbx,%rdi
	movq 32(%rbp),%rsi
	movl $GHC.Types.[]_closure+1,%r14d
	movq 16(%rbp),%rbx
	addq $40,%rbp
	jmp gen_s2Vgh_entry
	.size _c38cR, .-_c38cR


==================== Asm code ====================
2018-03-16 15:57:34.408454036 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38cR_info:
	.quad	_c38cR
	.quad	261
	.quad	-4294967266
	.quad	u38e7_srtd


==================== Asm code ====================
2018-03-16 15:57:34.409092855 UTC

.section .text
.align 8
_c38cV:
_c38cV:
	movq $block_c38cZ_info,(%rbp)
	movl $GHC.Types.[]_closure+1,%esi
	movq %rbx,%r14
	jmp GHC.List.reverse1_entry
	.size _c38cV, .-_c38cV


==================== Asm code ====================
2018-03-16 15:57:34.409782134 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38cV_info:
	.quad	_c38cV
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:34.410451643 UTC

.section .text
.align 8
_c38cZ:
_c38cZ:
	movq %rbx,%rsi
	movl $lvl8_r2UqG_closure+1,%r14d
	addq $8,%rbp
	jmp GHC.Base.map_entry
	.size _c38cZ, .-_c38cZ


==================== Asm code ====================
2018-03-16 15:57:34.411140793 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38cZ_info:
	.quad	_c38cZ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:34.411721472 UTC

.section .data.rel.ro
.align 8
.align 1
u38e8_srtd:
	.quad	S2VLN_srt+552
	.quad	66
	.quad	-4609430335929581567
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:34.412774878 UTC

.section .text
.align 8
.globl GHC.Float.$w$sfloatToDigits1_entry
.type GHC.Float.$w$sfloatToDigits1_entry, @object
GHC.Float.$w$sfloatToDigits1_entry:
_c38df:
	addq $312,%r12
	cmpq 856(%r13),%r12
	ja _c38dj
_c38di:
	xorps %xmm0,%xmm0
	ucomiss %xmm0,%xmm1
	jp _c38dd
	je _c38de
_c38dd:
	movq $ds_s2Ven_info,-304(%r12)
	movss %xmm1,-288(%r12)
	movq $ds1_s2Vet_info,-280(%r12)
	leaq -304(%r12),%rax
	movq %rax,-264(%r12)
	movq $stg_sel_0_upd_info,-256(%r12)
	leaq -280(%r12),%rbx
	movq %rbx,-240(%r12)
	movq $ds2_s2VeK_info,-232(%r12)
	movq %rbx,-216(%r12)
	leaq -256(%r12),%rcx
	movq %rcx,-208(%r12)
	movq $stg_sel_1_upd_info,-200(%r12)
	leaq -232(%r12),%rdx
	movq %rdx,-184(%r12)
	movq $stg_sel_0_upd_info,-176(%r12)
	movq %rdx,-160(%r12)
	movq $stg_sel_2_upd_info,-152(%r12)
	movq %rdx,-136(%r12)
	movq $k_s2Vfu_info,-128(%r12)
	movq %r14,-112(%r12)
	movq %rax,-104(%r12)
	movq %rbx,-96(%r12)
	movq %rcx,-88(%r12)
	leaq -200(%r12),%rax
	movq %rax,-80(%r12)
	leaq -176(%r12),%rbx
	movq %rbx,-72(%r12)
	leaq -152(%r12),%rcx
	movq %rcx,-64(%r12)
	movq $sat_s2Vh1_info,-56(%r12)
	movq %r14,-40(%r12)
	movq %rdx,-32(%r12)
	movq %rax,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	leaq -128(%r12),%rax
	movq %rax,(%r12)
	movq %rax,%r14
	leaq -56(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c38dj:
	movq $312,904(%r13)
	movl $GHC.Float.$w$sfloatToDigits1_closure,%ebx
	movq %r14,-16(%rbp)
	movss %xmm1,-8(%rbp)
	addq $-16,%rbp
	jmp *-8(%r13)
_c38de:
	addq $-312,%r12
	movl $GHC.Float.minExpt_closure+1,%r14d
	movl $lvl3_r2UpB_closure+2,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Float.$w$sfloatToDigits1_entry, .-GHC.Float.$w$sfloatToDigits1_entry


==================== Asm code ====================
2018-03-16 15:57:34.413837822 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$w$sfloatToDigits1_info
.type GHC.Float.$w$sfloatToDigits1_info, @object
GHC.Float.$w$sfloatToDigits1_info:
	.quad	GHC.Float.$w$sfloatToDigits1_entry
	.quad	0
	.quad	-4294967282
	.quad	8589934592
	.quad	u38e8_srtd
	.quad	130
	.quad	GHC.Float.$w$sfloatToDigits1_slow


==================== Asm code ====================
2018-03-16 15:57:34.417202214 UTC

.section .data
.align 8
.align 1
lvl11_r2UqJ_closure:
	.quad	lvl11_r2UqJ_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:34.417927035 UTC

.section .data.rel.ro
.align 8
.align 1
u38kw_srtd:
	.quad	S2VLN_srt+552
	.quad	52
	.quad	2251799813685249


==================== Asm code ====================
2018-03-16 15:57:34.418993364 UTC

.section .text
.align 8
lvl11_r2UqJ_entry:
_c38kt:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c38ku
_c38kv:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c38ks
_c38kr:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $52,%esi
	movl $GHC.Float.$fRealFloatDouble5_closure,%r14d
	addq $-16,%rbp
	jmp GHC.Float.$wexpt_entry
_c38ku:
	jmp *-16(%r13)
_c38ks:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl11_r2UqJ_entry, .-lvl11_r2UqJ_entry


==================== Asm code ====================
2018-03-16 15:57:34.419770865 UTC

.section .data.rel.ro
.align 8
.align 1
lvl11_r2UqJ_info:
	.quad	lvl11_r2UqJ_entry
	.quad	0
	.quad	-4294967275
	.quad	u38kw_srtd


==================== Asm code ====================
2018-03-16 15:57:34.491429585 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$w$sfloatToDigits_closure
.type GHC.Float.$w$sfloatToDigits_closure, @object
GHC.Float.$w$sfloatToDigits_closure:
	.quad	GHC.Float.$w$sfloatToDigits_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:34.492595334 UTC

.section .text
.align 8
.globl GHC.Float.$w$sfloatToDigits_slow
.type GHC.Float.$w$sfloatToDigits_slow, @object
GHC.Float.$w$sfloatToDigits_slow:
_c38kG:
	movsd 8(%rbp),%xmm1
	movq (%rbp),%r14
	addq $16,%rbp
	jmp GHC.Float.$w$sfloatToDigits_entry
	.size GHC.Float.$w$sfloatToDigits_slow, .-GHC.Float.$w$sfloatToDigits_slow


==================== Asm code ====================
2018-03-16 15:57:34.493782028 UTC

.section .text
.align 8
ds_s2Vh5_entry:
_c38kX:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c38kY
_c38kZ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c38kR_info,-24(%rbp)
	movsd 16(%rbx),%xmm1
	addq $-24,%rbp
	jmp GHC.Integer.Type.decodeDoubleInteger_entry
_c38kY:
	jmp *-16(%r13)
	.size ds_s2Vh5_entry, .-ds_s2Vh5_entry


==================== Asm code ====================
2018-03-16 15:57:34.494778136 UTC

.section .data.rel.ro
.align 8
.align 1
ds_s2Vh5_info:
	.quad	ds_s2Vh5_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S2VLN_srt+1080


==================== Asm code ====================
2018-03-16 15:57:34.495721904 UTC

.section .text
.align 8
_c38kR:
_c38kR:
	movq %r14,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp _c38kS
	.size _c38kR, .-_c38kR


==================== Asm code ====================
2018-03-16 15:57:34.496591764 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38kR_info:
	.quad	_c38kR
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:34.497651324 UTC

.section .text
.align 8
_c38kS:
_c38kS:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c38l2
_c38l1:
	movq $GHC.Types.I#_con_info,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	leaq -31(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c38l2:
	movq $40,904(%r13)
	movq $block_c38kS_info,(%rbp)
	jmp stg_gc_noregs
	.size _c38kS, .-_c38kS


==================== Asm code ====================
2018-03-16 15:57:34.498369539 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38kS_info:
	.quad	_c38kS
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:34.498947839 UTC

.section .data.rel.ro
.align 8
.align 1
u38vK_srtd:
	.quad	S2VLN_srt+552
	.quad	52
	.quad	2252933685051393


==================== Asm code ====================
2018-03-16 15:57:34.499713704 UTC

.section .text
.align 8
sat_s2Vhk_entry:
_c38lA:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c38lB
_c38lC:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c38ly_info,-32(%rbp)
	movq 24(%rbx),%rsi
	movl $GHC.Float.$fRealFloatDouble5_closure,%r14d
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Float.$wexpt_entry
_c38lB:
	jmp *-16(%r13)
	.size sat_s2Vhk_entry, .-sat_s2Vhk_entry


==================== Asm code ====================
2018-03-16 15:57:34.500376636 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Vhk_info:
	.quad	sat_s2Vhk_entry
	.quad	4294967297
	.quad	-4294967277
	.quad	u38vK_srtd


==================== Asm code ====================
2018-03-16 15:57:34.501056032 UTC

.section .text
.align 8
_c38ly:
_c38ly:
	movq $block_c38lF_info,-8(%rbp)
	movl $GHC.Float.rationalToDouble5_closure,%esi
	movq %rbx,%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.eqInteger#_entry
	.size _c38ly, .-_c38ly


==================== Asm code ====================
2018-03-16 15:57:34.501766711 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38ly_info:
	.quad	_c38ly
	.quad	1
	.quad	141733920798
	.quad	S2VLN_srt+832


==================== Asm code ====================
2018-03-16 15:57:34.502450996 UTC

.section .text
.align 8
_c38lF:
_c38lF:
	cmpq $1,%rbx
	je _c38lQ
_c38lM:
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Integer.Type.quotInteger_entry
_c38lQ:
	movl $GHC.Real.divZeroError_closure,%ebx
	addq $24,%rbp
	jmp stg_ap_0_fast
	.size _c38lF, .-_c38lF


==================== Asm code ====================
2018-03-16 15:57:34.50308716 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38lF_info:
	.quad	_c38lF
	.quad	2
	.quad	4294967326
	.quad	S2VLN_srt+872


==================== Asm code ====================
2018-03-16 15:57:34.503619725 UTC

.section .data.rel.ro
.align 8
.align 1
u38vL_srtd:
	.quad	S2VLN_srt+552
	.quad	52
	.quad	2252933685051393


==================== Asm code ====================
2018-03-16 15:57:34.504352245 UTC

.section .text
.align 8
ds1_s2Vha_entry:
_c38lR:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c38lS
_c38lT:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c38l9_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _c38l9
_c38la:
	movq (%rbx),%rax
	jmp *(%rax)
_c38lS:
	jmp *-16(%r13)
	.size ds1_s2Vha_entry, .-ds1_s2Vha_entry


==================== Asm code ====================
2018-03-16 15:57:34.505026044 UTC

.section .data.rel.ro
.align 8
.align 1
ds1_s2Vha_info:
	.quad	ds1_s2Vha_entry
	.quad	1
	.quad	-4294967280
	.quad	u38vL_srtd


==================== Asm code ====================
2018-03-16 15:57:34.505653548 UTC

.section .data.rel.ro
.align 8
.align 1
u38vM_srtd:
	.quad	S2VLN_srt+552
	.quad	52
	.quad	2252933685051393


==================== Asm code ====================
2018-03-16 15:57:34.506391051 UTC

.section .text
.align 8
_c38l9:
_c38l9:
	movq $block_c38le_info,-16(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c38le
_c38lf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c38l9, .-_c38l9


==================== Asm code ====================
2018-03-16 15:57:34.507031565 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38l9_info:
	.quad	_c38l9
	.quad	0
	.quad	-4294967266
	.quad	u38vM_srtd


==================== Asm code ====================
2018-03-16 15:57:34.507574465 UTC

.section .data.rel.ro
.align 8
.align 1
u38vN_srtd:
	.quad	S2VLN_srt+552
	.quad	52
	.quad	2252933685051393


==================== Asm code ====================
2018-03-16 15:57:34.508476599 UTC

.section .text
.align 8
_c38le:
_c38le:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c38lX
_c38lW:
	movq 7(%rbx),%rax
	movq $-1074,%rbx
	subq %rax,%rbx
	testq %rbx,%rbx
	jle _c38lZ
_c38m1:
	movq $GHC.Types.I#_con_info,-64(%r12)
	addq %rbx,%rax
	movq %rax,-56(%r12)
	movq $sat_s2Vhk_info,-48(%r12)
	movq 8(%rbp),%rax
	movq %rax,-32(%r12)
	movq %rbx,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -48(%r12),%rax
	movq %rax,-8(%r12)
	leaq -63(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c38lZ:
	addq $-72,%r12
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c38lX:
	movq $72,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c38le, .-_c38le


==================== Asm code ====================
2018-03-16 15:57:34.509299475 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38le_info:
	.quad	_c38le
	.quad	2
	.quad	-4294967266
	.quad	u38vN_srtd


==================== Asm code ====================
2018-03-16 15:57:34.50990851 UTC

.section .data.rel.ro
.align 8
.align 1
u38vO_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4613937818241073153


==================== Asm code ====================
2018-03-16 15:57:34.510718749 UTC

.section .text
.align 8
sat_s2VhC_entry:
_c38mx:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c38mA
_c38mB:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c38mz_info,-24(%rbp)
	movq 16(%rbx),%rsi
	negq %rsi
	movl $GHC.Float.$fRealFloatDouble5_closure,%r14d
	addq $-24,%rbp
	jmp GHC.Float.$wexpt_entry
_c38mA:
	jmp *-16(%r13)
	.size sat_s2VhC_entry, .-sat_s2VhC_entry


==================== Asm code ====================
2018-03-16 15:57:34.511362969 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2VhC_info:
	.quad	sat_s2VhC_entry
	.quad	4294967296
	.quad	-4294967279
	.quad	u38vO_srtd


==================== Asm code ====================
2018-03-16 15:57:34.511983945 UTC

.section .data.rel.ro
.align 8
.align 1
u38vP_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:34.512660581 UTC

.section .text
.align 8
_c38mz:
_c38mz:
	movl $GHC.Float.$fRealFloatDouble5_closure,%esi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c38mz, .-_c38mz


==================== Asm code ====================
2018-03-16 15:57:34.513907985 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38mz_info:
	.quad	_c38mz
	.quad	0
	.quad	-4294967266
	.quad	u38vP_srtd


==================== Asm code ====================
2018-03-16 15:57:34.514553589 UTC

.section .data.rel.ro
.align 8
.align 1
u38vQ_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:34.515354117 UTC

.section .text
.align 8
sat_s2Vhz_entry:
_c38mK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c38mL
_c38mM:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movl $GHC.Float.$fRealFloatDouble5_closure,%esi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
_c38mL:
	jmp *-16(%r13)
	.size sat_s2Vhz_entry, .-sat_s2Vhz_entry


==================== Asm code ====================
2018-03-16 15:57:34.516076111 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Vhz_info:
	.quad	sat_s2Vhz_entry
	.quad	1
	.quad	-4294967280
	.quad	u38vQ_srtd


==================== Asm code ====================
2018-03-16 15:57:34.516673099 UTC

.section .data.rel.ro
.align 8
.align 1
u38vR_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4613937818241073153


==================== Asm code ====================
2018-03-16 15:57:34.517518639 UTC

.section .text
.align 8
sat_s2VhK_entry:
_c38n2:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c38n8
_c38n9:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c38n7_info,-24(%rbp)
	movq 16(%rbx),%rax
	negq %rax
	leaq 1(%rax),%rsi
	movl $GHC.Float.$fRealFloatDouble5_closure,%r14d
	addq $-24,%rbp
	jmp GHC.Float.$wexpt_entry
_c38n8:
	jmp *-16(%r13)
	.size sat_s2VhK_entry, .-sat_s2VhK_entry


==================== Asm code ====================
2018-03-16 15:57:34.518206757 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2VhK_info:
	.quad	sat_s2VhK_entry
	.quad	4294967296
	.quad	-4294967279
	.quad	u38vR_srtd


==================== Asm code ====================
2018-03-16 15:57:34.518838777 UTC

.section .data.rel.ro
.align 8
.align 1
u38vS_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:34.519479782 UTC

.section .text
.align 8
_c38n7:
_c38n7:
	movl $GHC.Float.$fRealFloatDouble5_closure,%esi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c38n7, .-_c38n7


==================== Asm code ====================
2018-03-16 15:57:34.520003665 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38n7_info:
	.quad	_c38n7
	.quad	0
	.quad	-4294967266
	.quad	u38vS_srtd


==================== Asm code ====================
2018-03-16 15:57:34.520560526 UTC

.section .data.rel.ro
.align 8
.align 1
u38vT_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:34.52148514 UTC

.section .text
.align 8
sat_s2VhG_entry:
_c38nk:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c38nl
_c38nm:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c38ni_info,-24(%rbp)
	movl $GHC.Float.$fRealFloatDouble5_closure,%esi
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
_c38nl:
	jmp *-16(%r13)
	.size sat_s2VhG_entry, .-sat_s2VhG_entry


==================== Asm code ====================
2018-03-16 15:57:34.522131525 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2VhG_info:
	.quad	sat_s2VhG_entry
	.quad	1
	.quad	-4294967280
	.quad	u38vT_srtd


==================== Asm code ====================
2018-03-16 15:57:34.522685642 UTC

.section .data.rel.ro
.align 8
.align 1
u38vU_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:34.523350343 UTC

.section .text
.align 8
_c38ni:
_c38ni:
	movl $GHC.Float.$fRealFloatDouble5_closure,%esi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c38ni, .-_c38ni


==================== Asm code ====================
2018-03-16 15:57:34.523949513 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38ni_info:
	.quad	_c38ni
	.quad	0
	.quad	-4294967266
	.quad	u38vU_srtd


==================== Asm code ====================
2018-03-16 15:57:34.524520441 UTC

.section .data.rel.ro
.align 8
.align 1
u38vV_srtd:
	.quad	S2VLN_srt+552
	.quad	52
	.quad	2251799813685249


==================== Asm code ====================
2018-03-16 15:57:34.525281026 UTC

.section .text
.align 8
be_s2VhL_entry:
_c38nv:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c38nw
_c38nx:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rsi
	movl $GHC.Float.$fRealFloatDouble5_closure,%r14d
	addq $-16,%rbp
	jmp GHC.Float.$wexpt_entry
_c38nw:
	jmp *-16(%r13)
	.size be_s2VhL_entry, .-be_s2VhL_entry


==================== Asm code ====================
2018-03-16 15:57:34.525944731 UTC

.section .data.rel.ro
.align 8
.align 1
be_s2VhL_info:
	.quad	be_s2VhL_entry
	.quad	4294967296
	.quad	-4294967279
	.quad	u38vV_srtd


==================== Asm code ====================
2018-03-16 15:57:34.526514645 UTC

.section .data.rel.ro
.align 8
.align 1
u38vW_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:34.527221426 UTC

.section .text
.align 8
sat_s2VhO_entry:
_c38nI:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c38nJ
_c38nK:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c38nG_info,-24(%rbp)
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
_c38nJ:
	jmp *-16(%r13)
	.size sat_s2VhO_entry, .-sat_s2VhO_entry


==================== Asm code ====================
2018-03-16 15:57:34.527884673 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2VhO_info:
	.quad	sat_s2VhO_entry
	.quad	2
	.quad	-4294967278
	.quad	u38vW_srtd


==================== Asm code ====================
2018-03-16 15:57:34.528442733 UTC

.section .data.rel.ro
.align 8
.align 1
u38vX_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:34.529080128 UTC

.section .text
.align 8
_c38nG:
_c38nG:
	movl $GHC.Float.$fRealFloatDouble5_closure,%esi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c38nG, .-_c38nG


==================== Asm code ====================
2018-03-16 15:57:34.529716721 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38nG_info:
	.quad	_c38nG
	.quad	0
	.quad	-4294967266
	.quad	u38vX_srtd


==================== Asm code ====================
2018-03-16 15:57:34.530287739 UTC

.section .data.rel.ro
.align 8
.align 1
u38vY_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:34.53102204 UTC

.section .text
.align 8
sat_s2VhS_entry:
_c38nU:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c38nV
_c38nW:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movl $GHC.Float.$fRealFloatDouble5_closure,%esi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
_c38nV:
	jmp *-16(%r13)
	.size sat_s2VhS_entry, .-sat_s2VhS_entry


==================== Asm code ====================
2018-03-16 15:57:34.531654182 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2VhS_info:
	.quad	sat_s2VhS_entry
	.quad	1
	.quad	-4294967280
	.quad	u38vY_srtd


==================== Asm code ====================
2018-03-16 15:57:34.532218086 UTC

.section .data.rel.ro
.align 8
.align 1
u38vZ_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:34.532922531 UTC

.section .text
.align 8
sat_s2VhR_entry:
_c38o3:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c38o7
_c38o8:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c38o1_info,-24(%rbp)
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
_c38o7:
	jmp *-16(%r13)
	.size sat_s2VhR_entry, .-sat_s2VhR_entry


==================== Asm code ====================
2018-03-16 15:57:34.533959032 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2VhR_info:
	.quad	sat_s2VhR_entry
	.quad	2
	.quad	-4294967278
	.quad	u38vZ_srtd


==================== Asm code ====================
2018-03-16 15:57:34.534706123 UTC

.section .data.rel.ro
.align 8
.align 1
u38w0_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:34.535597894 UTC

.section .text
.align 8
_c38o1:
_c38o1:
	movq $block_c38o6_info,(%rbp)
	movl $GHC.Float.$fRealFloatDouble5_closure,%esi
	movq %rbx,%r14
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c38o1, .-_c38o1


==================== Asm code ====================
2018-03-16 15:57:34.536367443 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38o1_info:
	.quad	_c38o1
	.quad	0
	.quad	-4294967266
	.quad	u38w0_srtd


==================== Asm code ====================
2018-03-16 15:57:34.53717222 UTC

.section .data.rel.ro
.align 8
.align 1
u38w1_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:34.538081267 UTC

.section .text
.align 8
_c38o6:
_c38o6:
	movl $GHC.Float.$fRealFloatDouble5_closure,%esi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c38o6, .-_c38o6


==================== Asm code ====================
2018-03-16 15:57:34.538817194 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38o6_info:
	.quad	_c38o6
	.quad	0
	.quad	-4294967266
	.quad	u38w1_srtd


==================== Asm code ====================
2018-03-16 15:57:34.539635992 UTC

.section .data.rel.ro
.align 8
.align 1
u38w2_srtd:
	.quad	S2VLN_srt+552
	.quad	68
	.quad	4613938367996887041
	.quad	9


==================== Asm code ====================
2018-03-16 15:57:34.54078566 UTC

.section .text
.align 8
ds2_s2Vhr_entry:
_c38oe:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c38of
_c38og:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c38m9_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c38m9
_c38ma:
	movq (%rbx),%rax
	jmp *(%rax)
_c38of:
	jmp *-16(%r13)
	.size ds2_s2Vhr_entry, .-ds2_s2Vhr_entry


==================== Asm code ====================
2018-03-16 15:57:34.541907552 UTC

.section .data.rel.ro
.align 8
.align 1
ds2_s2Vhr_info:
	.quad	ds2_s2Vhr_entry
	.quad	2
	.quad	-4294967278
	.quad	u38w2_srtd


==================== Asm code ====================
2018-03-16 15:57:34.543571492 UTC

.section .data.rel.ro
.align 8
.align 1
u38w3_srtd:
	.quad	S2VLN_srt+552
	.quad	68
	.quad	4613938367996887041
	.quad	9


==================== Asm code ====================
2018-03-16 15:57:34.544706518 UTC

.section .text
.align 8
_c38m9:
_c38m9:
	movq $block_c38me_info,(%rbp)
	movq 15(%rbx),%rbx
	testb $7,%bl
	jne _c38me
_c38mf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c38m9, .-_c38m9


==================== Asm code ====================
2018-03-16 15:57:34.545698939 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38m9_info:
	.quad	_c38m9
	.quad	1
	.quad	-4294967266
	.quad	u38w3_srtd


==================== Asm code ====================
2018-03-16 15:57:34.546573366 UTC

.section .data.rel.ro
.align 8
.align 1
u38w4_srtd:
	.quad	S2VLN_srt+552
	.quad	68
	.quad	4613938367996887041
	.quad	9


==================== Asm code ====================
2018-03-16 15:57:34.548029257 UTC

.section .text
.align 8
_c38me:
_c38me:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c38ok
_c38oj:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	testq %rbx,%rbx
	jl _c38oC
_c38oD:
	movq $be_s2VhL_info,-16(%r12)
	movq %rbx,(%r12)
	movq $block_c38ny_info,-8(%rbp)
	movl $lvl11_r2UqJ_closure,%esi
	movq %rax,%r14
	leaq -16(%r12),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.eqInteger#_entry
_c38oC:
	cmpq $-1074,%rbx
	jle _c38oq
_c38or:
	addq $-24,%r12
	movq $block_c38mR_info,-8(%rbp)
	movl $lvl11_r2UqJ_closure,%esi
	movq %rax,%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.eqInteger#_entry
_c38oq:
	addq $-24,%r12
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp _c38mp
_c38ok:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c38me, .-_c38me


==================== Asm code ====================
2018-03-16 15:57:34.549425059 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38me_info:
	.quad	_c38me
	.quad	1
	.quad	-4294967266
	.quad	u38w4_srtd


==================== Asm code ====================
2018-03-16 15:57:34.550277608 UTC

.section .data.rel.ro
.align 8
.align 1
u38w5_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4613938367996887041


==================== Asm code ====================
2018-03-16 15:57:34.551638353 UTC

.section .text
.align 8
_c38mR:
_c38mR:
	cmpq $1,%rbx
	je _c38ox
	jmp _c38mp
_c38oA:
	movq $88,904(%r13)
	jmp stg_gc_unbx_r1
_c38ox:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c38oA
_c38oz:
	movq $sat_s2VhK_info,-80(%r12)
	movq 8(%rbp),%rax
	movq %rax,-64(%r12)
	movq $sat_s2VhG_info,-56(%r12)
	movq 16(%rbp),%rax
	movq %rax,-40(%r12)
	movq $(,,,)_con_info,-32(%r12)
	leaq -56(%r12),%rax
	movq %rax,-24(%r12)
	leaq -80(%r12),%rax
	movq %rax,-16(%r12)
	movq $GHC.Float.$fRealFloatDouble5_closure,-8(%r12)
	movq $GHC.Float.$fRealDouble1_closure,(%r12)
	leaq -31(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c38mR, .-_c38mR


==================== Asm code ====================
2018-03-16 15:57:34.552718962 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38mR_info:
	.quad	_c38mR
	.quad	66
	.quad	-4294967266
	.quad	u38w5_srtd


==================== Asm code ====================
2018-03-16 15:57:34.553548101 UTC

.section .data.rel.ro
.align 8
.align 1
u38w6_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4613938367996887041


==================== Asm code ====================
2018-03-16 15:57:34.554813957 UTC

.section .text
.align 8
_c38mp:
_c38mp:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c38oo
_c38on:
	movq $sat_s2VhC_info,-80(%r12)
	movq 8(%rbp),%rax
	movq %rax,-64(%r12)
	movq $sat_s2Vhz_info,-56(%r12)
	movq 16(%rbp),%rax
	movq %rax,-40(%r12)
	movq $(,,,)_con_info,-32(%r12)
	leaq -56(%r12),%rax
	movq %rax,-24(%r12)
	leaq -80(%r12),%rax
	movq %rax,-16(%r12)
	movq $GHC.Float.$fRealDouble1_closure,-8(%r12)
	movq $GHC.Float.$fRealDouble1_closure,(%r12)
	leaq -31(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c38oo:
	movq $88,904(%r13)
	movq $block_c38mp_info,(%rbp)
	jmp stg_gc_noregs
	.size _c38mp, .-_c38mp


==================== Asm code ====================
2018-03-16 15:57:34.556105275 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38mp_info:
	.quad	_c38mp
	.quad	66
	.quad	-4294967266
	.quad	u38w6_srtd


==================== Asm code ====================
2018-03-16 15:57:34.557010882 UTC

.section .data.rel.ro
.align 8
.align 1
u38w7_srtd:
	.quad	S2VLN_srt+552
	.quad	65
	.quad	4611686018427387905
	.quad	1


==================== Asm code ====================
2018-03-16 15:57:34.558739293 UTC

.section .text
.align 8
_c38ny:
_c38ny:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rcx
	cmpq $1,%rbx
	je _c38oL
_c38oG:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c38oJ
_c38oI:
	movq $sat_s2VhO_info,-64(%r12)
	movq %rcx,-48(%r12)
	movq %rax,-40(%r12)
	movq $(,,,)_con_info,-32(%r12)
	leaq -64(%r12),%rbx
	movq %rbx,-24(%r12)
	movq $GHC.Float.$fRealFloatDouble5_closure,-16(%r12)
	movq %rax,-8(%r12)
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c38oO:
	movq $96,904(%r13)
	jmp stg_gc_unbx_r1
_c38oL:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _c38oO
_c38oN:
	movq $sat_s2VhS_info,-88(%r12)
	movq %rax,-72(%r12)
	movq $sat_s2VhR_info,-64(%r12)
	movq %rcx,-48(%r12)
	movq %rax,-40(%r12)
	movq $(,,,)_con_info,-32(%r12)
	leaq -64(%r12),%rbx
	movq %rbx,-24(%r12)
	movq $lvl10_r2UqI_closure,-16(%r12)
	leaq -88(%r12),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c38oJ:
	movq $72,904(%r13)
	jmp stg_gc_unbx_r1
	.size _c38ny, .-_c38ny


==================== Asm code ====================
2018-03-16 15:57:34.560274606 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38ny_info:
	.quad	_c38ny
	.quad	2
	.quad	-4294967266
	.quad	u38w7_srtd


==================== Asm code ====================
2018-03-16 15:57:34.561224635 UTC

.section .data.rel.ro
.align 8
.align 1
u38w8_srtd:
	.quad	S2VLN_srt+688
	.quad	46
	.quad	35201572929793


==================== Asm code ====================
2018-03-16 15:57:34.562592915 UTC

.section .text
.align 8
k_s2Vib_entry:
_c38p3:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _c38p4
_c38p5:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c38p1_info,-64(%rbp)
	movq 64(%rbx),%rsi
	movq 56(%rbx),%r14
	movq 16(%rbx),%rax
	movq %rax,-56(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-48(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 48(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-64,%rbp
	jmp GHC.Integer.Type.plusInteger_entry
_c38p4:
	jmp *-16(%r13)
	.size k_s2Vib_entry, .-k_s2Vib_entry


==================== Asm code ====================
2018-03-16 15:57:34.563812284 UTC

.section .data.rel.ro
.align 8
.align 1
k_s2Vib_info:
	.quad	k_s2Vib_entry
	.quad	7
	.quad	-4294967281
	.quad	u38w8_srtd


==================== Asm code ====================
2018-03-16 15:57:34.564729537 UTC

.section .data.rel.ro
.align 8
.align 1
u38w9_srtd:
	.quad	S2VLN_srt+688
	.quad	46
	.quad	35201572929793


==================== Asm code ====================
2018-03-16 15:57:34.565879974 UTC

.section .text
.align 8
_c38p1:
_c38p1:
	movq $block_c38pa_info,-8(%rbp)
	movl $GHC.Float.expts4_closure,%esi
	movq 8(%rbp),%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.eqInteger#_entry
	.size _c38p1, .-_c38p1


==================== Asm code ====================
2018-03-16 15:57:34.566878898 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38p1_info:
	.quad	_c38p1
	.quad	5
	.quad	-4294967266
	.quad	u38w9_srtd


==================== Asm code ====================
2018-03-16 15:57:34.567787291 UTC

.section .data.rel.ro
.align 8
.align 1
u38wa_srtd:
	.quad	S2VLN_srt+688
	.quad	46
	.quad	35201572929537


==================== Asm code ====================
2018-03-16 15:57:34.56905282 UTC

.section .text
.align 8
_c38pa:
_c38pa:
	cmpq $1,%rbx
	je _c38rt
_c38qJ:
	movq $block_c38qf_info,(%rbp)
	movl $GHC.Float.$fRealDouble1_closure,%esi
	movq 40(%rbp),%r14
	jmp GHC.Integer.Type.plusInteger_entry
_c38rt:
	movq $block_c38rm_info,(%rbp)
	movq 24(%rbp),%rbx
	testb $7,%bl
	jne _c38rm
_c38rn:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c38pa, .-_c38pa


==================== Asm code ====================
2018-03-16 15:57:34.569858366 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38pa_info:
	.quad	_c38pa
	.quad	6
	.quad	-4294967266
	.quad	u38wa_srtd


==================== Asm code ====================
2018-03-16 15:57:34.570542537 UTC

.section .text
.align 8
_c38rm:
_c38rm:
	movq $block_c38rr_info,(%rbp)
	movq 15(%rbx),%rbx
	testb $7,%bl
	jne _c38rr
_c38rv:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c38rm, .-_c38rm


==================== Asm code ====================
2018-03-16 15:57:34.571182401 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38rm_info:
	.quad	_c38rm
	.quad	1798
	.quad	8800387989534
	.quad	S2VLN_srt+960


==================== Asm code ====================
2018-03-16 15:57:34.571989538 UTC

.section .text
.align 8
_c38rr:
_c38rr:
	movq 7(%rbx),%rax
	addq $52,%rax
	testq %rax,%rax
	jl _c38rG
_c38rH:
	movl $28738,%ebx
	imulq $8651,%rax
	cqto
	idivq %rbx
	incq %rax
	movq %rax,40(%rbp)
	addq $8,%rbp
	jmp _c38pd
_c38rG:
	movl $28738,%ebx
	imulq $8651,%rax
	cqto
	idivq %rbx
	movq %rax,40(%rbp)
	addq $8,%rbp
	jmp _c38pd
	.size _c38rr, .-_c38rr


==================== Asm code ====================
2018-03-16 15:57:34.572664951 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38rr_info:
	.quad	_c38rr
	.quad	1798
	.quad	8800387989534
	.quad	S2VLN_srt+960


==================== Asm code ====================
2018-03-16 15:57:34.573348192 UTC

.section .data.rel.ro
.align 8
.align 1
u38wb_srtd:
	.quad	S2VLN_srt+688
	.quad	46
	.quad	35201551958017


==================== Asm code ====================
2018-03-16 15:57:34.574008615 UTC

.section .text
.align 8
_c38qf:
_c38qf:
	movq $block_c38qj_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Integer.Type.floatFromInteger_entry
	.size _c38qf, .-_c38qf


==================== Asm code ====================
2018-03-16 15:57:34.574599237 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38qf_info:
	.quad	_c38qf
	.quad	1286
	.quad	-4294967266
	.quad	u38wb_srtd


==================== Asm code ====================
2018-03-16 15:57:34.575161578 UTC

.section .data.rel.ro
.align 8
.align 1
u38wc_srtd:
	.quad	S2VLN_srt+688
	.quad	46
	.quad	35201551958017


==================== Asm code ====================
2018-03-16 15:57:34.575977076 UTC

.section .text
.align 8
_c38qj:
_c38qj:
	movq 32(%rbp),%rax
	subq $8,%rsp
	movss %xmm1,%xmm0
	movq %rax,%rbx
	movl $1,%eax
	call logf
	addq $8,%rsp
	movq $block_c38qr_info,(%rbp)
	movss %xmm0,40(%rbp)
	testb $7,%bl
	jne _c38qr
_c38qs:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c38qj, .-_c38qj


==================== Asm code ====================
2018-03-16 15:57:34.576632674 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38qj_info:
	.quad	_c38qj
	.quad	1286
	.quad	-4294967266
	.quad	u38wc_srtd


==================== Asm code ====================
2018-03-16 15:57:34.577369989 UTC

.section .data.rel.ro
.align 8
.align 1
u38wd_srtd:
	.quad	S2VLN_srt+688
	.quad	46
	.quad	35201551958017


==================== Asm code ====================
2018-03-16 15:57:34.578416073 UTC

.section .text
.align 8
_c38qr:
_c38qr:
	movq $block_c38qw_info,(%rbp)
	movq 15(%rbx),%rbx
	testb $7,%bl
	jne _c38qw
_c38qx:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c38qr, .-_c38qr


==================== Asm code ====================
2018-03-16 15:57:34.579329218 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38qr_info:
	.quad	_c38qr
	.quad	1798
	.quad	-4294967266
	.quad	u38wd_srtd


==================== Asm code ====================
2018-03-16 15:57:34.580792143 UTC

.section .data.rel.ro
.align 8
.align 1
u38we_srtd:
	.quad	S2VLN_srt+688
	.quad	46
	.quad	35201551958017


==================== Asm code ====================
2018-03-16 15:57:34.581967126 UTC

.section .text
.align 8
_c38qw:
_c38qw:
	movq $block_c38qB_info,(%rbp)
	movq 7(%rbx),%rax
	movl $lvl5_r2UqD_closure,%ebx
	movq %rax,32(%rbp)
	testb $7,%bl
	jne _c38qB
_c38qC:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c38qw, .-_c38qw


==================== Asm code ====================
2018-03-16 15:57:34.582849255 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38qw_info:
	.quad	_c38qw
	.quad	1798
	.quad	-4294967266
	.quad	u38we_srtd


==================== Asm code ====================
2018-03-16 15:57:34.583792849 UTC

.section .text
.align 8
_c38qB:
_c38qB:
	movq $block_c38qG_info,(%rbp)
	movq 16(%rbp),%r14
	movss 7(%rbx),%xmm0
	movss %xmm0,24(%rbp)
	jmp GHC.Integer.Type.floatFromInteger_entry
	.size _c38qB, .-_c38qB


==================== Asm code ====================
2018-03-16 15:57:34.584634755 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38qB_info:
	.quad	_c38qB
	.quad	1798
	.quad	8800387989534
	.quad	S2VLN_srt+960


==================== Asm code ====================
2018-03-16 15:57:34.58591784 UTC

.section .text
.align 8
_c38qG:
_c38qG:
	movss 40(%rbp),%xmm0
	movq 32(%rbp),%rax
	movss 24(%rbp),%xmm2
	subq $8,%rsp
	movsd %xmm0,%xmm3
	movss %xmm1,%xmm0
	movq %rax,%rbx
	movl $1,%eax
	movsd %xmm3,72(%rsp)
	movsd %xmm2,80(%rsp)
	call logf
	addq $8,%rsp
	cvtsi2ssq %rbx,%xmm1
	movsd 72(%rsp),%xmm2
	mulss %xmm2,%xmm1
	movsd 64(%rsp),%xmm2
	addss %xmm1,%xmm2
	divss %xmm0,%xmm2
	cvttss2siq %xmm2,%rax
	cvtsi2ssq %rax,%xmm0
	ucomiss %xmm2,%xmm0
	jp _c38ri
	jb _c38rj
_c38ri:
	movq %rax,40(%rbp)
	addq $8,%rbp
	jmp _c38pd
_c38rj:
	incq %rax
	movq %rax,40(%rbp)
	addq $8,%rbp
	jmp _c38pd
	.size _c38qG, .-_c38qG


==================== Asm code ====================
2018-03-16 15:57:34.586885499 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38qG_info:
	.quad	_c38qG
	.quad	1798
	.quad	8800387989534
	.quad	S2VLN_srt+960


==================== Asm code ====================
2018-03-16 15:57:34.587895598 UTC

.section .text
.align 8
_c38pd:
_c38pd:
	movq 8(%rbp),%rax
	movq 32(%rbp),%rbx
	testq %rbx,%rbx
	jl _c38ps
_c38pS:
	movq $block_c38pN_info,-8(%rbp)
	movq %rbx,%rsi
	movq %rax,%r14
	addq $-8,%rbp
	jmp GHC.Float.$wexpt_entry
_c38ps:
	movq $block_c38pm_info,-8(%rbp)
	movq %rbx,%rsi
	negq %rsi
	movq %rax,%r14
	addq $-8,%rbp
	jmp GHC.Float.$wexpt_entry
	.size _c38pd, .-_c38pd


==================== Asm code ====================
2018-03-16 15:57:34.588879552 UTC

.section .text
.align 8
_c38pm:
_c38pm:
	movq $block_c38pq_info,(%rbp)
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c38pm, .-_c38pm


==================== Asm code ====================
2018-03-16 15:57:34.589713581 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38pm_info:
	.quad	_c38pm
	.quad	1798
	.quad	8800387989534
	.quad	S2VLN_srt+960


==================== Asm code ====================
2018-03-16 15:57:34.590580926 UTC

.section .text
.align 8
_c38pq:
_c38pq:
	movq $block_c38px_info,(%rbp)
	movq 48(%rbp),%rsi
	movq %rbx,%r14
	jmp GHC.Integer.Type.leInteger#_entry
	.size _c38pq, .-_c38pq


==================== Asm code ====================
2018-03-16 15:57:34.59141754 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38pq_info:
	.quad	_c38pq
	.quad	1798
	.quad	8800387989534
	.quad	S2VLN_srt+960


==================== Asm code ====================
2018-03-16 15:57:34.592528821 UTC

.section .text
.align 8
_c38px:
_c38px:
	movq 40(%rbp),%rax
	cmpq $1,%rbx
	je _c38pI
_c38pE:
	incq %rax
	movq %rax,40(%rbp)
	addq $8,%rbp
	jmp _c38pd
_c38pL:
	movq $16,904(%r13)
	jmp stg_gc_unbx_r1
_c38pI:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c38pL
_c38pK:
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $56,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c38px, .-_c38px


==================== Asm code ====================
2018-03-16 15:57:34.593579366 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38px_info:
	.quad	_c38px
	.quad	1798
	.quad	8800387989534
	.quad	S2VLN_srt+960


==================== Asm code ====================
2018-03-16 15:57:34.594259403 UTC

.section .text
.align 8
_c38pN:
_c38pN:
	movq $block_c38pR_info,(%rbp)
	movq 48(%rbp),%rsi
	movq %rbx,%r14
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c38pN, .-_c38pN


==================== Asm code ====================
2018-03-16 15:57:34.594871247 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38pN_info:
	.quad	_c38pN
	.quad	1798
	.quad	8800387989534
	.quad	S2VLN_srt+960


==================== Asm code ====================
2018-03-16 15:57:34.595542457 UTC

.section .text
.align 8
_c38pR:
_c38pR:
	movq $block_c38pX_info,(%rbp)
	movq %rbx,%rsi
	movq 8(%rbp),%r14
	jmp GHC.Integer.Type.leInteger#_entry
	.size _c38pR, .-_c38pR


==================== Asm code ====================
2018-03-16 15:57:34.596156607 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38pR_info:
	.quad	_c38pR
	.quad	1798
	.quad	8800387989534
	.quad	S2VLN_srt+960


==================== Asm code ====================
2018-03-16 15:57:34.596929974 UTC

.section .text
.align 8
_c38pX:
_c38pX:
	movq 40(%rbp),%rax
	cmpq $1,%rbx
	je _c38q8
_c38q4:
	incq %rax
	movq %rax,40(%rbp)
	addq $8,%rbp
	jmp _c38pd
_c38qb:
	movq $16,904(%r13)
	jmp stg_gc_unbx_r1
_c38q8:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c38qb
_c38qa:
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $56,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c38pX, .-_c38pX


==================== Asm code ====================
2018-03-16 15:57:34.597720249 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38pX_info:
	.quad	_c38pX
	.quad	1798
	.quad	8800387989534
	.quad	S2VLN_srt+960


==================== Asm code ====================
2018-03-16 15:57:34.598492477 UTC

.section .text
.align 8
sat_s2Vjg_entry:
_c38t7:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c38t8
_c38t9:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movl $GHC.Float.$fRealDouble1_closure,%esi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Integer.Type.plusInteger_entry
_c38t8:
	jmp *-16(%r13)
	.size sat_s2Vjg_entry, .-sat_s2Vjg_entry


==================== Asm code ====================
2018-03-16 15:57:34.599142315 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Vjg_info:
	.quad	sat_s2Vjg_entry
	.quad	1
	.quad	21474836496
	.quad	S2VLN_srt+864


==================== Asm code ====================
2018-03-16 15:57:34.599849702 UTC

.section .text
.align 8
sat_s2Vjk_entry:
_c38tr:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c38ts
_c38tt:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movl $GHC.Float.$fRealDouble1_closure,%esi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Integer.Type.plusInteger_entry
_c38ts:
	jmp *-16(%r13)
	.size sat_s2Vjk_entry, .-sat_s2Vjk_entry


==================== Asm code ====================
2018-03-16 15:57:34.600478504 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Vjk_info:
	.quad	sat_s2Vjk_entry
	.quad	1
	.quad	21474836496
	.quad	S2VLN_srt+864


==================== Asm code ====================
2018-03-16 15:57:34.601026066 UTC

.section .data.rel.ro
.align 8
.align 1
u38wf_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611689901077823489


==================== Asm code ====================
2018-03-16 15:57:34.601844135 UTC

.section .text
.align 8
gen_s2ViY_entry:
_c38tx:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _c38ty
_u38uf:
	movq %rbx,-48(%rbp)
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-48,%rbp
	jmp _c38ss
_c38ty:
	jmp *-8(%r13)
	.size gen_s2ViY_entry, .-gen_s2ViY_entry


==================== Asm code ====================
2018-03-16 15:57:34.602455095 UTC

.section .data.rel.ro
.align 8
.align 1
gen_s2ViY_info:
	.quad	gen_s2ViY_entry
	.quad	1
	.quad	-4294967287
	.quad	21474836505
	.quad	u38wf_srtd


==================== Asm code ====================
2018-03-16 15:57:34.603190361 UTC

.section .text
.align 8
_c38ss:
_c38ss:
	movq (%rbp),%rax
	movq 3(%rax),%rax
	movq $block_c38sv_info,-16(%rbp)
	movl $GHC.Float.rationalToDouble5_closure,%esi
	movq 24(%rbp),%r14
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Integer.Type.eqInteger#_entry
	.size _c38ss, .-_c38ss


==================== Asm code ====================
2018-03-16 15:57:34.603804459 UTC

.section .data.rel.ro
.align 8
.align 1
u38wg_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611689901077823489


==================== Asm code ====================
2018-03-16 15:57:34.604515092 UTC

.section .text
.align 8
_c38sv:
_c38sv:
	cmpq $1,%rbx
	je _c38tw
_c38tv:
	movq $block_c38sz_info,(%rbp)
	movq 8(%rbp),%rsi
	movq 32(%rbp),%r14
	jmp GHC.Integer.Type.timesInteger_entry
_c38tw:
	movl $GHC.Real.divZeroError_closure,%ebx
	addq $64,%rbp
	jmp stg_ap_0_fast
	.size _c38sv, .-_c38sv


==================== Asm code ====================
2018-03-16 15:57:34.605159163 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38sv_info:
	.quad	_c38sv
	.quad	7
	.quad	-4294967266
	.quad	u38wg_srtd


==================== Asm code ====================
2018-03-16 15:57:34.60580784 UTC

.section .data.rel.ro
.align 8
.align 1
u38wh_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611689901077823489


==================== Asm code ====================
2018-03-16 15:57:34.606427542 UTC

.section .text
.align 8
_c38sz:
_c38sz:
	movq $block_c38sD_info,(%rbp)
	movq 40(%rbp),%rsi
	movq %rbx,%r14
	jmp GHC.Integer.Type.quotRemInteger_entry
	.size _c38sz, .-_c38sz


==================== Asm code ====================
2018-03-16 15:57:34.607076524 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38sz_info:
	.quad	_c38sz
	.quad	519
	.quad	-4294967266
	.quad	u38wh_srtd


==================== Asm code ====================
2018-03-16 15:57:34.60766893 UTC

.section .data.rel.ro
.align 8
.align 1
u38wi_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611689901077823489


==================== Asm code ====================
2018-03-16 15:57:34.608347932 UTC

.section .text
.align 8
_c38sD:
_c38sD:
	movq $block_c38sF_info,(%rbp)
	movq 8(%rbp),%rsi
	movq %r14,%rax
	movq 48(%rbp),%r14
	movq %rax,32(%rbp)
	movq %rbx,48(%rbp)
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c38sD, .-_c38sD


==================== Asm code ====================
2018-03-16 15:57:34.608989197 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38sD_info:
	.quad	_c38sD
	.quad	519
	.quad	-4294967266
	.quad	u38wi_srtd


==================== Asm code ====================
2018-03-16 15:57:34.609800331 UTC

.section .data.rel.ro
.align 8
.align 1
u38wj_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611689901077823489


==================== Asm code ====================
2018-03-16 15:57:34.611024506 UTC

.section .text
.align 8
_c38sF:
_c38sF:
	movq $block_c38sJ_info,-8(%rbp)
	movq %rbx,%rsi
	movq 32(%rbp),%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.plusInteger_entry
	.size _c38sF, .-_c38sF


==================== Asm code ====================
2018-03-16 15:57:34.611673307 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38sF_info:
	.quad	_c38sF
	.quad	7
	.quad	-4294967266
	.quad	u38wj_srtd


==================== Asm code ====================
2018-03-16 15:57:34.612291002 UTC

.section .data.rel.ro
.align 8
.align 1
u38wk_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611689901077823489


==================== Asm code ====================
2018-03-16 15:57:34.61295363 UTC

.section .text
.align 8
_c38sJ:
_c38sJ:
	movq $block_c38sN_info,(%rbp)
	movq 48(%rbp),%rsi
	movq %rbx,%r14
	jmp GHC.Integer.Type.gtInteger#_entry
	.size _c38sJ, .-_c38sJ


==================== Asm code ====================
2018-03-16 15:57:34.613552876 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38sJ_info:
	.quad	_c38sJ
	.quad	8
	.quad	-4294967266
	.quad	u38wk_srtd


==================== Asm code ====================
2018-03-16 15:57:34.614106377 UTC

.section .data.rel.ro
.align 8
.align 1
u38wl_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611689901077823489


==================== Asm code ====================
2018-03-16 15:57:34.614729326 UTC

.section .text
.align 8
_c38sN:
_c38sN:
	movq $block_c38sR_info,(%rbp)
	movq 16(%rbp),%rsi
	movq 64(%rbp),%r14
	movq %rbx,64(%rbp)
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c38sN, .-_c38sN


==================== Asm code ====================
2018-03-16 15:57:34.615370495 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38sN_info:
	.quad	_c38sN
	.quad	8
	.quad	-4294967266
	.quad	u38wl_srtd


==================== Asm code ====================
2018-03-16 15:57:34.615884568 UTC

.section .data.rel.ro
.align 8
.align 1
u38wm_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611689901077823489


==================== Asm code ====================
2018-03-16 15:57:34.616504376 UTC

.section .text
.align 8
_c38sR:
_c38sR:
	movq $block_c38sV_info,(%rbp)
	movq %rbx,%rsi
	movq 40(%rbp),%r14
	movq %rbx,16(%rbp)
	jmp GHC.Integer.Type.ltInteger#_entry
	.size _c38sR, .-_c38sR


==================== Asm code ====================
2018-03-16 15:57:34.617118342 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38sR_info:
	.quad	_c38sR
	.quad	8328
	.quad	-4294967266
	.quad	u38wm_srtd


==================== Asm code ====================
2018-03-16 15:57:34.617745901 UTC

.section .data.rel.ro
.align 8
.align 1
u38wn_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611689901077823489


==================== Asm code ====================
2018-03-16 15:57:34.618825684 UTC

.section .text
.align 8
_c38sV:
_c38sV:
	movq 32(%rbp),%rax
	movq 56(%rbp),%rcx
	movq 40(%rbp),%rdx
	movq 64(%rbp),%rsi
	cmpq $1,%rbx
	je _c38tQ
_c38tI:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c38tL
_c38tK:
	cmpq $1,%rsi
	je _c38tP
_c38tN:
	movq $:_con_info,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rax,-24(%r12)
	leaq -38(%r12),%rax
	addq $-24,%r12
	movq %rax,32(%rbp)
	movq %rdx,40(%rbp)
	movq 48(%rbp),%rax
	movq %rax,48(%rbp)
	movq 8(%rbp),%rax
	movq %rax,56(%rbp)
	movq 16(%rbp),%rax
	movq %rax,64(%rbp)
	addq $24,%rbp
	jmp _c38ss
_c38tX:
	addq $-24,%r12
	movq $block_c38tf_info,24(%rbp)
	movl $GHC.Float.$fRealFloatDouble5_closure,%esi
	movq %rdx,%r14
	addq $24,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
_c38tQ:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c38tT
_c38tS:
	cmpq $1,%rsi
	je _c38tX
_c38tW:
	movq $:_con_info,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $72,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c38tT:
	movq $24,904(%r13)
	jmp stg_gc_unbx_r1
_c38tP:
	movq $sat_s2Vjg_info,-40(%r12)
	movq %rcx,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -40(%r12),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $72,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c38tL:
	movq $48,904(%r13)
	jmp stg_gc_unbx_r1
	.size _c38sV, .-_c38sV


==================== Asm code ====================
2018-03-16 15:57:34.619748321 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38sV_info:
	.quad	_c38sV
	.quad	8200
	.quad	-4294967266
	.quad	u38wn_srtd


==================== Asm code ====================
2018-03-16 15:57:34.620416597 UTC

.section .text
.align 8
_c38tf:
_c38tf:
	movq $block_c38tj_info,(%rbp)
	movq 24(%rbp),%rsi
	movq %rbx,%r14
	jmp GHC.Integer.Type.ltInteger#_entry
	.size _c38tf, .-_c38tf


==================== Asm code ====================
2018-03-16 15:57:34.621010877 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38tf_info:
	.quad	_c38tf
	.quad	1157
	.quad	21474836510
	.quad	S2VLN_srt+864


==================== Asm code ====================
2018-03-16 15:57:34.621890393 UTC

.section .text
.align 8
_c38tj:
_c38tj:
	movq 8(%rbp),%rax
	movq 32(%rbp),%rcx
	cmpq $1,%rbx
	je _c38u8
_c38u1:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c38u4
_c38u3:
	movq $sat_s2Vjk_info,-40(%r12)
	movq %rcx,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -40(%r12),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c38ub:
	movq $24,904(%r13)
	jmp stg_gc_unbx_r1
_c38u8:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c38ub
_c38ua:
	movq $:_con_info,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c38u4:
	movq $48,904(%r13)
	jmp stg_gc_unbx_r1
	.size _c38tj, .-_c38tj


==================== Asm code ====================
2018-03-16 15:57:34.622631506 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38tj_info:
	.quad	_c38tj
	.quad	1413
	.quad	21474836510
	.quad	S2VLN_srt+864


==================== Asm code ====================
2018-03-16 15:57:34.623274488 UTC

.section .data.rel.ro
.align 8
.align 1
u38wo_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4613941700891508737


==================== Asm code ====================
2018-03-16 15:57:34.62410788 UTC

.section .text
.align 8
sat_s2VjI_entry:
_c38uj:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _c38uk
_c38ul:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c38sl_info,-64(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%rbx
	movq %rax,-56(%rbp)
	movq %rcx,-48(%rbp)
	movq %rdx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	addq $-64,%rbp
	testb $7,%bl
	jne _c38sl
_c38sm:
	movq (%rbx),%rax
	jmp *(%rax)
_c38uk:
	jmp *-16(%r13)
	.size sat_s2VjI_entry, .-sat_s2VjI_entry


==================== Asm code ====================
2018-03-16 15:57:34.624835041 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2VjI_info:
	.quad	sat_s2VjI_entry
	.quad	6
	.quad	-4294967281
	.quad	u38wo_srtd


==================== Asm code ====================
2018-03-16 15:57:34.625510586 UTC

.section .data.rel.ro
.align 8
.align 1
u38wp_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4613941700891508737


==================== Asm code ====================
2018-03-16 15:57:34.626403891 UTC

.section .text
.align 8
_c38sl:
_c38sl:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c38uo
_c38un:
	movq 7(%rbx),%rax
	movq $gen_s2ViY_info,-8(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,(%r12)
	movq 16(%rbp),%rbx
	leaq -3(%r12),%rcx
	testq %rax,%rax
	jl _c38uW
_c38vq:
	movq $block_c38v8_info,-8(%rbp)
	movq %rax,(%rbp)
	movq %rcx,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c38v8
_c38v9:
	movq (%rbx),%rax
	jmp *(%rax)
_c38uW:
	movq $block_c38us_info,-8(%rbp)
	movq %rax,(%rbp)
	movq %rcx,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c38us
_c38ut:
	movq (%rbx),%rax
	jmp *(%rax)
_c38uo:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c38sl, .-_c38sl


==================== Asm code ====================
2018-03-16 15:57:34.627186756 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38sl_info:
	.quad	_c38sl
	.quad	5
	.quad	-4294967266
	.quad	u38wp_srtd


==================== Asm code ====================
2018-03-16 15:57:34.627795485 UTC

.section .data.rel.ro
.align 8
.align 1
u38wq_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4613941700891508737


==================== Asm code ====================
2018-03-16 15:57:34.628502114 UTC

.section .text
.align 8
_c38us:
_c38us:
	movq 8(%rbp),%rax
	negq %rax
	movq $block_c38uA_info,8(%rbp)
	movq %rax,%rsi
	movq 16(%rbp),%r14
	movq 31(%rbx),%rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp GHC.Float.$wexpt_entry
	.size _c38us, .-_c38us


==================== Asm code ====================
2018-03-16 15:57:34.629166646 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38us_info:
	.quad	_c38us
	.quad	70
	.quad	-4294967266
	.quad	u38wq_srtd


==================== Asm code ====================
2018-03-16 15:57:34.630206614 UTC

.section .data.rel.ro
.align 8
.align 1
u38wr_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611689901077823489


==================== Asm code ====================
2018-03-16 15:57:34.630834108 UTC

.section .text
.align 8
_c38uA:
_c38uA:
	movq $block_c38uE_info,(%rbp)
	movq %rbx,%rsi
	movq 8(%rbp),%r14
	movq %rbx,8(%rbp)
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c38uA, .-_c38uA


==================== Asm code ====================
2018-03-16 15:57:34.631415057 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38uA_info:
	.quad	_c38uA
	.quad	5
	.quad	-4294967266
	.quad	u38wr_srtd


==================== Asm code ====================
2018-03-16 15:57:34.631983946 UTC

.section .data.rel.ro
.align 8
.align 1
u38ws_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611689901077823489


==================== Asm code ====================
2018-03-16 15:57:34.632647661 UTC

.section .text
.align 8
_c38uE:
_c38uE:
	movq $block_c38uI_info,(%rbp)
	movq 8(%rbp),%rsi
	movq 40(%rbp),%r14
	movq %rbx,40(%rbp)
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c38uE, .-_c38uE


==================== Asm code ====================
2018-03-16 15:57:34.633296073 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38uE_info:
	.quad	_c38uE
	.quad	5
	.quad	-4294967266
	.quad	u38ws_srtd


==================== Asm code ====================
2018-03-16 15:57:34.633912891 UTC

.section .data.rel.ro
.align 8
.align 1
u38wt_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611689901077823489


==================== Asm code ====================
2018-03-16 15:57:34.634579473 UTC

.section .text
.align 8
_c38uI:
_c38uI:
	movq 8(%rbp),%rax
	movq $block_c38uM_info,8(%rbp)
	movq %rax,%rsi
	movq 32(%rbp),%r14
	movq %rbx,32(%rbp)
	addq $8,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c38uI, .-_c38uI


==================== Asm code ====================
2018-03-16 15:57:34.63525462 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38uI_info:
	.quad	_c38uI
	.quad	5
	.quad	-4294967266
	.quad	u38wt_srtd


==================== Asm code ====================
2018-03-16 15:57:34.635854548 UTC

.section .data.rel.ro
.align 8
.align 1
u38wu_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611689901077823489


==================== Asm code ====================
2018-03-16 15:57:34.636629171 UTC

.section .text
.align 8
_c38uM:
_c38uM:
	movq 32(%rbp),%rax
	movq $block_c38uQ_info,32(%rbp)
	movq %rax,%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq %rbx,%rsi
	movl $GHC.Types.[]_closure+1,%r14d
	movq 8(%rbp),%rbx
	addq $32,%rbp
	jmp gen_s2ViY_entry
	.size _c38uM, .-_c38uM


==================== Asm code ====================
2018-03-16 15:57:34.637951278 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38uM_info:
	.quad	_c38uM
	.quad	4
	.quad	-4294967266
	.quad	u38wu_srtd


==================== Asm code ====================
2018-03-16 15:57:34.63869153 UTC

.section .text
.align 8
_c38uQ:
_c38uQ:
	movq $block_c38uU_info,(%rbp)
	movl $GHC.Types.[]_closure+1,%esi
	movq %rbx,%r14
	jmp GHC.List.reverse1_entry
	.size _c38uQ, .-_c38uQ


==================== Asm code ====================
2018-03-16 15:57:34.639267635 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38uQ_info:
	.quad	_c38uQ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:34.639937535 UTC

.section .text
.align 8
_c38uU:
_c38uU:
	movq %rbx,%rsi
	movl $lvl8_r2UqG_closure+1,%r14d
	addq $8,%rbp
	jmp GHC.Base.map_entry
	.size _c38uU, .-_c38uU


==================== Asm code ====================
2018-03-16 15:57:34.640557521 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38uU_info:
	.quad	_c38uU
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:34.641156284 UTC

.section .data.rel.ro
.align 8
.align 1
u38wv_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4613941700891508737


==================== Asm code ====================
2018-03-16 15:57:34.64190467 UTC

.section .text
.align 8
_c38v8:
_c38v8:
	movq 8(%rbp),%rax
	movq $block_c38vd_info,8(%rbp)
	movq %rax,%rsi
	movq 16(%rbp),%r14
	movq 31(%rbx),%rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp GHC.Float.$wexpt_entry
	.size _c38v8, .-_c38v8


==================== Asm code ====================
2018-03-16 15:57:34.642585011 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38v8_info:
	.quad	_c38v8
	.quad	70
	.quad	-4294967266
	.quad	u38wv_srtd


==================== Asm code ====================
2018-03-16 15:57:34.643167632 UTC

.section .data.rel.ro
.align 8
.align 1
u38ww_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611689901077823489


==================== Asm code ====================
2018-03-16 15:57:34.643805557 UTC

.section .text
.align 8
_c38vd:
_c38vd:
	movq $block_c38vh_info,(%rbp)
	movq %rbx,%rsi
	movq 24(%rbp),%r14
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c38vd, .-_c38vd


==================== Asm code ====================
2018-03-16 15:57:34.644418362 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38vd_info:
	.quad	_c38vd
	.quad	5
	.quad	-4294967266
	.quad	u38ww_srtd


==================== Asm code ====================
2018-03-16 15:57:34.644991576 UTC

.section .data.rel.ro
.align 8
.align 1
u38wx_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611689901077823489


==================== Asm code ====================
2018-03-16 15:57:34.645740578 UTC

.section .text
.align 8
_c38vh:
_c38vh:
	movq 40(%rbp),%rax
	movq $block_c38vl_info,40(%rbp)
	movq 8(%rbp),%r9
	movq %rax,%r8
	movq %rbx,%rdi
	movq 32(%rbp),%rsi
	movl $GHC.Types.[]_closure+1,%r14d
	movq 16(%rbp),%rbx
	addq $40,%rbp
	jmp gen_s2ViY_entry
	.size _c38vh, .-_c38vh


==================== Asm code ====================
2018-03-16 15:57:34.646384229 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38vh_info:
	.quad	_c38vh
	.quad	261
	.quad	-4294967266
	.quad	u38wx_srtd


==================== Asm code ====================
2018-03-16 15:57:34.647038381 UTC

.section .text
.align 8
_c38vl:
_c38vl:
	movq $block_c38vp_info,(%rbp)
	movl $GHC.Types.[]_closure+1,%esi
	movq %rbx,%r14
	jmp GHC.List.reverse1_entry
	.size _c38vl, .-_c38vl


==================== Asm code ====================
2018-03-16 15:57:34.647643898 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38vl_info:
	.quad	_c38vl
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:34.648258204 UTC

.section .text
.align 8
_c38vp:
_c38vp:
	movq %rbx,%rsi
	movl $lvl8_r2UqG_closure+1,%r14d
	addq $8,%rbp
	jmp GHC.Base.map_entry
	.size _c38vp, .-_c38vp


==================== Asm code ====================
2018-03-16 15:57:34.648837176 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38vp_info:
	.quad	_c38vp
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:34.649475969 UTC

.section .data.rel.ro
.align 8
.align 1
u38wy_srtd:
	.quad	S2VLN_srt+552
	.quad	69
	.quad	4613941700925194241
	.quad	29


==================== Asm code ====================
2018-03-16 15:57:34.650523273 UTC

.section .text
.align 8
.globl GHC.Float.$w$sfloatToDigits_entry
.type GHC.Float.$w$sfloatToDigits_entry, @object
GHC.Float.$w$sfloatToDigits_entry:
_c38vF:
	addq $312,%r12
	cmpq 856(%r13),%r12
	ja _c38vJ
_c38vI:
	xorpd %xmm0,%xmm0
	ucomisd %xmm0,%xmm1
	jp _c38vD
	je _c38vE
_c38vD:
	movq $ds_s2Vh5_info,-304(%r12)
	movsd %xmm1,-288(%r12)
	movq $ds1_s2Vha_info,-280(%r12)
	leaq -304(%r12),%rax
	movq %rax,-264(%r12)
	movq $stg_sel_0_upd_info,-256(%r12)
	leaq -280(%r12),%rbx
	movq %rbx,-240(%r12)
	movq $ds2_s2Vhr_info,-232(%r12)
	movq %rbx,-216(%r12)
	leaq -256(%r12),%rcx
	movq %rcx,-208(%r12)
	movq $stg_sel_1_upd_info,-200(%r12)
	leaq -232(%r12),%rdx
	movq %rdx,-184(%r12)
	movq $stg_sel_0_upd_info,-176(%r12)
	movq %rdx,-160(%r12)
	movq $stg_sel_2_upd_info,-152(%r12)
	movq %rdx,-136(%r12)
	movq $k_s2Vib_info,-128(%r12)
	movq %r14,-112(%r12)
	movq %rax,-104(%r12)
	movq %rbx,-96(%r12)
	movq %rcx,-88(%r12)
	leaq -200(%r12),%rax
	movq %rax,-80(%r12)
	leaq -176(%r12),%rbx
	movq %rbx,-72(%r12)
	leaq -152(%r12),%rcx
	movq %rcx,-64(%r12)
	movq $sat_s2VjI_info,-56(%r12)
	movq %r14,-40(%r12)
	movq %rdx,-32(%r12)
	movq %rax,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	leaq -128(%r12),%rax
	movq %rax,(%r12)
	movq %rax,%r14
	leaq -56(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c38vJ:
	movq $312,904(%r13)
	movl $GHC.Float.$w$sfloatToDigits_closure,%ebx
	movq %r14,-16(%rbp)
	movsd %xmm1,-8(%rbp)
	addq $-16,%rbp
	jmp *-8(%r13)
_c38vE:
	addq $-312,%r12
	movl $GHC.Float.minExpt_closure+1,%r14d
	movl $lvl3_r2UpB_closure+2,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Float.$w$sfloatToDigits_entry, .-GHC.Float.$w$sfloatToDigits_entry


==================== Asm code ====================
2018-03-16 15:57:34.651523135 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$w$sfloatToDigits_info
.type GHC.Float.$w$sfloatToDigits_info, @object
GHC.Float.$w$sfloatToDigits_info:
	.quad	GHC.Float.$w$sfloatToDigits_entry
	.quad	0
	.quad	-4294967282
	.quad	8589934592
	.quad	u38wy_srtd
	.quad	130
	.quad	GHC.Float.$w$sfloatToDigits_slow


==================== Asm code ====================
2018-03-16 15:57:34.719660514 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$wfloatToDigits_closure
.type GHC.Float.$wfloatToDigits_closure, @object
GHC.Float.$wfloatToDigits_closure:
	.quad	GHC.Float.$wfloatToDigits_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:34.720655052 UTC

.section .text
.align 8
sat_s2VjR_entry:
_c38D0:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c38D1
_c38D2:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c38CY_info,-24(%rbp)
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp GHC.Real.$p1Real_entry
_c38D1:
	jmp *-16(%r13)
	.size sat_s2VjR_entry, .-sat_s2VjR_entry


==================== Asm code ====================
2018-03-16 15:57:34.721443741 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2VjR_info:
	.quad	sat_s2VjR_entry
	.quad	1
	.quad	4294967312
	.quad	S2VLN_srt+1104


==================== Asm code ====================
2018-03-16 15:57:34.722143752 UTC

.section .text
.align 8
_c38CY:
_c38CY:
	movq %rbx,%r14
	movq $stg_ap_p_info,-8(%rbp)
	movq $GHC.Float.rationalToDouble5_closure,(%rbp)
	addq $-8,%rbp
	jmp GHC.Num.fromInteger_entry
	.size _c38CY, .-_c38CY


==================== Asm code ====================
2018-03-16 15:57:34.722745087 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38CY_info:
	.quad	_c38CY
	.quad	0
	.quad	4294967326
	.quad	S2VLN_srt+1104


==================== Asm code ====================
2018-03-16 15:57:34.723522202 UTC

.section .text
.align 8
b_s2VjT_entry:
_c38Dm:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c38Dn
_c38Do:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Float.floatRadix_entry
_c38Dn:
	jmp *-16(%r13)
	.size b_s2VjT_entry, .-b_s2VjT_entry


==================== Asm code ====================
2018-03-16 15:57:34.724232707 UTC

.section .data.rel.ro
.align 8
.align 1
b_s2VjT_info:
	.quad	b_s2VjT_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:34.724970616 UTC

.section .text
.align 8
p_s2VjU_entry:
_c38Dt:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c38Du
_c38Dv:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Float.floatDigits_entry
_c38Du:
	jmp *-16(%r13)
	.size p_s2VjU_entry, .-p_s2VjU_entry


==================== Asm code ====================
2018-03-16 15:57:34.725734889 UTC

.section .data.rel.ro
.align 8
.align 1
p_s2VjU_info:
	.quad	p_s2VjU_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:34.727088974 UTC

.section .text
.align 8
minExp_s2VjV_entry:
_c38DC:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c38DT
_c38DU:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c38DA_info,-32(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp GHC.Float.floatRange_entry
_c38DT:
	jmp *-16(%r13)
	.size minExp_s2VjV_entry, .-minExp_s2VjV_entry


==================== Asm code ====================
2018-03-16 15:57:34.727799254 UTC

.section .data.rel.ro
.align 8
.align 1
minExp_s2VjV_info:
	.quad	minExp_s2VjV_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:57:34.728461002 UTC

.section .text
.align 8
_c38DA:
_c38DA:
	movq $block_c38DF_info,(%rbp)
	movq 7(%rbx),%rbx
	testb $7,%bl
	jne _c38DF
_c38DG:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c38DA, .-_c38DA


==================== Asm code ====================
2018-03-16 15:57:34.729039511 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38DA_info:
	.quad	_c38DA
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:34.729824472 UTC

.section .text
.align 8
_c38DF:
_c38DF:
	movq $block_c38DK_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c38DK
_c38DL:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c38DF, .-_c38DF


==================== Asm code ====================
2018-03-16 15:57:34.730444981 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38DF_info:
	.quad	_c38DF
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:34.73117088 UTC

.section .text
.align 8
_c38DK:
_c38DK:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c38DZ
_c38DY:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	subq (%rax),%rbx
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c38DZ:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c38DK, .-_c38DK


==================== Asm code ====================
2018-03-16 15:57:34.731789329 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38DK_info:
	.quad	_c38DK
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:34.732498646 UTC

.section .text
.align 8
ds_s2Vk4_entry:
_c38E6:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c38E7
_c38E8:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Float.decodeFloat_entry
_c38E7:
	jmp *-16(%r13)
	.size ds_s2Vk4_entry, .-ds_s2Vk4_entry


==================== Asm code ====================
2018-03-16 15:57:34.733210041 UTC

.section .data.rel.ro
.align 8
.align 1
ds_s2Vk4_info:
	.quad	ds_s2Vk4_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:34.734012729 UTC

.section .text
.align 8
sat_s2Vkh_entry:
_c38EJ:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c38EK
_c38EL:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c38EH_info,-32(%rbp)
	movq 32(%rbx),%rsi
	movq 16(%rbx),%r14
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Float.$wexpt_entry
_c38EK:
	jmp *-16(%r13)
	.size sat_s2Vkh_entry, .-sat_s2Vkh_entry


==================== Asm code ====================
2018-03-16 15:57:34.734717253 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Vkh_info:
	.quad	sat_s2Vkh_entry
	.quad	4294967298
	.quad	2305851809601683471
	.quad	S2VLN_srt+872


==================== Asm code ====================
2018-03-16 15:57:34.735456796 UTC

.section .text
.align 8
_c38EH:
_c38EH:
	movq $block_c38EO_info,-8(%rbp)
	movl $GHC.Float.rationalToDouble5_closure,%esi
	movq %rbx,%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.eqInteger#_entry
	.size _c38EH, .-_c38EH


==================== Asm code ====================
2018-03-16 15:57:34.736064218 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38EH_info:
	.quad	_c38EH
	.quad	1
	.quad	2305843013508661278
	.quad	S2VLN_srt+872


==================== Asm code ====================
2018-03-16 15:57:34.736767372 UTC

.section .text
.align 8
_c38EO:
_c38EO:
	cmpq $1,%rbx
	je _c38EZ
_c38EV:
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Integer.Type.quotInteger_entry
_c38EZ:
	movl $GHC.Real.divZeroError_closure,%ebx
	addq $24,%rbp
	jmp stg_ap_0_fast
	.size _c38EO, .-_c38EO


==================== Asm code ====================
2018-03-16 15:57:34.737498435 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38EO_info:
	.quad	_c38EO
	.quad	2
	.quad	4294967326
	.quad	S2VLN_srt+872


==================== Asm code ====================
2018-03-16 15:57:34.738274052 UTC

.section .text
.align 8
ds1_s2Vk5_entry:
_c38F0:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _c38F1
_c38F2:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c38Ed_info,-40(%rbp)
	movq 16(%rbx),%rax
	movq 32(%rbx),%rcx
	movq 24(%rbx),%rbx
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _c38Ed
_c38Ee:
	movq (%rbx),%rax
	jmp *(%rax)
_c38F1:
	jmp *-16(%r13)
	.size ds1_s2Vk5_entry, .-ds1_s2Vk5_entry


==================== Asm code ====================
2018-03-16 15:57:34.738953449 UTC

.section .data.rel.ro
.align 8
.align 1
ds1_s2Vk5_info:
	.quad	ds1_s2Vk5_entry
	.quad	3
	.quad	2305851809601683471
	.quad	S2VLN_srt+872


==================== Asm code ====================
2018-03-16 15:57:34.739646341 UTC

.section .text
.align 8
_c38Ed:
_c38Ed:
	movq $block_c38Ei_info,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c38Ei
_c38Ej:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c38Ed, .-_c38Ed


==================== Asm code ====================
2018-03-16 15:57:34.740276293 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38Ed_info:
	.quad	_c38Ed
	.quad	2
	.quad	2305851809601683486
	.quad	S2VLN_srt+872


==================== Asm code ====================
2018-03-16 15:57:34.741011041 UTC

.section .text
.align 8
_c38Ei:
_c38Ei:
	movq $block_c38En_info,-16(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c38En
_c38Eo:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c38Ei, .-_c38Ei


==================== Asm code ====================
2018-03-16 15:57:34.741717523 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38Ei_info:
	.quad	_c38Ei
	.quad	130
	.quad	2305851809601683486
	.quad	S2VLN_srt+872


==================== Asm code ====================
2018-03-16 15:57:34.742594907 UTC

.section .text
.align 8
_c38En:
_c38En:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _c38F7
_c38F6:
	movq 7(%rbx),%rax
	movq 32(%rbp),%rbx
	subq %rax,%rbx
	testq %rbx,%rbx
	jle _c38F9
_c38Fb:
	movq $GHC.Types.I#_con_info,-72(%r12)
	addq %rbx,%rax
	movq %rax,-64(%r12)
	movq $sat_s2Vkh_info,-56(%r12)
	movq 24(%rbp),%rax
	movq %rax,-40(%r12)
	movq 8(%rbp),%rax
	movq %rax,-32(%r12)
	movq %rbx,-24(%r12)
	movq $(,)_con_info,-16(%r12)
	leaq -56(%r12),%rax
	movq %rax,-8(%r12)
	leaq -71(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c38F9:
	addq $-80,%r12
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $40,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c38F7:
	movq $80,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c38En, .-_c38En


==================== Asm code ====================
2018-03-16 15:57:34.74340164 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38En_info:
	.quad	_c38En
	.quad	516
	.quad	2305851809601683486
	.quad	S2VLN_srt+872


==================== Asm code ====================
2018-03-16 15:57:34.74394959 UTC

.section .data.rel.ro
.align 8
.align 1
u38Qk_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4613937818241073153


==================== Asm code ====================
2018-03-16 15:57:34.744694106 UTC

.section .text
.align 8
sat_s2VkB_entry:
_c38FN:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c38FQ
_c38FR:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c38FP_info,-24(%rbp)
	movq 24(%rbx),%rsi
	negq %rsi
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp GHC.Float.$wexpt_entry
_c38FQ:
	jmp *-16(%r13)
	.size sat_s2VkB_entry, .-sat_s2VkB_entry


==================== Asm code ====================
2018-03-16 15:57:34.745397767 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2VkB_info:
	.quad	sat_s2VkB_entry
	.quad	4294967297
	.quad	-4294967277
	.quad	u38Qk_srtd


==================== Asm code ====================
2018-03-16 15:57:34.746002894 UTC

.section .data.rel.ro
.align 8
.align 1
u38Ql_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:34.746669142 UTC

.section .text
.align 8
_c38FP:
_c38FP:
	movl $GHC.Float.$fRealFloatDouble5_closure,%esi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c38FP, .-_c38FP


==================== Asm code ====================
2018-03-16 15:57:34.747286873 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38FP_info:
	.quad	_c38FP
	.quad	0
	.quad	-4294967266
	.quad	u38Ql_srtd


==================== Asm code ====================
2018-03-16 15:57:34.74789208 UTC

.section .data.rel.ro
.align 8
.align 1
u38Qm_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:34.74859021 UTC

.section .text
.align 8
sat_s2Vky_entry:
_c38G0:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c38G1
_c38G2:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movl $GHC.Float.$fRealFloatDouble5_closure,%esi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
_c38G1:
	jmp *-16(%r13)
	.size sat_s2Vky_entry, .-sat_s2Vky_entry


==================== Asm code ====================
2018-03-16 15:57:34.749354382 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Vky_info:
	.quad	sat_s2Vky_entry
	.quad	1
	.quad	-4294967280
	.quad	u38Qm_srtd


==================== Asm code ====================
2018-03-16 15:57:34.749991627 UTC

.section .data.rel.ro
.align 8
.align 1
u38Qn_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4613937818241073153


==================== Asm code ====================
2018-03-16 15:57:34.750734487 UTC

.section .text
.align 8
sat_s2VkN_entry:
_c38Gu:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c38GA
_c38GB:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c38Gz_info,-24(%rbp)
	movq 24(%rbx),%rax
	negq %rax
	leaq 1(%rax),%rsi
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp GHC.Float.$wexpt_entry
_c38GA:
	jmp *-16(%r13)
	.size sat_s2VkN_entry, .-sat_s2VkN_entry


==================== Asm code ====================
2018-03-16 15:57:34.751420411 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2VkN_info:
	.quad	sat_s2VkN_entry
	.quad	4294967297
	.quad	-4294967277
	.quad	u38Qn_srtd


==================== Asm code ====================
2018-03-16 15:57:34.7519961 UTC

.section .data.rel.ro
.align 8
.align 1
u38Qo_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:34.75314025 UTC

.section .text
.align 8
_c38Gz:
_c38Gz:
	movl $GHC.Float.$fRealFloatDouble5_closure,%esi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c38Gz, .-_c38Gz


==================== Asm code ====================
2018-03-16 15:57:34.753874975 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38Gz_info:
	.quad	_c38Gz
	.quad	0
	.quad	-4294967266
	.quad	u38Qo_srtd


==================== Asm code ====================
2018-03-16 15:57:34.75449036 UTC

.section .data.rel.ro
.align 8
.align 1
u38Qp_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:34.755232285 UTC

.section .text
.align 8
sat_s2VkJ_entry:
_c38GM:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c38GN
_c38GO:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c38GK_info,-24(%rbp)
	movq 16(%rbx),%rsi
	movq 24(%rbx),%r14
	addq $-24,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
_c38GN:
	jmp *-16(%r13)
	.size sat_s2VkJ_entry, .-sat_s2VkJ_entry


==================== Asm code ====================
2018-03-16 15:57:34.755896545 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2VkJ_info:
	.quad	sat_s2VkJ_entry
	.quad	2
	.quad	-4294967278
	.quad	u38Qp_srtd


==================== Asm code ====================
2018-03-16 15:57:34.75645808 UTC

.section .data.rel.ro
.align 8
.align 1
u38Qq_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:34.757104899 UTC

.section .text
.align 8
_c38GK:
_c38GK:
	movl $GHC.Float.$fRealFloatDouble5_closure,%esi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c38GK, .-_c38GK


==================== Asm code ====================
2018-03-16 15:57:34.758082642 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38GK_info:
	.quad	_c38GK
	.quad	0
	.quad	-4294967266
	.quad	u38Qq_srtd


==================== Asm code ====================
2018-03-16 15:57:34.759170405 UTC

.section .text
.align 8
be_s2VkQ_entry:
_c38H2:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c38H3
_c38H4:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Float.$wexpt_entry
_c38H3:
	jmp *-16(%r13)
	.size be_s2VkQ_entry, .-be_s2VkQ_entry


==================== Asm code ====================
2018-03-16 15:57:34.760131299 UTC

.section .data.rel.ro
.align 8
.align 1
be_s2VkQ_info:
	.quad	be_s2VkQ_entry
	.quad	4294967297
	.quad	4294967315
	.quad	S2VLN_srt+960


==================== Asm code ====================
2018-03-16 15:57:34.760987239 UTC

.section .data.rel.ro
.align 8
.align 1
u38Qr_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:34.762173992 UTC

.section .text
.align 8
sat_s2VkV_entry:
_c38Hm:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c38Hn
_c38Ho:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c38Hk_info,-24(%rbp)
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
_c38Hn:
	jmp *-16(%r13)
	.size sat_s2VkV_entry, .-sat_s2VkV_entry


==================== Asm code ====================
2018-03-16 15:57:34.763223591 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2VkV_info:
	.quad	sat_s2VkV_entry
	.quad	2
	.quad	-4294967278
	.quad	u38Qr_srtd


==================== Asm code ====================
2018-03-16 15:57:34.764143936 UTC

.section .data.rel.ro
.align 8
.align 1
u38Qs_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:34.765047669 UTC

.section .text
.align 8
_c38Hk:
_c38Hk:
	movl $GHC.Float.$fRealFloatDouble5_closure,%esi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c38Hk, .-_c38Hk


==================== Asm code ====================
2018-03-16 15:57:34.766045171 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38Hk_info:
	.quad	_c38Hk
	.quad	0
	.quad	-4294967266
	.quad	u38Qs_srtd


==================== Asm code ====================
2018-03-16 15:57:34.76724295 UTC

.section .text
.align 8
sat_s2Vl0_entry:
_c38Hy:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c38Hz
_c38HA:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rsi
	movq 24(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
_c38Hz:
	jmp *-16(%r13)
	.size sat_s2Vl0_entry, .-sat_s2Vl0_entry


==================== Asm code ====================
2018-03-16 15:57:34.768193242 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Vl0_info:
	.quad	sat_s2Vl0_entry
	.quad	2
	.quad	4294967314
	.quad	S2VLN_srt+1048


==================== Asm code ====================
2018-03-16 15:57:34.769082178 UTC

.section .data.rel.ro
.align 8
.align 1
u38Qt_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:34.770225714 UTC

.section .text
.align 8
sat_s2VkZ_entry:
_c38HF:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c38HG
_c38HH:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rsi
	movl $GHC.Float.$fRealFloatDouble5_closure,%r14d
	addq $-16,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
_c38HG:
	jmp *-16(%r13)
	.size sat_s2VkZ_entry, .-sat_s2VkZ_entry


==================== Asm code ====================
2018-03-16 15:57:34.771203385 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2VkZ_info:
	.quad	sat_s2VkZ_entry
	.quad	1
	.quad	-4294967280
	.quad	u38Qt_srtd


==================== Asm code ====================
2018-03-16 15:57:34.7720505 UTC

.section .data.rel.ro
.align 8
.align 1
u38Qu_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:34.773110517 UTC

.section .text
.align 8
sat_s2VkY_entry:
_c38HO:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c38HS
_c38HT:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c38HM_info,-32(%rbp)
	movq 32(%rbx),%rsi
	movq 24(%rbx),%r14
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
_c38HS:
	jmp *-16(%r13)
	.size sat_s2VkY_entry, .-sat_s2VkY_entry


==================== Asm code ====================
2018-03-16 15:57:34.774122044 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2VkY_info:
	.quad	sat_s2VkY_entry
	.quad	3
	.quad	-4294967281
	.quad	u38Qu_srtd


==================== Asm code ====================
2018-03-16 15:57:34.775061367 UTC

.section .data.rel.ro
.align 8
.align 1
u38Qv_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:34.776047538 UTC

.section .text
.align 8
_c38HM:
_c38HM:
	movq 8(%rbp),%rax
	movq $block_c38HR_info,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c38HM, .-_c38HM


==================== Asm code ====================
2018-03-16 15:57:34.776950453 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38HM_info:
	.quad	_c38HM
	.quad	1
	.quad	-4294967266
	.quad	u38Qv_srtd


==================== Asm code ====================
2018-03-16 15:57:34.777876421 UTC

.section .data.rel.ro
.align 8
.align 1
u38Qw_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:34.778880636 UTC

.section .text
.align 8
_c38HR:
_c38HR:
	movl $GHC.Float.$fRealFloatDouble5_closure,%esi
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c38HR, .-_c38HR


==================== Asm code ====================
2018-03-16 15:57:34.779755381 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38HR_info:
	.quad	_c38HR
	.quad	0
	.quad	-4294967266
	.quad	u38Qw_srtd


==================== Asm code ====================
2018-03-16 15:57:34.780635805 UTC

.section .data.rel.ro
.align 8
.align 1
u38Qx_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4613938367996887041


==================== Asm code ====================
2018-03-16 15:57:34.781911836 UTC

.section .text
.align 8
ds2_s2Vko_entry:
_c38HZ:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _c38I0
_c38I1:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c38Fk_info,-56(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 48(%rbx),%rsi
	movq 40(%rbx),%rbx
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rdx,-32(%rbp)
	movq %rsi,-24(%rbp)
	addq $-56,%rbp
	testb $7,%bl
	jne _c38Fk
_c38Fl:
	movq (%rbx),%rax
	jmp *(%rax)
_c38I0:
	jmp *-16(%r13)
	.size ds2_s2Vko_entry, .-ds2_s2Vko_entry


==================== Asm code ====================
2018-03-16 15:57:34.782989014 UTC

.section .data.rel.ro
.align 8
.align 1
ds2_s2Vko_info:
	.quad	ds2_s2Vko_entry
	.quad	5
	.quad	-4294967281
	.quad	u38Qx_srtd


==================== Asm code ====================
2018-03-16 15:57:34.783908642 UTC

.section .data.rel.ro
.align 8
.align 1
u38Qy_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4613938367996887041


==================== Asm code ====================
2018-03-16 15:57:34.784976981 UTC

.section .text
.align 8
_c38Fk:
_c38Fk:
	movq $block_c38Fp_info,(%rbp)
	movq 15(%rbx),%rbx
	testb $7,%bl
	jne _c38Fp
_c38Fq:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c38Fk, .-_c38Fk


==================== Asm code ====================
2018-03-16 15:57:34.786038388 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38Fk_info:
	.quad	_c38Fk
	.quad	4
	.quad	-4294967266
	.quad	u38Qy_srtd


==================== Asm code ====================
2018-03-16 15:57:34.786900344 UTC

.section .data.rel.ro
.align 8
.align 1
u38Qz_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4613938367996887041


==================== Asm code ====================
2018-03-16 15:57:34.788074388 UTC

.section .text
.align 8
_c38Fp:
_c38Fp:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jl _c38I5
_c38Ip:
	movq $block_c38GT_info,(%rbp)
	movq 16(%rbp),%rbx
	movq %rax,24(%rbp)
	testb $7,%bl
	jne _c38GT
_c38GU:
	movq (%rbx),%rax
	jmp *(%rax)
_c38I5:
	movq $block_c38Fx_info,(%rbp)
	movq 24(%rbp),%rbx
	movq %rax,24(%rbp)
	testb $7,%bl
	jne _c38Fx
_c38Fy:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c38Fp, .-_c38Fp


==================== Asm code ====================
2018-03-16 15:57:34.789934468 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38Fp_info:
	.quad	_c38Fp
	.quad	4
	.quad	-4294967266
	.quad	u38Qz_srtd


==================== Asm code ====================
2018-03-16 15:57:34.790846348 UTC

.section .data.rel.ro
.align 8
.align 1
u38QA_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4613938367996887041


==================== Asm code ====================
2018-03-16 15:57:34.791998146 UTC

.section .text
.align 8
_c38Fx:
_c38Fx:
	movq 24(%rbp),%rax
	cmpq 7(%rbx),%rax
	jle _c38FF
_c38Id:
	movq $block_c38G7_info,(%rbp)
	movq 16(%rbp),%rbx
	testb $7,%bl
	jne _c38G7
_c38G8:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c38Fx, .-_c38Fx


==================== Asm code ====================
2018-03-16 15:57:34.792877545 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38Fx_info:
	.quad	_c38Fx
	.quad	260
	.quad	-4294967266
	.quad	u38QA_srtd


==================== Asm code ====================
2018-03-16 15:57:34.793772255 UTC

.section .data.rel.ro
.align 8
.align 1
u38QB_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4613938367996887041


==================== Asm code ====================
2018-03-16 15:57:34.794756816 UTC

.section .text
.align 8
_c38G7:
_c38G7:
	movq $block_c38Gf_info,(%rbp)
	movq 7(%rbx),%rax
	leaq -1(%rax),%rsi
	movq 8(%rbp),%r14
	jmp GHC.Float.$wexpt_entry
	.size _c38G7, .-_c38G7


==================== Asm code ====================
2018-03-16 15:57:34.795589077 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38G7_info:
	.quad	_c38G7
	.quad	388
	.quad	-4294967266
	.quad	u38QB_srtd


==================== Asm code ====================
2018-03-16 15:57:34.796475982 UTC

.section .data.rel.ro
.align 8
.align 1
u38QC_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4613938367996887041


==================== Asm code ====================
2018-03-16 15:57:34.797834678 UTC

.section .text
.align 8
_c38Gf:
_c38Gf:
	movq $block_c38Gj_info,(%rbp)
	movq %rbx,%rsi
	movq 32(%rbp),%r14
	jmp GHC.Integer.Type.eqInteger#_entry
	.size _c38Gf, .-_c38Gf


==================== Asm code ====================
2018-03-16 15:57:34.798699401 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38Gf_info:
	.quad	_c38Gf
	.quad	388
	.quad	-4294967266
	.quad	u38QC_srtd


==================== Asm code ====================
2018-03-16 15:57:34.7995238 UTC

.section .data.rel.ro
.align 8
.align 1
u38QD_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4613938367996887041


==================== Asm code ====================
2018-03-16 15:57:34.800701669 UTC

.section .text
.align 8
_c38Gj:
_c38Gj:
	cmpq $1,%rbx
	je _c38Il
	jmp _c38FF
_c38Io:
	movq $104,904(%r13)
	jmp stg_gc_unbx_r1
_c38Il:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _c38Io
_c38In:
	movq $sat_s2VkN_info,-96(%r12)
	movq 8(%rbp),%rax
	movq %rax,-80(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-72(%r12)
	movq $sat_s2VkJ_info,-64(%r12)
	movq %rax,-48(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq $(,,,)_con_info,-32(%r12)
	leaq -64(%r12),%rbx
	movq %rbx,-24(%r12)
	leaq -96(%r12),%rbx
	movq %rbx,-16(%r12)
	movq %rax,-8(%r12)
	movq $GHC.Float.$fRealDouble1_closure,(%r12)
	leaq -31(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c38Gj, .-_c38Gj


==================== Asm code ====================
2018-03-16 15:57:34.801837155 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38Gj_info:
	.quad	_c38Gj
	.quad	388
	.quad	-4294967266
	.quad	u38QD_srtd


==================== Asm code ====================
2018-03-16 15:57:34.802672574 UTC

.section .data.rel.ro
.align 8
.align 1
u38QE_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4613938367996887041


==================== Asm code ====================
2018-03-16 15:57:34.803861835 UTC

.section .text
.align 8
_c38FF:
_c38FF:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _c38Ia
_c38I9:
	movq $sat_s2VkB_info,-88(%r12)
	movq 8(%rbp),%rax
	movq %rax,-72(%r12)
	movq 24(%rbp),%rax
	movq %rax,-64(%r12)
	movq $sat_s2Vky_info,-56(%r12)
	movq 32(%rbp),%rax
	movq %rax,-40(%r12)
	movq $(,,,)_con_info,-32(%r12)
	leaq -56(%r12),%rax
	movq %rax,-24(%r12)
	leaq -88(%r12),%rax
	movq %rax,-16(%r12)
	movq $GHC.Float.$fRealDouble1_closure,-8(%r12)
	movq $GHC.Float.$fRealDouble1_closure,(%r12)
	leaq -31(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c38Ia:
	movq $96,904(%r13)
	movq $block_c38FF_info,(%rbp)
	jmp stg_gc_noregs
	.size _c38FF, .-_c38FF


==================== Asm code ====================
2018-03-16 15:57:34.805118762 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38FF_info:
	.quad	_c38FF
	.quad	388
	.quad	-4294967266
	.quad	u38QE_srtd


==================== Asm code ====================
2018-03-16 15:57:34.806345902 UTC

.section .data.rel.ro
.align 8
.align 1
u38QF_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4613937818241073153


==================== Asm code ====================
2018-03-16 15:57:34.807468851 UTC

.section .text
.align 8
_c38GT:
_c38GT:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c38Is
_c38Ir:
	movq 7(%rbx),%rax
	movq $be_s2VkQ_info,-24(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,(%r12)
	movq $block_c38H8_info,(%rbp)
	leaq -1(%rax),%rsi
	movq %rbx,%r14
	leaq -24(%r12),%rax
	movq %rax,24(%rbp)
	jmp GHC.Float.$wexpt_entry
_c38Is:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c38GT, .-_c38GT


==================== Asm code ====================
2018-03-16 15:57:34.808452953 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38GT_info:
	.quad	_c38GT
	.quad	388
	.quad	-4294967266
	.quad	u38QF_srtd


==================== Asm code ====================
2018-03-16 15:57:34.809411848 UTC

.section .data.rel.ro
.align 8
.align 1
u38QG_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:34.810451028 UTC

.section .text
.align 8
_c38H8:
_c38H8:
	movq $block_c38Hc_info,(%rbp)
	movq %rbx,%rsi
	movq 32(%rbp),%r14
	jmp GHC.Integer.Type.eqInteger#_entry
	.size _c38H8, .-_c38H8


==================== Asm code ====================
2018-03-16 15:57:34.811341608 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38H8_info:
	.quad	_c38H8
	.quad	132
	.quad	-4294967266
	.quad	u38QG_srtd


==================== Asm code ====================
2018-03-16 15:57:34.812087429 UTC

.section .data.rel.ro
.align 8
.align 1
u38QH_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:34.813447619 UTC

.section .text
.align 8
_c38Hc:
_c38Hc:
	movq 24(%rbp),%rax
	movq 32(%rbp),%rcx
	cmpq $1,%rbx
	je _c38IB
_c38Iw:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c38Iz
_c38Iy:
	movq $sat_s2VkV_info,-64(%r12)
	movq %rcx,-48(%r12)
	movq %rax,-40(%r12)
	movq $(,,,)_con_info,-32(%r12)
	leaq -64(%r12),%rbx
	movq %rbx,-24(%r12)
	movq $GHC.Float.$fRealFloatDouble5_closure,-16(%r12)
	movq %rax,-8(%r12)
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c38IE:
	movq $136,904(%r13)
	jmp stg_gc_unbx_r1
_c38IB:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _c38IE
_c38ID:
	movq $sat_s2Vl0_info,-128(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-112(%r12)
	movq %rax,-104(%r12)
	movq $sat_s2VkZ_info,-96(%r12)
	movq %rbx,-80(%r12)
	movq $sat_s2VkY_info,-72(%r12)
	movq %rbx,-56(%r12)
	movq %rcx,-48(%r12)
	movq %rax,-40(%r12)
	movq $(,,,)_con_info,-32(%r12)
	leaq -72(%r12),%rbx
	movq %rbx,-24(%r12)
	leaq -96(%r12),%rbx
	movq %rbx,-16(%r12)
	leaq -128(%r12),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c38Iz:
	movq $72,904(%r13)
	jmp stg_gc_unbx_r1
	.size _c38Hc, .-_c38Hc


==================== Asm code ====================
2018-03-16 15:57:34.814675893 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38Hc_info:
	.quad	_c38Hc
	.quad	132
	.quad	-4294967266
	.quad	u38QH_srtd


==================== Asm code ====================
2018-03-16 15:57:34.815490995 UTC

.section .data.rel.ro
.align 8
.align 1
u38QI_srtd:
	.quad	S2VLN_srt+552
	.quad	63
	.quad	4613940567053697025


==================== Asm code ====================
2018-03-16 15:57:34.816634325 UTC

.section .text
.align 8
k_s2Vlj_entry:
_c38IV:
	leaq -96(%rbp),%rax
	cmpq %r15,%rax
	jb _c38IZ
_c38J0:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c38IT_info,-96(%rbp)
	movl $GHC.Float.$fRealFloatDouble5_closure,%esi
	movq 24(%rbx),%rax
	movq %rax,%r14
	movq 16(%rbx),%rcx
	movq %rcx,-88(%rbp)
	movq %rax,-80(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-72(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-64(%rbp)
	movq 48(%rbx),%rax
	movq %rax,-56(%rbp)
	movq 56(%rbx),%rax
	movq %rax,-48(%rbp)
	movq 64(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 72(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 80(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-96,%rbp
	jmp GHC.Integer.Type.eqInteger#_entry
_c38IZ:
	jmp *-16(%r13)
	.size k_s2Vlj_entry, .-k_s2Vlj_entry


==================== Asm code ====================
2018-03-16 15:57:34.818313534 UTC

.section .data.rel.ro
.align 8
.align 1
k_s2Vlj_info:
	.quad	k_s2Vlj_entry
	.quad	9
	.quad	-4294967281
	.quad	u38QI_srtd


==================== Asm code ====================
2018-03-16 15:57:34.819058989 UTC

.section .data.rel.ro
.align 8
.align 1
u38QJ_srtd:
	.quad	S2VLN_srt+752
	.quad	38
	.quad	137506144257


==================== Asm code ====================
2018-03-16 15:57:34.820003514 UTC

.section .text
.align 8
_c38IT:
_c38IT:
	movq $block_c38IY_info,(%rbp)
	movq 72(%rbp),%rsi
	movq 64(%rbp),%r14
	movq %rbx,72(%rbp)
	jmp GHC.Integer.Type.plusInteger_entry
	.size _c38IT, .-_c38IT


==================== Asm code ====================
2018-03-16 15:57:34.820839273 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38IT_info:
	.quad	_c38IT
	.quad	9
	.quad	-4294967266
	.quad	u38QJ_srtd


==================== Asm code ====================
2018-03-16 15:57:34.821637168 UTC

.section .data.rel.ro
.align 8
.align 1
u38QK_srtd:
	.quad	S2VLN_srt+752
	.quad	38
	.quad	137506144257


==================== Asm code ====================
2018-03-16 15:57:34.822345763 UTC

.section .text
.align 8
_c38IY:
_c38IY:
	cmpq $1,72(%rbp)
	je _c38Lp
_u38Ml:
	movq %rbx,72(%rbp)
	addq $8,%rbp
	jmp _s2Vly
_c38Lp:
	movq $block_c38Lo_info,(%rbp)
	movl $GHC.Float.expts4_closure,%esi
	movq 8(%rbp),%r14
	movq %rbx,72(%rbp)
	jmp GHC.Integer.Type.eqInteger#_entry
	.size _c38IY, .-_c38IY


==================== Asm code ====================
2018-03-16 15:57:34.823282662 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38IY_info:
	.quad	_c38IY
	.quad	24585
	.quad	-4294967266
	.quad	u38QK_srtd


==================== Asm code ====================
2018-03-16 15:57:34.824274149 UTC

.section .text
.align 8
_c38Lo:
_c38Lo:
	cmpq $1,%rbx
	je _c38LK
_u38Mm:
	addq $8,%rbp
	jmp _s2Vly
_c38LK:
	movq $block_c38Ly_info,(%rbp)
	movq 24(%rbp),%rbx
	testb $7,%bl
	jne _c38Ly
_c38Lz:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c38Lo, .-_c38Lo


==================== Asm code ====================
2018-03-16 15:57:34.825206517 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38Lo_info:
	.quad	_c38Lo
	.quad	8201
	.quad	36046410679844894
	.quad	S2VLN_srt+864


==================== Asm code ====================
2018-03-16 15:57:34.826248364 UTC

.section .text
.align 8
_c38Ly:
_c38Ly:
	movq $block_c38LD_info,(%rbp)
	movq 7(%rbx),%rax
	movq 32(%rbp),%rbx
	movq %rax,64(%rbp)
	testb $7,%bl
	jne _c38LD
_c38LE:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c38Ly, .-_c38Ly


==================== Asm code ====================
2018-03-16 15:57:34.827750241 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38Ly_info:
	.quad	_c38Ly
	.quad	11657
	.quad	8800387989534
	.quad	S2VLN_srt+960


==================== Asm code ====================
2018-03-16 15:57:34.828726353 UTC

.section .text
.align 8
_c38LD:
_c38LD:
	movq $block_c38LI_info,(%rbp)
	movq 15(%rbx),%rbx
	testb $7,%bl
	jne _c38LI
_c38LN:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c38LD, .-_c38LD


==================== Asm code ====================
2018-03-16 15:57:34.829610222 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38LD_info:
	.quad	_c38LD
	.quad	12169
	.quad	8800387989534
	.quad	S2VLN_srt+960


==================== Asm code ====================
2018-03-16 15:57:34.830654592 UTC

.section .text
.align 8
_c38LI:
_c38LI:
	movq 7(%rbx),%rax
	decq %rax
	movq 64(%rbp),%rbx
	addq %rax,%rbx
	testq %rbx,%rbx
	jl _c38M1
_c38M2:
	movl $28738,%eax
	movq %rax,%rcx
	movq %rbx,%rax
	imulq $8651,%rax
	cqto
	idivq %rcx
	incq %rax
	movq %rax,64(%rbp)
	addq $8,%rbp
	jmp _c38J9
_c38M1:
	movl $28738,%eax
	movq %rax,%rcx
	movq %rbx,%rax
	imulq $8651,%rax
	cqto
	idivq %rcx
	movq %rax,64(%rbp)
	addq $8,%rbp
	jmp _c38J9
	.size _c38LI, .-_c38LI


==================== Asm code ====================
2018-03-16 15:57:34.831549249 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38LI_info:
	.quad	_c38LI
	.quad	12169
	.quad	8800387989534
	.quad	S2VLN_srt+960


==================== Asm code ====================
2018-03-16 15:57:34.832400036 UTC

.section .text
.align 8
_s2Vly:
_s2Vly:
	movq $block_c38Kd_info,-8(%rbp)
	movl $GHC.Float.$fRealDouble1_closure,%esi
	movq 40(%rbp),%r14
	addq $-8,%rbp
	jmp GHC.Integer.Type.plusInteger_entry
	.size _s2Vly, .-_s2Vly


==================== Asm code ====================
2018-03-16 15:57:34.833585409 UTC

.section .text
.align 8
_c38Kd:
_c38Kd:
	movq $block_c38Kh_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Integer.Type.floatFromInteger_entry
	.size _c38Kd, .-_c38Kd


==================== Asm code ====================
2018-03-16 15:57:34.834388765 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38Kd_info:
	.quad	_c38Kd
	.quad	11017
	.quad	8800387989534
	.quad	S2VLN_srt+960


==================== Asm code ====================
2018-03-16 15:57:34.835379974 UTC

.section .text
.align 8
_c38Kh:
_c38Kh:
	movq 40(%rbp),%rax
	subq $8,%rsp
	movss %xmm1,%xmm0
	movq %rax,%rbx
	movl $1,%eax
	call logf
	addq $8,%rsp
	movq $block_c38Kp_info,(%rbp)
	movss %xmm0,64(%rbp)
	testb $7,%bl
	jne _c38Kp
_c38Kq:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c38Kh, .-_c38Kh


==================== Asm code ====================
2018-03-16 15:57:34.836233559 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38Kh_info:
	.quad	_c38Kh
	.quad	11017
	.quad	8800387989534
	.quad	S2VLN_srt+960


==================== Asm code ====================
2018-03-16 15:57:34.837130973 UTC

.section .text
.align 8
_c38Kp:
_c38Kp:
	movq $block_c38Ku_info,(%rbp)
	movq 15(%rbx),%rbx
	testb $7,%bl
	jne _c38Ku
_c38Kv:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c38Kp, .-_c38Kp


==================== Asm code ====================
2018-03-16 15:57:34.838054045 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38Kp_info:
	.quad	_c38Kp
	.quad	12041
	.quad	8800387989534
	.quad	S2VLN_srt+960


==================== Asm code ====================
2018-03-16 15:57:34.838972175 UTC

.section .text
.align 8
_c38Ku:
_c38Ku:
	movq $block_c38Kz_info,(%rbp)
	movq 16(%rbp),%r14
	movq 7(%rbx),%rax
	movq %rax,48(%rbp)
	jmp GHC.Integer.Type.floatFromInteger_entry
	.size _c38Ku, .-_c38Ku


==================== Asm code ====================
2018-03-16 15:57:34.839724865 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38Ku_info:
	.quad	_c38Ku
	.quad	12041
	.quad	8800387989534
	.quad	S2VLN_srt+960


==================== Asm code ====================
2018-03-16 15:57:34.840687762 UTC

.section .text
.align 8
_c38Kz:
_c38Kz:
	movq 8(%rbp),%rax
	subq $8,%rsp
	movss %xmm1,%xmm0
	movq %rax,%rbx
	movl $1,%eax
	call logf
	addq $8,%rsp
	movq $block_c38KH_info,(%rbp)
	movq %rbx,%r14
	movss %xmm0,40(%rbp)
	jmp GHC.Integer.Type.floatFromInteger_entry
	.size _c38Kz, .-_c38Kz


==================== Asm code ====================
2018-03-16 15:57:34.841898677 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38Kz_info:
	.quad	_c38Kz
	.quad	12169
	.quad	8800387989534
	.quad	S2VLN_srt+960


==================== Asm code ====================
2018-03-16 15:57:34.842904478 UTC

.section .text
.align 8
_c38KH:
_c38KH:
	movss 64(%rbp),%xmm0
	movq 48(%rbp),%rax
	movss 40(%rbp),%xmm2
	subq $8,%rsp
	movsd %xmm0,%xmm3
	movss %xmm1,%xmm0
	movq %rax,%rbx
	movl $1,%eax
	movsd %xmm3,72(%rsp)
	movsd %xmm2,80(%rsp)
	call logf
	addq $8,%rsp
	cvtsi2ssq %rbx,%xmm1
	movsd 72(%rsp),%xmm2
	mulss %xmm2,%xmm1
	movsd 64(%rsp),%xmm2
	addss %xmm1,%xmm2
	divss %xmm0,%xmm2
	cvttss2siq %xmm2,%rax
	cvtsi2ssq %rax,%xmm0
	ucomiss %xmm2,%xmm0
	jp _c38Lh
	jb _c38Li
_c38Lh:
	movq %rax,64(%rbp)
	addq $8,%rbp
	jmp _c38J9
_c38Li:
	incq %rax
	movq %rax,64(%rbp)
	addq $8,%rbp
	jmp _c38J9
	.size _c38KH, .-_c38KH


==================== Asm code ====================
2018-03-16 15:57:34.843953865 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38KH_info:
	.quad	_c38KH
	.quad	12169
	.quad	8800387989534
	.quad	S2VLN_srt+960


==================== Asm code ====================
2018-03-16 15:57:34.844955028 UTC

.section .text
.align 8
_c38J9:
_c38J9:
	movq (%rbp),%rax
	movq 56(%rbp),%rbx
	testq %rbx,%rbx
	jl _c38Jo
_c38JO:
	movq $block_c38JJ_info,-8(%rbp)
	movq %rbx,%rsi
	movq %rax,%r14
	addq $-8,%rbp
	jmp GHC.Float.$wexpt_entry
_c38Jo:
	movq $block_c38Ji_info,-8(%rbp)
	movq %rbx,%rsi
	negq %rsi
	movq %rax,%r14
	addq $-8,%rbp
	jmp GHC.Float.$wexpt_entry
	.size _c38J9, .-_c38J9


==================== Asm code ====================
2018-03-16 15:57:34.845909902 UTC

.section .text
.align 8
_c38Ji:
_c38Ji:
	movq $block_c38Jm_info,(%rbp)
	movq 72(%rbp),%rsi
	movq %rbx,%r14
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c38Ji, .-_c38Ji


==================== Asm code ====================
2018-03-16 15:57:34.846536414 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38Ji_info:
	.quad	_c38Ji
	.quad	12169
	.quad	8800387989534
	.quad	S2VLN_srt+960


==================== Asm code ====================
2018-03-16 15:57:34.847200435 UTC

.section .text
.align 8
_c38Jm:
_c38Jm:
	movq $block_c38Jt_info,(%rbp)
	movq 56(%rbp),%rsi
	movq %rbx,%r14
	jmp GHC.Integer.Type.leInteger#_entry
	.size _c38Jm, .-_c38Jm


==================== Asm code ====================
2018-03-16 15:57:34.847784702 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38Jm_info:
	.quad	_c38Jm
	.quad	12169
	.quad	8800387989534
	.quad	S2VLN_srt+960


==================== Asm code ====================
2018-03-16 15:57:34.848541845 UTC

.section .text
.align 8
_c38Jt:
_c38Jt:
	movq 64(%rbp),%rax
	cmpq $1,%rbx
	je _c38JE
_c38JA:
	incq %rax
	movq %rax,64(%rbp)
	addq $8,%rbp
	jmp _c38J9
_c38JH:
	movq $16,904(%r13)
	jmp stg_gc_unbx_r1
_c38JE:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c38JH
_c38JG:
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $80,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c38Jt, .-_c38Jt


==================== Asm code ====================
2018-03-16 15:57:34.84923296 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38Jt_info:
	.quad	_c38Jt
	.quad	12169
	.quad	8800387989534
	.quad	S2VLN_srt+960


==================== Asm code ====================
2018-03-16 15:57:34.849921862 UTC

.section .text
.align 8
_c38JJ:
_c38JJ:
	movq $block_c38JN_info,(%rbp)
	movq 56(%rbp),%rsi
	movq %rbx,%r14
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c38JJ, .-_c38JJ


==================== Asm code ====================
2018-03-16 15:57:34.850523267 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38JJ_info:
	.quad	_c38JJ
	.quad	12169
	.quad	8800387989534
	.quad	S2VLN_srt+960


==================== Asm code ====================
2018-03-16 15:57:34.85118436 UTC

.section .text
.align 8
_c38JN:
_c38JN:
	movq $block_c38JT_info,(%rbp)
	movq %rbx,%rsi
	movq 72(%rbp),%r14
	jmp GHC.Integer.Type.leInteger#_entry
	.size _c38JN, .-_c38JN


==================== Asm code ====================
2018-03-16 15:57:34.851785766 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38JN_info:
	.quad	_c38JN
	.quad	12169
	.quad	8800387989534
	.quad	S2VLN_srt+960


==================== Asm code ====================
2018-03-16 15:57:34.852565802 UTC

.section .text
.align 8
_c38JT:
_c38JT:
	movq 64(%rbp),%rax
	cmpq $1,%rbx
	je _c38K4
_c38K0:
	incq %rax
	movq %rax,64(%rbp)
	addq $8,%rbp
	jmp _c38J9
_c38K7:
	movq $16,904(%r13)
	jmp stg_gc_unbx_r1
_c38K4:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c38K7
_c38K6:
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $80,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c38JT, .-_c38JT


==================== Asm code ====================
2018-03-16 15:57:34.853306951 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38JT_info:
	.quad	_c38JT
	.quad	12169
	.quad	8800387989534
	.quad	S2VLN_srt+960


==================== Asm code ====================
2018-03-16 15:57:34.854054636 UTC

.section .text
.align 8
sat_s2Vmu_entry:
_c38Nw:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c38Nx
_c38Ny:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movl $GHC.Float.$fRealDouble1_closure,%esi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Integer.Type.plusInteger_entry
_c38Nx:
	jmp *-16(%r13)
	.size sat_s2Vmu_entry, .-sat_s2Vmu_entry


==================== Asm code ====================
2018-03-16 15:57:34.854704592 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Vmu_info:
	.quad	sat_s2Vmu_entry
	.quad	1
	.quad	21474836496
	.quad	S2VLN_srt+864


==================== Asm code ====================
2018-03-16 15:57:34.855411781 UTC

.section .text
.align 8
sat_s2Vmy_entry:
_c38NQ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c38NR
_c38NS:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movl $GHC.Float.$fRealDouble1_closure,%esi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Integer.Type.plusInteger_entry
_c38NR:
	jmp *-16(%r13)
	.size sat_s2Vmy_entry, .-sat_s2Vmy_entry


==================== Asm code ====================
2018-03-16 15:57:34.856152541 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Vmy_info:
	.quad	sat_s2Vmy_entry
	.quad	1
	.quad	21474836496
	.quad	S2VLN_srt+864


==================== Asm code ====================
2018-03-16 15:57:34.856724562 UTC

.section .data.rel.ro
.align 8
.align 1
u38QL_srtd:
	.quad	S2VLN_srt+552
	.quad	70
	.quad	4611689866718085121
	.quad	32


==================== Asm code ====================
2018-03-16 15:57:34.85779914 UTC

.section .text
.align 8
gen_s2Vmc_entry:
_c38NW:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _c38NX
_u38OE:
	movq %rbx,-48(%rbp)
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-48,%rbp
	jmp _c38MR
_c38NX:
	jmp *-8(%r13)
	.size gen_s2Vmc_entry, .-gen_s2Vmc_entry


==================== Asm code ====================
2018-03-16 15:57:34.859008947 UTC

.section .data.rel.ro
.align 8
.align 1
gen_s2Vmc_info:
	.quad	gen_s2Vmc_entry
	.quad	1
	.quad	-4294967287
	.quad	21474836505
	.quad	u38QL_srtd


==================== Asm code ====================
2018-03-16 15:57:34.859765628 UTC

.section .text
.align 8
_c38MR:
_c38MR:
	movq (%rbp),%rax
	movq 3(%rax),%rax
	movq $block_c38MU_info,-16(%rbp)
	movl $GHC.Float.rationalToDouble5_closure,%esi
	movq 24(%rbp),%r14
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Integer.Type.eqInteger#_entry
	.size _c38MR, .-_c38MR


==================== Asm code ====================
2018-03-16 15:57:34.860396213 UTC

.section .data.rel.ro
.align 8
.align 1
u38QM_srtd:
	.quad	S2VLN_srt+552
	.quad	70
	.quad	4611689866718085121
	.quad	32


==================== Asm code ====================
2018-03-16 15:57:34.861137807 UTC

.section .text
.align 8
_c38MU:
_c38MU:
	cmpq $1,%rbx
	je _c38NV
_c38NU:
	movq $block_c38MY_info,(%rbp)
	movq 8(%rbp),%rsi
	movq 32(%rbp),%r14
	jmp GHC.Integer.Type.timesInteger_entry
_c38NV:
	movl $GHC.Real.divZeroError_closure,%ebx
	addq $64,%rbp
	jmp stg_ap_0_fast
	.size _c38MU, .-_c38MU


==================== Asm code ====================
2018-03-16 15:57:34.86188292 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38MU_info:
	.quad	_c38MU
	.quad	7
	.quad	-4294967266
	.quad	u38QM_srtd


==================== Asm code ====================
2018-03-16 15:57:34.86243391 UTC

.section .data.rel.ro
.align 8
.align 1
u38QN_srtd:
	.quad	S2VLN_srt+552
	.quad	70
	.quad	4611689866718085121
	.quad	32


==================== Asm code ====================
2018-03-16 15:57:34.863055738 UTC

.section .text
.align 8
_c38MY:
_c38MY:
	movq $block_c38N2_info,(%rbp)
	movq 40(%rbp),%rsi
	movq %rbx,%r14
	jmp GHC.Integer.Type.quotRemInteger_entry
	.size _c38MY, .-_c38MY


==================== Asm code ====================
2018-03-16 15:57:34.863612206 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38MY_info:
	.quad	_c38MY
	.quad	519
	.quad	-4294967266
	.quad	u38QN_srtd


==================== Asm code ====================
2018-03-16 15:57:34.864143895 UTC

.section .data.rel.ro
.align 8
.align 1
u38QO_srtd:
	.quad	S2VLN_srt+552
	.quad	70
	.quad	4611689866718085121
	.quad	32


==================== Asm code ====================
2018-03-16 15:57:34.864808029 UTC

.section .text
.align 8
_c38N2:
_c38N2:
	movq $block_c38N4_info,(%rbp)
	movq 8(%rbp),%rsi
	movq %r14,%rax
	movq 48(%rbp),%r14
	movq %rax,32(%rbp)
	movq %rbx,48(%rbp)
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c38N2, .-_c38N2


==================== Asm code ====================
2018-03-16 15:57:34.865481859 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38N2_info:
	.quad	_c38N2
	.quad	519
	.quad	-4294967266
	.quad	u38QO_srtd


==================== Asm code ====================
2018-03-16 15:57:34.866094399 UTC

.section .data.rel.ro
.align 8
.align 1
u38QP_srtd:
	.quad	S2VLN_srt+552
	.quad	70
	.quad	4611689866718085121
	.quad	32


==================== Asm code ====================
2018-03-16 15:57:34.866764064 UTC

.section .text
.align 8
_c38N4:
_c38N4:
	movq $block_c38N8_info,-8(%rbp)
	movq %rbx,%rsi
	movq 32(%rbp),%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp GHC.Integer.Type.plusInteger_entry
	.size _c38N4, .-_c38N4


==================== Asm code ====================
2018-03-16 15:57:34.867321612 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38N4_info:
	.quad	_c38N4
	.quad	7
	.quad	-4294967266
	.quad	u38QP_srtd


==================== Asm code ====================
2018-03-16 15:57:34.867893012 UTC

.section .data.rel.ro
.align 8
.align 1
u38QQ_srtd:
	.quad	S2VLN_srt+552
	.quad	70
	.quad	4611689866718085121
	.quad	32


==================== Asm code ====================
2018-03-16 15:57:34.868524937 UTC

.section .text
.align 8
_c38N8:
_c38N8:
	movq $block_c38Nc_info,(%rbp)
	movq 48(%rbp),%rsi
	movq %rbx,%r14
	jmp GHC.Integer.Type.gtInteger#_entry
	.size _c38N8, .-_c38N8


==================== Asm code ====================
2018-03-16 15:57:34.869141441 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38N8_info:
	.quad	_c38N8
	.quad	8
	.quad	-4294967266
	.quad	u38QQ_srtd


==================== Asm code ====================
2018-03-16 15:57:34.869788455 UTC

.section .data.rel.ro
.align 8
.align 1
u38QR_srtd:
	.quad	S2VLN_srt+552
	.quad	70
	.quad	4611689866718085121
	.quad	32


==================== Asm code ====================
2018-03-16 15:57:34.870469097 UTC

.section .text
.align 8
_c38Nc:
_c38Nc:
	movq $block_c38Ng_info,(%rbp)
	movq 16(%rbp),%rsi
	movq 64(%rbp),%r14
	movq %rbx,64(%rbp)
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c38Nc, .-_c38Nc


==================== Asm code ====================
2018-03-16 15:57:34.87106344 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38Nc_info:
	.quad	_c38Nc
	.quad	8
	.quad	-4294967266
	.quad	u38QR_srtd


==================== Asm code ====================
2018-03-16 15:57:34.871614997 UTC

.section .data.rel.ro
.align 8
.align 1
u38QS_srtd:
	.quad	S2VLN_srt+552
	.quad	70
	.quad	4611689866718085121
	.quad	32


==================== Asm code ====================
2018-03-16 15:57:34.872284154 UTC

.section .text
.align 8
_c38Ng:
_c38Ng:
	movq $block_c38Nk_info,(%rbp)
	movq %rbx,%rsi
	movq 40(%rbp),%r14
	movq %rbx,16(%rbp)
	jmp GHC.Integer.Type.ltInteger#_entry
	.size _c38Ng, .-_c38Ng


==================== Asm code ====================
2018-03-16 15:57:34.872911946 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38Ng_info:
	.quad	_c38Ng
	.quad	8328
	.quad	-4294967266
	.quad	u38QS_srtd


==================== Asm code ====================
2018-03-16 15:57:34.873570904 UTC

.section .data.rel.ro
.align 8
.align 1
u38QT_srtd:
	.quad	S2VLN_srt+552
	.quad	70
	.quad	4611689866718085121
	.quad	32


==================== Asm code ====================
2018-03-16 15:57:34.874631674 UTC

.section .text
.align 8
_c38Nk:
_c38Nk:
	movq 32(%rbp),%rax
	movq 56(%rbp),%rcx
	movq 40(%rbp),%rdx
	movq 64(%rbp),%rsi
	cmpq $1,%rbx
	je _c38Of
_c38O7:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c38Oa
_c38O9:
	cmpq $1,%rsi
	je _c38Oe
_c38Oc:
	movq $:_con_info,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rax,-24(%r12)
	leaq -38(%r12),%rax
	addq $-24,%r12
	movq %rax,32(%rbp)
	movq %rdx,40(%rbp)
	movq 48(%rbp),%rax
	movq %rax,48(%rbp)
	movq 8(%rbp),%rax
	movq %rax,56(%rbp)
	movq 16(%rbp),%rax
	movq %rax,64(%rbp)
	addq $24,%rbp
	jmp _c38MR
_c38Om:
	addq $-24,%r12
	movq $block_c38NE_info,24(%rbp)
	movl $GHC.Float.$fRealFloatDouble5_closure,%esi
	movq %rdx,%r14
	addq $24,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
_c38Of:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c38Oi
_c38Oh:
	cmpq $1,%rsi
	je _c38Om
_c38Ol:
	movq $:_con_info,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $72,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c38Oi:
	movq $24,904(%r13)
	jmp stg_gc_unbx_r1
_c38Oe:
	movq $sat_s2Vmu_info,-40(%r12)
	movq %rcx,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -40(%r12),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $72,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c38Oa:
	movq $48,904(%r13)
	jmp stg_gc_unbx_r1
	.size _c38Nk, .-_c38Nk


==================== Asm code ====================
2018-03-16 15:57:34.875543329 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38Nk_info:
	.quad	_c38Nk
	.quad	8200
	.quad	-4294967266
	.quad	u38QT_srtd


==================== Asm code ====================
2018-03-16 15:57:34.876196692 UTC

.section .text
.align 8
_c38NE:
_c38NE:
	movq $block_c38NI_info,(%rbp)
	movq 24(%rbp),%rsi
	movq %rbx,%r14
	jmp GHC.Integer.Type.ltInteger#_entry
	.size _c38NE, .-_c38NE


==================== Asm code ====================
2018-03-16 15:57:34.876806077 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38NE_info:
	.quad	_c38NE
	.quad	1157
	.quad	21474836510
	.quad	S2VLN_srt+864


==================== Asm code ====================
2018-03-16 15:57:34.877713111 UTC

.section .text
.align 8
_c38NI:
_c38NI:
	movq 8(%rbp),%rax
	movq 32(%rbp),%rcx
	cmpq $1,%rbx
	je _c38Ox
_c38Oq:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c38Ot
_c38Os:
	movq $sat_s2Vmy_info,-40(%r12)
	movq %rcx,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -40(%r12),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c38OA:
	movq $24,904(%r13)
	jmp stg_gc_unbx_r1
_c38Ox:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c38OA
_c38Oz:
	movq $:_con_info,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c38Ot:
	movq $48,904(%r13)
	jmp stg_gc_unbx_r1
	.size _c38NI, .-_c38NI


==================== Asm code ====================
2018-03-16 15:57:34.878508003 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38NI_info:
	.quad	_c38NI
	.quad	1413
	.quad	21474836510
	.quad	S2VLN_srt+864


==================== Asm code ====================
2018-03-16 15:57:34.879079776 UTC

.section .data.rel.ro
.align 8
.align 1
u38QU_srtd:
	.quad	S2VLN_srt+552
	.quad	70
	.quad	4613941666531770369
	.quad	32


==================== Asm code ====================
2018-03-16 15:57:34.879904533 UTC

.section .text
.align 8
sat_s2VmW_entry:
_c38OI:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _c38OJ
_c38OK:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c38MK_info,-64(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%rbx
	movq %rax,-56(%rbp)
	movq %rcx,-48(%rbp)
	movq %rdx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	addq $-64,%rbp
	testb $7,%bl
	jne _c38MK
_c38ML:
	movq (%rbx),%rax
	jmp *(%rax)
_c38OJ:
	jmp *-16(%r13)
	.size sat_s2VmW_entry, .-sat_s2VmW_entry


==================== Asm code ====================
2018-03-16 15:57:34.880633381 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2VmW_info:
	.quad	sat_s2VmW_entry
	.quad	6
	.quad	-4294967281
	.quad	u38QU_srtd


==================== Asm code ====================
2018-03-16 15:57:34.881268454 UTC

.section .data.rel.ro
.align 8
.align 1
u38QV_srtd:
	.quad	S2VLN_srt+552
	.quad	70
	.quad	4613941666531770369
	.quad	32


==================== Asm code ====================
2018-03-16 15:57:34.882171032 UTC

.section .text
.align 8
_c38MK:
_c38MK:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c38ON
_c38OM:
	movq 7(%rbx),%rax
	movq $gen_s2Vmc_info,-8(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,(%r12)
	movq 16(%rbp),%rbx
	leaq -3(%r12),%rcx
	testq %rax,%rax
	jl _c38Pl
_c38PP:
	movq $block_c38Px_info,-8(%rbp)
	movq %rax,(%rbp)
	movq %rcx,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c38Px
_c38Py:
	movq (%rbx),%rax
	jmp *(%rax)
_c38Pl:
	movq $block_c38OR_info,-8(%rbp)
	movq %rax,(%rbp)
	movq %rcx,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c38OR
_c38OS:
	movq (%rbx),%rax
	jmp *(%rax)
_c38ON:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c38MK, .-_c38MK


==================== Asm code ====================
2018-03-16 15:57:34.88297213 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38MK_info:
	.quad	_c38MK
	.quad	5
	.quad	-4294967266
	.quad	u38QV_srtd


==================== Asm code ====================
2018-03-16 15:57:34.883553165 UTC

.section .data.rel.ro
.align 8
.align 1
u38QW_srtd:
	.quad	S2VLN_srt+552
	.quad	70
	.quad	4613941666531770369
	.quad	32


==================== Asm code ====================
2018-03-16 15:57:34.884767626 UTC

.section .text
.align 8
_c38OR:
_c38OR:
	movq 8(%rbp),%rax
	negq %rax
	movq $block_c38OZ_info,8(%rbp)
	movq %rax,%rsi
	movq 16(%rbp),%r14
	movq 31(%rbx),%rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp GHC.Float.$wexpt_entry
	.size _c38OR, .-_c38OR


==================== Asm code ====================
2018-03-16 15:57:34.885508978 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38OR_info:
	.quad	_c38OR
	.quad	70
	.quad	-4294967266
	.quad	u38QW_srtd


==================== Asm code ====================
2018-03-16 15:57:34.886083894 UTC

.section .data.rel.ro
.align 8
.align 1
u38QX_srtd:
	.quad	S2VLN_srt+552
	.quad	70
	.quad	4611689866718085121
	.quad	32


==================== Asm code ====================
2018-03-16 15:57:34.886754807 UTC

.section .text
.align 8
_c38OZ:
_c38OZ:
	movq $block_c38P3_info,(%rbp)
	movq %rbx,%rsi
	movq 8(%rbp),%r14
	movq %rbx,8(%rbp)
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c38OZ, .-_c38OZ


==================== Asm code ====================
2018-03-16 15:57:34.887368307 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38OZ_info:
	.quad	_c38OZ
	.quad	5
	.quad	-4294967266
	.quad	u38QX_srtd


==================== Asm code ====================
2018-03-16 15:57:34.887956124 UTC

.section .data.rel.ro
.align 8
.align 1
u38QY_srtd:
	.quad	S2VLN_srt+552
	.quad	70
	.quad	4611689866718085121
	.quad	32


==================== Asm code ====================
2018-03-16 15:57:34.888618914 UTC

.section .text
.align 8
_c38P3:
_c38P3:
	movq $block_c38P7_info,(%rbp)
	movq 8(%rbp),%rsi
	movq 40(%rbp),%r14
	movq %rbx,40(%rbp)
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c38P3, .-_c38P3


==================== Asm code ====================
2018-03-16 15:57:34.889176566 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38P3_info:
	.quad	_c38P3
	.quad	5
	.quad	-4294967266
	.quad	u38QY_srtd


==================== Asm code ====================
2018-03-16 15:57:34.890033939 UTC

.section .data.rel.ro
.align 8
.align 1
u38QZ_srtd:
	.quad	S2VLN_srt+552
	.quad	70
	.quad	4611689866718085121
	.quad	32


==================== Asm code ====================
2018-03-16 15:57:34.890680335 UTC

.section .text
.align 8
_c38P7:
_c38P7:
	movq 8(%rbp),%rax
	movq $block_c38Pb_info,8(%rbp)
	movq %rax,%rsi
	movq 32(%rbp),%r14
	movq %rbx,32(%rbp)
	addq $8,%rbp
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c38P7, .-_c38P7


==================== Asm code ====================
2018-03-16 15:57:34.89129239 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38P7_info:
	.quad	_c38P7
	.quad	5
	.quad	-4294967266
	.quad	u38QZ_srtd


==================== Asm code ====================
2018-03-16 15:57:34.891834978 UTC

.section .data.rel.ro
.align 8
.align 1
u38R0_srtd:
	.quad	S2VLN_srt+552
	.quad	70
	.quad	4611689866718085121
	.quad	32


==================== Asm code ====================
2018-03-16 15:57:34.892528824 UTC

.section .text
.align 8
_c38Pb:
_c38Pb:
	movq 32(%rbp),%rax
	movq $block_c38Pf_info,32(%rbp)
	movq %rax,%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq %rbx,%rsi
	movl $GHC.Types.[]_closure+1,%r14d
	movq 8(%rbp),%rbx
	addq $32,%rbp
	jmp gen_s2Vmc_entry
	.size _c38Pb, .-_c38Pb


==================== Asm code ====================
2018-03-16 15:57:34.893150337 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38Pb_info:
	.quad	_c38Pb
	.quad	4
	.quad	-4294967266
	.quad	u38R0_srtd


==================== Asm code ====================
2018-03-16 15:57:34.89383671 UTC

.section .text
.align 8
_c38Pf:
_c38Pf:
	movq $block_c38Pj_info,(%rbp)
	movl $GHC.Types.[]_closure+1,%esi
	movq %rbx,%r14
	jmp GHC.List.reverse1_entry
	.size _c38Pf, .-_c38Pf


==================== Asm code ====================
2018-03-16 15:57:34.894423773 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38Pf_info:
	.quad	_c38Pf
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:34.895041044 UTC

.section .text
.align 8
_c38Pj:
_c38Pj:
	movq %rbx,%rsi
	movl $lvl8_r2UqG_closure+1,%r14d
	addq $8,%rbp
	jmp GHC.Base.map_entry
	.size _c38Pj, .-_c38Pj


==================== Asm code ====================
2018-03-16 15:57:34.895649305 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38Pj_info:
	.quad	_c38Pj
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:34.896216566 UTC

.section .data.rel.ro
.align 8
.align 1
u38R1_srtd:
	.quad	S2VLN_srt+552
	.quad	70
	.quad	4613941666531770369
	.quad	32


==================== Asm code ====================
2018-03-16 15:57:34.896894603 UTC

.section .text
.align 8
_c38Px:
_c38Px:
	movq 8(%rbp),%rax
	movq $block_c38PC_info,8(%rbp)
	movq %rax,%rsi
	movq 16(%rbp),%r14
	movq 31(%rbx),%rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp GHC.Float.$wexpt_entry
	.size _c38Px, .-_c38Px


==================== Asm code ====================
2018-03-16 15:57:34.897572424 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38Px_info:
	.quad	_c38Px
	.quad	70
	.quad	-4294967266
	.quad	u38R1_srtd


==================== Asm code ====================
2018-03-16 15:57:34.898150295 UTC

.section .data.rel.ro
.align 8
.align 1
u38R2_srtd:
	.quad	S2VLN_srt+552
	.quad	70
	.quad	4611689866718085121
	.quad	32


==================== Asm code ====================
2018-03-16 15:57:34.89878793 UTC

.section .text
.align 8
_c38PC:
_c38PC:
	movq $block_c38PG_info,(%rbp)
	movq %rbx,%rsi
	movq 24(%rbp),%r14
	jmp GHC.Integer.Type.timesInteger_entry
	.size _c38PC, .-_c38PC


==================== Asm code ====================
2018-03-16 15:57:34.89951556 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38PC_info:
	.quad	_c38PC
	.quad	5
	.quad	-4294967266
	.quad	u38R2_srtd


==================== Asm code ====================
2018-03-16 15:57:34.900080853 UTC

.section .data.rel.ro
.align 8
.align 1
u38R3_srtd:
	.quad	S2VLN_srt+552
	.quad	70
	.quad	4611689866718085121
	.quad	32


==================== Asm code ====================
2018-03-16 15:57:34.900777503 UTC

.section .text
.align 8
_c38PG:
_c38PG:
	movq 40(%rbp),%rax
	movq $block_c38PK_info,40(%rbp)
	movq 8(%rbp),%r9
	movq %rax,%r8
	movq %rbx,%rdi
	movq 32(%rbp),%rsi
	movl $GHC.Types.[]_closure+1,%r14d
	movq 16(%rbp),%rbx
	addq $40,%rbp
	jmp gen_s2Vmc_entry
	.size _c38PG, .-_c38PG


==================== Asm code ====================
2018-03-16 15:57:34.901510529 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38PG_info:
	.quad	_c38PG
	.quad	261
	.quad	-4294967266
	.quad	u38R3_srtd


==================== Asm code ====================
2018-03-16 15:57:34.90216594 UTC

.section .text
.align 8
_c38PK:
_c38PK:
	movq $block_c38PO_info,(%rbp)
	movl $GHC.Types.[]_closure+1,%esi
	movq %rbx,%r14
	jmp GHC.List.reverse1_entry
	.size _c38PK, .-_c38PK


==================== Asm code ====================
2018-03-16 15:57:34.902756063 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38PK_info:
	.quad	_c38PK
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:34.903383729 UTC

.section .text
.align 8
_c38PO:
_c38PO:
	movq %rbx,%rsi
	movl $lvl8_r2UqG_closure+1,%r14d
	addq $8,%rbp
	jmp GHC.Base.map_entry
	.size _c38PO, .-_c38PO


==================== Asm code ====================
2018-03-16 15:57:34.903959158 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38PO_info:
	.quad	_c38PO
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:34.904520413 UTC

.section .data.rel.ro
.align 8
.align 1
u38R4_srtd:
	.quad	S2VLN_srt+552
	.quad	71
	.quad	4613941666565324801
	.quad	96


==================== Asm code ====================
2018-03-16 15:57:34.905588953 UTC

.section .text
.align 8
.globl GHC.Float.$wfloatToDigits_entry
.type GHC.Float.$wfloatToDigits_entry, @object
GHC.Float.$wfloatToDigits_entry:
_c38Q1:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _c38Q2
_c38Q3:
	movq $block_c38CM_info,-32(%rbp)
	movq %r14,%rax
	movq %rax,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-32,%rbp
	jmp GHC.Float.$p1RealFloat_entry
_c38Q2:
	movl $GHC.Float.$wfloatToDigits_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$wfloatToDigits_entry, .-GHC.Float.$wfloatToDigits_entry


==================== Asm code ====================
2018-03-16 15:57:34.906285505 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$wfloatToDigits_info
.type GHC.Float.$wfloatToDigits_info, @object
GHC.Float.$wfloatToDigits_info:
	.quad	GHC.Float.$wfloatToDigits_entry
	.quad	0
	.quad	-4294967282
	.quad	12884901911
	.quad	u38R4_srtd


==================== Asm code ====================
2018-03-16 15:57:34.906865214 UTC

.section .data.rel.ro
.align 8
.align 1
u38R5_srtd:
	.quad	S2VLN_srt+552
	.quad	70
	.quad	4613941666565324801
	.quad	32


==================== Asm code ====================
2018-03-16 15:57:34.90749241 UTC

.section .text
.align 8
_c38CM:
_c38CM:
	movq $block_c38CQ_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p1RealFrac_entry
	.size _c38CM, .-_c38CM


==================== Asm code ====================
2018-03-16 15:57:34.908050785 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38CM_info:
	.quad	_c38CM
	.quad	3
	.quad	-4294967266
	.quad	u38R5_srtd


==================== Asm code ====================
2018-03-16 15:57:34.908648351 UTC

.section .data.rel.ro
.align 8
.align 1
u38R6_srtd:
	.quad	S2VLN_srt+552
	.quad	70
	.quad	4613941666565324801
	.quad	32


==================== Asm code ====================
2018-03-16 15:57:34.909488124 UTC

.section .text
.align 8
_c38CQ:
_c38CQ:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c38Q7
_c38Q6:
	movq $sat_s2VjR_info,-16(%r12)
	movq %rbx,(%r12)
	movq $block_c38D6_info,-8(%rbp)
	movq %rbx,%r14
	leaq -16(%r12),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp GHC.Real.$p2Real_entry
_c38Q7:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c38CQ, .-_c38CQ


==================== Asm code ====================
2018-03-16 15:57:34.910639716 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38CQ_info:
	.quad	_c38CQ
	.quad	3
	.quad	-4294967266
	.quad	u38R6_srtd


==================== Asm code ====================
2018-03-16 15:57:34.911218216 UTC

.section .data.rel.ro
.align 8
.align 1
u38R7_srtd:
	.quad	S2VLN_srt+552
	.quad	70
	.quad	4613941666565324801
	.quad	32


==================== Asm code ====================
2018-03-16 15:57:34.911849836 UTC

.section .text
.align 8
_c38D6:
_c38D6:
	movq $block_c38Da_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Classes.$p1Ord_entry
	.size _c38D6, .-_c38D6


==================== Asm code ====================
2018-03-16 15:57:34.912445893 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38D6_info:
	.quad	_c38D6
	.quad	4
	.quad	-4294967266
	.quad	u38R7_srtd


==================== Asm code ====================
2018-03-16 15:57:34.913040039 UTC

.section .data.rel.ro
.align 8
.align 1
u38R8_srtd:
	.quad	S2VLN_srt+552
	.quad	70
	.quad	4613941666565324801
	.quad	32


==================== Asm code ====================
2018-03-16 15:57:34.914090163 UTC

.section .text
.align 8
_c38Da:
_c38Da:
	movq 8(%rbp),%rax
	movq $block_c38De_info,8(%rbp)
	movq %rbx,%r14
	movq $stg_ap_pp_info,-16(%rbp)
	movq 32(%rbp),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp GHC.Classes.==_entry
	.size _c38Da, .-_c38Da


==================== Asm code ====================
2018-03-16 15:57:34.914696644 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38Da_info:
	.quad	_c38Da
	.quad	4
	.quad	-4294967266
	.quad	u38R8_srtd


==================== Asm code ====================
2018-03-16 15:57:34.91523371 UTC

.section .data.rel.ro
.align 8
.align 1
u38R9_srtd:
	.quad	S2VLN_srt+552
	.quad	70
	.quad	4613941666565324801
	.quad	32


==================== Asm code ====================
2018-03-16 15:57:34.916270497 UTC

.section .text
.align 8
_c38De:
_c38De:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c38Qb
_c38Qi:
	movl $GHC.Float.minExpt_closure+1,%r14d
	movl $lvl3_r2UpB_closure+2,%ebx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c38Qe:
	movq $480,904(%r13)
	jmp stg_gc_unpt_r1
_c38Qb:
	addq $480,%r12
	cmpq 856(%r13),%r12
	ja _c38Qe
_c38Qd:
	movq $b_s2VjT_info,-472(%r12)
	movq 8(%rbp),%rax
	movq %rax,-456(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-448(%r12)
	movq $p_s2VjU_info,-440(%r12)
	movq %rax,-424(%r12)
	movq %rbx,-416(%r12)
	movq $minExp_s2VjV_info,-408(%r12)
	movq %rax,-392(%r12)
	movq %rbx,-384(%r12)
	leaq -440(%r12),%rcx
	movq %rcx,-376(%r12)
	movq $ds_s2Vk4_info,-368(%r12)
	movq %rax,-352(%r12)
	movq %rbx,-344(%r12)
	movq $ds1_s2Vk5_info,-336(%r12)
	leaq -472(%r12),%rax
	movq %rax,-320(%r12)
	leaq -408(%r12),%rbx
	movq %rbx,-312(%r12)
	leaq -368(%r12),%rdx
	movq %rdx,-304(%r12)
	movq $stg_sel_0_upd_info,-296(%r12)
	leaq -336(%r12),%rsi
	movq %rsi,-280(%r12)
	movq $ds2_s2Vko_info,-272(%r12)
	movq %rax,-256(%r12)
	movq %rcx,-248(%r12)
	movq %rbx,-240(%r12)
	movq %rsi,-232(%r12)
	leaq -296(%r12),%rbx
	movq %rbx,-224(%r12)
	movq $stg_sel_1_upd_info,-216(%r12)
	leaq -272(%r12),%rdi
	movq %rdi,-200(%r12)
	movq $stg_sel_0_upd_info,-192(%r12)
	movq %rdi,-176(%r12)
	movq $stg_sel_2_upd_info,-168(%r12)
	movq %rdi,-152(%r12)
	movq $k_s2Vlj_info,-144(%r12)
	movq 16(%rbp),%r8
	movq %r8,-128(%r12)
	movq %rax,-120(%r12)
	movq %rcx,-112(%r12)
	movq %rdx,-104(%r12)
	movq %rsi,-96(%r12)
	movq %rbx,-88(%r12)
	leaq -216(%r12),%rax
	movq %rax,-80(%r12)
	leaq -192(%r12),%rbx
	movq %rbx,-72(%r12)
	leaq -168(%r12),%rcx
	movq %rcx,-64(%r12)
	movq $sat_s2VmW_info,-56(%r12)
	movq %r8,-40(%r12)
	movq %rdi,-32(%r12)
	movq %rax,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	leaq -144(%r12),%rax
	movq %rax,(%r12)
	movq %rax,%r14
	leaq -56(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c38De, .-_c38De


==================== Asm code ====================
2018-03-16 15:57:34.917430379 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38De_info:
	.quad	_c38De
	.quad	3
	.quad	-4294967266
	.quad	u38R9_srtd


==================== Asm code ====================
2018-03-16 15:57:34.920630281 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.floatToDigits_closure
.type GHC.Float.floatToDigits_closure, @object
GHC.Float.floatToDigits_closure:
	.quad	GHC.Float.floatToDigits_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:34.921866545 UTC

.section .text
.align 8
.globl GHC.Float.floatToDigits_entry
.type GHC.Float.floatToDigits_entry, @object
GHC.Float.floatToDigits_entry:
_c38YT:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c38YU
_c38YV:
	movq $block_c38YQ_info,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Float.$wfloatToDigits_entry
_c38YU:
	movl $GHC.Float.floatToDigits_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.floatToDigits_entry, .-GHC.Float.floatToDigits_entry


==================== Asm code ====================
2018-03-16 15:57:34.922487367 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.floatToDigits_info
.type GHC.Float.floatToDigits_info, @object
GHC.Float.floatToDigits_info:
	.quad	GHC.Float.floatToDigits_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	S2VLN_srt+1112


==================== Asm code ====================
2018-03-16 15:57:34.92323084 UTC

.section .text
.align 8
_c38YQ:
_c38YQ:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c38YY
_c38YX:
	movq $(,)_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c38YY:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c38YQ, .-_c38YQ


==================== Asm code ====================
2018-03-16 15:57:34.923851144 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38YQ_info:
	.quad	_c38YQ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:34.925587952 UTC

.section .data
.align 8
.align 1
base_r2UqK_closure:
	.quad	GHC.Types.I#_con_info
	.quad	10


==================== Asm code ====================
2018-03-16 15:57:34.927194908 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl12_r2UqL_bytes:
	.asciz "formatRealFloat/doFmt/FFExponent: []"


==================== Asm code ====================
2018-03-16 15:57:34.930138794 UTC

.section .data
.align 8
.align 1
lvl13_r2UqM_closure:
	.quad	lvl13_r2UqM_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:34.930993779 UTC

.section .text
.align 8
lvl13_r2UqM_entry:
_c38Zi:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c38Zj
_c38Zk:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c38Zf
_c38Ze:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movq $block_c38Zg_info,-24(%rbp)
	movl $lvl12_r2UqL_bytes,%r14d
	addq $-24,%rbp
	jmp GHC.CString.unpackCString#_entry
_c38Zj:
	jmp *-16(%r13)
_c38Zf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl13_r2UqM_entry, .-lvl13_r2UqM_entry


==================== Asm code ====================
2018-03-16 15:57:34.931679356 UTC

.section .data.rel.ro
.align 8
.align 1
lvl13_r2UqM_info:
	.quad	lvl13_r2UqM_entry
	.quad	0
	.quad	4294967317
	.quad	S2VLN_srt+1128


==================== Asm code ====================
2018-03-16 15:57:34.932302958 UTC

.section .text
.align 8
_c38Zg:
_c38Zg:
	movq %rbx,%r14
	addq $8,%rbp
	jmp GHC.Err.errorWithoutStackTrace_entry
	.size _c38Zg, .-_c38Zg


==================== Asm code ====================
2018-03-16 15:57:34.932909316 UTC

.section .data.rel.ro
.align 8
.align 1
block_c38Zg_info:
	.quad	_c38Zg
	.quad	0
	.quad	4294967326
	.quad	S2VLN_srt+1128


==================== Asm code ====================
2018-03-16 15:57:34.935088099 UTC

.section .data
.align 8
.align 1
lvl14_r2UqN_closure:
	.quad	GHC.Types.C#_con_info
	.quad	46


==================== Asm code ====================
2018-03-16 15:57:34.936846437 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl15_r2UqO_bytes:
	.asciz "0.0e0"


==================== Asm code ====================
2018-03-16 15:57:34.940045966 UTC

.section .data
.align 8
.align 1
lvl16_r2UqP_closure:
	.quad	lvl16_r2UqP_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:34.940966747 UTC

.section .text
.align 8
lvl16_r2UqP_entry:
_c38ZG:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c38ZH
_c38ZI:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c38ZF
_c38ZE:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl15_r2UqO_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c38ZH:
	jmp *-16(%r13)
_c38ZF:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl16_r2UqP_entry, .-lvl16_r2UqP_entry


==================== Asm code ====================
2018-03-16 15:57:34.94239027 UTC

.section .data.rel.ro
.align 8
.align 1
lvl16_r2UqP_info:
	.quad	lvl16_r2UqP_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:57:34.944079899 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl17_r2UqQ_bytes:
	.asciz "GHC/Float.hs:692:12-70|d : ds'"


==================== Asm code ====================
2018-03-16 15:57:34.946702729 UTC

.section .data
.align 8
.align 1
lvl18_r2UqR_closure:
	.quad	lvl18_r2UqR_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:34.947559018 UTC

.section .text
.align 8
lvl18_r2UqR_entry:
_c38ZX:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c38ZY
_c38ZZ:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c38ZW
_c38ZV:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl17_r2UqQ_bytes,%r14d
	addq $-16,%rbp
	jmp Control.Exception.Base.patError_entry
_c38ZY:
	jmp *-16(%r13)
_c38ZW:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl18_r2UqR_entry, .-lvl18_r2UqR_entry


==================== Asm code ====================
2018-03-16 15:57:34.948247952 UTC

.section .data.rel.ro
.align 8
.align 1
lvl18_r2UqR_info:
	.quad	lvl18_r2UqR_entry
	.quad	0
	.quad	4294967317
	.quad	S2VLN_srt+1136


==================== Asm code ====================
2018-03-16 15:57:34.949958051 UTC

.section .data
.align 8
.align 1
lvl19_r2UqS_closure:
	.quad	GHC.Types.C#_con_info
	.quad	101


==================== Asm code ====================
2018-03-16 15:57:34.951650867 UTC

.section .data
.align 8
.align 1
lvl20_r2UqT_closure:
	.quad	GHC.Types.C#_con_info
	.quad	48


==================== Asm code ====================
2018-03-16 15:57:34.953230208 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl21_r2UqU_bytes:
	.asciz "e0"


==================== Asm code ====================
2018-03-16 15:57:34.954934812 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl22_r2UqV_bytes:
	.asciz "0"


==================== Asm code ====================
2018-03-16 15:57:34.957864891 UTC

.section .data
.align 8
.align 1
lvl23_r2UqW_closure:
	.quad	lvl23_r2UqW_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:34.958783418 UTC

.section .text
.align 8
lvl23_r2UqW_entry:
_c390h:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c390i
_c390j:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c390g
_c390f:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl22_r2UqV_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c390i:
	jmp *-16(%r13)
_c390g:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl23_r2UqW_entry, .-lvl23_r2UqW_entry


==================== Asm code ====================
2018-03-16 15:57:34.959643774 UTC

.section .data.rel.ro
.align 8
.align 1
lvl23_r2UqW_info:
	.quad	lvl23_r2UqW_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:57:34.968541798 UTC

.section .data
.align 8
.align 1
$wf_r2UqX_closure:
	.quad	$wf_r2UqX_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:34.969416444 UTC

.section .text
.align 8
sat_s2Vnj_entry:
_c390W:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c390X
_c390Y:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c390P_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _c390P
_c390Q:
	movq (%rbx),%rax
	jmp *(%rax)
_c390X:
	jmp *-16(%r13)
	.size sat_s2Vnj_entry, .-sat_s2Vnj_entry


==================== Asm code ====================
2018-03-16 15:57:34.970057009 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Vnj_info:
	.quad	sat_s2Vnj_entry
	.quad	1
	.quad	4294967312
	.quad	S2VLN_srt+1144


==================== Asm code ====================
2018-03-16 15:57:34.970753316 UTC

.section .text
.align 8
_c390P:
_c390P:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c390T
_c390U:
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c390T:
	movl $lvl23_r2UqW_closure,%ebx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c390P, .-_c390P


==================== Asm code ====================
2018-03-16 15:57:34.971444228 UTC

.section .data.rel.ro
.align 8
.align 1
block_c390P_info:
	.quad	_c390P
	.quad	0
	.quad	4294967326
	.quad	S2VLN_srt+1144


==================== Asm code ====================
2018-03-16 15:57:34.972109621 UTC

.section .text
.align 8
sat_s2Vnq_entry:
_c391j:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c391k
_c391l:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c391c_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _c391c
_c391d:
	movq (%rbx),%rax
	jmp *(%rax)
_c391k:
	jmp *-16(%r13)
	.size sat_s2Vnq_entry, .-sat_s2Vnq_entry


==================== Asm code ====================
2018-03-16 15:57:34.972760068 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Vnq_info:
	.quad	sat_s2Vnq_entry
	.quad	1
	.quad	4294967312
	.quad	S2VLN_srt+1144


==================== Asm code ====================
2018-03-16 15:57:34.973966846 UTC

.section .text
.align 8
_c391c:
_c391c:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c391g
_c391h:
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c391g:
	movl $lvl23_r2UqW_closure,%ebx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c391c, .-_c391c


==================== Asm code ====================
2018-03-16 15:57:34.974611318 UTC

.section .data.rel.ro
.align 8
.align 1
block_c391c_info:
	.quad	_c391c
	.quad	0
	.quad	4294967326
	.quad	S2VLN_srt+1144


==================== Asm code ====================
2018-03-16 15:57:34.975333146 UTC

.section .text
.align 8
$wf_r2UqX_entry:
_c391w:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c391x
_u391X:
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	jmp _c390s
_c391x:
	movl $$wf_r2UqX_closure,%ebx
	jmp *-8(%r13)
	.size $wf_r2UqX_entry, .-$wf_r2UqX_entry


==================== Asm code ====================
2018-03-16 15:57:34.975962358 UTC

.section .data.rel.ro
.align 8
.align 1
$wf_r2UqX_info:
	.quad	$wf_r2UqX_entry
	.quad	0
	.quad	12884901902
	.quad	12884901907
	.quad	S2VLN_srt+1144


==================== Asm code ====================
2018-03-16 15:57:34.976717471 UTC

.section .text
.align 8
_c390s:
_c390s:
	movq (%rbp),%rax
	testq %rax,%rax
	jne _c391u
_c391v:
	movq 8(%rbp),%rax
	movq $block_c390H_info,8(%rbp)
	movl $GHC.Types.[]_closure+1,%esi
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.List.reverse1_entry
_c391u:
	movq $block_c390x_info,(%rbp)
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c390x
_c390y:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c390s, .-_c390s


==================== Asm code ====================
2018-03-16 15:57:34.977702021 UTC

.section .text
.align 8
_c390x:
_c390x:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rcx
	movq %rbx,%rdx
	andl $7,%edx
	cmpq $1,%rdx
	je _c391A
_c391E:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c391H
_c391G:
	movq 6(%rbx),%rdx
	movq 14(%rbx),%rbx
	movq $:_con_info,-16(%r12)
	movq %rdx,-8(%r12)
	movq %rax,(%r12)
	leaq -1(%rcx),%rax
	movq %rax,(%rbp)
	leaq -14(%r12),%rax
	movq %rax,8(%rbp)
	movq %rbx,16(%rbp)
	jmp _c390s
_c391H:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_c391A:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c391H
_c391C:
	movq $:_con_info,-16(%r12)
	movq $lvl20_r2UqT_closure+1,-8(%r12)
	movq %rax,(%r12)
	leaq -1(%rcx),%rax
	movq %rax,(%rbp)
	leaq -14(%r12),%rax
	movq %rax,8(%rbp)
	movq $GHC.Types.[]_closure+1,16(%rbp)
	jmp _c390s
	.size _c390x, .-_c390x


==================== Asm code ====================
2018-03-16 15:57:34.978479272 UTC

.section .data.rel.ro
.align 8
.align 1
block_c390x_info:
	.quad	_c390x
	.quad	130
	.quad	4294967326
	.quad	S2VLN_srt+1144


==================== Asm code ====================
2018-03-16 15:57:34.979319236 UTC

.section .text
.align 8
_c390H:
_c390H:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c391K
_c391P:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c391S
_c391R:
	movq $sat_s2Vnq_info,-40(%r12)
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	movq $lvl14_r2UqN_closure+1,-8(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rsi
	movq %rbx,%r14
	addq $16,%rbp
	jmp GHC.Base.++_entry
_c391S:
	movq $48,904(%r13)
	jmp stg_gc_unpt_r1
_c391K:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c391S
_c391M:
	movq $sat_s2Vnj_info,-40(%r12)
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	movq $lvl14_r2UqN_closure+1,-8(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rsi
	movl $lvl23_r2UqW_closure,%r14d
	addq $16,%rbp
	jmp GHC.Base.++_entry
	.size _c390H, .-_c390H


==================== Asm code ====================
2018-03-16 15:57:34.980115739 UTC

.section .data.rel.ro
.align 8
.align 1
block_c390H_info:
	.quad	_c390H
	.quad	1
	.quad	4294967326
	.quad	S2VLN_srt+1144


==================== Asm code ====================
2018-03-16 15:57:34.981910014 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl24_r2UqY_bytes:
	.asciz "GHC/Float.hs:720:11-64|d : ds'"


==================== Asm code ====================
2018-03-16 15:57:34.984574665 UTC

.section .data
.align 8
.align 1
lvl25_r2UqZ_closure:
	.quad	lvl25_r2UqZ_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:34.985903968 UTC

.section .text
.align 8
lvl25_r2UqZ_entry:
_c392Z:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3930
_c3931:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c392Y
_c392X:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl24_r2UqY_bytes,%r14d
	addq $-16,%rbp
	jmp Control.Exception.Base.patError_entry
_c3930:
	jmp *-16(%r13)
_c392Y:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl25_r2UqZ_entry, .-lvl25_r2UqZ_entry


==================== Asm code ====================
2018-03-16 15:57:34.986564518 UTC

.section .data.rel.ro
.align 8
.align 1
lvl25_r2UqZ_info:
	.quad	lvl25_r2UqZ_entry
	.quad	0
	.quad	4294967317
	.quad	S2VLN_srt+1136


==================== Asm code ====================
2018-03-16 15:57:34.988196534 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl26_r2Ur0_bytes:
	.asciz "Infinity"


==================== Asm code ====================
2018-03-16 15:57:34.990936021 UTC

.section .data
.align 8
.align 1
lvl27_r2Ur1_closure:
	.quad	lvl27_r2Ur1_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:34.991860502 UTC

.section .text
.align 8
lvl27_r2Ur1_entry:
_c393g:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c393h
_c393i:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c393f
_c393e:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl26_r2Ur0_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c393h:
	jmp *-16(%r13)
_c393f:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl27_r2Ur1_entry, .-lvl27_r2Ur1_entry


==================== Asm code ====================
2018-03-16 15:57:34.992557083 UTC

.section .data.rel.ro
.align 8
.align 1
lvl27_r2Ur1_info:
	.quad	lvl27_r2Ur1_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:57:34.994815029 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl28_r2Ur2_bytes:
	.asciz "-Infinity"


==================== Asm code ====================
2018-03-16 15:57:34.997435259 UTC

.section .data
.align 8
.align 1
lvl29_r2Ur3_closure:
	.quad	lvl29_r2Ur3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:34.998258363 UTC

.section .text
.align 8
lvl29_r2Ur3_entry:
_c393x:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c393y
_c393z:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c393w
_c393v:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl28_r2Ur2_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c393y:
	jmp *-16(%r13)
_c393w:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl29_r2Ur3_entry, .-lvl29_r2Ur3_entry


==================== Asm code ====================
2018-03-16 15:57:34.998897006 UTC

.section .data.rel.ro
.align 8
.align 1
lvl29_r2Ur3_info:
	.quad	lvl29_r2Ur3_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:57:35.000404707 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl30_r2Ur4_bytes:
	.asciz "NaN"


==================== Asm code ====================
2018-03-16 15:57:35.002882548 UTC

.section .data
.align 8
.align 1
lvl31_r2Ur5_closure:
	.quad	lvl31_r2Ur5_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:35.003717605 UTC

.section .text
.align 8
lvl31_r2Ur5_entry:
_c393O:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c393P
_c393Q:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c393N
_c393M:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl30_r2Ur4_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c393P:
	jmp *-16(%r13)
_c393N:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl31_r2Ur5_entry, .-lvl31_r2Ur5_entry


==================== Asm code ====================
2018-03-16 15:57:35.004319269 UTC

.section .data.rel.ro
.align 8
.align 1
lvl31_r2Ur5_info:
	.quad	lvl31_r2Ur5_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:57:35.0058607 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl32_r2Ur6_bytes:
	.asciz ".0e"


==================== Asm code ====================
2018-03-16 15:57:35.007351361 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl33_r2Ur7_bytes:
	.asciz "e"


==================== Asm code ====================
2018-03-16 15:57:35.010248164 UTC

.section .data
.align 8
.align 1
lvl34_r2Ur8_closure:
	.quad	lvl34_r2Ur8_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:35.011150363 UTC

.section .text
.align 8
lvl34_r2Ur8_entry:
_c3946:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3947
_c3948:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF
	addq $8,%rsp
	testq %rax,%rax
	je _c3945
_c3944:
	movq $stg_bh_upd_frame_info,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $lvl21_r2UqU_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackCString#_entry
_c3947:
	jmp *-16(%r13)
_c3945:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl34_r2Ur8_entry, .-lvl34_r2Ur8_entry


==================== Asm code ====================
2018-03-16 15:57:35.011852654 UTC

.section .data.rel.ro
.align 8
.align 1
lvl34_r2Ur8_info:
	.quad	lvl34_r2Ur8_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:57:35.013578904 UTC

.section .data
.align 8
.align 1
lvl35_r2Ur9_closure:
	.quad	:_con_info
	.quad	lvl20_r2UqT_closure+1
	.quad	lvl34_r2Ur8_closure
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:35.017352794 UTC

.section .data
.align 8
.align 1
$wxs1_r2Ura_closure:
	.quad	$wxs1_r2Ura_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:35.018133881 UTC

.section .text
.align 8
sat_s2Vnv_entry:
_c394t:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c394u
_c394v:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	leaq -1(%rax),%r14
	addq $-16,%rbp
	jmp $wxs1_r2Ura_entry
_c394u:
	jmp *-16(%r13)
	.size sat_s2Vnv_entry, .-sat_s2Vnv_entry


==================== Asm code ====================
2018-03-16 15:57:35.018864989 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Vnv_info:
	.quad	sat_s2Vnv_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S2VLN_srt+1160


==================== Asm code ====================
2018-03-16 15:57:35.019618617 UTC

.section .text
.align 8
$wxs1_r2Ura_entry:
_c394z:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c394D
_c394C:
	cmpq $1,%r14
	je _c394y
_c394x:
	movq $sat_s2Vnv_info,-40(%r12)
	movq %r14,-24(%r12)
	movq $:_con_info,-16(%r12)
	movq $lvl20_r2UqT_closure+1,-8(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c394D:
	movq $48,904(%r13)
	movl $$wxs1_r2Ura_closure,%ebx
	jmp *-8(%r13)
_c394y:
	addq $-48,%r12
	movl $lvl35_r2Ur9_closure+2,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size $wxs1_r2Ura_entry, .-$wxs1_r2Ura_entry


==================== Asm code ====================
2018-03-16 15:57:35.020353042 UTC

.section .data.rel.ro
.align 8
.align 1
$wxs1_r2Ura_info:
	.quad	$wxs1_r2Ura_entry
	.quad	0
	.quad	12884901902
	.quad	4294967300
	.quad	S2VLN_srt+1160


==================== Asm code ====================
2018-03-16 15:57:35.023022688 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl36_r2Urb_bytes:
	.asciz "0."


==================== Asm code ====================
2018-03-16 15:57:35.028370401 UTC

.section .data
.align 8
.align 1
$j_r2Urc_closure:
	.quad	$j_r2Urc_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:35.029146138 UTC

.section .text
.align 8
$j_r2Urc_entry:
_c394Z:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3950
_c3951:
	movq $block_c394W_info,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c394W
_c394X:
	movq (%rbx),%rax
	jmp *(%rax)
_c3950:
	movl $$j_r2Urc_closure,%ebx
	jmp *-8(%r13)
	.size $j_r2Urc_entry, .-$j_r2Urc_entry


==================== Asm code ====================
2018-03-16 15:57:35.029813458 UTC

.section .data.rel.ro
.align 8
.align 1
$j_r2Urc_info:
	.quad	$j_r2Urc_entry
	.quad	0
	.quad	30064771086
	.quad	8589934607
	.quad	S2VLN_srt+1176


==================== Asm code ====================
2018-03-16 15:57:35.030615311 UTC

.section .text
.align 8
_c394W:
_c394W:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3956
_c3955:
	movq 8(%rbp),%rax
	cmpq $0,7(%rbx)
	jle _c395d
_c395t:
	addq $-24,%r12
	movq $block_c395s_info,8(%rbp)
	movq %rax,%rsi
	movl $GHC.Show.intToDigit_closure+1,%r14d
	addq $8,%rbp
	jmp GHC.Base.map_entry
_c395d:
	movq $:_con_info,-16(%r12)
	movq $GHC.Float.minExpt_closure+1,-8(%r12)
	movq %rax,(%r12)
	movq $block_c395b_info,8(%rbp)
	leaq -14(%r12),%rsi
	movl $GHC.Show.intToDigit_closure+1,%r14d
	addq $8,%rbp
	jmp GHC.Base.map_entry
_c3956:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c394W, .-_c394W


==================== Asm code ====================
2018-03-16 15:57:35.031405923 UTC

.section .data.rel.ro
.align 8
.align 1
block_c394W_info:
	.quad	_c394W
	.quad	1
	.quad	12884901918
	.quad	S2VLN_srt+1176


==================== Asm code ====================
2018-03-16 15:57:35.032200098 UTC

.section .text
.align 8
_c395b:
_c395b:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _u395J
_c395n:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c395q
_c395p:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq $(,)_con_info,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u395J:
	addq $8,%rbp
	jmp _c395z
_c395q:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c395b, .-_c395b


==================== Asm code ====================
2018-03-16 15:57:35.03284046 UTC

.section .data.rel.ro
.align 8
.align 1
block_c395b_info:
	.quad	_c395b
	.quad	0
	.quad	4294967326
	.quad	S2VLN_srt+1184


==================== Asm code ====================
2018-03-16 15:57:35.033693091 UTC

.section .text
.align 8
_c395s:
_c395s:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _u395K
_c395D:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c395G
_c395F:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq $(,)_con_info,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u395K:
	addq $8,%rbp
	jmp _c395z
_c395G:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c395s, .-_c395s


==================== Asm code ====================
2018-03-16 15:57:35.034346221 UTC

.section .data.rel.ro
.align 8
.align 1
block_c395s_info:
	.quad	_c395s
	.quad	0
	.quad	4294967326
	.quad	S2VLN_srt+1184


==================== Asm code ====================
2018-03-16 15:57:35.034952802 UTC

.section .text
.align 8
_c395z:
_c395z:
	movl $lvl25_r2UqZ_closure,%ebx
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c395z, .-_c395z


==================== Asm code ====================
2018-03-16 15:57:35.036732668 UTC

.section .data
.align 8
.align 1
lvl37_r2Urd_closure:
	.quad	:_con_info
	.quad	lvl14_r2UqN_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:35.126929093 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$w$sformatRealFloatAlt1_closure
.type GHC.Float.$w$sformatRealFloatAlt1_closure, @object
GHC.Float.$w$sformatRealFloatAlt1_closure:
	.quad	GHC.Float.$w$sformatRealFloatAlt1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:35.127775862 UTC

.section .text
.align 8
.globl GHC.Float.$w$sformatRealFloatAlt1_slow
.type GHC.Float.$w$sformatRealFloatAlt1_slow, @object
GHC.Float.$w$sformatRealFloatAlt1_slow:
_c396e:
	movss 24(%rbp),%xmm1
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $32,%rbp
	jmp GHC.Float.$w$sformatRealFloatAlt1_entry
	.size GHC.Float.$w$sformatRealFloatAlt1_slow, .-GHC.Float.$w$sformatRealFloatAlt1_slow


==================== Asm code ====================
2018-03-16 15:57:35.128606188 UTC

.section .text
.align 8
show_e'_s2Voa_entry:
_c3973:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c397c
_c397d:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c3970_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _c3970
_c3971:
	movq (%rbx),%rax
	jmp *(%rax)
_c397c:
	jmp *-16(%r13)
	.size show_e'_s2Voa_entry, .-show_e'_s2Voa_entry


==================== Asm code ====================
2018-03-16 15:57:35.129308496 UTC

.section .data.rel.ro
.align 8
.align 1
show_e'_s2Voa_info:
	.quad	show_e'_s2Voa_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:35.130006569 UTC

.section .text
.align 8
_c3970:
_c3970:
	movq $block_c3979_info,(%rbp)
	movl $GHC.Types.[]_closure+1,%edi
	movq 7(%rbx),%rax
	leaq -1(%rax),%rsi
	xorl %r14d,%r14d
	jmp GHC.Show.$wshowSignedInt_entry
	.size _c3970, .-_c3970


==================== Asm code ====================
2018-03-16 15:57:35.130807012 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3970_info:
	.quad	_c3970
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.131573528 UTC

.section .text
.align 8
_c3979:
_c3979:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c397h
_c397g:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c397h:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c3979, .-_c3979


==================== Asm code ====================
2018-03-16 15:57:35.132192297 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3979_info:
	.quad	_c3979
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.13295802 UTC

.section .text
.align 8
sat_s2Voi_entry:
_c397s:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c397t
_c397u:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rsi
	movl $lvl32_r2Ur6_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackAppendCString#_entry
_c397t:
	jmp *-16(%r13)
	.size sat_s2Voi_entry, .-sat_s2Voi_entry


==================== Asm code ====================
2018-03-16 15:57:35.133704742 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Voi_info:
	.quad	sat_s2Voi_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:35.134304552 UTC

.section .text
.align 8
sat_s2Vol_entry:
_c397F:
	movq 16(%rbx),%rsi
	movl $lvl33_r2Ur7_bytes,%r14d
	jmp GHC.CString.unpackAppendCString#_entry
	.size sat_s2Vol_entry, .-sat_s2Vol_entry


==================== Asm code ====================
2018-03-16 15:57:35.135418067 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Vol_info:
	.quad	sat_s2Vol_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:35.136316136 UTC

.section .text
.align 8
sat_s2Vom_entry:
_c397I:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c397J
_c397K:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c397M
_c397L:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $sat_s2Vol_info,-16(%r12)
	movq %rax,(%r12)
	leaq -16(%r12),%rsi
	movq %rbx,%r14
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_c397M:
	movq $24,904(%r13)
_c397J:
	jmp *-16(%r13)
	.size sat_s2Vom_entry, .-sat_s2Vom_entry


==================== Asm code ====================
2018-03-16 15:57:35.136985605 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Vom_info:
	.quad	sat_s2Vom_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:35.137710661 UTC

.section .text
.align 8
dec'_s2Vot_entry:
_c397W:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c397X
_c397Y:
	movq $block_c397T_info,-8(%rbp)
	movq 16(%rbx),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c397T
_c397U:
	movq (%rbx),%rax
	jmp *(%rax)
_c397X:
	jmp *-16(%r13)
	.size dec'_s2Vot_entry, .-dec'_s2Vot_entry


==================== Asm code ====================
2018-03-16 15:57:35.138345144 UTC

.section .data.rel.ro
.align 8
.align 1
dec'_s2Vot_info:
	.quad	dec'_s2Vot_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:35.139056973 UTC

.section .text
.align 8
_c397T:
_c397T:
	cmpq $1,7(%rbx)
	jg _c3985
_c3986:
	movl $GHC.Float.$fRealFracFloat2_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3985:
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c397T, .-_c397T


==================== Asm code ====================
2018-03-16 15:57:35.139666624 UTC

.section .data.rel.ro
.align 8
.align 1
block_c397T_info:
	.quad	_c397T
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.140323773 UTC

.section .text
.align 8
sat_s2VoD_entry:
_c398n:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c398u
_c398v:
	movq $block_c398l_info,-8(%rbp)
	movq 16(%rbx),%rbx
	addq $-8,%rbp
	jmp dec'_s2Vot_entry
_c398u:
	jmp *-16(%r13)
	.size sat_s2VoD_entry, .-sat_s2VoD_entry


==================== Asm code ====================
2018-03-16 15:57:35.140961699 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2VoD_info:
	.quad	sat_s2VoD_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:35.141883517 UTC

.section .text
.align 8
_c398l:
_c398l:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c398y
_c398x:
	movq 7(%rbx),%rax
	incq %rax
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c398y:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c398l, .-_c398l


==================== Asm code ====================
2018-03-16 15:57:35.142496557 UTC

.section .data.rel.ro
.align 8
.align 1
block_c398l_info:
	.quad	_c398l
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.143274336 UTC

.section .text
.align 8
ds5_s2Voz_entry:
_c398C:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c398D
_c398E:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c398G
_c398F:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $sat_s2VoD_info,-16(%r12)
	movq %rbx,(%r12)
	movq $block_c398z_info,-24(%rbp)
	movq %rax,%rdi
	leaq -16(%r12),%rsi
	movl $base_r2UqK_closure+1,%r14d
	addq $-24,%rbp
	jmp GHC.Float.$wroundTo_entry
_c398G:
	movq $24,904(%r13)
_c398D:
	jmp *-16(%r13)
	.size ds5_s2Voz_entry, .-ds5_s2Voz_entry


==================== Asm code ====================
2018-03-16 15:57:35.143952449 UTC

.section .data.rel.ro
.align 8
.align 1
ds5_s2Voz_info:
	.quad	ds5_s2Voz_entry
	.quad	2
	.quad	4294967314
	.quad	S2VLN_srt+1200


==================== Asm code ====================
2018-03-16 15:57:35.144691825 UTC

.section .text
.align 8
_c398z:
_c398z:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c398J
_c398I:
	movq $(,)_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c398J:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c398z, .-_c398z


==================== Asm code ====================
2018-03-16 15:57:35.145374945 UTC

.section .data.rel.ro
.align 8
.align 1
block_c398z_info:
	.quad	_c398z
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.146064766 UTC

.section .text
.align 8
ds6_s2VoH_entry:
_c398R:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c398V
_c398W:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c398O_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _c398O
_c398P:
	movq (%rbx),%rax
	jmp *(%rax)
_c398V:
	jmp *-16(%r13)
	.size ds6_s2VoH_entry, .-ds6_s2VoH_entry


==================== Asm code ====================
2018-03-16 15:57:35.146706992 UTC

.section .data.rel.ro
.align 8
.align 1
ds6_s2VoH_info:
	.quad	ds6_s2VoH_entry
	.quad	1
	.quad	210453397520
	.quad	S2VLN_srt+1176


==================== Asm code ====================
2018-03-16 15:57:35.147400995 UTC

.section .text
.align 8
_c398O:
_c398O:
	movq $block_c398U_info,-8(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c398U
_c398Y:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c398O, .-_c398O


==================== Asm code ====================
2018-03-16 15:57:35.148219649 UTC

.section .data.rel.ro
.align 8
.align 1
block_c398O_info:
	.quad	_c398O
	.quad	0
	.quad	210453397534
	.quad	S2VLN_srt+1176


==================== Asm code ====================
2018-03-16 15:57:35.149018728 UTC

.section .text
.align 8
_c398U:
_c398U:
	movq 8(%rbp),%rax
	cmpq $0,7(%rbx)
	jle _c3998
_c399o:
	movq $block_c399n_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c399n
_c399p:
	movq (%rbx),%rax
	jmp *(%rax)
_c3998:
	movq $block_c3996_info,8(%rbp)
	movq %rax,%rsi
	movl $GHC.Show.intToDigit_closure+1,%r14d
	addq $8,%rbp
	jmp GHC.Base.map_entry
	.size _c398U, .-_c398U


==================== Asm code ====================
2018-03-16 15:57:35.149736456 UTC

.section .data.rel.ro
.align 8
.align 1
block_c398U_info:
	.quad	_c398U
	.quad	1
	.quad	210453397534
	.quad	S2VLN_srt+1176


==================== Asm code ====================
2018-03-16 15:57:35.150604948 UTC

.section .text
.align 8
_c3996:
_c3996:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _u399W
_c399i:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c399l
_c399k:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq $(,)_con_info,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u399W:
	addq $8,%rbp
	jmp _c399L
_c399l:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c3996, .-_c3996


==================== Asm code ====================
2018-03-16 15:57:35.151277737 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3996_info:
	.quad	_c3996
	.quad	0
	.quad	4294967326
	.quad	S2VLN_srt+1216


==================== Asm code ====================
2018-03-16 15:57:35.151992011 UTC

.section .text
.align 8
_c399n:
_c399n:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c399v
_c399A:
	movq $block_c399y_info,(%rbp)
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp GHC.List.init1_entry
_c399v:
	movl $GHC.List.init2_closure,%ebx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c399n, .-_c399n


==================== Asm code ====================
2018-03-16 15:57:35.152630922 UTC

.section .data.rel.ro
.align 8
.align 1
block_c399n_info:
	.quad	_c399n
	.quad	0
	.quad	210453397534
	.quad	S2VLN_srt+1176


==================== Asm code ====================
2018-03-16 15:57:35.153312567 UTC

.section .text
.align 8
_c399y:
_c399y:
	movq $block_c399E_info,(%rbp)
	movq %rbx,%rsi
	movl $GHC.Show.intToDigit_closure+1,%r14d
	jmp GHC.Base.map_entry
	.size _c399y, .-_c399y


==================== Asm code ====================
2018-03-16 15:57:35.154004314 UTC

.section .data.rel.ro
.align 8
.align 1
block_c399y_info:
	.quad	_c399y
	.quad	0
	.quad	141733920798
	.quad	S2VLN_srt+1176


==================== Asm code ====================
2018-03-16 15:57:35.154762224 UTC

.section .text
.align 8
_c399E:
_c399E:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _u399X
_c399P:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c399S
_c399R:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq $(,)_con_info,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u399X:
	addq $8,%rbp
	jmp _c399L
_c399S:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c399E, .-_c399E


==================== Asm code ====================
2018-03-16 15:57:35.155451617 UTC

.section .data.rel.ro
.align 8
.align 1
block_c399E_info:
	.quad	_c399E
	.quad	0
	.quad	4294967326
	.quad	S2VLN_srt+1216


==================== Asm code ====================
2018-03-16 15:57:35.156087853 UTC

.section .text
.align 8
_c399L:
_c399L:
	movl $lvl18_r2UqR_closure,%ebx
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c399L, .-_c399L


==================== Asm code ====================
2018-03-16 15:57:35.156899542 UTC

.section .text
.align 8
sat_s2Vpi_entry:
_c39aj:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c39aF
_c39aG:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c39ag_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c39ag
_c39ah:
	movq (%rbx),%rax
	jmp *(%rax)
_c39aF:
	jmp *-16(%r13)
	.size sat_s2Vpi_entry, .-sat_s2Vpi_entry


==================== Asm code ====================
2018-03-16 15:57:35.157631558 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Vpi_info:
	.quad	sat_s2Vpi_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:35.158413884 UTC

.section .text
.align 8
_c39ag:
_c39ag:
	movq $block_c39am_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c39am
_c39an:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c39ag, .-_c39ag


==================== Asm code ====================
2018-03-16 15:57:35.159020423 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39ag_info:
	.quad	_c39ag
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.159702571 UTC

.section .text
.align 8
_c39am:
_c39am:
	movq $block_c39ar_info,(%rbp)
	movq 7(%rbx),%rbx
	testb $7,%bl
	jne _c39ar
_c39as:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c39am, .-_c39am


==================== Asm code ====================
2018-03-16 15:57:35.160311752 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39am_info:
	.quad	_c39am
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.161058383 UTC

.section .text
.align 8
_c39ar:
_c39ar:
	movq 7(%rbx),%rax
	decq %rax
	movq 8(%rbp),%rbx
	addq %rax,%rbx
	movq $block_c39aC_info,8(%rbp)
	movl $GHC.Types.[]_closure+1,%edi
	movq %rbx,%rsi
	xorl %r14d,%r14d
	addq $8,%rbp
	jmp GHC.Show.$wshowSignedInt_entry
	.size _c39ar, .-_c39ar


==================== Asm code ====================
2018-03-16 15:57:35.162405571 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39ar_info:
	.quad	_c39ar
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.1632052 UTC

.section .text
.align 8
_c39aC:
_c39aC:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c39aM
_c39aL:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c39aM:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c39aC, .-_c39aC


==================== Asm code ====================
2018-03-16 15:57:35.16382436 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39aC_info:
	.quad	_c39aC
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.164612542 UTC

.section .text
.align 8
sat_s2Vpk_entry:
_c39aQ:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c39aS
_c39aT:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c39a7_info,-40(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _c39a7
_c39a8:
	movq (%rbx),%rax
	jmp *(%rax)
_c39aS:
	jmp *-16(%r13)
	.size sat_s2Vpk_entry, .-sat_s2Vpk_entry


==================== Asm code ====================
2018-03-16 15:57:35.165343241 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Vpk_info:
	.quad	sat_s2Vpk_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:57:35.166242325 UTC

.section .text
.align 8
_c39a7:
_c39a7:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c39aW
_c39aV:
	movq 15(%rbx),%rax
	movq $sat_s2Vpi_info,-48(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq $:_con_info,-16(%r12)
	movq $lvl19_r2UqS_closure+1,-8(%r12)
	leaq -48(%r12),%rbx
	movq %rbx,(%r12)
	leaq -14(%r12),%rsi
	movq %rax,%r14
	addq $24,%rbp
	jmp GHC.Base.++_entry
_c39aW:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c39a7, .-_c39a7


==================== Asm code ====================
2018-03-16 15:57:35.166900337 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39a7_info:
	.quad	_c39a7
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.167577006 UTC

.section .text
.align 8
sat_s2Vpw_entry:
_c39bn:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c39bo
_c39bp:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c39bl_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	jmp dec'_s2Vot_entry
_c39bo:
	jmp *-16(%r13)
	.size sat_s2Vpw_entry, .-sat_s2Vpw_entry


==================== Asm code ====================
2018-03-16 15:57:35.168176672 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Vpw_info:
	.quad	sat_s2Vpw_entry
	.quad	1
	.quad	1103806595088
	.quad	S2VLN_srt+1160


==================== Asm code ====================
2018-03-16 15:57:35.168847575 UTC

.section .text
.align 8
_c39bl:
_c39bl:
	movq 7(%rbx),%rax
	cmpq $0,%rax
	jle _c39bw
_c39bx:
	movq %rax,%r14
	addq $8,%rbp
	jmp $wxs1_r2Ura_entry
_c39bw:
	movl $lvl34_r2Ur8_closure,%ebx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c39bl, .-_c39bl


==================== Asm code ====================
2018-03-16 15:57:35.169823313 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39bl_info:
	.quad	_c39bl
	.quad	0
	.quad	1103806595102
	.quad	S2VLN_srt+1160


==================== Asm code ====================
2018-03-16 15:57:35.170456048 UTC

.section .text
.align 8
sat_s2VpE_entry:
_c39bR:
	movq 16(%rbx),%rsi
	movl $GHC.Show.intToDigit_closure+1,%r14d
	jmp GHC.Base.map_entry
	.size sat_s2VpE_entry, .-sat_s2VpE_entry


==================== Asm code ====================
2018-03-16 15:57:35.170995489 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2VpE_info:
	.quad	sat_s2VpE_entry
	.quad	1
	.quad	4294967312
	.quad	S2VLN_srt+1176


==================== Asm code ====================
2018-03-16 15:57:35.171740007 UTC

.section .text
.align 8
n1_s2VpH_entry:
_c39ca:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c39cb
_c39cc:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rsi
	movl $GHC.Show.intToDigit_closure+1,%r14d
	addq $-16,%rbp
	jmp GHC.Base.map_entry
_c39cb:
	jmp *-16(%r13)
	.size n1_s2VpH_entry, .-n1_s2VpH_entry


==================== Asm code ====================
2018-03-16 15:57:35.172428511 UTC

.section .data.rel.ro
.align 8
.align 1
n1_s2VpH_info:
	.quad	n1_s2VpH_entry
	.quad	1
	.quad	4294967312
	.quad	S2VLN_srt+1176


==================== Asm code ====================
2018-03-16 15:57:35.173106752 UTC

.section .text
.align 8
sat_s2VpN_entry:
_c39cr:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c39cs
_c39ct:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	leaq -1(%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp $wxs4_s2VpJ_entry
_c39cs:
	jmp *-16(%r13)
	.size sat_s2VpN_entry, .-sat_s2VpN_entry


==================== Asm code ====================
2018-03-16 15:57:35.173768779 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2VpN_info:
	.quad	sat_s2VpN_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 15:57:35.174538093 UTC

.section .text
.align 8
$wxs4_s2VpJ_entry:
_c39cx:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c39cB
_c39cA:
	cmpq $1,%r14
	je _c39cw
_c39cv:
	movq $sat_s2VpN_info,-48(%r12)
	movq %rbx,-32(%r12)
	movq %r14,-24(%r12)
	movq $:_con_info,-16(%r12)
	movq $lvl20_r2UqT_closure+1,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c39cB:
	movq $56,904(%r13)
	jmp *-8(%r13)
_c39cw:
	movq 7(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size $wxs4_s2VpJ_entry, .-$wxs4_s2VpJ_entry


==================== Asm code ====================
2018-03-16 15:57:35.175377774 UTC

.section .data.rel.ro
.align 8
.align 1
$wxs4_s2VpJ_info:
	.quad	$wxs4_s2VpJ_entry
	.quad	1
	.quad	9
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:57:35.176282578 UTC

.section .text
.align 8
sat_s2VpO_entry:
_c39cD:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c39cE
_c39cF:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c39cH
_c39cG:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	negq %rbx
	cmpq $0,%rbx
	jle _c39cJ
_c39cK:
	movq $n1_s2VpH_info,-56(%r12)
	movq %rax,-40(%r12)
	movq $:_con_info,-32(%r12)
	movq $lvl20_r2UqT_closure+1,-24(%r12)
	leaq -56(%r12),%rax
	movq %rax,-16(%r12)
	movq $$wxs4_s2VpJ_info,-8(%r12)
	leaq -30(%r12),%rax
	movq %rax,(%r12)
	movq %rbx,%r14
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	jmp $wxs4_s2VpJ_entry
_c39cJ:
	addq $-64,%r12
	movq %rax,%rsi
	movl $GHC.Show.intToDigit_closure+1,%r14d
	addq $-16,%rbp
	jmp GHC.Base.map_entry
_c39cH:
	movq $64,904(%r13)
_c39cE:
	jmp *-16(%r13)
	.size sat_s2VpO_entry, .-sat_s2VpO_entry


==================== Asm code ====================
2018-03-16 15:57:35.177056218 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2VpO_info:
	.quad	sat_s2VpO_entry
	.quad	4294967297
	.quad	4294967315
	.quad	S2VLN_srt+1176


==================== Asm code ====================
2018-03-16 15:57:35.177868529 UTC

.section .text
.align 8
sat_s2VpZ_entry:
_c39dc:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c39dd
_c39de:
	movq $block_c39d9_info,-8(%rbp)
	movq 16(%rbx),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c39d9
_c39da:
	movq (%rbx),%rax
	jmp *(%rax)
_c39dd:
	jmp *-16(%r13)
	.size sat_s2VpZ_entry, .-sat_s2VpZ_entry


==================== Asm code ====================
2018-03-16 15:57:35.178522865 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2VpZ_info:
	.quad	sat_s2VpZ_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:35.179317056 UTC

.section .text
.align 8
_c39d9:
_c39d9:
	cmpq $0,7(%rbx)
	jg _c39dl
_c39dm:
	movl $GHC.Float.minExpt_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c39dl:
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c39d9, .-_c39d9


==================== Asm code ====================
2018-03-16 15:57:35.179914124 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39d9_info:
	.quad	_c39d9
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.180626987 UTC

.section .text
.align 8
sat_s2Vq8_entry:
_c39dD:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c39dE
_c39dF:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	leaq -1(%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp $wxs4_s2Vq4_entry
_c39dE:
	jmp *-16(%r13)
	.size sat_s2Vq8_entry, .-sat_s2Vq8_entry


==================== Asm code ====================
2018-03-16 15:57:35.181320861 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Vq8_info:
	.quad	sat_s2Vq8_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 15:57:35.182182105 UTC

.section .text
.align 8
$wxs4_s2Vq4_entry:
_c39dJ:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c39dN
_c39dM:
	cmpq $1,%r14
	je _c39dI
_c39dH:
	movq $sat_s2Vq8_info,-48(%r12)
	movq %rbx,-32(%r12)
	movq %r14,-24(%r12)
	movq $:_con_info,-16(%r12)
	movq $GHC.Float.minExpt_closure+1,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c39dN:
	movq $56,904(%r13)
	jmp *-8(%r13)
_c39dI:
	movq 7(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size $wxs4_s2Vq4_entry, .-$wxs4_s2Vq4_entry


==================== Asm code ====================
2018-03-16 15:57:35.182942328 UTC

.section .data.rel.ro
.align 8
.align 1
$wxs4_s2Vq4_info:
	.quad	$wxs4_s2Vq4_entry
	.quad	1
	.quad	9
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:57:35.183781077 UTC

.section .text
.align 8
sat_s2Vqc_entry:
_c39e0:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c39e1
_c39e2:
	movq $block_c39dX_info,-8(%rbp)
	movq 16(%rbx),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c39dX
_c39dY:
	movq (%rbx),%rax
	jmp *(%rax)
_c39e1:
	jmp *-16(%r13)
	.size sat_s2Vqc_entry, .-sat_s2Vqc_entry


==================== Asm code ====================
2018-03-16 15:57:35.184574339 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Vqc_info:
	.quad	sat_s2Vqc_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:35.185390576 UTC

.section .text
.align 8
_c39dX:
_c39dX:
	cmpq $0,7(%rbx)
	jg _c39e9
_c39ea:
	movl $GHC.Float.minExpt_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c39e9:
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c39dX, .-_c39dX


==================== Asm code ====================
2018-03-16 15:57:35.186093247 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39dX_info:
	.quad	_c39dX
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.187099286 UTC

.section .text
.align 8
ds4_s2VpT_entry:
_c39ec:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c39ed
_c39ee:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c39eg
_c39ef:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	negq %rbx
	cmpq $0,%rbx
	jle _c39ej
_c39en:
	movq $:_con_info,-32(%r12)
	movq $GHC.Float.minExpt_closure+1,-24(%r12)
	movq %rax,-16(%r12)
	movq $$wxs4_s2Vq4_info,-8(%r12)
	leaq -30(%r12),%rax
	movq %rax,(%r12)
	movq $block_c39dP_info,-32(%rbp)
	movq %rbx,%r14
	leaq -7(%r12),%rbx
	movq %rcx,-24(%rbp)
	addq $-32,%rbp
	jmp $wxs4_s2Vq4_entry
_c39ej:
	movq $sat_s2VpZ_info,-32(%r12)
	movq %rcx,-16(%r12)
	leaq -32(%r12),%rbx
	addq $-16,%r12
	movq $block_c39eh_info,-24(%rbp)
	movq %rax,%rdi
	movq %rbx,%rsi
	movl $base_r2UqK_closure+1,%r14d
	addq $-24,%rbp
	jmp GHC.Float.$wroundTo_entry
_c39eg:
	movq $40,904(%r13)
_c39ed:
	jmp *-16(%r13)
	.size ds4_s2VpT_entry, .-ds4_s2VpT_entry


==================== Asm code ====================
2018-03-16 15:57:35.187971533 UTC

.section .data.rel.ro
.align 8
.align 1
ds4_s2VpT_info:
	.quad	ds4_s2VpT_entry
	.quad	4294967298
	.quad	12884901903
	.quad	S2VLN_srt+1192


==================== Asm code ====================
2018-03-16 15:57:35.188746436 UTC

.section .text
.align 8
_c39eh:
_c39eh:
	movq %r14,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp $j_r2Urc_entry
	.size _c39eh, .-_c39eh


==================== Asm code ====================
2018-03-16 15:57:35.189771145 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39eh_info:
	.quad	_c39eh
	.quad	0
	.quad	4294967326
	.quad	S2VLN_srt+1192


==================== Asm code ====================
2018-03-16 15:57:35.19182858 UTC

.section .text
.align 8
_c39dP:
_c39dP:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c39eq
_c39ep:
	movq $sat_s2Vqc_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	movq $block_c39em_info,8(%rbp)
	movq %rbx,%rdi
	leaq -16(%r12),%rsi
	movl $base_r2UqK_closure+1,%r14d
	addq $8,%rbp
	jmp GHC.Float.$wroundTo_entry
_c39eq:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c39dP, .-_c39dP


==================== Asm code ====================
2018-03-16 15:57:35.192922427 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39dP_info:
	.quad	_c39dP
	.quad	1
	.quad	12884901918
	.quad	S2VLN_srt+1192


==================== Asm code ====================
2018-03-16 15:57:35.19396167 UTC

.section .text
.align 8
_c39em:
_c39em:
	movq %r14,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp $j_r2Urc_entry
	.size _c39em, .-_c39em


==================== Asm code ====================
2018-03-16 15:57:35.194856957 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39em_info:
	.quad	_c39em
	.quad	0
	.quad	4294967326
	.quad	S2VLN_srt+1192


==================== Asm code ====================
2018-03-16 15:57:35.196146505 UTC

.section .text
.align 8
sat_s2Vqs_entry:
_c39eA:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c39eB
_c39eC:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c39ex_info,-32(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c39ex
_c39ey:
	movq (%rbx),%rax
	jmp *(%rax)
_c39eB:
	jmp *-16(%r13)
	.size sat_s2Vqs_entry, .-sat_s2Vqs_entry


==================== Asm code ====================
2018-03-16 15:57:35.197166449 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Vqs_info:
	.quad	sat_s2Vqs_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:35.198256515 UTC

.section .text
.align 8
_c39ex:
_c39ex:
	movq $block_c39eF_info,(%rbp)
	movq 15(%rbx),%rbx
	testb $7,%bl
	jne _c39eF
_c39eH:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c39ex, .-_c39ex


==================== Asm code ====================
2018-03-16 15:57:35.199203071 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39ex_info:
	.quad	_c39ex
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.200090929 UTC

.section .text
.align 8
_c39eF:
_c39eF:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c39eO
_c39f3:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c39f6
_c39f5:
	movq $:_con_info,-16(%r12)
	movq $lvl14_r2UqN_closure+1,-8(%r12)
	movq %rbx,(%r12)
	leaq -14(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c39f6:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_c39eO:
	movq 8(%rbp),%rax
	movq $block_c39eL_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c39eL
_c39eP:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c39eF, .-_c39eF


==================== Asm code ====================
2018-03-16 15:57:35.200845451 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39eF_info:
	.quad	_c39eF
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.201656287 UTC

.section .text
.align 8
_c39eL:
_c39eL:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c39eV
_c39eZ:
	movl $lvl37_r2Urd_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c39eV:
	movl $[]_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c39eL, .-_c39eL


==================== Asm code ====================
2018-03-16 15:57:35.202301563 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39eL_info:
	.quad	_c39eL
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.203123239 UTC

.section .text
.align 8
sat_s2Vqx_entry:
_c39fk:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c39fl
_c39fm:
	movq $block_c39fh_info,-24(%rbp)
	movq 24(%rbx),%rax
	movq 32(%rbx),%rcx
	movq 16(%rbx),%rbx
	movq %rax,-16(%rbp)
	movq %rcx,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c39fh
_c39fi:
	movq (%rbx),%rax
	jmp *(%rax)
_c39fl:
	jmp *-16(%r13)
	.size sat_s2Vqx_entry, .-sat_s2Vqx_entry


==================== Asm code ====================
2018-03-16 15:57:35.203790877 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Vqx_info:
	.quad	sat_s2Vqx_entry
	.quad	4294967298
	.quad	15


==================== Asm code ====================
2018-03-16 15:57:35.204586478 UTC

.section .text
.align 8
_c39fh:
_c39fh:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c39fr
_c39fq:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jg _c39fA
_c39fB:
	addq $-16,%r12
	movq 8(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c39fA:
	movq $GHC.Types.I#_con_info,-8(%r12)
	addq 16(%rbp),%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c39fr:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c39fh, .-_c39fh


==================== Asm code ====================
2018-03-16 15:57:35.205498311 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39fh_info:
	.quad	_c39fh
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.206336288 UTC

.section .text
.align 8
sat_s2VqP_entry:
_c39gd:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c39ge
_c39gf:
	movq $block_c39g6_info,-16(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c39g6
_c39g7:
	movq (%rbx),%rax
	jmp *(%rax)
_c39ge:
	jmp *-16(%r13)
	.size sat_s2VqP_entry, .-sat_s2VqP_entry


==================== Asm code ====================
2018-03-16 15:57:35.206979917 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2VqP_info:
	.quad	sat_s2VqP_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:35.207849718 UTC

.section .text
.align 8
_c39g6:
_c39g6:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c39ga
_c39gb:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c39gA
_c39gz:
	movq $:_con_info,-16(%r12)
	movq $lvl14_r2UqN_closure+1,-8(%r12)
	movq %rbx,(%r12)
	leaq -14(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c39gA:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_c39ga:
	movq 8(%rbp),%rax
	movq $block_c39gi_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c39gi
_c39gk:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c39g6, .-_c39g6


==================== Asm code ====================
2018-03-16 15:57:35.208577799 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39g6_info:
	.quad	_c39g6
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.209438662 UTC

.section .text
.align 8
_c39gi:
_c39gi:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c39gq
_c39gu:
	movl $lvl37_r2Urd_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c39gq:
	movl $[]_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c39gi, .-_c39gi


==================== Asm code ====================
2018-03-16 15:57:35.210035316 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39gi_info:
	.quad	_c39gi
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.210764545 UTC

.section .text
.align 8
sat_s2VqW_entry:
_c39gR:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c39gS
_c39gT:
	movq $block_c39gK_info,-16(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c39gK
_c39gL:
	movq (%rbx),%rax
	jmp *(%rax)
_c39gS:
	jmp *-16(%r13)
	.size sat_s2VqW_entry, .-sat_s2VqW_entry


==================== Asm code ====================
2018-03-16 15:57:35.211429353 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2VqW_info:
	.quad	sat_s2VqW_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:35.212245593 UTC

.section .text
.align 8
_c39gK:
_c39gK:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c39gO
_c39gP:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c39he
_c39hd:
	movq $:_con_info,-16(%r12)
	movq $lvl14_r2UqN_closure+1,-8(%r12)
	movq %rbx,(%r12)
	leaq -14(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c39he:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_c39gO:
	movq 8(%rbp),%rax
	movq $block_c39gW_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c39gW
_c39gY:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c39gK, .-_c39gK


==================== Asm code ====================
2018-03-16 15:57:35.21302647 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39gK_info:
	.quad	_c39gK
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.214105068 UTC

.section .text
.align 8
_c39gW:
_c39gW:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c39h4
_c39h8:
	movl $lvl37_r2Urd_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c39h4:
	movl $[]_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c39gW, .-_c39gW


==================== Asm code ====================
2018-03-16 15:57:35.214754183 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39gW_info:
	.quad	_c39gW
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.215479897 UTC

.section .text
.align 8
sat_s2Vr1_entry:
_c39ht:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c39hu
_c39hv:
	movq $block_c39hn_info,-16(%rbp)
	movq 24(%rbx),%rsi
	movl $GHC.Show.intToDigit_closure+1,%r14d
	movq 16(%rbx),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Base.map_entry
_c39hu:
	jmp *-16(%r13)
	.size sat_s2Vr1_entry, .-sat_s2Vr1_entry


==================== Asm code ====================
2018-03-16 15:57:35.216147613 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Vr1_info:
	.quad	sat_s2Vr1_entry
	.quad	2
	.quad	4294967314
	.quad	S2VLN_srt+1176


==================== Asm code ====================
2018-03-16 15:57:35.216978952 UTC

.section .text
.align 8
_c39hn:
_c39hn:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c39hq
_c39hr:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c39hQ
_c39hP:
	movq $:_con_info,-16(%r12)
	movq $lvl14_r2UqN_closure+1,-8(%r12)
	movq %rbx,(%r12)
	leaq -14(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c39hQ:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_c39hq:
	movq 8(%rbp),%rax
	movq $block_c39hy_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c39hy
_c39hA:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c39hn, .-_c39hn


==================== Asm code ====================
2018-03-16 15:57:35.217732272 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39hn_info:
	.quad	_c39hn
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.218465358 UTC

.section .text
.align 8
_c39hy:
_c39hy:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c39hG
_c39hK:
	movl $lvl37_r2Urd_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c39hG:
	movl $[]_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c39hy, .-_c39hy


==================== Asm code ====================
2018-03-16 15:57:35.21938569 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39hy_info:
	.quad	_c39hy
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.220546085 UTC

.section .text
.align 8
$wdoFmt_s2VnX_entry:
_c39hY:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c39hZ
_u39kl:
	movq %rbx,-32(%rbp)
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-32,%rbp
	jmp _c396u
_c39hZ:
	jmp *-8(%r13)
	.size $wdoFmt_s2VnX_entry, .-$wdoFmt_s2VnX_entry


==================== Asm code ====================
2018-03-16 15:57:35.221674904 UTC

.section .data.rel.ro
.align 8
.align 1
$wdoFmt_s2VnX_info:
	.quad	$wdoFmt_s2VnX_entry
	.quad	2
	.quad	35008278429707
	.quad	12884901911
	.quad	S2VLN_srt+1144


==================== Asm code ====================
2018-03-16 15:57:35.223525328 UTC

.section .text
.align 8
_c396u:
_c396u:
	movq $block_c396x_info,-16(%rbp)
	movq 8(%rbp),%rbx
	movq (%rbp),%rax
	movq 13(%rax),%rcx
	movq %rcx,-8(%rbp)
	movq 5(%rax),%rax
	movq %rax,8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c396x
_c396y:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c396u, .-_c396u


==================== Asm code ====================
2018-03-16 15:57:35.225102664 UTC

.section .text
.align 8
_c396x:
_c396x:
	andl $7,%ebx
	cmpq $3,%rbx
	jb _u39kk
_c39hW:
	movq $block_c39jU_info,8(%rbp)
	movq 40(%rbp),%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c39jU
_c39jW:
	movq (%rbx),%rax
	jmp *(%rax)
_u39kk:
	movq 24(%rbp),%rax
	cmpq $2,%rbx
	jb _c39hU
_c39hV:
	movq $block_c39bA_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c39bA
_c39bB:
	movq (%rbx),%rax
	jmp *(%rax)
_c39hU:
	movq $block_c396C_info,24(%rbp)
	movq %rax,%rbx
	addq $24,%rbp
	testb $7,%bl
	jne _c396C
_c396D:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c396x, .-_c396x


==================== Asm code ====================
2018-03-16 15:57:35.226218659 UTC

.section .data.rel.ro
.align 8
.align 1
block_c396x_info:
	.quad	_c396x
	.quad	5
	.quad	35008278429726
	.quad	S2VLN_srt+1144


==================== Asm code ====================
2018-03-16 15:57:35.227534456 UTC

.section .text
.align 8
_c396C:
_c396C:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c39i4
_c39iJ:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c39iM
_c39iL:
	movq 6(%rbx),%rbx
	movq $dec'_s2Vot_info,-16(%r12)
	movq %rbx,(%r12)
	movq $block_c39aY_info,-8(%rbp)
	movq %rax,%rbx
	leaq -16(%r12),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c39aY
_c39aZ:
	movq (%rbx),%rax
	jmp *(%rax)
_c39iM:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_c39i4:
	movq $block_c396H_info,8(%rbp)
	movq %rax,%rsi
	movl $GHC.Show.intToDigit_closure+1,%r14d
	addq $8,%rbp
	jmp GHC.Base.map_entry
	.size _c396C, .-_c396C


==================== Asm code ====================
2018-03-16 15:57:35.228631501 UTC

.section .data.rel.ro
.align 8
.align 1
block_c396C_info:
	.quad	_c396C
	.quad	2
	.quad	8680128905246
	.quad	S2VLN_srt+1160


==================== Asm code ====================
2018-03-16 15:57:35.229699202 UTC

.section .text
.align 8
_c396H:
_c396H:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c39i8
_c39ia:
	movq $block_c396M_info,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c396M
_c396N:
	movq (%rbx),%rax
	jmp *(%rax)
_c39i8:
	movl $lvl13_r2UqM_closure,%ebx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c396H, .-_c396H


==================== Asm code ====================
2018-03-16 15:57:35.230370372 UTC

.section .data.rel.ro
.align 8
.align 1
block_c396H_info:
	.quad	_c396H
	.quad	1
	.quad	12884901918
	.quad	S2VLN_srt+1232


==================== Asm code ====================
2018-03-16 15:57:35.231105293 UTC

.section .text
.align 8
_c396M:
_c396M:
	cmpq $48,7(%rbx)
	je _c39ix
_u39kn:
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp _c396U
_c39ix:
	movq $block_c39iw_info,-8(%rbp)
	movq %rbx,%rax
	movq 8(%rbp),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c39iw
_c39iy:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c396M, .-_c396M


==================== Asm code ====================
2018-03-16 15:57:35.231772633 UTC

.section .data.rel.ro
.align 8
.align 1
block_c396M_info:
	.quad	_c396M
	.quad	2
	.quad	4294967326
	.quad	S2VLN_srt+1240


==================== Asm code ====================
2018-03-16 15:57:35.232476308 UTC

.section .text
.align 8
_c39iw:
_c39iw:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c39iE
	jmp _c396U
_c39iE:
	movl $lvl16_r2UqP_closure,%ebx
	addq $32,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c39iw, .-_c39iw


==================== Asm code ====================
2018-03-16 15:57:35.233073919 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39iw_info:
	.quad	_c39iw
	.quad	3
	.quad	4294967326
	.quad	S2VLN_srt+1240


==================== Asm code ====================
2018-03-16 15:57:35.233926644 UTC

.section .text
.align 8
_c396U:
_c396U:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c39ie
_c39id:
	movq $show_e'_s2Voa_info,-16(%r12)
	movq 24(%rbp),%rax
	movq %rax,(%r12)
	movq $block_c397j_info,(%rbp)
	movq 16(%rbp),%rbx
	leaq -16(%r12),%rax
	movq %rax,24(%rbp)
	testb $7,%bl
	jne _c397j
_c397k:
	movq (%rbx),%rax
	jmp *(%rax)
_c39ie:
	movq $24,904(%r13)
	movq $block_c396U_info,(%rbp)
	jmp stg_gc_noregs
	.size _c396U, .-_c396U


==================== Asm code ====================
2018-03-16 15:57:35.23474206 UTC

.section .data.rel.ro
.align 8
.align 1
block_c396U_info:
	.quad	_c396U
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.235719594 UTC

.section .text
.align 8
_c397j:
_c397j:
	movq 24(%rbp),%rax
	movq 8(%rbp),%rcx
	movq %rbx,%rdx
	andl $7,%edx
	cmpq $1,%rdx
	je _c39ih
_c39in:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _c39iq
_c39ip:
	movq $sat_s2Vom_info,-72(%r12)
	movq %rax,-56(%r12)
	movq %rbx,-48(%r12)
	movq $:_con_info,-40(%r12)
	movq $lvl14_r2UqN_closure+1,-32(%r12)
	leaq -72(%r12),%rax
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	movq %rcx,-8(%r12)
	leaq -38(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c39iq:
	movq $80,904(%r13)
	jmp stg_gc_unpt_r1
_c39ik:
	movq $48,904(%r13)
	jmp stg_gc_unpt_r1
_c39ih:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c39ik
_c39ij:
	movq $sat_s2Voi_info,-40(%r12)
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	movq %rcx,-8(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c397j, .-_c397j


==================== Asm code ====================
2018-03-16 15:57:35.236627394 UTC

.section .data.rel.ro
.align 8
.align 1
block_c397j_info:
	.quad	_c397j
	.quad	131
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.23789515 UTC

.section .text
.align 8
_c39aY:
_c39aY:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c398b
_c39iY:
	movq $block_c39b4_info,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c39b4
_c39b5:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c39aY, .-_c39aY


==================== Asm code ====================
2018-03-16 15:57:35.238531123 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39aY_info:
	.quad	_c39aY
	.quad	3
	.quad	2083059138590
	.quad	S2VLN_srt+1160


==================== Asm code ====================
2018-03-16 15:57:35.239280779 UTC

.section .text
.align 8
_c39b4:
_c39b4:
	cmpq $0,7(%rbx)
	je _c39j2
_u39km:
	addq $8,%rbp
	jmp _c398b
_c39j2:
	movq 8(%rbp),%rax
	movq $block_c39bc_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c39bc
_c39bd:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c39b4, .-_c39b4


==================== Asm code ====================
2018-03-16 15:57:35.239898191 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39b4_info:
	.quad	_c39b4
	.quad	4
	.quad	2083059138590
	.quad	S2VLN_srt+1160


==================== Asm code ====================
2018-03-16 15:57:35.240692587 UTC

.section .text
.align 8
_c39bc:
_c39bc:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c39j6
	jmp _c398b
_c39j9:
	movq $72,904(%r13)
	jmp stg_gc_unpt_r1
_c39j6:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c39j9
_c39j8:
	movq $sat_s2Vpw_info,-64(%r12)
	movq 8(%rbp),%rax
	movq %rax,-48(%r12)
	movq $:_con_info,-40(%r12)
	movq $lvl14_r2UqN_closure+1,-32(%r12)
	leaq -64(%r12),%rax
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	movq $lvl20_r2UqT_closure+1,-8(%r12)
	leaq -38(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c39bc, .-_c39bc


==================== Asm code ====================
2018-03-16 15:57:35.241541028 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39bc_info:
	.quad	_c39bc
	.quad	3
	.quad	2083059138590
	.quad	S2VLN_srt+1160


==================== Asm code ====================
2018-03-16 15:57:35.242395828 UTC

.section .text
.align 8
_c398b:
_c398b:
	addq $168,%r12
	cmpq 856(%r13),%r12
	ja _c39iS
_c39iR:
	movq $ds5_s2Voz_info,-160(%r12)
	movq 16(%rbp),%rax
	movq %rax,-144(%r12)
	movq 8(%rbp),%rax
	movq %rax,-136(%r12)
	movq $ds6_s2VoH_info,-128(%r12)
	leaq -160(%r12),%rax
	movq %rax,-112(%r12)
	movq $sat_s2Vpk_info,-104(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-88(%r12)
	movq %rax,-80(%r12)
	leaq -128(%r12),%rax
	movq %rax,-72(%r12)
	movq $:_con_info,-64(%r12)
	movq $lvl14_r2UqN_closure+1,-56(%r12)
	leaq -104(%r12),%rbx
	movq %rbx,-48(%r12)
	movq $stg_sel_0_upd_info,-40(%r12)
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -62(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c39iS:
	movq $168,904(%r13)
	movq $block_c398b_info,(%rbp)
	jmp stg_gc_noregs
	.size _c398b, .-_c398b


==================== Asm code ====================
2018-03-16 15:57:35.243167952 UTC

.section .data.rel.ro
.align 8
.align 1
block_c398b_info:
	.quad	_c398b
	.quad	3
	.quad	244813135902
	.quad	S2VLN_srt+1176


==================== Asm code ====================
2018-03-16 15:57:35.244013125 UTC

.section .text
.align 8
_c39bA:
_c39bA:
	movq 40(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c39jh
_c39jp:
	movq $block_c39cN_info,(%rbp)
	movq 6(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,40(%rbp)
	testb $7,%bl
	jne _c39cN
_c39cO:
	movq (%rbx),%rax
	jmp *(%rax)
_c39jh:
	movq $block_c39bF_info,24(%rbp)
	movq %rax,%rbx
	addq $24,%rbp
	testb $7,%bl
	jne _c39bF
_c39bG:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c39bA, .-_c39bA


==================== Asm code ====================
2018-03-16 15:57:35.244676351 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39bA_info:
	.quad	_c39bA
	.quad	389
	.quad	906238099486
	.quad	S2VLN_srt+1144


==================== Asm code ====================
2018-03-16 15:57:35.245554056 UTC

.section .text
.align 8
_c39bF:
_c39bF:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c39jk
_c39jj:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	testq %rbx,%rbx
	jg _c39jm
_c39jn:
	movq $sat_s2VpO_info,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rsi
	movl $lvl36_r2Urb_bytes,%r14d
	addq $24,%rbp
	jmp GHC.CString.unpackAppendCString#_entry
_c39jm:
	movq $sat_s2VpE_info,-24(%r12)
	movq %rax,-8(%r12)
	leaq -24(%r12),%rax
	addq $-8,%r12
	movq %rax,%rdi
	movl $GHC.Types.[]_closure+1,%esi
	movq %rbx,%r14
	addq $24,%rbp
	jmp $wf_r2UqX_entry
_c39jk:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c39bF, .-_c39bF


==================== Asm code ====================
2018-03-16 15:57:35.246277019 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39bF_info:
	.quad	_c39bF
	.quad	130
	.quad	38654705694
	.quad	S2VLN_srt+1152


==================== Asm code ====================
2018-03-16 15:57:35.247202062 UTC

.section .text
.align 8
_c39cN:
_c39cN:
	addq $120,%r12
	cmpq 856(%r13),%r12
	ja _c39js
_c39jr:
	movq 32(%rbp),%rax
	movq 40(%rbp),%rcx
	movq 7(%rbx),%rdx
	testq %rdx,%rdx
	jl _c39jw
_c39jx:
	movq $sat_s2Vqx_info,-112(%r12)
	movq %rcx,-96(%r12)
	movq %rbx,-88(%r12)
	movq %rdx,-80(%r12)
	leaq -112(%r12),%rbx
	addq $-80,%r12
	movq $block_c39fD_info,(%rbp)
	movq %rax,%rdi
	movq %rbx,%rsi
	movl $base_r2UqK_closure+1,%r14d
	movq %rdx,40(%rbp)
	jmp GHC.Float.$wroundTo_entry
_c39jw:
	movq $ds4_s2VpT_info,-112(%r12)
	movq %rax,-96(%r12)
	movq %rcx,-88(%r12)
	movq %rdx,-80(%r12)
	movq $sat_s2Vqs_info,-72(%r12)
	movq 8(%rbp),%rax
	movq %rax,-56(%r12)
	leaq -112(%r12),%rax
	movq %rax,-48(%r12)
	movq $stg_sel_0_upd_info,-40(%r12)
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -72(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c39js:
	movq $120,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c39cN, .-_c39cN


==================== Asm code ====================
2018-03-16 15:57:35.248019595 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39cN_info:
	.quad	_c39cN
	.quad	389
	.quad	897648164894
	.quad	S2VLN_srt+1144


==================== Asm code ====================
2018-03-16 15:57:35.248719732 UTC

.section .text
.align 8
_c39fD:
_c39fD:
	movq $block_c39fF_info,(%rbp)
	movq %r14,32(%rbp)
	testb $7,%bl
	jne _c39fF
_c39fG:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c39fD, .-_c39fD


==================== Asm code ====================
2018-03-16 15:57:35.249382763 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39fD_info:
	.quad	_c39fD
	.quad	1925
	.quad	73014444062
	.quad	S2VLN_srt+1144


==================== Asm code ====================
2018-03-16 15:57:35.250231559 UTC

.section .text
.align 8
_c39fF:
_c39fF:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c39jB
_c39jA:
	movq 32(%rbp),%rax
	addq $7,%rbx
	movq 40(%rbp),%rcx
	addq (%rbx),%rcx
	testq %rcx,%rcx
	jg _c39jD
_c39jR:
	movq $sat_s2Vr1_info,-24(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -24(%r12),%rsi
	movl $lvl23_r2UqW_closure,%r14d
	addq $48,%rbp
	jmp GHC.Base.++_entry
_c39jD:
	addq $-32,%r12
	movq $block_c39fQ_info,(%rbp)
	movq %rax,%rsi
	movl $GHC.Show.intToDigit_closure+1,%r14d
	movq %rcx,40(%rbp)
	jmp GHC.Base.map_entry
_c39jB:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c39fF, .-_c39fF


==================== Asm code ====================
2018-03-16 15:57:35.251010637 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39fF_info:
	.quad	_c39fF
	.quad	1413
	.quad	73014444062
	.quad	S2VLN_srt+1144


==================== Asm code ====================
2018-03-16 15:57:35.251809063 UTC

.section .text
.align 8
_c39fQ:
_c39fQ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c39jG
_c39jF:
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq 40(%rbp),%rax
	movq %rax,(%r12)
	movq $block_c39fV_info,(%rbp)
	movq %rbx,%rsi
	leaq -7(%r12),%r14
	jmp GHC.List.$wsplitAt'_entry
_c39jG:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c39fQ, .-_c39fQ


==================== Asm code ====================
2018-03-16 15:57:35.252518557 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39fQ_info:
	.quad	_c39fQ
	.quad	1925
	.quad	4294967326
	.quad	S2VLN_srt+1144


==================== Asm code ====================
2018-03-16 15:57:35.253333162 UTC

.section .text
.align 8
_c39fV:
_c39fV:
	movq $block_c39fX_info,(%rbp)
	movq %r14,40(%rbp)
	testb $7,%bl
	jne _c39fX
_c39fY:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c39fV, .-_c39fV


==================== Asm code ====================
2018-03-16 15:57:35.254541875 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39fV_info:
	.quad	_c39fV
	.quad	1925
	.quad	4294967326
	.quad	S2VLN_srt+1144


==================== Asm code ====================
2018-03-16 15:57:35.255452742 UTC

.section .text
.align 8
_c39fX:
_c39fX:
	movq 8(%rbp),%rax
	movq 40(%rbp),%rcx
	movq %rbx,%rdx
	andl $7,%edx
	cmpq $1,%rdx
	je _c39jJ
_c39jN:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c39jQ
_c39jP:
	movq $sat_s2VqW_info,-24(%r12)
	movq %rax,-8(%r12)
	movq %rcx,(%r12)
	leaq -24(%r12),%rsi
	movq %rbx,%r14
	addq $48,%rbp
	jmp GHC.Base.++_entry
_c39jQ:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
_c39jJ:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c39jQ
_c39jL:
	movq $sat_s2VqP_info,-24(%r12)
	movq %rax,-8(%r12)
	movq %rcx,(%r12)
	leaq -24(%r12),%rsi
	movl $lvl23_r2UqW_closure,%r14d
	addq $48,%rbp
	jmp GHC.Base.++_entry
	.size _c39fX, .-_c39fX


==================== Asm code ====================
2018-03-16 15:57:35.256183028 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39fX_info:
	.quad	_c39fX
	.quad	901
	.quad	4294967326
	.quad	S2VLN_srt+1144


==================== Asm code ====================
2018-03-16 15:57:35.256974361 UTC

.section .text
.align 8
_c39jU:
_c39jU:
	movq 24(%rbp),%rax
	movq %rbx,%rcx
	movq 7(%rbx),%rbx
	testq %rbx,%rbx
	jl _c39kb
_c39ka:
	cmpq $7,%rbx
	jg _c39kb
_c39k7:
	movq $GHC.Float.FFFixed_closure+2,16(%rbp)
	movq %rax,24(%rbp)
	movq %rcx,32(%rbp)
	addq $8,%rbp
	jmp _c396u
_c39kb:
	movq $GHC.Float.FFExponent_closure+1,16(%rbp)
	movq %rax,24(%rbp)
	movq %rcx,32(%rbp)
	addq $8,%rbp
	jmp _c396u
	.size _c39jU, .-_c39jU


==================== Asm code ====================
2018-03-16 15:57:35.257839597 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39jU_info:
	.quad	_c39jU
	.quad	644
	.quad	35008278429726
	.quad	S2VLN_srt+1144


==================== Asm code ====================
2018-03-16 15:57:35.258503715 UTC

.section .data.rel.ro
.align 8
.align 1
u39lJ_srtd:
	.quad	S2VLN_srt+752
	.quad	62
	.quad	4588606169848741889


==================== Asm code ====================
2018-03-16 15:57:35.259440097 UTC

.section .text
.align 8
sat_s2Vrb_entry:
_c39kX:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c39l0
_c39l1:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c39kZ_info,-40(%rbp)
	movss 32(%rbx),%xmm1
	movss _n39sI(%rip),%xmm0
	xorps %xmm0,%xmm1
	movl $GHC.Float.expts4_closure,%r14d
	movq 16(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Float.$w$sfloatToDigits1_entry
_c39l0:
	jmp *-16(%r13)
	.size sat_s2Vrb_entry, .-sat_s2Vrb_entry
.section .rodata
.align 8
.align 4
_n39sI:
	.long	-2147483648


==================== Asm code ====================
2018-03-16 15:57:35.260140778 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Vrb_info:
	.quad	sat_s2Vrb_entry
	.quad	4294967298
	.quad	-4294967281
	.quad	u39lJ_srtd


==================== Asm code ====================
2018-03-16 15:57:35.260779847 UTC

.section .text
.align 8
_c39kZ:
_c39kZ:
	movq %r14,%rdi
	movq %rbx,%rsi
	movq 8(%rbp),%r14
	movq 16(%rbp),%rbx
	addq $24,%rbp
	jmp $wdoFmt_s2VnX_entry
	.size _c39kZ, .-_c39kZ


==================== Asm code ====================
2018-03-16 15:57:35.261426459 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39kZ_info:
	.quad	_c39kZ
	.quad	2
	.quad	35008278429726
	.quad	S2VLN_srt+1144


==================== Asm code ====================
2018-03-16 15:57:35.26213055 UTC

.section .data.rel.ro
.align 8
.align 1
u39lK_srtd:
	.quad	S2VLN_srt+752
	.quad	66
	.quad	-23079848578646015
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:35.264193659 UTC

.section .text
.align 8
.globl GHC.Float.$w$sformatRealFloatAlt1_entry
.type GHC.Float.$w$sformatRealFloatAlt1_entry, @object
GHC.Float.$w$sformatRealFloatAlt1_entry:
_c39l7:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c39l8
_c39l9:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c39lb
_c39la:
	subq $8,%rsp
	movss %xmm1,%xmm0
	movl $1,%eax
	movq %rsi,%rbx
	movq %rdi,72(%rsp)
	movsd %xmm1,80(%rsp)
	call isFloatNaN
	addq $8,%rsp
	testq %rax,%rax
	je _c39l6
_c39l5:
	addq $-24,%r12
	movl $lvl31_r2Ur5_closure,%ebx
	movq (%rbx),%rax
	jmp *(%rax)
_c39lE:
	movq $$wdoFmt_s2VnX_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq 64(%rsp),%rax
	movq %rax,(%r12)
	leaq -13(%r12),%rax
	xorps %xmm0,%xmm0
	movsd 72(%rsp),%xmm1
	ucomiss %xmm0,%xmm1
	jp _c39lC
	jb _u39lF
_c39lC:
	subq $8,%rsp
	movss %xmm1,%xmm0
	movq %rax,%rbx
	movl $1,%eax
	call isFloatNegativeZero
	addq $8,%rsp
	testq %rax,%rax
	je _c39ly
_u39lG:
	movq %rbx,-24(%rbp)
	movq %r14,-16(%rbp)
	movsd 72(%rsp),%xmm0
	movss %xmm0,-8(%rbp)
	addq $-32,%rbp
	jmp _c39kP
_u39lF:
	movq %rax,-24(%rbp)
	movq %r14,-16(%rbp)
	movss %xmm1,-8(%rbp)
	addq $-32,%rbp
	jmp _c39kP
_c39ly:
	movq $block_c39lx_info,-24(%rbp)
	movsd 72(%rsp),%xmm0
	movss %xmm0,%xmm1
	movq %r14,%rax
	movl $GHC.Float.expts4_closure,%r14d
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Float.$w$sfloatToDigits1_entry
_c39lg:
	addq $-24,%r12
	movl $lvl29_r2Ur3_closure,%ebx
	movq (%rbx),%rax
	jmp *(%rax)
_c39l6:
	subq $8,%rsp
	movsd 80(%rsp),%xmm0
	movl $1,%eax
	call isFloatInfinite
	addq $8,%rsp
	testq %rax,%rax
	je _c39lE
_c39li:
	xorps %xmm0,%xmm0
	movsd 72(%rsp),%xmm1
	ucomiss %xmm0,%xmm1
	jp _c39lf
	jb _c39lg
_c39lf:
	addq $-24,%r12
	movl $lvl27_r2Ur1_closure,%ebx
	movq (%rbx),%rax
	jmp *(%rax)
_c39lb:
	movq $24,904(%r13)
_c39l8:
	movl $GHC.Float.$w$sformatRealFloatAlt1_closure,%ebx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movss %xmm1,-8(%rbp)
	addq $-32,%rbp
	jmp *-8(%r13)
	.size GHC.Float.$w$sformatRealFloatAlt1_entry, .-GHC.Float.$w$sformatRealFloatAlt1_entry


==================== Asm code ====================
2018-03-16 15:57:35.265733265 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$w$sformatRealFloatAlt1_info
.type GHC.Float.$w$sformatRealFloatAlt1_info, @object
GHC.Float.$w$sformatRealFloatAlt1_info:
	.quad	GHC.Float.$w$sformatRealFloatAlt1_entry
	.quad	0
	.quad	-4294967282
	.quad	17179869184
	.quad	u39lK_srtd
	.quad	516
	.quad	GHC.Float.$w$sformatRealFloatAlt1_slow


==================== Asm code ====================
2018-03-16 15:57:35.266582089 UTC

.section .text
.align 8
_c39lx:
_c39lx:
	movq %r14,%rdi
	movq %rbx,%rsi
	movq 16(%rbp),%r14
	movq 8(%rbp),%rbx
	addq $24,%rbp
	jmp $wdoFmt_s2VnX_entry
	.size _c39lx, .-_c39lx


==================== Asm code ====================
2018-03-16 15:57:35.267135141 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39lx_info:
	.quad	_c39lx
	.quad	2
	.quad	35008278429726
	.quad	S2VLN_srt+1144


==================== Asm code ====================
2018-03-16 15:57:35.267819459 UTC

.section .data.rel.ro
.align 8
.align 1
u39lL_srtd:
	.quad	S2VLN_srt+752
	.quad	62
	.quad	4588606169848741889


==================== Asm code ====================
2018-03-16 15:57:35.268635754 UTC

.section .text
.align 8
_c39kP:
_c39kP:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c39lm
_c39ll:
	movq $sat_s2Vrb_info,-56(%r12)
	movq 16(%rbp),%rax
	movq %rax,-40(%r12)
	movq 8(%rbp),%rax
	movq %rax,-32(%r12)
	movss 24(%rbp),%xmm0
	movss %xmm0,-24(%r12)
	movq $:_con_info,-16(%r12)
	movq $GHC.Float.$fShowDouble3_closure+1,-8(%r12)
	leaq -56(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c39lm:
	movq $64,904(%r13)
	movq $block_c39kP_info,(%rbp)
	jmp stg_gc_noregs
	.size _c39kP, .-_c39kP


==================== Asm code ====================
2018-03-16 15:57:35.269610848 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39kP_info:
	.quad	_c39kP
	.quad	259
	.quad	-4294967266
	.quad	u39lL_srtd


==================== Asm code ====================
2018-03-16 15:57:35.272960156 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fShowFloat_$sformatRealFloatAlt_closure
.type GHC.Float.$fShowFloat_$sformatRealFloatAlt_closure, @object
GHC.Float.$fShowFloat_$sformatRealFloatAlt_closure:
	.quad	GHC.Float.$fShowFloat_$sformatRealFloatAlt_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:35.273922426 UTC

.section .text
.align 8
.globl GHC.Float.$fShowFloat_$sformatRealFloatAlt_entry
.type GHC.Float.$fShowFloat_$sformatRealFloatAlt_entry, @object
GHC.Float.$fShowFloat_$sformatRealFloatAlt_entry:
_c39tm:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c39tn
_c39to:
	movq $block_c39tj_info,-32(%rbp)
	movq %r8,%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c39tj
_c39tk:
	movq (%rbx),%rax
	jmp *(%rax)
_c39tn:
	movl $GHC.Float.$fShowFloat_$sformatRealFloatAlt_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fShowFloat_$sformatRealFloatAlt_entry, .-GHC.Float.$fShowFloat_$sformatRealFloatAlt_entry


==================== Asm code ====================
2018-03-16 15:57:35.274628567 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fShowFloat_$sformatRealFloatAlt_info
.type GHC.Float.$fShowFloat_$sformatRealFloatAlt_info, @object
GHC.Float.$fShowFloat_$sformatRealFloatAlt_info:
	.quad	GHC.Float.$fShowFloat_$sformatRealFloatAlt_entry
	.quad	0
	.quad	73014444046
	.quad	17179869208
	.quad	S2VLN_srt+1248


==================== Asm code ====================
2018-03-16 15:57:35.275366207 UTC

.section .text
.align 8
_c39tj:
_c39tj:
	movss 7(%rbx),%xmm1
	movq 24(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $32,%rbp
	jmp GHC.Float.$w$sformatRealFloatAlt1_entry
	.size _c39tj, .-_c39tj


==================== Asm code ====================
2018-03-16 15:57:35.276000834 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39tj_info:
	.quad	_c39tj
	.quad	3
	.quad	4294967326
	.quad	S2VLN_srt+1248


==================== Asm code ====================
2018-03-16 15:57:35.279530097 UTC

.section .data
.align 8
.align 1
$wxs2_r2Ure_closure:
	.quad	$wxs2_r2Ure_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:35.280341002 UTC

.section .text
.align 8
sat_s2Vru_entry:
_c39tO:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c39tP
_c39tQ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	leaq -1(%rax),%r14
	addq $-16,%rbp
	jmp $wxs2_r2Ure_entry
_c39tP:
	jmp *-16(%r13)
	.size sat_s2Vru_entry, .-sat_s2Vru_entry


==================== Asm code ====================
2018-03-16 15:57:35.281121595 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Vru_info:
	.quad	sat_s2Vru_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S2VLN_srt+1288


==================== Asm code ====================
2018-03-16 15:57:35.282520346 UTC

.section .text
.align 8
$wxs2_r2Ure_entry:
_c39tU:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c39tY
_c39tX:
	cmpq $1,%r14
	je _c39tT
_c39tS:
	movq $sat_s2Vru_info,-40(%r12)
	movq %r14,-24(%r12)
	movq $:_con_info,-16(%r12)
	movq $lvl20_r2UqT_closure+1,-8(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c39tY:
	movq $48,904(%r13)
	movl $$wxs2_r2Ure_closure,%ebx
	jmp *-8(%r13)
_c39tT:
	addq $-48,%r12
	movl $lvl35_r2Ur9_closure+2,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size $wxs2_r2Ure_entry, .-$wxs2_r2Ure_entry


==================== Asm code ====================
2018-03-16 15:57:35.283253203 UTC

.section .data.rel.ro
.align 8
.align 1
$wxs2_r2Ure_info:
	.quad	$wxs2_r2Ure_entry
	.quad	0
	.quad	140741783322638
	.quad	4294967300
	.quad	S2VLN_srt+1168


==================== Asm code ====================
2018-03-16 15:57:35.352040488 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$w$sformatRealFloatAlt_closure
.type GHC.Float.$w$sformatRealFloatAlt_closure, @object
GHC.Float.$w$sformatRealFloatAlt_closure:
	.quad	GHC.Float.$w$sformatRealFloatAlt_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:35.35285513 UTC

.section .text
.align 8
.globl GHC.Float.$w$sformatRealFloatAlt_slow
.type GHC.Float.$w$sformatRealFloatAlt_slow, @object
GHC.Float.$w$sformatRealFloatAlt_slow:
_c39ud:
	movsd 24(%rbp),%xmm1
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $32,%rbp
	jmp GHC.Float.$w$sformatRealFloatAlt_entry
	.size GHC.Float.$w$sformatRealFloatAlt_slow, .-GHC.Float.$w$sformatRealFloatAlt_slow


==================== Asm code ====================
2018-03-16 15:57:35.353734912 UTC

.section .text
.align 8
show_e'_s2VrX_entry:
_c39v2:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c39vb
_c39vc:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c39uZ_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _c39uZ
_c39v0:
	movq (%rbx),%rax
	jmp *(%rax)
_c39vb:
	jmp *-16(%r13)
	.size show_e'_s2VrX_entry, .-show_e'_s2VrX_entry


==================== Asm code ====================
2018-03-16 15:57:35.354352644 UTC

.section .data.rel.ro
.align 8
.align 1
show_e'_s2VrX_info:
	.quad	show_e'_s2VrX_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:35.355090414 UTC

.section .text
.align 8
_c39uZ:
_c39uZ:
	movq $block_c39v8_info,(%rbp)
	movl $GHC.Types.[]_closure+1,%edi
	movq 7(%rbx),%rax
	leaq -1(%rax),%rsi
	xorl %r14d,%r14d
	jmp GHC.Show.$wshowSignedInt_entry
	.size _c39uZ, .-_c39uZ


==================== Asm code ====================
2018-03-16 15:57:35.355688309 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39uZ_info:
	.quad	_c39uZ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.356440658 UTC

.section .text
.align 8
_c39v8:
_c39v8:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c39vg
_c39vf:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c39vg:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c39v8, .-_c39v8


==================== Asm code ====================
2018-03-16 15:57:35.357065461 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39v8_info:
	.quad	_c39v8
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.357880002 UTC

.section .text
.align 8
sat_s2Vs5_entry:
_c39vr:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c39vs
_c39vt:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rsi
	movl $lvl32_r2Ur6_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackAppendCString#_entry
_c39vs:
	jmp *-16(%r13)
	.size sat_s2Vs5_entry, .-sat_s2Vs5_entry


==================== Asm code ====================
2018-03-16 15:57:35.358512974 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Vs5_info:
	.quad	sat_s2Vs5_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:35.359203001 UTC

.section .text
.align 8
sat_s2Vs8_entry:
_c39vE:
	movq 16(%rbx),%rsi
	movl $lvl33_r2Ur7_bytes,%r14d
	jmp GHC.CString.unpackAppendCString#_entry
	.size sat_s2Vs8_entry, .-sat_s2Vs8_entry


==================== Asm code ====================
2018-03-16 15:57:35.359828228 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Vs8_info:
	.quad	sat_s2Vs8_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:35.360607157 UTC

.section .text
.align 8
sat_s2Vs9_entry:
_c39vH:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c39vI
_c39vJ:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c39vL
_c39vK:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $sat_s2Vs8_info,-16(%r12)
	movq %rax,(%r12)
	leaq -16(%r12),%rsi
	movq %rbx,%r14
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_c39vL:
	movq $24,904(%r13)
_c39vI:
	jmp *-16(%r13)
	.size sat_s2Vs9_entry, .-sat_s2Vs9_entry


==================== Asm code ====================
2018-03-16 15:57:35.361382012 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Vs9_info:
	.quad	sat_s2Vs9_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:35.362169785 UTC

.section .text
.align 8
dec'_s2Vsg_entry:
_c39vV:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c39vW
_c39vX:
	movq $block_c39vS_info,-8(%rbp)
	movq 16(%rbx),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c39vS
_c39vT:
	movq (%rbx),%rax
	jmp *(%rax)
_c39vW:
	jmp *-16(%r13)
	.size dec'_s2Vsg_entry, .-dec'_s2Vsg_entry


==================== Asm code ====================
2018-03-16 15:57:35.362839892 UTC

.section .data.rel.ro
.align 8
.align 1
dec'_s2Vsg_info:
	.quad	dec'_s2Vsg_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:35.363587356 UTC

.section .text
.align 8
_c39vS:
_c39vS:
	cmpq $1,7(%rbx)
	jg _c39w4
_c39w5:
	movl $GHC.Float.$fRealFracFloat2_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c39w4:
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c39vS, .-_c39vS


==================== Asm code ====================
2018-03-16 15:57:35.364200496 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39vS_info:
	.quad	_c39vS
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.364889724 UTC

.section .text
.align 8
sat_s2Vsq_entry:
_c39wm:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c39wt
_c39wu:
	movq $block_c39wk_info,-8(%rbp)
	movq 16(%rbx),%rbx
	addq $-8,%rbp
	jmp dec'_s2Vsg_entry
_c39wt:
	jmp *-16(%r13)
	.size sat_s2Vsq_entry, .-sat_s2Vsq_entry


==================== Asm code ====================
2018-03-16 15:57:35.365637395 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Vsq_info:
	.quad	sat_s2Vsq_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:35.36638818 UTC

.section .text
.align 8
_c39wk:
_c39wk:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c39wx
_c39ww:
	movq 7(%rbx),%rax
	incq %rax
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c39wx:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c39wk, .-_c39wk


==================== Asm code ====================
2018-03-16 15:57:35.367074377 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39wk_info:
	.quad	_c39wk
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.367921385 UTC

.section .text
.align 8
ds5_s2Vsm_entry:
_c39wB:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c39wC
_c39wD:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c39wF
_c39wE:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $sat_s2Vsq_info,-16(%r12)
	movq %rbx,(%r12)
	movq $block_c39wy_info,-24(%rbp)
	movq %rax,%rdi
	leaq -16(%r12),%rsi
	movl $base_r2UqK_closure+1,%r14d
	addq $-24,%rbp
	jmp GHC.Float.$wroundTo_entry
_c39wF:
	movq $24,904(%r13)
_c39wC:
	jmp *-16(%r13)
	.size ds5_s2Vsm_entry, .-ds5_s2Vsm_entry


==================== Asm code ====================
2018-03-16 15:57:35.368677843 UTC

.section .data.rel.ro
.align 8
.align 1
ds5_s2Vsm_info:
	.quad	ds5_s2Vsm_entry
	.quad	2
	.quad	4294967314
	.quad	S2VLN_srt+1200


==================== Asm code ====================
2018-03-16 15:57:35.369522432 UTC

.section .text
.align 8
_c39wy:
_c39wy:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c39wI
_c39wH:
	movq $(,)_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c39wI:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c39wy, .-_c39wy


==================== Asm code ====================
2018-03-16 15:57:35.370179453 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39wy_info:
	.quad	_c39wy
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.371014384 UTC

.section .text
.align 8
ds6_s2Vsu_entry:
_c39wQ:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c39wU
_c39wV:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c39wN_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _c39wN
_c39wO:
	movq (%rbx),%rax
	jmp *(%rax)
_c39wU:
	jmp *-16(%r13)
	.size ds6_s2Vsu_entry, .-ds6_s2Vsu_entry


==================== Asm code ====================
2018-03-16 15:57:35.371718771 UTC

.section .data.rel.ro
.align 8
.align 1
ds6_s2Vsu_info:
	.quad	ds6_s2Vsu_entry
	.quad	1
	.quad	210453397520
	.quad	S2VLN_srt+1176


==================== Asm code ====================
2018-03-16 15:57:35.372500971 UTC

.section .text
.align 8
_c39wN:
_c39wN:
	movq $block_c39wT_info,-8(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c39wT
_c39wX:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c39wN, .-_c39wN


==================== Asm code ====================
2018-03-16 15:57:35.373179934 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39wN_info:
	.quad	_c39wN
	.quad	0
	.quad	210453397534
	.quad	S2VLN_srt+1176


==================== Asm code ====================
2018-03-16 15:57:35.374098923 UTC

.section .text
.align 8
_c39wT:
_c39wT:
	movq 8(%rbp),%rax
	cmpq $0,7(%rbx)
	jle _c39x7
_c39xn:
	movq $block_c39xm_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c39xm
_c39xo:
	movq (%rbx),%rax
	jmp *(%rax)
_c39x7:
	movq $block_c39x5_info,8(%rbp)
	movq %rax,%rsi
	movl $GHC.Show.intToDigit_closure+1,%r14d
	addq $8,%rbp
	jmp GHC.Base.map_entry
	.size _c39wT, .-_c39wT


==================== Asm code ====================
2018-03-16 15:57:35.375387501 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39wT_info:
	.quad	_c39wT
	.quad	1
	.quad	210453397534
	.quad	S2VLN_srt+1176


==================== Asm code ====================
2018-03-16 15:57:35.376302171 UTC

.section .text
.align 8
_c39x5:
_c39x5:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _u39xV
_c39xh:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c39xk
_c39xj:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq $(,)_con_info,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u39xV:
	addq $8,%rbp
	jmp _c39xK
_c39xk:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c39x5, .-_c39x5


==================== Asm code ====================
2018-03-16 15:57:35.376972864 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39x5_info:
	.quad	_c39x5
	.quad	0
	.quad	4294967326
	.quad	S2VLN_srt+1216


==================== Asm code ====================
2018-03-16 15:57:35.377747635 UTC

.section .text
.align 8
_c39xm:
_c39xm:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c39xu
_c39xz:
	movq $block_c39xx_info,(%rbp)
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp GHC.List.init1_entry
_c39xu:
	movl $GHC.List.init2_closure,%ebx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c39xm, .-_c39xm


==================== Asm code ====================
2018-03-16 15:57:35.378355203 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39xm_info:
	.quad	_c39xm
	.quad	0
	.quad	210453397534
	.quad	S2VLN_srt+1176


==================== Asm code ====================
2018-03-16 15:57:35.379003228 UTC

.section .text
.align 8
_c39xx:
_c39xx:
	movq $block_c39xD_info,(%rbp)
	movq %rbx,%rsi
	movl $GHC.Show.intToDigit_closure+1,%r14d
	jmp GHC.Base.map_entry
	.size _c39xx, .-_c39xx


==================== Asm code ====================
2018-03-16 15:57:35.37966769 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39xx_info:
	.quad	_c39xx
	.quad	0
	.quad	141733920798
	.quad	S2VLN_srt+1176


==================== Asm code ====================
2018-03-16 15:57:35.380458386 UTC

.section .text
.align 8
_c39xD:
_c39xD:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _u39xW
_c39xO:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c39xR
_c39xQ:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq $(,)_con_info,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u39xW:
	addq $8,%rbp
	jmp _c39xK
_c39xR:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c39xD, .-_c39xD


==================== Asm code ====================
2018-03-16 15:57:35.381151524 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39xD_info:
	.quad	_c39xD
	.quad	0
	.quad	4294967326
	.quad	S2VLN_srt+1216


==================== Asm code ====================
2018-03-16 15:57:35.381901387 UTC

.section .text
.align 8
_c39xK:
_c39xK:
	movl $lvl18_r2UqR_closure,%ebx
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c39xK, .-_c39xK


==================== Asm code ====================
2018-03-16 15:57:35.382696869 UTC

.section .text
.align 8
sat_s2Vt5_entry:
_c39yi:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c39yE
_c39yF:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c39yf_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c39yf
_c39yg:
	movq (%rbx),%rax
	jmp *(%rax)
_c39yE:
	jmp *-16(%r13)
	.size sat_s2Vt5_entry, .-sat_s2Vt5_entry


==================== Asm code ====================
2018-03-16 15:57:35.383374625 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Vt5_info:
	.quad	sat_s2Vt5_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:35.38406223 UTC

.section .text
.align 8
_c39yf:
_c39yf:
	movq $block_c39yl_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c39yl
_c39ym:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c39yf, .-_c39yf


==================== Asm code ====================
2018-03-16 15:57:35.384657761 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39yf_info:
	.quad	_c39yf
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.385360753 UTC

.section .text
.align 8
_c39yl:
_c39yl:
	movq $block_c39yq_info,(%rbp)
	movq 7(%rbx),%rbx
	testb $7,%bl
	jne _c39yq
_c39yr:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c39yl, .-_c39yl


==================== Asm code ====================
2018-03-16 15:57:35.385972678 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39yl_info:
	.quad	_c39yl
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.386686714 UTC

.section .text
.align 8
_c39yq:
_c39yq:
	movq 7(%rbx),%rax
	decq %rax
	movq 8(%rbp),%rbx
	addq %rax,%rbx
	movq $block_c39yB_info,8(%rbp)
	movl $GHC.Types.[]_closure+1,%edi
	movq %rbx,%rsi
	xorl %r14d,%r14d
	addq $8,%rbp
	jmp GHC.Show.$wshowSignedInt_entry
	.size _c39yq, .-_c39yq


==================== Asm code ====================
2018-03-16 15:57:35.387296689 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39yq_info:
	.quad	_c39yq
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.388034451 UTC

.section .text
.align 8
_c39yB:
_c39yB:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c39yL
_c39yK:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c39yL:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c39yB, .-_c39yB


==================== Asm code ====================
2018-03-16 15:57:35.38867565 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39yB_info:
	.quad	_c39yB
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.389511726 UTC

.section .text
.align 8
sat_s2Vt7_entry:
_c39yP:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c39yR
_c39yS:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c39y6_info,-40(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _c39y6
_c39y7:
	movq (%rbx),%rax
	jmp *(%rax)
_c39yR:
	jmp *-16(%r13)
	.size sat_s2Vt7_entry, .-sat_s2Vt7_entry


==================== Asm code ====================
2018-03-16 15:57:35.390193345 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Vt7_info:
	.quad	sat_s2Vt7_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:57:35.390976524 UTC

.section .text
.align 8
_c39y6:
_c39y6:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c39yV
_c39yU:
	movq 15(%rbx),%rax
	movq $sat_s2Vt5_info,-48(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq $:_con_info,-16(%r12)
	movq $lvl19_r2UqS_closure+1,-8(%r12)
	leaq -48(%r12),%rbx
	movq %rbx,(%r12)
	leaq -14(%r12),%rsi
	movq %rax,%r14
	addq $24,%rbp
	jmp GHC.Base.++_entry
_c39yV:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c39y6, .-_c39y6


==================== Asm code ====================
2018-03-16 15:57:35.391651993 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39y6_info:
	.quad	_c39y6
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.392367375 UTC

.section .text
.align 8
sat_s2Vtj_entry:
_c39zm:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c39zn
_c39zo:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c39zk_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	jmp dec'_s2Vsg_entry
_c39zn:
	jmp *-16(%r13)
	.size sat_s2Vtj_entry, .-sat_s2Vtj_entry


==================== Asm code ====================
2018-03-16 15:57:35.392991649 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Vtj_info:
	.quad	sat_s2Vtj_entry
	.quad	1
	.quad	1103806595088
	.quad	S2VLN_srt+1224


==================== Asm code ====================
2018-03-16 15:57:35.39375054 UTC

.section .text
.align 8
_c39zk:
_c39zk:
	movq 7(%rbx),%rax
	cmpq $0,%rax
	jle _c39zv
_c39zw:
	movq %rax,%r14
	addq $8,%rbp
	jmp $wxs2_r2Ure_entry
_c39zv:
	movl $lvl34_r2Ur8_closure,%ebx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c39zk, .-_c39zk


==================== Asm code ====================
2018-03-16 15:57:35.394390686 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39zk_info:
	.quad	_c39zk
	.quad	0
	.quad	1103806595102
	.quad	S2VLN_srt+1224


==================== Asm code ====================
2018-03-16 15:57:35.395029362 UTC

.section .text
.align 8
sat_s2Vtr_entry:
_c39zQ:
	movq 16(%rbx),%rsi
	movl $GHC.Show.intToDigit_closure+1,%r14d
	jmp GHC.Base.map_entry
	.size sat_s2Vtr_entry, .-sat_s2Vtr_entry


==================== Asm code ====================
2018-03-16 15:57:35.39563958 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Vtr_info:
	.quad	sat_s2Vtr_entry
	.quad	1
	.quad	4294967312
	.quad	S2VLN_srt+1176


==================== Asm code ====================
2018-03-16 15:57:35.396350887 UTC

.section .text
.align 8
n1_s2Vtu_entry:
_c39A9:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c39Aa
_c39Ab:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rsi
	movl $GHC.Show.intToDigit_closure+1,%r14d
	addq $-16,%rbp
	jmp GHC.Base.map_entry
_c39Aa:
	jmp *-16(%r13)
	.size n1_s2Vtu_entry, .-n1_s2Vtu_entry


==================== Asm code ====================
2018-03-16 15:57:35.397038902 UTC

.section .data.rel.ro
.align 8
.align 1
n1_s2Vtu_info:
	.quad	n1_s2Vtu_entry
	.quad	1
	.quad	4294967312
	.quad	S2VLN_srt+1176


==================== Asm code ====================
2018-03-16 15:57:35.397849533 UTC

.section .text
.align 8
sat_s2VtA_entry:
_c39Aq:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c39Ar
_c39As:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	leaq -1(%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp $wxs4_s2Vtw_entry
_c39Ar:
	jmp *-16(%r13)
	.size sat_s2VtA_entry, .-sat_s2VtA_entry


==================== Asm code ====================
2018-03-16 15:57:35.398469478 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2VtA_info:
	.quad	sat_s2VtA_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 15:57:35.399313786 UTC

.section .text
.align 8
$wxs4_s2Vtw_entry:
_c39Aw:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c39AA
_c39Az:
	cmpq $1,%r14
	je _c39Av
_c39Au:
	movq $sat_s2VtA_info,-48(%r12)
	movq %rbx,-32(%r12)
	movq %r14,-24(%r12)
	movq $:_con_info,-16(%r12)
	movq $lvl20_r2UqT_closure+1,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c39AA:
	movq $56,904(%r13)
	jmp *-8(%r13)
_c39Av:
	movq 7(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size $wxs4_s2Vtw_entry, .-$wxs4_s2Vtw_entry


==================== Asm code ====================
2018-03-16 15:57:35.400075095 UTC

.section .data.rel.ro
.align 8
.align 1
$wxs4_s2Vtw_info:
	.quad	$wxs4_s2Vtw_entry
	.quad	1
	.quad	9
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:57:35.401008848 UTC

.section .text
.align 8
sat_s2VtB_entry:
_c39AC:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c39AD
_c39AE:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c39AG
_c39AF:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	negq %rbx
	cmpq $0,%rbx
	jle _c39AI
_c39AJ:
	movq $n1_s2Vtu_info,-56(%r12)
	movq %rax,-40(%r12)
	movq $:_con_info,-32(%r12)
	movq $lvl20_r2UqT_closure+1,-24(%r12)
	leaq -56(%r12),%rax
	movq %rax,-16(%r12)
	movq $$wxs4_s2Vtw_info,-8(%r12)
	leaq -30(%r12),%rax
	movq %rax,(%r12)
	movq %rbx,%r14
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	jmp $wxs4_s2Vtw_entry
_c39AI:
	addq $-64,%r12
	movq %rax,%rsi
	movl $GHC.Show.intToDigit_closure+1,%r14d
	addq $-16,%rbp
	jmp GHC.Base.map_entry
_c39AG:
	movq $64,904(%r13)
_c39AD:
	jmp *-16(%r13)
	.size sat_s2VtB_entry, .-sat_s2VtB_entry


==================== Asm code ====================
2018-03-16 15:57:35.402786706 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2VtB_info:
	.quad	sat_s2VtB_entry
	.quad	4294967297
	.quad	4294967315
	.quad	S2VLN_srt+1176


==================== Asm code ====================
2018-03-16 15:57:35.403739479 UTC

.section .text
.align 8
sat_s2VtM_entry:
_c39Bb:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c39Bc
_c39Bd:
	movq $block_c39B8_info,-8(%rbp)
	movq 16(%rbx),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c39B8
_c39B9:
	movq (%rbx),%rax
	jmp *(%rax)
_c39Bc:
	jmp *-16(%r13)
	.size sat_s2VtM_entry, .-sat_s2VtM_entry


==================== Asm code ====================
2018-03-16 15:57:35.404355749 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2VtM_info:
	.quad	sat_s2VtM_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:35.405112756 UTC

.section .text
.align 8
_c39B8:
_c39B8:
	cmpq $0,7(%rbx)
	jg _c39Bk
_c39Bl:
	movl $GHC.Float.minExpt_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c39Bk:
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c39B8, .-_c39B8


==================== Asm code ====================
2018-03-16 15:57:35.405826192 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39B8_info:
	.quad	_c39B8
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.406526862 UTC

.section .text
.align 8
sat_s2VtV_entry:
_c39BC:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c39BD
_c39BE:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	leaq -1(%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp $wxs4_s2VtR_entry
_c39BD:
	jmp *-16(%r13)
	.size sat_s2VtV_entry, .-sat_s2VtV_entry


==================== Asm code ====================
2018-03-16 15:57:35.407146682 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2VtV_info:
	.quad	sat_s2VtV_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 15:57:35.407932119 UTC

.section .text
.align 8
$wxs4_s2VtR_entry:
_c39BI:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c39BM
_c39BL:
	cmpq $1,%r14
	je _c39BH
_c39BG:
	movq $sat_s2VtV_info,-48(%r12)
	movq %rbx,-32(%r12)
	movq %r14,-24(%r12)
	movq $:_con_info,-16(%r12)
	movq $GHC.Float.minExpt_closure+1,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c39BM:
	movq $56,904(%r13)
	jmp *-8(%r13)
_c39BH:
	movq 7(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size $wxs4_s2VtR_entry, .-$wxs4_s2VtR_entry


==================== Asm code ====================
2018-03-16 15:57:35.408666789 UTC

.section .data.rel.ro
.align 8
.align 1
$wxs4_s2VtR_info:
	.quad	$wxs4_s2VtR_entry
	.quad	1
	.quad	9
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:57:35.409474401 UTC

.section .text
.align 8
sat_s2VtZ_entry:
_c39BZ:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c39C0
_c39C1:
	movq $block_c39BW_info,-8(%rbp)
	movq 16(%rbx),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c39BW
_c39BX:
	movq (%rbx),%rax
	jmp *(%rax)
_c39C0:
	jmp *-16(%r13)
	.size sat_s2VtZ_entry, .-sat_s2VtZ_entry


==================== Asm code ====================
2018-03-16 15:57:35.410145909 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2VtZ_info:
	.quad	sat_s2VtZ_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:35.410844064 UTC

.section .text
.align 8
_c39BW:
_c39BW:
	cmpq $0,7(%rbx)
	jg _c39C8
_c39C9:
	movl $GHC.Float.minExpt_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c39C8:
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c39BW, .-_c39BW


==================== Asm code ====================
2018-03-16 15:57:35.411457084 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39BW_info:
	.quad	_c39BW
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.412407643 UTC

.section .text
.align 8
ds4_s2VtG_entry:
_c39Cb:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c39Cc
_c39Cd:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c39Cf
_c39Ce:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	negq %rbx
	cmpq $0,%rbx
	jle _c39Ci
_c39Cm:
	movq $:_con_info,-32(%r12)
	movq $GHC.Float.minExpt_closure+1,-24(%r12)
	movq %rax,-16(%r12)
	movq $$wxs4_s2VtR_info,-8(%r12)
	leaq -30(%r12),%rax
	movq %rax,(%r12)
	movq $block_c39BO_info,-32(%rbp)
	movq %rbx,%r14
	leaq -7(%r12),%rbx
	movq %rcx,-24(%rbp)
	addq $-32,%rbp
	jmp $wxs4_s2VtR_entry
_c39Ci:
	movq $sat_s2VtM_info,-32(%r12)
	movq %rcx,-16(%r12)
	leaq -32(%r12),%rbx
	addq $-16,%r12
	movq $block_c39Cg_info,-24(%rbp)
	movq %rax,%rdi
	movq %rbx,%rsi
	movl $base_r2UqK_closure+1,%r14d
	addq $-24,%rbp
	jmp GHC.Float.$wroundTo_entry
_c39Cf:
	movq $40,904(%r13)
_c39Cc:
	jmp *-16(%r13)
	.size ds4_s2VtG_entry, .-ds4_s2VtG_entry


==================== Asm code ====================
2018-03-16 15:57:35.413226053 UTC

.section .data.rel.ro
.align 8
.align 1
ds4_s2VtG_info:
	.quad	ds4_s2VtG_entry
	.quad	4294967298
	.quad	12884901903
	.quad	S2VLN_srt+1192


==================== Asm code ====================
2018-03-16 15:57:35.413932935 UTC

.section .text
.align 8
_c39Cg:
_c39Cg:
	movq %r14,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp $j_r2Urc_entry
	.size _c39Cg, .-_c39Cg


==================== Asm code ====================
2018-03-16 15:57:35.41452625 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39Cg_info:
	.quad	_c39Cg
	.quad	0
	.quad	4294967326
	.quad	S2VLN_srt+1192


==================== Asm code ====================
2018-03-16 15:57:35.415248263 UTC

.section .text
.align 8
_c39BO:
_c39BO:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c39Cp
_c39Co:
	movq $sat_s2VtZ_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	movq $block_c39Cl_info,8(%rbp)
	movq %rbx,%rdi
	leaq -16(%r12),%rsi
	movl $base_r2UqK_closure+1,%r14d
	addq $8,%rbp
	jmp GHC.Float.$wroundTo_entry
_c39Cp:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c39BO, .-_c39BO


==================== Asm code ====================
2018-03-16 15:57:35.415987006 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39BO_info:
	.quad	_c39BO
	.quad	1
	.quad	12884901918
	.quad	S2VLN_srt+1192


==================== Asm code ====================
2018-03-16 15:57:35.416604907 UTC

.section .text
.align 8
_c39Cl:
_c39Cl:
	movq %r14,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp $j_r2Urc_entry
	.size _c39Cl, .-_c39Cl


==================== Asm code ====================
2018-03-16 15:57:35.417165109 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39Cl_info:
	.quad	_c39Cl
	.quad	0
	.quad	4294967326
	.quad	S2VLN_srt+1192


==================== Asm code ====================
2018-03-16 15:57:35.418650714 UTC

.section .text
.align 8
sat_s2Vuf_entry:
_c39Cz:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c39CA
_c39CB:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c39Cw_info,-32(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c39Cw
_c39Cx:
	movq (%rbx),%rax
	jmp *(%rax)
_c39CA:
	jmp *-16(%r13)
	.size sat_s2Vuf_entry, .-sat_s2Vuf_entry


==================== Asm code ====================
2018-03-16 15:57:35.419345515 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Vuf_info:
	.quad	sat_s2Vuf_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:35.419976706 UTC

.section .text
.align 8
_c39Cw:
_c39Cw:
	movq $block_c39CE_info,(%rbp)
	movq 15(%rbx),%rbx
	testb $7,%bl
	jne _c39CE
_c39CG:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c39Cw, .-_c39Cw


==================== Asm code ====================
2018-03-16 15:57:35.420612557 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39Cw_info:
	.quad	_c39Cw
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.421511937 UTC

.section .text
.align 8
_c39CE:
_c39CE:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c39CN
_c39D2:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c39D5
_c39D4:
	movq $:_con_info,-16(%r12)
	movq $lvl14_r2UqN_closure+1,-8(%r12)
	movq %rbx,(%r12)
	leaq -14(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c39D5:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_c39CN:
	movq 8(%rbp),%rax
	movq $block_c39CK_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c39CK
_c39CO:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c39CE, .-_c39CE


==================== Asm code ====================
2018-03-16 15:57:35.422241961 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39CE_info:
	.quad	_c39CE
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.422971718 UTC

.section .text
.align 8
_c39CK:
_c39CK:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c39CU
_c39CY:
	movl $lvl37_r2Urd_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c39CU:
	movl $[]_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c39CK, .-_c39CK


==================== Asm code ====================
2018-03-16 15:57:35.423601081 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39CK_info:
	.quad	_c39CK
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.424382285 UTC

.section .text
.align 8
sat_s2Vuk_entry:
_c39Dj:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c39Dk
_c39Dl:
	movq $block_c39Dg_info,-24(%rbp)
	movq 24(%rbx),%rax
	movq 32(%rbx),%rcx
	movq 16(%rbx),%rbx
	movq %rax,-16(%rbp)
	movq %rcx,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c39Dg
_c39Dh:
	movq (%rbx),%rax
	jmp *(%rax)
_c39Dk:
	jmp *-16(%r13)
	.size sat_s2Vuk_entry, .-sat_s2Vuk_entry


==================== Asm code ====================
2018-03-16 15:57:35.42506918 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Vuk_info:
	.quad	sat_s2Vuk_entry
	.quad	4294967298
	.quad	15


==================== Asm code ====================
2018-03-16 15:57:35.425939819 UTC

.section .text
.align 8
_c39Dg:
_c39Dg:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c39Dq
_c39Dp:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jg _c39Dz
_c39DA:
	addq $-16,%r12
	movq 8(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c39Dz:
	movq $GHC.Types.I#_con_info,-8(%r12)
	addq 16(%rbp),%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c39Dq:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c39Dg, .-_c39Dg


==================== Asm code ====================
2018-03-16 15:57:35.42669253 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39Dg_info:
	.quad	_c39Dg
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.427432823 UTC

.section .text
.align 8
sat_s2VuC_entry:
_c39Ec:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c39Ed
_c39Ee:
	movq $block_c39E5_info,-16(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c39E5
_c39E6:
	movq (%rbx),%rax
	jmp *(%rax)
_c39Ed:
	jmp *-16(%r13)
	.size sat_s2VuC_entry, .-sat_s2VuC_entry


==================== Asm code ====================
2018-03-16 15:57:35.428163347 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2VuC_info:
	.quad	sat_s2VuC_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:35.429087311 UTC

.section .text
.align 8
_c39E5:
_c39E5:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c39E9
_c39Ea:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c39Ez
_c39Ey:
	movq $:_con_info,-16(%r12)
	movq $lvl14_r2UqN_closure+1,-8(%r12)
	movq %rbx,(%r12)
	leaq -14(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c39Ez:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_c39E9:
	movq 8(%rbp),%rax
	movq $block_c39Eh_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c39Eh
_c39Ej:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c39E5, .-_c39E5


==================== Asm code ====================
2018-03-16 15:57:35.43046437 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39E5_info:
	.quad	_c39E5
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.431252867 UTC

.section .text
.align 8
_c39Eh:
_c39Eh:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c39Ep
_c39Et:
	movl $lvl37_r2Urd_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c39Ep:
	movl $[]_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c39Eh, .-_c39Eh


==================== Asm code ====================
2018-03-16 15:57:35.431855674 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39Eh_info:
	.quad	_c39Eh
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.432620131 UTC

.section .text
.align 8
sat_s2VuJ_entry:
_c39EQ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c39ER
_c39ES:
	movq $block_c39EJ_info,-16(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c39EJ
_c39EK:
	movq (%rbx),%rax
	jmp *(%rax)
_c39ER:
	jmp *-16(%r13)
	.size sat_s2VuJ_entry, .-sat_s2VuJ_entry


==================== Asm code ====================
2018-03-16 15:57:35.433703245 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2VuJ_info:
	.quad	sat_s2VuJ_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:35.434533951 UTC

.section .text
.align 8
_c39EJ:
_c39EJ:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c39EN
_c39EO:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c39Fd
_c39Fc:
	movq $:_con_info,-16(%r12)
	movq $lvl14_r2UqN_closure+1,-8(%r12)
	movq %rbx,(%r12)
	leaq -14(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c39Fd:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_c39EN:
	movq 8(%rbp),%rax
	movq $block_c39EV_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c39EV
_c39EX:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c39EJ, .-_c39EJ


==================== Asm code ====================
2018-03-16 15:57:35.435262737 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39EJ_info:
	.quad	_c39EJ
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.435988963 UTC

.section .text
.align 8
_c39EV:
_c39EV:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c39F3
_c39F7:
	movl $lvl37_r2Urd_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c39F3:
	movl $[]_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c39EV, .-_c39EV


==================== Asm code ====================
2018-03-16 15:57:35.436645166 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39EV_info:
	.quad	_c39EV
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.437393046 UTC

.section .text
.align 8
sat_s2VuO_entry:
_c39Fs:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c39Ft
_c39Fu:
	movq $block_c39Fm_info,-16(%rbp)
	movq 24(%rbx),%rsi
	movl $GHC.Show.intToDigit_closure+1,%r14d
	movq 16(%rbx),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Base.map_entry
_c39Ft:
	jmp *-16(%r13)
	.size sat_s2VuO_entry, .-sat_s2VuO_entry


==================== Asm code ====================
2018-03-16 15:57:35.438045447 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2VuO_info:
	.quad	sat_s2VuO_entry
	.quad	2
	.quad	4294967314
	.quad	S2VLN_srt+1176


==================== Asm code ====================
2018-03-16 15:57:35.438876722 UTC

.section .text
.align 8
_c39Fm:
_c39Fm:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c39Fp
_c39Fq:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c39FP
_c39FO:
	movq $:_con_info,-16(%r12)
	movq $lvl14_r2UqN_closure+1,-8(%r12)
	movq %rbx,(%r12)
	leaq -14(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c39FP:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_c39Fp:
	movq 8(%rbp),%rax
	movq $block_c39Fx_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c39Fx
_c39Fz:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c39Fm, .-_c39Fm


==================== Asm code ====================
2018-03-16 15:57:35.439597731 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39Fm_info:
	.quad	_c39Fm
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.440336483 UTC

.section .text
.align 8
_c39Fx:
_c39Fx:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c39FF
_c39FJ:
	movl $lvl37_r2Urd_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c39FF:
	movl $[]_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c39Fx, .-_c39Fx


==================== Asm code ====================
2018-03-16 15:57:35.44095287 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39Fx_info:
	.quad	_c39Fx
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.441687519 UTC

.section .text
.align 8
$wdoFmt_s2VrK_entry:
_c39FX:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c39FY
_u39Ik:
	movq %rbx,-32(%rbp)
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-32,%rbp
	jmp _c39ut
_c39FY:
	jmp *-8(%r13)
	.size $wdoFmt_s2VrK_entry, .-$wdoFmt_s2VrK_entry


==================== Asm code ====================
2018-03-16 15:57:35.442299696 UTC

.section .data.rel.ro
.align 8
.align 1
$wdoFmt_s2VrK_info:
	.quad	$wdoFmt_s2VrK_entry
	.quad	2
	.quad	1160891005403147
	.quad	12884901911
	.quad	S2VLN_srt+1144


==================== Asm code ====================
2018-03-16 15:57:35.443016808 UTC

.section .text
.align 8
_c39ut:
_c39ut:
	movq $block_c39uw_info,-16(%rbp)
	movq 8(%rbp),%rbx
	movq (%rbp),%rax
	movq 13(%rax),%rcx
	movq %rcx,-8(%rbp)
	movq 5(%rax),%rax
	movq %rax,8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c39uw
_c39ux:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c39ut, .-_c39ut


==================== Asm code ====================
2018-03-16 15:57:35.443903859 UTC

.section .text
.align 8
_c39uw:
_c39uw:
	andl $7,%ebx
	cmpq $3,%rbx
	jb _u39Ij
_c39FV:
	movq $block_c39HT_info,8(%rbp)
	movq 40(%rbp),%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c39HT
_c39HV:
	movq (%rbx),%rax
	jmp *(%rax)
_u39Ij:
	movq 24(%rbp),%rax
	cmpq $2,%rbx
	jb _c39FT
_c39FU:
	movq $block_c39zz_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c39zz
_c39zA:
	movq (%rbx),%rax
	jmp *(%rax)
_c39FT:
	movq $block_c39uB_info,24(%rbp)
	movq %rax,%rbx
	addq $24,%rbp
	testb $7,%bl
	jne _c39uB
_c39uC:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c39uw, .-_c39uw


==================== Asm code ====================
2018-03-16 15:57:35.444610921 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39uw_info:
	.quad	_c39uw
	.quad	5
	.quad	1160891005403166
	.quad	S2VLN_srt+1144


==================== Asm code ====================
2018-03-16 15:57:35.445503867 UTC

.section .text
.align 8
_c39uB:
_c39uB:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c39G3
_c39GI:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c39GL
_c39GK:
	movq 6(%rbx),%rbx
	movq $dec'_s2Vsg_info,-16(%r12)
	movq %rbx,(%r12)
	movq $block_c39yX_info,-8(%rbp)
	movq %rax,%rbx
	leaq -16(%r12),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c39yX
_c39yY:
	movq (%rbx),%rax
	jmp *(%rax)
_c39GL:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_c39G3:
	movq $block_c39uG_info,8(%rbp)
	movq %rax,%rsi
	movl $GHC.Show.intToDigit_closure+1,%r14d
	addq $8,%rbp
	jmp GHC.Base.map_entry
	.size _c39uB, .-_c39uB


==================== Asm code ====================
2018-03-16 15:57:35.446234062 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39uB_info:
	.quad	_c39uB
	.quad	2
	.quad	72537702662174
	.quad	S2VLN_srt+1176


==================== Asm code ====================
2018-03-16 15:57:35.44693456 UTC

.section .text
.align 8
_c39uG:
_c39uG:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c39G7
_c39G9:
	movq $block_c39uL_info,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c39uL
_c39uM:
	movq (%rbx),%rax
	jmp *(%rax)
_c39G7:
	movl $lvl13_r2UqM_closure,%ebx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c39uG, .-_c39uG


==================== Asm code ====================
2018-03-16 15:57:35.447622044 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39uG_info:
	.quad	_c39uG
	.quad	1
	.quad	12884901918
	.quad	S2VLN_srt+1232


==================== Asm code ====================
2018-03-16 15:57:35.448371623 UTC

.section .text
.align 8
_c39uL:
_c39uL:
	cmpq $48,7(%rbx)
	je _c39Gw
_u39Im:
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp _c39uT
_c39Gw:
	movq $block_c39Gv_info,-8(%rbp)
	movq %rbx,%rax
	movq 8(%rbp),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c39Gv
_c39Gx:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c39uL, .-_c39uL


==================== Asm code ====================
2018-03-16 15:57:35.449003009 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39uL_info:
	.quad	_c39uL
	.quad	2
	.quad	4294967326
	.quad	S2VLN_srt+1240


==================== Asm code ====================
2018-03-16 15:57:35.449774206 UTC

.section .text
.align 8
_c39Gv:
_c39Gv:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c39GD
	jmp _c39uT
_c39GD:
	movl $lvl16_r2UqP_closure,%ebx
	addq $32,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c39Gv, .-_c39Gv


==================== Asm code ====================
2018-03-16 15:57:35.450383619 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39Gv_info:
	.quad	_c39Gv
	.quad	3
	.quad	4294967326
	.quad	S2VLN_srt+1240


==================== Asm code ====================
2018-03-16 15:57:35.451138193 UTC

.section .text
.align 8
_c39uT:
_c39uT:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c39Gd
_c39Gc:
	movq $show_e'_s2VrX_info,-16(%r12)
	movq 24(%rbp),%rax
	movq %rax,(%r12)
	movq $block_c39vi_info,(%rbp)
	movq 16(%rbp),%rbx
	leaq -16(%r12),%rax
	movq %rax,24(%rbp)
	testb $7,%bl
	jne _c39vi
_c39vj:
	movq (%rbx),%rax
	jmp *(%rax)
_c39Gd:
	movq $24,904(%r13)
	movq $block_c39uT_info,(%rbp)
	jmp stg_gc_noregs
	.size _c39uT, .-_c39uT


==================== Asm code ====================
2018-03-16 15:57:35.451860453 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39uT_info:
	.quad	_c39uT
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.452816087 UTC

.section .text
.align 8
_c39vi:
_c39vi:
	movq 24(%rbp),%rax
	movq 8(%rbp),%rcx
	movq %rbx,%rdx
	andl $7,%edx
	cmpq $1,%rdx
	je _c39Gg
_c39Gm:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _c39Gp
_c39Go:
	movq $sat_s2Vs9_info,-72(%r12)
	movq %rax,-56(%r12)
	movq %rbx,-48(%r12)
	movq $:_con_info,-40(%r12)
	movq $lvl14_r2UqN_closure+1,-32(%r12)
	leaq -72(%r12),%rax
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	movq %rcx,-8(%r12)
	leaq -38(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c39Gp:
	movq $80,904(%r13)
	jmp stg_gc_unpt_r1
_c39Gj:
	movq $48,904(%r13)
	jmp stg_gc_unpt_r1
_c39Gg:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c39Gj
_c39Gi:
	movq $sat_s2Vs5_info,-40(%r12)
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	movq %rcx,-8(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c39vi, .-_c39vi


==================== Asm code ====================
2018-03-16 15:57:35.453749493 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39vi_info:
	.quad	_c39vi
	.quad	131
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.454500624 UTC

.section .text
.align 8
_c39yX:
_c39yX:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c39wa
_c39GX:
	movq $block_c39z3_info,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c39z3
_c39z4:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c39yX, .-_c39yX


==================== Asm code ====================
2018-03-16 15:57:35.455147842 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39yX_info:
	.quad	_c39yX
	.quad	3
	.quad	70888435220510
	.quad	S2VLN_srt+1176


==================== Asm code ====================
2018-03-16 15:57:35.455914507 UTC

.section .text
.align 8
_c39z3:
_c39z3:
	cmpq $0,7(%rbx)
	je _c39H1
_u39Il:
	addq $8,%rbp
	jmp _c39wa
_c39H1:
	movq 8(%rbp),%rax
	movq $block_c39zb_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c39zb
_c39zc:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c39z3, .-_c39z3


==================== Asm code ====================
2018-03-16 15:57:35.457147286 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39z3_info:
	.quad	_c39z3
	.quad	4
	.quad	70888435220510
	.quad	S2VLN_srt+1176


==================== Asm code ====================
2018-03-16 15:57:35.458104679 UTC

.section .text
.align 8
_c39zb:
_c39zb:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c39H5
	jmp _c39wa
_c39H8:
	movq $72,904(%r13)
	jmp stg_gc_unpt_r1
_c39H5:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c39H8
_c39H7:
	movq $sat_s2Vtj_info,-64(%r12)
	movq 8(%rbp),%rax
	movq %rax,-48(%r12)
	movq $:_con_info,-40(%r12)
	movq $lvl14_r2UqN_closure+1,-32(%r12)
	leaq -64(%r12),%rax
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	movq $lvl20_r2UqT_closure+1,-8(%r12)
	leaq -38(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c39zb, .-_c39zb


==================== Asm code ====================
2018-03-16 15:57:35.458872541 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39zb_info:
	.quad	_c39zb
	.quad	3
	.quad	70888435220510
	.quad	S2VLN_srt+1176


==================== Asm code ====================
2018-03-16 15:57:35.459774048 UTC

.section .text
.align 8
_c39wa:
_c39wa:
	addq $168,%r12
	cmpq 856(%r13),%r12
	ja _c39GR
_c39GQ:
	movq $ds5_s2Vsm_info,-160(%r12)
	movq 16(%rbp),%rax
	movq %rax,-144(%r12)
	movq 8(%rbp),%rax
	movq %rax,-136(%r12)
	movq $ds6_s2Vsu_info,-128(%r12)
	leaq -160(%r12),%rax
	movq %rax,-112(%r12)
	movq $sat_s2Vt7_info,-104(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-88(%r12)
	movq %rax,-80(%r12)
	leaq -128(%r12),%rax
	movq %rax,-72(%r12)
	movq $:_con_info,-64(%r12)
	movq $lvl14_r2UqN_closure+1,-56(%r12)
	leaq -104(%r12),%rbx
	movq %rbx,-48(%r12)
	movq $stg_sel_0_upd_info,-40(%r12)
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -62(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c39GR:
	movq $168,904(%r13)
	movq $block_c39wa_info,(%rbp)
	jmp stg_gc_noregs
	.size _c39wa, .-_c39wa


==================== Asm code ====================
2018-03-16 15:57:35.460501812 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39wa_info:
	.quad	_c39wa
	.quad	3
	.quad	244813135902
	.quad	S2VLN_srt+1176


==================== Asm code ====================
2018-03-16 15:57:35.461345875 UTC

.section .text
.align 8
_c39zz:
_c39zz:
	movq 40(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c39Hg
_c39Ho:
	movq $block_c39AM_info,(%rbp)
	movq 6(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,40(%rbp)
	testb $7,%bl
	jne _c39AM
_c39AN:
	movq (%rbx),%rax
	jmp *(%rax)
_c39Hg:
	movq $block_c39zE_info,24(%rbp)
	movq %rax,%rbx
	addq $24,%rbp
	testb $7,%bl
	jne _c39zE
_c39zF:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c39zz, .-_c39zz


==================== Asm code ====================
2018-03-16 15:57:35.461950503 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39zz_info:
	.quad	_c39zz
	.quad	389
	.quad	906238099486
	.quad	S2VLN_srt+1144


==================== Asm code ====================
2018-03-16 15:57:35.462762765 UTC

.section .text
.align 8
_c39zE:
_c39zE:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c39Hj
_c39Hi:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	testq %rbx,%rbx
	jg _c39Hl
_c39Hm:
	movq $sat_s2VtB_info,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rsi
	movl $lvl36_r2Urb_bytes,%r14d
	addq $24,%rbp
	jmp GHC.CString.unpackAppendCString#_entry
_c39Hl:
	movq $sat_s2Vtr_info,-24(%r12)
	movq %rax,-8(%r12)
	leaq -24(%r12),%rax
	addq $-8,%r12
	movq %rax,%rdi
	movl $GHC.Types.[]_closure+1,%esi
	movq %rbx,%r14
	addq $24,%rbp
	jmp $wf_r2UqX_entry
_c39Hj:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c39zE, .-_c39zE


==================== Asm code ====================
2018-03-16 15:57:35.463505933 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39zE_info:
	.quad	_c39zE
	.quad	130
	.quad	38654705694
	.quad	S2VLN_srt+1152


==================== Asm code ====================
2018-03-16 15:57:35.464419751 UTC

.section .text
.align 8
_c39AM:
_c39AM:
	addq $120,%r12
	cmpq 856(%r13),%r12
	ja _c39Hr
_c39Hq:
	movq 32(%rbp),%rax
	movq 40(%rbp),%rcx
	movq 7(%rbx),%rdx
	testq %rdx,%rdx
	jl _c39Hv
_c39Hw:
	movq $sat_s2Vuk_info,-112(%r12)
	movq %rcx,-96(%r12)
	movq %rbx,-88(%r12)
	movq %rdx,-80(%r12)
	leaq -112(%r12),%rbx
	addq $-80,%r12
	movq $block_c39DC_info,(%rbp)
	movq %rax,%rdi
	movq %rbx,%rsi
	movl $base_r2UqK_closure+1,%r14d
	movq %rdx,40(%rbp)
	jmp GHC.Float.$wroundTo_entry
_c39Hv:
	movq $ds4_s2VtG_info,-112(%r12)
	movq %rax,-96(%r12)
	movq %rcx,-88(%r12)
	movq %rdx,-80(%r12)
	movq $sat_s2Vuf_info,-72(%r12)
	movq 8(%rbp),%rax
	movq %rax,-56(%r12)
	leaq -112(%r12),%rax
	movq %rax,-48(%r12)
	movq $stg_sel_0_upd_info,-40(%r12)
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -72(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c39Hr:
	movq $120,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c39AM, .-_c39AM


==================== Asm code ====================
2018-03-16 15:57:35.465195733 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39AM_info:
	.quad	_c39AM
	.quad	389
	.quad	897648164894
	.quad	S2VLN_srt+1144


==================== Asm code ====================
2018-03-16 15:57:35.465984247 UTC

.section .text
.align 8
_c39DC:
_c39DC:
	movq $block_c39DE_info,(%rbp)
	movq %r14,32(%rbp)
	testb $7,%bl
	jne _c39DE
_c39DF:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c39DC, .-_c39DC


==================== Asm code ====================
2018-03-16 15:57:35.466611364 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39DC_info:
	.quad	_c39DC
	.quad	1925
	.quad	73014444062
	.quad	S2VLN_srt+1144


==================== Asm code ====================
2018-03-16 15:57:35.467384869 UTC

.section .text
.align 8
_c39DE:
_c39DE:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c39HA
_c39Hz:
	movq 32(%rbp),%rax
	addq $7,%rbx
	movq 40(%rbp),%rcx
	addq (%rbx),%rcx
	testq %rcx,%rcx
	jg _c39HC
_c39HQ:
	movq $sat_s2VuO_info,-24(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -24(%r12),%rsi
	movl $lvl23_r2UqW_closure,%r14d
	addq $48,%rbp
	jmp GHC.Base.++_entry
_c39HC:
	addq $-32,%r12
	movq $block_c39DP_info,(%rbp)
	movq %rax,%rsi
	movl $GHC.Show.intToDigit_closure+1,%r14d
	movq %rcx,40(%rbp)
	jmp GHC.Base.map_entry
_c39HA:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c39DE, .-_c39DE


==================== Asm code ====================
2018-03-16 15:57:35.46807661 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39DE_info:
	.quad	_c39DE
	.quad	1413
	.quad	73014444062
	.quad	S2VLN_srt+1144


==================== Asm code ====================
2018-03-16 15:57:35.468787152 UTC

.section .text
.align 8
_c39DP:
_c39DP:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c39HF
_c39HE:
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq 40(%rbp),%rax
	movq %rax,(%r12)
	movq $block_c39DU_info,(%rbp)
	movq %rbx,%rsi
	leaq -7(%r12),%r14
	jmp GHC.List.$wsplitAt'_entry
_c39HF:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c39DP, .-_c39DP


==================== Asm code ====================
2018-03-16 15:57:35.469448536 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39DP_info:
	.quad	_c39DP
	.quad	1925
	.quad	4294967326
	.quad	S2VLN_srt+1144


==================== Asm code ====================
2018-03-16 15:57:35.470102574 UTC

.section .text
.align 8
_c39DU:
_c39DU:
	movq $block_c39DW_info,(%rbp)
	movq %r14,40(%rbp)
	testb $7,%bl
	jne _c39DW
_c39DX:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c39DU, .-_c39DU


==================== Asm code ====================
2018-03-16 15:57:35.470692902 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39DU_info:
	.quad	_c39DU
	.quad	1925
	.quad	4294967326
	.quad	S2VLN_srt+1144


==================== Asm code ====================
2018-03-16 15:57:35.471516309 UTC

.section .text
.align 8
_c39DW:
_c39DW:
	movq 8(%rbp),%rax
	movq 40(%rbp),%rcx
	movq %rbx,%rdx
	andl $7,%edx
	cmpq $1,%rdx
	je _c39HI
_c39HM:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c39HP
_c39HO:
	movq $sat_s2VuJ_info,-24(%r12)
	movq %rax,-8(%r12)
	movq %rcx,(%r12)
	leaq -24(%r12),%rsi
	movq %rbx,%r14
	addq $48,%rbp
	jmp GHC.Base.++_entry
_c39HP:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
_c39HI:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c39HP
_c39HK:
	movq $sat_s2VuC_info,-24(%r12)
	movq %rax,-8(%r12)
	movq %rcx,(%r12)
	leaq -24(%r12),%rsi
	movl $lvl23_r2UqW_closure,%r14d
	addq $48,%rbp
	jmp GHC.Base.++_entry
	.size _c39DW, .-_c39DW


==================== Asm code ====================
2018-03-16 15:57:35.472307601 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39DW_info:
	.quad	_c39DW
	.quad	901
	.quad	4294967326
	.quad	S2VLN_srt+1144


==================== Asm code ====================
2018-03-16 15:57:35.473081167 UTC

.section .text
.align 8
_c39HT:
_c39HT:
	movq 24(%rbp),%rax
	movq %rbx,%rcx
	movq 7(%rbx),%rbx
	testq %rbx,%rbx
	jl _c39Ia
_c39I9:
	cmpq $7,%rbx
	jg _c39Ia
_c39I6:
	movq $GHC.Float.FFFixed_closure+2,16(%rbp)
	movq %rax,24(%rbp)
	movq %rcx,32(%rbp)
	addq $8,%rbp
	jmp _c39ut
_c39Ia:
	movq $GHC.Float.FFExponent_closure+1,16(%rbp)
	movq %rax,24(%rbp)
	movq %rcx,32(%rbp)
	addq $8,%rbp
	jmp _c39ut
	.size _c39HT, .-_c39HT


==================== Asm code ====================
2018-03-16 15:57:35.473883466 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39HT_info:
	.quad	_c39HT
	.quad	644
	.quad	1160891005403166
	.quad	S2VLN_srt+1144


==================== Asm code ====================
2018-03-16 15:57:35.474444369 UTC

.section .data.rel.ro
.align 8
.align 1
u39JI_srtd:
	.quad	S2VLN_srt+752
	.quad	68
	.quad	4586362066616451073
	.quad	8


==================== Asm code ====================
2018-03-16 15:57:35.475235182 UTC

.section .text
.align 8
sat_s2VuY_entry:
_c39IW:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c39IZ
_c39J0:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c39IY_info,-40(%rbp)
	movsd 32(%rbx),%xmm1
	movsd _n39QH(%rip),%xmm0
	xorpd %xmm0,%xmm1
	movl $GHC.Float.expts4_closure,%r14d
	movq 16(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Float.$w$sfloatToDigits_entry
_c39IZ:
	jmp *-16(%r13)
	.size sat_s2VuY_entry, .-sat_s2VuY_entry
.section .rodata
.align 8
.align 8
_n39QH:
	.quad	-9223372036854775808


==================== Asm code ====================
2018-03-16 15:57:35.475958356 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2VuY_info:
	.quad	sat_s2VuY_entry
	.quad	4294967298
	.quad	-4294967281
	.quad	u39JI_srtd


==================== Asm code ====================
2018-03-16 15:57:35.476613147 UTC

.section .text
.align 8
_c39IY:
_c39IY:
	movq %r14,%rdi
	movq %rbx,%rsi
	movq 8(%rbp),%r14
	movq 16(%rbp),%rbx
	addq $24,%rbp
	jmp $wdoFmt_s2VrK_entry
	.size _c39IY, .-_c39IY


==================== Asm code ====================
2018-03-16 15:57:35.477292307 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39IY_info:
	.quad	_c39IY
	.quad	2
	.quad	1160891005403166
	.quad	S2VLN_srt+1144


==================== Asm code ====================
2018-03-16 15:57:35.477867955 UTC

.section .data.rel.ro
.align 8
.align 1
u39JJ_srtd:
	.quad	S2VLN_srt+752
	.quad	69
	.quad	-4637009970238324735
	.quad	27


==================== Asm code ====================
2018-03-16 15:57:35.479263615 UTC

.section .text
.align 8
.globl GHC.Float.$w$sformatRealFloatAlt_entry
.type GHC.Float.$w$sformatRealFloatAlt_entry, @object
GHC.Float.$w$sformatRealFloatAlt_entry:
_c39J6:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c39J7
_c39J8:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c39Ja
_c39J9:
	subq $8,%rsp
	movsd %xmm1,%xmm0
	movl $1,%eax
	movq %rsi,%rbx
	movq %rdi,72(%rsp)
	movsd %xmm1,80(%rsp)
	call isDoubleNaN
	addq $8,%rsp
	testq %rax,%rax
	je _c39J5
_c39J4:
	addq $-24,%r12
	movl $lvl31_r2Ur5_closure,%ebx
	movq (%rbx),%rax
	jmp *(%rax)
_c39JD:
	movq $$wdoFmt_s2VrK_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq 64(%rsp),%rax
	movq %rax,(%r12)
	leaq -13(%r12),%rax
	xorpd %xmm0,%xmm0
	movsd 72(%rsp),%xmm1
	ucomisd %xmm0,%xmm1
	jp _c39JB
	jb _u39JE
_c39JB:
	subq $8,%rsp
	movsd %xmm1,%xmm0
	movq %rax,%rbx
	movl $1,%eax
	call isDoubleNegativeZero
	addq $8,%rsp
	testq %rax,%rax
	je _c39Jx
_u39JF:
	movq %rbx,-24(%rbp)
	movq %r14,-16(%rbp)
	movsd 72(%rsp),%xmm0
	movsd %xmm0,-8(%rbp)
	addq $-32,%rbp
	jmp _c39IO
_u39JE:
	movq %rax,-24(%rbp)
	movq %r14,-16(%rbp)
	movsd %xmm1,-8(%rbp)
	addq $-32,%rbp
	jmp _c39IO
_c39Jx:
	movq $block_c39Jw_info,-24(%rbp)
	movsd 72(%rsp),%xmm0
	movsd %xmm0,%xmm1
	movq %r14,%rax
	movl $GHC.Float.expts4_closure,%r14d
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Float.$w$sfloatToDigits_entry
_c39Jf:
	addq $-24,%r12
	movl $lvl29_r2Ur3_closure,%ebx
	movq (%rbx),%rax
	jmp *(%rax)
_c39J5:
	subq $8,%rsp
	movsd 80(%rsp),%xmm0
	movl $1,%eax
	call isDoubleInfinite
	addq $8,%rsp
	testq %rax,%rax
	je _c39JD
_c39Jh:
	xorpd %xmm0,%xmm0
	movsd 72(%rsp),%xmm1
	ucomisd %xmm0,%xmm1
	jp _c39Je
	jb _c39Jf
_c39Je:
	addq $-24,%r12
	movl $lvl27_r2Ur1_closure,%ebx
	movq (%rbx),%rax
	jmp *(%rax)
_c39Ja:
	movq $24,904(%r13)
_c39J7:
	movl $GHC.Float.$w$sformatRealFloatAlt_closure,%ebx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movsd %xmm1,-8(%rbp)
	addq $-32,%rbp
	jmp *-8(%r13)
	.size GHC.Float.$w$sformatRealFloatAlt_entry, .-GHC.Float.$w$sformatRealFloatAlt_entry


==================== Asm code ====================
2018-03-16 15:57:35.480435574 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$w$sformatRealFloatAlt_info
.type GHC.Float.$w$sformatRealFloatAlt_info, @object
GHC.Float.$w$sformatRealFloatAlt_info:
	.quad	GHC.Float.$w$sformatRealFloatAlt_entry
	.quad	0
	.quad	-4294967282
	.quad	17179869184
	.quad	u39JJ_srtd
	.quad	516
	.quad	GHC.Float.$w$sformatRealFloatAlt_slow


==================== Asm code ====================
2018-03-16 15:57:35.481197813 UTC

.section .text
.align 8
_c39Jw:
_c39Jw:
	movq %r14,%rdi
	movq %rbx,%rsi
	movq 16(%rbp),%r14
	movq 8(%rbp),%rbx
	addq $24,%rbp
	jmp $wdoFmt_s2VrK_entry
	.size _c39Jw, .-_c39Jw


==================== Asm code ====================
2018-03-16 15:57:35.48187226 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39Jw_info:
	.quad	_c39Jw
	.quad	2
	.quad	1160891005403166
	.quad	S2VLN_srt+1144


==================== Asm code ====================
2018-03-16 15:57:35.482434763 UTC

.section .data.rel.ro
.align 8
.align 1
u39JK_srtd:
	.quad	S2VLN_srt+752
	.quad	68
	.quad	4586362066616451073
	.quad	8


==================== Asm code ====================
2018-03-16 15:57:35.483287336 UTC

.section .text
.align 8
_c39IO:
_c39IO:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c39Jl
_c39Jk:
	movq $sat_s2VuY_info,-56(%r12)
	movq 16(%rbp),%rax
	movq %rax,-40(%r12)
	movq 8(%rbp),%rax
	movq %rax,-32(%r12)
	movsd 24(%rbp),%xmm0
	movsd %xmm0,-24(%r12)
	movq $:_con_info,-16(%r12)
	movq $GHC.Float.$fShowDouble3_closure+1,-8(%r12)
	leaq -56(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c39Jl:
	movq $64,904(%r13)
	movq $block_c39IO_info,(%rbp)
	jmp stg_gc_noregs
	.size _c39IO, .-_c39IO


==================== Asm code ====================
2018-03-16 15:57:35.484078039 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39IO_info:
	.quad	_c39IO
	.quad	259
	.quad	-4294967266
	.quad	u39JK_srtd


==================== Asm code ====================
2018-03-16 15:57:35.488459101 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fShowDouble_$sformatRealFloatAlt_closure
.type GHC.Float.$fShowDouble_$sformatRealFloatAlt_closure, @object
GHC.Float.$fShowDouble_$sformatRealFloatAlt_closure:
	.quad	GHC.Float.$fShowDouble_$sformatRealFloatAlt_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:35.489399275 UTC

.section .text
.align 8
.globl GHC.Float.$fShowDouble_$sformatRealFloatAlt_entry
.type GHC.Float.$fShowDouble_$sformatRealFloatAlt_entry, @object
GHC.Float.$fShowDouble_$sformatRealFloatAlt_entry:
_c39Rl:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c39Rm
_c39Rn:
	movq $block_c39Ri_info,-32(%rbp)
	movq %r8,%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c39Ri
_c39Rj:
	movq (%rbx),%rax
	jmp *(%rax)
_c39Rm:
	movl $GHC.Float.$fShowDouble_$sformatRealFloatAlt_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fShowDouble_$sformatRealFloatAlt_entry, .-GHC.Float.$fShowDouble_$sformatRealFloatAlt_entry


==================== Asm code ====================
2018-03-16 15:57:35.490057852 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fShowDouble_$sformatRealFloatAlt_info
.type GHC.Float.$fShowDouble_$sformatRealFloatAlt_info, @object
GHC.Float.$fShowDouble_$sformatRealFloatAlt_info:
	.quad	GHC.Float.$fShowDouble_$sformatRealFloatAlt_entry
	.quad	0
	.quad	12884901902
	.quad	17179869208
	.quad	S2VLN_srt+1296


==================== Asm code ====================
2018-03-16 15:57:35.490796596 UTC

.section .text
.align 8
_c39Ri:
_c39Ri:
	movsd 7(%rbx),%xmm1
	movq 24(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $32,%rbp
	jmp GHC.Float.$w$sformatRealFloatAlt_entry
	.size _c39Ri, .-_c39Ri


==================== Asm code ====================
2018-03-16 15:57:35.491367946 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39Ri_info:
	.quad	_c39Ri
	.quad	3
	.quad	4294967326
	.quad	S2VLN_srt+1296


==================== Asm code ====================
2018-03-16 15:57:35.494814868 UTC

.section .data
.align 8
.align 1
$wxs3_r2Urf_closure:
	.quad	$wxs3_r2Urf_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:35.495617329 UTC

.section .text
.align 8
sat_s2Vvh_entry:
_c39RN:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c39RO
_c39RP:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	leaq -1(%rax),%r14
	addq $-16,%rbp
	jmp $wxs3_r2Urf_entry
_c39RO:
	jmp *-16(%r13)
	.size sat_s2Vvh_entry, .-sat_s2Vvh_entry


==================== Asm code ====================
2018-03-16 15:57:35.496284143 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Vvh_info:
	.quad	sat_s2Vvh_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S2VLN_srt+1312


==================== Asm code ====================
2018-03-16 15:57:35.497116408 UTC

.section .text
.align 8
$wxs3_r2Urf_entry:
_c39RT:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c39RX
_c39RW:
	cmpq $1,%r14
	je _c39RS
_c39RR:
	movq $sat_s2Vvh_info,-40(%r12)
	movq %r14,-24(%r12)
	movq $:_con_info,-16(%r12)
	movq $lvl20_r2UqT_closure+1,-8(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c39RX:
	movq $48,904(%r13)
	movl $$wxs3_r2Urf_closure,%ebx
	jmp *-8(%r13)
_c39RS:
	addq $-48,%r12
	movl $lvl35_r2Ur9_closure+2,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size $wxs3_r2Urf_entry, .-$wxs3_r2Urf_entry


==================== Asm code ====================
2018-03-16 15:57:35.497822599 UTC

.section .data.rel.ro
.align 8
.align 1
$wxs3_r2Urf_info:
	.quad	$wxs3_r2Urf_entry
	.quad	0
	.quad	1125904201809934
	.quad	4294967300
	.quad	S2VLN_srt+1168


==================== Asm code ====================
2018-03-16 15:57:35.576812685 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.formatRealFloatAlt_closure
.type GHC.Float.formatRealFloatAlt_closure, @object
GHC.Float.formatRealFloatAlt_closure:
	.quad	GHC.Float.formatRealFloatAlt_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:35.577999259 UTC

.section .text
.align 8
$dNum_s2Vvq_entry:
_c39Sv:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c39Sw
_c39Sx:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Real.$p1Real_entry
_c39Sw:
	jmp *-16(%r13)
	.size $dNum_s2Vvq_entry, .-$dNum_s2Vvq_entry


==================== Asm code ====================
2018-03-16 15:57:35.578695558 UTC

.section .data.rel.ro
.align 8
.align 1
$dNum_s2Vvq_info:
	.quad	$dNum_s2Vvq_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:35.5800672 UTC

.section .text
.align 8
show_e'_s2VvF_entry:
_c39Td:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c39Tm
_c39Tn:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c39Ta_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _c39Ta
_c39Tb:
	movq (%rbx),%rax
	jmp *(%rax)
_c39Tm:
	jmp *-16(%r13)
	.size show_e'_s2VvF_entry, .-show_e'_s2VvF_entry


==================== Asm code ====================
2018-03-16 15:57:35.580784399 UTC

.section .data.rel.ro
.align 8
.align 1
show_e'_s2VvF_info:
	.quad	show_e'_s2VvF_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:35.581495543 UTC

.section .text
.align 8
_c39Ta:
_c39Ta:
	movq $block_c39Tj_info,(%rbp)
	movl $GHC.Types.[]_closure+1,%edi
	movq 7(%rbx),%rax
	leaq -1(%rax),%rsi
	xorl %r14d,%r14d
	jmp GHC.Show.$wshowSignedInt_entry
	.size _c39Ta, .-_c39Ta


==================== Asm code ====================
2018-03-16 15:57:35.582122407 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39Ta_info:
	.quad	_c39Ta
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.582897183 UTC

.section .text
.align 8
_c39Tj:
_c39Tj:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c39Tr
_c39Tq:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c39Tr:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c39Tj, .-_c39Tj


==================== Asm code ====================
2018-03-16 15:57:35.583570923 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39Tj_info:
	.quad	_c39Tj
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.584343682 UTC

.section .text
.align 8
sat_s2VvN_entry:
_c39TC:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c39TD
_c39TE:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rsi
	movl $lvl32_r2Ur6_bytes,%r14d
	addq $-16,%rbp
	jmp GHC.CString.unpackAppendCString#_entry
_c39TD:
	jmp *-16(%r13)
	.size sat_s2VvN_entry, .-sat_s2VvN_entry


==================== Asm code ====================
2018-03-16 15:57:35.58496618 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2VvN_info:
	.quad	sat_s2VvN_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:35.585652378 UTC

.section .text
.align 8
sat_s2VvQ_entry:
_c39TP:
	movq 16(%rbx),%rsi
	movl $lvl33_r2Ur7_bytes,%r14d
	jmp GHC.CString.unpackAppendCString#_entry
	.size sat_s2VvQ_entry, .-sat_s2VvQ_entry


==================== Asm code ====================
2018-03-16 15:57:35.586274204 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2VvQ_info:
	.quad	sat_s2VvQ_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:35.587152494 UTC

.section .text
.align 8
sat_s2VvR_entry:
_c39TS:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c39TT
_c39TU:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c39TW
_c39TV:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $sat_s2VvQ_info,-16(%r12)
	movq %rax,(%r12)
	leaq -16(%r12),%rsi
	movq %rbx,%r14
	addq $-16,%rbp
	jmp GHC.Base.++_entry
_c39TW:
	movq $24,904(%r13)
_c39TT:
	jmp *-16(%r13)
	.size sat_s2VvR_entry, .-sat_s2VvR_entry


==================== Asm code ====================
2018-03-16 15:57:35.587877077 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2VvR_info:
	.quad	sat_s2VvR_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:35.588636174 UTC

.section .text
.align 8
dec'_s2VvY_entry:
_c39U6:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c39U7
_c39U8:
	movq $block_c39U3_info,-8(%rbp)
	movq 16(%rbx),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c39U3
_c39U4:
	movq (%rbx),%rax
	jmp *(%rax)
_c39U7:
	jmp *-16(%r13)
	.size dec'_s2VvY_entry, .-dec'_s2VvY_entry


==================== Asm code ====================
2018-03-16 15:57:35.589379921 UTC

.section .data.rel.ro
.align 8
.align 1
dec'_s2VvY_info:
	.quad	dec'_s2VvY_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:35.590092403 UTC

.section .text
.align 8
_c39U3:
_c39U3:
	cmpq $1,7(%rbx)
	jg _c39Uf
_c39Ug:
	movl $GHC.Float.$fRealFracFloat2_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c39Uf:
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c39U3, .-_c39U3


==================== Asm code ====================
2018-03-16 15:57:35.590841526 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39U3_info:
	.quad	_c39U3
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.591591916 UTC

.section .text
.align 8
sat_s2Vw8_entry:
_c39Ux:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c39UE
_c39UF:
	movq $block_c39Uv_info,-8(%rbp)
	movq 16(%rbx),%rbx
	addq $-8,%rbp
	jmp dec'_s2VvY_entry
_c39UE:
	jmp *-16(%r13)
	.size sat_s2Vw8_entry, .-sat_s2Vw8_entry


==================== Asm code ====================
2018-03-16 15:57:35.592214766 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Vw8_info:
	.quad	sat_s2Vw8_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:35.592962474 UTC

.section .text
.align 8
_c39Uv:
_c39Uv:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c39UI
_c39UH:
	movq 7(%rbx),%rax
	incq %rax
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c39UI:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c39Uv, .-_c39Uv


==================== Asm code ====================
2018-03-16 15:57:35.593708312 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39Uv_info:
	.quad	_c39Uv
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.594599676 UTC

.section .text
.align 8
ds1_s2Vw4_entry:
_c39UM:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c39UN
_c39UO:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c39UQ
_c39UP:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq $sat_s2Vw8_info,-16(%r12)
	movq %rbx,(%r12)
	movq $block_c39UJ_info,-24(%rbp)
	movq %rax,%rdi
	leaq -16(%r12),%rsi
	movl $base_r2UqK_closure+1,%r14d
	addq $-24,%rbp
	jmp GHC.Float.$wroundTo_entry
_c39UQ:
	movq $24,904(%r13)
_c39UN:
	jmp *-16(%r13)
	.size ds1_s2Vw4_entry, .-ds1_s2Vw4_entry


==================== Asm code ====================
2018-03-16 15:57:35.595302284 UTC

.section .data.rel.ro
.align 8
.align 1
ds1_s2Vw4_info:
	.quad	ds1_s2Vw4_entry
	.quad	2
	.quad	4294967314
	.quad	S2VLN_srt+1200


==================== Asm code ====================
2018-03-16 15:57:35.596046763 UTC

.section .text
.align 8
_c39UJ:
_c39UJ:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c39UT
_c39US:
	movq $(,)_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c39UT:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c39UJ, .-_c39UJ


==================== Asm code ====================
2018-03-16 15:57:35.596712498 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39UJ_info:
	.quad	_c39UJ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.597612868 UTC

.section .text
.align 8
ds2_s2Vwc_entry:
_c39V1:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c39V5
_c39V6:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c39UY_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _c39UY
_c39UZ:
	movq (%rbx),%rax
	jmp *(%rax)
_c39V5:
	jmp *-16(%r13)
	.size ds2_s2Vwc_entry, .-ds2_s2Vwc_entry


==================== Asm code ====================
2018-03-16 15:57:35.59834391 UTC

.section .data.rel.ro
.align 8
.align 1
ds2_s2Vwc_info:
	.quad	ds2_s2Vwc_entry
	.quad	1
	.quad	210453397520
	.quad	S2VLN_srt+1176


==================== Asm code ====================
2018-03-16 15:57:35.599070933 UTC

.section .text
.align 8
_c39UY:
_c39UY:
	movq $block_c39V4_info,-8(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c39V4
_c39V8:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c39UY, .-_c39UY


==================== Asm code ====================
2018-03-16 15:57:35.599729978 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39UY_info:
	.quad	_c39UY
	.quad	0
	.quad	210453397534
	.quad	S2VLN_srt+1176


==================== Asm code ====================
2018-03-16 15:57:35.600502652 UTC

.section .text
.align 8
_c39V4:
_c39V4:
	movq 8(%rbp),%rax
	cmpq $0,7(%rbx)
	jle _c39Vi
_c39Vy:
	movq $block_c39Vx_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c39Vx
_c39Vz:
	movq (%rbx),%rax
	jmp *(%rax)
_c39Vi:
	movq $block_c39Vg_info,8(%rbp)
	movq %rax,%rsi
	movl $GHC.Show.intToDigit_closure+1,%r14d
	addq $8,%rbp
	jmp GHC.Base.map_entry
	.size _c39V4, .-_c39V4


==================== Asm code ====================
2018-03-16 15:57:35.60153213 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39V4_info:
	.quad	_c39V4
	.quad	1
	.quad	210453397534
	.quad	S2VLN_srt+1176


==================== Asm code ====================
2018-03-16 15:57:35.602669176 UTC

.section .text
.align 8
_c39Vg:
_c39Vg:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _u39W6
_c39Vs:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c39Vv
_c39Vu:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq $(,)_con_info,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u39W6:
	addq $8,%rbp
	jmp _c39VV
_c39Vv:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c39Vg, .-_c39Vg


==================== Asm code ====================
2018-03-16 15:57:35.603406609 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39Vg_info:
	.quad	_c39Vg
	.quad	0
	.quad	4294967326
	.quad	S2VLN_srt+1216


==================== Asm code ====================
2018-03-16 15:57:35.604172213 UTC

.section .text
.align 8
_c39Vx:
_c39Vx:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c39VF
_c39VK:
	movq $block_c39VI_info,(%rbp)
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp GHC.List.init1_entry
_c39VF:
	movl $GHC.List.init2_closure,%ebx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c39Vx, .-_c39Vx


==================== Asm code ====================
2018-03-16 15:57:35.604883465 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39Vx_info:
	.quad	_c39Vx
	.quad	0
	.quad	210453397534
	.quad	S2VLN_srt+1176


==================== Asm code ====================
2018-03-16 15:57:35.60590589 UTC

.section .text
.align 8
_c39VI:
_c39VI:
	movq $block_c39VO_info,(%rbp)
	movq %rbx,%rsi
	movl $GHC.Show.intToDigit_closure+1,%r14d
	jmp GHC.Base.map_entry
	.size _c39VI, .-_c39VI


==================== Asm code ====================
2018-03-16 15:57:35.606558738 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39VI_info:
	.quad	_c39VI
	.quad	0
	.quad	141733920798
	.quad	S2VLN_srt+1176


==================== Asm code ====================
2018-03-16 15:57:35.607405143 UTC

.section .text
.align 8
_c39VO:
_c39VO:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _u39W7
_c39VZ:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c39W2
_c39W1:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq $(,)_con_info,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u39W7:
	addq $8,%rbp
	jmp _c39VV
_c39W2:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c39VO, .-_c39VO


==================== Asm code ====================
2018-03-16 15:57:35.608756145 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39VO_info:
	.quad	_c39VO
	.quad	0
	.quad	4294967326
	.quad	S2VLN_srt+1216


==================== Asm code ====================
2018-03-16 15:57:35.60954797 UTC

.section .text
.align 8
_c39VV:
_c39VV:
	movl $lvl18_r2UqR_closure,%ebx
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c39VV, .-_c39VV


==================== Asm code ====================
2018-03-16 15:57:35.610381345 UTC

.section .text
.align 8
sat_s2VwN_entry:
_c39Wt:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c39WP
_c39WQ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c39Wq_info,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c39Wq
_c39Wr:
	movq (%rbx),%rax
	jmp *(%rax)
_c39WP:
	jmp *-16(%r13)
	.size sat_s2VwN_entry, .-sat_s2VwN_entry


==================== Asm code ====================
2018-03-16 15:57:35.611047219 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2VwN_info:
	.quad	sat_s2VwN_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:35.611777997 UTC

.section .text
.align 8
_c39Wq:
_c39Wq:
	movq $block_c39Ww_info,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c39Ww
_c39Wx:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c39Wq, .-_c39Wq


==================== Asm code ====================
2018-03-16 15:57:35.612422123 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39Wq_info:
	.quad	_c39Wq
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.613109068 UTC

.section .text
.align 8
_c39Ww:
_c39Ww:
	movq $block_c39WB_info,(%rbp)
	movq 7(%rbx),%rbx
	testb $7,%bl
	jne _c39WB
_c39WC:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c39Ww, .-_c39Ww


==================== Asm code ====================
2018-03-16 15:57:35.613763164 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39Ww_info:
	.quad	_c39Ww
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.614458393 UTC

.section .text
.align 8
_c39WB:
_c39WB:
	movq 7(%rbx),%rax
	decq %rax
	movq 8(%rbp),%rbx
	addq %rax,%rbx
	movq $block_c39WM_info,8(%rbp)
	movl $GHC.Types.[]_closure+1,%edi
	movq %rbx,%rsi
	xorl %r14d,%r14d
	addq $8,%rbp
	jmp GHC.Show.$wshowSignedInt_entry
	.size _c39WB, .-_c39WB


==================== Asm code ====================
2018-03-16 15:57:35.615084756 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39WB_info:
	.quad	_c39WB
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.615840369 UTC

.section .text
.align 8
_c39WM:
_c39WM:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c39WW
_c39WV:
	movq $:_con_info,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c39WW:
	movq $24,904(%r13)
	jmp stg_gc_pp
	.size _c39WM, .-_c39WM


==================== Asm code ====================
2018-03-16 15:57:35.616491646 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39WM_info:
	.quad	_c39WM
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.6176731 UTC

.section .text
.align 8
sat_s2VwP_entry:
_c39X0:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c39X2
_c39X3:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c39Wh_info,-40(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _c39Wh
_c39Wi:
	movq (%rbx),%rax
	jmp *(%rax)
_c39X2:
	jmp *-16(%r13)
	.size sat_s2VwP_entry, .-sat_s2VwP_entry


==================== Asm code ====================
2018-03-16 15:57:35.618463373 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2VwP_info:
	.quad	sat_s2VwP_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:57:35.619311504 UTC

.section .text
.align 8
_c39Wh:
_c39Wh:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c39X6
_c39X5:
	movq 15(%rbx),%rax
	movq $sat_s2VwN_info,-48(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq $:_con_info,-16(%r12)
	movq $lvl19_r2UqS_closure+1,-8(%r12)
	leaq -48(%r12),%rbx
	movq %rbx,(%r12)
	leaq -14(%r12),%rsi
	movq %rax,%r14
	addq $24,%rbp
	jmp GHC.Base.++_entry
_c39X6:
	movq $56,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c39Wh, .-_c39Wh


==================== Asm code ====================
2018-03-16 15:57:35.619995874 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39Wh_info:
	.quad	_c39Wh
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.620799948 UTC

.section .text
.align 8
sat_s2Vx1_entry:
_c39Xx:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c39Xy
_c39Xz:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c39Xv_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	jmp dec'_s2VvY_entry
_c39Xy:
	jmp *-16(%r13)
	.size sat_s2Vx1_entry, .-sat_s2Vx1_entry


==================== Asm code ====================
2018-03-16 15:57:35.621516422 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Vx1_info:
	.quad	sat_s2Vx1_entry
	.quad	1
	.quad	8800387989520
	.quad	S2VLN_srt+1224


==================== Asm code ====================
2018-03-16 15:57:35.62224715 UTC

.section .text
.align 8
_c39Xv:
_c39Xv:
	movq 7(%rbx),%rax
	cmpq $0,%rax
	jle _c39XG
_c39XH:
	movq %rax,%r14
	addq $8,%rbp
	jmp $wxs3_r2Urf_entry
_c39XG:
	movl $lvl34_r2Ur8_closure,%ebx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c39Xv, .-_c39Xv


==================== Asm code ====================
2018-03-16 15:57:35.622900704 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39Xv_info:
	.quad	_c39Xv
	.quad	0
	.quad	8800387989534
	.quad	S2VLN_srt+1224


==================== Asm code ====================
2018-03-16 15:57:35.623542073 UTC

.section .text
.align 8
sat_s2Vx9_entry:
_c39Y1:
	movq 16(%rbx),%rsi
	movl $GHC.Show.intToDigit_closure+1,%r14d
	jmp GHC.Base.map_entry
	.size sat_s2Vx9_entry, .-sat_s2Vx9_entry


==================== Asm code ====================
2018-03-16 15:57:35.624120687 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Vx9_info:
	.quad	sat_s2Vx9_entry
	.quad	1
	.quad	4294967312
	.quad	S2VLN_srt+1176


==================== Asm code ====================
2018-03-16 15:57:35.624847136 UTC

.section .text
.align 8
n1_s2Vxc_entry:
_c39Yk:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c39Yl
_c39Ym:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rsi
	movl $GHC.Show.intToDigit_closure+1,%r14d
	addq $-16,%rbp
	jmp GHC.Base.map_entry
_c39Yl:
	jmp *-16(%r13)
	.size n1_s2Vxc_entry, .-n1_s2Vxc_entry


==================== Asm code ====================
2018-03-16 15:57:35.625512883 UTC

.section .data.rel.ro
.align 8
.align 1
n1_s2Vxc_info:
	.quad	n1_s2Vxc_entry
	.quad	1
	.quad	4294967312
	.quad	S2VLN_srt+1176


==================== Asm code ====================
2018-03-16 15:57:35.626208891 UTC

.section .text
.align 8
sat_s2Vxi_entry:
_c39YB:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c39YC
_c39YD:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	leaq -1(%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp $wxs4_s2Vxe_entry
_c39YC:
	jmp *-16(%r13)
	.size sat_s2Vxi_entry, .-sat_s2Vxi_entry


==================== Asm code ====================
2018-03-16 15:57:35.626849262 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Vxi_info:
	.quad	sat_s2Vxi_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 15:57:35.627647529 UTC

.section .text
.align 8
$wxs4_s2Vxe_entry:
_c39YH:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c39YL
_c39YK:
	cmpq $1,%r14
	je _c39YG
_c39YF:
	movq $sat_s2Vxi_info,-48(%r12)
	movq %rbx,-32(%r12)
	movq %r14,-24(%r12)
	movq $:_con_info,-16(%r12)
	movq $lvl20_r2UqT_closure+1,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c39YL:
	movq $56,904(%r13)
	jmp *-8(%r13)
_c39YG:
	movq 7(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size $wxs4_s2Vxe_entry, .-$wxs4_s2Vxe_entry


==================== Asm code ====================
2018-03-16 15:57:35.628395342 UTC

.section .data.rel.ro
.align 8
.align 1
$wxs4_s2Vxe_info:
	.quad	$wxs4_s2Vxe_entry
	.quad	1
	.quad	9
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:57:35.629671948 UTC

.section .text
.align 8
sat_s2Vxj_entry:
_c39YN:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c39YO
_c39YP:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c39YR
_c39YQ:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	negq %rbx
	cmpq $0,%rbx
	jle _c39YT
_c39YU:
	movq $n1_s2Vxc_info,-56(%r12)
	movq %rax,-40(%r12)
	movq $:_con_info,-32(%r12)
	movq $lvl20_r2UqT_closure+1,-24(%r12)
	leaq -56(%r12),%rax
	movq %rax,-16(%r12)
	movq $$wxs4_s2Vxe_info,-8(%r12)
	leaq -30(%r12),%rax
	movq %rax,(%r12)
	movq %rbx,%r14
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	jmp $wxs4_s2Vxe_entry
_c39YT:
	addq $-64,%r12
	movq %rax,%rsi
	movl $GHC.Show.intToDigit_closure+1,%r14d
	addq $-16,%rbp
	jmp GHC.Base.map_entry
_c39YR:
	movq $64,904(%r13)
_c39YO:
	jmp *-16(%r13)
	.size sat_s2Vxj_entry, .-sat_s2Vxj_entry


==================== Asm code ====================
2018-03-16 15:57:35.63048846 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Vxj_info:
	.quad	sat_s2Vxj_entry
	.quad	4294967297
	.quad	4294967315
	.quad	S2VLN_srt+1176


==================== Asm code ====================
2018-03-16 15:57:35.631296299 UTC

.section .text
.align 8
sat_s2Vxu_entry:
_c39Zm:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c39Zn
_c39Zo:
	movq $block_c39Zj_info,-8(%rbp)
	movq 16(%rbx),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c39Zj
_c39Zk:
	movq (%rbx),%rax
	jmp *(%rax)
_c39Zn:
	jmp *-16(%r13)
	.size sat_s2Vxu_entry, .-sat_s2Vxu_entry


==================== Asm code ====================
2018-03-16 15:57:35.631972016 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Vxu_info:
	.quad	sat_s2Vxu_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:35.632706851 UTC

.section .text
.align 8
_c39Zj:
_c39Zj:
	cmpq $0,7(%rbx)
	jg _c39Zv
_c39Zw:
	movl $GHC.Float.minExpt_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c39Zv:
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c39Zj, .-_c39Zj


==================== Asm code ====================
2018-03-16 15:57:35.633472939 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39Zj_info:
	.quad	_c39Zj
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.634367575 UTC

.section .text
.align 8
sat_s2VxD_entry:
_c39ZN:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c39ZO
_c39ZP:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	leaq -1(%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp $wxs4_s2Vxz_entry
_c39ZO:
	jmp *-16(%r13)
	.size sat_s2VxD_entry, .-sat_s2VxD_entry


==================== Asm code ====================
2018-03-16 15:57:35.635205876 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2VxD_info:
	.quad	sat_s2VxD_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 15:57:35.636655488 UTC

.section .text
.align 8
$wxs4_s2Vxz_entry:
_c39ZT:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c39ZX
_c39ZW:
	cmpq $1,%r14
	je _c39ZS
_c39ZR:
	movq $sat_s2VxD_info,-48(%r12)
	movq %rbx,-32(%r12)
	movq %r14,-24(%r12)
	movq $:_con_info,-16(%r12)
	movq $GHC.Float.minExpt_closure+1,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c39ZX:
	movq $56,904(%r13)
	jmp *-8(%r13)
_c39ZS:
	movq 7(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size $wxs4_s2Vxz_entry, .-$wxs4_s2Vxz_entry


==================== Asm code ====================
2018-03-16 15:57:35.637786899 UTC

.section .data.rel.ro
.align 8
.align 1
$wxs4_s2Vxz_info:
	.quad	$wxs4_s2Vxz_entry
	.quad	1
	.quad	9
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:57:35.638942432 UTC

.section .text
.align 8
sat_s2VxH_entry:
_c3a0a:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3a0b
_c3a0c:
	movq $block_c3a07_info,-8(%rbp)
	movq 16(%rbx),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3a07
_c3a08:
	movq (%rbx),%rax
	jmp *(%rax)
_c3a0b:
	jmp *-16(%r13)
	.size sat_s2VxH_entry, .-sat_s2VxH_entry


==================== Asm code ====================
2018-03-16 15:57:35.639922435 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2VxH_info:
	.quad	sat_s2VxH_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:35.640988759 UTC

.section .text
.align 8
_c3a07:
_c3a07:
	cmpq $0,7(%rbx)
	jg _c3a0j
_c3a0k:
	movl $GHC.Float.minExpt_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3a0j:
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3a07, .-_c3a07


==================== Asm code ====================
2018-03-16 15:57:35.641981697 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3a07_info:
	.quad	_c3a07
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.64350518 UTC

.section .text
.align 8
ds_s2Vxo_entry:
_c3a0m:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3a0n
_c3a0o:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c3a0q
_c3a0p:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	negq %rbx
	cmpq $0,%rbx
	jle _c3a0t
_c3a0x:
	movq $:_con_info,-32(%r12)
	movq $GHC.Float.minExpt_closure+1,-24(%r12)
	movq %rax,-16(%r12)
	movq $$wxs4_s2Vxz_info,-8(%r12)
	leaq -30(%r12),%rax
	movq %rax,(%r12)
	movq $block_c39ZZ_info,-32(%rbp)
	movq %rbx,%r14
	leaq -7(%r12),%rbx
	movq %rcx,-24(%rbp)
	addq $-32,%rbp
	jmp $wxs4_s2Vxz_entry
_c3a0t:
	movq $sat_s2Vxu_info,-32(%r12)
	movq %rcx,-16(%r12)
	leaq -32(%r12),%rbx
	addq $-16,%r12
	movq $block_c3a0r_info,-24(%rbp)
	movq %rax,%rdi
	movq %rbx,%rsi
	movl $base_r2UqK_closure+1,%r14d
	addq $-24,%rbp
	jmp GHC.Float.$wroundTo_entry
_c3a0q:
	movq $40,904(%r13)
_c3a0n:
	jmp *-16(%r13)
	.size ds_s2Vxo_entry, .-ds_s2Vxo_entry


==================== Asm code ====================
2018-03-16 15:57:35.644902685 UTC

.section .data.rel.ro
.align 8
.align 1
ds_s2Vxo_info:
	.quad	ds_s2Vxo_entry
	.quad	4294967298
	.quad	12884901903
	.quad	S2VLN_srt+1192


==================== Asm code ====================
2018-03-16 15:57:35.646052975 UTC

.section .text
.align 8
_c3a0r:
_c3a0r:
	movq %r14,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp $j_r2Urc_entry
	.size _c3a0r, .-_c3a0r


==================== Asm code ====================
2018-03-16 15:57:35.646869518 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3a0r_info:
	.quad	_c3a0r
	.quad	0
	.quad	4294967326
	.quad	S2VLN_srt+1192


==================== Asm code ====================
2018-03-16 15:57:35.647992931 UTC

.section .text
.align 8
_c39ZZ:
_c39ZZ:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3a0A
_c3a0z:
	movq $sat_s2VxH_info,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	movq $block_c3a0w_info,8(%rbp)
	movq %rbx,%rdi
	leaq -16(%r12),%rsi
	movl $base_r2UqK_closure+1,%r14d
	addq $8,%rbp
	jmp GHC.Float.$wroundTo_entry
_c3a0A:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c39ZZ, .-_c39ZZ


==================== Asm code ====================
2018-03-16 15:57:35.649007562 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39ZZ_info:
	.quad	_c39ZZ
	.quad	1
	.quad	12884901918
	.quad	S2VLN_srt+1192


==================== Asm code ====================
2018-03-16 15:57:35.650169293 UTC

.section .text
.align 8
_c3a0w:
_c3a0w:
	movq %r14,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp $j_r2Urc_entry
	.size _c3a0w, .-_c3a0w


==================== Asm code ====================
2018-03-16 15:57:35.650810233 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3a0w_info:
	.quad	_c3a0w
	.quad	0
	.quad	4294967326
	.quad	S2VLN_srt+1192


==================== Asm code ====================
2018-03-16 15:57:35.651582201 UTC

.section .text
.align 8
sat_s2VxX_entry:
_c3a0K:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3a0L
_c3a0M:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c3a0H_info,-32(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c3a0H
_c3a0I:
	movq (%rbx),%rax
	jmp *(%rax)
_c3a0L:
	jmp *-16(%r13)
	.size sat_s2VxX_entry, .-sat_s2VxX_entry


==================== Asm code ====================
2018-03-16 15:57:35.652285804 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2VxX_info:
	.quad	sat_s2VxX_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:35.652995665 UTC

.section .text
.align 8
_c3a0H:
_c3a0H:
	movq $block_c3a0P_info,(%rbp)
	movq 15(%rbx),%rbx
	testb $7,%bl
	jne _c3a0P
_c3a0R:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3a0H, .-_c3a0H


==================== Asm code ====================
2018-03-16 15:57:35.65366069 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3a0H_info:
	.quad	_c3a0H
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.654505123 UTC

.section .text
.align 8
_c3a0P:
_c3a0P:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c3a0Y
_c3a1d:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3a1g
_c3a1f:
	movq $:_con_info,-16(%r12)
	movq $lvl14_r2UqN_closure+1,-8(%r12)
	movq %rbx,(%r12)
	leaq -14(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3a1g:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_c3a0Y:
	movq 8(%rbp),%rax
	movq $block_c3a0V_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c3a0V
_c3a0Z:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3a0P, .-_c3a0P


==================== Asm code ====================
2018-03-16 15:57:35.655261876 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3a0P_info:
	.quad	_c3a0P
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.656013361 UTC

.section .text
.align 8
_c3a0V:
_c3a0V:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c3a15
_c3a19:
	movl $lvl37_r2Urd_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3a15:
	movl $[]_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3a0V, .-_c3a0V


==================== Asm code ====================
2018-03-16 15:57:35.656650217 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3a0V_info:
	.quad	_c3a0V
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.657823715 UTC

.section .text
.align 8
sat_s2Vy2_entry:
_c3a1u:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3a1v
_c3a1w:
	movq $block_c3a1r_info,-24(%rbp)
	movq 24(%rbx),%rax
	movq 32(%rbx),%rcx
	movq 16(%rbx),%rbx
	movq %rax,-16(%rbp)
	movq %rcx,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c3a1r
_c3a1s:
	movq (%rbx),%rax
	jmp *(%rax)
_c3a1v:
	jmp *-16(%r13)
	.size sat_s2Vy2_entry, .-sat_s2Vy2_entry


==================== Asm code ====================
2018-03-16 15:57:35.658506468 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Vy2_info:
	.quad	sat_s2Vy2_entry
	.quad	4294967298
	.quad	15


==================== Asm code ====================
2018-03-16 15:57:35.659332504 UTC

.section .text
.align 8
_c3a1r:
_c3a1r:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3a1B
_c3a1A:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jg _c3a1K
_c3a1L:
	addq $-16,%r12
	movq 8(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c3a1K:
	movq $GHC.Types.I#_con_info,-8(%r12)
	addq 16(%rbp),%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3a1B:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c3a1r, .-_c3a1r


==================== Asm code ====================
2018-03-16 15:57:35.660097558 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3a1r_info:
	.quad	_c3a1r
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.661292714 UTC

.section .text
.align 8
sat_s2Vyk_entry:
_c3a2n:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3a2o
_c3a2p:
	movq $block_c3a2g_info,-16(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3a2g
_c3a2h:
	movq (%rbx),%rax
	jmp *(%rax)
_c3a2o:
	jmp *-16(%r13)
	.size sat_s2Vyk_entry, .-sat_s2Vyk_entry


==================== Asm code ====================
2018-03-16 15:57:35.662348767 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Vyk_info:
	.quad	sat_s2Vyk_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:35.663688626 UTC

.section .text
.align 8
_c3a2g:
_c3a2g:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c3a2k
_c3a2l:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3a2K
_c3a2J:
	movq $:_con_info,-16(%r12)
	movq $lvl14_r2UqN_closure+1,-8(%r12)
	movq %rbx,(%r12)
	leaq -14(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3a2K:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_c3a2k:
	movq 8(%rbp),%rax
	movq $block_c3a2s_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c3a2s
_c3a2u:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3a2g, .-_c3a2g


==================== Asm code ====================
2018-03-16 15:57:35.664864356 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3a2g_info:
	.quad	_c3a2g
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.666925379 UTC

.section .text
.align 8
_c3a2s:
_c3a2s:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c3a2A
_c3a2E:
	movl $lvl37_r2Urd_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3a2A:
	movl $[]_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3a2s, .-_c3a2s


==================== Asm code ====================
2018-03-16 15:57:35.667891429 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3a2s_info:
	.quad	_c3a2s
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.669055424 UTC

.section .text
.align 8
sat_s2Vyr_entry:
_c3a31:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3a32
_c3a33:
	movq $block_c3a2U_info,-16(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3a2U
_c3a2V:
	movq (%rbx),%rax
	jmp *(%rax)
_c3a32:
	jmp *-16(%r13)
	.size sat_s2Vyr_entry, .-sat_s2Vyr_entry


==================== Asm code ====================
2018-03-16 15:57:35.670089785 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Vyr_info:
	.quad	sat_s2Vyr_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:35.671425802 UTC

.section .text
.align 8
_c3a2U:
_c3a2U:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c3a2Y
_c3a2Z:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3a3o
_c3a3n:
	movq $:_con_info,-16(%r12)
	movq $lvl14_r2UqN_closure+1,-8(%r12)
	movq %rbx,(%r12)
	leaq -14(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3a3o:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_c3a2Y:
	movq 8(%rbp),%rax
	movq $block_c3a36_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c3a36
_c3a38:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3a2U, .-_c3a2U


==================== Asm code ====================
2018-03-16 15:57:35.672643489 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3a2U_info:
	.quad	_c3a2U
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.674499999 UTC

.section .text
.align 8
_c3a36:
_c3a36:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c3a3e
_c3a3i:
	movl $lvl37_r2Urd_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3a3e:
	movl $[]_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3a36, .-_c3a36


==================== Asm code ====================
2018-03-16 15:57:35.675558044 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3a36_info:
	.quad	_c3a36
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.676702422 UTC

.section .text
.align 8
sat_s2Vyw_entry:
_c3a3D:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3a3E
_c3a3F:
	movq $block_c3a3x_info,-16(%rbp)
	movq 24(%rbx),%rsi
	movl $GHC.Show.intToDigit_closure+1,%r14d
	movq 16(%rbx),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Base.map_entry
_c3a3E:
	jmp *-16(%r13)
	.size sat_s2Vyw_entry, .-sat_s2Vyw_entry


==================== Asm code ====================
2018-03-16 15:57:35.678129436 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Vyw_info:
	.quad	sat_s2Vyw_entry
	.quad	2
	.quad	4294967314
	.quad	S2VLN_srt+1176


==================== Asm code ====================
2018-03-16 15:57:35.679472617 UTC

.section .text
.align 8
_c3a3x:
_c3a3x:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c3a3A
_c3a3B:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3a40
_c3a3Z:
	movq $:_con_info,-16(%r12)
	movq $lvl14_r2UqN_closure+1,-8(%r12)
	movq %rbx,(%r12)
	leaq -14(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3a40:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_c3a3A:
	movq 8(%rbp),%rax
	movq $block_c3a3I_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c3a3I
_c3a3K:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3a3x, .-_c3a3x


==================== Asm code ====================
2018-03-16 15:57:35.680645631 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3a3x_info:
	.quad	_c3a3x
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.681720445 UTC

.section .text
.align 8
_c3a3I:
_c3a3I:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c3a3Q
_c3a3U:
	movl $lvl37_r2Urd_closure+2,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3a3Q:
	movl $[]_closure+1,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3a3I, .-_c3a3I


==================== Asm code ====================
2018-03-16 15:57:35.682275478 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3a3I_info:
	.quad	_c3a3I
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.683018944 UTC

.section .text
.align 8
$wdoFmt_s2Vvs_entry:
_c3a48:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c3a49
_u3a6v:
	movq %rbx,-32(%rbp)
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-32,%rbp
	jmp _c39SE
_c3a49:
	jmp *-8(%r13)
	.size $wdoFmt_s2Vvs_entry, .-$wdoFmt_s2Vvs_entry


==================== Asm code ====================
2018-03-16 15:57:35.683611804 UTC

.section .data.rel.ro
.align 8
.align 1
$wdoFmt_s2Vvs_info:
	.quad	$wdoFmt_s2Vvs_entry
	.quad	2
	.quad	9042190353301515
	.quad	12884901911
	.quad	S2VLN_srt+1144


==================== Asm code ====================
2018-03-16 15:57:35.68444955 UTC

.section .text
.align 8
_c39SE:
_c39SE:
	movq $block_c39SH_info,-16(%rbp)
	movq 8(%rbp),%rbx
	movq (%rbp),%rax
	movq 13(%rax),%rcx
	movq %rcx,-8(%rbp)
	movq 5(%rax),%rax
	movq %rax,8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c39SH
_c39SI:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c39SE, .-_c39SE


==================== Asm code ====================
2018-03-16 15:57:35.685388262 UTC

.section .text
.align 8
_c39SH:
_c39SH:
	andl $7,%ebx
	cmpq $3,%rbx
	jb _u3a6u
_c3a46:
	movq $block_c3a64_info,8(%rbp)
	movq 40(%rbp),%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c3a64
_c3a66:
	movq (%rbx),%rax
	jmp *(%rax)
_u3a6u:
	movq 24(%rbp),%rax
	cmpq $2,%rbx
	jb _c3a44
_c3a45:
	movq $block_c39XK_info,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c39XK
_c39XL:
	movq (%rbx),%rax
	jmp *(%rax)
_c3a44:
	movq $block_c39SM_info,24(%rbp)
	movq %rax,%rbx
	addq $24,%rbp
	testb $7,%bl
	jne _c39SM
_c39SN:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c39SH, .-_c39SH


==================== Asm code ====================
2018-03-16 15:57:35.686203128 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39SH_info:
	.quad	_c39SH
	.quad	5
	.quad	9042190353301534
	.quad	S2VLN_srt+1144


==================== Asm code ====================
2018-03-16 15:57:35.687060291 UTC

.section .text
.align 8
_c39SM:
_c39SM:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c3a4e
_c3a4T:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3a4W
_c3a4V:
	movq 6(%rbx),%rbx
	movq $dec'_s2VvY_info,-16(%r12)
	movq %rbx,(%r12)
	movq $block_c39X8_info,-8(%rbp)
	movq %rax,%rbx
	leaq -16(%r12),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c39X8
_c39X9:
	movq (%rbx),%rax
	jmp *(%rax)
_c3a4W:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_c3a4e:
	movq $block_c39SR_info,8(%rbp)
	movq %rax,%rsi
	movl $GHC.Show.intToDigit_closure+1,%r14d
	addq $8,%rbp
	jmp GHC.Base.map_entry
	.size _c39SM, .-_c39SM


==================== Asm code ====================
2018-03-16 15:57:35.68787053 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39SM_info:
	.quad	_c39SM
	.quad	2
	.quad	565118911905822
	.quad	S2VLN_srt+1176


==================== Asm code ====================
2018-03-16 15:57:35.688653594 UTC

.section .text
.align 8
_c39SR:
_c39SR:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c3a4i
_c3a4k:
	movq $block_c39SW_info,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c39SW
_c39SX:
	movq (%rbx),%rax
	jmp *(%rax)
_c3a4i:
	movl $lvl13_r2UqM_closure,%ebx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c39SR, .-_c39SR


==================== Asm code ====================
2018-03-16 15:57:35.689362426 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39SR_info:
	.quad	_c39SR
	.quad	1
	.quad	12884901918
	.quad	S2VLN_srt+1232


==================== Asm code ====================
2018-03-16 15:57:35.690125659 UTC

.section .text
.align 8
_c39SW:
_c39SW:
	cmpq $48,7(%rbx)
	je _c3a4H
_u3a6x:
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp _c39T4
_c3a4H:
	movq $block_c3a4G_info,-8(%rbp)
	movq %rbx,%rax
	movq 8(%rbp),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c3a4G
_c3a4I:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c39SW, .-_c39SW


==================== Asm code ====================
2018-03-16 15:57:35.690854414 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39SW_info:
	.quad	_c39SW
	.quad	2
	.quad	4294967326
	.quad	S2VLN_srt+1240


==================== Asm code ====================
2018-03-16 15:57:35.691583138 UTC

.section .text
.align 8
_c3a4G:
_c3a4G:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c3a4O
	jmp _c39T4
_c3a4O:
	movl $lvl16_r2UqP_closure,%ebx
	addq $32,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3a4G, .-_c3a4G


==================== Asm code ====================
2018-03-16 15:57:35.692246832 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3a4G_info:
	.quad	_c3a4G
	.quad	3
	.quad	4294967326
	.quad	S2VLN_srt+1240


==================== Asm code ====================
2018-03-16 15:57:35.69298378 UTC

.section .text
.align 8
_c39T4:
_c39T4:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3a4o
_c3a4n:
	movq $show_e'_s2VvF_info,-16(%r12)
	movq 24(%rbp),%rax
	movq %rax,(%r12)
	movq $block_c39Tt_info,(%rbp)
	movq 16(%rbp),%rbx
	leaq -16(%r12),%rax
	movq %rax,24(%rbp)
	testb $7,%bl
	jne _c39Tt
_c39Tu:
	movq (%rbx),%rax
	jmp *(%rax)
_c3a4o:
	movq $24,904(%r13)
	movq $block_c39T4_info,(%rbp)
	jmp stg_gc_noregs
	.size _c39T4, .-_c39T4


==================== Asm code ====================
2018-03-16 15:57:35.693829133 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39T4_info:
	.quad	_c39T4
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.694774425 UTC

.section .text
.align 8
_c39Tt:
_c39Tt:
	movq 24(%rbp),%rax
	movq 8(%rbp),%rcx
	movq %rbx,%rdx
	andl $7,%edx
	cmpq $1,%rdx
	je _c3a4r
_c3a4x:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _c3a4A
_c3a4z:
	movq $sat_s2VvR_info,-72(%r12)
	movq %rax,-56(%r12)
	movq %rbx,-48(%r12)
	movq $:_con_info,-40(%r12)
	movq $lvl14_r2UqN_closure+1,-32(%r12)
	leaq -72(%r12),%rax
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	movq %rcx,-8(%r12)
	leaq -38(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3a4A:
	movq $80,904(%r13)
	jmp stg_gc_unpt_r1
_c3a4u:
	movq $48,904(%r13)
	jmp stg_gc_unpt_r1
_c3a4r:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c3a4u
_c3a4t:
	movq $sat_s2VvN_info,-40(%r12)
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	movq %rcx,-8(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c39Tt, .-_c39Tt


==================== Asm code ====================
2018-03-16 15:57:35.695615021 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39Tt_info:
	.quad	_c39Tt
	.quad	131
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:35.69644952 UTC

.section .text
.align 8
_c39X8:
_c39X8:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c39Ul
_c3a58:
	movq $block_c39Xe_info,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c39Xe
_c39Xf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c39X8, .-_c39X8


==================== Asm code ====================
2018-03-16 15:57:35.697129292 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39X8_info:
	.quad	_c39X8
	.quad	3
	.quad	563469644464158
	.quad	S2VLN_srt+1176


==================== Asm code ====================
2018-03-16 15:57:35.697970279 UTC

.section .text
.align 8
_c39Xe:
_c39Xe:
	cmpq $0,7(%rbx)
	je _c3a5c
_u3a6w:
	addq $8,%rbp
	jmp _c39Ul
_c3a5c:
	movq 8(%rbp),%rax
	movq $block_c39Xm_info,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c39Xm
_c39Xn:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c39Xe, .-_c39Xe


==================== Asm code ====================
2018-03-16 15:57:35.698670058 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39Xe_info:
	.quad	_c39Xe
	.quad	4
	.quad	563469644464158
	.quad	S2VLN_srt+1176


==================== Asm code ====================
2018-03-16 15:57:35.699535873 UTC

.section .text
.align 8
_c39Xm:
_c39Xm:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c3a5g
	jmp _c39Ul
_c3a5j:
	movq $72,904(%r13)
	jmp stg_gc_unpt_r1
_c3a5g:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c3a5j
_c3a5i:
	movq $sat_s2Vx1_info,-64(%r12)
	movq 8(%rbp),%rax
	movq %rax,-48(%r12)
	movq $:_con_info,-40(%r12)
	movq $lvl14_r2UqN_closure+1,-32(%r12)
	leaq -64(%r12),%rax
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	movq $lvl20_r2UqT_closure+1,-8(%r12)
	leaq -38(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c39Xm, .-_c39Xm


==================== Asm code ====================
2018-03-16 15:57:35.700371187 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39Xm_info:
	.quad	_c39Xm
	.quad	3
	.quad	563469644464158
	.quad	S2VLN_srt+1176


==================== Asm code ====================
2018-03-16 15:57:35.701337729 UTC

.section .text
.align 8
_c39Ul:
_c39Ul:
	addq $168,%r12
	cmpq 856(%r13),%r12
	ja _c3a52
_c3a51:
	movq $ds1_s2Vw4_info,-160(%r12)
	movq 16(%rbp),%rax
	movq %rax,-144(%r12)
	movq 8(%rbp),%rax
	movq %rax,-136(%r12)
	movq $ds2_s2Vwc_info,-128(%r12)
	leaq -160(%r12),%rax
	movq %rax,-112(%r12)
	movq $sat_s2VwP_info,-104(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-88(%r12)
	movq %rax,-80(%r12)
	leaq -128(%r12),%rax
	movq %rax,-72(%r12)
	movq $:_con_info,-64(%r12)
	movq $lvl14_r2UqN_closure+1,-56(%r12)
	leaq -104(%r12),%rbx
	movq %rbx,-48(%r12)
	movq $stg_sel_0_upd_info,-40(%r12)
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -62(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3a52:
	movq $168,904(%r13)
	movq $block_c39Ul_info,(%rbp)
	jmp stg_gc_noregs
	.size _c39Ul, .-_c39Ul


==================== Asm code ====================
2018-03-16 15:57:35.702195036 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39Ul_info:
	.quad	_c39Ul
	.quad	3
	.quad	244813135902
	.quad	S2VLN_srt+1176


==================== Asm code ====================
2018-03-16 15:57:35.7031275 UTC

.section .text
.align 8
_c39XK:
_c39XK:
	movq 40(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c3a5r
_c3a5z:
	movq $block_c39YX_info,(%rbp)
	movq 6(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,40(%rbp)
	testb $7,%bl
	jne _c39YX
_c39YY:
	movq (%rbx),%rax
	jmp *(%rax)
_c3a5r:
	movq $block_c39XP_info,24(%rbp)
	movq %rax,%rbx
	addq $24,%rbp
	testb $7,%bl
	jne _c39XP
_c39XQ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c39XK, .-_c39XK


==================== Asm code ====================
2018-03-16 15:57:35.703838797 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39XK_info:
	.quad	_c39XK
	.quad	389
	.quad	906238099486
	.quad	S2VLN_srt+1144


==================== Asm code ====================
2018-03-16 15:57:35.705359774 UTC

.section .text
.align 8
_c39XP:
_c39XP:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c3a5u
_c3a5t:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	testq %rbx,%rbx
	jg _c3a5w
_c3a5x:
	movq $sat_s2Vxj_info,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rsi
	movl $lvl36_r2Urb_bytes,%r14d
	addq $24,%rbp
	jmp GHC.CString.unpackAppendCString#_entry
_c3a5w:
	movq $sat_s2Vx9_info,-24(%r12)
	movq %rax,-8(%r12)
	leaq -24(%r12),%rax
	addq $-8,%r12
	movq %rax,%rdi
	movl $GHC.Types.[]_closure+1,%esi
	movq %rbx,%r14
	addq $24,%rbp
	jmp $wf_r2UqX_entry
_c3a5u:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c39XP, .-_c39XP


==================== Asm code ====================
2018-03-16 15:57:35.706164736 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39XP_info:
	.quad	_c39XP
	.quad	130
	.quad	38654705694
	.quad	S2VLN_srt+1152


==================== Asm code ====================
2018-03-16 15:57:35.707056775 UTC

.section .text
.align 8
_c39YX:
_c39YX:
	addq $120,%r12
	cmpq 856(%r13),%r12
	ja _c3a5C
_c3a5B:
	movq 32(%rbp),%rax
	movq 40(%rbp),%rcx
	movq 7(%rbx),%rdx
	testq %rdx,%rdx
	jl _c3a5G
_c3a5H:
	movq $sat_s2Vy2_info,-112(%r12)
	movq %rcx,-96(%r12)
	movq %rbx,-88(%r12)
	movq %rdx,-80(%r12)
	leaq -112(%r12),%rbx
	addq $-80,%r12
	movq $block_c3a1N_info,(%rbp)
	movq %rax,%rdi
	movq %rbx,%rsi
	movl $base_r2UqK_closure+1,%r14d
	movq %rdx,40(%rbp)
	jmp GHC.Float.$wroundTo_entry
_c3a5G:
	movq $ds_s2Vxo_info,-112(%r12)
	movq %rax,-96(%r12)
	movq %rcx,-88(%r12)
	movq %rdx,-80(%r12)
	movq $sat_s2VxX_info,-72(%r12)
	movq 8(%rbp),%rax
	movq %rax,-56(%r12)
	leaq -112(%r12),%rax
	movq %rax,-48(%r12)
	movq $stg_sel_0_upd_info,-40(%r12)
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -72(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3a5C:
	movq $120,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c39YX, .-_c39YX


==================== Asm code ====================
2018-03-16 15:57:35.707933975 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39YX_info:
	.quad	_c39YX
	.quad	389
	.quad	897648164894
	.quad	S2VLN_srt+1144


==================== Asm code ====================
2018-03-16 15:57:35.708625786 UTC

.section .text
.align 8
_c3a1N:
_c3a1N:
	movq $block_c3a1P_info,(%rbp)
	movq %r14,32(%rbp)
	testb $7,%bl
	jne _c3a1P
_c3a1Q:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3a1N, .-_c3a1N


==================== Asm code ====================
2018-03-16 15:57:35.709456146 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3a1N_info:
	.quad	_c3a1N
	.quad	1925
	.quad	73014444062
	.quad	S2VLN_srt+1144


==================== Asm code ====================
2018-03-16 15:57:35.710309472 UTC

.section .text
.align 8
_c3a1P:
_c3a1P:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c3a5L
_c3a5K:
	movq 32(%rbp),%rax
	addq $7,%rbx
	movq 40(%rbp),%rcx
	addq (%rbx),%rcx
	testq %rcx,%rcx
	jg _c3a5N
_c3a61:
	movq $sat_s2Vyw_info,-24(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -24(%r12),%rsi
	movl $lvl23_r2UqW_closure,%r14d
	addq $48,%rbp
	jmp GHC.Base.++_entry
_c3a5N:
	addq $-32,%r12
	movq $block_c3a20_info,(%rbp)
	movq %rax,%rsi
	movl $GHC.Show.intToDigit_closure+1,%r14d
	movq %rcx,40(%rbp)
	jmp GHC.Base.map_entry
_c3a5L:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c3a1P, .-_c3a1P


==================== Asm code ====================
2018-03-16 15:57:35.711028212 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3a1P_info:
	.quad	_c3a1P
	.quad	1413
	.quad	73014444062
	.quad	S2VLN_srt+1144


==================== Asm code ====================
2018-03-16 15:57:35.711767155 UTC

.section .text
.align 8
_c3a20:
_c3a20:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3a5Q
_c3a5P:
	movq $GHC.Types.I#_con_info,-8(%r12)
	movq 40(%rbp),%rax
	movq %rax,(%r12)
	movq $block_c3a25_info,(%rbp)
	movq %rbx,%rsi
	leaq -7(%r12),%r14
	jmp GHC.List.$wsplitAt'_entry
_c3a5Q:
	movq $16,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c3a20, .-_c3a20


==================== Asm code ====================
2018-03-16 15:57:35.712427688 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3a20_info:
	.quad	_c3a20
	.quad	1925
	.quad	4294967326
	.quad	S2VLN_srt+1144


==================== Asm code ====================
2018-03-16 15:57:35.713167323 UTC

.section .text
.align 8
_c3a25:
_c3a25:
	movq $block_c3a27_info,(%rbp)
	movq %r14,40(%rbp)
	testb $7,%bl
	jne _c3a27
_c3a28:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3a25, .-_c3a25


==================== Asm code ====================
2018-03-16 15:57:35.713843378 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3a25_info:
	.quad	_c3a25
	.quad	1925
	.quad	4294967326
	.quad	S2VLN_srt+1144


==================== Asm code ====================
2018-03-16 15:57:35.714783965 UTC

.section .text
.align 8
_c3a27:
_c3a27:
	movq 8(%rbp),%rax
	movq 40(%rbp),%rcx
	movq %rbx,%rdx
	andl $7,%edx
	cmpq $1,%rdx
	je _c3a5T
_c3a5X:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c3a60
_c3a5Z:
	movq $sat_s2Vyr_info,-24(%r12)
	movq %rax,-8(%r12)
	movq %rcx,(%r12)
	leaq -24(%r12),%rsi
	movq %rbx,%r14
	addq $48,%rbp
	jmp GHC.Base.++_entry
_c3a60:
	movq $32,904(%r13)
	jmp stg_gc_unpt_r1
_c3a5T:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c3a60
_c3a5V:
	movq $sat_s2Vyk_info,-24(%r12)
	movq %rax,-8(%r12)
	movq %rcx,(%r12)
	leaq -24(%r12),%rsi
	movl $lvl23_r2UqW_closure,%r14d
	addq $48,%rbp
	jmp GHC.Base.++_entry
	.size _c3a27, .-_c3a27


==================== Asm code ====================
2018-03-16 15:57:35.715571057 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3a27_info:
	.quad	_c3a27
	.quad	901
	.quad	4294967326
	.quad	S2VLN_srt+1144


==================== Asm code ====================
2018-03-16 15:57:35.716443079 UTC

.section .text
.align 8
_c3a64:
_c3a64:
	movq 24(%rbp),%rax
	movq %rbx,%rcx
	movq 7(%rbx),%rbx
	testq %rbx,%rbx
	jl _c3a6l
_c3a6k:
	cmpq $7,%rbx
	jg _c3a6l
_c3a6h:
	movq $GHC.Float.FFFixed_closure+2,16(%rbp)
	movq %rax,24(%rbp)
	movq %rcx,32(%rbp)
	addq $8,%rbp
	jmp _c39SE
_c3a6l:
	movq $GHC.Float.FFExponent_closure+1,16(%rbp)
	movq %rax,24(%rbp)
	movq %rcx,32(%rbp)
	addq $8,%rbp
	jmp _c39SE
	.size _c3a64, .-_c3a64


==================== Asm code ====================
2018-03-16 15:57:35.717160732 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3a64_info:
	.quad	_c3a64
	.quad	644
	.quad	9042190353301534
	.quad	S2VLN_srt+1144


==================== Asm code ====================
2018-03-16 15:57:35.717974965 UTC

.section .text
.align 8
sat_s2VyI_entry:
_c3a70:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3a71
_c3a72:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Float.rationalToDouble5_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c3a71:
	jmp *-16(%r13)
	.size sat_s2VyI_entry, .-sat_s2VyI_entry


==================== Asm code ====================
2018-03-16 15:57:35.718595389 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2VyI_info:
	.quad	sat_s2VyI_entry
	.quad	1
	.quad	4294967312
	.quad	S2VLN_srt+1104


==================== Asm code ====================
2018-03-16 15:57:35.719385805 UTC

.section .text
.align 8
sat_s2VyC_entry:
_c3a7k:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3a7l
_c3a7m:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.negate_entry
_c3a7l:
	jmp *-16(%r13)
	.size sat_s2VyC_entry, .-sat_s2VyC_entry


==================== Asm code ====================
2018-03-16 15:57:35.720053969 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2VyC_info:
	.quad	sat_s2VyC_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:35.720665271 UTC

.section .data.rel.ro
.align 8
.align 1
u3a8S_srtd:
	.quad	S2VLN_srt+752
	.quad	71
	.quad	4586388454895517697
	.quad	64


==================== Asm code ====================
2018-03-16 15:57:35.721687146 UTC

.section .text
.align 8
sat_s2VyG_entry:
_c3a7p:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c3a7q
_c3a7r:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c3a7t
_c3a7s:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rbx
	movq $sat_s2VyC_info,-24(%r12)
	movq %rdx,-8(%r12)
	movq %rsi,(%r12)
	movq $block_c3a7n_info,-40(%rbp)
	leaq -24(%r12),%rdi
	movl $GHC.Float.expts4_closure,%esi
	movq %rax,%r14
	movq %rcx,-32(%rbp)
	movq %rbx,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Float.$wfloatToDigits_entry
_c3a7t:
	movq $32,904(%r13)
_c3a7q:
	jmp *-16(%r13)
	.size sat_s2VyG_entry, .-sat_s2VyG_entry


==================== Asm code ====================
2018-03-16 15:57:35.722463972 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2VyG_info:
	.quad	sat_s2VyG_entry
	.quad	5
	.quad	-4294967281
	.quad	u3a8S_srtd


==================== Asm code ====================
2018-03-16 15:57:35.723139999 UTC

.section .text
.align 8
_c3a7n:
_c3a7n:
	movq %r14,%rdi
	movq %rbx,%rsi
	movq 8(%rbp),%r14
	movq 16(%rbp),%rbx
	addq $24,%rbp
	jmp $wdoFmt_s2Vvs_entry
	.size _c3a7n, .-_c3a7n


==================== Asm code ====================
2018-03-16 15:57:35.723782298 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3a7n_info:
	.quad	_c3a7n
	.quad	2
	.quad	9042190353301534
	.quad	S2VLN_srt+1144


==================== Asm code ====================
2018-03-16 15:57:35.724587156 UTC

.section .text
.align 8
sat_s2VyP_entry:
_c3a7B:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3a7C
_c3a7D:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq $GHC.Float.rationalToDouble5_closure,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Num.fromInteger_entry
_c3a7C:
	jmp *-16(%r13)
	.size sat_s2VyP_entry, .-sat_s2VyP_entry


==================== Asm code ====================
2018-03-16 15:57:35.725305324 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2VyP_info:
	.quad	sat_s2VyP_entry
	.quad	1
	.quad	4294967312
	.quad	S2VLN_srt+1104


==================== Asm code ====================
2018-03-16 15:57:35.725913557 UTC

.section .data.rel.ro
.align 8
.align 1
u3a8T_srtd:
	.quad	S2VLN_srt+752
	.quad	72
	.quad	-4636965989773213695
	.quad	195


==================== Asm code ====================
2018-03-16 15:57:35.726774384 UTC

.section .text
.align 8
.globl GHC.Float.formatRealFloatAlt_entry
.type GHC.Float.formatRealFloatAlt_entry, @object
GHC.Float.formatRealFloatAlt_entry:
_c3a7I:
	leaq -80(%rbp),%rax
	cmpq %r15,%rax
	jb _c3a7J
_c3a7K:
	movq $block_c39Sf_info,-48(%rbp)
	movq %r14,%rax
	movq $stg_ap_p_info,-64(%rbp)
	movq %r9,-56(%rbp)
	movq %rax,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-64,%rbp
	jmp GHC.Float.isNaN_entry
_c3a7J:
	movl $GHC.Float.formatRealFloatAlt_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.formatRealFloatAlt_entry, .-GHC.Float.formatRealFloatAlt_entry


==================== Asm code ====================
2018-03-16 15:57:35.727482039 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.formatRealFloatAlt_info
.type GHC.Float.formatRealFloatAlt_info, @object
GHC.Float.formatRealFloatAlt_info:
	.quad	GHC.Float.formatRealFloatAlt_entry
	.quad	0
	.quad	-4294967282
	.quad	21474836505
	.quad	u3a8T_srtd


==================== Asm code ====================
2018-03-16 15:57:35.728067896 UTC

.section .data.rel.ro
.align 8
.align 1
u3a8U_srtd:
	.quad	S2VLN_srt+752
	.quad	71
	.quad	-4636965989773213695
	.quad	67


==================== Asm code ====================
2018-03-16 15:57:35.728821316 UTC

.section .text
.align 8
_c39Sf:
_c39Sf:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c3a7F
_c3a7G:
	movl $lvl31_r2Ur5_closure,%ebx
	addq $48,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c3a7F:
	movq $block_c39Sj_info,(%rbp)
	movq 8(%rbp),%r14
	jmp GHC.Float.$p1RealFloat_entry
	.size _c39Sf, .-_c39Sf


==================== Asm code ====================
2018-03-16 15:57:35.729525208 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39Sf_info:
	.quad	_c39Sf
	.quad	5
	.quad	-4294967266
	.quad	u3a8U_srtd


==================== Asm code ====================
2018-03-16 15:57:35.730110829 UTC

.section .data.rel.ro
.align 8
.align 1
u3a8V_srtd:
	.quad	S2VLN_srt+752
	.quad	71
	.quad	-4636965989773213695
	.quad	65


==================== Asm code ====================
2018-03-16 15:57:35.730797003 UTC

.section .text
.align 8
_c39Sj:
_c39Sj:
	movq $block_c39Sn_info,(%rbp)
	movq %rbx,%r14
	jmp GHC.Real.$p1RealFrac_entry
	.size _c39Sj, .-_c39Sj


==================== Asm code ====================
2018-03-16 15:57:35.731450838 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39Sj_info:
	.quad	_c39Sj
	.quad	5
	.quad	-4294967266
	.quad	u3a8V_srtd


==================== Asm code ====================
2018-03-16 15:57:35.732632974 UTC

.section .data.rel.ro
.align 8
.align 1
u3a8W_srtd:
	.quad	S2VLN_srt+752
	.quad	71
	.quad	-4636965989773213695
	.quad	65


==================== Asm code ====================
2018-03-16 15:57:35.733985015 UTC

.section .text
.align 8
_c39Sn:
_c39Sn:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3a7P
_c3a7O:
	movq $$dNum_s2Vvq_info,-16(%r12)
	movq %rbx,(%r12)
	movq $block_c39Sy_info,-16(%rbp)
	movq 8(%rbp),%r14
	movq $stg_ap_p_info,-32(%rbp)
	movq 40(%rbp),%rax
	movq %rax,-24(%rbp)
	movq %rbx,-8(%rbp)
	leaq -16(%r12),%rax
	movq %rax,(%rbp)
	addq $-32,%rbp
	jmp GHC.Float.isInfinite_entry
_c3a7P:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
	.size _c39Sn, .-_c39Sn


==================== Asm code ====================
2018-03-16 15:57:35.73467372 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39Sn_info:
	.quad	_c39Sn
	.quad	5
	.quad	-4294967266
	.quad	u3a8W_srtd


==================== Asm code ====================
2018-03-16 15:57:35.73524146 UTC

.section .data.rel.ro
.align 8
.align 1
u3a8X_srtd:
	.quad	S2VLN_srt+752
	.quad	71
	.quad	-4636965989773213695
	.quad	65


==================== Asm code ====================
2018-03-16 15:57:35.736162423 UTC

.section .text
.align 8
_c39Sy:
_c39Sy:
	movq 16(%rbp),%rax
	movq 8(%rbp),%rcx
	movq %rbx,%rdx
	andl $7,%edx
	cmpq $1,%rdx
	je _c3a7R
_c3a8q:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3a8t
_c3a8s:
	movq $sat_s2VyP_info,-16(%r12)
	movq %rax,(%r12)
	movq $block_c3a8p_info,40(%rbp)
	movq %rcx,%r14
	leaq -16(%r12),%rax
	movq %rax,48(%rbp)
	addq $40,%rbp
	jmp GHC.Real.$p2Real_entry
_c3a8t:
	movq $24,904(%r13)
	jmp stg_gc_unpt_r1
_c3a7U:
	movq $48,904(%r13)
	jmp stg_gc_unpt_r1
_c3a7R:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c3a7U
_c3a7T:
	movq $$wdoFmt_s2Vvs_info,-40(%r12)
	movq 40(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq 48(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq $sat_s2VyI_info,-16(%r12)
	movq %rax,(%r12)
	movq $block_c3a73_info,8(%rbp)
	movq %rcx,%r14
	leaq -16(%r12),%rax
	movq %rax,40(%rbp)
	leaq -37(%r12),%rax
	movq %rax,48(%rbp)
	addq $8,%rbp
	jmp GHC.Real.$p2Real_entry
	.size _c39Sy, .-_c39Sy


==================== Asm code ====================
2018-03-16 15:57:35.736990767 UTC

.section .data.rel.ro
.align 8
.align 1
block_c39Sy_info:
	.quad	_c39Sy
	.quad	7
	.quad	-4294967266
	.quad	u3a8X_srtd


==================== Asm code ====================
2018-03-16 15:57:35.737689413 UTC

.section .data.rel.ro
.align 8
.align 1
u3a8Y_srtd:
	.quad	S2VLN_srt+752
	.quad	71
	.quad	4586388454895517697
	.quad	64


==================== Asm code ====================
2018-03-16 15:57:35.738391097 UTC

.section .text
.align 8
_c3a73:
_c3a73:
	movq $block_c3a7V_info,(%rbp)
	movq %rbx,%r14
	movq $stg_ap_pp_info,-24(%rbp)
	movq 48(%rbp),%rax
	movq %rax,-16(%rbp)
	movq 32(%rbp),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Classes.<_entry
	.size _c3a73, .-_c3a73


==================== Asm code ====================
2018-03-16 15:57:35.739040318 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3a73_info:
	.quad	_c3a73
	.quad	6
	.quad	-4294967266
	.quad	u3a8Y_srtd


==================== Asm code ====================
2018-03-16 15:57:35.739623199 UTC

.section .data.rel.ro
.align 8
.align 1
u3a8Z_srtd:
	.quad	S2VLN_srt+752
	.quad	71
	.quad	4586388454895517697
	.quad	64


==================== Asm code ====================
2018-03-16 15:57:35.740450346 UTC

.section .text
.align 8
_c3a7V:
_c3a7V:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c3a87
	jmp _c3a7a
_c3a87:
	movq $block_c3a84_info,(%rbp)
	movq 16(%rbp),%r14
	movq $stg_ap_p_info,-16(%rbp)
	movq 48(%rbp),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Float.isNegativeZero_entry
	.size _c3a7V, .-_c3a7V


==================== Asm code ====================
2018-03-16 15:57:35.741112854 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3a7V_info:
	.quad	_c3a7V
	.quad	518
	.quad	-4294967266
	.quad	u3a8Z_srtd


==================== Asm code ====================
2018-03-16 15:57:35.741775054 UTC

.section .data.rel.ro
.align 8
.align 1
u3a90_srtd:
	.quad	S2VLN_srt+752
	.quad	71
	.quad	4586388454895517697
	.quad	64


==================== Asm code ====================
2018-03-16 15:57:35.74259932 UTC

.section .text
.align 8
_c3a84:
_c3a84:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c3a8e
	jmp _c3a7a
_c3a8e:
	movq 16(%rbp),%rax
	movq $block_c3a8b_info,16(%rbp)
	movq 48(%rbp),%rdi
	movl $GHC.Float.expts4_closure,%esi
	movq %rax,%r14
	addq $16,%rbp
	jmp GHC.Float.$wfloatToDigits_entry
	.size _c3a84, .-_c3a84


==================== Asm code ====================
2018-03-16 15:57:35.743248549 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3a84_info:
	.quad	_c3a84
	.quad	518
	.quad	-4294967266
	.quad	u3a90_srtd


==================== Asm code ====================
2018-03-16 15:57:35.743867896 UTC

.section .text
.align 8
_c3a8b:
_c3a8b:
	movq %r14,%rdi
	movq %rbx,%rsi
	movq 8(%rbp),%r14
	movq 24(%rbp),%rbx
	addq $40,%rbp
	jmp $wdoFmt_s2Vvs_entry
	.size _c3a8b, .-_c3a8b


==================== Asm code ====================
2018-03-16 15:57:35.744495244 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3a8b_info:
	.quad	_c3a8b
	.quad	644
	.quad	9042190353301534
	.quad	S2VLN_srt+1144


==================== Asm code ====================
2018-03-16 15:57:35.745042767 UTC

.section .data.rel.ro
.align 8
.align 1
u3a91_srtd:
	.quad	S2VLN_srt+752
	.quad	71
	.quad	4586388454895517697
	.quad	64


==================== Asm code ====================
2018-03-16 15:57:35.74636152 UTC

.section .text
.align 8
_c3a7a:
_c3a7a:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _c3a80
_c3a7Z:
	movq $sat_s2VyG_info,-72(%r12)
	movq 16(%rbp),%rax
	movq %rax,-56(%r12)
	movq 24(%rbp),%rax
	movq %rax,-48(%r12)
	movq 48(%rbp),%rax
	movq %rax,-40(%r12)
	movq 8(%rbp),%rax
	movq %rax,-32(%r12)
	movq 40(%rbp),%rax
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	movq $GHC.Float.$fShowDouble3_closure+1,-8(%r12)
	leaq -72(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $56,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3a80:
	movq $80,904(%r13)
	movq $block_c3a7a_info,(%rbp)
	jmp stg_gc_noregs
	.size _c3a7a, .-_c3a7a


==================== Asm code ====================
2018-03-16 15:57:35.747087652 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3a7a_info:
	.quad	_c3a7a
	.quad	518
	.quad	-4294967266
	.quad	u3a91_srtd


==================== Asm code ====================
2018-03-16 15:57:35.747792844 UTC

.section .text
.align 8
_c3a8p:
_c3a8p:
	movq 16(%rbp),%rax
	movq $block_c3a8x_info,16(%rbp)
	movq %rbx,%r14
	movq $stg_ap_pp_info,-8(%rbp)
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp GHC.Classes.<_entry
	.size _c3a8p, .-_c3a8p


==================== Asm code ====================
2018-03-16 15:57:35.748434672 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3a8p_info:
	.quad	_c3a8p
	.quad	2
	.quad	12884901918
	.quad	S2VLN_srt+1256


==================== Asm code ====================
2018-03-16 15:57:35.749188288 UTC

.section .text
.align 8
_c3a8x:
_c3a8x:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c3a8E
_c3a8I:
	movl $lvl29_r2Ur3_closure,%ebx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c3a8E:
	movl $lvl27_r2Ur1_closure,%ebx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3a8x, .-_c3a8x


==================== Asm code ====================
2018-03-16 15:57:35.749834049 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3a8x_info:
	.quad	_c3a8x
	.quad	0
	.quad	12884901918
	.quad	S2VLN_srt+1256


==================== Asm code ====================
2018-03-16 15:57:35.752471971 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.formatRealFloat_closure
.type GHC.Float.formatRealFloat_closure, @object
GHC.Float.formatRealFloat_closure:
	.quad	GHC.Float.formatRealFloat_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:35.753227089 UTC

.section .text
.align 8
.globl GHC.Float.formatRealFloat_entry
.type GHC.Float.formatRealFloat_entry, @object
GHC.Float.formatRealFloat_entry:
_c3ahA:
	movq %r8,%r9
	movl $GHC.Types.False_closure+1,%r8d
	jmp GHC.Float.formatRealFloatAlt_entry
	.size GHC.Float.formatRealFloat_entry, .-GHC.Float.formatRealFloat_entry


==================== Asm code ====================
2018-03-16 15:57:35.753932916 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.formatRealFloat_info
.type GHC.Float.formatRealFloat_info, @object
GHC.Float.formatRealFloat_info:
	.quad	GHC.Float.formatRealFloat_entry
	.quad	0
	.quad	4294967310
	.quad	17179869208
	.quad	S2VLN_srt+1320


==================== Asm code ====================
2018-03-16 15:57:35.758160251 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.showFloat_closure
.type GHC.Float.showFloat_closure, @object
GHC.Float.showFloat_closure:
	.quad	GHC.Float.showFloat_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:35.759028209 UTC

.section .text
.align 8
sat_s2VyX_entry:
_c3ahP:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3ahQ
_c3ahR:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%r9
	movl $GHC.Types.False_closure+1,%r8d
	movl $GHC.Base.Nothing_closure+1,%edi
	movl $GHC.Float.FFGeneric_closure+3,%esi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Float.formatRealFloatAlt_entry
_c3ahQ:
	jmp *-16(%r13)
	.size sat_s2VyX_entry, .-sat_s2VyX_entry


==================== Asm code ====================
2018-03-16 15:57:35.759734439 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2VyX_info:
	.quad	sat_s2VyX_entry
	.quad	2
	.quad	4294967314
	.quad	S2VLN_srt+1320


==================== Asm code ====================
2018-03-16 15:57:35.760585328 UTC

.section .text
.align 8
.globl GHC.Float.showFloat_entry
.type GHC.Float.showFloat_entry, @object
GHC.Float.showFloat_entry:
_c3ahS:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c3ahW
_c3ahV:
	movq $sat_s2VyX_info,-24(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -24(%r12),%r14
	movl $GHC.Base.++_closure+2,%ebx
	jmp stg_ap_p_fast
_c3ahW:
	movq $32,904(%r13)
	movl $GHC.Float.showFloat_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.showFloat_entry, .-GHC.Float.showFloat_entry


==================== Asm code ====================
2018-03-16 15:57:35.761994927 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.showFloat_info
.type GHC.Float.showFloat_info, @object
GHC.Float.showFloat_info:
	.quad	GHC.Float.showFloat_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S2VLN_srt+1320


==================== Asm code ====================
2018-03-16 15:57:35.76597368 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fShowDouble2_closure
.type GHC.Float.$fShowDouble2_closure, @object
GHC.Float.$fShowDouble2_closure:
	.quad	GHC.Float.$fShowDouble2_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:35.76683193 UTC

.section .text
.align 8
sat_s2Vz1_entry:
_c3aig:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3aih
_c3aii:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c3aid_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _c3aid
_c3aie:
	movq (%rbx),%rax
	jmp *(%rax)
_c3aih:
	jmp *-16(%r13)
	.size sat_s2Vz1_entry, .-sat_s2Vz1_entry


==================== Asm code ====================
2018-03-16 15:57:35.767525235 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Vz1_info:
	.quad	sat_s2Vz1_entry
	.quad	1
	.quad	4294967312
	.quad	S2VLN_srt+1296


==================== Asm code ====================
2018-03-16 15:57:35.768176601 UTC

.section .text
.align 8
_c3aid:
_c3aid:
	movsd 7(%rbx),%xmm1
	movl $GHC.Types.False_closure+1,%edi
	movl $GHC.Base.Nothing_closure+1,%esi
	movl $GHC.Float.FFGeneric_closure+3,%r14d
	addq $8,%rbp
	jmp GHC.Float.$w$sformatRealFloatAlt_entry
	.size _c3aid, .-_c3aid


==================== Asm code ====================
2018-03-16 15:57:35.768797225 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3aid_info:
	.quad	_c3aid
	.quad	0
	.quad	4294967326
	.quad	S2VLN_srt+1296


==================== Asm code ====================
2018-03-16 15:57:35.769901573 UTC

.section .text
.align 8
.globl GHC.Float.$fShowDouble2_entry
.type GHC.Float.$fShowDouble2_entry, @object
GHC.Float.$fShowDouble2_entry:
_c3ain:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3air
_c3aiq:
	movq $sat_s2Vz1_info,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	movl $GHC.Base.++_closure+2,%ebx
	jmp stg_ap_p_fast
_c3air:
	movq $24,904(%r13)
	movl $GHC.Float.$fShowDouble2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fShowDouble2_entry, .-GHC.Float.$fShowDouble2_entry


==================== Asm code ====================
2018-03-16 15:57:35.770543903 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fShowDouble2_info
.type GHC.Float.$fShowDouble2_info, @object
GHC.Float.$fShowDouble2_info:
	.quad	GHC.Float.$fShowDouble2_entry
	.quad	0
	.quad	141733920782
	.quad	4294967301
	.quad	S2VLN_srt+1296


==================== Asm code ====================
2018-03-16 15:57:35.774148888 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fShowDouble_$cshowsPrec_closure
.type GHC.Float.$fShowDouble_$cshowsPrec_closure, @object
GHC.Float.$fShowDouble_$cshowsPrec_closure:
	.quad	GHC.Float.$fShowDouble_$cshowsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:35.775164109 UTC

.section .text
.align 8
.globl GHC.Float.$fShowDouble_$cshowsPrec_entry
.type GHC.Float.$fShowDouble_$cshowsPrec_entry, @object
GHC.Float.$fShowDouble_$cshowsPrec_entry:
_c3aiL:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3aiM
_c3aiN:
	movq $block_c3aiI_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3aiI
_c3aiJ:
	movq (%rbx),%rax
	jmp *(%rax)
_c3aiM:
	movl $GHC.Float.$fShowDouble_$cshowsPrec_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fShowDouble_$cshowsPrec_entry, .-GHC.Float.$fShowDouble_$cshowsPrec_entry


==================== Asm code ====================
2018-03-16 15:57:35.775858169 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fShowDouble_$cshowsPrec_info
.type GHC.Float.$fShowDouble_$cshowsPrec_info, @object
GHC.Float.$fShowDouble_$cshowsPrec_info:
	.quad	GHC.Float.$fShowDouble_$cshowsPrec_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S2VLN_srt+1336


==================== Asm code ====================
2018-03-16 15:57:35.776541702 UTC

.section .text
.align 8
_c3aiI:
_c3aiI:
	movsd 7(%rbx),%xmm1
	movq 8(%rbp),%rsi
	movl $GHC.Float.$fShowDouble2_closure+1,%r14d
	addq $16,%rbp
	jmp GHC.Float.$w$sshowSignedFloat_entry
	.size _c3aiI, .-_c3aiI


==================== Asm code ====================
2018-03-16 15:57:35.777162128 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3aiI_info:
	.quad	_c3aiI
	.quad	1
	.quad	4294967326
	.quad	S2VLN_srt+1336


==================== Asm code ====================
2018-03-16 15:57:35.780483942 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fShowDouble_$cshow_closure
.type GHC.Float.$fShowDouble_$cshow_closure, @object
GHC.Float.$fShowDouble_$cshow_closure:
	.quad	GHC.Float.$fShowDouble_$cshow_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:35.781690595 UTC

.section .text
.align 8
.globl GHC.Float.$fShowDouble_$cshow_entry
.type GHC.Float.$fShowDouble_$cshow_entry, @object
GHC.Float.$fShowDouble_$cshow_entry:
_c3aj8:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3aj9
_c3aja:
	movq $block_c3aj5_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3aj5
_c3aj6:
	movq (%rbx),%rax
	jmp *(%rax)
_c3aj9:
	movl $GHC.Float.$fShowDouble_$cshow_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fShowDouble_$cshow_entry, .-GHC.Float.$fShowDouble_$cshow_entry


==================== Asm code ====================
2018-03-16 15:57:35.782406808 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fShowDouble_$cshow_info
.type GHC.Float.$fShowDouble_$cshow_info, @object
GHC.Float.$fShowDouble_$cshow_info:
	.quad	GHC.Float.$fShowDouble_$cshow_entry
	.quad	0
	.quad	21474836494
	.quad	4294967301
	.quad	S2VLN_srt+1336


==================== Asm code ====================
2018-03-16 15:57:35.783180718 UTC

.section .text
.align 8
_c3aj5:
_c3aj5:
	movsd 7(%rbx),%xmm1
	movl $GHC.Float.minExpt_closure+1,%esi
	movl $GHC.Float.$fShowDouble2_closure+1,%r14d
	movq $stg_ap_p_info,-8(%rbp)
	movq $GHC.Types.[]_closure+1,(%rbp)
	addq $-8,%rbp
	jmp GHC.Float.$w$sshowSignedFloat_entry
	.size _c3aj5, .-_c3aj5


==================== Asm code ====================
2018-03-16 15:57:35.78381589 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3aj5_info:
	.quad	_c3aj5
	.quad	0
	.quad	4294967326
	.quad	S2VLN_srt+1336


==================== Asm code ====================
2018-03-16 15:57:35.787188203 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fShowDouble1_closure
.type GHC.Float.$fShowDouble1_closure, @object
GHC.Float.$fShowDouble1_closure:
	.quad	GHC.Float.$fShowDouble1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:35.788139099 UTC

.section .text
.align 8
.globl GHC.Float.$fShowDouble1_entry
.type GHC.Float.$fShowDouble1_entry, @object
GHC.Float.$fShowDouble1_entry:
_c3ajv:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3ajw
_c3ajx:
	movq $block_c3ajs_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3ajs
_c3ajt:
	movq (%rbx),%rax
	jmp *(%rax)
_c3ajw:
	movl $GHC.Float.$fShowDouble1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fShowDouble1_entry, .-GHC.Float.$fShowDouble1_entry


==================== Asm code ====================
2018-03-16 15:57:35.788851556 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fShowDouble1_info
.type GHC.Float.$fShowDouble1_info, @object
GHC.Float.$fShowDouble1_info:
	.quad	GHC.Float.$fShowDouble1_entry
	.quad	0
	.quad	38654705678
	.quad	4294967301
	.quad	S2VLN_srt+1336


==================== Asm code ====================
2018-03-16 15:57:35.789639889 UTC

.section .text
.align 8
_c3ajs:
_c3ajs:
	movsd 7(%rbx),%xmm1
	movl $GHC.Float.minExpt_closure+1,%esi
	movl $GHC.Float.$fShowDouble2_closure+1,%r14d
	addq $8,%rbp
	jmp GHC.Float.$w$sshowSignedFloat_entry
	.size _c3ajs, .-_c3ajs


==================== Asm code ====================
2018-03-16 15:57:35.790284767 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3ajs_info:
	.quad	_c3ajs
	.quad	0
	.quad	4294967326
	.quad	S2VLN_srt+1336


==================== Asm code ====================
2018-03-16 15:57:35.793751002 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fShowDouble_$cshowList_closure
.type GHC.Float.$fShowDouble_$cshowList_closure, @object
GHC.Float.$fShowDouble_$cshowList_closure:
	.quad	GHC.Float.$fShowDouble_$cshowList_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:35.794711328 UTC

.section .text
.align 8
.globl GHC.Float.$fShowDouble_$cshowList_entry
.type GHC.Float.$fShowDouble_$cshowList_entry, @object
GHC.Float.$fShowDouble_$cshowList_entry:
_c3ajP:
	movq %rsi,%rdi
	movq %r14,%rsi
	movl $GHC.Float.$fShowDouble1_closure+1,%r14d
	jmp GHC.Show.showList___entry
	.size GHC.Float.$fShowDouble_$cshowList_entry, .-GHC.Float.$fShowDouble_$cshowList_entry


==================== Asm code ====================
2018-03-16 15:57:35.795398186 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fShowDouble_$cshowList_info
.type GHC.Float.$fShowDouble_$cshowList_info, @object
GHC.Float.$fShowDouble_$cshowList_info:
	.quad	GHC.Float.$fShowDouble_$cshowList_entry
	.quad	0
	.quad	4294967310
	.quad	8589934607
	.quad	S2VLN_srt+1360


==================== Asm code ====================
2018-03-16 15:57:35.797205631 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fShowDouble_closure
.type GHC.Float.$fShowDouble_closure, @object
GHC.Float.$fShowDouble_closure:
	.quad	GHC.Show.C:Show_con_info
	.quad	GHC.Float.$fShowDouble_$cshowsPrec_closure+2
	.quad	GHC.Float.$fShowDouble_$cshow_closure+1
	.quad	GHC.Float.$fShowDouble_$cshowList_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:35.801193612 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fShowFloat2_closure
.type GHC.Float.$fShowFloat2_closure, @object
GHC.Float.$fShowFloat2_closure:
	.quad	GHC.Float.$fShowFloat2_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:35.802126496 UTC

.section .text
.align 8
sat_s2Vzf_entry:
_c3ak8:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3ak9
_c3aka:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq $block_c3ak5_info,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _c3ak5
_c3ak6:
	movq (%rbx),%rax
	jmp *(%rax)
_c3ak9:
	jmp *-16(%r13)
	.size sat_s2Vzf_entry, .-sat_s2Vzf_entry


==================== Asm code ====================
2018-03-16 15:57:35.802778834 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s2Vzf_info:
	.quad	sat_s2Vzf_entry
	.quad	1
	.quad	4294967312
	.quad	S2VLN_srt+1248


==================== Asm code ====================
2018-03-16 15:57:35.803411656 UTC

.section .text
.align 8
_c3ak5:
_c3ak5:
	movss 7(%rbx),%xmm1
	movl $GHC.Types.False_closure+1,%edi
	movl $GHC.Base.Nothing_closure+1,%esi
	movl $GHC.Float.FFGeneric_closure+3,%r14d
	addq $8,%rbp
	jmp GHC.Float.$w$sformatRealFloatAlt1_entry
	.size _c3ak5, .-_c3ak5


==================== Asm code ====================
2018-03-16 15:57:35.804125304 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3ak5_info:
	.quad	_c3ak5
	.quad	0
	.quad	4294967326
	.quad	S2VLN_srt+1248


==================== Asm code ====================
2018-03-16 15:57:35.805049791 UTC

.section .text
.align 8
.globl GHC.Float.$fShowFloat2_entry
.type GHC.Float.$fShowFloat2_entry, @object
GHC.Float.$fShowFloat2_entry:
_c3akf:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3akj
_c3aki:
	movq $sat_s2Vzf_info,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	movl $GHC.Base.++_closure+2,%ebx
	jmp stg_ap_p_fast
_c3akj:
	movq $24,904(%r13)
	movl $GHC.Float.$fShowFloat2_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fShowFloat2_entry, .-GHC.Float.$fShowFloat2_entry


==================== Asm code ====================
2018-03-16 15:57:35.805810417 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fShowFloat2_info
.type GHC.Float.$fShowFloat2_info, @object
GHC.Float.$fShowFloat2_info:
	.quad	GHC.Float.$fShowFloat2_entry
	.quad	0
	.quad	140741783322638
	.quad	4294967301
	.quad	S2VLN_srt+1248


==================== Asm code ====================
2018-03-16 15:57:35.809042066 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fShowFloat_$cshowsPrec_closure
.type GHC.Float.$fShowFloat_$cshowsPrec_closure, @object
GHC.Float.$fShowFloat_$cshowsPrec_closure:
	.quad	GHC.Float.$fShowFloat_$cshowsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:35.809964691 UTC

.section .text
.align 8
.globl GHC.Float.$fShowFloat_$cshowsPrec_entry
.type GHC.Float.$fShowFloat_$cshowsPrec_entry, @object
GHC.Float.$fShowFloat_$cshowsPrec_entry:
_c3akD:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3akE
_c3akF:
	movq $block_c3akA_info,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3akA
_c3akB:
	movq (%rbx),%rax
	jmp *(%rax)
_c3akE:
	movl $GHC.Float.$fShowFloat_$cshowsPrec_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fShowFloat_$cshowsPrec_entry, .-GHC.Float.$fShowFloat_$cshowsPrec_entry


==================== Asm code ====================
2018-03-16 15:57:35.810670181 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fShowFloat_$cshowsPrec_info
.type GHC.Float.$fShowFloat_$cshowsPrec_info, @object
GHC.Float.$fShowFloat_$cshowsPrec_info:
	.quad	GHC.Float.$fShowFloat_$cshowsPrec_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S2VLN_srt+1368


==================== Asm code ====================
2018-03-16 15:57:35.811435661 UTC

.section .text
.align 8
_c3akA:
_c3akA:
	movss 7(%rbx),%xmm1
	movq 8(%rbp),%rsi
	movl $GHC.Float.$fShowFloat2_closure+1,%r14d
	addq $16,%rbp
	jmp GHC.Float.$w$sshowSignedFloat1_entry
	.size _c3akA, .-_c3akA


==================== Asm code ====================
2018-03-16 15:57:35.812131672 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3akA_info:
	.quad	_c3akA
	.quad	1
	.quad	4294967326
	.quad	S2VLN_srt+1368


==================== Asm code ====================
2018-03-16 15:57:35.815415693 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fShowFloat_$cshow_closure
.type GHC.Float.$fShowFloat_$cshow_closure, @object
GHC.Float.$fShowFloat_$cshow_closure:
	.quad	GHC.Float.$fShowFloat_$cshow_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:35.816328583 UTC

.section .text
.align 8
.globl GHC.Float.$fShowFloat_$cshow_entry
.type GHC.Float.$fShowFloat_$cshow_entry, @object
GHC.Float.$fShowFloat_$cshow_entry:
_c3al0:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3al1
_c3al2:
	movq $block_c3akX_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3akX
_c3akY:
	movq (%rbx),%rax
	jmp *(%rax)
_c3al1:
	movl $GHC.Float.$fShowFloat_$cshow_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fShowFloat_$cshow_entry, .-GHC.Float.$fShowFloat_$cshow_entry


==================== Asm code ====================
2018-03-16 15:57:35.817000914 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fShowFloat_$cshow_info
.type GHC.Float.$fShowFloat_$cshow_info, @object
GHC.Float.$fShowFloat_$cshow_info:
	.quad	GHC.Float.$fShowFloat_$cshow_entry
	.quad	0
	.quad	21474836494
	.quad	4294967301
	.quad	S2VLN_srt+1368


==================== Asm code ====================
2018-03-16 15:57:35.818098946 UTC

.section .text
.align 8
_c3akX:
_c3akX:
	movss 7(%rbx),%xmm1
	movl $GHC.Float.minExpt_closure+1,%esi
	movl $GHC.Float.$fShowFloat2_closure+1,%r14d
	movq $stg_ap_p_info,-8(%rbp)
	movq $GHC.Types.[]_closure+1,(%rbp)
	addq $-8,%rbp
	jmp GHC.Float.$w$sshowSignedFloat1_entry
	.size _c3akX, .-_c3akX


==================== Asm code ====================
2018-03-16 15:57:35.818731039 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3akX_info:
	.quad	_c3akX
	.quad	0
	.quad	4294967326
	.quad	S2VLN_srt+1368


==================== Asm code ====================
2018-03-16 15:57:35.822885104 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fShowFloat1_closure
.type GHC.Float.$fShowFloat1_closure, @object
GHC.Float.$fShowFloat1_closure:
	.quad	GHC.Float.$fShowFloat1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:35.823865782 UTC

.section .text
.align 8
.globl GHC.Float.$fShowFloat1_entry
.type GHC.Float.$fShowFloat1_entry, @object
GHC.Float.$fShowFloat1_entry:
_c3aln:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3alo
_c3alp:
	movq $block_c3alk_info,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3alk
_c3all:
	movq (%rbx),%rax
	jmp *(%rax)
_c3alo:
	movl $GHC.Float.$fShowFloat1_closure,%ebx
	jmp *-8(%r13)
	.size GHC.Float.$fShowFloat1_entry, .-GHC.Float.$fShowFloat1_entry


==================== Asm code ====================
2018-03-16 15:57:35.82454241 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fShowFloat1_info
.type GHC.Float.$fShowFloat1_info, @object
GHC.Float.$fShowFloat1_info:
	.quad	GHC.Float.$fShowFloat1_entry
	.quad	0
	.quad	38654705678
	.quad	4294967301
	.quad	S2VLN_srt+1368


==================== Asm code ====================
2018-03-16 15:57:35.825565483 UTC

.section .text
.align 8
_c3alk:
_c3alk:
	movss 7(%rbx),%xmm1
	movl $GHC.Float.minExpt_closure+1,%esi
	movl $GHC.Float.$fShowFloat2_closure+1,%r14d
	addq $8,%rbp
	jmp GHC.Float.$w$sshowSignedFloat1_entry
	.size _c3alk, .-_c3alk


==================== Asm code ====================
2018-03-16 15:57:35.826195146 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3alk_info:
	.quad	_c3alk
	.quad	0
	.quad	4294967326
	.quad	S2VLN_srt+1368


==================== Asm code ====================
2018-03-16 15:57:35.828778363 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fShowFloat_$cshowList_closure
.type GHC.Float.$fShowFloat_$cshowList_closure, @object
GHC.Float.$fShowFloat_$cshowList_closure:
	.quad	GHC.Float.$fShowFloat_$cshowList_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:35.829903655 UTC

.section .text
.align 8
.globl GHC.Float.$fShowFloat_$cshowList_entry
.type GHC.Float.$fShowFloat_$cshowList_entry, @object
GHC.Float.$fShowFloat_$cshowList_entry:
_c3alH:
	movq %rsi,%rdi
	movq %r14,%rsi
	movl $GHC.Float.$fShowFloat1_closure+1,%r14d
	jmp GHC.Show.showList___entry
	.size GHC.Float.$fShowFloat_$cshowList_entry, .-GHC.Float.$fShowFloat_$cshowList_entry


==================== Asm code ====================
2018-03-16 15:57:35.830827361 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fShowFloat_$cshowList_info
.type GHC.Float.$fShowFloat_$cshowList_info, @object
GHC.Float.$fShowFloat_$cshowList_info:
	.quad	GHC.Float.$fShowFloat_$cshowList_entry
	.quad	0
	.quad	4294967310
	.quad	8589934607
	.quad	S2VLN_srt+1392


==================== Asm code ====================
2018-03-16 15:57:35.833715565 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fShowFloat_closure
.type GHC.Float.$fShowFloat_closure, @object
GHC.Float.$fShowFloat_closure:
	.quad	GHC.Show.C:Show_con_info
	.quad	GHC.Float.$fShowFloat_$cshowsPrec_closure+2
	.quad	GHC.Float.$fShowFloat_$cshow_closure+1
	.quad	GHC.Float.$fShowFloat_$cshowList_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:35.840623955 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.C:Floating_closure
.type GHC.Float.C:Floating_closure, @object
GHC.Float.C:Floating_closure:
	.quad	GHC.Float.C:Floating_info


==================== Asm code ====================
2018-03-16 15:57:35.842528684 UTC

.section .text
.align 8
.globl GHC.Float.C:Floating_slow
.type GHC.Float.C:Floating_slow, @object
GHC.Float.C:Floating_slow:
_c3alQ:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.Float.C:Floating_entry
	.size GHC.Float.C:Floating_slow, .-GHC.Float.C:Floating_slow


==================== Asm code ====================
2018-03-16 15:57:35.844080888 UTC

.section .text
.align 8
GHC.Float.C:Floating_entry:
_c3alV:
	addq $192,%r12
	cmpq 856(%r13),%r12
	ja _c3alZ
_c3alY:
	movq $GHC.Float.C:Floating_con_info,-184(%r12)
	movq %r14,-176(%r12)
	movq %rsi,-168(%r12)
	movq %rdi,-160(%r12)
	movq %r8,-152(%r12)
	movq %r9,-144(%r12)
	movq (%rbp),%rax
	movq %rax,-136(%r12)
	movq 8(%rbp),%rax
	movq %rax,-128(%r12)
	movq 16(%rbp),%rax
	movq %rax,-120(%r12)
	movq 24(%rbp),%rax
	movq %rax,-112(%r12)
	movq 32(%rbp),%rax
	movq %rax,-104(%r12)
	movq 40(%rbp),%rax
	movq %rax,-96(%r12)
	movq 48(%rbp),%rax
	movq %rax,-88(%r12)
	movq 56(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 72(%rbp),%rax
	movq %rax,-64(%r12)
	movq 80(%rbp),%rax
	movq %rax,-56(%r12)
	movq 88(%rbp),%rax
	movq %rax,-48(%r12)
	movq 96(%rbp),%rax
	movq %rax,-40(%r12)
	movq 104(%rbp),%rax
	movq %rax,-32(%r12)
	movq 112(%rbp),%rax
	movq %rax,-24(%r12)
	movq 120(%rbp),%rax
	movq %rax,-16(%r12)
	movq 128(%rbp),%rax
	movq %rax,-8(%r12)
	movq 136(%rbp),%rax
	movq %rax,(%r12)
	leaq -183(%r12),%rbx
	addq $144,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3alZ:
	movq $192,904(%r13)
	movl $GHC.Float.C:Floating_closure,%ebx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.Float.C:Floating_entry, .-GHC.Float.C:Floating_entry


==================== Asm code ====================
2018-03-16 15:57:35.845552135 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.Float.C:Floating_info:
	.quad	GHC.Float.C:Floating_entry
	.quad	0
	.quad	14
	.quad	98784247808
	.quad	0
	.quad	23
	.quad	GHC.Float.C:Floating_slow


==================== Asm code ====================
2018-03-16 15:57:35.85148789 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.C:RealFloat_closure
.type GHC.Float.C:RealFloat_closure, @object
GHC.Float.C:RealFloat_closure:
	.quad	GHC.Float.C:RealFloat_info


==================== Asm code ====================
2018-03-16 15:57:35.852565331 UTC

.section .text
.align 8
.globl GHC.Float.C:RealFloat_slow
.type GHC.Float.C:RealFloat_slow, @object
GHC.Float.C:RealFloat_slow:
_c3amq:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.Float.C:RealFloat_entry
	.size GHC.Float.C:RealFloat_slow, .-GHC.Float.C:RealFloat_slow


==================== Asm code ====================
2018-03-16 15:57:35.854009143 UTC

.section .text
.align 8
GHC.Float.C:RealFloat_entry:
_c3amv:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _c3amz
_c3amy:
	movq $GHC.Float.C:RealFloat_con_info,-128(%r12)
	movq %r14,-120(%r12)
	movq %rsi,-112(%r12)
	movq %rdi,-104(%r12)
	movq %r8,-96(%r12)
	movq %r9,-88(%r12)
	movq (%rbp),%rax
	movq %rax,-80(%r12)
	movq 8(%rbp),%rax
	movq %rax,-72(%r12)
	movq 16(%rbp),%rax
	movq %rax,-64(%r12)
	movq 24(%rbp),%rax
	movq %rax,-56(%r12)
	movq 32(%rbp),%rax
	movq %rax,-48(%r12)
	movq 40(%rbp),%rax
	movq %rax,-40(%r12)
	movq 48(%rbp),%rax
	movq %rax,-32(%r12)
	movq 56(%rbp),%rax
	movq %rax,-24(%r12)
	movq 64(%rbp),%rax
	movq %rax,-16(%r12)
	movq 72(%rbp),%rax
	movq %rax,-8(%r12)
	movq 80(%rbp),%rax
	movq %rax,(%r12)
	leaq -127(%r12),%rbx
	addq $88,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3amz:
	movq $136,904(%r13)
	movl $GHC.Float.C:RealFloat_closure,%ebx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.Float.C:RealFloat_entry, .-GHC.Float.C:RealFloat_entry


==================== Asm code ====================
2018-03-16 15:57:35.854911965 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.Float.C:RealFloat_info:
	.quad	GHC.Float.C:RealFloat_entry
	.quad	0
	.quad	14
	.quad	68719476736
	.quad	0
	.quad	16
	.quad	GHC.Float.C:RealFloat_slow


==================== Asm code ====================
2018-03-16 15:57:35.85665163 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.FFExponent_closure
.type GHC.Float.FFExponent_closure, @object
GHC.Float.FFExponent_closure:
	.quad	GHC.Float.FFExponent_con_info


==================== Asm code ====================
2018-03-16 15:57:35.858413288 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.FFFixed_closure
.type GHC.Float.FFFixed_closure, @object
GHC.Float.FFFixed_closure:
	.quad	GHC.Float.FFFixed_con_info


==================== Asm code ====================
2018-03-16 15:57:35.860701847 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.FFGeneric_closure
.type GHC.Float.FFGeneric_closure, @object
GHC.Float.FFGeneric_closure:
	.quad	GHC.Float.FFGeneric_con_info


==================== Asm code ====================
2018-03-16 15:57:35.865229732 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i33YT_str:
	.asciz "base:GHC.Float.C:Floating"


==================== Asm code ====================
2018-03-16 15:57:35.866430785 UTC

.section .text
.align 8
.globl GHC.Float.C:Floating_con_entry
.type GHC.Float.C:Floating_con_entry, @object
GHC.Float.C:Floating_con_entry:
_c3amV:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Float.C:Floating_con_entry, .-GHC.Float.C:Floating_con_entry


==================== Asm code ====================
2018-03-16 15:57:35.867172518 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.C:Floating_con_info
.type GHC.Float.C:Floating_con_info, @object
GHC.Float.C:Floating_con_info:
	.quad	GHC.Float.C:Floating_con_entry
	.quad	23
	.quad	1
	.quad	i33YT_str


==================== Asm code ====================
2018-03-16 15:57:35.870123096 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i33YV_str:
	.asciz "base:GHC.Float.C:RealFloat"


==================== Asm code ====================
2018-03-16 15:57:35.871008223 UTC

.section .text
.align 8
.globl GHC.Float.C:RealFloat_con_entry
.type GHC.Float.C:RealFloat_con_entry, @object
GHC.Float.C:RealFloat_con_entry:
_c3an1:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Float.C:RealFloat_con_entry, .-GHC.Float.C:RealFloat_con_entry


==================== Asm code ====================
2018-03-16 15:57:35.871804778 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.C:RealFloat_con_info
.type GHC.Float.C:RealFloat_con_info, @object
GHC.Float.C:RealFloat_con_info:
	.quad	GHC.Float.C:RealFloat_con_entry
	.quad	16
	.quad	1
	.quad	i33YV_str


==================== Asm code ====================
2018-03-16 15:57:35.874501547 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.FFFormat_closure_tbl
.type GHC.Float.FFFormat_closure_tbl, @object
GHC.Float.FFFormat_closure_tbl:
	.quad	GHC.Float.FFExponent_closure+1
	.quad	GHC.Float.FFFixed_closure+2
	.quad	GHC.Float.FFGeneric_closure+3


==================== Asm code ====================
2018-03-16 15:57:35.877599628 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i33YX_str:
	.asciz "base:GHC.Float.FFExponent"


==================== Asm code ====================
2018-03-16 15:57:35.878585333 UTC

.section .text
.align 8
.globl GHC.Float.FFExponent_con_entry
.type GHC.Float.FFExponent_con_entry, @object
GHC.Float.FFExponent_con_entry:
_c3an8:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Float.FFExponent_con_entry, .-GHC.Float.FFExponent_con_entry


==================== Asm code ====================
2018-03-16 15:57:35.879518295 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.FFExponent_con_info
.type GHC.Float.FFExponent_con_info, @object
GHC.Float.FFExponent_con_info:
	.quad	GHC.Float.FFExponent_con_entry
	.quad	4294967296
	.quad	3
	.quad	i33YX_str


==================== Asm code ====================
2018-03-16 15:57:35.882512838 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i33YZ_str:
	.asciz "base:GHC.Float.FFFixed"


==================== Asm code ====================
2018-03-16 15:57:35.883375886 UTC

.section .text
.align 8
.globl GHC.Float.FFFixed_con_entry
.type GHC.Float.FFFixed_con_entry, @object
GHC.Float.FFFixed_con_entry:
_c3ane:
	addq $2,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Float.FFFixed_con_entry, .-GHC.Float.FFFixed_con_entry


==================== Asm code ====================
2018-03-16 15:57:35.884226621 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.FFFixed_con_info
.type GHC.Float.FFFixed_con_info, @object
GHC.Float.FFFixed_con_info:
	.quad	GHC.Float.FFFixed_con_entry
	.quad	4294967296
	.quad	4294967299
	.quad	i33YZ_str


==================== Asm code ====================
2018-03-16 15:57:35.887291514 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i33Z1_str:
	.asciz "base:GHC.Float.FFGeneric"


==================== Asm code ====================
2018-03-16 15:57:35.888262549 UTC

.section .text
.align 8
.globl GHC.Float.FFGeneric_con_entry
.type GHC.Float.FFGeneric_con_entry, @object
GHC.Float.FFGeneric_con_entry:
_c3ank:
	addq $3,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Float.FFGeneric_con_entry, .-GHC.Float.FFGeneric_con_entry


==================== Asm code ====================
2018-03-16 15:57:35.889120597 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.FFGeneric_con_info
.type GHC.Float.FFGeneric_con_info, @object
GHC.Float.FFGeneric_con_info:
	.quad	GHC.Float.FFGeneric_con_entry
	.quad	4294967296
	.quad	8589934595
	.quad	i33Z1_str


==================== Asm code ====================
2018-03-16 15:57:35.896181838 UTC

.section .data.rel.ro
.align 8
.align 1
S2VLN_srt:
	.quad	sat_s2UFW_closure
	.quad	GHC.Integer.Type.plusInteger_closure
	.quad	GHC.Real.divZeroError_closure
	.quad	GHC.Float.rationalToDouble5_closure
	.quad	GHC.Float.$fRealDouble1_closure
	.quad	$w$j_r2Upx_closure
	.quad	GHC.Integer.Type.shiftRInteger_closure
	.quad	GHC.Integer.Logarithms.Internals.roundingMode#_closure
	.quad	GHC.Integer.Logarithms.Internals.integerLog2#_step_closure
	.quad	GHC.Integer.Logarithms.Internals.integerLog2IsPowerOf2#_couldBe_closure
	.quad	GHC.Float.$w$sfromRat''_closure
	.quad	GHC.Float.fromRat''_$sfromRat''1_closure
	.quad	GHC.Float.rationalToDouble_closure
	.quad	GHC.Float.rationalToDouble1_closure
	.quad	GHC.Float.rationalToDouble2_closure
	.quad	GHC.Float.rationalToDouble3_closure
	.quad	GHC.Float.$fFractionalDouble_$cfromRational_closure
	.quad	GHC.Float.$fFractionalDouble_closure
	.quad	GHC.Float.$fEnumDouble_$snumericEnumFromThen_closure
	.quad	GHC.Real.$wnumericEnumFrom_closure
	.quad	GHC.Float.$fEnumDouble_$snumericEnumFrom_closure
	.quad	$w$j1_r2Upy_closure
	.quad	GHC.Float.$w$sfromRat''1_closure
	.quad	GHC.Float.fromRat''_$sfromRat''_closure
	.quad	GHC.Float.rationalToFloat_closure
	.quad	GHC.Float.rationalToFloat1_closure
	.quad	GHC.Float.rationalToFloat2_closure
	.quad	GHC.Float.rationalToFloat3_closure
	.quad	GHC.Float.$fFractionalFloat_$cfromRational_closure
	.quad	GHC.Float.$fFractionalFloat_closure
	.quad	GHC.Float.$fEnumFloat_$snumericEnumFromThen_closure
	.quad	GHC.Float.$fEnumFloat_$snumericEnumFrom_closure
	.quad	sat_s2UN1_closure
	.quad	GHC.Float.$fRealFloatDouble5_closure
	.quad	GHC.Real.^_closure
	.quad	GHC.Real.$fIntegralInt_closure
	.quad	GHC.Float.$w$cproperFraction1_closure
	.quad	GHC.Float.$fRealFracFloat_$cproperFraction_closure
	.quad	GHC.Float.$fRealFracFloat_$ctruncate_closure
	.quad	GHC.Float.$fRealDouble1_closure
	.quad	GHC.Float.$fRealFracFloat_$cceiling_closure
	.quad	GHC.Float.$fRealFracFloat_$cfloor_closure
	.quad	GHC.Real.even_closure
	.quad	GHC.Float.$w$cround1_closure
	.quad	GHC.Float.$fRealFracFloat_$cround_closure
	.quad	GHC.Float.ConversionUtils.elimZerosInt#_closure
	.quad	GHC.Float.$w$ctoRational1_closure
	.quad	GHC.Float.$fRealFloat_$ctoRational_closure
	.quad	GHC.Integer.Type.decodeDoubleInteger_closure
	.quad	GHC.Float.$w$ctoRational_closure
	.quad	GHC.Float.$fRealDouble_$ctoRational_closure
	.quad	GHC.Float.$w$cexponent1_closure
	.quad	GHC.Float.rationalToDouble5_closure
	.quad	GHC.Float.$fRealFloatFloat_$cexponent_closure
	.quad	GHC.Float.$fRealFloatDouble_$cdecodeFloat_closure
	.quad	GHC.Real.$fEnumRatio1_closure
	.quad	GHC.Real.^1_closure
	.quad	GHC.Real.$wf_closure
	.quad	GHC.Float.$w$cproperFraction_closure
	.quad	GHC.Real.divZeroError_closure
	.quad	GHC.Float.$fRealFracDouble_$cproperFraction_closure
	.quad	GHC.Float.$fRealFracDouble_$ctruncate_closure
	.quad	GHC.Float.$fRealFracDouble_$cceiling_closure
	.quad	GHC.Float.$fRealFracDouble_$cfloor_closure
	.quad	GHC.Float.$w$cexponent_closure
	.quad	GHC.Float.$fRealFloatDouble_$cexponent_closure
	.quad	GHC.Float.$fRealFloatDouble_$csignificand_closure
	.quad	GHC.Float.$w$cround_closure
	.quad	GHC.Float.$fRealFracDouble_$cround_closure
	.quad	GHC.Float.$fRealFloatDouble5_closure
	.quad	GHC.Float.$dmatan2_closure
	.quad	GHC.Float.$dmexpm1_closure
	.quad	GHC.Float.$fRealDouble1_closure
	.quad	GHC.Float.$dmlog1p_closure
	.quad	lvl1_r2Upz_closure
	.quad	GHC.Float.$dmsqrt_closure
	.quad	GHC.Err.errorWithoutStackTrace_closure
	.quad	GHC.Float.$wroundTo_closure
	.quad	GHC.Float.roundTo1_closure
	.quad	GHC.Float.roundTo_closure
	.quad	GHC.Float.$w$cscaleFloat_closure
	.quad	GHC.Integer.Type.decodeDoubleInteger_closure
	.quad	GHC.Float.$fRealFloatDouble_$cscaleFloat_closure
	.quad	GHC.Float.$fFloatingDouble_$clog1mexp_closure
	.quad	lvl4_r2UqC_closure
	.quad	GHC.Float.$fFloatingFloat_$clog1mexp_closure
	.quad	lvl5_r2UqD_closure
	.quad	GHC.Arr.$windexError_closure
	.quad	GHC.Float.expts2_closure
	.quad	lvl7_r2UqF_closure
	.quad	GHC.Arr.arrEleBottom_closure
	.quad	GHC.Float.expts1_closure
	.quad	sat_s2V3Q_closure
	.quad	GHC.Float.expts5_closure
	.quad	GHC.Float.expts4_closure
	.quad	GHC.Real.$wf_closure
	.quad	GHC.Real.^1_closure
	.quad	GHC.Real.$fEnumRatio1_closure
	.quad	GHC.Float.expts3_closure
	.quad	GHC.Integer.Logarithms.integerLogBase#_closure
	.quad	GHC.Float.$wintegerLogBase_closure
	.quad	GHC.Integer.Logarithms.Internals.integerLog2#_step_closure
	.quad	GHC.Float.integerLogBase_closure
	.quad	GHC.Float.$dmexponent_closure
	.quad	GHC.Float.rationalToDouble5_closure
	.quad	GHC.Float.showSignedFloat_closure
	.quad	GHC.Float.$dmscaleFloat_closure
	.quad	GHC.Integer.Type.shiftRInteger_closure
	.quad	GHC.Float.$fRealDouble1_closure
	.quad	GHC.Real.divZeroError_closure
	.quad	GHC.Integer.Type.plusInteger_closure
	.quad	GHC.Float.$wfromRat''_closure
	.quad	GHC.Float.fromRat''_closure
	.quad	GHC.Float.$w$cfromEnum_closure
	.quad	GHC.Float.$fEnumDouble_$cfromEnum_closure
	.quad	GHC.Real.numericEnumFromTo_closure
	.quad	GHC.Float.$fFractionalDouble_closure
	.quad	GHC.Real.numericEnumFromThenTo_closure
	.quad	GHC.Float.expts_closure
	.quad	GHC.Float.expts10_closure
	.quad	GHC.Float.$wexpt_closure
	.quad	GHC.Float.expt1_closure
	.quad	GHC.Float.expt_closure
	.quad	GHC.Real.$fIntegralInteger_closure
	.quad	GHC.Real.$w$s$cround_closure
	.quad	GHC.Real.$w$s$c/_closure
	.quad	GHC.Real.$w$s$ccompare_closure
	.quad	GHC.Float.fromRat'_closure
	.quad	GHC.Float.$wfromRat_closure
	.quad	GHC.Float.fromRat_closure
	.quad	sat_s2Vej_closure
	.quad	GHC.Integer.Type.timesInteger_closure
	.quad	lvl9_r2UqH_closure
	.quad	lvl10_r2UqI_closure
	.quad	GHC.Float.$w$sfloatToDigits1_closure
	.quad	GHC.Integer.Type.decodeDoubleInteger_closure
	.quad	lvl11_r2UqJ_closure
	.quad	GHC.Float.$w$sfloatToDigits_closure
	.quad	GHC.Float.rationalToDouble5_closure
	.quad	GHC.Float.$wfloatToDigits_closure
	.quad	GHC.Float.floatToDigits_closure
	.quad	GHC.Err.errorWithoutStackTrace_closure
	.quad	Control.Exception.Base.patError_closure
	.quad	lvl23_r2UqW_closure
	.quad	$wf_r2UqX_closure
	.quad	$wxs1_r2Ura_closure
	.quad	lvl35_r2Ur9_closure
	.quad	GHC.Show.intToDigit_closure
	.quad	lvl25_r2UqZ_closure
	.quad	$j_r2Urc_closure
	.quad	GHC.Float.$wroundTo_closure
	.quad	GHC.List.init2_closure
	.quad	lvl18_r2UqR_closure
	.quad	lvl34_r2Ur8_closure
	.quad	lvl13_r2UqM_closure
	.quad	lvl16_r2UqP_closure
	.quad	GHC.Float.$w$sformatRealFloatAlt1_closure
	.quad	lvl27_r2Ur1_closure
	.quad	lvl29_r2Ur3_closure
	.quad	lvl31_r2Ur5_closure
	.quad	GHC.Float.$fShowFloat_$sformatRealFloatAlt_closure
	.quad	$wxs2_r2Ure_closure
	.quad	GHC.Float.$w$sformatRealFloatAlt_closure
	.quad	GHC.Float.$fShowDouble_$sformatRealFloatAlt_closure
	.quad	$wxs3_r2Urf_closure
	.quad	GHC.Float.formatRealFloatAlt_closure
	.quad	GHC.Float.showFloat_closure
	.quad	GHC.Float.$fShowDouble2_closure
	.quad	GHC.Float.$fShowDouble_$cshowsPrec_closure
	.quad	GHC.Float.$fShowDouble_$cshow_closure
	.quad	GHC.Float.$fShowDouble1_closure
	.quad	GHC.Float.$fShowFloat2_closure
	.quad	GHC.Float.$fShowFloat_$cshowsPrec_closure
	.quad	GHC.Float.$fShowFloat_$cshow_closure
	.quad	GHC.Float.$fShowFloat1_closure


==================== Asm code ====================
2018-03-16 15:57:51.228189536 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$p1Floating_closure
.type GHC.Float.$p1Floating_closure, @object
GHC.Float.$p1Floating_closure:
	.quad	GHC.Float.$p1Floating_info


==================== Asm code ====================
2018-03-16 15:57:51.229046265 UTC

.section .text
.align 8
.globl GHC.Float.$p1Floating_entry
.type GHC.Float.$p1Floating_entry, @object
GHC.Float.$p1Floating_entry:
_c3bvH:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bvI
_c3bvJ:
	leaq block_c3bvE_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3bvE
_c3bvF:
	movq (%rbx),%rax
	jmp *(%rax)
_c3bvI:
	leaq GHC.Float.$p1Floating_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$p1Floating_entry, .-GHC.Float.$p1Floating_entry


==================== Asm code ====================
2018-03-16 15:57:51.229764275 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$p1Floating_info
.type GHC.Float.$p1Floating_info, @object
GHC.Float.$p1Floating_info:
	.quad	GHC.Float.$p1Floating_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:51.230350124 UTC

.section .text
.align 8
_c3bvE:
_c3bvE:
	movq 7(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3bvE, .-_c3bvE


==================== Asm code ====================
2018-03-16 15:57:51.230912195 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bvE_info:
	.quad	_c3bvE
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.233758983 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.pi_closure
.type GHC.Float.pi_closure, @object
GHC.Float.pi_closure:
	.quad	GHC.Float.pi_info


==================== Asm code ====================
2018-03-16 15:57:51.234589424 UTC

.section .text
.align 8
.globl GHC.Float.pi_entry
.type GHC.Float.pi_entry, @object
GHC.Float.pi_entry:
_c3bw7:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bw8
_c3bw9:
	leaq block_c3bw4_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3bw4
_c3bw5:
	movq (%rbx),%rax
	jmp *(%rax)
_c3bw8:
	leaq GHC.Float.pi_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.pi_entry, .-GHC.Float.pi_entry


==================== Asm code ====================
2018-03-16 15:57:51.235224736 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.pi_info
.type GHC.Float.pi_info, @object
GHC.Float.pi_info:
	.quad	GHC.Float.pi_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:51.235794487 UTC

.section .text
.align 8
_c3bw4:
_c3bw4:
	movq 15(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c3bw4, .-_c3bw4


==================== Asm code ====================
2018-03-16 15:57:51.236353305 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bw4_info:
	.quad	_c3bw4
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.239139174 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.exp_closure
.type GHC.Float.exp_closure, @object
GHC.Float.exp_closure:
	.quad	GHC.Float.exp_info


==================== Asm code ====================
2018-03-16 15:57:51.239951101 UTC

.section .text
.align 8
.globl GHC.Float.exp_entry
.type GHC.Float.exp_entry, @object
GHC.Float.exp_entry:
_c3bwv:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bww
_c3bwx:
	leaq block_c3bws_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3bws
_c3bwt:
	movq (%rbx),%rax
	jmp *(%rax)
_c3bww:
	leaq GHC.Float.exp_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.exp_entry, .-GHC.Float.exp_entry


==================== Asm code ====================
2018-03-16 15:57:51.240638761 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.exp_info
.type GHC.Float.exp_info, @object
GHC.Float.exp_info:
	.quad	GHC.Float.exp_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:51.241298637 UTC

.section .text
.align 8
_c3bws:
_c3bws:
	movq 23(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c3bws, .-_c3bws


==================== Asm code ====================
2018-03-16 15:57:51.241992281 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bws_info:
	.quad	_c3bws
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.244805788 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.log_closure
.type GHC.Float.log_closure, @object
GHC.Float.log_closure:
	.quad	GHC.Float.log_info


==================== Asm code ====================
2018-03-16 15:57:51.24569851 UTC

.section .text
.align 8
.globl GHC.Float.log_entry
.type GHC.Float.log_entry, @object
GHC.Float.log_entry:
_c3bwT:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bwU
_c3bwV:
	leaq block_c3bwQ_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3bwQ
_c3bwR:
	movq (%rbx),%rax
	jmp *(%rax)
_c3bwU:
	leaq GHC.Float.log_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.log_entry, .-GHC.Float.log_entry


==================== Asm code ====================
2018-03-16 15:57:51.246342604 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.log_info
.type GHC.Float.log_info, @object
GHC.Float.log_info:
	.quad	GHC.Float.log_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:51.246978135 UTC

.section .text
.align 8
_c3bwQ:
_c3bwQ:
	movq 31(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c3bwQ, .-_c3bwQ


==================== Asm code ====================
2018-03-16 15:57:51.247542218 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bwQ_info:
	.quad	_c3bwQ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.251048871 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.sqrt_closure
.type GHC.Float.sqrt_closure, @object
GHC.Float.sqrt_closure:
	.quad	GHC.Float.sqrt_info


==================== Asm code ====================
2018-03-16 15:57:51.252276833 UTC

.section .text
.align 8
.globl GHC.Float.sqrt_entry
.type GHC.Float.sqrt_entry, @object
GHC.Float.sqrt_entry:
_c3bxh:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bxi
_c3bxj:
	leaq block_c3bxe_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3bxe
_c3bxf:
	movq (%rbx),%rax
	jmp *(%rax)
_c3bxi:
	leaq GHC.Float.sqrt_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.sqrt_entry, .-GHC.Float.sqrt_entry


==================== Asm code ====================
2018-03-16 15:57:51.253344406 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.sqrt_info
.type GHC.Float.sqrt_info, @object
GHC.Float.sqrt_info:
	.quad	GHC.Float.sqrt_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:51.254305619 UTC

.section .text
.align 8
_c3bxe:
_c3bxe:
	movq 39(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c3bxe, .-_c3bxe


==================== Asm code ====================
2018-03-16 15:57:51.255150878 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bxe_info:
	.quad	_c3bxe
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.259686119 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.**_closure
.type GHC.Float.**_closure, @object
GHC.Float.**_closure:
	.quad	GHC.Float.**_info


==================== Asm code ====================
2018-03-16 15:57:51.261010284 UTC

.section .text
.align 8
.globl GHC.Float.**_entry
.type GHC.Float.**_entry, @object
GHC.Float.**_entry:
_c3bxF:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bxG
_c3bxH:
	leaq block_c3bxC_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3bxC
_c3bxD:
	movq (%rbx),%rax
	jmp *(%rax)
_c3bxG:
	leaq GHC.Float.**_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.**_entry, .-GHC.Float.**_entry


==================== Asm code ====================
2018-03-16 15:57:51.281078017 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.**_info
.type GHC.Float.**_info, @object
GHC.Float.**_info:
	.quad	GHC.Float.**_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:51.282223748 UTC

.section .text
.align 8
_c3bxC:
_c3bxC:
	movq 47(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c3bxC, .-_c3bxC


==================== Asm code ====================
2018-03-16 15:57:51.28307487 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bxC_info:
	.quad	_c3bxC
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.287575196 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.logBase_closure
.type GHC.Float.logBase_closure, @object
GHC.Float.logBase_closure:
	.quad	GHC.Float.logBase_info


==================== Asm code ====================
2018-03-16 15:57:51.28878893 UTC

.section .text
.align 8
.globl GHC.Float.logBase_entry
.type GHC.Float.logBase_entry, @object
GHC.Float.logBase_entry:
_c3by3:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3by4
_c3by5:
	leaq block_c3by0_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3by0
_c3by1:
	movq (%rbx),%rax
	jmp *(%rax)
_c3by4:
	leaq GHC.Float.logBase_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.logBase_entry, .-GHC.Float.logBase_entry


==================== Asm code ====================
2018-03-16 15:57:51.289606205 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.logBase_info
.type GHC.Float.logBase_info, @object
GHC.Float.logBase_info:
	.quad	GHC.Float.logBase_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:51.290265933 UTC

.section .text
.align 8
_c3by0:
_c3by0:
	movq 55(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c3by0, .-_c3by0


==================== Asm code ====================
2018-03-16 15:57:51.290788765 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3by0_info:
	.quad	_c3by0
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.293601973 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.sin_closure
.type GHC.Float.sin_closure, @object
GHC.Float.sin_closure:
	.quad	GHC.Float.sin_info


==================== Asm code ====================
2018-03-16 15:57:51.294413761 UTC

.section .text
.align 8
.globl GHC.Float.sin_entry
.type GHC.Float.sin_entry, @object
GHC.Float.sin_entry:
_c3byr:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bys
_c3byt:
	leaq block_c3byo_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3byo
_c3byp:
	movq (%rbx),%rax
	jmp *(%rax)
_c3bys:
	leaq GHC.Float.sin_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.sin_entry, .-GHC.Float.sin_entry


==================== Asm code ====================
2018-03-16 15:57:51.295074952 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.sin_info
.type GHC.Float.sin_info, @object
GHC.Float.sin_info:
	.quad	GHC.Float.sin_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:51.295664826 UTC

.section .text
.align 8
_c3byo:
_c3byo:
	movq 63(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c3byo, .-_c3byo


==================== Asm code ====================
2018-03-16 15:57:51.296245409 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3byo_info:
	.quad	_c3byo
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.299135287 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.cos_closure
.type GHC.Float.cos_closure, @object
GHC.Float.cos_closure:
	.quad	GHC.Float.cos_info


==================== Asm code ====================
2018-03-16 15:57:51.299927002 UTC

.section .text
.align 8
.globl GHC.Float.cos_entry
.type GHC.Float.cos_entry, @object
GHC.Float.cos_entry:
_c3byP:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3byQ
_c3byR:
	leaq block_c3byM_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3byM
_c3byN:
	movq (%rbx),%rax
	jmp *(%rax)
_c3byQ:
	leaq GHC.Float.cos_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.cos_entry, .-GHC.Float.cos_entry


==================== Asm code ====================
2018-03-16 15:57:51.300598896 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.cos_info
.type GHC.Float.cos_info, @object
GHC.Float.cos_info:
	.quad	GHC.Float.cos_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:51.301219858 UTC

.section .text
.align 8
_c3byM:
_c3byM:
	movq 71(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c3byM, .-_c3byM


==================== Asm code ====================
2018-03-16 15:57:51.30183294 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3byM_info:
	.quad	_c3byM
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.304565769 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.tan_closure
.type GHC.Float.tan_closure, @object
GHC.Float.tan_closure:
	.quad	GHC.Float.tan_info


==================== Asm code ====================
2018-03-16 15:57:51.30538388 UTC

.section .text
.align 8
.globl GHC.Float.tan_entry
.type GHC.Float.tan_entry, @object
GHC.Float.tan_entry:
_c3bzd:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bze
_c3bzf:
	leaq block_c3bza_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3bza
_c3bzb:
	movq (%rbx),%rax
	jmp *(%rax)
_c3bze:
	leaq GHC.Float.tan_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.tan_entry, .-GHC.Float.tan_entry


==================== Asm code ====================
2018-03-16 15:57:51.305998466 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.tan_info
.type GHC.Float.tan_info, @object
GHC.Float.tan_info:
	.quad	GHC.Float.tan_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:51.306629668 UTC

.section .text
.align 8
_c3bza:
_c3bza:
	movq 79(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c3bza, .-_c3bza


==================== Asm code ====================
2018-03-16 15:57:51.307193207 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bza_info:
	.quad	_c3bza
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.310027747 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.asin_closure
.type GHC.Float.asin_closure, @object
GHC.Float.asin_closure:
	.quad	GHC.Float.asin_info


==================== Asm code ====================
2018-03-16 15:57:51.310790857 UTC

.section .text
.align 8
.globl GHC.Float.asin_entry
.type GHC.Float.asin_entry, @object
GHC.Float.asin_entry:
_c3bzB:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bzC
_c3bzD:
	leaq block_c3bzy_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3bzy
_c3bzz:
	movq (%rbx),%rax
	jmp *(%rax)
_c3bzC:
	leaq GHC.Float.asin_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.asin_entry, .-GHC.Float.asin_entry


==================== Asm code ====================
2018-03-16 15:57:51.311428723 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.asin_info
.type GHC.Float.asin_info, @object
GHC.Float.asin_info:
	.quad	GHC.Float.asin_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:51.312071161 UTC

.section .text
.align 8
_c3bzy:
_c3bzy:
	movq 87(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c3bzy, .-_c3bzy


==================== Asm code ====================
2018-03-16 15:57:51.312654995 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bzy_info:
	.quad	_c3bzy
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.315538399 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.acos_closure
.type GHC.Float.acos_closure, @object
GHC.Float.acos_closure:
	.quad	GHC.Float.acos_info


==================== Asm code ====================
2018-03-16 15:57:51.316319261 UTC

.section .text
.align 8
.globl GHC.Float.acos_entry
.type GHC.Float.acos_entry, @object
GHC.Float.acos_entry:
_c3bzZ:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bA0
_c3bA1:
	leaq block_c3bzW_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3bzW
_c3bzX:
	movq (%rbx),%rax
	jmp *(%rax)
_c3bA0:
	leaq GHC.Float.acos_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.acos_entry, .-GHC.Float.acos_entry


==================== Asm code ====================
2018-03-16 15:57:51.317481168 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.acos_info
.type GHC.Float.acos_info, @object
GHC.Float.acos_info:
	.quad	GHC.Float.acos_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:51.318102382 UTC

.section .text
.align 8
_c3bzW:
_c3bzW:
	movq 95(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c3bzW, .-_c3bzW


==================== Asm code ====================
2018-03-16 15:57:51.31867668 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bzW_info:
	.quad	_c3bzW
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.321467367 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.atan_closure
.type GHC.Float.atan_closure, @object
GHC.Float.atan_closure:
	.quad	GHC.Float.atan_info


==================== Asm code ====================
2018-03-16 15:57:51.322258389 UTC

.section .text
.align 8
.globl GHC.Float.atan_entry
.type GHC.Float.atan_entry, @object
GHC.Float.atan_entry:
_c3bAn:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bAo
_c3bAp:
	leaq block_c3bAk_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3bAk
_c3bAl:
	movq (%rbx),%rax
	jmp *(%rax)
_c3bAo:
	leaq GHC.Float.atan_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.atan_entry, .-GHC.Float.atan_entry


==================== Asm code ====================
2018-03-16 15:57:51.322917587 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.atan_info
.type GHC.Float.atan_info, @object
GHC.Float.atan_info:
	.quad	GHC.Float.atan_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:51.323567203 UTC

.section .text
.align 8
_c3bAk:
_c3bAk:
	movq 103(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c3bAk, .-_c3bAk


==================== Asm code ====================
2018-03-16 15:57:51.324123132 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bAk_info:
	.quad	_c3bAk
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.32782746 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.sinh_closure
.type GHC.Float.sinh_closure, @object
GHC.Float.sinh_closure:
	.quad	GHC.Float.sinh_info


==================== Asm code ====================
2018-03-16 15:57:51.328983944 UTC

.section .text
.align 8
.globl GHC.Float.sinh_entry
.type GHC.Float.sinh_entry, @object
GHC.Float.sinh_entry:
_c3bAL:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bAM
_c3bAN:
	leaq block_c3bAI_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3bAI
_c3bAJ:
	movq (%rbx),%rax
	jmp *(%rax)
_c3bAM:
	leaq GHC.Float.sinh_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.sinh_entry, .-GHC.Float.sinh_entry


==================== Asm code ====================
2018-03-16 15:57:51.3300688 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.sinh_info
.type GHC.Float.sinh_info, @object
GHC.Float.sinh_info:
	.quad	GHC.Float.sinh_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:51.330946348 UTC

.section .text
.align 8
_c3bAI:
_c3bAI:
	movq 111(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c3bAI, .-_c3bAI


==================== Asm code ====================
2018-03-16 15:57:51.331760971 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bAI_info:
	.quad	_c3bAI
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.336434097 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.cosh_closure
.type GHC.Float.cosh_closure, @object
GHC.Float.cosh_closure:
	.quad	GHC.Float.cosh_info


==================== Asm code ====================
2018-03-16 15:57:51.337655448 UTC

.section .text
.align 8
.globl GHC.Float.cosh_entry
.type GHC.Float.cosh_entry, @object
GHC.Float.cosh_entry:
_c3bB9:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bBa
_c3bBb:
	leaq block_c3bB6_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3bB6
_c3bB7:
	movq (%rbx),%rax
	jmp *(%rax)
_c3bBa:
	leaq GHC.Float.cosh_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.cosh_entry, .-GHC.Float.cosh_entry


==================== Asm code ====================
2018-03-16 15:57:51.338616511 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.cosh_info
.type GHC.Float.cosh_info, @object
GHC.Float.cosh_info:
	.quad	GHC.Float.cosh_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:51.339586104 UTC

.section .text
.align 8
_c3bB6:
_c3bB6:
	movq 119(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c3bB6, .-_c3bB6


==================== Asm code ====================
2018-03-16 15:57:51.34040451 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bB6_info:
	.quad	_c3bB6
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.344218175 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.tanh_closure
.type GHC.Float.tanh_closure, @object
GHC.Float.tanh_closure:
	.quad	GHC.Float.tanh_info


==================== Asm code ====================
2018-03-16 15:57:51.345224399 UTC

.section .text
.align 8
.globl GHC.Float.tanh_entry
.type GHC.Float.tanh_entry, @object
GHC.Float.tanh_entry:
_c3bBx:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bBy
_c3bBz:
	leaq block_c3bBu_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3bBu
_c3bBv:
	movq (%rbx),%rax
	jmp *(%rax)
_c3bBy:
	leaq GHC.Float.tanh_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.tanh_entry, .-GHC.Float.tanh_entry


==================== Asm code ====================
2018-03-16 15:57:51.346151702 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.tanh_info
.type GHC.Float.tanh_info, @object
GHC.Float.tanh_info:
	.quad	GHC.Float.tanh_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:51.346936055 UTC

.section .text
.align 8
_c3bBu:
_c3bBu:
	movq 127(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c3bBu, .-_c3bBu


==================== Asm code ====================
2018-03-16 15:57:51.347686523 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bBu_info:
	.quad	_c3bBu
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.351346355 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.asinh_closure
.type GHC.Float.asinh_closure, @object
GHC.Float.asinh_closure:
	.quad	GHC.Float.asinh_info


==================== Asm code ====================
2018-03-16 15:57:51.352363324 UTC

.section .text
.align 8
.globl GHC.Float.asinh_entry
.type GHC.Float.asinh_entry, @object
GHC.Float.asinh_entry:
_c3bBV:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bBW
_c3bBX:
	leaq block_c3bBS_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3bBS
_c3bBT:
	movq (%rbx),%rax
	jmp *(%rax)
_c3bBW:
	leaq GHC.Float.asinh_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.asinh_entry, .-GHC.Float.asinh_entry


==================== Asm code ====================
2018-03-16 15:57:51.353456724 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.asinh_info
.type GHC.Float.asinh_info, @object
GHC.Float.asinh_info:
	.quad	GHC.Float.asinh_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:51.35427036 UTC

.section .text
.align 8
_c3bBS:
_c3bBS:
	movq 135(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c3bBS, .-_c3bBS


==================== Asm code ====================
2018-03-16 15:57:51.355052475 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bBS_info:
	.quad	_c3bBS
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.358791589 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.acosh_closure
.type GHC.Float.acosh_closure, @object
GHC.Float.acosh_closure:
	.quad	GHC.Float.acosh_info


==================== Asm code ====================
2018-03-16 15:57:51.35984588 UTC

.section .text
.align 8
.globl GHC.Float.acosh_entry
.type GHC.Float.acosh_entry, @object
GHC.Float.acosh_entry:
_c3bCj:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bCk
_c3bCl:
	leaq block_c3bCg_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3bCg
_c3bCh:
	movq (%rbx),%rax
	jmp *(%rax)
_c3bCk:
	leaq GHC.Float.acosh_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.acosh_entry, .-GHC.Float.acosh_entry


==================== Asm code ====================
2018-03-16 15:57:51.360752711 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.acosh_info
.type GHC.Float.acosh_info, @object
GHC.Float.acosh_info:
	.quad	GHC.Float.acosh_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:51.362205655 UTC

.section .text
.align 8
_c3bCg:
_c3bCg:
	movq 143(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c3bCg, .-_c3bCg


==================== Asm code ====================
2018-03-16 15:57:51.363068282 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bCg_info:
	.quad	_c3bCg
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.365949689 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.atanh_closure
.type GHC.Float.atanh_closure, @object
GHC.Float.atanh_closure:
	.quad	GHC.Float.atanh_info


==================== Asm code ====================
2018-03-16 15:57:51.366765547 UTC

.section .text
.align 8
.globl GHC.Float.atanh_entry
.type GHC.Float.atanh_entry, @object
GHC.Float.atanh_entry:
_c3bCH:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bCI
_c3bCJ:
	leaq block_c3bCE_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3bCE
_c3bCF:
	movq (%rbx),%rax
	jmp *(%rax)
_c3bCI:
	leaq GHC.Float.atanh_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.atanh_entry, .-GHC.Float.atanh_entry


==================== Asm code ====================
2018-03-16 15:57:51.367461476 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.atanh_info
.type GHC.Float.atanh_info, @object
GHC.Float.atanh_info:
	.quad	GHC.Float.atanh_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:51.3680917 UTC

.section .text
.align 8
_c3bCE:
_c3bCE:
	movq 151(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c3bCE, .-_c3bCE


==================== Asm code ====================
2018-03-16 15:57:51.368650076 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bCE_info:
	.quad	_c3bCE
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.371577392 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.log1p_closure
.type GHC.Float.log1p_closure, @object
GHC.Float.log1p_closure:
	.quad	GHC.Float.log1p_info


==================== Asm code ====================
2018-03-16 15:57:51.372373795 UTC

.section .text
.align 8
.globl GHC.Float.log1p_entry
.type GHC.Float.log1p_entry, @object
GHC.Float.log1p_entry:
_c3bD5:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bD6
_c3bD7:
	leaq block_c3bD2_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3bD2
_c3bD3:
	movq (%rbx),%rax
	jmp *(%rax)
_c3bD6:
	leaq GHC.Float.log1p_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.log1p_entry, .-GHC.Float.log1p_entry


==================== Asm code ====================
2018-03-16 15:57:51.373087901 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.log1p_info
.type GHC.Float.log1p_info, @object
GHC.Float.log1p_info:
	.quad	GHC.Float.log1p_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:51.373834051 UTC

.section .text
.align 8
_c3bD2:
_c3bD2:
	movq 159(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c3bD2, .-_c3bD2


==================== Asm code ====================
2018-03-16 15:57:51.37439075 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bD2_info:
	.quad	_c3bD2
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.37718569 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.expm1_closure
.type GHC.Float.expm1_closure, @object
GHC.Float.expm1_closure:
	.quad	GHC.Float.expm1_info


==================== Asm code ====================
2018-03-16 15:57:51.378049185 UTC

.section .text
.align 8
.globl GHC.Float.expm1_entry
.type GHC.Float.expm1_entry, @object
GHC.Float.expm1_entry:
_c3bDt:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bDu
_c3bDv:
	leaq block_c3bDq_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3bDq
_c3bDr:
	movq (%rbx),%rax
	jmp *(%rax)
_c3bDu:
	leaq GHC.Float.expm1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.expm1_entry, .-GHC.Float.expm1_entry


==================== Asm code ====================
2018-03-16 15:57:51.378711056 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.expm1_info
.type GHC.Float.expm1_info, @object
GHC.Float.expm1_info:
	.quad	GHC.Float.expm1_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:51.37954721 UTC

.section .text
.align 8
_c3bDq:
_c3bDq:
	movq 167(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c3bDq, .-_c3bDq


==================== Asm code ====================
2018-03-16 15:57:51.380439833 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bDq_info:
	.quad	_c3bDq
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.383846408 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.log1pexp_closure
.type GHC.Float.log1pexp_closure, @object
GHC.Float.log1pexp_closure:
	.quad	GHC.Float.log1pexp_info


==================== Asm code ====================
2018-03-16 15:57:51.384679936 UTC

.section .text
.align 8
.globl GHC.Float.log1pexp_entry
.type GHC.Float.log1pexp_entry, @object
GHC.Float.log1pexp_entry:
_c3bDR:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bDS
_c3bDT:
	leaq block_c3bDO_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3bDO
_c3bDP:
	movq (%rbx),%rax
	jmp *(%rax)
_c3bDS:
	leaq GHC.Float.log1pexp_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.log1pexp_entry, .-GHC.Float.log1pexp_entry


==================== Asm code ====================
2018-03-16 15:57:51.385313708 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.log1pexp_info
.type GHC.Float.log1pexp_info, @object
GHC.Float.log1pexp_info:
	.quad	GHC.Float.log1pexp_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:51.385932254 UTC

.section .text
.align 8
_c3bDO:
_c3bDO:
	movq 175(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c3bDO, .-_c3bDO


==================== Asm code ====================
2018-03-16 15:57:51.386472737 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bDO_info:
	.quad	_c3bDO
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.389373633 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.log1mexp_closure
.type GHC.Float.log1mexp_closure, @object
GHC.Float.log1mexp_closure:
	.quad	GHC.Float.log1mexp_info


==================== Asm code ====================
2018-03-16 15:57:51.390293374 UTC

.section .text
.align 8
.globl GHC.Float.log1mexp_entry
.type GHC.Float.log1mexp_entry, @object
GHC.Float.log1mexp_entry:
_c3bEf:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bEg
_c3bEh:
	leaq block_c3bEc_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3bEc
_c3bEd:
	movq (%rbx),%rax
	jmp *(%rax)
_c3bEg:
	leaq GHC.Float.log1mexp_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.log1mexp_entry, .-GHC.Float.log1mexp_entry


==================== Asm code ====================
2018-03-16 15:57:51.391028567 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.log1mexp_info
.type GHC.Float.log1mexp_info, @object
GHC.Float.log1mexp_info:
	.quad	GHC.Float.log1mexp_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:51.391716661 UTC

.section .text
.align 8
_c3bEc:
_c3bEc:
	movq 183(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c3bEc, .-_c3bEc


==================== Asm code ====================
2018-03-16 15:57:51.392293122 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bEc_info:
	.quad	_c3bEc
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.395168985 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$p1RealFloat_closure
.type GHC.Float.$p1RealFloat_closure, @object
GHC.Float.$p1RealFloat_closure:
	.quad	GHC.Float.$p1RealFloat_info


==================== Asm code ====================
2018-03-16 15:57:51.39591363 UTC

.section .text
.align 8
.globl GHC.Float.$p1RealFloat_entry
.type GHC.Float.$p1RealFloat_entry, @object
GHC.Float.$p1RealFloat_entry:
_c3bED:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bEE
_c3bEF:
	leaq block_c3bEA_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3bEA
_c3bEB:
	movq (%rbx),%rax
	jmp *(%rax)
_c3bEE:
	leaq GHC.Float.$p1RealFloat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$p1RealFloat_entry, .-GHC.Float.$p1RealFloat_entry


==================== Asm code ====================
2018-03-16 15:57:51.396543602 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$p1RealFloat_info
.type GHC.Float.$p1RealFloat_info, @object
GHC.Float.$p1RealFloat_info:
	.quad	GHC.Float.$p1RealFloat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:51.397195158 UTC

.section .text
.align 8
_c3bEA:
_c3bEA:
	movq 7(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3bEA, .-_c3bEA


==================== Asm code ====================
2018-03-16 15:57:51.39849998 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bEA_info:
	.quad	_c3bEA
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.401346797 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$p2RealFloat_closure
.type GHC.Float.$p2RealFloat_closure, @object
GHC.Float.$p2RealFloat_closure:
	.quad	GHC.Float.$p2RealFloat_info


==================== Asm code ====================
2018-03-16 15:57:51.402106098 UTC

.section .text
.align 8
.globl GHC.Float.$p2RealFloat_entry
.type GHC.Float.$p2RealFloat_entry, @object
GHC.Float.$p2RealFloat_entry:
_c3bF3:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bF4
_c3bF5:
	leaq block_c3bF0_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3bF0
_c3bF1:
	movq (%rbx),%rax
	jmp *(%rax)
_c3bF4:
	leaq GHC.Float.$p2RealFloat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$p2RealFloat_entry, .-GHC.Float.$p2RealFloat_entry


==================== Asm code ====================
2018-03-16 15:57:51.402744537 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$p2RealFloat_info
.type GHC.Float.$p2RealFloat_info, @object
GHC.Float.$p2RealFloat_info:
	.quad	GHC.Float.$p2RealFloat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:51.403445776 UTC

.section .text
.align 8
_c3bF0:
_c3bF0:
	movq 15(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3bF0, .-_c3bF0


==================== Asm code ====================
2018-03-16 15:57:51.403979176 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bF0_info:
	.quad	_c3bF0
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.407586848 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.floatRadix_closure
.type GHC.Float.floatRadix_closure, @object
GHC.Float.floatRadix_closure:
	.quad	GHC.Float.floatRadix_info


==================== Asm code ====================
2018-03-16 15:57:51.408358993 UTC

.section .text
.align 8
.globl GHC.Float.floatRadix_entry
.type GHC.Float.floatRadix_entry, @object
GHC.Float.floatRadix_entry:
_c3bFt:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bFu
_c3bFv:
	leaq block_c3bFq_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3bFq
_c3bFr:
	movq (%rbx),%rax
	jmp *(%rax)
_c3bFu:
	leaq GHC.Float.floatRadix_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.floatRadix_entry, .-GHC.Float.floatRadix_entry


==================== Asm code ====================
2018-03-16 15:57:51.409048956 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.floatRadix_info
.type GHC.Float.floatRadix_info, @object
GHC.Float.floatRadix_info:
	.quad	GHC.Float.floatRadix_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:51.409707768 UTC

.section .text
.align 8
_c3bFq:
_c3bFq:
	movq 23(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c3bFq, .-_c3bFq


==================== Asm code ====================
2018-03-16 15:57:51.410257417 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bFq_info:
	.quad	_c3bFq
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.412998567 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.floatDigits_closure
.type GHC.Float.floatDigits_closure, @object
GHC.Float.floatDigits_closure:
	.quad	GHC.Float.floatDigits_info


==================== Asm code ====================
2018-03-16 15:57:51.413828283 UTC

.section .text
.align 8
.globl GHC.Float.floatDigits_entry
.type GHC.Float.floatDigits_entry, @object
GHC.Float.floatDigits_entry:
_c3bFR:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bFS
_c3bFT:
	leaq block_c3bFO_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3bFO
_c3bFP:
	movq (%rbx),%rax
	jmp *(%rax)
_c3bFS:
	leaq GHC.Float.floatDigits_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.floatDigits_entry, .-GHC.Float.floatDigits_entry


==================== Asm code ====================
2018-03-16 15:57:51.414465668 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.floatDigits_info
.type GHC.Float.floatDigits_info, @object
GHC.Float.floatDigits_info:
	.quad	GHC.Float.floatDigits_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:51.415062786 UTC

.section .text
.align 8
_c3bFO:
_c3bFO:
	movq 31(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c3bFO, .-_c3bFO


==================== Asm code ====================
2018-03-16 15:57:51.415633394 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bFO_info:
	.quad	_c3bFO
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.419070178 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.floatRange_closure
.type GHC.Float.floatRange_closure, @object
GHC.Float.floatRange_closure:
	.quad	GHC.Float.floatRange_info


==================== Asm code ====================
2018-03-16 15:57:51.419844961 UTC

.section .text
.align 8
.globl GHC.Float.floatRange_entry
.type GHC.Float.floatRange_entry, @object
GHC.Float.floatRange_entry:
_c3bGf:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bGg
_c3bGh:
	leaq block_c3bGc_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3bGc
_c3bGd:
	movq (%rbx),%rax
	jmp *(%rax)
_c3bGg:
	leaq GHC.Float.floatRange_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.floatRange_entry, .-GHC.Float.floatRange_entry


==================== Asm code ====================
2018-03-16 15:57:51.420497178 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.floatRange_info
.type GHC.Float.floatRange_info, @object
GHC.Float.floatRange_info:
	.quad	GHC.Float.floatRange_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:51.421207496 UTC

.section .text
.align 8
_c3bGc:
_c3bGc:
	movq 39(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c3bGc, .-_c3bGc


==================== Asm code ====================
2018-03-16 15:57:51.421818692 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bGc_info:
	.quad	_c3bGc
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.424662476 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.decodeFloat_closure
.type GHC.Float.decodeFloat_closure, @object
GHC.Float.decodeFloat_closure:
	.quad	GHC.Float.decodeFloat_info


==================== Asm code ====================
2018-03-16 15:57:51.425487676 UTC

.section .text
.align 8
.globl GHC.Float.decodeFloat_entry
.type GHC.Float.decodeFloat_entry, @object
GHC.Float.decodeFloat_entry:
_c3bGD:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bGE
_c3bGF:
	leaq block_c3bGA_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3bGA
_c3bGB:
	movq (%rbx),%rax
	jmp *(%rax)
_c3bGE:
	leaq GHC.Float.decodeFloat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.decodeFloat_entry, .-GHC.Float.decodeFloat_entry


==================== Asm code ====================
2018-03-16 15:57:51.426137997 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.decodeFloat_info
.type GHC.Float.decodeFloat_info, @object
GHC.Float.decodeFloat_info:
	.quad	GHC.Float.decodeFloat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:51.426753194 UTC

.section .text
.align 8
_c3bGA:
_c3bGA:
	movq 47(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c3bGA, .-_c3bGA


==================== Asm code ====================
2018-03-16 15:57:51.42727009 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bGA_info:
	.quad	_c3bGA
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.429911325 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.encodeFloat_closure
.type GHC.Float.encodeFloat_closure, @object
GHC.Float.encodeFloat_closure:
	.quad	GHC.Float.encodeFloat_info


==================== Asm code ====================
2018-03-16 15:57:51.430692845 UTC

.section .text
.align 8
.globl GHC.Float.encodeFloat_entry
.type GHC.Float.encodeFloat_entry, @object
GHC.Float.encodeFloat_entry:
_c3bH1:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bH2
_c3bH3:
	leaq block_c3bGY_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3bGY
_c3bGZ:
	movq (%rbx),%rax
	jmp *(%rax)
_c3bH2:
	leaq GHC.Float.encodeFloat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.encodeFloat_entry, .-GHC.Float.encodeFloat_entry


==================== Asm code ====================
2018-03-16 15:57:51.431399783 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.encodeFloat_info
.type GHC.Float.encodeFloat_info, @object
GHC.Float.encodeFloat_info:
	.quad	GHC.Float.encodeFloat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:51.432029284 UTC

.section .text
.align 8
_c3bGY:
_c3bGY:
	movq 55(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c3bGY, .-_c3bGY


==================== Asm code ====================
2018-03-16 15:57:51.43328549 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bGY_info:
	.quad	_c3bGY
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.436008108 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.exponent_closure
.type GHC.Float.exponent_closure, @object
GHC.Float.exponent_closure:
	.quad	GHC.Float.exponent_info


==================== Asm code ====================
2018-03-16 15:57:51.436798606 UTC

.section .text
.align 8
.globl GHC.Float.exponent_entry
.type GHC.Float.exponent_entry, @object
GHC.Float.exponent_entry:
_c3bHp:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bHq
_c3bHr:
	leaq block_c3bHm_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3bHm
_c3bHn:
	movq (%rbx),%rax
	jmp *(%rax)
_c3bHq:
	leaq GHC.Float.exponent_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.exponent_entry, .-GHC.Float.exponent_entry


==================== Asm code ====================
2018-03-16 15:57:51.437534352 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.exponent_info
.type GHC.Float.exponent_info, @object
GHC.Float.exponent_info:
	.quad	GHC.Float.exponent_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:51.438166611 UTC

.section .text
.align 8
_c3bHm:
_c3bHm:
	movq 63(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c3bHm, .-_c3bHm


==================== Asm code ====================
2018-03-16 15:57:51.438785309 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bHm_info:
	.quad	_c3bHm
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.441738535 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.significand_closure
.type GHC.Float.significand_closure, @object
GHC.Float.significand_closure:
	.quad	GHC.Float.significand_info


==================== Asm code ====================
2018-03-16 15:57:51.442530417 UTC

.section .text
.align 8
.globl GHC.Float.significand_entry
.type GHC.Float.significand_entry, @object
GHC.Float.significand_entry:
_c3bHN:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bHO
_c3bHP:
	leaq block_c3bHK_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3bHK
_c3bHL:
	movq (%rbx),%rax
	jmp *(%rax)
_c3bHO:
	leaq GHC.Float.significand_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.significand_entry, .-GHC.Float.significand_entry


==================== Asm code ====================
2018-03-16 15:57:51.443200625 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.significand_info
.type GHC.Float.significand_info, @object
GHC.Float.significand_info:
	.quad	GHC.Float.significand_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:51.443787354 UTC

.section .text
.align 8
_c3bHK:
_c3bHK:
	movq 71(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c3bHK, .-_c3bHK


==================== Asm code ====================
2018-03-16 15:57:51.444324549 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bHK_info:
	.quad	_c3bHK
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.447505631 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.scaleFloat_closure
.type GHC.Float.scaleFloat_closure, @object
GHC.Float.scaleFloat_closure:
	.quad	GHC.Float.scaleFloat_info


==================== Asm code ====================
2018-03-16 15:57:51.448322432 UTC

.section .text
.align 8
.globl GHC.Float.scaleFloat_entry
.type GHC.Float.scaleFloat_entry, @object
GHC.Float.scaleFloat_entry:
_c3bIb:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bIc
_c3bId:
	leaq block_c3bI8_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3bI8
_c3bI9:
	movq (%rbx),%rax
	jmp *(%rax)
_c3bIc:
	leaq GHC.Float.scaleFloat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.scaleFloat_entry, .-GHC.Float.scaleFloat_entry


==================== Asm code ====================
2018-03-16 15:57:51.448944731 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.scaleFloat_info
.type GHC.Float.scaleFloat_info, @object
GHC.Float.scaleFloat_info:
	.quad	GHC.Float.scaleFloat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:51.449636878 UTC

.section .text
.align 8
_c3bI8:
_c3bI8:
	movq 79(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c3bI8, .-_c3bI8


==================== Asm code ====================
2018-03-16 15:57:51.450145612 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bI8_info:
	.quad	_c3bI8
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.45302589 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.isNaN_closure
.type GHC.Float.isNaN_closure, @object
GHC.Float.isNaN_closure:
	.quad	GHC.Float.isNaN_info


==================== Asm code ====================
2018-03-16 15:57:51.453857843 UTC

.section .text
.align 8
.globl GHC.Float.isNaN_entry
.type GHC.Float.isNaN_entry, @object
GHC.Float.isNaN_entry:
_c3bIz:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bIA
_c3bIB:
	leaq block_c3bIw_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3bIw
_c3bIx:
	movq (%rbx),%rax
	jmp *(%rax)
_c3bIA:
	leaq GHC.Float.isNaN_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.isNaN_entry, .-GHC.Float.isNaN_entry


==================== Asm code ====================
2018-03-16 15:57:51.454504008 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.isNaN_info
.type GHC.Float.isNaN_info, @object
GHC.Float.isNaN_info:
	.quad	GHC.Float.isNaN_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:51.455103629 UTC

.section .text
.align 8
_c3bIw:
_c3bIw:
	movq 87(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c3bIw, .-_c3bIw


==================== Asm code ====================
2018-03-16 15:57:51.455700343 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bIw_info:
	.quad	_c3bIw
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.458422325 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.isInfinite_closure
.type GHC.Float.isInfinite_closure, @object
GHC.Float.isInfinite_closure:
	.quad	GHC.Float.isInfinite_info


==================== Asm code ====================
2018-03-16 15:57:51.45916455 UTC

.section .text
.align 8
.globl GHC.Float.isInfinite_entry
.type GHC.Float.isInfinite_entry, @object
GHC.Float.isInfinite_entry:
_c3bIX:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bIY
_c3bIZ:
	leaq block_c3bIU_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3bIU
_c3bIV:
	movq (%rbx),%rax
	jmp *(%rax)
_c3bIY:
	leaq GHC.Float.isInfinite_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.isInfinite_entry, .-GHC.Float.isInfinite_entry


==================== Asm code ====================
2018-03-16 15:57:51.459829483 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.isInfinite_info
.type GHC.Float.isInfinite_info, @object
GHC.Float.isInfinite_info:
	.quad	GHC.Float.isInfinite_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:51.460454113 UTC

.section .text
.align 8
_c3bIU:
_c3bIU:
	movq 95(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c3bIU, .-_c3bIU


==================== Asm code ====================
2018-03-16 15:57:51.461083683 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bIU_info:
	.quad	_c3bIU
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.464220699 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.isDenormalized_closure
.type GHC.Float.isDenormalized_closure, @object
GHC.Float.isDenormalized_closure:
	.quad	GHC.Float.isDenormalized_info


==================== Asm code ====================
2018-03-16 15:57:51.465002723 UTC

.section .text
.align 8
.globl GHC.Float.isDenormalized_entry
.type GHC.Float.isDenormalized_entry, @object
GHC.Float.isDenormalized_entry:
_c3bJl:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bJm
_c3bJn:
	leaq block_c3bJi_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3bJi
_c3bJj:
	movq (%rbx),%rax
	jmp *(%rax)
_c3bJm:
	leaq GHC.Float.isDenormalized_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.isDenormalized_entry, .-GHC.Float.isDenormalized_entry


==================== Asm code ====================
2018-03-16 15:57:51.465693553 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.isDenormalized_info
.type GHC.Float.isDenormalized_info, @object
GHC.Float.isDenormalized_info:
	.quad	GHC.Float.isDenormalized_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:51.466339515 UTC

.section .text
.align 8
_c3bJi:
_c3bJi:
	movq 103(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c3bJi, .-_c3bJi


==================== Asm code ====================
2018-03-16 15:57:51.46693045 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bJi_info:
	.quad	_c3bJi
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.470226993 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.isNegativeZero_closure
.type GHC.Float.isNegativeZero_closure, @object
GHC.Float.isNegativeZero_closure:
	.quad	GHC.Float.isNegativeZero_info


==================== Asm code ====================
2018-03-16 15:57:51.471139115 UTC

.section .text
.align 8
.globl GHC.Float.isNegativeZero_entry
.type GHC.Float.isNegativeZero_entry, @object
GHC.Float.isNegativeZero_entry:
_c3bJJ:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bJK
_c3bJL:
	leaq block_c3bJG_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3bJG
_c3bJH:
	movq (%rbx),%rax
	jmp *(%rax)
_c3bJK:
	leaq GHC.Float.isNegativeZero_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.isNegativeZero_entry, .-GHC.Float.isNegativeZero_entry


==================== Asm code ====================
2018-03-16 15:57:51.471788759 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.isNegativeZero_info
.type GHC.Float.isNegativeZero_info, @object
GHC.Float.isNegativeZero_info:
	.quad	GHC.Float.isNegativeZero_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:51.472511092 UTC

.section .text
.align 8
_c3bJG:
_c3bJG:
	movq 111(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c3bJG, .-_c3bJG


==================== Asm code ====================
2018-03-16 15:57:51.47308361 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bJG_info:
	.quad	_c3bJG
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.476261084 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.isIEEE_closure
.type GHC.Float.isIEEE_closure, @object
GHC.Float.isIEEE_closure:
	.quad	GHC.Float.isIEEE_info


==================== Asm code ====================
2018-03-16 15:57:51.477034322 UTC

.section .text
.align 8
.globl GHC.Float.isIEEE_entry
.type GHC.Float.isIEEE_entry, @object
GHC.Float.isIEEE_entry:
_c3bK7:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bK8
_c3bK9:
	leaq block_c3bK4_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3bK4
_c3bK5:
	movq (%rbx),%rax
	jmp *(%rax)
_c3bK8:
	leaq GHC.Float.isIEEE_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.isIEEE_entry, .-GHC.Float.isIEEE_entry


==================== Asm code ====================
2018-03-16 15:57:51.477748614 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.isIEEE_info
.type GHC.Float.isIEEE_info, @object
GHC.Float.isIEEE_info:
	.quad	GHC.Float.isIEEE_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:51.478401904 UTC

.section .text
.align 8
_c3bK4:
_c3bK4:
	movq 119(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c3bK4, .-_c3bK4


==================== Asm code ====================
2018-03-16 15:57:51.478959536 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bK4_info:
	.quad	_c3bK4
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.481813376 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.atan2_closure
.type GHC.Float.atan2_closure, @object
GHC.Float.atan2_closure:
	.quad	GHC.Float.atan2_info


==================== Asm code ====================
2018-03-16 15:57:51.482614146 UTC

.section .text
.align 8
.globl GHC.Float.atan2_entry
.type GHC.Float.atan2_entry, @object
GHC.Float.atan2_entry:
_c3bKv:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bKw
_c3bKx:
	leaq block_c3bKs_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3bKs
_c3bKt:
	movq (%rbx),%rax
	jmp *(%rax)
_c3bKw:
	leaq GHC.Float.atan2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.atan2_entry, .-GHC.Float.atan2_entry


==================== Asm code ====================
2018-03-16 15:57:51.48326157 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.atan2_info
.type GHC.Float.atan2_info, @object
GHC.Float.atan2_info:
	.quad	GHC.Float.atan2_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:51.483877363 UTC

.section .text
.align 8
_c3bKs:
_c3bKs:
	movq 127(%rbx),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c3bKs, .-_c3bKs


==================== Asm code ====================
2018-03-16 15:57:51.484407769 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bKs_info:
	.quad	_c3bKs
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.487543495 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$seven_closure
.type GHC.Float.$seven_closure, @object
GHC.Float.$seven_closure:
	.quad	GHC.Float.$seven_info


==================== Asm code ====================
2018-03-16 15:57:51.488370243 UTC

.section .text
.align 8
.globl GHC.Float.$seven_entry
.type GHC.Float.$seven_entry, @object
GHC.Float.$seven_entry:
_c3bKT:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bKU
_c3bKV:
	leaq block_c3bKQ_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3bKQ
_c3bKR:
	movq (%rbx),%rax
	jmp *(%rax)
_c3bKU:
	leaq GHC.Float.$seven_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$seven_entry, .-GHC.Float.$seven_entry


==================== Asm code ====================
2018-03-16 15:57:51.489005733 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$seven_info
.type GHC.Float.$seven_info, @object
GHC.Float.$seven_info:
	.quad	GHC.Float.$seven_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:51.489843529 UTC

.section .text
.align 8
_c3bKQ:
_c3bKQ:
	movq 7(%rbx),%rax
	movq %rax,%rbx
	shrq $63,%rbx
	movq %rax,%rcx
	addq %rbx,%rcx
	andq $-2,%rcx
	subq %rcx,%rax
	testq %rax,%rax
	je _c3bLa
_c3bL4:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3bLa:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3bKQ, .-_c3bKQ


==================== Asm code ====================
2018-03-16 15:57:51.490525034 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bKQ_info:
	.quad	_c3bKQ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.494168816 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fNumFloat_$cfromInteger_closure
.type GHC.Float.$fNumFloat_$cfromInteger_closure, @object
GHC.Float.$fNumFloat_$cfromInteger_closure:
	.quad	GHC.Float.$fNumFloat_$cfromInteger_info


==================== Asm code ====================
2018-03-16 15:57:51.494963913 UTC

.section .text
.align 8
.globl GHC.Float.$fNumFloat_$cfromInteger_entry
.type GHC.Float.$fNumFloat_$cfromInteger_entry, @object
GHC.Float.$fNumFloat_$cfromInteger_entry:
_c3bLF:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bLJ
_c3bLK:
	leaq block_c3bLD_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp *GHC.Integer.Type.floatFromInteger_entry@gotpcrel(%rip)
_c3bLJ:
	leaq GHC.Float.$fNumFloat_$cfromInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fNumFloat_$cfromInteger_entry, .-GHC.Float.$fNumFloat_$cfromInteger_entry


==================== Asm code ====================
2018-03-16 15:57:51.495563526 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fNumFloat_$cfromInteger_info
.type GHC.Float.$fNumFloat_$cfromInteger_info, @object
GHC.Float.$fNumFloat_$cfromInteger_info:
	.quad	GHC.Float.$fNumFloat_$cfromInteger_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:51.496282603 UTC

.section .text
.align 8
_c3bLD:
_c3bLD:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3bLN
_c3bLM:
	movq GHC.Types.F#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movss %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3bLN:
	movq $16,904(%r13)
	jmp *stg_gc_f1@gotpcrel(%rip)
	.size _c3bLD, .-_c3bLD


==================== Asm code ====================
2018-03-16 15:57:51.49692585 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bLD_info:
	.quad	_c3bLD
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.49990099 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fNumDouble_$cfromInteger_closure
.type GHC.Float.$fNumDouble_$cfromInteger_closure, @object
GHC.Float.$fNumDouble_$cfromInteger_closure:
	.quad	GHC.Float.$fNumDouble_$cfromInteger_info


==================== Asm code ====================
2018-03-16 15:57:51.500632175 UTC

.section .text
.align 8
.globl GHC.Float.$fNumDouble_$cfromInteger_entry
.type GHC.Float.$fNumDouble_$cfromInteger_entry, @object
GHC.Float.$fNumDouble_$cfromInteger_entry:
_c3bM5:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bM9
_c3bMa:
	leaq block_c3bM3_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp *GHC.Integer.Type.doubleFromInteger_entry@gotpcrel(%rip)
_c3bM9:
	leaq GHC.Float.$fNumDouble_$cfromInteger_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fNumDouble_$cfromInteger_entry, .-GHC.Float.$fNumDouble_$cfromInteger_entry


==================== Asm code ====================
2018-03-16 15:57:51.501355652 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fNumDouble_$cfromInteger_info
.type GHC.Float.$fNumDouble_$cfromInteger_info, @object
GHC.Float.$fNumDouble_$cfromInteger_info:
	.quad	GHC.Float.$fNumDouble_$cfromInteger_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:51.502071617 UTC

.section .text
.align 8
_c3bM3:
_c3bM3:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3bMd
_c3bMc:
	movq GHC.Types.D#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movsd %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3bMd:
	movq $16,904(%r13)
	jmp *stg_gc_d1@gotpcrel(%rip)
	.size _c3bM3, .-_c3bM3


==================== Asm code ====================
2018-03-16 15:57:51.50270418 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bM3_info:
	.quad	_c3bM3
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.506945125 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.plusFloat_closure
.type GHC.Float.plusFloat_closure, @object
GHC.Float.plusFloat_closure:
	.quad	GHC.Float.plusFloat_info


==================== Asm code ====================
2018-03-16 15:57:51.507795255 UTC

.section .text
.align 8
.globl GHC.Float.plusFloat_entry
.type GHC.Float.plusFloat_entry, @object
GHC.Float.plusFloat_entry:
_c3bMw:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bMI
_c3bMJ:
	leaq block_c3bMt_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3bMt
_c3bMu:
	movq (%rbx),%rax
	jmp *(%rax)
_c3bMI:
	leaq GHC.Float.plusFloat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.plusFloat_entry, .-GHC.Float.plusFloat_entry


==================== Asm code ====================
2018-03-16 15:57:51.508457209 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.plusFloat_info
.type GHC.Float.plusFloat_info, @object
GHC.Float.plusFloat_info:
	.quad	GHC.Float.plusFloat_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:51.509153273 UTC

.section .text
.align 8
_c3bMt:
_c3bMt:
	leaq block_c3bMz_info(%rip),%rax
	movq %rax,(%rbp)
	movss 7(%rbx),%xmm0
	movq 8(%rbp),%rbx
	movss %xmm0,8(%rbp)
	testb $7,%bl
	jne _c3bMz
_c3bMA:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3bMt, .-_c3bMt


==================== Asm code ====================
2018-03-16 15:57:51.509785361 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bMt_info:
	.quad	_c3bMt
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.510506936 UTC

.section .text
.align 8
_c3bMz:
_c3bMz:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3bMN
_c3bMM:
	leaq 7(%rbx),%rax
	movss 8(%rbp),%xmm0
	addss (%rax),%xmm0
	movq GHC.Types.F#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3bMN:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3bMz, .-_c3bMz


==================== Asm code ====================
2018-03-16 15:57:51.511235432 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bMz_info:
	.quad	_c3bMz
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.514957358 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.minusFloat_closure
.type GHC.Float.minusFloat_closure, @object
GHC.Float.minusFloat_closure:
	.quad	GHC.Float.minusFloat_info


==================== Asm code ====================
2018-03-16 15:57:51.515733688 UTC

.section .text
.align 8
.globl GHC.Float.minusFloat_entry
.type GHC.Float.minusFloat_entry, @object
GHC.Float.minusFloat_entry:
_c3bNg:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bNs
_c3bNt:
	leaq block_c3bNd_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3bNd
_c3bNe:
	movq (%rbx),%rax
	jmp *(%rax)
_c3bNs:
	leaq GHC.Float.minusFloat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.minusFloat_entry, .-GHC.Float.minusFloat_entry


==================== Asm code ====================
2018-03-16 15:57:51.516380141 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.minusFloat_info
.type GHC.Float.minusFloat_info, @object
GHC.Float.minusFloat_info:
	.quad	GHC.Float.minusFloat_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:51.517122524 UTC

.section .text
.align 8
_c3bNd:
_c3bNd:
	leaq block_c3bNj_info(%rip),%rax
	movq %rax,(%rbp)
	movss 7(%rbx),%xmm0
	movq 8(%rbp),%rbx
	movss %xmm0,8(%rbp)
	testb $7,%bl
	jne _c3bNj
_c3bNk:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3bNd, .-_c3bNd


==================== Asm code ====================
2018-03-16 15:57:51.517789745 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bNd_info:
	.quad	_c3bNd
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.518540716 UTC

.section .text
.align 8
_c3bNj:
_c3bNj:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3bNx
_c3bNw:
	leaq 7(%rbx),%rax
	movss 8(%rbp),%xmm0
	subss (%rax),%xmm0
	movq GHC.Types.F#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3bNx:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3bNj, .-_c3bNj


==================== Asm code ====================
2018-03-16 15:57:51.519181906 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bNj_info:
	.quad	_c3bNj
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.522992019 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.timesFloat_closure
.type GHC.Float.timesFloat_closure, @object
GHC.Float.timesFloat_closure:
	.quad	GHC.Float.timesFloat_info


==================== Asm code ====================
2018-03-16 15:57:51.523861083 UTC

.section .text
.align 8
.globl GHC.Float.timesFloat_entry
.type GHC.Float.timesFloat_entry, @object
GHC.Float.timesFloat_entry:
_c3bO0:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bOc
_c3bOd:
	leaq block_c3bNX_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3bNX
_c3bNY:
	movq (%rbx),%rax
	jmp *(%rax)
_c3bOc:
	leaq GHC.Float.timesFloat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.timesFloat_entry, .-GHC.Float.timesFloat_entry


==================== Asm code ====================
2018-03-16 15:57:51.524514249 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.timesFloat_info
.type GHC.Float.timesFloat_info, @object
GHC.Float.timesFloat_info:
	.quad	GHC.Float.timesFloat_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:51.525221097 UTC

.section .text
.align 8
_c3bNX:
_c3bNX:
	leaq block_c3bO3_info(%rip),%rax
	movq %rax,(%rbp)
	movss 7(%rbx),%xmm0
	movq 8(%rbp),%rbx
	movss %xmm0,8(%rbp)
	testb $7,%bl
	jne _c3bO3
_c3bO4:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3bNX, .-_c3bNX


==================== Asm code ====================
2018-03-16 15:57:51.525880482 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bNX_info:
	.quad	_c3bNX
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.526633723 UTC

.section .text
.align 8
_c3bO3:
_c3bO3:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3bOh
_c3bOg:
	leaq 7(%rbx),%rax
	movss 8(%rbp),%xmm0
	mulss (%rax),%xmm0
	movq GHC.Types.F#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3bOh:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3bO3, .-_c3bO3


==================== Asm code ====================
2018-03-16 15:57:51.527282421 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bO3_info:
	.quad	_c3bO3
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.531097369 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.divideFloat_closure
.type GHC.Float.divideFloat_closure, @object
GHC.Float.divideFloat_closure:
	.quad	GHC.Float.divideFloat_info


==================== Asm code ====================
2018-03-16 15:57:51.532037524 UTC

.section .text
.align 8
.globl GHC.Float.divideFloat_entry
.type GHC.Float.divideFloat_entry, @object
GHC.Float.divideFloat_entry:
_c3bOK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bOW
_c3bOX:
	leaq block_c3bOH_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3bOH
_c3bOI:
	movq (%rbx),%rax
	jmp *(%rax)
_c3bOW:
	leaq GHC.Float.divideFloat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.divideFloat_entry, .-GHC.Float.divideFloat_entry


==================== Asm code ====================
2018-03-16 15:57:51.532695373 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.divideFloat_info
.type GHC.Float.divideFloat_info, @object
GHC.Float.divideFloat_info:
	.quad	GHC.Float.divideFloat_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:51.533485798 UTC

.section .text
.align 8
_c3bOH:
_c3bOH:
	leaq block_c3bON_info(%rip),%rax
	movq %rax,(%rbp)
	movss 7(%rbx),%xmm0
	movq 8(%rbp),%rbx
	movss %xmm0,8(%rbp)
	testb $7,%bl
	jne _c3bON
_c3bOO:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3bOH, .-_c3bOH


==================== Asm code ====================
2018-03-16 15:57:51.534077821 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bOH_info:
	.quad	_c3bOH
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.534829087 UTC

.section .text
.align 8
_c3bON:
_c3bON:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3bP1
_c3bP0:
	leaq 7(%rbx),%rax
	movss 8(%rbp),%xmm0
	divss (%rax),%xmm0
	movq GHC.Types.F#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3bP1:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3bON, .-_c3bON


==================== Asm code ====================
2018-03-16 15:57:51.535520699 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bON_info:
	.quad	_c3bON
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.538743998 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.negateFloat_closure
.type GHC.Float.negateFloat_closure, @object
GHC.Float.negateFloat_closure:
	.quad	GHC.Float.negateFloat_info


==================== Asm code ====================
2018-03-16 15:57:51.539553964 UTC

.section .text
.align 8
.globl GHC.Float.negateFloat_entry
.type GHC.Float.negateFloat_entry, @object
GHC.Float.negateFloat_entry:
_c3bPu:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bPB
_c3bPC:
	leaq block_c3bPr_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3bPr
_c3bPs:
	movq (%rbx),%rax
	jmp *(%rax)
_c3bPB:
	leaq GHC.Float.negateFloat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.negateFloat_entry, .-GHC.Float.negateFloat_entry


==================== Asm code ====================
2018-03-16 15:57:51.54025714 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.negateFloat_info
.type GHC.Float.negateFloat_info, @object
GHC.Float.negateFloat_info:
	.quad	GHC.Float.negateFloat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:51.54114661 UTC

.section .text
.align 8
_c3bPr:
_c3bPr:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3bPF
_c3bPE:
	movss 7(%rbx),%xmm0
	movss _n3bPP(%rip),%xmm1
	xorps %xmm1,%xmm0
	movq GHC.Types.F#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3bPF:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3bPr, .-_c3bPr
.section .rodata
.align 8
.align 4
_n3bPP:
	.long	-2147483648


==================== Asm code ====================
2018-03-16 15:57:51.541890669 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bPr_info:
	.quad	_c3bPr
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.544177597 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fNumFloat1_closure
.type GHC.Float.$fNumFloat1_closure, @object
GHC.Float.$fNumFloat1_closure:
	.quad	GHC.Types.F#_con_info
	.byte	0
	.byte	0
	.byte	128
	.byte	63
	.long	0


==================== Asm code ====================
2018-03-16 15:57:51.545954465 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fNumFloat2_closure
.type GHC.Float.$fNumFloat2_closure, @object
GHC.Float.$fNumFloat2_closure:
	.quad	GHC.Types.F#_con_info
	.byte	0
	.byte	0
	.byte	128
	.byte	191
	.long	0


==================== Asm code ====================
2018-03-16 15:57:51.549362774 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fNumFloat_$csignum_closure
.type GHC.Float.$fNumFloat_$csignum_closure, @object
GHC.Float.$fNumFloat_$csignum_closure:
	.quad	GHC.Float.$fNumFloat_$csignum_info


==================== Asm code ====================
2018-03-16 15:57:51.550251824 UTC

.section .text
.align 8
.globl GHC.Float.$fNumFloat_$csignum_entry
.type GHC.Float.$fNumFloat_$csignum_entry, @object
GHC.Float.$fNumFloat_$csignum_entry:
_c3bQ4:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bQ5
_c3bQ6:
	leaq block_c3bQ1_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3bQ1
_c3bQ2:
	movq (%rbx),%rax
	jmp *(%rax)
_c3bQ5:
	leaq GHC.Float.$fNumFloat_$csignum_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fNumFloat_$csignum_entry, .-GHC.Float.$fNumFloat_$csignum_entry


==================== Asm code ====================
2018-03-16 15:57:51.550914893 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fNumFloat_$csignum_info
.type GHC.Float.$fNumFloat_$csignum_info, @object
GHC.Float.$fNumFloat_$csignum_info:
	.quad	GHC.Float.$fNumFloat_$csignum_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:51.551775508 UTC

.section .text
.align 8
_c3bQ1:
_c3bQ1:
	movss 7(%rbx),%xmm0
	xorps %xmm1,%xmm1
	ucomiss %xmm1,%xmm0
	ja _c3bQk
_c3bQj:
	xorps %xmm1,%xmm1
	ucomiss %xmm1,%xmm0
	jp _c3bQg
	jb _c3bQh
_c3bQg:
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c3bQk:
	leaq GHC.Float.$fNumFloat1_closure+1(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3bQh:
	leaq GHC.Float.$fNumFloat2_closure+1(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3bQ1, .-_c3bQ1


==================== Asm code ====================
2018-03-16 15:57:51.55244476 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bQ1_info:
	.quad	_c3bQ1
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.554496132 UTC

.section .data
.align 8
.align 1
sat_s3aC5_closure:
	.quad	GHC.Types.I#_con_info
	.quad	1


==================== Asm code ====================
2018-03-16 15:57:51.556269517 UTC

.section .data
.align 8
.align 1
sat_s3aC6_closure:
	.quad	:_con_info
	.quad	sat_s3aC5_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:51.559186064 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealDouble1_closure
.type GHC.Float.$fRealDouble1_closure, @object
GHC.Float.$fRealDouble1_closure:
	.quad	GHC.Float.$fRealDouble1_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:51.560179995 UTC

.section .text
.align 8
.globl GHC.Float.$fRealDouble1_entry
.type GHC.Float.$fRealDouble1_entry, @object
GHC.Float.$fRealDouble1_entry:
_c3bQM:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bQN
_c3bQO:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c3bQL
_c3bQK:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq sat_s3aC6_closure+2(%rip),%rsi
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%r14
	addq $-16,%rbp
	jmp *GHC.Integer.Type.mkInteger_entry@gotpcrel(%rip)
_c3bQN:
	jmp *-16(%r13)
_c3bQL:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Float.$fRealDouble1_entry, .-GHC.Float.$fRealDouble1_entry


==================== Asm code ====================
2018-03-16 15:57:51.560945207 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealDouble1_info
.type GHC.Float.$fRealDouble1_info, @object
GHC.Float.$fRealDouble1_info:
	.quad	GHC.Float.$fRealDouble1_entry
	.quad	0
	.quad	4294967317
	.quad	S3bQP_srt


==================== Asm code ====================
2018-03-16 15:57:51.564341334 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.fabsFloat_closure
.type GHC.Float.fabsFloat_closure, @object
GHC.Float.fabsFloat_closure:
	.quad	GHC.Float.fabsFloat_info


==================== Asm code ====================
2018-03-16 15:57:51.565195534 UTC

.section .text
.align 8
.globl GHC.Float.fabsFloat_entry
.type GHC.Float.fabsFloat_entry, @object
GHC.Float.fabsFloat_entry:
_c3bR6:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bRd
_c3bRe:
	leaq block_c3bR3_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3bR3
_c3bR4:
	movq (%rbx),%rax
	jmp *(%rax)
_c3bRd:
	leaq GHC.Float.fabsFloat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.fabsFloat_entry, .-GHC.Float.fabsFloat_entry


==================== Asm code ====================
2018-03-16 15:57:51.566235637 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.fabsFloat_info
.type GHC.Float.fabsFloat_info, @object
GHC.Float.fabsFloat_info:
	.quad	GHC.Float.fabsFloat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:51.567082456 UTC

.section .text
.align 8
_c3bR3:
_c3bR3:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3bRh
_c3bRg:
	movss 7(%rbx),%xmm0
	movss _n3bRr(%rip),%xmm1
	andps %xmm1,%xmm0
	movq GHC.Types.F#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3bRh:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3bR3, .-_c3bR3
.section .rodata
.align 8
.align 4
_n3bRr:
	.long	2147483647


==================== Asm code ====================
2018-03-16 15:57:51.567765459 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bR3_info:
	.quad	_c3bR3
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.569775114 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fNumFloat_closure
.type GHC.Float.$fNumFloat_closure, @object
GHC.Float.$fNumFloat_closure:
	.quad	GHC.Num.C:Num_con_info
	.quad	GHC.Float.plusFloat_closure+2
	.quad	GHC.Float.minusFloat_closure+2
	.quad	GHC.Float.timesFloat_closure+2
	.quad	GHC.Float.negateFloat_closure+1
	.quad	GHC.Float.fabsFloat_closure+1
	.quad	GHC.Float.$fNumFloat_$csignum_closure+1
	.quad	GHC.Float.$fNumFloat_$cfromInteger_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:51.57365945 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.plusDouble_closure
.type GHC.Float.plusDouble_closure, @object
GHC.Float.plusDouble_closure:
	.quad	GHC.Float.plusDouble_info


==================== Asm code ====================
2018-03-16 15:57:51.574519237 UTC

.section .text
.align 8
.globl GHC.Float.plusDouble_entry
.type GHC.Float.plusDouble_entry, @object
GHC.Float.plusDouble_entry:
_c3bRF:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bRR
_c3bRS:
	leaq block_c3bRC_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3bRC
_c3bRD:
	movq (%rbx),%rax
	jmp *(%rax)
_c3bRR:
	leaq GHC.Float.plusDouble_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.plusDouble_entry, .-GHC.Float.plusDouble_entry


==================== Asm code ====================
2018-03-16 15:57:51.575164275 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.plusDouble_info
.type GHC.Float.plusDouble_info, @object
GHC.Float.plusDouble_info:
	.quad	GHC.Float.plusDouble_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:51.57581657 UTC

.section .text
.align 8
_c3bRC:
_c3bRC:
	leaq block_c3bRI_info(%rip),%rax
	movq %rax,(%rbp)
	movsd 7(%rbx),%xmm0
	movq 8(%rbp),%rbx
	movsd %xmm0,8(%rbp)
	testb $7,%bl
	jne _c3bRI
_c3bRJ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3bRC, .-_c3bRC


==================== Asm code ====================
2018-03-16 15:57:51.576418962 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bRC_info:
	.quad	_c3bRC
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.57714624 UTC

.section .text
.align 8
_c3bRI:
_c3bRI:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3bRW
_c3bRV:
	leaq 7(%rbx),%rax
	movsd 8(%rbp),%xmm0
	addsd (%rax),%xmm0
	movq GHC.Types.D#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3bRW:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3bRI, .-_c3bRI


==================== Asm code ====================
2018-03-16 15:57:51.579030665 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bRI_info:
	.quad	_c3bRI
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.583473756 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.minusDouble_closure
.type GHC.Float.minusDouble_closure, @object
GHC.Float.minusDouble_closure:
	.quad	GHC.Float.minusDouble_info


==================== Asm code ====================
2018-03-16 15:57:51.58432348 UTC

.section .text
.align 8
.globl GHC.Float.minusDouble_entry
.type GHC.Float.minusDouble_entry, @object
GHC.Float.minusDouble_entry:
_c3bSp:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bSB
_c3bSC:
	leaq block_c3bSm_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3bSm
_c3bSn:
	movq (%rbx),%rax
	jmp *(%rax)
_c3bSB:
	leaq GHC.Float.minusDouble_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.minusDouble_entry, .-GHC.Float.minusDouble_entry


==================== Asm code ====================
2018-03-16 15:57:51.585058352 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.minusDouble_info
.type GHC.Float.minusDouble_info, @object
GHC.Float.minusDouble_info:
	.quad	GHC.Float.minusDouble_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:51.585814785 UTC

.section .text
.align 8
_c3bSm:
_c3bSm:
	leaq block_c3bSs_info(%rip),%rax
	movq %rax,(%rbp)
	movsd 7(%rbx),%xmm0
	movq 8(%rbp),%rbx
	movsd %xmm0,8(%rbp)
	testb $7,%bl
	jne _c3bSs
_c3bSt:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3bSm, .-_c3bSm


==================== Asm code ====================
2018-03-16 15:57:51.586443989 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bSm_info:
	.quad	_c3bSm
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.587198285 UTC

.section .text
.align 8
_c3bSs:
_c3bSs:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3bSG
_c3bSF:
	leaq 7(%rbx),%rax
	movsd 8(%rbp),%xmm0
	subsd (%rax),%xmm0
	movq GHC.Types.D#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3bSG:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3bSs, .-_c3bSs


==================== Asm code ====================
2018-03-16 15:57:51.587893554 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bSs_info:
	.quad	_c3bSs
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.591783228 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.timesDouble_closure
.type GHC.Float.timesDouble_closure, @object
GHC.Float.timesDouble_closure:
	.quad	GHC.Float.timesDouble_info


==================== Asm code ====================
2018-03-16 15:57:51.592668016 UTC

.section .text
.align 8
.globl GHC.Float.timesDouble_entry
.type GHC.Float.timesDouble_entry, @object
GHC.Float.timesDouble_entry:
_c3bT9:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bTl
_c3bTm:
	leaq block_c3bT6_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3bT6
_c3bT7:
	movq (%rbx),%rax
	jmp *(%rax)
_c3bTl:
	leaq GHC.Float.timesDouble_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.timesDouble_entry, .-GHC.Float.timesDouble_entry


==================== Asm code ====================
2018-03-16 15:57:51.593316695 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.timesDouble_info
.type GHC.Float.timesDouble_info, @object
GHC.Float.timesDouble_info:
	.quad	GHC.Float.timesDouble_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:51.594046799 UTC

.section .text
.align 8
_c3bT6:
_c3bT6:
	leaq block_c3bTc_info(%rip),%rax
	movq %rax,(%rbp)
	movsd 7(%rbx),%xmm0
	movq 8(%rbp),%rbx
	movsd %xmm0,8(%rbp)
	testb $7,%bl
	jne _c3bTc
_c3bTd:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3bT6, .-_c3bT6


==================== Asm code ====================
2018-03-16 15:57:51.594663406 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bT6_info:
	.quad	_c3bT6
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.595443528 UTC

.section .text
.align 8
_c3bTc:
_c3bTc:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3bTq
_c3bTp:
	leaq 7(%rbx),%rax
	movsd 8(%rbp),%xmm0
	mulsd (%rax),%xmm0
	movq GHC.Types.D#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3bTq:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3bTc, .-_c3bTc


==================== Asm code ====================
2018-03-16 15:57:51.596088488 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bTc_info:
	.quad	_c3bTc
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.60037542 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.divideDouble_closure
.type GHC.Float.divideDouble_closure, @object
GHC.Float.divideDouble_closure:
	.quad	GHC.Float.divideDouble_info


==================== Asm code ====================
2018-03-16 15:57:51.601334092 UTC

.section .text
.align 8
.globl GHC.Float.divideDouble_entry
.type GHC.Float.divideDouble_entry, @object
GHC.Float.divideDouble_entry:
_c3bTT:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bU5
_c3bU6:
	leaq block_c3bTQ_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3bTQ
_c3bTR:
	movq (%rbx),%rax
	jmp *(%rax)
_c3bU5:
	leaq GHC.Float.divideDouble_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.divideDouble_entry, .-GHC.Float.divideDouble_entry


==================== Asm code ====================
2018-03-16 15:57:51.602022084 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.divideDouble_info
.type GHC.Float.divideDouble_info, @object
GHC.Float.divideDouble_info:
	.quad	GHC.Float.divideDouble_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:51.602713672 UTC

.section .text
.align 8
_c3bTQ:
_c3bTQ:
	leaq block_c3bTW_info(%rip),%rax
	movq %rax,(%rbp)
	movsd 7(%rbx),%xmm0
	movq 8(%rbp),%rbx
	movsd %xmm0,8(%rbp)
	testb $7,%bl
	jne _c3bTW
_c3bTX:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3bTQ, .-_c3bTQ


==================== Asm code ====================
2018-03-16 15:57:51.603315104 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bTQ_info:
	.quad	_c3bTQ
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.604033942 UTC

.section .text
.align 8
_c3bTW:
_c3bTW:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3bUa
_c3bU9:
	leaq 7(%rbx),%rax
	movsd 8(%rbp),%xmm0
	divsd (%rax),%xmm0
	movq GHC.Types.D#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3bUa:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3bTW, .-_c3bTW


==================== Asm code ====================
2018-03-16 15:57:51.604706169 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bTW_info:
	.quad	_c3bTW
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.608030414 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.negateDouble_closure
.type GHC.Float.negateDouble_closure, @object
GHC.Float.negateDouble_closure:
	.quad	GHC.Float.negateDouble_info


==================== Asm code ====================
2018-03-16 15:57:51.608913303 UTC

.section .text
.align 8
.globl GHC.Float.negateDouble_entry
.type GHC.Float.negateDouble_entry, @object
GHC.Float.negateDouble_entry:
_c3bUD:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bUK
_c3bUL:
	leaq block_c3bUA_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3bUA
_c3bUB:
	movq (%rbx),%rax
	jmp *(%rax)
_c3bUK:
	leaq GHC.Float.negateDouble_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.negateDouble_entry, .-GHC.Float.negateDouble_entry


==================== Asm code ====================
2018-03-16 15:57:51.609759803 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.negateDouble_info
.type GHC.Float.negateDouble_info, @object
GHC.Float.negateDouble_info:
	.quad	GHC.Float.negateDouble_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:51.610575969 UTC

.section .text
.align 8
_c3bUA:
_c3bUA:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3bUO
_c3bUN:
	movsd 7(%rbx),%xmm0
	movsd _n3bUY(%rip),%xmm1
	xorpd %xmm1,%xmm0
	movq GHC.Types.D#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3bUO:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3bUA, .-_c3bUA
.section .rodata
.align 8
.align 8
_n3bUY:
	.quad	-9223372036854775808


==================== Asm code ====================
2018-03-16 15:57:51.611345426 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bUA_info:
	.quad	_c3bUA
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.613068957 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fNumDouble1_closure
.type GHC.Float.$fNumDouble1_closure, @object
GHC.Float.$fNumDouble1_closure:
	.quad	GHC.Types.D#_con_info
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	240
	.byte	63


==================== Asm code ====================
2018-03-16 15:57:51.614860562 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fNumDouble2_closure
.type GHC.Float.$fNumDouble2_closure, @object
GHC.Float.$fNumDouble2_closure:
	.quad	GHC.Types.D#_con_info
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	240
	.byte	191


==================== Asm code ====================
2018-03-16 15:57:51.618232848 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fNumDouble_$csignum_closure
.type GHC.Float.$fNumDouble_$csignum_closure, @object
GHC.Float.$fNumDouble_$csignum_closure:
	.quad	GHC.Float.$fNumDouble_$csignum_info


==================== Asm code ====================
2018-03-16 15:57:51.619662277 UTC

.section .text
.align 8
.globl GHC.Float.$fNumDouble_$csignum_entry
.type GHC.Float.$fNumDouble_$csignum_entry, @object
GHC.Float.$fNumDouble_$csignum_entry:
_c3bVd:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bVe
_c3bVf:
	leaq block_c3bVa_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3bVa
_c3bVb:
	movq (%rbx),%rax
	jmp *(%rax)
_c3bVe:
	leaq GHC.Float.$fNumDouble_$csignum_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fNumDouble_$csignum_entry, .-GHC.Float.$fNumDouble_$csignum_entry


==================== Asm code ====================
2018-03-16 15:57:51.620412849 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fNumDouble_$csignum_info
.type GHC.Float.$fNumDouble_$csignum_info, @object
GHC.Float.$fNumDouble_$csignum_info:
	.quad	GHC.Float.$fNumDouble_$csignum_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:51.621339612 UTC

.section .text
.align 8
_c3bVa:
_c3bVa:
	movsd 7(%rbx),%xmm0
	xorpd %xmm1,%xmm1
	ucomisd %xmm1,%xmm0
	ja _c3bVt
_c3bVs:
	xorpd %xmm1,%xmm1
	ucomisd %xmm1,%xmm0
	jp _c3bVp
	jb _c3bVq
_c3bVp:
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c3bVt:
	leaq GHC.Float.$fNumDouble1_closure+1(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3bVq:
	leaq GHC.Float.$fNumDouble2_closure+1(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3bVa, .-_c3bVa


==================== Asm code ====================
2018-03-16 15:57:51.621988862 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bVa_info:
	.quad	_c3bVa
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.625200673 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.fabsDouble_closure
.type GHC.Float.fabsDouble_closure, @object
GHC.Float.fabsDouble_closure:
	.quad	GHC.Float.fabsDouble_info


==================== Asm code ====================
2018-03-16 15:57:51.626087769 UTC

.section .text
.align 8
.globl GHC.Float.fabsDouble_entry
.type GHC.Float.fabsDouble_entry, @object
GHC.Float.fabsDouble_entry:
_c3bVU:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bW1
_c3bW2:
	leaq block_c3bVR_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3bVR
_c3bVS:
	movq (%rbx),%rax
	jmp *(%rax)
_c3bW1:
	leaq GHC.Float.fabsDouble_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.fabsDouble_entry, .-GHC.Float.fabsDouble_entry


==================== Asm code ====================
2018-03-16 15:57:51.626746513 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.fabsDouble_info
.type GHC.Float.fabsDouble_info, @object
GHC.Float.fabsDouble_info:
	.quad	GHC.Float.fabsDouble_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:51.627484354 UTC

.section .text
.align 8
_c3bVR:
_c3bVR:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3bW5
_c3bW4:
	movsd 7(%rbx),%xmm0
	movsd _n3bWf(%rip),%xmm1
	andpd %xmm1,%xmm0
	movq GHC.Types.D#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3bW5:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3bVR, .-_c3bVR
.section .rodata
.align 8
.align 8
_n3bWf:
	.quad	9223372036854775807


==================== Asm code ====================
2018-03-16 15:57:51.628165573 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bVR_info:
	.quad	_c3bVR
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.630596662 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fNumDouble_closure
.type GHC.Float.$fNumDouble_closure, @object
GHC.Float.$fNumDouble_closure:
	.quad	GHC.Num.C:Num_con_info
	.quad	GHC.Float.plusDouble_closure+2
	.quad	GHC.Float.minusDouble_closure+2
	.quad	GHC.Float.timesDouble_closure+2
	.quad	GHC.Float.negateDouble_closure+1
	.quad	GHC.Float.fabsDouble_closure+1
	.quad	GHC.Float.$fNumDouble_$csignum_closure+1
	.quad	GHC.Float.$fNumDouble_$cfromInteger_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:51.634402168 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fFloatingDouble_$cacosh_closure
.type GHC.Float.$fFloatingDouble_$cacosh_closure, @object
GHC.Float.$fFloatingDouble_$cacosh_closure:
	.quad	GHC.Float.$fFloatingDouble_$cacosh_info


==================== Asm code ====================
2018-03-16 15:57:51.635242709 UTC

.section .text
.align 8
.globl GHC.Float.$fFloatingDouble_$cacosh_entry
.type GHC.Float.$fFloatingDouble_$cacosh_entry, @object
GHC.Float.$fFloatingDouble_$cacosh_entry:
_c3bWt:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bWX
_c3bWY:
	leaq block_c3bWq_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3bWq
_c3bWr:
	movq (%rbx),%rax
	jmp *(%rax)
_c3bWX:
	leaq GHC.Float.$fFloatingDouble_$cacosh_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fFloatingDouble_$cacosh_entry, .-GHC.Float.$fFloatingDouble_$cacosh_entry


==================== Asm code ====================
2018-03-16 15:57:51.635958416 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fFloatingDouble_$cacosh_info
.type GHC.Float.$fFloatingDouble_$cacosh_info, @object
GHC.Float.$fFloatingDouble_$cacosh_info:
	.quad	GHC.Float.$fFloatingDouble_$cacosh_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:51.636869581 UTC

.section .text
.align 8
_c3bWq:
_c3bWq:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3bX1
_c3bX0:
	movsd 7(%rbx),%xmm0
	movsd %xmm0,%xmm1
	addsd _n3bXb(%rip),%xmm1
	movsd %xmm0,%xmm2
	subsd _n3bXe(%rip),%xmm2
	divsd %xmm1,%xmm2
	sqrtsd %xmm2,%xmm1
	subq $8,%rsp
	movsd %xmm0,%xmm2
	addsd _n3bXi(%rip),%xmm2
	mulsd %xmm1,%xmm2
	addsd %xmm2,%xmm0
	movl $1,%eax
	call log@plt
	addq $8,%rsp
	movq GHC.Types.D#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3bX1:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3bWq, .-_c3bWq
.section .rodata
.align 8
.align 8
_n3bXb:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	240
	.byte	63
.section .rodata
.align 8
.align 8
_n3bXe:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	240
	.byte	63
.section .rodata
.align 8
.align 8
_n3bXi:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	240
	.byte	63


==================== Asm code ====================
2018-03-16 15:57:51.637710084 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bWq_info:
	.quad	_c3bWq
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.641194856 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fFloatingDouble_$casinh_closure
.type GHC.Float.$fFloatingDouble_$casinh_closure, @object
GHC.Float.$fFloatingDouble_$casinh_closure:
	.quad	GHC.Float.$fFloatingDouble_$casinh_info


==================== Asm code ====================
2018-03-16 15:57:51.642272067 UTC

.section .text
.align 8
.globl GHC.Float.$fFloatingDouble_$casinh_entry
.type GHC.Float.$fFloatingDouble_$casinh_entry, @object
GHC.Float.$fFloatingDouble_$casinh_entry:
_c3bXy:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bXT
_c3bXU:
	leaq block_c3bXv_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3bXv
_c3bXw:
	movq (%rbx),%rax
	jmp *(%rax)
_c3bXT:
	leaq GHC.Float.$fFloatingDouble_$casinh_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fFloatingDouble_$casinh_entry, .-GHC.Float.$fFloatingDouble_$casinh_entry


==================== Asm code ====================
2018-03-16 15:57:51.642951951 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fFloatingDouble_$casinh_info
.type GHC.Float.$fFloatingDouble_$casinh_info, @object
GHC.Float.$fFloatingDouble_$casinh_info:
	.quad	GHC.Float.$fFloatingDouble_$casinh_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:51.6438225 UTC

.section .text
.align 8
_c3bXv:
_c3bXv:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3bXX
_c3bXW:
	movsd 7(%rbx),%xmm0
	movsd %xmm0,%xmm1
	mulsd %xmm0,%xmm1
	addsd _n3bY7(%rip),%xmm1
	sqrtsd %xmm1,%xmm1
	subq $8,%rsp
	addsd %xmm1,%xmm0
	movl $1,%eax
	call log@plt
	addq $8,%rsp
	movq GHC.Types.D#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3bXX:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3bXv, .-_c3bXv
.section .rodata
.align 8
.align 8
_n3bY7:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	240
	.byte	63


==================== Asm code ====================
2018-03-16 15:57:51.644479013 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bXv_info:
	.quad	_c3bXv
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.647790488 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fFractionalDouble_$crecip_closure
.type GHC.Float.$fFractionalDouble_$crecip_closure, @object
GHC.Float.$fFractionalDouble_$crecip_closure:
	.quad	GHC.Float.$fFractionalDouble_$crecip_info


==================== Asm code ====================
2018-03-16 15:57:51.648658857 UTC

.section .text
.align 8
.globl GHC.Float.$fFractionalDouble_$crecip_entry
.type GHC.Float.$fFractionalDouble_$crecip_entry, @object
GHC.Float.$fFractionalDouble_$crecip_entry:
_c3bYn:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bYu
_c3bYv:
	leaq block_c3bYk_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3bYk
_c3bYl:
	movq (%rbx),%rax
	jmp *(%rax)
_c3bYu:
	leaq GHC.Float.$fFractionalDouble_$crecip_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fFractionalDouble_$crecip_entry, .-GHC.Float.$fFractionalDouble_$crecip_entry


==================== Asm code ====================
2018-03-16 15:57:51.649454992 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fFractionalDouble_$crecip_info
.type GHC.Float.$fFractionalDouble_$crecip_info, @object
GHC.Float.$fFractionalDouble_$crecip_info:
	.quad	GHC.Float.$fFractionalDouble_$crecip_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:51.650250993 UTC

.section .text
.align 8
_c3bYk:
_c3bYk:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3bYy
_c3bYx:
	leaq 7(%rbx),%rax
	movsd _n3bYJ(%rip),%xmm0
	divsd (%rax),%xmm0
	movq GHC.Types.D#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3bYy:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3bYk, .-_c3bYk
.section .rodata
.align 8
.align 8
_n3bYJ:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	240
	.byte	63


==================== Asm code ====================
2018-03-16 15:57:51.650990766 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3bYk_info:
	.quad	_c3bYk
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.654169817 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.rationalToDouble5_closure
.type GHC.Float.rationalToDouble5_closure, @object
GHC.Float.rationalToDouble5_closure:
	.quad	GHC.Float.rationalToDouble5_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:51.655103063 UTC

.section .text
.align 8
.globl GHC.Float.rationalToDouble5_entry
.type GHC.Float.rationalToDouble5_entry, @object
GHC.Float.rationalToDouble5_entry:
_c3bYV:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bYW
_c3bYX:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c3bYU
_c3bYT:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rsi
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%r14
	addq $-16,%rbp
	jmp *GHC.Integer.Type.mkInteger_entry@gotpcrel(%rip)
_c3bYW:
	jmp *-16(%r13)
_c3bYU:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Float.rationalToDouble5_entry, .-GHC.Float.rationalToDouble5_entry


==================== Asm code ====================
2018-03-16 15:57:51.655814576 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.rationalToDouble5_info
.type GHC.Float.rationalToDouble5_info, @object
GHC.Float.rationalToDouble5_info:
	.quad	GHC.Float.rationalToDouble5_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:57:51.659199143 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.rationalToDouble1_closure
.type GHC.Float.rationalToDouble1_closure, @object
GHC.Float.rationalToDouble1_closure:
	.quad	GHC.Float.rationalToDouble1_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:51.660323161 UTC

.section .text
.align 8
.globl GHC.Float.rationalToDouble1_entry
.type GHC.Float.rationalToDouble1_entry, @object
GHC.Float.rationalToDouble1_entry:
_c3bZg:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bZj
_c3bZk:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3bZm
_c3bZl:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c3bZd
_c3bZc:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	movq GHC.Types.D#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	xorpd %xmm0,%xmm0
	xorpd %xmm1,%xmm1
	divsd %xmm0,%xmm1
	movsd %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3bZm:
	movq $16,904(%r13)
_c3bZj:
	jmp *-16(%r13)
_c3bZd:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Float.rationalToDouble1_entry, .-GHC.Float.rationalToDouble1_entry


==================== Asm code ====================
2018-03-16 15:57:51.661187053 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.rationalToDouble1_info
.type GHC.Float.rationalToDouble1_info, @object
GHC.Float.rationalToDouble1_info:
	.quad	GHC.Float.rationalToDouble1_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:57:51.66421182 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.rationalToDouble2_closure
.type GHC.Float.rationalToDouble2_closure, @object
GHC.Float.rationalToDouble2_closure:
	.quad	GHC.Float.rationalToDouble2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:51.665220138 UTC

.section .text
.align 8
.globl GHC.Float.rationalToDouble2_entry
.type GHC.Float.rationalToDouble2_entry, @object
GHC.Float.rationalToDouble2_entry:
_c3bZI:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3bZL
_c3bZM:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3bZO
_c3bZN:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c3bZF
_c3bZE:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	movq GHC.Types.D#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	xorpd %xmm0,%xmm0
	movsd _n3bZV(%rip),%xmm1
	divsd %xmm0,%xmm1
	movsd %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3bZO:
	movq $16,904(%r13)
_c3bZL:
	jmp *-16(%r13)
_c3bZF:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Float.rationalToDouble2_entry, .-GHC.Float.rationalToDouble2_entry
.section .rodata
.align 8
.align 8
_n3bZV:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	240
	.byte	191


==================== Asm code ====================
2018-03-16 15:57:51.666057893 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.rationalToDouble2_info
.type GHC.Float.rationalToDouble2_info, @object
GHC.Float.rationalToDouble2_info:
	.quad	GHC.Float.rationalToDouble2_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:57:51.668947543 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.rationalToDouble3_closure
.type GHC.Float.rationalToDouble3_closure, @object
GHC.Float.rationalToDouble3_closure:
	.quad	GHC.Float.rationalToDouble3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:51.669971196 UTC

.section .text
.align 8
.globl GHC.Float.rationalToDouble3_entry
.type GHC.Float.rationalToDouble3_entry, @object
GHC.Float.rationalToDouble3_entry:
_c3c0b:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3c0e
_c3c0f:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3c0h
_c3c0g:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c3c08
_c3c07:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	movq GHC.Types.D#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	xorpd %xmm0,%xmm0
	movsd _n3c0o(%rip),%xmm1
	divsd %xmm0,%xmm1
	movsd %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3c0h:
	movq $16,904(%r13)
_c3c0e:
	jmp *-16(%r13)
_c3c08:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Float.rationalToDouble3_entry, .-GHC.Float.rationalToDouble3_entry
.section .rodata
.align 8
.align 8
_n3c0o:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	240
	.byte	63


==================== Asm code ====================
2018-03-16 15:57:51.670771056 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.rationalToDouble3_info
.type GHC.Float.rationalToDouble3_info, @object
GHC.Float.rationalToDouble3_info:
	.quad	GHC.Float.rationalToDouble3_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:57:51.672472469 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.rationalToDouble4_closure
.type GHC.Float.rationalToDouble4_closure, @object
GHC.Float.rationalToDouble4_closure:
	.quad	GHC.Types.D#_con_info
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0


==================== Asm code ====================
2018-03-16 15:57:51.678734313 UTC

.section .data
.align 8
.align 1
$w$j_r2Upx_closure:
	.quad	$w$j_r2Upx_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:51.679609795 UTC

.section .text
.align 8
$w$j_r2Upx_entry:
_c3c0G:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3c0H
_c3c0I:
	leaq block_c3c0B_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %rsi,%rax
	leaq GHC.Float.rationalToDouble5_closure(%rip),%rsi
	movq %r14,%rbx
	movq %rdi,%r14
	movq %rbx,-24(%rbp)
	movq %rax,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-32,%rbp
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
_c3c0H:
	leaq $w$j_r2Upx_closure(%rip),%rbx
	jmp *-8(%r13)
	.size $w$j_r2Upx_entry, .-$w$j_r2Upx_entry


==================== Asm code ====================
2018-03-16 15:57:51.680271841 UTC

.section .data.rel.ro
.align 8
.align 1
$w$j_r2Upx_info:
	.quad	$w$j_r2Upx_entry
	.quad	0
	.quad	133143986190
	.quad	12884901907
	.quad	S3bQP_srt+8


==================== Asm code ====================
2018-03-16 15:57:51.681060563 UTC

.section .text
.align 8
_c3c0B:
_c3c0B:
	cmpq $1,%rbx
	je _c3c0F
_c3c0E:
	leaq block_c3c0L_info(%rip),%rax
	movq %rax,(%rbp)
	movq 24(%rbp),%rsi
	movq 16(%rbp),%r14
	jmp *GHC.Integer.Type.quotRemInteger_entry@gotpcrel(%rip)
_c3c0F:
	movq GHC.Real.divZeroError_closure@gotpcrel(%rip),%rbx
	addq $32,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c3c0B, .-_c3c0B


==================== Asm code ====================
2018-03-16 15:57:51.681811568 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3c0B_info:
	.quad	_c3c0B
	.quad	67
	.quad	47244640286
	.quad	S3bQP_srt+8


==================== Asm code ====================
2018-03-16 15:57:51.682432144 UTC

.section .text
.align 8
_c3c0L:
_c3c0L:
	leaq block_c3c0N_info(%rip),%rax
	movq %rax,(%rbp)
	movl $1,%esi
	movq %rbx,16(%rbp)
	jmp *GHC.Integer.Type.shiftLInteger_entry@gotpcrel(%rip)
	.size _c3c0L, .-_c3c0L


==================== Asm code ====================
2018-03-16 15:57:51.683037085 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3c0L_info:
	.quad	_c3c0L
	.quad	195
	.quad	38654705694
	.quad	S3bQP_srt+8


==================== Asm code ====================
2018-03-16 15:57:51.683658244 UTC

.section .text
.align 8
_c3c0N:
_c3c0N:
	leaq block_c3c0T_info(%rip),%rax
	movq %rax,(%rbp)
	movq 24(%rbp),%rsi
	movq %rbx,%r14
	jmp *GHC.Integer.Type.compareInteger_entry@gotpcrel(%rip)
	.size _c3c0N, .-_c3c0N


==================== Asm code ====================
2018-03-16 15:57:51.684244512 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3c0N_info:
	.quad	_c3c0N
	.quad	67
	.quad	38654705694
	.quad	S3bQP_srt+8


==================== Asm code ====================
2018-03-16 15:57:51.68501663 UTC

.section .text
.align 8
_c3c0T:
_c3c0T:
	movq 16(%rbp),%rax
	andl $7,%ebx
	cmpq $3,%rbx
	jb _u3c1H
_c3c1y:
	leaq block_c3c1w_info(%rip),%rbx
	movq %rbx,(%rbp)
	leaq GHC.Float.$fRealDouble1_closure(%rip),%rsi
	movq %rax,%r14
	jmp *GHC.Integer.Type.plusInteger_entry@gotpcrel(%rip)
_u3c1I:
	addq $8,%rbp
	jmp _c3c1q
_u3c1H:
	cmpq $2,%rbx
	jb _u3c1I
_c3c15:
	leaq block_c3c13_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%r14
	jmp *GHC.Integer.Type.integerToInt_entry@gotpcrel(%rip)
	.size _c3c0T, .-_c3c0T


==================== Asm code ====================
2018-03-16 15:57:51.686010985 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3c0T_info:
	.quad	_c3c0T
	.quad	323
	.quad	38654705694
	.quad	S3bQP_srt+8


==================== Asm code ====================
2018-03-16 15:57:51.686723194 UTC

.section .text
.align 8
_c3c13:
_c3c13:
	testb $1,%bl
	je _u3c1J
_c3c1i:
	leaq block_c3c1g_info(%rip),%rax
	movq %rax,(%rbp)
	leaq GHC.Float.$fRealDouble1_closure(%rip),%rsi
	movq 16(%rbp),%r14
	jmp *GHC.Integer.Type.plusInteger_entry@gotpcrel(%rip)
_u3c1J:
	addq $8,%rbp
	jmp _c3c1q
	.size _c3c13, .-_c3c13


==================== Asm code ====================
2018-03-16 15:57:51.687343853 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3c13_info:
	.quad	_c3c13
	.quad	323
	.quad	38654705694
	.quad	S3bQP_srt+8


==================== Asm code ====================
2018-03-16 15:57:51.688045909 UTC

.section .text
.align 8
_c3c1q:
_c3c1q:
	movq (%rbp),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp *GHC.Integer.Type.encodeDoubleInteger_entry@gotpcrel(%rip)
	.size _c3c1q, .-_c3c1q


==================== Asm code ====================
2018-03-16 15:57:51.688709339 UTC

.section .text
.align 8
_c3c1g:
_c3c1g:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $32,%rbp
	jmp *GHC.Integer.Type.encodeDoubleInteger_entry@gotpcrel(%rip)
	.size _c3c1g, .-_c3c1g


==================== Asm code ====================
2018-03-16 15:57:51.689368418 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3c1g_info:
	.quad	_c3c1g
	.quad	451
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.690030351 UTC

.section .text
.align 8
_c3c1w:
_c3c1w:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $32,%rbp
	jmp *GHC.Integer.Type.encodeDoubleInteger_entry@gotpcrel(%rip)
	.size _c3c1w, .-_c3c1w


==================== Asm code ====================
2018-03-16 15:57:51.690674524 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3c1w_info:
	.quad	_c3c1w
	.quad	451
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.715286564 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$w$sfromRat''_closure
.type GHC.Float.$w$sfromRat''_closure, @object
GHC.Float.$w$sfromRat''_closure:
	.quad	GHC.Float.$w$sfromRat''_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:51.716100502 UTC

.section .text
.align 8
.globl GHC.Float.$w$sfromRat''_slow
.type GHC.Float.$w$sfromRat''_slow, @object
GHC.Float.$w$sfromRat''_slow:
_c3c2n:
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $32,%rbp
	jmp GHC.Float.$w$sfromRat''_entry
	.size GHC.Float.$w$sfromRat''_slow, .-GHC.Float.$w$sfromRat''_slow


==================== Asm code ====================
2018-03-16 15:57:51.716988481 UTC

.section .text
.align 8
.globl GHC.Float.$w$sfromRat''_entry
.type GHC.Float.$w$sfromRat''_entry, @object
GHC.Float.$w$sfromRat''_entry:
_c3c2A:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c3c2B
_c3c2C:
	leaq block_c3c2t_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %r8,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _c3c2t
_c3c2u:
	movq (%rbx),%rax
	jmp *(%rax)
_c3c2B:
	leaq GHC.Float.$w$sfromRat''_closure(%rip),%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	jmp *-8(%r13)
	.size GHC.Float.$w$sfromRat''_entry, .-GHC.Float.$w$sfromRat''_entry


==================== Asm code ====================
2018-03-16 15:57:51.717791942 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$w$sfromRat''_info
.type GHC.Float.$w$sfromRat''_info, @object
GHC.Float.$w$sfromRat''_info:
	.quad	GHC.Float.$w$sfromRat''_entry
	.quad	0
	.quad	4367981740046
	.quad	17179869184
	.quad	S3bQP_srt+8
	.quad	196
	.quad	GHC.Float.$w$sfromRat''_slow


==================== Asm code ====================
2018-03-16 15:57:51.718526053 UTC

.section .text
.align 8
_c3c2t:
_c3c2t:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c3c2y
_c3c2x:
	movq $1,-8(%rbp)
	movq $-1,(%rbp)
	addq $-8,%rbp
	jmp _s3aDy
_c3c2y:
	leaq block_c3c9L_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rsi
	xorl %r14d,%r14d
	jmp *GHC.Integer.Logarithms.Internals.integerLog2IsPowerOf2#_couldBe_entry@gotpcrel(%rip)
	.size _c3c2t, .-_c3c2t


==================== Asm code ====================
2018-03-16 15:57:51.719982771 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3c2t_info:
	.quad	_c3c2t
	.quad	196
	.quad	2168958484510
	.quad	S3bQP_srt+8


==================== Asm code ====================
2018-03-16 15:57:51.720740399 UTC

.section .text
.align 8
_c3c9L:
_c3c9L:
	movq %rbx,(%rbp)
	movq %r14,-8(%rbp)
	addq $-8,%rbp
	jmp _s3aDy
	.size _c3c9L, .-_c3c9L


==================== Asm code ====================
2018-03-16 15:57:51.721457015 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3c9L_info:
	.quad	_c3c9L
	.quad	196
	.quad	2168958484510
	.quad	S3bQP_srt+8


==================== Asm code ====================
2018-03-16 15:57:51.722270359 UTC

.section .text
.align 8
_s3aDy:
_s3aDy:
	movq 32(%rbp),%rax
	cmpq $0,(%rbp)
	je _c3c9p
_c3c4G:
	leaq block_c3c2L_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c3c2L
_c3c4H:
	movq (%rbx),%rax
	jmp *(%rax)
_c3c9p:
	leaq block_c3c5g_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c3c5g
_c3c9q:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _s3aDy, .-_s3aDy


==================== Asm code ====================
2018-03-16 15:57:51.72308623 UTC

.section .text
.align 8
_c3c5g:
_c3c5g:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c3c9B
_c3c9w:
	movq $-1,40(%rbp)
	addq $8,%rbp
	jmp _s3aEc
_c3c9B:
	leaq block_c3c9z_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rsi
	xorl %r14d,%r14d
	jmp *GHC.Integer.Logarithms.Internals.integerLog2#_step_entry@gotpcrel(%rip)
	.size _c3c5g, .-_c3c5g


==================== Asm code ====================
2018-03-16 15:57:51.723716714 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3c5g_info:
	.quad	_c3c5g
	.quad	1477
	.quad	2100239007774
	.quad	S3bQP_srt+8


==================== Asm code ====================
2018-03-16 15:57:51.724330678 UTC

.section .text
.align 8
_c3c9z:
_c3c9z:
	movq %rbx,40(%rbp)
	addq $8,%rbp
	jmp _s3aEc
	.size _c3c9z, .-_c3c9z


==================== Asm code ====================
2018-03-16 15:57:51.724911561 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3c9z_info:
	.quad	_c3c9z
	.quad	1477
	.quad	1550483193886
	.quad	S3bQP_srt+8


==================== Asm code ====================
2018-03-16 15:57:51.726385157 UTC

.section .text
.align 8
_s3aEc:
_s3aEc:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rbx
	movq 24(%rbp),%rcx
	movq (%rbp),%rdx
	movq 32(%rbp),%rsi
	movq %rdx,%rdi
	addq %rax,%rdi
	decq %rdi
	cmpq %rdi,%rsi
	jl _c3c7D
_c3c9o:
	cmpq %rbx,%rsi
	jge _c3c9m
_c3c9n:
	movq %rdx,%rsi
	negq %rsi
	movq %rcx,%r14
	addq $40,%rbp
	jmp *GHC.Integer.Type.encodeDoubleInteger_entry@gotpcrel(%rip)
_c3c6b:
	leaq 1(%rsi),%rax
	cmpq %rax,%rdx
	jle _c3c5O
_u3caI:
	addq $40,%rbp
	jmp _c3c69
_c3c9m:
	leaq 1(%rsi),%rax
	subq %rbx,%rax
	negq %rax
	testq %rax,%rax
	jl _c3c99
_c3c9g:
	leaq block_c3c9f_info(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,%rsi
	movq %rcx,%r14
	addq $-8,%rbp
	jmp *GHC.Integer.Type.shiftLInteger_entry@gotpcrel(%rip)
_c3c99:
	leaq block_c3c97_info(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,%rsi
	negq %rsi
	movq %rcx,%r14
	addq $-8,%rbp
	jmp *GHC.Integer.Type.shiftRInteger_entry@gotpcrel(%rip)
_c3c7D:
	movq %rax,%rdi
	subq %rbx,%rdi
	addq %rdi,%rdx
	testq %rdx,%rdx
	jg _c3c7A
_c3c7B:
	movq %rax,%rsi
	subq %rbx,%rsi
	subq %rdx,%rsi
	movq %rcx,%r14
	addq $40,%rbp
	jmp *GHC.Integer.Type.encodeDoubleInteger_entry@gotpcrel(%rip)
_c3c7A:
	cmpq %rsi,%rdx
	jg _c3c6b
_c3c7y:
	movq %rdx,%rax
	negq %rax
	testq %rax,%rax
	jl _c3c7m
_c3c7t:
	leaq block_c3c7s_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rsi
	movq %rcx,%r14
	movq %rdx,32(%rbp)
	jmp *GHC.Integer.Type.shiftLInteger_entry@gotpcrel(%rip)
_c3c7m:
	leaq block_c3c7k_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rsi
	negq %rsi
	movq %rcx,%r14
	movq %rdx,32(%rbp)
	jmp *GHC.Integer.Type.shiftRInteger_entry@gotpcrel(%rip)
_c3c5O:
	leaq block_c3c5M_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rcx,%rbx
	testb $7,%bl
	jne _c3c5M
_c3c5P:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _s3aEc, .-_s3aEc


==================== Asm code ====================
2018-03-16 15:57:51.727593452 UTC

.section .text
.align 8
_c3c5M:
_c3c5M:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c3c60
_c3c5V:
	movq 8(%rbp),%rsi
	subq 16(%rbp),%rsi
	leaq GHC.Float.$fRealDouble1_closure(%rip),%r14
	addq $40,%rbp
	jmp *GHC.Integer.Type.encodeDoubleInteger_entry@gotpcrel(%rip)
_c3c60:
	leaq block_c3c5Y_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rsi
	xorl %r14d,%r14d
	jmp *GHC.Integer.Logarithms.Internals.integerLog2IsPowerOf2#_couldBe_entry@gotpcrel(%rip)
	.size _c3c5M, .-_c3c5M


==================== Asm code ====================
2018-03-16 15:57:51.728271978 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3c5M_info:
	.quad	_c3c5M
	.quad	964
	.quad	141733920798
	.quad	S3bQP_srt+32


==================== Asm code ====================
2018-03-16 15:57:51.728926667 UTC

.section .text
.align 8
_c3c5Y:
_c3c5Y:
	testq %r14,%r14
	je _u3caJ
_c3c67:
	movq 8(%rbp),%rsi
	subq 16(%rbp),%rsi
	leaq GHC.Float.$fRealDouble1_closure(%rip),%r14
	addq $40,%rbp
	jmp *GHC.Integer.Type.encodeDoubleInteger_entry@gotpcrel(%rip)
_u3caJ:
	addq $40,%rbp
	jmp _c3c69
	.size _c3c5Y, .-_c3c5Y


==================== Asm code ====================
2018-03-16 15:57:51.729657677 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3c5Y_info:
	.quad	_c3c5Y
	.quad	964
	.quad	4294967326
	.quad	S3bQP_srt+32


==================== Asm code ====================
2018-03-16 15:57:51.730284282 UTC

.section .text
.align 8
_c3c69:
_c3c69:
	xorpd %xmm1,%xmm1
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3c69, .-_c3c69


==================== Asm code ====================
2018-03-16 15:57:51.730980167 UTC

.section .text
.align 8
_c3c7k:
_c3c7k:
	movq %rbx,(%rbp)
	jmp _s3aEw
	.size _c3c7k, .-_c3c7k


==================== Asm code ====================
2018-03-16 15:57:51.731575771 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3c7k_info:
	.quad	_c3c7k
	.quad	708
	.quad	313532612638
	.quad	S3bQP_srt+8


==================== Asm code ====================
2018-03-16 15:57:51.732204583 UTC

.section .text
.align 8
_c3c7s:
_c3c7s:
	movq %rbx,(%rbp)
	jmp _s3aEw
	.size _c3c7s, .-_c3c7s


==================== Asm code ====================
2018-03-16 15:57:51.732741493 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3c7s_info:
	.quad	_c3c7s
	.quad	708
	.quad	313532612638
	.quad	S3bQP_srt+8


==================== Asm code ====================
2018-03-16 15:57:51.733506501 UTC

.section .text
.align 8
_s3aEw:
_s3aEw:
	leaq block_c3c6p_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 32(%rbp),%rax
	leaq -1(%rax),%rsi
	movq 24(%rbp),%r14
	addq $-8,%rbp
	jmp *GHC.Integer.Logarithms.Internals.roundingMode#_entry@gotpcrel(%rip)
	.size _s3aEw, .-_s3aEw


==================== Asm code ====================
2018-03-16 15:57:51.734360469 UTC

.section .text
.align 8
_c3c6p:
_c3c6p:
	movq 16(%rbp),%rax
	movq 24(%rbp),%rcx
	movq 8(%rbp),%rdx
	testq %rbx,%rbx
	je _c3c6H
_u3cau:
	cmpq $1,%rbx
	je _c3c6M
_c3c6z:
	leaq block_c3c6w_info(%rip),%rbx
	movq %rbx,32(%rbp)
	leaq GHC.Float.$fRealDouble1_closure(%rip),%rsi
	movq %rdx,%r14
	subq %rcx,%rax
	movq %rax,40(%rbp)
	addq $32,%rbp
	jmp *GHC.Integer.Type.plusInteger_entry@gotpcrel(%rip)
_c3c6M:
	leaq block_c3c6K_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rdx,%r14
	jmp *GHC.Integer.Type.integerToInt_entry@gotpcrel(%rip)
_c3c6H:
	movq %rax,%rsi
	subq %rcx,%rsi
	movq %rdx,%r14
	addq $48,%rbp
	jmp *GHC.Integer.Type.encodeDoubleInteger_entry@gotpcrel(%rip)
	.size _c3c6p, .-_c3c6p


==================== Asm code ====================
2018-03-16 15:57:51.7350733 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3c6p_info:
	.quad	_c3c6p
	.quad	1925
	.quad	38654705694
	.quad	S3bQP_srt+8


==================== Asm code ====================
2018-03-16 15:57:51.735826541 UTC

.section .text
.align 8
_c3c6K:
_c3c6K:
	movq 16(%rbp),%rax
	movq 24(%rbp),%rcx
	movq 8(%rbp),%rdx
	testb $1,%bl
	je _c3c7a
_c3c72:
	leaq block_c3c70_info(%rip),%rbx
	movq %rbx,32(%rbp)
	leaq GHC.Float.$fRealDouble1_closure(%rip),%rsi
	movq %rdx,%r14
	subq %rcx,%rax
	movq %rax,40(%rbp)
	addq $32,%rbp
	jmp *GHC.Integer.Type.plusInteger_entry@gotpcrel(%rip)
_c3c7a:
	movq %rax,%rsi
	subq %rcx,%rsi
	movq %rdx,%r14
	addq $48,%rbp
	jmp *GHC.Integer.Type.encodeDoubleInteger_entry@gotpcrel(%rip)
	.size _c3c6K, .-_c3c6K


==================== Asm code ====================
2018-03-16 15:57:51.73651806 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3c6K_info:
	.quad	_c3c6K
	.quad	1925
	.quad	38654705694
	.quad	S3bQP_srt+8


==================== Asm code ====================
2018-03-16 15:57:51.737123879 UTC

.section .text
.align 8
_c3c70:
_c3c70:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $16,%rbp
	jmp *GHC.Integer.Type.encodeDoubleInteger_entry@gotpcrel(%rip)
	.size _c3c70, .-_c3c70


==================== Asm code ====================
2018-03-16 15:57:51.737789609 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3c70_info:
	.quad	_c3c70
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.738390517 UTC

.section .text
.align 8
_c3c6w:
_c3c6w:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $16,%rbp
	jmp *GHC.Integer.Type.encodeDoubleInteger_entry@gotpcrel(%rip)
	.size _c3c6w, .-_c3c6w


==================== Asm code ====================
2018-03-16 15:57:51.738973348 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3c6w_info:
	.quad	_c3c6w
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.739596262 UTC

.section .text
.align 8
_c3c97:
_c3c97:
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp _s3aES
	.size _c3c97, .-_c3c97


==================== Asm code ====================
2018-03-16 15:57:51.740191207 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3c97_info:
	.quad	_c3c97
	.quad	1477
	.quad	313532612638
	.quad	S3bQP_srt+8


==================== Asm code ====================
2018-03-16 15:57:51.740896762 UTC

.section .text
.align 8
_c3c9f:
_c3c9f:
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp _s3aES
	.size _c3c9f, .-_c3c9f


==================== Asm code ====================
2018-03-16 15:57:51.741573407 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3c9f_info:
	.quad	_c3c9f
	.quad	1477
	.quad	313532612638
	.quad	S3bQP_srt+8


==================== Asm code ====================
2018-03-16 15:57:51.742280314 UTC

.section .text
.align 8
_s3aES:
_s3aES:
	movq 32(%rbp),%rax
	subq 16(%rbp),%rax
	leaq block_c3c80_info(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,%rsi
	movq 24(%rbp),%r14
	addq $-8,%rbp
	jmp *GHC.Integer.Logarithms.Internals.roundingMode#_entry@gotpcrel(%rip)
	.size _s3aES, .-_s3aES


==================== Asm code ====================
2018-03-16 15:57:51.743223305 UTC

.section .text
.align 8
_c3c80:
_c3c80:
	movq 24(%rbp),%rax
	movq 8(%rbp),%rcx
	movq 40(%rbp),%rdx
	movq 16(%rbp),%rsi
	testq %rbx,%rbx
	je _c3c8I
_u3cav:
	cmpq $2,%rbx
	je _c3c8W
_c3c87:
	leaq block_c3c84_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rsi,%r14
	jmp *GHC.Integer.Type.integerToInt_entry@gotpcrel(%rip)
_c3c8W:
	leaq block_c3c8U_info(%rip),%rbx
	movq %rbx,32(%rbp)
	movq %rsi,%rbx
	leaq GHC.Float.$fRealDouble1_closure(%rip),%rsi
	movq %rbx,%r14
	movl $1,%ebx
	subq %rax,%rbx
	subq %rcx,%rbx
	addq %rbx,%rdx
	movq %rdx,40(%rbp)
	addq $32,%rbp
	jmp *GHC.Integer.Type.plusInteger_entry@gotpcrel(%rip)
_c3c8I:
	movl $1,%edi
	subq %rax,%rdi
	subq %rcx,%rdi
	movq %rsi,%rax
	movq %rdx,%rsi
	addq %rdi,%rsi
	movq %rax,%r14
	addq $48,%rbp
	jmp *GHC.Integer.Type.encodeDoubleInteger_entry@gotpcrel(%rip)
	.size _c3c80, .-_c3c80


==================== Asm code ====================
2018-03-16 15:57:51.743983154 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3c80_info:
	.quad	_c3c80
	.quad	1861
	.quad	38654705694
	.quad	S3bQP_srt+8


==================== Asm code ====================
2018-03-16 15:57:51.744621513 UTC

.section .text
.align 8
_c3c8U:
_c3c8U:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $16,%rbp
	jmp *GHC.Integer.Type.encodeDoubleInteger_entry@gotpcrel(%rip)
	.size _c3c8U, .-_c3c8U


==================== Asm code ====================
2018-03-16 15:57:51.745212657 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3c8U_info:
	.quad	_c3c8U
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.746108582 UTC

.section .text
.align 8
_c3c84:
_c3c84:
	movq 24(%rbp),%rax
	movq 8(%rbp),%rcx
	movq 40(%rbp),%rdx
	movq 16(%rbp),%rsi
	testb $1,%bl
	je _c3c8B
_c3c8t:
	leaq block_c3c8r_info(%rip),%rbx
	movq %rbx,32(%rbp)
	movq %rsi,%rbx
	leaq GHC.Float.$fRealDouble1_closure(%rip),%rsi
	movq %rbx,%r14
	movl $1,%ebx
	subq %rax,%rbx
	subq %rcx,%rbx
	addq %rbx,%rdx
	movq %rdx,40(%rbp)
	addq $32,%rbp
	jmp *GHC.Integer.Type.plusInteger_entry@gotpcrel(%rip)
_c3c8B:
	movl $1,%ebx
	subq %rax,%rbx
	subq %rcx,%rbx
	movq %rsi,%rax
	movq %rdx,%rsi
	addq %rbx,%rsi
	movq %rax,%r14
	addq $48,%rbp
	jmp *GHC.Integer.Type.encodeDoubleInteger_entry@gotpcrel(%rip)
	.size _c3c84, .-_c3c84


==================== Asm code ====================
2018-03-16 15:57:51.746815809 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3c84_info:
	.quad	_c3c84
	.quad	1861
	.quad	38654705694
	.quad	S3bQP_srt+8


==================== Asm code ====================
2018-03-16 15:57:51.747476414 UTC

.section .text
.align 8
_c3c8r:
_c3c8r:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $16,%rbp
	jmp *GHC.Integer.Type.encodeDoubleInteger_entry@gotpcrel(%rip)
	.size _c3c8r, .-_c3c8r


==================== Asm code ====================
2018-03-16 15:57:51.748044752 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3c8r_info:
	.quad	_c3c8r
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.748822622 UTC

.section .text
.align 8
_c3c2L:
_c3c2L:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c3c50
_c3c4V:
	movq $-1,%rax
	subq 8(%rbp),%rax
	cmpq 16(%rbp),%rax
	jl _u3cay
_c3c4T:
	movq %rax,16(%rbp)
	addq $16,%rbp
	jmp _s3aDC
_u3cay:
	addq $16,%rbp
	jmp _c3c5b
_c3c50:
	leaq block_c3c4Y_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rsi
	xorl %r14d,%r14d
	jmp *GHC.Integer.Logarithms.Internals.integerLog2#_step_entry@gotpcrel(%rip)
	.size _c3c2L, .-_c3c2L


==================== Asm code ====================
2018-03-16 15:57:51.750000036 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3c2L_info:
	.quad	_c3c2L
	.quad	453
	.quad	47244640286
	.quad	S3bQP_srt+40


==================== Asm code ====================
2018-03-16 15:57:51.75058693 UTC

.section .text
.align 8
_c3c4Y:
_c3c4Y:
	subq 8(%rbp),%rbx
	cmpq 16(%rbp),%rbx
	jl _u3caA
_c3c5c:
	movq %rbx,16(%rbp)
	addq $16,%rbp
	jmp _s3aDC
_u3caA:
	addq $16,%rbp
	jmp _c3c5b
	.size _c3c4Y, .-_c3c4Y


==================== Asm code ====================
2018-03-16 15:57:51.75181075 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3c4Y_info:
	.quad	_c3c4Y
	.quad	453
	.quad	12884901918
	.quad	S3bQP_srt+40


==================== Asm code ====================
2018-03-16 15:57:51.75246657 UTC

.section .text
.align 8
_c3c5b:
_c3c5b:
	movq (%rbp),%rax
	movq %rax,(%rbp)
	jmp _s3aDC
	.size _c3c5b, .-_c3c5b


==================== Asm code ====================
2018-03-16 15:57:51.753485639 UTC

.section .text
.align 8
_s3aDC:
_s3aDC:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rbx
	movq (%rbp),%rcx
	cmpq %rax,%rcx
	jge _c3c4h
_c3c4y:
	subq %rcx,%rax
	testq %rax,%rax
	jl _c3c4u
_c3c4x:
	leaq block_c3c4w_info(%rip),%rcx
	movq %rcx,-8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $-8,%rbp
	jmp *GHC.Integer.Type.shiftLInteger_entry@gotpcrel(%rip)
_c3c4u:
	leaq block_c3c4w_info(%rip),%rcx
	movq %rcx,-8(%rbp)
	movq %rax,%rsi
	negq %rsi
	movq %rbx,%r14
	addq $-8,%rbp
	jmp *GHC.Integer.Type.shiftRInteger_entry@gotpcrel(%rip)
_c3c4f:
	movq %rbx,24(%rbp)
	movq %rdx,16(%rbp)
	jmp _s3aDE
_c3c4h:
	movq 24(%rbp),%rdx
	cmpq %rax,%rcx
	je _c3c4f
_c3c48:
	subq %rax,%rcx
	testq %rcx,%rcx
	jl _c3c43
_c3c46:
	leaq block_c3c45_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rcx,%rsi
	movq %rdx,%r14
	addq $-8,%rbp
	jmp *GHC.Integer.Type.shiftLInteger_entry@gotpcrel(%rip)
_c3c43:
	leaq block_c3c45_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rcx,%rsi
	negq %rsi
	movq %rdx,%r14
	addq $-8,%rbp
	jmp *GHC.Integer.Type.shiftRInteger_entry@gotpcrel(%rip)
	.size _s3aDC, .-_s3aDC


==================== Asm code ====================
2018-03-16 15:57:51.754414813 UTC

.section .text
.align 8
_c3c45:
_c3c45:
	movq 24(%rbp),%rax
	movq %rbx,24(%rbp)
	movq %rax,32(%rbp)
	addq $8,%rbp
	jmp _s3aDE
	.size _c3c45, .-_c3c45


==================== Asm code ====================
2018-03-16 15:57:51.755013238 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3c45_info:
	.quad	_c3c45
	.quad	708
	.quad	12884901918
	.quad	S3bQP_srt+40


==================== Asm code ====================
2018-03-16 15:57:51.755658762 UTC

.section .text
.align 8
_c3c4w:
_c3c4w:
	movq 32(%rbp),%rax
	movq %rbx,32(%rbp)
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp _s3aDE
	.size _c3c4w, .-_c3c4w


==================== Asm code ====================
2018-03-16 15:57:51.75620814 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3c4w_info:
	.quad	_c3c4w
	.quad	452
	.quad	12884901918
	.quad	S3bQP_srt+40


==================== Asm code ====================
2018-03-16 15:57:51.756947066 UTC

.section .text
.align 8
_s3aDE:
_s3aDE:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rbx
	testq %rax,%rax
	jl _c3c34
_c3c3r:
	leaq block_c3c3q_info(%rip),%rcx
	movq %rcx,-8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $-8,%rbp
	jmp *GHC.Integer.Type.shiftLInteger_entry@gotpcrel(%rip)
_c3c34:
	leaq block_c3c32_info(%rip),%rcx
	movq %rcx,-8(%rbp)
	movq %rax,%rsi
	negq %rsi
	movq %rbx,%r14
	addq $-8,%rbp
	jmp *GHC.Integer.Type.shiftRInteger_entry@gotpcrel(%rip)
	.size _s3aDE, .-_s3aDE


==================== Asm code ====================
2018-03-16 15:57:51.757759508 UTC

.section .text
.align 8
_c3c32:
_c3c32:
	leaq block_c3c38_info(%rip),%rax
	movq %rax,(%rbp)
	movq 32(%rbp),%rsi
	movq %rbx,%r14
	jmp *GHC.Integer.Type.leInteger#_entry@gotpcrel(%rip)
	.size _c3c32, .-_c3c32


==================== Asm code ====================
2018-03-16 15:57:51.758359891 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3c32_info:
	.quad	_c3c32
	.quad	196
	.quad	4294967326
	.quad	S3bQP_srt+40


==================== Asm code ====================
2018-03-16 15:57:51.759079883 UTC

.section .text
.align 8
_c3c38:
_c3c38:
	movq 24(%rbp),%rax
	cmpq $1,%rbx
	je _c3c3k
_c3c3f:
	movq %rax,%rdi
	movq 32(%rbp),%rsi
	movq 8(%rbp),%r14
	subq 16(%rbp),%r14
	addq $40,%rbp
	jmp $w$j_r2Upx_entry
_c3c3k:
	leaq block_c3c3i_info(%rip),%rbx
	movq %rbx,(%rbp)
	movl $1,%esi
	movq %rax,%r14
	jmp *GHC.Integer.Type.shiftLInteger_entry@gotpcrel(%rip)
	.size _c3c38, .-_c3c38


==================== Asm code ====================
2018-03-16 15:57:51.759770205 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3c38_info:
	.quad	_c3c38
	.quad	196
	.quad	4294967326
	.quad	S3bQP_srt+40


==================== Asm code ====================
2018-03-16 15:57:51.760410841 UTC

.section .text
.align 8
_c3c3i:
_c3c3i:
	movq %rbx,%rdi
	movq 32(%rbp),%rsi
	movl $1,%eax
	subq 16(%rbp),%rax
	movq 8(%rbp),%r14
	addq %rax,%r14
	addq $40,%rbp
	jmp $w$j_r2Upx_entry
	.size _c3c3i, .-_c3c3i


==================== Asm code ====================
2018-03-16 15:57:51.761112288 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3c3i_info:
	.quad	_c3c3i
	.quad	452
	.quad	4294967326
	.quad	S3bQP_srt+40


==================== Asm code ====================
2018-03-16 15:57:51.761815193 UTC

.section .text
.align 8
_c3c3q:
_c3c3q:
	leaq block_c3c3v_info(%rip),%rax
	movq %rax,(%rbp)
	movq 32(%rbp),%rsi
	movq %rbx,%r14
	jmp *GHC.Integer.Type.leInteger#_entry@gotpcrel(%rip)
	.size _c3c3q, .-_c3c3q


==================== Asm code ====================
2018-03-16 15:57:51.762398655 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3c3q_info:
	.quad	_c3c3q
	.quad	196
	.quad	4294967326
	.quad	S3bQP_srt+40


==================== Asm code ====================
2018-03-16 15:57:51.763177432 UTC

.section .text
.align 8
_c3c3v:
_c3c3v:
	movq 24(%rbp),%rax
	cmpq $1,%rbx
	je _c3c3H
_c3c3C:
	movq %rax,%rdi
	movq 32(%rbp),%rsi
	movq 8(%rbp),%r14
	subq 16(%rbp),%r14
	addq $40,%rbp
	jmp $w$j_r2Upx_entry
_c3c3H:
	leaq block_c3c3F_info(%rip),%rbx
	movq %rbx,(%rbp)
	movl $1,%esi
	movq %rax,%r14
	jmp *GHC.Integer.Type.shiftLInteger_entry@gotpcrel(%rip)
	.size _c3c3v, .-_c3c3v


==================== Asm code ====================
2018-03-16 15:57:51.763800912 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3c3v_info:
	.quad	_c3c3v
	.quad	196
	.quad	4294967326
	.quad	S3bQP_srt+40


==================== Asm code ====================
2018-03-16 15:57:51.764452654 UTC

.section .text
.align 8
_c3c3F:
_c3c3F:
	movq %rbx,%rdi
	movq 32(%rbp),%rsi
	movl $1,%eax
	subq 16(%rbp),%rax
	movq 8(%rbp),%r14
	addq %rax,%r14
	addq $40,%rbp
	jmp $w$j_r2Upx_entry
	.size _c3c3F, .-_c3c3F


==================== Asm code ====================
2018-03-16 15:57:51.765045867 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3c3F_info:
	.quad	_c3c3F
	.quad	452
	.quad	4294967326
	.quad	S3bQP_srt+40


==================== Asm code ====================
2018-03-16 15:57:51.769428156 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.fromRat''_$sfromRat''1_closure
.type GHC.Float.fromRat''_$sfromRat''1_closure, @object
GHC.Float.fromRat''_$sfromRat''1_closure:
	.quad	GHC.Float.fromRat''_$sfromRat''1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:51.770338079 UTC

.section .text
.align 8
.globl GHC.Float.fromRat''_$sfromRat''1_entry
.type GHC.Float.fromRat''_$sfromRat''1_entry, @object
GHC.Float.fromRat''_$sfromRat''1_entry:
_c3cew:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3ceJ
_c3ceK:
	leaq block_c3cet_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %r14,%rbx
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c3cet
_c3ceu:
	movq (%rbx),%rax
	jmp *(%rax)
_c3ceJ:
	leaq GHC.Float.fromRat''_$sfromRat''1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.fromRat''_$sfromRat''1_entry, .-GHC.Float.fromRat''_$sfromRat''1_entry


==================== Asm code ====================
2018-03-16 15:57:51.771147964 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.fromRat''_$sfromRat''1_info
.type GHC.Float.fromRat''_$sfromRat''1_info, @object
GHC.Float.fromRat''_$sfromRat''1_info:
	.quad	GHC.Float.fromRat''_$sfromRat''1_entry
	.quad	0
	.quad	12884901902
	.quad	17179869208
	.quad	S3bQP_srt+80


==================== Asm code ====================
2018-03-16 15:57:51.77188988 UTC

.section .text
.align 8
_c3cet:
_c3cet:
	leaq block_c3cez_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c3cez
_c3ceA:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3cet, .-_c3cet


==================== Asm code ====================
2018-03-16 15:57:51.77248623 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cet_info:
	.quad	_c3cet
	.quad	3
	.quad	4294967326
	.quad	S3bQP_srt+80


==================== Asm code ====================
2018-03-16 15:57:51.773223492 UTC

.section .text
.align 8
_c3cez:
_c3cez:
	movq 24(%rbp),%rax
	leaq block_c3ceE_info(%rip),%rcx
	movq %rcx,24(%rbp)
	movq %rax,%r8
	movq 16(%rbp),%rdi
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Float.$w$sfromRat''_entry
	.size _c3cez, .-_c3cez


==================== Asm code ====================
2018-03-16 15:57:51.774028106 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cez_info:
	.quad	_c3cez
	.quad	67
	.quad	4294967326
	.quad	S3bQP_srt+80


==================== Asm code ====================
2018-03-16 15:57:51.775110124 UTC

.section .text
.align 8
_c3ceE:
_c3ceE:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3ceP
_c3ceO:
	movq GHC.Types.D#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movsd %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3ceP:
	movq $16,904(%r13)
	jmp *stg_gc_d1@gotpcrel(%rip)
	.size _c3ceE, .-_c3ceE


==================== Asm code ====================
2018-03-16 15:57:51.776069082 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3ceE_info:
	.quad	_c3ceE
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.78529318 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.rationalToDouble_closure
.type GHC.Float.rationalToDouble_closure, @object
GHC.Float.rationalToDouble_closure:
	.quad	GHC.Float.rationalToDouble_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:51.78620128 UTC

.section .text
.align 8
.globl GHC.Float.rationalToDouble_entry
.type GHC.Float.rationalToDouble_entry, @object
GHC.Float.rationalToDouble_entry:
_c3cfm:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3cfn
_c3cfo:
	leaq block_c3cfh_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rax
	leaq GHC.Float.rationalToDouble5_closure(%rip),%rsi
	movq %r14,%rbx
	movq %rax,%r14
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
_c3cfn:
	leaq GHC.Float.rationalToDouble_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.rationalToDouble_entry, .-GHC.Float.rationalToDouble_entry


==================== Asm code ====================
2018-03-16 15:57:51.786863193 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.rationalToDouble_info
.type GHC.Float.rationalToDouble_info, @object
GHC.Float.rationalToDouble_info:
	.quad	GHC.Float.rationalToDouble_entry
	.quad	0
	.quad	33539399614478
	.quad	8589934607
	.quad	S3bQP_srt+24


==================== Asm code ====================
2018-03-16 15:57:51.787627535 UTC

.section .text
.align 8
_c3cfh:
_c3cfh:
	movq 8(%rbp),%rax
	cmpq $1,%rbx
	je _c3cfl
_c3cfk:
	leaq block_c3cfr_info(%rip),%rbx
	movq %rbx,(%rbp)
	leaq GHC.Float.rationalToDouble5_closure(%rip),%rsi
	movq %rax,%r14
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
_c3cfl:
	leaq block_c3cge_info(%rip),%rbx
	movq %rbx,(%rbp)
	leaq GHC.Float.rationalToDouble5_closure(%rip),%rsi
	movq %rax,%r14
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
	.size _c3cfh, .-_c3cfh


==================== Asm code ====================
2018-03-16 15:57:51.788292503 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cfh_info:
	.quad	_c3cfh
	.quad	2
	.quad	31340376358942
	.quad	S3bQP_srt+24


==================== Asm code ====================
2018-03-16 15:57:51.789056596 UTC

.section .text
.align 8
_c3cge:
_c3cge:
	cmpq $1,%rbx
	je _c3cgA
_c3cgm:
	leaq block_c3cgj_info(%rip),%rax
	movq %rax,16(%rbp)
	leaq GHC.Float.rationalToDouble5_closure(%rip),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp *GHC.Integer.Type.ltInteger#_entry@gotpcrel(%rip)
_c3cgA:
	leaq GHC.Float.rationalToDouble1_closure(%rip),%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3cge, .-_c3cge


==================== Asm code ====================
2018-03-16 15:57:51.789896814 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cge_info:
	.quad	_c3cge
	.quad	130
	.quad	30790620545054
	.quad	S3bQP_srt+24


==================== Asm code ====================
2018-03-16 15:57:51.790768271 UTC

.section .text
.align 8
_c3cgj:
_c3cgj:
	cmpq $1,%rbx
	je _c3cgw
_c3cgs:
	leaq GHC.Float.rationalToDouble3_closure(%rip),%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c3cgw:
	leaq GHC.Float.rationalToDouble2_closure(%rip),%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3cgj, .-_c3cgj


==================== Asm code ====================
2018-03-16 15:57:51.791482972 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cgj_info:
	.quad	_c3cgj
	.quad	0
	.quad	12884901918
	.quad	S3bQP_srt+112


==================== Asm code ====================
2018-03-16 15:57:51.792807658 UTC

.section .text
.align 8
_c3cfr:
_c3cfr:
	cmpq $1,%rbx
	je _c3cgb
_c3cfz:
	leaq block_c3cfw_info(%rip),%rax
	movq %rax,(%rbp)
	leaq GHC.Float.rationalToDouble5_closure(%rip),%rsi
	movq 8(%rbp),%r14
	jmp *GHC.Integer.Type.ltInteger#_entry@gotpcrel(%rip)
_c3cgb:
	leaq GHC.Float.rationalToDouble4_closure+1(%rip),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3cfr, .-_c3cfr


==================== Asm code ====================
2018-03-16 15:57:51.793556611 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cfr_info:
	.quad	_c3cfr
	.quad	2
	.quad	554050781214
	.quad	S3bQP_srt+24


==================== Asm code ====================
2018-03-16 15:57:51.794335646 UTC

.section .text
.align 8
_c3cfw:
_c3cfw:
	movq 8(%rbp),%rax
	cmpq $1,%rbx
	je _c3cg3
_c3cfK:
	movq 16(%rbp),%rbx
	leaq block_c3cfD_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq %rbx,%r8
	movq %rax,%rdi
	movl $53,%esi
	movq $-1021,%r14
	addq $16,%rbp
	jmp GHC.Float.$w$sfromRat''_entry
_c3cg3:
	leaq block_c3cfQ_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.negateInteger_entry@gotpcrel(%rip)
	.size _c3cfw, .-_c3cfw


==================== Asm code ====================
2018-03-16 15:57:51.795013698 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cfw_info:
	.quad	_c3cfw
	.quad	2
	.quad	4294967326
	.quad	S3bQP_srt+80


==================== Asm code ====================
2018-03-16 15:57:51.795709999 UTC

.section .text
.align 8
_c3cfQ:
_c3cfQ:
	movq 8(%rbp),%rax
	leaq block_c3cfU_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%r8
	movq %rbx,%rdi
	movl $53,%esi
	movq $-1021,%r14
	addq $8,%rbp
	jmp GHC.Float.$w$sfromRat''_entry
	.size _c3cfQ, .-_c3cfQ


==================== Asm code ====================
2018-03-16 15:57:51.796310448 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cfQ_info:
	.quad	_c3cfQ
	.quad	1
	.quad	4294967326
	.quad	S3bQP_srt+80


==================== Asm code ====================
2018-03-16 15:57:51.797043182 UTC

.section .text
.align 8
_c3cfU:
_c3cfU:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3cg7
_c3cg6:
	movq GHC.Types.D#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movsd _n3chc(%rip),%xmm0
	xorpd %xmm0,%xmm1
	movsd %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3cg7:
	movq $16,904(%r13)
	jmp *stg_gc_d1@gotpcrel(%rip)
	.size _c3cfU, .-_c3cfU
.section .rodata
.align 8
.align 8
_n3chc:
	.quad	-9223372036854775808


==================== Asm code ====================
2018-03-16 15:57:51.797949462 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cfU_info:
	.quad	_c3cfU
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.798620046 UTC

.section .text
.align 8
_c3cfD:
_c3cfD:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3cfN
_c3cfM:
	movq GHC.Types.D#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movsd %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3cfN:
	movq $16,904(%r13)
	jmp *stg_gc_d1@gotpcrel(%rip)
	.size _c3cfD, .-_c3cfD


==================== Asm code ====================
2018-03-16 15:57:51.799213231 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cfD_info:
	.quad	_c3cfD
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.802367972 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fFractionalDouble_$cfromRational_closure
.type GHC.Float.$fFractionalDouble_$cfromRational_closure, @object
GHC.Float.$fFractionalDouble_$cfromRational_closure:
	.quad	GHC.Float.$fFractionalDouble_$cfromRational_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:51.803186581 UTC

.section .text
.align 8
.globl GHC.Float.$fFractionalDouble_$cfromRational_entry
.type GHC.Float.$fFractionalDouble_$cfromRational_entry, @object
GHC.Float.$fFractionalDouble_$cfromRational_entry:
_c3chu:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3chv
_c3chw:
	leaq block_c3chr_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3chr
_c3chs:
	movq (%rbx),%rax
	jmp *(%rax)
_c3chv:
	leaq GHC.Float.$fFractionalDouble_$cfromRational_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fFractionalDouble_$cfromRational_entry, .-GHC.Float.$fFractionalDouble_$cfromRational_entry


==================== Asm code ====================
2018-03-16 15:57:51.80386001 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fFractionalDouble_$cfromRational_info
.type GHC.Float.$fFractionalDouble_$cfromRational_info, @object
GHC.Float.$fFractionalDouble_$cfromRational_info:
	.quad	GHC.Float.$fFractionalDouble_$cfromRational_entry
	.quad	0
	.quad	73014444046
	.quad	4294967301
	.quad	S3bQP_srt+96


==================== Asm code ====================
2018-03-16 15:57:51.804490102 UTC

.section .text
.align 8
_c3chr:
_c3chr:
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.Float.rationalToDouble_entry
	.size _c3chr, .-_c3chr


==================== Asm code ====================
2018-03-16 15:57:51.805065073 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3chr_info:
	.quad	_c3chr
	.quad	0
	.quad	4294967326
	.quad	S3bQP_srt+96


==================== Asm code ====================
2018-03-16 15:57:51.80690546 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fFractionalDouble_closure
.type GHC.Float.$fFractionalDouble_closure, @object
GHC.Float.$fFractionalDouble_closure:
	.quad	GHC.Real.C:Fractional_con_info
	.quad	GHC.Float.$fNumDouble_closure+1
	.quad	GHC.Float.divideDouble_closure+2
	.quad	GHC.Float.$fFractionalDouble_$crecip_closure+1
	.quad	GHC.Float.$fFractionalDouble_$cfromRational_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:51.810155819 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fEnumDouble_$snumericEnumFromThen_closure
.type GHC.Float.$fEnumDouble_$snumericEnumFromThen_closure, @object
GHC.Float.$fEnumDouble_$snumericEnumFromThen_closure:
	.quad	GHC.Float.$fEnumDouble_$snumericEnumFromThen_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:51.811077383 UTC

.section .text
.align 8
.globl GHC.Float.$fEnumDouble_$snumericEnumFromThen_entry
.type GHC.Float.$fEnumDouble_$snumericEnumFromThen_entry, @object
GHC.Float.$fEnumDouble_$snumericEnumFromThen_entry:
_c3chT:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3chU
_c3chV:
	leaq block_c3chQ_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rsi,%rdi
	movq %r14,%rsi
	leaq GHC.Float.$fFractionalDouble_closure+1(%rip),%r14
	addq $-8,%rbp
	jmp *GHC.Real.$wnumericEnumFromThen_entry@gotpcrel(%rip)
_c3chU:
	leaq GHC.Float.$fEnumDouble_$snumericEnumFromThen_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fEnumDouble_$snumericEnumFromThen_entry, .-GHC.Float.$fEnumDouble_$snumericEnumFromThen_entry


==================== Asm code ====================
2018-03-16 15:57:51.811747769 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fEnumDouble_$snumericEnumFromThen_info
.type GHC.Float.$fEnumDouble_$snumericEnumFromThen_info, @object
GHC.Float.$fEnumDouble_$snumericEnumFromThen_info:
	.quad	GHC.Float.$fEnumDouble_$snumericEnumFromThen_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S3bQP_srt+136


==================== Asm code ====================
2018-03-16 15:57:51.812491668 UTC

.section .text
.align 8
_c3chQ:
_c3chQ:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3chY
_c3chX:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3chY:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c3chQ, .-_c3chQ


==================== Asm code ====================
2018-03-16 15:57:51.813096415 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3chQ_info:
	.quad	_c3chQ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.816750885 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fEnumDouble_$snumericEnumFrom_closure
.type GHC.Float.$fEnumDouble_$snumericEnumFrom_closure, @object
GHC.Float.$fEnumDouble_$snumericEnumFrom_closure:
	.quad	GHC.Float.$fEnumDouble_$snumericEnumFrom_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:51.817643093 UTC

.section .text
.align 8
.globl GHC.Float.$fEnumDouble_$snumericEnumFrom_entry
.type GHC.Float.$fEnumDouble_$snumericEnumFrom_entry, @object
GHC.Float.$fEnumDouble_$snumericEnumFrom_entry:
_c3cih:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3cii
_c3cij:
	leaq block_c3cie_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rsi
	leaq GHC.Float.$fFractionalDouble_closure+1(%rip),%r14
	addq $-8,%rbp
	jmp *GHC.Real.$wnumericEnumFrom_entry@gotpcrel(%rip)
_c3cii:
	leaq GHC.Float.$fEnumDouble_$snumericEnumFrom_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fEnumDouble_$snumericEnumFrom_entry, .-GHC.Float.$fEnumDouble_$snumericEnumFrom_entry


==================== Asm code ====================
2018-03-16 15:57:51.8183027 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fEnumDouble_$snumericEnumFrom_info
.type GHC.Float.$fEnumDouble_$snumericEnumFrom_info, @object
GHC.Float.$fEnumDouble_$snumericEnumFrom_info:
	.quad	GHC.Float.$fEnumDouble_$snumericEnumFrom_entry
	.quad	0
	.quad	55834574862
	.quad	4294967301
	.quad	S3bQP_srt+136


==================== Asm code ====================
2018-03-16 15:57:51.819012486 UTC

.section .text
.align 8
_c3cie:
_c3cie:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3cim
_c3cil:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3cim:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c3cie, .-_c3cie


==================== Asm code ====================
2018-03-16 15:57:51.81964062 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cie_info:
	.quad	_c3cie
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.822803636 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.rationalToFloat1_closure
.type GHC.Float.rationalToFloat1_closure, @object
GHC.Float.rationalToFloat1_closure:
	.quad	GHC.Float.rationalToFloat1_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:51.823819101 UTC

.section .text
.align 8
.globl GHC.Float.rationalToFloat1_entry
.type GHC.Float.rationalToFloat1_entry, @object
GHC.Float.rationalToFloat1_entry:
_c3ciG:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3ciJ
_c3ciK:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3ciM
_c3ciL:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c3ciD
_c3ciC:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	movq GHC.Types.F#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	xorps %xmm0,%xmm0
	xorps %xmm1,%xmm1
	divss %xmm0,%xmm1
	movss %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3ciM:
	movq $16,904(%r13)
_c3ciJ:
	jmp *-16(%r13)
_c3ciD:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Float.rationalToFloat1_entry, .-GHC.Float.rationalToFloat1_entry


==================== Asm code ====================
2018-03-16 15:57:51.824591587 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.rationalToFloat1_info
.type GHC.Float.rationalToFloat1_info, @object
GHC.Float.rationalToFloat1_info:
	.quad	GHC.Float.rationalToFloat1_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:57:51.827566665 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.rationalToFloat2_closure
.type GHC.Float.rationalToFloat2_closure, @object
GHC.Float.rationalToFloat2_closure:
	.quad	GHC.Float.rationalToFloat2_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:51.828564781 UTC

.section .text
.align 8
.globl GHC.Float.rationalToFloat2_entry
.type GHC.Float.rationalToFloat2_entry, @object
GHC.Float.rationalToFloat2_entry:
_c3cj8:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3cjb
_c3cjc:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3cje
_c3cjd:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c3cj5
_c3cj4:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	movq GHC.Types.F#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	xorps %xmm0,%xmm0
	movss _n3cjl(%rip),%xmm1
	divss %xmm0,%xmm1
	movss %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3cje:
	movq $16,904(%r13)
_c3cjb:
	jmp *-16(%r13)
_c3cj5:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Float.rationalToFloat2_entry, .-GHC.Float.rationalToFloat2_entry
.section .rodata
.align 8
.align 4
_n3cjl:
	.byte	0
	.byte	0
	.byte	128
	.byte	191


==================== Asm code ====================
2018-03-16 15:57:51.830372756 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.rationalToFloat2_info
.type GHC.Float.rationalToFloat2_info, @object
GHC.Float.rationalToFloat2_info:
	.quad	GHC.Float.rationalToFloat2_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:57:51.833459487 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.rationalToFloat3_closure
.type GHC.Float.rationalToFloat3_closure, @object
GHC.Float.rationalToFloat3_closure:
	.quad	GHC.Float.rationalToFloat3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:51.83442065 UTC

.section .text
.align 8
.globl GHC.Float.rationalToFloat3_entry
.type GHC.Float.rationalToFloat3_entry, @object
GHC.Float.rationalToFloat3_entry:
_c3cjB:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3cjE
_c3cjF:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3cjH
_c3cjG:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c3cjy
_c3cjx:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	movq GHC.Types.F#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	xorps %xmm0,%xmm0
	movss _n3cjO(%rip),%xmm1
	divss %xmm0,%xmm1
	movss %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3cjH:
	movq $16,904(%r13)
_c3cjE:
	jmp *-16(%r13)
_c3cjy:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Float.rationalToFloat3_entry, .-GHC.Float.rationalToFloat3_entry
.section .rodata
.align 8
.align 4
_n3cjO:
	.byte	0
	.byte	0
	.byte	128
	.byte	63


==================== Asm code ====================
2018-03-16 15:57:51.83517856 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.rationalToFloat3_info
.type GHC.Float.rationalToFloat3_info, @object
GHC.Float.rationalToFloat3_info:
	.quad	GHC.Float.rationalToFloat3_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:57:51.836927723 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.rationalToFloat4_closure
.type GHC.Float.rationalToFloat4_closure, @object
GHC.Float.rationalToFloat4_closure:
	.quad	GHC.Types.F#_con_info
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.long	0


==================== Asm code ====================
2018-03-16 15:57:51.843194777 UTC

.section .data
.align 8
.align 1
$w$j1_r2Upy_closure:
	.quad	$w$j1_r2Upy_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:51.844037542 UTC

.section .text
.align 8
$w$j1_r2Upy_entry:
_c3ck6:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3ck7
_c3ck8:
	leaq block_c3ck1_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %rsi,%rax
	leaq GHC.Float.rationalToDouble5_closure(%rip),%rsi
	movq %r14,%rbx
	movq %rdi,%r14
	movq %rbx,-24(%rbp)
	movq %rax,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-32,%rbp
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
_c3ck7:
	leaq $w$j1_r2Upy_closure(%rip),%rbx
	jmp *-8(%r13)
	.size $w$j1_r2Upy_entry, .-$w$j1_r2Upy_entry


==================== Asm code ====================
2018-03-16 15:57:51.844708686 UTC

.section .data.rel.ro
.align 8
.align 1
$w$j1_r2Upy_info:
	.quad	$w$j1_r2Upy_entry
	.quad	0
	.quad	4503664051879950
	.quad	12884901907
	.quad	S3bQP_srt+8


==================== Asm code ====================
2018-03-16 15:57:51.845483517 UTC

.section .text
.align 8
_c3ck1:
_c3ck1:
	cmpq $1,%rbx
	je _c3ck5
_c3ck4:
	leaq block_c3ckb_info(%rip),%rax
	movq %rax,(%rbp)
	movq 24(%rbp),%rsi
	movq 16(%rbp),%r14
	jmp *GHC.Integer.Type.quotRemInteger_entry@gotpcrel(%rip)
_c3ck5:
	movq GHC.Real.divZeroError_closure@gotpcrel(%rip),%rbx
	addq $32,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c3ck1, .-_c3ck1


==================== Asm code ====================
2018-03-16 15:57:51.846143392 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3ck1_info:
	.quad	_c3ck1
	.quad	67
	.quad	47244640286
	.quad	S3bQP_srt+8


==================== Asm code ====================
2018-03-16 15:57:51.846781285 UTC

.section .text
.align 8
_c3ckb:
_c3ckb:
	leaq block_c3ckd_info(%rip),%rax
	movq %rax,(%rbp)
	movl $1,%esi
	movq %rbx,16(%rbp)
	jmp *GHC.Integer.Type.shiftLInteger_entry@gotpcrel(%rip)
	.size _c3ckb, .-_c3ckb


==================== Asm code ====================
2018-03-16 15:57:51.847394918 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3ckb_info:
	.quad	_c3ckb
	.quad	195
	.quad	38654705694
	.quad	S3bQP_srt+8


==================== Asm code ====================
2018-03-16 15:57:51.848085522 UTC

.section .text
.align 8
_c3ckd:
_c3ckd:
	leaq block_c3ckj_info(%rip),%rax
	movq %rax,(%rbp)
	movq 24(%rbp),%rsi
	movq %rbx,%r14
	jmp *GHC.Integer.Type.compareInteger_entry@gotpcrel(%rip)
	.size _c3ckd, .-_c3ckd


==================== Asm code ====================
2018-03-16 15:57:51.848686318 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3ckd_info:
	.quad	_c3ckd
	.quad	67
	.quad	38654705694
	.quad	S3bQP_srt+8


==================== Asm code ====================
2018-03-16 15:57:51.849610097 UTC

.section .text
.align 8
_c3ckj:
_c3ckj:
	movq 16(%rbp),%rax
	andl $7,%ebx
	cmpq $3,%rbx
	jb _u3cl7
_c3ckY:
	leaq block_c3ckW_info(%rip),%rbx
	movq %rbx,(%rbp)
	leaq GHC.Float.$fRealDouble1_closure(%rip),%rsi
	movq %rax,%r14
	jmp *GHC.Integer.Type.plusInteger_entry@gotpcrel(%rip)
_u3cl8:
	addq $8,%rbp
	jmp _c3ckQ
_u3cl7:
	cmpq $2,%rbx
	jb _u3cl8
_c3ckv:
	leaq block_c3ckt_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%r14
	jmp *GHC.Integer.Type.integerToInt_entry@gotpcrel(%rip)
	.size _c3ckj, .-_c3ckj


==================== Asm code ====================
2018-03-16 15:57:51.850317483 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3ckj_info:
	.quad	_c3ckj
	.quad	323
	.quad	38654705694
	.quad	S3bQP_srt+8


==================== Asm code ====================
2018-03-16 15:57:51.8511129 UTC

.section .text
.align 8
_c3ckt:
_c3ckt:
	testb $1,%bl
	je _u3cl9
_c3ckI:
	leaq block_c3ckG_info(%rip),%rax
	movq %rax,(%rbp)
	leaq GHC.Float.$fRealDouble1_closure(%rip),%rsi
	movq 16(%rbp),%r14
	jmp *GHC.Integer.Type.plusInteger_entry@gotpcrel(%rip)
_u3cl9:
	addq $8,%rbp
	jmp _c3ckQ
	.size _c3ckt, .-_c3ckt


==================== Asm code ====================
2018-03-16 15:57:51.851746868 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3ckt_info:
	.quad	_c3ckt
	.quad	323
	.quad	38654705694
	.quad	S3bQP_srt+8


==================== Asm code ====================
2018-03-16 15:57:51.852389446 UTC

.section .text
.align 8
_c3ckQ:
_c3ckQ:
	movq (%rbp),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp *GHC.Integer.Type.encodeFloatInteger_entry@gotpcrel(%rip)
	.size _c3ckQ, .-_c3ckQ


==================== Asm code ====================
2018-03-16 15:57:51.853080716 UTC

.section .text
.align 8
_c3ckG:
_c3ckG:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $32,%rbp
	jmp *GHC.Integer.Type.encodeFloatInteger_entry@gotpcrel(%rip)
	.size _c3ckG, .-_c3ckG


==================== Asm code ====================
2018-03-16 15:57:51.853717355 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3ckG_info:
	.quad	_c3ckG
	.quad	451
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.854341141 UTC

.section .text
.align 8
_c3ckW:
_c3ckW:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $32,%rbp
	jmp *GHC.Integer.Type.encodeFloatInteger_entry@gotpcrel(%rip)
	.size _c3ckW, .-_c3ckW


==================== Asm code ====================
2018-03-16 15:57:51.854934572 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3ckW_info:
	.quad	_c3ckW
	.quad	451
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.87985035 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$w$sfromRat''1_closure
.type GHC.Float.$w$sfromRat''1_closure, @object
GHC.Float.$w$sfromRat''1_closure:
	.quad	GHC.Float.$w$sfromRat''1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:51.880639038 UTC

.section .text
.align 8
.globl GHC.Float.$w$sfromRat''1_slow
.type GHC.Float.$w$sfromRat''1_slow, @object
GHC.Float.$w$sfromRat''1_slow:
_c3clN:
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $32,%rbp
	jmp GHC.Float.$w$sfromRat''1_entry
	.size GHC.Float.$w$sfromRat''1_slow, .-GHC.Float.$w$sfromRat''1_slow


==================== Asm code ====================
2018-03-16 15:57:51.881662481 UTC

.section .text
.align 8
.globl GHC.Float.$w$sfromRat''1_entry
.type GHC.Float.$w$sfromRat''1_entry, @object
GHC.Float.$w$sfromRat''1_entry:
_c3cm0:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c3cm1
_c3cm2:
	leaq block_c3clT_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %r8,%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _c3clT
_c3clU:
	movq (%rbx),%rax
	jmp *(%rax)
_c3cm1:
	leaq GHC.Float.$w$sfromRat''1_closure(%rip),%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	jmp *-8(%r13)
	.size GHC.Float.$w$sfromRat''1_entry, .-GHC.Float.$w$sfromRat''1_entry


==================== Asm code ====================
2018-03-16 15:57:51.882446923 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$w$sfromRat''1_info
.type GHC.Float.$w$sfromRat''1_info, @object
GHC.Float.$w$sfromRat''1_info:
	.quad	GHC.Float.$w$sfromRat''1_entry
	.quad	0
	.quad	13512899121119246
	.quad	17179869184
	.quad	S3bQP_srt+8
	.quad	196
	.quad	GHC.Float.$w$sfromRat''1_slow


==================== Asm code ====================
2018-03-16 15:57:51.883245114 UTC

.section .text
.align 8
_c3clT:
_c3clT:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c3clY
_c3clX:
	movq $1,-8(%rbp)
	movq $-1,(%rbp)
	addq $-8,%rbp
	jmp _s3aGh
_c3clY:
	leaq block_c3ctb_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rsi
	xorl %r14d,%r14d
	jmp *GHC.Integer.Logarithms.Internals.integerLog2IsPowerOf2#_couldBe_entry@gotpcrel(%rip)
	.size _c3clT, .-_c3clT


==================== Asm code ====================
2018-03-16 15:57:51.883879936 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3clT_info:
	.quad	_c3clT
	.quad	196
	.quad	4505699866378270
	.quad	S3bQP_srt+8


==================== Asm code ====================
2018-03-16 15:57:51.884485907 UTC

.section .text
.align 8
_c3ctb:
_c3ctb:
	movq %rbx,(%rbp)
	movq %r14,-8(%rbp)
	addq $-8,%rbp
	jmp _s3aGh
	.size _c3ctb, .-_c3ctb


==================== Asm code ====================
2018-03-16 15:57:51.885087843 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3ctb_info:
	.quad	_c3ctb
	.quad	196
	.quad	4505699866378270
	.quad	S3bQP_srt+8


==================== Asm code ====================
2018-03-16 15:57:51.88615545 UTC

.section .text
.align 8
_s3aGh:
_s3aGh:
	movq 32(%rbp),%rax
	cmpq $0,(%rbp)
	je _c3csP
_c3co6:
	leaq block_c3cmb_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c3cmb
_c3co7:
	movq (%rbx),%rax
	jmp *(%rax)
_c3csP:
	leaq block_c3coG_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c3coG
_c3csQ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _s3aGh, .-_s3aGh


==================== Asm code ====================
2018-03-16 15:57:51.886968409 UTC

.section .text
.align 8
_c3coG:
_c3coG:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c3ct1
_c3csW:
	movq $-1,40(%rbp)
	addq $8,%rbp
	jmp _s3aGV
_c3ct1:
	leaq block_c3csZ_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rsi
	xorl %r14d,%r14d
	jmp *GHC.Integer.Logarithms.Internals.integerLog2#_step_entry@gotpcrel(%rip)
	.size _c3coG, .-_c3coG


==================== Asm code ====================
2018-03-16 15:57:51.887675395 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3coG_info:
	.quad	_c3coG
	.quad	1477
	.quad	2100239007774
	.quad	S3bQP_srt+8


==================== Asm code ====================
2018-03-16 15:57:51.888300334 UTC

.section .text
.align 8
_c3csZ:
_c3csZ:
	movq %rbx,40(%rbp)
	addq $8,%rbp
	jmp _s3aGV
	.size _c3csZ, .-_c3csZ


==================== Asm code ====================
2018-03-16 15:57:51.88990354 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3csZ_info:
	.quad	_c3csZ
	.quad	1477
	.quad	1550483193886
	.quad	S3bQP_srt+8


==================== Asm code ====================
2018-03-16 15:57:51.891282541 UTC

.section .text
.align 8
_s3aGV:
_s3aGV:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rbx
	movq 24(%rbp),%rcx
	movq (%rbp),%rdx
	movq 32(%rbp),%rsi
	movq %rdx,%rdi
	addq %rax,%rdi
	decq %rdi
	cmpq %rdi,%rsi
	jl _c3cr3
_c3csO:
	cmpq %rbx,%rsi
	jge _c3csM
_c3csN:
	movq %rdx,%rsi
	negq %rsi
	movq %rcx,%r14
	addq $40,%rbp
	jmp *GHC.Integer.Type.encodeFloatInteger_entry@gotpcrel(%rip)
_c3cpB:
	leaq 1(%rsi),%rax
	cmpq %rax,%rdx
	jle _c3cpe
_u3cu8:
	addq $40,%rbp
	jmp _c3cpz
_c3csM:
	leaq 1(%rsi),%rax
	subq %rbx,%rax
	negq %rax
	testq %rax,%rax
	jl _c3csz
_c3csG:
	leaq block_c3csF_info(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,%rsi
	movq %rcx,%r14
	addq $-8,%rbp
	jmp *GHC.Integer.Type.shiftLInteger_entry@gotpcrel(%rip)
_c3csz:
	leaq block_c3csx_info(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,%rsi
	negq %rsi
	movq %rcx,%r14
	addq $-8,%rbp
	jmp *GHC.Integer.Type.shiftRInteger_entry@gotpcrel(%rip)
_c3cr3:
	movq %rax,%rdi
	subq %rbx,%rdi
	addq %rdi,%rdx
	testq %rdx,%rdx
	jg _c3cr0
_c3cr1:
	movq %rax,%rsi
	subq %rbx,%rsi
	subq %rdx,%rsi
	movq %rcx,%r14
	addq $40,%rbp
	jmp *GHC.Integer.Type.encodeFloatInteger_entry@gotpcrel(%rip)
_c3cr0:
	cmpq %rsi,%rdx
	jg _c3cpB
_c3cqY:
	movq %rdx,%rax
	negq %rax
	testq %rax,%rax
	jl _c3cqM
_c3cqT:
	leaq block_c3cqS_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rsi
	movq %rcx,%r14
	movq %rdx,32(%rbp)
	jmp *GHC.Integer.Type.shiftLInteger_entry@gotpcrel(%rip)
_c3cqM:
	leaq block_c3cqK_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rsi
	negq %rsi
	movq %rcx,%r14
	movq %rdx,32(%rbp)
	jmp *GHC.Integer.Type.shiftRInteger_entry@gotpcrel(%rip)
_c3cpe:
	leaq block_c3cpc_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rcx,%rbx
	testb $7,%bl
	jne _c3cpc
_c3cpf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _s3aGV, .-_s3aGV


==================== Asm code ====================
2018-03-16 15:57:51.893025331 UTC

.section .text
.align 8
_c3cpc:
_c3cpc:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c3cpq
_c3cpl:
	movq 8(%rbp),%rsi
	subq 16(%rbp),%rsi
	leaq GHC.Float.$fRealDouble1_closure(%rip),%r14
	addq $40,%rbp
	jmp *GHC.Integer.Type.encodeFloatInteger_entry@gotpcrel(%rip)
_c3cpq:
	leaq block_c3cpo_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rsi
	xorl %r14d,%r14d
	jmp *GHC.Integer.Logarithms.Internals.integerLog2IsPowerOf2#_couldBe_entry@gotpcrel(%rip)
	.size _c3cpc, .-_c3cpc


==================== Asm code ====================
2018-03-16 15:57:51.893801239 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cpc_info:
	.quad	_c3cpc
	.quad	964
	.quad	141733920798
	.quad	S3bQP_srt+32


==================== Asm code ====================
2018-03-16 15:57:51.894553633 UTC

.section .text
.align 8
_c3cpo:
_c3cpo:
	testq %r14,%r14
	je _u3cu9
_c3cpx:
	movq 8(%rbp),%rsi
	subq 16(%rbp),%rsi
	leaq GHC.Float.$fRealDouble1_closure(%rip),%r14
	addq $40,%rbp
	jmp *GHC.Integer.Type.encodeFloatInteger_entry@gotpcrel(%rip)
_u3cu9:
	addq $40,%rbp
	jmp _c3cpz
	.size _c3cpo, .-_c3cpo


==================== Asm code ====================
2018-03-16 15:57:51.895162613 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cpo_info:
	.quad	_c3cpo
	.quad	964
	.quad	4294967326
	.quad	S3bQP_srt+32


==================== Asm code ====================
2018-03-16 15:57:51.895776362 UTC

.section .text
.align 8
_c3cpz:
_c3cpz:
	xorps %xmm1,%xmm1
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3cpz, .-_c3cpz


==================== Asm code ====================
2018-03-16 15:57:51.896416021 UTC

.section .text
.align 8
_c3cqK:
_c3cqK:
	movq %rbx,(%rbp)
	jmp _s3aHf
	.size _c3cqK, .-_c3cqK


==================== Asm code ====================
2018-03-16 15:57:51.897166227 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cqK_info:
	.quad	_c3cqK
	.quad	708
	.quad	313532612638
	.quad	S3bQP_srt+8


==================== Asm code ====================
2018-03-16 15:57:51.897841226 UTC

.section .text
.align 8
_c3cqS:
_c3cqS:
	movq %rbx,(%rbp)
	jmp _s3aHf
	.size _c3cqS, .-_c3cqS


==================== Asm code ====================
2018-03-16 15:57:51.898606048 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cqS_info:
	.quad	_c3cqS
	.quad	708
	.quad	313532612638
	.quad	S3bQP_srt+8


==================== Asm code ====================
2018-03-16 15:57:51.899368524 UTC

.section .text
.align 8
_s3aHf:
_s3aHf:
	leaq block_c3cpP_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 32(%rbp),%rax
	leaq -1(%rax),%rsi
	movq 24(%rbp),%r14
	addq $-8,%rbp
	jmp *GHC.Integer.Logarithms.Internals.roundingMode#_entry@gotpcrel(%rip)
	.size _s3aHf, .-_s3aHf


==================== Asm code ====================
2018-03-16 15:57:51.900328005 UTC

.section .text
.align 8
_c3cpP:
_c3cpP:
	movq 16(%rbp),%rax
	movq 24(%rbp),%rcx
	movq 8(%rbp),%rdx
	testq %rbx,%rbx
	je _c3cq7
_u3ctU:
	cmpq $1,%rbx
	je _c3cqc
_c3cpZ:
	leaq block_c3cpW_info(%rip),%rbx
	movq %rbx,32(%rbp)
	leaq GHC.Float.$fRealDouble1_closure(%rip),%rsi
	movq %rdx,%r14
	subq %rcx,%rax
	movq %rax,40(%rbp)
	addq $32,%rbp
	jmp *GHC.Integer.Type.plusInteger_entry@gotpcrel(%rip)
_c3cqc:
	leaq block_c3cqa_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rdx,%r14
	jmp *GHC.Integer.Type.integerToInt_entry@gotpcrel(%rip)
_c3cq7:
	movq %rax,%rsi
	subq %rcx,%rsi
	movq %rdx,%r14
	addq $48,%rbp
	jmp *GHC.Integer.Type.encodeFloatInteger_entry@gotpcrel(%rip)
	.size _c3cpP, .-_c3cpP


==================== Asm code ====================
2018-03-16 15:57:51.901128399 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cpP_info:
	.quad	_c3cpP
	.quad	1925
	.quad	38654705694
	.quad	S3bQP_srt+8


==================== Asm code ====================
2018-03-16 15:57:51.901932042 UTC

.section .text
.align 8
_c3cqa:
_c3cqa:
	movq 16(%rbp),%rax
	movq 24(%rbp),%rcx
	movq 8(%rbp),%rdx
	testb $1,%bl
	je _c3cqA
_c3cqs:
	leaq block_c3cqq_info(%rip),%rbx
	movq %rbx,32(%rbp)
	leaq GHC.Float.$fRealDouble1_closure(%rip),%rsi
	movq %rdx,%r14
	subq %rcx,%rax
	movq %rax,40(%rbp)
	addq $32,%rbp
	jmp *GHC.Integer.Type.plusInteger_entry@gotpcrel(%rip)
_c3cqA:
	movq %rax,%rsi
	subq %rcx,%rsi
	movq %rdx,%r14
	addq $48,%rbp
	jmp *GHC.Integer.Type.encodeFloatInteger_entry@gotpcrel(%rip)
	.size _c3cqa, .-_c3cqa


==================== Asm code ====================
2018-03-16 15:57:51.902594047 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cqa_info:
	.quad	_c3cqa
	.quad	1925
	.quad	38654705694
	.quad	S3bQP_srt+8


==================== Asm code ====================
2018-03-16 15:57:51.90324314 UTC

.section .text
.align 8
_c3cqq:
_c3cqq:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $16,%rbp
	jmp *GHC.Integer.Type.encodeFloatInteger_entry@gotpcrel(%rip)
	.size _c3cqq, .-_c3cqq


==================== Asm code ====================
2018-03-16 15:57:51.903821294 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cqq_info:
	.quad	_c3cqq
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.904442973 UTC

.section .text
.align 8
_c3cpW:
_c3cpW:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $16,%rbp
	jmp *GHC.Integer.Type.encodeFloatInteger_entry@gotpcrel(%rip)
	.size _c3cpW, .-_c3cpW


==================== Asm code ====================
2018-03-16 15:57:51.90518168 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cpW_info:
	.quad	_c3cpW
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.906078407 UTC

.section .text
.align 8
_c3csx:
_c3csx:
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp _s3aHB
	.size _c3csx, .-_c3csx


==================== Asm code ====================
2018-03-16 15:57:51.906694754 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3csx_info:
	.quad	_c3csx
	.quad	1477
	.quad	313532612638
	.quad	S3bQP_srt+8


==================== Asm code ====================
2018-03-16 15:57:51.907309317 UTC

.section .text
.align 8
_c3csF:
_c3csF:
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp _s3aHB
	.size _c3csF, .-_c3csF


==================== Asm code ====================
2018-03-16 15:57:51.907858871 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3csF_info:
	.quad	_c3csF
	.quad	1477
	.quad	313532612638
	.quad	S3bQP_srt+8


==================== Asm code ====================
2018-03-16 15:57:51.908626784 UTC

.section .text
.align 8
_s3aHB:
_s3aHB:
	movq 32(%rbp),%rax
	subq 16(%rbp),%rax
	leaq block_c3crq_info(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,%rsi
	movq 24(%rbp),%r14
	addq $-8,%rbp
	jmp *GHC.Integer.Logarithms.Internals.roundingMode#_entry@gotpcrel(%rip)
	.size _s3aHB, .-_s3aHB


==================== Asm code ====================
2018-03-16 15:57:51.909653876 UTC

.section .text
.align 8
_c3crq:
_c3crq:
	movq 24(%rbp),%rax
	movq 8(%rbp),%rcx
	movq 40(%rbp),%rdx
	movq 16(%rbp),%rsi
	testq %rbx,%rbx
	je _c3cs8
_u3ctV:
	cmpq $2,%rbx
	je _c3csm
_c3crx:
	leaq block_c3cru_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rsi,%r14
	jmp *GHC.Integer.Type.integerToInt_entry@gotpcrel(%rip)
_c3csm:
	leaq block_c3csk_info(%rip),%rbx
	movq %rbx,32(%rbp)
	movq %rsi,%rbx
	leaq GHC.Float.$fRealDouble1_closure(%rip),%rsi
	movq %rbx,%r14
	movl $1,%ebx
	subq %rax,%rbx
	subq %rcx,%rbx
	addq %rbx,%rdx
	movq %rdx,40(%rbp)
	addq $32,%rbp
	jmp *GHC.Integer.Type.plusInteger_entry@gotpcrel(%rip)
_c3cs8:
	movl $1,%edi
	subq %rax,%rdi
	subq %rcx,%rdi
	movq %rsi,%rax
	movq %rdx,%rsi
	addq %rdi,%rsi
	movq %rax,%r14
	addq $48,%rbp
	jmp *GHC.Integer.Type.encodeFloatInteger_entry@gotpcrel(%rip)
	.size _c3crq, .-_c3crq


==================== Asm code ====================
2018-03-16 15:57:51.910434384 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3crq_info:
	.quad	_c3crq
	.quad	1861
	.quad	38654705694
	.quad	S3bQP_srt+8


==================== Asm code ====================
2018-03-16 15:57:51.911135482 UTC

.section .text
.align 8
_c3csk:
_c3csk:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $16,%rbp
	jmp *GHC.Integer.Type.encodeFloatInteger_entry@gotpcrel(%rip)
	.size _c3csk, .-_c3csk


==================== Asm code ====================
2018-03-16 15:57:51.911739588 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3csk_info:
	.quad	_c3csk
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.912546559 UTC

.section .text
.align 8
_c3cru:
_c3cru:
	movq 24(%rbp),%rax
	movq 8(%rbp),%rcx
	movq 40(%rbp),%rdx
	movq 16(%rbp),%rsi
	testb $1,%bl
	je _c3cs1
_c3crT:
	leaq block_c3crR_info(%rip),%rbx
	movq %rbx,32(%rbp)
	movq %rsi,%rbx
	leaq GHC.Float.$fRealDouble1_closure(%rip),%rsi
	movq %rbx,%r14
	movl $1,%ebx
	subq %rax,%rbx
	subq %rcx,%rbx
	addq %rbx,%rdx
	movq %rdx,40(%rbp)
	addq $32,%rbp
	jmp *GHC.Integer.Type.plusInteger_entry@gotpcrel(%rip)
_c3cs1:
	movl $1,%ebx
	subq %rax,%rbx
	subq %rcx,%rbx
	movq %rsi,%rax
	movq %rdx,%rsi
	addq %rbx,%rsi
	movq %rax,%r14
	addq $48,%rbp
	jmp *GHC.Integer.Type.encodeFloatInteger_entry@gotpcrel(%rip)
	.size _c3cru, .-_c3cru


==================== Asm code ====================
2018-03-16 15:57:51.913431202 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cru_info:
	.quad	_c3cru
	.quad	1861
	.quad	38654705694
	.quad	S3bQP_srt+8


==================== Asm code ====================
2018-03-16 15:57:51.914090669 UTC

.section .text
.align 8
_c3crR:
_c3crR:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $16,%rbp
	jmp *GHC.Integer.Type.encodeFloatInteger_entry@gotpcrel(%rip)
	.size _c3crR, .-_c3crR


==================== Asm code ====================
2018-03-16 15:57:51.91468685 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3crR_info:
	.quad	_c3crR
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.915503958 UTC

.section .text
.align 8
_c3cmb:
_c3cmb:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c3coq
_c3col:
	movq $-1,%rax
	subq 8(%rbp),%rax
	cmpq 16(%rbp),%rax
	jl _u3ctY
_c3coj:
	movq %rax,16(%rbp)
	addq $16,%rbp
	jmp _s3aGl
_u3ctY:
	addq $16,%rbp
	jmp _c3coB
_c3coq:
	leaq block_c3coo_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rsi
	xorl %r14d,%r14d
	jmp *GHC.Integer.Logarithms.Internals.integerLog2#_step_entry@gotpcrel(%rip)
	.size _c3cmb, .-_c3cmb


==================== Asm code ====================
2018-03-16 15:57:51.916195022 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cmb_info:
	.quad	_c3cmb
	.quad	453
	.quad	140758963191838
	.quad	S3bQP_srt+48


==================== Asm code ====================
2018-03-16 15:57:51.916881503 UTC

.section .text
.align 8
_c3coo:
_c3coo:
	subq 8(%rbp),%rbx
	cmpq 16(%rbp),%rbx
	jl _u3cu0
_c3coC:
	movq %rbx,16(%rbp)
	addq $16,%rbp
	jmp _s3aGl
_u3cu0:
	addq $16,%rbp
	jmp _c3coB
	.size _c3coo, .-_c3coo


==================== Asm code ====================
2018-03-16 15:57:51.917717998 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3coo_info:
	.quad	_c3coo
	.quad	453
	.quad	140741783322654
	.quad	S3bQP_srt+48


==================== Asm code ====================
2018-03-16 15:57:51.918466016 UTC

.section .text
.align 8
_c3coB:
_c3coB:
	movq (%rbp),%rax
	movq %rax,(%rbp)
	jmp _s3aGl
	.size _c3coB, .-_c3coB


==================== Asm code ====================
2018-03-16 15:57:51.919442834 UTC

.section .text
.align 8
_s3aGl:
_s3aGl:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rbx
	movq (%rbp),%rcx
	cmpq %rax,%rcx
	jge _c3cnH
_c3cnY:
	subq %rcx,%rax
	testq %rax,%rax
	jl _c3cnU
_c3cnX:
	leaq block_c3cnW_info(%rip),%rcx
	movq %rcx,-8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $-8,%rbp
	jmp *GHC.Integer.Type.shiftLInteger_entry@gotpcrel(%rip)
_c3cnU:
	leaq block_c3cnW_info(%rip),%rcx
	movq %rcx,-8(%rbp)
	movq %rax,%rsi
	negq %rsi
	movq %rbx,%r14
	addq $-8,%rbp
	jmp *GHC.Integer.Type.shiftRInteger_entry@gotpcrel(%rip)
_c3cnF:
	movq %rbx,24(%rbp)
	movq %rdx,16(%rbp)
	jmp _s3aGn
_c3cnH:
	movq 24(%rbp),%rdx
	cmpq %rax,%rcx
	je _c3cnF
_c3cny:
	subq %rax,%rcx
	testq %rcx,%rcx
	jl _c3cnt
_c3cnw:
	leaq block_c3cnv_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rcx,%rsi
	movq %rdx,%r14
	addq $-8,%rbp
	jmp *GHC.Integer.Type.shiftLInteger_entry@gotpcrel(%rip)
_c3cnt:
	leaq block_c3cnv_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rcx,%rsi
	negq %rsi
	movq %rdx,%r14
	addq $-8,%rbp
	jmp *GHC.Integer.Type.shiftRInteger_entry@gotpcrel(%rip)
	.size _s3aGl, .-_s3aGl


==================== Asm code ====================
2018-03-16 15:57:51.920345991 UTC

.section .text
.align 8
_c3cnv:
_c3cnv:
	movq 24(%rbp),%rax
	movq %rbx,24(%rbp)
	movq %rax,32(%rbp)
	addq $8,%rbp
	jmp _s3aGn
	.size _c3cnv, .-_c3cnv


==================== Asm code ====================
2018-03-16 15:57:51.9210135 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cnv_info:
	.quad	_c3cnv
	.quad	708
	.quad	140741783322654
	.quad	S3bQP_srt+48


==================== Asm code ====================
2018-03-16 15:57:51.921699947 UTC

.section .text
.align 8
_c3cnW:
_c3cnW:
	movq 32(%rbp),%rax
	movq %rbx,32(%rbp)
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp _s3aGn
	.size _c3cnW, .-_c3cnW


==================== Asm code ====================
2018-03-16 15:57:51.922868514 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cnW_info:
	.quad	_c3cnW
	.quad	452
	.quad	140741783322654
	.quad	S3bQP_srt+48


==================== Asm code ====================
2018-03-16 15:57:51.923755425 UTC

.section .text
.align 8
_s3aGn:
_s3aGn:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rbx
	testq %rax,%rax
	jl _c3cmu
_c3cmR:
	leaq block_c3cmQ_info(%rip),%rcx
	movq %rcx,-8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $-8,%rbp
	jmp *GHC.Integer.Type.shiftLInteger_entry@gotpcrel(%rip)
_c3cmu:
	leaq block_c3cms_info(%rip),%rcx
	movq %rcx,-8(%rbp)
	movq %rax,%rsi
	negq %rsi
	movq %rbx,%r14
	addq $-8,%rbp
	jmp *GHC.Integer.Type.shiftRInteger_entry@gotpcrel(%rip)
	.size _s3aGn, .-_s3aGn


==================== Asm code ====================
2018-03-16 15:57:51.924507768 UTC

.section .text
.align 8
_c3cms:
_c3cms:
	leaq block_c3cmy_info(%rip),%rax
	movq %rax,(%rbp)
	movq 32(%rbp),%rsi
	movq %rbx,%r14
	jmp *GHC.Integer.Type.leInteger#_entry@gotpcrel(%rip)
	.size _c3cms, .-_c3cms


==================== Asm code ====================
2018-03-16 15:57:51.925091745 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cms_info:
	.quad	_c3cms
	.quad	196
	.quad	4294967326
	.quad	S3bQP_srt+168


==================== Asm code ====================
2018-03-16 15:57:51.925907518 UTC

.section .text
.align 8
_c3cmy:
_c3cmy:
	movq 24(%rbp),%rax
	cmpq $1,%rbx
	je _c3cmK
_c3cmF:
	movq %rax,%rdi
	movq 32(%rbp),%rsi
	movq 8(%rbp),%r14
	subq 16(%rbp),%r14
	addq $40,%rbp
	jmp $w$j1_r2Upy_entry
_c3cmK:
	leaq block_c3cmI_info(%rip),%rbx
	movq %rbx,(%rbp)
	movl $1,%esi
	movq %rax,%r14
	jmp *GHC.Integer.Type.shiftLInteger_entry@gotpcrel(%rip)
	.size _c3cmy, .-_c3cmy


==================== Asm code ====================
2018-03-16 15:57:51.926568038 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cmy_info:
	.quad	_c3cmy
	.quad	196
	.quad	4294967326
	.quad	S3bQP_srt+168


==================== Asm code ====================
2018-03-16 15:57:51.927236111 UTC

.section .text
.align 8
_c3cmI:
_c3cmI:
	movq %rbx,%rdi
	movq 32(%rbp),%rsi
	movl $1,%eax
	subq 16(%rbp),%rax
	movq 8(%rbp),%r14
	addq %rax,%r14
	addq $40,%rbp
	jmp $w$j1_r2Upy_entry
	.size _c3cmI, .-_c3cmI


==================== Asm code ====================
2018-03-16 15:57:51.927862081 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cmI_info:
	.quad	_c3cmI
	.quad	452
	.quad	4294967326
	.quad	S3bQP_srt+168


==================== Asm code ====================
2018-03-16 15:57:51.928545355 UTC

.section .text
.align 8
_c3cmQ:
_c3cmQ:
	leaq block_c3cmV_info(%rip),%rax
	movq %rax,(%rbp)
	movq 32(%rbp),%rsi
	movq %rbx,%r14
	jmp *GHC.Integer.Type.leInteger#_entry@gotpcrel(%rip)
	.size _c3cmQ, .-_c3cmQ


==================== Asm code ====================
2018-03-16 15:57:51.929097946 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cmQ_info:
	.quad	_c3cmQ
	.quad	196
	.quad	4294967326
	.quad	S3bQP_srt+168


==================== Asm code ====================
2018-03-16 15:57:51.929902088 UTC

.section .text
.align 8
_c3cmV:
_c3cmV:
	movq 24(%rbp),%rax
	cmpq $1,%rbx
	je _c3cn7
_c3cn2:
	movq %rax,%rdi
	movq 32(%rbp),%rsi
	movq 8(%rbp),%r14
	subq 16(%rbp),%r14
	addq $40,%rbp
	jmp $w$j1_r2Upy_entry
_c3cn7:
	leaq block_c3cn5_info(%rip),%rbx
	movq %rbx,(%rbp)
	movl $1,%esi
	movq %rax,%r14
	jmp *GHC.Integer.Type.shiftLInteger_entry@gotpcrel(%rip)
	.size _c3cmV, .-_c3cmV


==================== Asm code ====================
2018-03-16 15:57:51.930508673 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cmV_info:
	.quad	_c3cmV
	.quad	196
	.quad	4294967326
	.quad	S3bQP_srt+168


==================== Asm code ====================
2018-03-16 15:57:51.931258934 UTC

.section .text
.align 8
_c3cn5:
_c3cn5:
	movq %rbx,%rdi
	movq 32(%rbp),%rsi
	movl $1,%eax
	subq 16(%rbp),%rax
	movq 8(%rbp),%r14
	addq %rax,%r14
	addq $40,%rbp
	jmp $w$j1_r2Upy_entry
	.size _c3cn5, .-_c3cn5


==================== Asm code ====================
2018-03-16 15:57:51.931866398 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cn5_info:
	.quad	_c3cn5
	.quad	452
	.quad	4294967326
	.quad	S3bQP_srt+168


==================== Asm code ====================
2018-03-16 15:57:51.936182489 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.fromRat''_$sfromRat''_closure
.type GHC.Float.fromRat''_$sfromRat''_closure, @object
GHC.Float.fromRat''_$sfromRat''_closure:
	.quad	GHC.Float.fromRat''_$sfromRat''_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:51.937049737 UTC

.section .text
.align 8
.globl GHC.Float.fromRat''_$sfromRat''_entry
.type GHC.Float.fromRat''_$sfromRat''_entry, @object
GHC.Float.fromRat''_$sfromRat''_entry:
_c3cxW:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3cy9
_c3cya:
	leaq block_c3cxT_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %r14,%rbx
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c3cxT
_c3cxU:
	movq (%rbx),%rax
	jmp *(%rax)
_c3cy9:
	leaq GHC.Float.fromRat''_$sfromRat''_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.fromRat''_$sfromRat''_entry, .-GHC.Float.fromRat''_$sfromRat''_entry


==================== Asm code ====================
2018-03-16 15:57:51.938092244 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.fromRat''_$sfromRat''_info
.type GHC.Float.fromRat''_$sfromRat''_info, @object
GHC.Float.fromRat''_$sfromRat''_info:
	.quad	GHC.Float.fromRat''_$sfromRat''_entry
	.quad	0
	.quad	12884901902
	.quad	17179869208
	.quad	S3bQP_srt+176


==================== Asm code ====================
2018-03-16 15:57:51.93877977 UTC

.section .text
.align 8
_c3cxT:
_c3cxT:
	leaq block_c3cxZ_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c3cxZ
_c3cy0:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3cxT, .-_c3cxT


==================== Asm code ====================
2018-03-16 15:57:51.939350973 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cxT_info:
	.quad	_c3cxT
	.quad	3
	.quad	4294967326
	.quad	S3bQP_srt+176


==================== Asm code ====================
2018-03-16 15:57:51.940015644 UTC

.section .text
.align 8
_c3cxZ:
_c3cxZ:
	movq 24(%rbp),%rax
	leaq block_c3cy4_info(%rip),%rcx
	movq %rcx,24(%rbp)
	movq %rax,%r8
	movq 16(%rbp),%rdi
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Float.$w$sfromRat''1_entry
	.size _c3cxZ, .-_c3cxZ


==================== Asm code ====================
2018-03-16 15:57:51.940608367 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cxZ_info:
	.quad	_c3cxZ
	.quad	67
	.quad	4294967326
	.quad	S3bQP_srt+176


==================== Asm code ====================
2018-03-16 15:57:51.941469502 UTC

.section .text
.align 8
_c3cy4:
_c3cy4:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3cyf
_c3cye:
	movq GHC.Types.F#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movss %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3cyf:
	movq $16,904(%r13)
	jmp *stg_gc_f1@gotpcrel(%rip)
	.size _c3cy4, .-_c3cy4


==================== Asm code ====================
2018-03-16 15:57:51.942085217 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cy4_info:
	.quad	_c3cy4
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.949053967 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.rationalToFloat_closure
.type GHC.Float.rationalToFloat_closure, @object
GHC.Float.rationalToFloat_closure:
	.quad	GHC.Float.rationalToFloat_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:51.94999904 UTC

.section .text
.align 8
.globl GHC.Float.rationalToFloat_entry
.type GHC.Float.rationalToFloat_entry, @object
GHC.Float.rationalToFloat_entry:
_c3cyM:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3cyN
_c3cyO:
	leaq block_c3cyH_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rax
	leaq GHC.Float.rationalToDouble5_closure(%rip),%rsi
	movq %r14,%rbx
	movq %rax,%r14
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
_c3cyN:
	leaq GHC.Float.rationalToFloat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.rationalToFloat_entry, .-GHC.Float.rationalToFloat_entry


==================== Asm code ====================
2018-03-16 15:57:51.950629383 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.rationalToFloat_info
.type GHC.Float.rationalToFloat_info, @object
GHC.Float.rationalToFloat_info:
	.quad	GHC.Float.rationalToFloat_entry
	.quad	0
	.quad	137359792929767438
	.quad	8589934607
	.quad	S3bQP_srt+24


==================== Asm code ====================
2018-03-16 15:57:51.951449587 UTC

.section .text
.align 8
_c3cyH:
_c3cyH:
	movq 8(%rbp),%rax
	cmpq $1,%rbx
	je _c3cyL
_c3cyK:
	leaq block_c3cyR_info(%rip),%rbx
	movq %rbx,(%rbp)
	leaq GHC.Float.rationalToDouble5_closure(%rip),%rsi
	movq %rax,%r14
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
_c3cyL:
	leaq block_c3czE_info(%rip),%rbx
	movq %rbx,(%rbp)
	leaq GHC.Float.rationalToDouble5_closure(%rip),%rsi
	movq %rax,%r14
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
	.size _c3cyH, .-_c3cyH


==================== Asm code ====================
2018-03-16 15:57:51.952151968 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cyH_info:
	.quad	_c3cyH
	.quad	2
	.quad	128352593675026462
	.quad	S3bQP_srt+24


==================== Asm code ====================
2018-03-16 15:57:51.952849381 UTC

.section .text
.align 8
_c3czE:
_c3czE:
	cmpq $1,%rbx
	je _c3cA0
_c3czM:
	leaq block_c3czJ_info(%rip),%rax
	movq %rax,16(%rbp)
	leaq GHC.Float.rationalToDouble5_closure(%rip),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp *GHC.Integer.Type.ltInteger#_entry@gotpcrel(%rip)
_c3cA0:
	leaq GHC.Float.rationalToFloat1_closure(%rip),%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3czE, .-_c3czE


==================== Asm code ====================
2018-03-16 15:57:51.953542462 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3czE_info:
	.quad	_c3czE
	.quad	130
	.quad	126100793861341214
	.quad	S3bQP_srt+24


==================== Asm code ====================
2018-03-16 15:57:51.954237589 UTC

.section .text
.align 8
_c3czJ:
_c3czJ:
	cmpq $1,%rbx
	je _c3czW
_c3czS:
	leaq GHC.Float.rationalToFloat3_closure(%rip),%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c3czW:
	leaq GHC.Float.rationalToFloat2_closure(%rip),%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3czJ, .-_c3czJ


==================== Asm code ====================
2018-03-16 15:57:51.954860016 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3czJ_info:
	.quad	_c3czJ
	.quad	0
	.quad	12884901918
	.quad	S3bQP_srt+208


==================== Asm code ====================
2018-03-16 15:57:51.955550309 UTC

.section .text
.align 8
_c3cyR:
_c3cyR:
	cmpq $1,%rbx
	je _c3czB
_c3cyZ:
	leaq block_c3cyW_info(%rip),%rax
	movq %rax,(%rbp)
	leaq GHC.Float.rationalToDouble5_closure(%rip),%rsi
	movq 8(%rbp),%r14
	jmp *GHC.Integer.Type.ltInteger#_entry@gotpcrel(%rip)
_c3czB:
	leaq GHC.Float.rationalToFloat4_closure+1(%rip),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3cyR, .-_c3cyR


==================== Asm code ====================
2018-03-16 15:57:51.956213448 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cyR_info:
	.quad	_c3cyR
	.quad	2
	.quad	2251804108652574
	.quad	S3bQP_srt+24


==================== Asm code ====================
2018-03-16 15:57:51.956964422 UTC

.section .text
.align 8
_c3cyW:
_c3cyW:
	movq 8(%rbp),%rax
	cmpq $1,%rbx
	je _c3czt
_c3cza:
	movq 16(%rbp),%rbx
	leaq block_c3cz3_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq %rbx,%r8
	movq %rax,%rdi
	movl $24,%esi
	movq $-125,%r14
	addq $16,%rbp
	jmp GHC.Float.$w$sfromRat''1_entry
_c3czt:
	leaq block_c3czg_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.negateInteger_entry@gotpcrel(%rip)
	.size _c3cyW, .-_c3cyW


==================== Asm code ====================
2018-03-16 15:57:51.958105906 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cyW_info:
	.quad	_c3cyW
	.quad	2
	.quad	4294967326
	.quad	S3bQP_srt+176


==================== Asm code ====================
2018-03-16 15:57:51.958795031 UTC

.section .text
.align 8
_c3czg:
_c3czg:
	movq 8(%rbp),%rax
	leaq block_c3czk_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%r8
	movq %rbx,%rdi
	movl $24,%esi
	movq $-125,%r14
	addq $8,%rbp
	jmp GHC.Float.$w$sfromRat''1_entry
	.size _c3czg, .-_c3czg


==================== Asm code ====================
2018-03-16 15:57:51.959378244 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3czg_info:
	.quad	_c3czg
	.quad	1
	.quad	4294967326
	.quad	S3bQP_srt+176


==================== Asm code ====================
2018-03-16 15:57:51.960115508 UTC

.section .text
.align 8
_c3czk:
_c3czk:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3czx
_c3czw:
	movq GHC.Types.F#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movss _n3cAC(%rip),%xmm0
	xorps %xmm0,%xmm1
	movss %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3czx:
	movq $16,904(%r13)
	jmp *stg_gc_f1@gotpcrel(%rip)
	.size _c3czk, .-_c3czk
.section .rodata
.align 8
.align 4
_n3cAC:
	.long	-2147483648


==================== Asm code ====================
2018-03-16 15:57:51.961413506 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3czk_info:
	.quad	_c3czk
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.962220833 UTC

.section .text
.align 8
_c3cz3:
_c3cz3:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3czd
_c3czc:
	movq GHC.Types.F#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movss %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3czd:
	movq $16,904(%r13)
	jmp *stg_gc_f1@gotpcrel(%rip)
	.size _c3cz3, .-_c3cz3


==================== Asm code ====================
2018-03-16 15:57:51.96286057 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cz3_info:
	.quad	_c3cz3
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.965933464 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fFractionalFloat_$cfromRational_closure
.type GHC.Float.$fFractionalFloat_$cfromRational_closure, @object
GHC.Float.$fFractionalFloat_$cfromRational_closure:
	.quad	GHC.Float.$fFractionalFloat_$cfromRational_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:51.966798778 UTC

.section .text
.align 8
.globl GHC.Float.$fFractionalFloat_$cfromRational_entry
.type GHC.Float.$fFractionalFloat_$cfromRational_entry, @object
GHC.Float.$fFractionalFloat_$cfromRational_entry:
_c3cAU:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3cAV
_c3cAW:
	leaq block_c3cAR_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3cAR
_c3cAS:
	movq (%rbx),%rax
	jmp *(%rax)
_c3cAV:
	leaq GHC.Float.$fFractionalFloat_$cfromRational_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fFractionalFloat_$cfromRational_entry, .-GHC.Float.$fFractionalFloat_$cfromRational_entry


==================== Asm code ====================
2018-03-16 15:57:51.967468643 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fFractionalFloat_$cfromRational_info
.type GHC.Float.$fFractionalFloat_$cfromRational_info, @object
GHC.Float.$fFractionalFloat_$cfromRational_info:
	.quad	GHC.Float.$fFractionalFloat_$cfromRational_entry
	.quad	0
	.quad	73014444046
	.quad	4294967301
	.quad	S3bQP_srt+192


==================== Asm code ====================
2018-03-16 15:57:51.968122515 UTC

.section .text
.align 8
_c3cAR:
_c3cAR:
	movq 15(%rbx),%rsi
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp GHC.Float.rationalToFloat_entry
	.size _c3cAR, .-_c3cAR


==================== Asm code ====================
2018-03-16 15:57:51.96869839 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cAR_info:
	.quad	_c3cAR
	.quad	0
	.quad	4294967326
	.quad	S3bQP_srt+192


==================== Asm code ====================
2018-03-16 15:57:51.972295958 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fFloatingFloat_$catanh_closure
.type GHC.Float.$fFloatingFloat_$catanh_closure, @object
GHC.Float.$fFloatingFloat_$catanh_closure:
	.quad	GHC.Float.$fFloatingFloat_$catanh_info


==================== Asm code ====================
2018-03-16 15:57:51.973169367 UTC

.section .text
.align 8
.globl GHC.Float.$fFloatingFloat_$catanh_entry
.type GHC.Float.$fFloatingFloat_$catanh_entry, @object
GHC.Float.$fFloatingFloat_$catanh_entry:
_c3cBi:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3cBC
_c3cBD:
	leaq block_c3cBf_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3cBf
_c3cBg:
	movq (%rbx),%rax
	jmp *(%rax)
_c3cBC:
	leaq GHC.Float.$fFloatingFloat_$catanh_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fFloatingFloat_$catanh_entry, .-GHC.Float.$fFloatingFloat_$catanh_entry


==================== Asm code ====================
2018-03-16 15:57:51.973878365 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fFloatingFloat_$catanh_info
.type GHC.Float.$fFloatingFloat_$catanh_info, @object
GHC.Float.$fFloatingFloat_$catanh_info:
	.quad	GHC.Float.$fFloatingFloat_$catanh_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:51.974710827 UTC

.section .text
.align 8
_c3cBf:
_c3cBf:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3cBG
_c3cBF:
	movss 7(%rbx),%xmm0
	subq $8,%rsp
	movss _n3cBQ(%rip),%xmm1
	subss %xmm0,%xmm1
	addss _n3cBT(%rip),%xmm0
	divss %xmm1,%xmm0
	movl $1,%eax
	call logf@plt
	addq $8,%rsp
	movq GHC.Types.F#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	mulss _n3cBX(%rip),%xmm0
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3cBG:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3cBf, .-_c3cBf
.section .rodata
.align 8
.align 4
_n3cBQ:
	.byte	0
	.byte	0
	.byte	128
	.byte	63
.section .rodata
.align 8
.align 4
_n3cBT:
	.byte	0
	.byte	0
	.byte	128
	.byte	63
.section .rodata
.align 8
.align 4
_n3cBX:
	.byte	0
	.byte	0
	.byte	0
	.byte	63


==================== Asm code ====================
2018-03-16 15:57:51.975453208 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cBf_info:
	.quad	_c3cBf
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.978755184 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fFractionalFloat_$crecip_closure
.type GHC.Float.$fFractionalFloat_$crecip_closure, @object
GHC.Float.$fFractionalFloat_$crecip_closure:
	.quad	GHC.Float.$fFractionalFloat_$crecip_info


==================== Asm code ====================
2018-03-16 15:57:51.979574045 UTC

.section .text
.align 8
.globl GHC.Float.$fFractionalFloat_$crecip_entry
.type GHC.Float.$fFractionalFloat_$crecip_entry, @object
GHC.Float.$fFractionalFloat_$crecip_entry:
_c3cCa:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3cCh
_c3cCi:
	leaq block_c3cC7_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3cC7
_c3cC8:
	movq (%rbx),%rax
	jmp *(%rax)
_c3cCh:
	leaq GHC.Float.$fFractionalFloat_$crecip_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fFractionalFloat_$crecip_entry, .-GHC.Float.$fFractionalFloat_$crecip_entry


==================== Asm code ====================
2018-03-16 15:57:51.980220328 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fFractionalFloat_$crecip_info
.type GHC.Float.$fFractionalFloat_$crecip_info, @object
GHC.Float.$fFractionalFloat_$crecip_info:
	.quad	GHC.Float.$fFractionalFloat_$crecip_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:51.981025187 UTC

.section .text
.align 8
_c3cC7:
_c3cC7:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3cCl
_c3cCk:
	leaq 7(%rbx),%rax
	movss _n3cCw(%rip),%xmm0
	divss (%rax),%xmm0
	movq GHC.Types.F#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3cCl:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3cC7, .-_c3cC7
.section .rodata
.align 8
.align 4
_n3cCw:
	.byte	0
	.byte	0
	.byte	128
	.byte	63


==================== Asm code ====================
2018-03-16 15:57:51.981834096 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cC7_info:
	.quad	_c3cC7
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.983614085 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fFractionalFloat_closure
.type GHC.Float.$fFractionalFloat_closure, @object
GHC.Float.$fFractionalFloat_closure:
	.quad	GHC.Real.C:Fractional_con_info
	.quad	GHC.Float.$fNumFloat_closure+1
	.quad	GHC.Float.divideFloat_closure+2
	.quad	GHC.Float.$fFractionalFloat_$crecip_closure+1
	.quad	GHC.Float.$fFractionalFloat_$cfromRational_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:51.986850775 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fEnumFloat_$snumericEnumFromThen_closure
.type GHC.Float.$fEnumFloat_$snumericEnumFromThen_closure, @object
GHC.Float.$fEnumFloat_$snumericEnumFromThen_closure:
	.quad	GHC.Float.$fEnumFloat_$snumericEnumFromThen_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:51.987667613 UTC

.section .text
.align 8
.globl GHC.Float.$fEnumFloat_$snumericEnumFromThen_entry
.type GHC.Float.$fEnumFloat_$snumericEnumFromThen_entry, @object
GHC.Float.$fEnumFloat_$snumericEnumFromThen_entry:
_c3cCK:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3cCL
_c3cCM:
	leaq block_c3cCH_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rsi,%rdi
	movq %r14,%rsi
	leaq GHC.Float.$fFractionalFloat_closure+1(%rip),%r14
	addq $-8,%rbp
	jmp *GHC.Real.$wnumericEnumFromThen_entry@gotpcrel(%rip)
_c3cCL:
	leaq GHC.Float.$fEnumFloat_$snumericEnumFromThen_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fEnumFloat_$snumericEnumFromThen_entry, .-GHC.Float.$fEnumFloat_$snumericEnumFromThen_entry


==================== Asm code ====================
2018-03-16 15:57:51.988323959 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fEnumFloat_$snumericEnumFromThen_info
.type GHC.Float.$fEnumFloat_$snumericEnumFromThen_info, @object
GHC.Float.$fEnumFloat_$snumericEnumFromThen_info:
	.quad	GHC.Float.$fEnumFloat_$snumericEnumFromThen_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S3bQP_srt+232


==================== Asm code ====================
2018-03-16 15:57:51.989097033 UTC

.section .text
.align 8
_c3cCH:
_c3cCH:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3cCP
_c3cCO:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3cCP:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c3cCH, .-_c3cCH


==================== Asm code ====================
2018-03-16 15:57:51.990219894 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cCH_info:
	.quad	_c3cCH
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:51.993372262 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fEnumFloat_$snumericEnumFrom_closure
.type GHC.Float.$fEnumFloat_$snumericEnumFrom_closure, @object
GHC.Float.$fEnumFloat_$snumericEnumFrom_closure:
	.quad	GHC.Float.$fEnumFloat_$snumericEnumFrom_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:51.994181655 UTC

.section .text
.align 8
.globl GHC.Float.$fEnumFloat_$snumericEnumFrom_entry
.type GHC.Float.$fEnumFloat_$snumericEnumFrom_entry, @object
GHC.Float.$fEnumFloat_$snumericEnumFrom_entry:
_c3cD8:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3cD9
_c3cDa:
	leaq block_c3cD5_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rsi
	leaq GHC.Float.$fFractionalFloat_closure+1(%rip),%r14
	addq $-8,%rbp
	jmp *GHC.Real.$wnumericEnumFrom_entry@gotpcrel(%rip)
_c3cD9:
	leaq GHC.Float.$fEnumFloat_$snumericEnumFrom_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fEnumFloat_$snumericEnumFrom_entry, .-GHC.Float.$fEnumFloat_$snumericEnumFrom_entry


==================== Asm code ====================
2018-03-16 15:57:51.994821569 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fEnumFloat_$snumericEnumFrom_info
.type GHC.Float.$fEnumFloat_$snumericEnumFrom_info, @object
GHC.Float.$fEnumFloat_$snumericEnumFrom_info:
	.quad	GHC.Float.$fEnumFloat_$snumericEnumFrom_entry
	.quad	0
	.quad	21994527522830
	.quad	4294967301
	.quad	S3bQP_srt+152


==================== Asm code ====================
2018-03-16 15:57:51.995536228 UTC

.section .text
.align 8
_c3cD5:
_c3cD5:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3cDd
_c3cDc:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3cDd:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c3cD5, .-_c3cD5


==================== Asm code ====================
2018-03-16 15:57:51.996129639 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cD5_info:
	.quad	_c3cD5
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.00034952 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fFloatingFloat_$cacosh_closure
.type GHC.Float.$fFloatingFloat_$cacosh_closure, @object
GHC.Float.$fFloatingFloat_$cacosh_closure:
	.quad	GHC.Float.$fFloatingFloat_$cacosh_info


==================== Asm code ====================
2018-03-16 15:57:52.001188671 UTC

.section .text
.align 8
.globl GHC.Float.$fFloatingFloat_$cacosh_entry
.type GHC.Float.$fFloatingFloat_$cacosh_entry, @object
GHC.Float.$fFloatingFloat_$cacosh_entry:
_c3cDw:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3cE0
_c3cE1:
	leaq block_c3cDt_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3cDt
_c3cDu:
	movq (%rbx),%rax
	jmp *(%rax)
_c3cE0:
	leaq GHC.Float.$fFloatingFloat_$cacosh_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fFloatingFloat_$cacosh_entry, .-GHC.Float.$fFloatingFloat_$cacosh_entry


==================== Asm code ====================
2018-03-16 15:57:52.002074367 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fFloatingFloat_$cacosh_info
.type GHC.Float.$fFloatingFloat_$cacosh_info, @object
GHC.Float.$fFloatingFloat_$cacosh_info:
	.quad	GHC.Float.$fFloatingFloat_$cacosh_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:52.002919947 UTC

.section .text
.align 8
_c3cDt:
_c3cDt:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3cE4
_c3cE3:
	movss 7(%rbx),%xmm0
	movss %xmm0,%xmm1
	addss _n3cEe(%rip),%xmm1
	movss %xmm0,%xmm2
	subss _n3cEh(%rip),%xmm2
	divss %xmm1,%xmm2
	sqrtss %xmm2,%xmm1
	subq $8,%rsp
	movss %xmm0,%xmm2
	addss _n3cEl(%rip),%xmm2
	mulss %xmm1,%xmm2
	addss %xmm2,%xmm0
	movl $1,%eax
	call logf@plt
	addq $8,%rsp
	movq GHC.Types.F#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3cE4:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3cDt, .-_c3cDt
.section .rodata
.align 8
.align 4
_n3cEe:
	.byte	0
	.byte	0
	.byte	128
	.byte	63
.section .rodata
.align 8
.align 4
_n3cEh:
	.byte	0
	.byte	0
	.byte	128
	.byte	63
.section .rodata
.align 8
.align 4
_n3cEl:
	.byte	0
	.byte	0
	.byte	128
	.byte	63


==================== Asm code ====================
2018-03-16 15:57:52.003685806 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cDt_info:
	.quad	_c3cDt
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.007050569 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fFloatingFloat_$casinh_closure
.type GHC.Float.$fFloatingFloat_$casinh_closure, @object
GHC.Float.$fFloatingFloat_$casinh_closure:
	.quad	GHC.Float.$fFloatingFloat_$casinh_info


==================== Asm code ====================
2018-03-16 15:57:52.007847069 UTC

.section .text
.align 8
.globl GHC.Float.$fFloatingFloat_$casinh_entry
.type GHC.Float.$fFloatingFloat_$casinh_entry, @object
GHC.Float.$fFloatingFloat_$casinh_entry:
_c3cEB:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3cEW
_c3cEX:
	leaq block_c3cEy_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3cEy
_c3cEz:
	movq (%rbx),%rax
	jmp *(%rax)
_c3cEW:
	leaq GHC.Float.$fFloatingFloat_$casinh_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fFloatingFloat_$casinh_entry, .-GHC.Float.$fFloatingFloat_$casinh_entry


==================== Asm code ====================
2018-03-16 15:57:52.008497284 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fFloatingFloat_$casinh_info
.type GHC.Float.$fFloatingFloat_$casinh_info, @object
GHC.Float.$fFloatingFloat_$casinh_info:
	.quad	GHC.Float.$fFloatingFloat_$casinh_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:52.009414814 UTC

.section .text
.align 8
_c3cEy:
_c3cEy:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3cF0
_c3cEZ:
	movss 7(%rbx),%xmm0
	movss %xmm0,%xmm1
	mulss %xmm0,%xmm1
	addss _n3cFa(%rip),%xmm1
	sqrtss %xmm1,%xmm1
	subq $8,%rsp
	addss %xmm1,%xmm0
	movl $1,%eax
	call logf@plt
	addq $8,%rsp
	movq GHC.Types.F#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3cF0:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3cEy, .-_c3cEy
.section .rodata
.align 8
.align 4
_n3cFa:
	.byte	0
	.byte	0
	.byte	128
	.byte	63


==================== Asm code ====================
2018-03-16 15:57:52.010124339 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cEy_info:
	.quad	_c3cEy
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.011815261 UTC

.section .data
.align 8
.align 1
sat_s3aJa_closure:
	.quad	GHC.Types.I#_con_info
	.quad	2


==================== Asm code ====================
2018-03-16 15:57:52.013527738 UTC

.section .data
.align 8
.align 1
sat_s3aJb_closure:
	.quad	:_con_info
	.quad	sat_s3aJa_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:52.016234002 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble5_closure
.type GHC.Float.$fRealFloatDouble5_closure, @object
GHC.Float.$fRealFloatDouble5_closure:
	.quad	GHC.Float.$fRealFloatDouble5_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:52.017200695 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFloatDouble5_entry
.type GHC.Float.$fRealFloatDouble5_entry, @object
GHC.Float.$fRealFloatDouble5_entry:
_c3cFr:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3cFs
_c3cFt:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c3cFq
_c3cFp:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq sat_s3aJb_closure+2(%rip),%rsi
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%r14
	addq $-16,%rbp
	jmp *GHC.Integer.Type.mkInteger_entry@gotpcrel(%rip)
_c3cFs:
	jmp *-16(%r13)
_c3cFq:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Float.$fRealFloatDouble5_entry, .-GHC.Float.$fRealFloatDouble5_entry


==================== Asm code ====================
2018-03-16 15:57:52.017984952 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble5_info
.type GHC.Float.$fRealFloatDouble5_info, @object
GHC.Float.$fRealFloatDouble5_info:
	.quad	GHC.Float.$fRealFloatDouble5_entry
	.quad	0
	.quad	4294967317
	.quad	S3bQP_srt+256


==================== Asm code ====================
2018-03-16 15:57:52.019605973 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.minExpt_closure
.type GHC.Float.minExpt_closure, @object
GHC.Float.minExpt_closure:
	.quad	GHC.Types.I#_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:52.021781507 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFracFloat2_closure
.type GHC.Float.$fRealFracFloat2_closure, @object
GHC.Float.$fRealFracFloat2_closure:
	.quad	GHC.Types.I#_con_info
	.quad	1


==================== Asm code ====================
2018-03-16 15:57:52.023402894 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFracFloat1_closure
.type GHC.Float.$fRealFracFloat1_closure, @object
GHC.Float.$fRealFracFloat1_closure:
	.quad	GHC.Types.I#_con_info
	.quad	-1


==================== Asm code ====================
2018-03-16 15:57:52.040107742 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$w$cproperFraction1_closure
.type GHC.Float.$w$cproperFraction1_closure, @object
GHC.Float.$w$cproperFraction1_closure:
	.quad	GHC.Float.$w$cproperFraction1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:52.040889452 UTC

.section .text
.align 8
.globl GHC.Float.$w$cproperFraction1_slow
.type GHC.Float.$w$cproperFraction1_slow, @object
GHC.Float.$w$cproperFraction1_slow:
_c3cFH:
	movss 8(%rbp),%xmm1
	movq (%rbp),%r14
	addq $16,%rbp
	jmp GHC.Float.$w$cproperFraction1_entry
	.size GHC.Float.$w$cproperFraction1_slow, .-GHC.Float.$w$cproperFraction1_slow


==================== Asm code ====================
2018-03-16 15:57:52.041623508 UTC

.section .text
.align 8
$dReal_s3aJh_entry:
_c3cFT:
	movq 16(%rbx),%r14
	jmp *GHC.Real.$p1Integral_entry@gotpcrel(%rip)
	.size $dReal_s3aJh_entry, .-$dReal_s3aJh_entry


==================== Asm code ====================
2018-03-16 15:57:52.042183138 UTC

.section .data.rel.ro
.align 8
.align 1
$dReal_s3aJh_info:
	.quad	$dReal_s3aJh_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:52.042931066 UTC

.section .text
.align 8
$dNum_s3aJi_entry:
_c3cG0:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3cG1
_c3cG2:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Real.$p1Real_entry@gotpcrel(%rip)
_c3cG1:
	jmp *-16(%r13)
	.size $dNum_s3aJi_entry, .-$dNum_s3aJi_entry


==================== Asm code ====================
2018-03-16 15:57:52.043581665 UTC

.section .data.rel.ro
.align 8
.align 1
$dNum_s3aJi_info:
	.quad	$dNum_s3aJi_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:52.044701081 UTC

.section .text
.align 8
i_s3aJk_entry:
_c3cGf:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3cGg
_c3cGh:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3cGj
_c3cGi:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	testq %rax,%rax
	jl _c3cGd
_c3cGe:
	negq %rbx
	cmpq $64,%rbx
	jl _c3cGZ
_c3cH6:
	testq %rax,%rax
	jge _c3cH4
_c3cH5:
	addq $-16,%r12
	leaq GHC.Float.$fRealFracFloat1_closure+1(%rip),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3cH4:
	addq $-16,%r12
	leaq GHC.Float.minExpt_closure+1(%rip),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3cGZ:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,%rcx
	sarq %cl,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3cGd:
	negq %rbx
	cmpq $64,%rbx
	jl _c3cGC
_c3cGM:
	negq %rax
	testq %rax,%rax
	jge _c3cH4
_c3cGL:
	addq $-16,%r12
	leaq GHC.Float.$fRealFracFloat2_closure+1(%rip),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3cGC:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-8(%r12)
	negq %rax
	movq %rbx,%rcx
	sarq %cl,%rax
	negq %rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3cGj:
	movq $16,904(%r13)
_c3cGg:
	jmp *-16(%r13)
	.size i_s3aJk_entry, .-i_s3aJk_entry


==================== Asm code ====================
2018-03-16 15:57:52.045698025 UTC

.section .data.rel.ro
.align 8
.align 1
i_s3aJk_info:
	.quad	i_s3aJk_entry
	.quad	8589934592
	.quad	20


==================== Asm code ====================
2018-03-16 15:57:52.047245023 UTC

.section .text
.align 8
sat_s3aJL_entry:
_c3cHe:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c3cHf
_c3cHg:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3cHb_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq 32(%rbx),%rcx
	movq 16(%rbx),%rbx
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _c3cHb
_c3cHc:
	movq (%rbx),%rax
	jmp *(%rax)
_c3cHf:
	jmp *-16(%r13)
	.size sat_s3aJL_entry, .-sat_s3aJL_entry


==================== Asm code ====================
2018-03-16 15:57:52.047977565 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aJL_info:
	.quad	sat_s3aJL_entry
	.quad	8589934593
	.quad	15


==================== Asm code ====================
2018-03-16 15:57:52.048742353 UTC

.section .text
.align 8
_c3cHb:
_c3cHb:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rcx
	negq %rcx
	cmpq $64,%rcx
	jl _c3cHG
_c3cHV:
	leaq block_c3cHM_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
_c3cHG:
	leaq block_c3cHw_info(%rip),%rdx
	movq %rdx,8(%rbp)
	movq 7(%rbx),%rbx
	shlq %cl,%rbx
	movq %rax,%r14
	subq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
	.size _c3cHb, .-_c3cHb


==================== Asm code ====================
2018-03-16 15:57:52.049533793 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cHb_info:
	.quad	_c3cHb
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.050161045 UTC

.section .text
.align 8
_c3cHw:
_c3cHw:
	movq 8(%rbp),%rax
	leaq block_c3cHA_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.encodeFloatInteger_entry@gotpcrel(%rip)
	.size _c3cHw, .-_c3cHw


==================== Asm code ====================
2018-03-16 15:57:52.050773811 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cHw_info:
	.quad	_c3cHw
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.051567617 UTC

.section .text
.align 8
_c3cHA:
_c3cHA:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3cHK
_c3cHJ:
	movq GHC.Types.F#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movss %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3cHK:
	movq $16,904(%r13)
	jmp *stg_gc_f1@gotpcrel(%rip)
	.size _c3cHA, .-_c3cHA


==================== Asm code ====================
2018-03-16 15:57:52.052197686 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cHA_info:
	.quad	_c3cHA
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.052853625 UTC

.section .text
.align 8
_c3cHM:
_c3cHM:
	movq 8(%rbp),%rax
	leaq block_c3cHQ_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.encodeFloatInteger_entry@gotpcrel(%rip)
	.size _c3cHM, .-_c3cHM


==================== Asm code ====================
2018-03-16 15:57:52.053457635 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cHM_info:
	.quad	_c3cHM
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.054337844 UTC

.section .text
.align 8
_c3cHQ:
_c3cHQ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3cHZ
_c3cHY:
	movq GHC.Types.F#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movss %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3cHZ:
	movq $16,904(%r13)
	jmp *stg_gc_f1@gotpcrel(%rip)
	.size _c3cHQ, .-_c3cHQ


==================== Asm code ====================
2018-03-16 15:57:52.055210161 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cHQ_info:
	.quad	_c3cHQ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.055955271 UTC

.section .text
.align 8
sat_s3aJz_entry:
_c3cIc:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3cId
_c3cIe:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3cI9_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _c3cI9
_c3cIa:
	movq (%rbx),%rax
	jmp *(%rax)
_c3cId:
	jmp *-16(%r13)
	.size sat_s3aJz_entry, .-sat_s3aJz_entry


==================== Asm code ====================
2018-03-16 15:57:52.05662544 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aJz_info:
	.quad	sat_s3aJz_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:52.057227292 UTC

.section .text
.align 8
_c3cI9:
_c3cI9:
	movq 7(%rbx),%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
	.size _c3cI9, .-_c3cI9


==================== Asm code ====================
2018-03-16 15:57:52.057817933 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cI9_info:
	.quad	_c3cI9
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.058626762 UTC

.section .text
.align 8
sat_s3aJA_entry:
_c3cIj:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3cIk
_c3cIl:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3cIn
_c3cIm:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	leaq sat_s3aJz_info(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rbx,(%r12)
	movq %rax,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c3cIn:
	movq $24,904(%r13)
_c3cIk:
	jmp *-16(%r13)
	.size sat_s3aJA_entry, .-sat_s3aJA_entry


==================== Asm code ====================
2018-03-16 15:57:52.059330882 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aJA_info:
	.quad	sat_s3aJA_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:52.060289959 UTC

.section .text
.align 8
sat_s3aJO_entry:
_c3cIC:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3cID
_c3cIE:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Float.$fRealFloatDouble5_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c3cID:
	jmp *-16(%r13)
	.size sat_s3aJO_entry, .-sat_s3aJO_entry


==================== Asm code ====================
2018-03-16 15:57:52.06100496 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aJO_info:
	.quad	sat_s3aJO_entry
	.quad	1
	.quad	4294967312
	.quad	S3bQP_srt+264


==================== Asm code ====================
2018-03-16 15:57:52.062115356 UTC

.section .text
.align 8
sat_s3aJQ_entry:
_c3cIF:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3cIG
_c3cIH:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c3cIJ
_c3cII:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-32(%r12)
	movq %rbx,-24(%r12)
	leaq sat_s3aJO_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,(%r12)
	leaq -31(%r12),%r8
	leaq -16(%r12),%rdi
	movq GHC.Real.$fIntegralInt_closure@gotpcrel(%rip),%rsi
	movq %rax,%r14
	addq $-16,%rbp
	jmp *GHC.Real.^_entry@gotpcrel(%rip)
_c3cIJ:
	movq $40,904(%r13)
_c3cIG:
	jmp *-16(%r13)
	.size sat_s3aJQ_entry, .-sat_s3aJQ_entry


==================== Asm code ====================
2018-03-16 15:57:52.062862022 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aJQ_info:
	.quad	sat_s3aJQ_entry
	.quad	4294967297
	.quad	30064771091
	.quad	S3bQP_srt+264


==================== Asm code ====================
2018-03-16 15:57:52.063869374 UTC

.section .text
.align 8
sat_s3aJM_entry:
_c3cIS:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3cIT
_c3cIU:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
_c3cIT:
	jmp *-16(%r13)
	.size sat_s3aJM_entry, .-sat_s3aJM_entry


==================== Asm code ====================
2018-03-16 15:57:52.064552833 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aJM_info:
	.quad	sat_s3aJM_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 15:57:52.065473849 UTC

.section .text
.align 8
sat_s3aJN_entry:
_c3cIV:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3cIW
_c3cIX:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3cIZ
_c3cIY:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	leaq sat_s3aJM_info(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rbx,(%r12)
	movq %rax,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c3cIZ:
	movq $24,904(%r13)
_c3cIW:
	jmp *-16(%r13)
	.size sat_s3aJN_entry, .-sat_s3aJN_entry


==================== Asm code ====================
2018-03-16 15:57:52.066207636 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aJN_info:
	.quad	sat_s3aJN_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 15:57:52.06703621 UTC

.section .text
.align 8
sat_s3aJR_entry:
_c3cJ0:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c3cJ1
_c3cJ2:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c3cJ4
_c3cJ3:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	leaq sat_s3aJQ_info(%rip),%rdx
	movq %rdx,-56(%r12)
	movq %rax,-40(%r12)
	movq %rbx,-32(%r12)
	leaq sat_s3aJN_info(%rip),%rbx
	movq %rbx,-24(%r12)
	movq %rax,-8(%r12)
	movq %rcx,(%r12)
	movq %rax,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-32(%rbp)
	leaq -56(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Num.*_entry@gotpcrel(%rip)
_c3cJ4:
	movq $64,904(%r13)
_c3cJ1:
	jmp *-16(%r13)
	.size sat_s3aJR_entry, .-sat_s3aJR_entry


==================== Asm code ====================
2018-03-16 15:57:52.067800648 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aJR_info:
	.quad	sat_s3aJR_entry
	.quad	8589934593
	.quad	30064771087
	.quad	S3bQP_srt+264


==================== Asm code ====================
2018-03-16 15:57:52.068500424 UTC

.section .text
.align 8
.globl GHC.Float.$w$cproperFraction1_entry
.type GHC.Float.$w$cproperFraction1_entry, @object
GHC.Float.$w$cproperFraction1_entry:
_c3cJ8:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3cJ9
_c3cJa:
	leaq block_c3cFL_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	jmp *stg_decodeFloat_Int#@gotpcrel(%rip)
_c3cJ9:
	leaq GHC.Float.$w$cproperFraction1_closure(%rip),%rbx
	movq %r14,-16(%rbp)
	movss %xmm1,-8(%rbp)
	addq $-16,%rbp
	jmp *-8(%r13)
	.size GHC.Float.$w$cproperFraction1_entry, .-GHC.Float.$w$cproperFraction1_entry


==================== Asm code ====================
2018-03-16 15:57:52.06916304 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$w$cproperFraction1_info
.type GHC.Float.$w$cproperFraction1_info, @object
GHC.Float.$w$cproperFraction1_info:
	.quad	GHC.Float.$w$cproperFraction1_entry
	.quad	0
	.quad	64424509454
	.quad	8589934592
	.quad	S3bQP_srt+264
	.quad	130
	.quad	GHC.Float.$w$cproperFraction1_slow


==================== Asm code ====================
2018-03-16 15:57:52.069797228 UTC

.section .text
.align 8
_c3cFL:
_c3cFL:
	movq %r14,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp _c3cFM
	.size _c3cFL, .-_c3cFL


==================== Asm code ====================
2018-03-16 15:57:52.070391935 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cFL_info:
	.quad	_c3cFL
	.quad	1
	.quad	30064771102
	.quad	S3bQP_srt+264


==================== Asm code ====================
2018-03-16 15:57:52.071572526 UTC

.section .text
.align 8
_c3cFM:
_c3cFM:
	addq $152,%r12
	cmpq 856(%r13),%r12
	ja _c3cJd
_c3cJc:
	leaq $dReal_s3aJh_info(%rip),%rax
	movq %rax,-144(%r12)
	movq 24(%rbp),%rax
	movq %rax,-128(%r12)
	leaq $dNum_s3aJi_info(%rip),%rax
	movq %rax,-120(%r12)
	leaq -144(%r12),%rax
	movq %rax,-104(%r12)
	movq 16(%rbp),%rax
	movq 8(%rbp),%rbx
	leaq -120(%r12),%rcx
	testq %rbx,%rbx
	jl _c3cJ6
_c3cJ7:
	leaq sat_s3aJR_info(%rip),%rdx
	movq %rdx,-96(%r12)
	movq %rcx,-80(%r12)
	movq %rax,-72(%r12)
	movq %rbx,-64(%r12)
	leaq -96(%r12),%rax
	addq $-64,%r12
	leaq GHC.Float.rationalToFloat4_closure+1(%rip),%r14
	movq %rax,%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3cJd:
	movq $152,904(%r13)
	leaq block_c3cFM_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
_c3cJ6:
	leaq i_s3aJk_info(%rip),%rdx
	movq %rdx,-96(%r12)
	movq %rax,-80(%r12)
	movq %rbx,-72(%r12)
	leaq sat_s3aJL_info(%rip),%rdx
	movq %rdx,-64(%r12)
	leaq -96(%r12),%rdx
	movq %rdx,-48(%r12)
	movq %rax,-40(%r12)
	movq %rbx,-32(%r12)
	leaq sat_s3aJA_info(%rip),%rax
	movq %rax,-24(%r12)
	movq %rcx,-8(%r12)
	movq %rdx,(%r12)
	leaq -64(%r12),%r14
	leaq -24(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3cFM, .-_c3cFM


==================== Asm code ====================
2018-03-16 15:57:52.072679271 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cFM_info:
	.quad	_c3cFM
	.quad	195
	.quad	30064771102
	.quad	S3bQP_srt+264


==================== Asm code ====================
2018-03-16 15:57:52.081408909 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFracFloat_$cproperFraction_closure
.type GHC.Float.$fRealFracFloat_$cproperFraction_closure, @object
GHC.Float.$fRealFracFloat_$cproperFraction_closure:
	.quad	GHC.Float.$fRealFracFloat_$cproperFraction_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:52.082460601 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFracFloat_$cproperFraction_entry
.type GHC.Float.$fRealFracFloat_$cproperFraction_entry, @object
GHC.Float.$fRealFracFloat_$cproperFraction_entry:
_c3cLz:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3cLF
_c3cLG:
	leaq block_c3cLw_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3cLw
_c3cLx:
	movq (%rbx),%rax
	jmp *(%rax)
_c3cLF:
	leaq GHC.Float.$fRealFracFloat_$cproperFraction_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFracFloat_$cproperFraction_entry, .-GHC.Float.$fRealFracFloat_$cproperFraction_entry


==================== Asm code ====================
2018-03-16 15:57:52.083320356 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFracFloat_$cproperFraction_info
.type GHC.Float.$fRealFracFloat_$cproperFraction_info, @object
GHC.Float.$fRealFracFloat_$cproperFraction_info:
	.quad	GHC.Float.$fRealFracFloat_$cproperFraction_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S3bQP_srt+288


==================== Asm code ====================
2018-03-16 15:57:52.084321559 UTC

.section .text
.align 8
_c3cLw:
_c3cLw:
	movq 8(%rbp),%rax
	leaq block_c3cLC_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movss 7(%rbx),%xmm1
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Float.$w$cproperFraction1_entry
	.size _c3cLw, .-_c3cLw


==================== Asm code ====================
2018-03-16 15:57:52.085301198 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cLw_info:
	.quad	_c3cLw
	.quad	1
	.quad	4294967326
	.quad	S3bQP_srt+288


==================== Asm code ====================
2018-03-16 15:57:52.086289484 UTC

.section .text
.align 8
_c3cLC:
_c3cLC:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3cLK
_c3cLJ:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3cLK:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c3cLC, .-_c3cLC


==================== Asm code ====================
2018-03-16 15:57:52.087198936 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cLC_info:
	.quad	_c3cLC
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.092775192 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFracFloat_$ctruncate_closure
.type GHC.Float.$fRealFracFloat_$ctruncate_closure, @object
GHC.Float.$fRealFracFloat_$ctruncate_closure:
	.quad	GHC.Float.$fRealFracFloat_$ctruncate_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:52.093901256 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFracFloat_$ctruncate_entry
.type GHC.Float.$fRealFracFloat_$ctruncate_entry, @object
GHC.Float.$fRealFracFloat_$ctruncate_entry:
_c3cM9:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3cMd
_c3cMe:
	leaq block_c3cM6_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3cM6
_c3cM7:
	movq (%rbx),%rax
	jmp *(%rax)
_c3cMd:
	leaq GHC.Float.$fRealFracFloat_$ctruncate_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFracFloat_$ctruncate_entry, .-GHC.Float.$fRealFracFloat_$ctruncate_entry


==================== Asm code ====================
2018-03-16 15:57:52.094548595 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFracFloat_$ctruncate_info
.type GHC.Float.$fRealFracFloat_$ctruncate_info, @object
GHC.Float.$fRealFracFloat_$ctruncate_info:
	.quad	GHC.Float.$fRealFracFloat_$ctruncate_entry
	.quad	0
	.quad	21474836494
	.quad	8589934607
	.quad	S3bQP_srt+288


==================== Asm code ====================
2018-03-16 15:57:52.095222183 UTC

.section .text
.align 8
_c3cM6:
_c3cM6:
	movq 8(%rbp),%rax
	leaq block_c3cMc_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movss 7(%rbx),%xmm1
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Float.$w$cproperFraction1_entry
	.size _c3cM6, .-_c3cM6


==================== Asm code ====================
2018-03-16 15:57:52.095798328 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cM6_info:
	.quad	_c3cM6
	.quad	1
	.quad	4294967326
	.quad	S3bQP_srt+288


==================== Asm code ====================
2018-03-16 15:57:52.096591001 UTC

.section .text
.align 8
_c3cMc:
_c3cMc:
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c3cMc, .-_c3cMc


==================== Asm code ====================
2018-03-16 15:57:52.097139762 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cMc_info:
	.quad	_c3cMc
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.102943892 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFracFloat_$cceiling_closure
.type GHC.Float.$fRealFracFloat_$cceiling_closure, @object
GHC.Float.$fRealFracFloat_$cceiling_closure:
	.quad	GHC.Float.$fRealFracFloat_$cceiling_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:52.103998712 UTC

.section .text
.align 8
sat_s3aKi_entry:
_c3cN3:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3cN4
_c3cN5:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Float.$fRealDouble1_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c3cN4:
	jmp *-16(%r13)
	.size sat_s3aKi_entry, .-sat_s3aKi_entry


==================== Asm code ====================
2018-03-16 15:57:52.104872816 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aKi_info:
	.quad	sat_s3aKi_entry
	.quad	1
	.quad	4294967312
	.quad	S3bQP_srt+312


==================== Asm code ====================
2018-03-16 15:57:52.106031202 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFracFloat_$cceiling_entry
.type GHC.Float.$fRealFracFloat_$cceiling_entry, @object
GHC.Float.$fRealFracFloat_$cceiling_entry:
_c3cN6:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3cN7
_c3cN8:
	leaq block_c3cMB_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3cMB
_c3cMC:
	movq (%rbx),%rax
	jmp *(%rax)
_c3cN7:
	leaq GHC.Float.$fRealFracFloat_$cceiling_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFracFloat_$cceiling_entry, .-GHC.Float.$fRealFracFloat_$cceiling_entry


==================== Asm code ====================
2018-03-16 15:57:52.106909067 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFracFloat_$cceiling_info
.type GHC.Float.$fRealFracFloat_$cceiling_info, @object
GHC.Float.$fRealFracFloat_$cceiling_info:
	.quad	GHC.Float.$fRealFracFloat_$cceiling_entry
	.quad	0
	.quad	107374182414
	.quad	8589934607
	.quad	S3bQP_srt+288


==================== Asm code ====================
2018-03-16 15:57:52.107909514 UTC

.section .text
.align 8
_c3cMB:
_c3cMB:
	leaq block_c3cMG_info(%rip),%rax
	movq %rax,(%rbp)
	movss 7(%rbx),%xmm1
	movq 8(%rbp),%r14
	jmp GHC.Float.$w$cproperFraction1_entry
	.size _c3cMB, .-_c3cMB


==================== Asm code ====================
2018-03-16 15:57:52.10856856 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cMB_info:
	.quad	_c3cMB
	.quad	1
	.quad	38654705694
	.quad	S3bQP_srt+288


==================== Asm code ====================
2018-03-16 15:57:52.109517002 UTC

.section .text
.align 8
_c3cMG:
_c3cMG:
	leaq block_c3cMI_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq %r14,%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c3cMI
_c3cMJ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3cMG, .-_c3cMG


==================== Asm code ====================
2018-03-16 15:57:52.110260341 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cMG_info:
	.quad	_c3cMG
	.quad	1
	.quad	4294967326
	.quad	S3bQP_srt+312


==================== Asm code ====================
2018-03-16 15:57:52.111258381 UTC

.section .text
.align 8
_c3cMI:
_c3cMI:
	movss 7(%rbx),%xmm0
	xorps %xmm1,%xmm1
	ucomiss %xmm1,%xmm0
	ja _c3cNe
_c3cNd:
	movq 8(%rbp),%rbx
	addq $24,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_c3cNe:
	leaq block_c3cMR_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%r14
	jmp *GHC.Real.$p1Integral_entry@gotpcrel(%rip)
	.size _c3cMI, .-_c3cMI


==================== Asm code ====================
2018-03-16 15:57:52.112098264 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cMI_info:
	.quad	_c3cMI
	.quad	2
	.quad	4294967326
	.quad	S3bQP_srt+312


==================== Asm code ====================
2018-03-16 15:57:52.113040328 UTC

.section .text
.align 8
_c3cMR:
_c3cMR:
	leaq block_c3cMV_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp *GHC.Real.$p1Real_entry@gotpcrel(%rip)
	.size _c3cMR, .-_c3cMR


==================== Asm code ====================
2018-03-16 15:57:52.11393103 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cMR_info:
	.quad	_c3cMR
	.quad	130
	.quad	4294967326
	.quad	S3bQP_srt+312


==================== Asm code ====================
2018-03-16 15:57:52.11508334 UTC

.section .text
.align 8
_c3cMV:
_c3cMV:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3cNi
_c3cNh:
	leaq sat_s3aKi_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,(%r12)
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,(%rbp)
	leaq -16(%r12),%rax
	movq %rax,16(%rbp)
	jmp *GHC.Num.+_entry@gotpcrel(%rip)
_c3cNi:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3cMV, .-_c3cMV


==================== Asm code ====================
2018-03-16 15:57:52.115828658 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cMV_info:
	.quad	_c3cMV
	.quad	130
	.quad	4294967326
	.quad	S3bQP_srt+312


==================== Asm code ====================
2018-03-16 15:57:52.122484689 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFracFloat_$cfloor_closure
.type GHC.Float.$fRealFracFloat_$cfloor_closure, @object
GHC.Float.$fRealFracFloat_$cfloor_closure:
	.quad	GHC.Float.$fRealFracFloat_$cfloor_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:52.123391501 UTC

.section .text
.align 8
sat_s3aKv_entry:
_c3cOv:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3cOw
_c3cOx:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Float.$fRealDouble1_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c3cOw:
	jmp *-16(%r13)
	.size sat_s3aKv_entry, .-sat_s3aKv_entry


==================== Asm code ====================
2018-03-16 15:57:52.124099202 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aKv_info:
	.quad	sat_s3aKv_entry
	.quad	1
	.quad	4294967312
	.quad	S3bQP_srt+312


==================== Asm code ====================
2018-03-16 15:57:52.124868182 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFracFloat_$cfloor_entry
.type GHC.Float.$fRealFracFloat_$cfloor_entry, @object
GHC.Float.$fRealFracFloat_$cfloor_entry:
_c3cOy:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3cOz
_c3cOA:
	leaq block_c3cO3_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3cO3
_c3cO4:
	movq (%rbx),%rax
	jmp *(%rax)
_c3cOz:
	leaq GHC.Float.$fRealFracFloat_$cfloor_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFracFloat_$cfloor_entry, .-GHC.Float.$fRealFracFloat_$cfloor_entry


==================== Asm code ====================
2018-03-16 15:57:52.125686463 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFracFloat_$cfloor_info
.type GHC.Float.$fRealFracFloat_$cfloor_info, @object
GHC.Float.$fRealFracFloat_$cfloor_info:
	.quad	GHC.Float.$fRealFracFloat_$cfloor_entry
	.quad	0
	.quad	176093659150
	.quad	8589934607
	.quad	S3bQP_srt+288


==================== Asm code ====================
2018-03-16 15:57:52.12640133 UTC

.section .text
.align 8
_c3cO3:
_c3cO3:
	leaq block_c3cO8_info(%rip),%rax
	movq %rax,(%rbp)
	movss 7(%rbx),%xmm1
	movq 8(%rbp),%r14
	jmp GHC.Float.$w$cproperFraction1_entry
	.size _c3cO3, .-_c3cO3


==================== Asm code ====================
2018-03-16 15:57:52.127009042 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cO3_info:
	.quad	_c3cO3
	.quad	1
	.quad	38654705694
	.quad	S3bQP_srt+288


==================== Asm code ====================
2018-03-16 15:57:52.127806112 UTC

.section .text
.align 8
_c3cO8:
_c3cO8:
	leaq block_c3cOa_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq %r14,%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c3cOa
_c3cOb:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3cO8, .-_c3cO8


==================== Asm code ====================
2018-03-16 15:57:52.12842502 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cO8_info:
	.quad	_c3cO8
	.quad	1
	.quad	4294967326
	.quad	S3bQP_srt+312


==================== Asm code ====================
2018-03-16 15:57:52.129711591 UTC

.section .text
.align 8
_c3cOa:
_c3cOa:
	movss 7(%rbx),%xmm0
	xorps %xmm1,%xmm1
	ucomiss %xmm1,%xmm0
	jp _c3cOF
	jb _c3cOG
_c3cOF:
	movq 8(%rbp),%rbx
	addq $24,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_c3cOG:
	leaq block_c3cOj_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%r14
	jmp *GHC.Real.$p1Integral_entry@gotpcrel(%rip)
	.size _c3cOa, .-_c3cOa


==================== Asm code ====================
2018-03-16 15:57:52.130606224 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cOa_info:
	.quad	_c3cOa
	.quad	2
	.quad	4294967326
	.quad	S3bQP_srt+312


==================== Asm code ====================
2018-03-16 15:57:52.131398584 UTC

.section .text
.align 8
_c3cOj:
_c3cOj:
	leaq block_c3cOn_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp *GHC.Real.$p1Real_entry@gotpcrel(%rip)
	.size _c3cOj, .-_c3cOj


==================== Asm code ====================
2018-03-16 15:57:52.132113938 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cOj_info:
	.quad	_c3cOj
	.quad	130
	.quad	4294967326
	.quad	S3bQP_srt+312


==================== Asm code ====================
2018-03-16 15:57:52.133188453 UTC

.section .text
.align 8
_c3cOn:
_c3cOn:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3cOK
_c3cOJ:
	leaq sat_s3aKv_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,(%r12)
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,(%rbp)
	leaq -16(%r12),%rax
	movq %rax,16(%rbp)
	jmp *GHC.Num.-_entry@gotpcrel(%rip)
_c3cOK:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3cOn, .-_c3cOn


==================== Asm code ====================
2018-03-16 15:57:52.134172149 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cOn_info:
	.quad	_c3cOn
	.quad	130
	.quad	4294967326
	.quad	S3bQP_srt+312


==================== Asm code ====================
2018-03-16 15:57:52.143308594 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$w$cround1_closure
.type GHC.Float.$w$cround1_closure, @object
GHC.Float.$w$cround1_closure:
	.quad	GHC.Float.$w$cround1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:52.144098984 UTC

.section .text
.align 8
.globl GHC.Float.$w$cround1_slow
.type GHC.Float.$w$cround1_slow, @object
GHC.Float.$w$cround1_slow:
_c3cPs:
	movss 8(%rbp),%xmm1
	movq (%rbp),%r14
	addq $16,%rbp
	jmp GHC.Float.$w$cround1_entry
	.size GHC.Float.$w$cround1_slow, .-GHC.Float.$w$cround1_slow


==================== Asm code ====================
2018-03-16 15:57:52.14530654 UTC

.section .text
.align 8
sat_s3aKK_entry:
_c3cQ6:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3cQ7
_c3cQ8:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Float.$fRealDouble1_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c3cQ7:
	jmp *-16(%r13)
	.size sat_s3aKK_entry, .-sat_s3aKK_entry


==================== Asm code ====================
2018-03-16 15:57:52.14638484 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aKK_info:
	.quad	sat_s3aKK_entry
	.quad	1
	.quad	4294967312
	.quad	S3bQP_srt+312


==================== Asm code ====================
2018-03-16 15:57:52.147432747 UTC

.section .text
.align 8
sat_s3aKL_entry:
_c3cQe:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3cQf
_c3cQg:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Float.$fRealDouble1_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c3cQf:
	jmp *-16(%r13)
	.size sat_s3aKL_entry, .-sat_s3aKL_entry


==================== Asm code ====================
2018-03-16 15:57:52.14852668 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aKL_info:
	.quad	sat_s3aKL_entry
	.quad	1
	.quad	4294967312
	.quad	S3bQP_srt+312


==================== Asm code ====================
2018-03-16 15:57:52.149768801 UTC

.section .text
.align 8
.globl GHC.Float.$w$cround1_entry
.type GHC.Float.$w$cround1_entry, @object
GHC.Float.$w$cround1_entry:
_c3cQh:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3cQi
_c3cQj:
	leaq block_c3cPw_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Float.$w$cproperFraction1_entry
_c3cQi:
	leaq GHC.Float.$w$cround1_closure(%rip),%rbx
	movq %r14,-16(%rbp)
	movss %xmm1,-8(%rbp)
	addq $-16,%rbp
	jmp *-8(%r13)
	.size GHC.Float.$w$cround1_entry, .-GHC.Float.$w$cround1_entry


==================== Asm code ====================
2018-03-16 15:57:52.150817224 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$w$cround1_info
.type GHC.Float.$w$cround1_info, @object
GHC.Float.$w$cround1_info:
	.quad	GHC.Float.$w$cround1_entry
	.quad	0
	.quad	863288426510
	.quad	8589934592
	.quad	S3bQP_srt+288
	.quad	130
	.quad	GHC.Float.$w$cround1_slow


==================== Asm code ====================
2018-03-16 15:57:52.151987642 UTC

.section .text
.align 8
_c3cPw:
_c3cPw:
	leaq block_c3cPy_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq %r14,%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c3cPy
_c3cPz:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3cPw, .-_c3cPw


==================== Asm code ====================
2018-03-16 15:57:52.152960109 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cPw_info:
	.quad	_c3cPw
	.quad	1
	.quad	38654705694
	.quad	S3bQP_srt+312


==================== Asm code ====================
2018-03-16 15:57:52.15503101 UTC

.section .text
.align 8
_c3cPy:
_c3cPy:
	movq 16(%rbp),%rax
	movq 8(%rbp),%rcx
	movss 7(%rbx),%xmm0
	movss %xmm0,%xmm1
	movss _n3cRr(%rip),%xmm2
	andps %xmm2,%xmm1
	subss _n3cRt(%rip),%xmm1
	xorps %xmm2,%xmm2
	ucomiss %xmm2,%xmm1
	jp _c3cQN
	jb _u3cQQ
_c3cQN:
	xorps %xmm2,%xmm2
	ucomiss %xmm2,%xmm1
	jp _u3cQR
	je _c3cQB
_u3cQR:
	movss %xmm0,(%rbp)
	jmp _s3aKG
_u3cQQ:
	addq $8,%rbp
	jmp _c3cQO
_c3cQB:
	leaq block_c3cQA_info(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq %rcx,%rsi
	movq %rax,%r14
	movss %xmm0,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Real.even_entry@gotpcrel(%rip)
	.size _c3cPy, .-_c3cPy
.section .rodata
.align 8
.align 4
_n3cRr:
	.long	2147483647
.section .rodata
.align 8
.align 4
_n3cRt:
	.byte	0
	.byte	0
	.byte	0
	.byte	63


==================== Asm code ====================
2018-03-16 15:57:52.156214925 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cPy_info:
	.quad	_c3cPy
	.quad	2
	.quad	38654705694
	.quad	S3bQP_srt+312


==================== Asm code ====================
2018-03-16 15:57:52.157222381 UTC

.section .text
.align 8
_c3cQA:
_c3cQA:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u3cQS
_u3cQT:
	addq $16,%rbp
	jmp _c3cQO
_u3cQS:
	addq $8,%rbp
	jmp _s3aKG
	.size _c3cQA, .-_c3cQA


==================== Asm code ====================
2018-03-16 15:57:52.158205455 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cQA_info:
	.quad	_c3cQA
	.quad	67
	.quad	4294967326
	.quad	S3bQP_srt+312


==================== Asm code ====================
2018-03-16 15:57:52.159172577 UTC

.section .text
.align 8
_c3cQO:
_c3cQO:
	movq (%rbp),%rbx
	addq $16,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c3cQO, .-_c3cQO


==================== Asm code ====================
2018-03-16 15:57:52.160187328 UTC

.section .text
.align 8
_s3aKG:
_s3aKG:
	leaq block_c3cPR_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 16(%rbp),%r14
	addq $-8,%rbp
	jmp *GHC.Real.$p1Integral_entry@gotpcrel(%rip)
	.size _s3aKG, .-_s3aKG


==================== Asm code ====================
2018-03-16 15:57:52.161143307 UTC

.section .text
.align 8
_c3cPR:
_c3cPR:
	leaq block_c3cPV_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp *GHC.Real.$p1Real_entry@gotpcrel(%rip)
	.size _c3cPR, .-_c3cPR


==================== Asm code ====================
2018-03-16 15:57:52.162056401 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cPR_info:
	.quad	_c3cPR
	.quad	323
	.quad	4294967326
	.quad	S3bQP_srt+312


==================== Asm code ====================
2018-03-16 15:57:52.163440984 UTC

.section .text
.align 8
_c3cPV:
_c3cPV:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3cQq
_c3cQp:
	movss 8(%rbp),%xmm0
	xorps %xmm1,%xmm1
	ucomiss %xmm1,%xmm0
	jp _c3cQs
	jb _c3cQt
_c3cQs:
	leaq sat_s3aKK_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,(%r12)
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,8(%rbp)
	leaq -16(%r12),%rax
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp *GHC.Num.+_entry@gotpcrel(%rip)
_c3cQt:
	leaq sat_s3aKL_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,(%r12)
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,8(%rbp)
	leaq -16(%r12),%rax
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp *GHC.Num.-_entry@gotpcrel(%rip)
_c3cQq:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3cPV, .-_c3cPV


==================== Asm code ====================
2018-03-16 15:57:52.164608804 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cPV_info:
	.quad	_c3cPV
	.quad	323
	.quad	4294967326
	.quad	S3bQP_srt+312


==================== Asm code ====================
2018-03-16 15:57:52.168217231 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFracFloat_$cround_closure
.type GHC.Float.$fRealFracFloat_$cround_closure, @object
GHC.Float.$fRealFracFloat_$cround_closure:
	.quad	GHC.Float.$fRealFracFloat_$cround_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:52.169102537 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFracFloat_$cround_entry
.type GHC.Float.$fRealFracFloat_$cround_entry, @object
GHC.Float.$fRealFracFloat_$cround_entry:
_c3cS9:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3cSa
_c3cSb:
	leaq block_c3cS6_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3cS6
_c3cS7:
	movq (%rbx),%rax
	jmp *(%rax)
_c3cSa:
	leaq GHC.Float.$fRealFracFloat_$cround_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFracFloat_$cround_entry, .-GHC.Float.$fRealFracFloat_$cround_entry


==================== Asm code ====================
2018-03-16 15:57:52.16987118 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFracFloat_$cround_info
.type GHC.Float.$fRealFracFloat_$cround_info, @object
GHC.Float.$fRealFracFloat_$cround_info:
	.quad	GHC.Float.$fRealFracFloat_$cround_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S3bQP_srt+344


==================== Asm code ====================
2018-03-16 15:57:52.170507109 UTC

.section .text
.align 8
_c3cS6:
_c3cS6:
	movss 7(%rbx),%xmm1
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Float.$w$cround1_entry
	.size _c3cS6, .-_c3cS6


==================== Asm code ====================
2018-03-16 15:57:52.171124631 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cS6_info:
	.quad	_c3cS6
	.quad	1
	.quad	4294967326
	.quad	S3bQP_srt+344


==================== Asm code ====================
2018-03-16 15:57:52.175282694 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fFloatingDouble_$catanh_closure
.type GHC.Float.$fFloatingDouble_$catanh_closure, @object
GHC.Float.$fFloatingDouble_$catanh_closure:
	.quad	GHC.Float.$fFloatingDouble_$catanh_info


==================== Asm code ====================
2018-03-16 15:57:52.176200116 UTC

.section .text
.align 8
.globl GHC.Float.$fFloatingDouble_$catanh_entry
.type GHC.Float.$fFloatingDouble_$catanh_entry, @object
GHC.Float.$fFloatingDouble_$catanh_entry:
_c3cSx:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3cSR
_c3cSS:
	leaq block_c3cSu_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3cSu
_c3cSv:
	movq (%rbx),%rax
	jmp *(%rax)
_c3cSR:
	leaq GHC.Float.$fFloatingDouble_$catanh_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fFloatingDouble_$catanh_entry, .-GHC.Float.$fFloatingDouble_$catanh_entry


==================== Asm code ====================
2018-03-16 15:57:52.176882508 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fFloatingDouble_$catanh_info
.type GHC.Float.$fFloatingDouble_$catanh_info, @object
GHC.Float.$fFloatingDouble_$catanh_info:
	.quad	GHC.Float.$fFloatingDouble_$catanh_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:52.178215831 UTC

.section .text
.align 8
_c3cSu:
_c3cSu:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3cSV
_c3cSU:
	movsd 7(%rbx),%xmm0
	subq $8,%rsp
	movsd _n3cT5(%rip),%xmm1
	subsd %xmm0,%xmm1
	addsd _n3cT8(%rip),%xmm0
	divsd %xmm1,%xmm0
	movl $1,%eax
	call log@plt
	addq $8,%rsp
	movq GHC.Types.D#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	mulsd _n3cTc(%rip),%xmm0
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3cSV:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3cSu, .-_c3cSu
.section .rodata
.align 8
.align 8
_n3cT5:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	240
	.byte	63
.section .rodata
.align 8
.align 8
_n3cT8:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	240
	.byte	63
.section .rodata
.align 8
.align 8
_n3cTc:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	224
	.byte	63


==================== Asm code ====================
2018-03-16 15:57:52.178966805 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cSu_info:
	.quad	_c3cSu
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.185093327 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$w$ctoRational1_closure
.type GHC.Float.$w$ctoRational1_closure, @object
GHC.Float.$w$ctoRational1_closure:
	.quad	GHC.Float.$w$ctoRational1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:52.186334415 UTC

.section .text
.align 8
.globl GHC.Float.$w$ctoRational1_entry
.type GHC.Float.$w$ctoRational1_entry, @object
GHC.Float.$w$ctoRational1_entry:
_c3cTv:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3cTw
_c3cTx:
	leaq block_c3cTm_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp *stg_decodeFloat_Int#@gotpcrel(%rip)
_c3cTw:
	leaq GHC.Float.$w$ctoRational1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$w$ctoRational1_entry, .-GHC.Float.$w$ctoRational1_entry


==================== Asm code ====================
2018-03-16 15:57:52.187277394 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$w$ctoRational1_info
.type GHC.Float.$w$ctoRational1_info, @object
GHC.Float.$w$ctoRational1_info:
	.quad	GHC.Float.$w$ctoRational1_entry
	.quad	0
	.quad	828928688142
	.quad	4294967302
	.quad	S3bQP_srt+312


==================== Asm code ====================
2018-03-16 15:57:52.188374159 UTC

.section .text
.align 8
_c3cTm:
_c3cTm:
	testq %r14,%r14
	jl _c3cTt
_c3cTu:
	leaq block_c3cUp_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rax
	movq %rbx,%r14
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
_c3cUg:
	leaq block_c3cU6_info(%rip),%rax
	movq %rax,(%rbp)
	movq %r14,%rsi
	negq %rsi
	movq %rbx,%r14
	jmp *GHC.Float.ConversionUtils.elimZerosInt#_entry@gotpcrel(%rip)
_c3cTt:
	testb $1,%bl
	je _c3cUg
_c3cTS:
	leaq block_c3cTJ_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rax
	movq %rbx,%r14
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
	.size _c3cTm, .-_c3cTm


==================== Asm code ====================
2018-03-16 15:57:52.190072764 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cTm_info:
	.quad	_c3cTm
	.quad	0
	.quad	279172874270
	.quad	S3bQP_srt+312


==================== Asm code ====================
2018-03-16 15:57:52.190891786 UTC

.section .text
.align 8
_c3cU6:
_c3cU6:
	leaq block_c3cUa_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c3cUa
_c3cUb:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3cU6, .-_c3cU6


==================== Asm code ====================
2018-03-16 15:57:52.191574381 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cU6_info:
	.quad	_c3cU6
	.quad	0
	.quad	4294967326
	.quad	S3bQP_srt+312


==================== Asm code ====================
2018-03-16 15:57:52.192249163 UTC

.section .text
.align 8
_c3cUa:
_c3cUa:
	leaq block_c3cUf_info(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%rsi
	leaq GHC.Float.$fRealDouble1_closure(%rip),%r14
	movq %rbx,8(%rbp)
	jmp *GHC.Integer.Type.shiftLInteger_entry@gotpcrel(%rip)
	.size _c3cUa, .-_c3cUa


==================== Asm code ====================
2018-03-16 15:57:52.192858833 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cUa_info:
	.quad	_c3cUa
	.quad	65
	.quad	4294967326
	.quad	S3bQP_srt+312


==================== Asm code ====================
2018-03-16 15:57:52.193521575 UTC

.section .text
.align 8
_c3cUf:
_c3cUf:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3cUf, .-_c3cUf


==================== Asm code ====================
2018-03-16 15:57:52.194059684 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cUf_info:
	.quad	_c3cUf
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.194741795 UTC

.section .text
.align 8
_c3cTJ:
_c3cTJ:
	leaq block_c3cTQ_info(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%rsi
	negq %rsi
	leaq GHC.Float.$fRealDouble1_closure(%rip),%r14
	movq %rbx,8(%rbp)
	jmp *GHC.Integer.Type.shiftLInteger_entry@gotpcrel(%rip)
	.size _c3cTJ, .-_c3cTJ


==================== Asm code ====================
2018-03-16 15:57:52.195287489 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cTJ_info:
	.quad	_c3cTJ
	.quad	65
	.quad	4294967326
	.quad	S3bQP_srt+312


==================== Asm code ====================
2018-03-16 15:57:52.195905367 UTC

.section .text
.align 8
_c3cTQ:
_c3cTQ:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3cTQ, .-_c3cTQ


==================== Asm code ====================
2018-03-16 15:57:52.196476296 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cTQ_info:
	.quad	_c3cTQ
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.197132385 UTC

.section .text
.align 8
_c3cUp:
_c3cUp:
	movq 8(%rbp),%rax
	leaq block_c3cUt_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.shiftLInteger_entry@gotpcrel(%rip)
	.size _c3cUp, .-_c3cUp


==================== Asm code ====================
2018-03-16 15:57:52.197956455 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cUp_info:
	.quad	_c3cUp
	.quad	65
	.quad	4294967326
	.quad	S3bQP_srt+312


==================== Asm code ====================
2018-03-16 15:57:52.198652819 UTC

.section .text
.align 8
_c3cUt:
_c3cUt:
	leaq GHC.Float.$fRealDouble1_closure(%rip),%r14
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3cUt, .-_c3cUt


==================== Asm code ====================
2018-03-16 15:57:52.199244555 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cUt_info:
	.quad	_c3cUt
	.quad	0
	.quad	4294967326
	.quad	S3bQP_srt+312


==================== Asm code ====================
2018-03-16 15:57:52.202855604 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloat_$ctoRational_closure
.type GHC.Float.$fRealFloat_$ctoRational_closure, @object
GHC.Float.$fRealFloat_$ctoRational_closure:
	.quad	GHC.Float.$fRealFloat_$ctoRational_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:52.203702961 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFloat_$ctoRational_entry
.type GHC.Float.$fRealFloat_$ctoRational_entry, @object
GHC.Float.$fRealFloat_$ctoRational_entry:
_c3cVm:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3cVs
_c3cVt:
	leaq block_c3cVj_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3cVj
_c3cVk:
	movq (%rbx),%rax
	jmp *(%rax)
_c3cVs:
	leaq GHC.Float.$fRealFloat_$ctoRational_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFloat_$ctoRational_entry, .-GHC.Float.$fRealFloat_$ctoRational_entry


==================== Asm code ====================
2018-03-16 15:57:52.204378243 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFloat_$ctoRational_info
.type GHC.Float.$fRealFloat_$ctoRational_info, @object
GHC.Float.$fRealFloat_$ctoRational_info:
	.quad	GHC.Float.$fRealFloat_$ctoRational_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S3bQP_srt+368


==================== Asm code ====================
2018-03-16 15:57:52.205021115 UTC

.section .text
.align 8
_c3cVj:
_c3cVj:
	leaq block_c3cVp_info(%rip),%rax
	movq %rax,(%rbp)
	movss 7(%rbx),%xmm1
	jmp GHC.Float.$w$ctoRational1_entry
	.size _c3cVj, .-_c3cVj


==================== Asm code ====================
2018-03-16 15:57:52.205638308 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cVj_info:
	.quad	_c3cVj
	.quad	0
	.quad	4294967326
	.quad	S3bQP_srt+368


==================== Asm code ====================
2018-03-16 15:57:52.206410493 UTC

.section .text
.align 8
_c3cVp:
_c3cVp:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3cVx
_c3cVw:
	movq GHC.Real.:%_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3cVx:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c3cVp, .-_c3cVp


==================== Asm code ====================
2018-03-16 15:57:52.207046202 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cVp_info:
	.quad	_c3cVp
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.213684659 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$w$ctoRational_closure
.type GHC.Float.$w$ctoRational_closure, @object
GHC.Float.$w$ctoRational_closure:
	.quad	GHC.Float.$w$ctoRational_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:52.214538174 UTC

.section .text
.align 8
.globl GHC.Float.$w$ctoRational_entry
.type GHC.Float.$w$ctoRational_entry, @object
GHC.Float.$w$ctoRational_entry:
_c3cW2:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3cW3
_c3cW4:
	leaq block_c3cVT_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp *GHC.Integer.Type.decodeDoubleInteger_entry@gotpcrel(%rip)
_c3cW3:
	leaq GHC.Float.$w$ctoRational_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$w$ctoRational_entry, .-GHC.Float.$w$ctoRational_entry


==================== Asm code ====================
2018-03-16 15:57:52.215201017 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$w$ctoRational_info
.type GHC.Float.$w$ctoRational_info, @object
GHC.Float.$w$ctoRational_info:
	.quad	GHC.Float.$w$ctoRational_entry
	.quad	0
	.quad	6876242640910
	.quad	4294967303
	.quad	S3bQP_srt+312


==================== Asm code ====================
2018-03-16 15:57:52.216000244 UTC

.section .text
.align 8
_c3cVT:
_c3cVT:
	testq %r14,%r14
	jl _c3cW0
_c3cW1:
	leaq block_c3cX4_info(%rip),%rax
	movq %rax,(%rbp)
	movq %r14,%rsi
	movq %rbx,%r14
	jmp *GHC.Integer.Type.shiftLInteger_entry@gotpcrel(%rip)
_c3cW0:
	leaq block_c3cW7_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rax
	movq %rbx,%r14
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp *GHC.Integer.Type.integerToWord_entry@gotpcrel(%rip)
	.size _c3cVT, .-_c3cVT


==================== Asm code ====================
2018-03-16 15:57:52.216623938 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cVT_info:
	.quad	_c3cVT
	.quad	0
	.quad	279172874270
	.quad	S3bQP_srt+312


==================== Asm code ====================
2018-03-16 15:57:52.217850027 UTC

.section .text
.align 8
_c3cW7:
_c3cW7:
	movq 16(%rbp),%rax
	testb $1,%bl
	je _c3cWU
_c3cWs:
	leaq block_c3cWi_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c3cWi
_c3cWj:
	movq (%rbx),%rax
	jmp *(%rax)
_c3cWU:
	leaq block_c3cWD_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%r14
	jmp *GHC.Integer.Type.integerToInt_entry@gotpcrel(%rip)
	.size _c3cW7, .-_c3cW7


==================== Asm code ====================
2018-03-16 15:57:52.218549105 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cW7_info:
	.quad	_c3cW7
	.quad	66
	.quad	279172874270
	.quad	S3bQP_srt+312


==================== Asm code ====================
2018-03-16 15:57:52.219257474 UTC

.section .text
.align 8
_c3cWD:
_c3cWD:
	leaq block_c3cWK_info(%rip),%rax
	movq %rax,16(%rbp)
	movq 8(%rbp),%rsi
	negq %rsi
	movq %rbx,%r14
	addq $16,%rbp
	jmp *GHC.Float.ConversionUtils.elimZerosInt#_entry@gotpcrel(%rip)
	.size _c3cWD, .-_c3cWD


==================== Asm code ====================
2018-03-16 15:57:52.219854608 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cWD_info:
	.quad	_c3cWD
	.quad	194
	.quad	279172874270
	.quad	S3bQP_srt+312


==================== Asm code ====================
2018-03-16 15:57:52.22060213 UTC

.section .text
.align 8
_c3cWK:
_c3cWK:
	leaq block_c3cWO_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c3cWO
_c3cWP:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3cWK, .-_c3cWK


==================== Asm code ====================
2018-03-16 15:57:52.221210772 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cWK_info:
	.quad	_c3cWK
	.quad	0
	.quad	4294967326
	.quad	S3bQP_srt+312


==================== Asm code ====================
2018-03-16 15:57:52.221951082 UTC

.section .text
.align 8
_c3cWO:
_c3cWO:
	leaq block_c3cWT_info(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%rsi
	leaq GHC.Float.$fRealDouble1_closure(%rip),%r14
	movq %rbx,8(%rbp)
	jmp *GHC.Integer.Type.shiftLInteger_entry@gotpcrel(%rip)
	.size _c3cWO, .-_c3cWO


==================== Asm code ====================
2018-03-16 15:57:52.222531765 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cWO_info:
	.quad	_c3cWO
	.quad	65
	.quad	4294967326
	.quad	S3bQP_srt+312


==================== Asm code ====================
2018-03-16 15:57:52.223185541 UTC

.section .text
.align 8
_c3cWT:
_c3cWT:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3cWT, .-_c3cWT


==================== Asm code ====================
2018-03-16 15:57:52.223799302 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cWT_info:
	.quad	_c3cWT
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.224503593 UTC

.section .text
.align 8
_c3cWi:
_c3cWi:
	movq 8(%rbp),%rax
	negq %rax
	leaq block_c3cWq_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	leaq GHC.Float.$fRealDouble1_closure(%rip),%r14
	movq %rbx,16(%rbp)
	addq $8,%rbp
	jmp *GHC.Integer.Type.shiftLInteger_entry@gotpcrel(%rip)
	.size _c3cWi, .-_c3cWi


==================== Asm code ====================
2018-03-16 15:57:52.225137912 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cWi_info:
	.quad	_c3cWi
	.quad	194
	.quad	4294967326
	.quad	S3bQP_srt+312


==================== Asm code ====================
2018-03-16 15:57:52.226356539 UTC

.section .text
.align 8
_c3cWq:
_c3cWq:
	movq %rbx,%r14
	movq 8(%rbp),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3cWq, .-_c3cWq


==================== Asm code ====================
2018-03-16 15:57:52.227054064 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cWq_info:
	.quad	_c3cWq
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.227684371 UTC

.section .text
.align 8
_c3cX4:
_c3cX4:
	leaq GHC.Float.$fRealDouble1_closure(%rip),%r14
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3cX4, .-_c3cX4


==================== Asm code ====================
2018-03-16 15:57:52.228278904 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cX4_info:
	.quad	_c3cX4
	.quad	0
	.quad	4294967326
	.quad	S3bQP_srt+312


==================== Asm code ====================
2018-03-16 15:57:52.232059005 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealDouble_$ctoRational_closure
.type GHC.Float.$fRealDouble_$ctoRational_closure, @object
GHC.Float.$fRealDouble_$ctoRational_closure:
	.quad	GHC.Float.$fRealDouble_$ctoRational_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:52.232938985 UTC

.section .text
.align 8
.globl GHC.Float.$fRealDouble_$ctoRational_entry
.type GHC.Float.$fRealDouble_$ctoRational_entry, @object
GHC.Float.$fRealDouble_$ctoRational_entry:
_c3cY2:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3cY8
_c3cY9:
	leaq block_c3cXZ_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3cXZ
_c3cY0:
	movq (%rbx),%rax
	jmp *(%rax)
_c3cY8:
	leaq GHC.Float.$fRealDouble_$ctoRational_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fRealDouble_$ctoRational_entry, .-GHC.Float.$fRealDouble_$ctoRational_entry


==================== Asm code ====================
2018-03-16 15:57:52.233960057 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealDouble_$ctoRational_info
.type GHC.Float.$fRealDouble_$ctoRational_info, @object
GHC.Float.$fRealDouble_$ctoRational_info:
	.quad	GHC.Float.$fRealDouble_$ctoRational_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S3bQP_srt+392


==================== Asm code ====================
2018-03-16 15:57:52.234676315 UTC

.section .text
.align 8
_c3cXZ:
_c3cXZ:
	leaq block_c3cY5_info(%rip),%rax
	movq %rax,(%rbp)
	movsd 7(%rbx),%xmm1
	jmp GHC.Float.$w$ctoRational_entry
	.size _c3cXZ, .-_c3cXZ


==================== Asm code ====================
2018-03-16 15:57:52.235292943 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cXZ_info:
	.quad	_c3cXZ
	.quad	0
	.quad	4294967326
	.quad	S3bQP_srt+392


==================== Asm code ====================
2018-03-16 15:57:52.236007067 UTC

.section .text
.align 8
_c3cY5:
_c3cY5:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3cYd
_c3cYc:
	movq GHC.Real.:%_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3cYd:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c3cY5, .-_c3cY5


==================== Asm code ====================
2018-03-16 15:57:52.236680587 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cY5_info:
	.quad	_c3cY5
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.238703049 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fFloatingFloat_$cpi_closure
.type GHC.Float.$fFloatingFloat_$cpi_closure, @object
GHC.Float.$fFloatingFloat_$cpi_closure:
	.quad	GHC.Types.F#_con_info
	.byte	219
	.byte	15
	.byte	73
	.byte	64
	.long	0


==================== Asm code ====================
2018-03-16 15:57:52.240620019 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fFloatingDouble_$cpi_closure
.type GHC.Float.$fFloatingDouble_$cpi_closure, @object
GHC.Float.$fFloatingDouble_$cpi_closure:
	.quad	GHC.Types.D#_con_info
	.byte	24
	.byte	45
	.byte	68
	.byte	84
	.byte	251
	.byte	33
	.byte	9
	.byte	64


==================== Asm code ====================
2018-03-16 15:57:52.242891523 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat_$cisIEEE_closure
.type GHC.Float.$fRealFloatFloat_$cisIEEE_closure, @object
GHC.Float.$fRealFloatFloat_$cisIEEE_closure:
	.quad	GHC.Float.$fRealFloatFloat_$cisIEEE_info


==================== Asm code ====================
2018-03-16 15:57:52.243652612 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFloatFloat_$cisIEEE_entry
.type GHC.Float.$fRealFloatFloat_$cisIEEE_entry, @object
GHC.Float.$fRealFloatFloat_$cisIEEE_entry:
_c3cYB:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Float.$fRealFloatFloat_$cisIEEE_entry, .-GHC.Float.$fRealFloatFloat_$cisIEEE_entry


==================== Asm code ====================
2018-03-16 15:57:52.244273064 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat_$cisIEEE_info
.type GHC.Float.$fRealFloatFloat_$cisIEEE_info, @object
GHC.Float.$fRealFloatFloat_$cisIEEE_info:
	.quad	GHC.Float.$fRealFloatFloat_$cisIEEE_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:52.24789684 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat_$cencodeFloat_closure
.type GHC.Float.$fRealFloatFloat_$cencodeFloat_closure, @object
GHC.Float.$fRealFloatFloat_$cencodeFloat_closure:
	.quad	GHC.Float.$fRealFloatFloat_$cencodeFloat_info


==================== Asm code ====================
2018-03-16 15:57:52.248728825 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFloatFloat_$cencodeFloat_entry
.type GHC.Float.$fRealFloatFloat_$cencodeFloat_entry, @object
GHC.Float.$fRealFloatFloat_$cencodeFloat_entry:
_c3cYR:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3cYZ
_c3cZ0:
	leaq block_c3cYO_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3cYO
_c3cYP:
	movq (%rbx),%rax
	jmp *(%rax)
_c3cYZ:
	leaq GHC.Float.$fRealFloatFloat_$cencodeFloat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFloatFloat_$cencodeFloat_entry, .-GHC.Float.$fRealFloatFloat_$cencodeFloat_entry


==================== Asm code ====================
2018-03-16 15:57:52.249756727 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat_$cencodeFloat_info
.type GHC.Float.$fRealFloatFloat_$cencodeFloat_info, @object
GHC.Float.$fRealFloatFloat_$cencodeFloat_info:
	.quad	GHC.Float.$fRealFloatFloat_$cencodeFloat_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:52.2504217 UTC

.section .text
.align 8
_c3cYO:
_c3cYO:
	movq 8(%rbp),%rax
	leaq block_c3cYU_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq 7(%rbx),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.encodeFloatInteger_entry@gotpcrel(%rip)
	.size _c3cYO, .-_c3cYO


==================== Asm code ====================
2018-03-16 15:57:52.250980025 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cYO_info:
	.quad	_c3cYO
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.251647615 UTC

.section .text
.align 8
_c3cYU:
_c3cYU:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3cZ4
_c3cZ3:
	movq GHC.Types.F#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movss %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3cZ4:
	movq $16,904(%r13)
	jmp *stg_gc_f1@gotpcrel(%rip)
	.size _c3cYU, .-_c3cYU


==================== Asm code ====================
2018-03-16 15:57:52.252264324 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cYU_info:
	.quad	_c3cYU
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.256549332 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat_$cdecodeFloat_closure
.type GHC.Float.$fRealFloatFloat_$cdecodeFloat_closure, @object
GHC.Float.$fRealFloatFloat_$cdecodeFloat_closure:
	.quad	GHC.Float.$fRealFloatFloat_$cdecodeFloat_info


==================== Asm code ====================
2018-03-16 15:57:52.257360938 UTC

.section .text
.align 8
sat_s3aLY_entry:
_c3cZE:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3cZF
_c3cZG:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
_c3cZF:
	jmp *-16(%r13)
	.size sat_s3aLY_entry, .-sat_s3aLY_entry


==================== Asm code ====================
2018-03-16 15:57:52.257980235 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aLY_info:
	.quad	sat_s3aLY_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 15:57:52.258699617 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFloatFloat_$cdecodeFloat_entry
.type GHC.Float.$fRealFloatFloat_$cdecodeFloat_entry, @object
GHC.Float.$fRealFloatFloat_$cdecodeFloat_entry:
_c3cZH:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3cZJ
_c3cZK:
	leaq block_c3cZq_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3cZq
_c3cZr:
	movq (%rbx),%rax
	jmp *(%rax)
_c3cZJ:
	leaq GHC.Float.$fRealFloatFloat_$cdecodeFloat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFloatFloat_$cdecodeFloat_entry, .-GHC.Float.$fRealFloatFloat_$cdecodeFloat_entry


==================== Asm code ====================
2018-03-16 15:57:52.259340643 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat_$cdecodeFloat_info
.type GHC.Float.$fRealFloatFloat_$cdecodeFloat_info, @object
GHC.Float.$fRealFloatFloat_$cdecodeFloat_info:
	.quad	GHC.Float.$fRealFloatFloat_$cdecodeFloat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:52.259996851 UTC

.section .text
.align 8
_c3cZq:
_c3cZq:
	leaq block_c3cZv_info(%rip),%rax
	movq %rax,(%rbp)
	movss 7(%rbx),%xmm1
	jmp *stg_decodeFloat_Int#@gotpcrel(%rip)
	.size _c3cZq, .-_c3cZq


==================== Asm code ====================
2018-03-16 15:57:52.260558753 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cZq_info:
	.quad	_c3cZq
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.261197892 UTC

.section .text
.align 8
_c3cZv:
_c3cZv:
	movq %r14,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp _c3cZw
	.size _c3cZv, .-_c3cZv


==================== Asm code ====================
2018-03-16 15:57:52.262755302 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cZv_info:
	.quad	_c3cZv
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.263608122 UTC

.section .text
.align 8
_c3cZw:
_c3cZw:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c3cZO
_c3cZN:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-56(%r12)
	movq 8(%rbp),%rax
	movq %rax,-48(%r12)
	leaq sat_s3aLY_info(%rip),%rax
	movq %rax,-40(%r12)
	movq 16(%rbp),%rax
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -55(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3cZO:
	movq $64,904(%r13)
	leaq block_c3cZw_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c3cZw, .-_c3cZw


==================== Asm code ====================
2018-03-16 15:57:52.264306806 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3cZw_info:
	.quad	_c3cZw
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.268076417 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$w$cexponent1_closure
.type GHC.Float.$w$cexponent1_closure, @object
GHC.Float.$w$cexponent1_closure:
	.quad	GHC.Float.$w$cexponent1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:52.26895006 UTC

.section .text
.align 8
.globl GHC.Float.$w$cexponent1_entry
.type GHC.Float.$w$cexponent1_entry, @object
GHC.Float.$w$cexponent1_entry:
_c3d0x:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3d0y
_c3d0z:
	leaq block_c3d0r_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp *stg_decodeFloat_Int#@gotpcrel(%rip)
_c3d0y:
	leaq GHC.Float.$w$cexponent1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$w$cexponent1_entry, .-GHC.Float.$w$cexponent1_entry


==================== Asm code ====================
2018-03-16 15:57:52.269687134 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$w$cexponent1_info
.type GHC.Float.$w$cexponent1_info, @object
GHC.Float.$w$cexponent1_info:
	.quad	GHC.Float.$w$cexponent1_entry
	.quad	0
	.quad	12884901902
	.quad	4294967302
	.quad	S3bQP_srt+408


==================== Asm code ====================
2018-03-16 15:57:52.270390446 UTC

.section .text
.align 8
_c3d0r:
_c3d0r:
	leaq block_c3d0v_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rax
	movq %rbx,%r14
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
	.size _c3d0r, .-_c3d0r


==================== Asm code ====================
2018-03-16 15:57:52.271002074 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3d0r_info:
	.quad	_c3d0r
	.quad	0
	.quad	4294967326
	.quad	S3bQP_srt+416


==================== Asm code ====================
2018-03-16 15:57:52.271660182 UTC

.section .text
.align 8
_c3d0v:
_c3d0v:
	leaq block_c3d0D_info(%rip),%rax
	movq %rax,(%rbp)
	leaq GHC.Float.rationalToDouble5_closure(%rip),%rsi
	movq %rbx,%r14
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
	.size _c3d0v, .-_c3d0v


==================== Asm code ====================
2018-03-16 15:57:52.272258773 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3d0v_info:
	.quad	_c3d0v
	.quad	65
	.quad	4294967326
	.quad	S3bQP_srt+416


==================== Asm code ====================
2018-03-16 15:57:52.272974519 UTC

.section .text
.align 8
_c3d0D:
_c3d0D:
	cmpq $1,%rbx
	je _c3d0P
_c3d0L:
	movq 8(%rbp),%rax
	leaq 24(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3d0P:
	xorl %ebx,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3d0D, .-_c3d0D


==================== Asm code ====================
2018-03-16 15:57:52.27387128 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3d0D_info:
	.quad	_c3d0D
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.279379869 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat_$cexponent_closure
.type GHC.Float.$fRealFloatFloat_$cexponent_closure, @object
GHC.Float.$fRealFloatFloat_$cexponent_closure:
	.quad	GHC.Float.$fRealFloatFloat_$cexponent_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:52.280634753 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFloatFloat_$cexponent_entry
.type GHC.Float.$fRealFloatFloat_$cexponent_entry, @object
GHC.Float.$fRealFloatFloat_$cexponent_entry:
_c3d1h:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3d1p
_c3d1q:
	leaq block_c3d1e_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3d1e
_c3d1f:
	movq (%rbx),%rax
	jmp *(%rax)
_c3d1p:
	leaq GHC.Float.$fRealFloatFloat_$cexponent_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFloatFloat_$cexponent_entry, .-GHC.Float.$fRealFloatFloat_$cexponent_entry


==================== Asm code ====================
2018-03-16 15:57:52.281729769 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat_$cexponent_info
.type GHC.Float.$fRealFloatFloat_$cexponent_info, @object
GHC.Float.$fRealFloatFloat_$cexponent_info:
	.quad	GHC.Float.$fRealFloatFloat_$cexponent_entry
	.quad	0
	.quad	21474836494
	.quad	4294967301
	.quad	S3bQP_srt+408


==================== Asm code ====================
2018-03-16 15:57:52.282830266 UTC

.section .text
.align 8
_c3d1e:
_c3d1e:
	leaq block_c3d1k_info(%rip),%rax
	movq %rax,(%rbp)
	movss 7(%rbx),%xmm1
	jmp GHC.Float.$w$cexponent1_entry
	.size _c3d1e, .-_c3d1e


==================== Asm code ====================
2018-03-16 15:57:52.283717826 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3d1e_info:
	.quad	_c3d1e
	.quad	0
	.quad	4294967326
	.quad	S3bQP_srt+408


==================== Asm code ====================
2018-03-16 15:57:52.284806805 UTC

.section .text
.align 8
_c3d1k:
_c3d1k:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3d1u
_c3d1t:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3d1u:
	movq $16,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c3d1k, .-_c3d1k


==================== Asm code ====================
2018-03-16 15:57:52.285849332 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3d1k_info:
	.quad	_c3d1k
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.291960802 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat_$csignificand_closure
.type GHC.Float.$fRealFloatFloat_$csignificand_closure, @object
GHC.Float.$fRealFloatFloat_$csignificand_closure:
	.quad	GHC.Float.$fRealFloatFloat_$csignificand_info


==================== Asm code ====================
2018-03-16 15:57:52.29341688 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFloatFloat_$csignificand_entry
.type GHC.Float.$fRealFloatFloat_$csignificand_entry, @object
GHC.Float.$fRealFloatFloat_$csignificand_entry:
_c3d1T:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3d29
_c3d2a:
	leaq block_c3d1Q_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3d1Q
_c3d1R:
	movq (%rbx),%rax
	jmp *(%rax)
_c3d29:
	leaq GHC.Float.$fRealFloatFloat_$csignificand_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFloatFloat_$csignificand_entry, .-GHC.Float.$fRealFloatFloat_$csignificand_entry


==================== Asm code ====================
2018-03-16 15:57:52.29443582 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat_$csignificand_info
.type GHC.Float.$fRealFloatFloat_$csignificand_info, @object
GHC.Float.$fRealFloatFloat_$csignificand_info:
	.quad	GHC.Float.$fRealFloatFloat_$csignificand_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:52.29542901 UTC

.section .text
.align 8
_c3d1Q:
_c3d1Q:
	leaq block_c3d1W_info(%rip),%rax
	movq %rax,(%rbp)
	movss 7(%rbx),%xmm1
	jmp *stg_decodeFloat_Int#@gotpcrel(%rip)
	.size _c3d1Q, .-_c3d1Q


==================== Asm code ====================
2018-03-16 15:57:52.296367764 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3d1Q_info:
	.quad	_c3d1Q
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.29738217 UTC

.section .text
.align 8
_c3d1W:
_c3d1W:
	leaq block_c3d20_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
	.size _c3d1W, .-_c3d1W


==================== Asm code ====================
2018-03-16 15:57:52.298247442 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3d1W_info:
	.quad	_c3d1W
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.29926626 UTC

.section .text
.align 8
_c3d20:
_c3d20:
	leaq block_c3d24_info(%rip),%rax
	movq %rax,(%rbp)
	movq $-24,%rsi
	movq %rbx,%r14
	jmp *GHC.Integer.Type.encodeFloatInteger_entry@gotpcrel(%rip)
	.size _c3d20, .-_c3d20


==================== Asm code ====================
2018-03-16 15:57:52.300194072 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3d20_info:
	.quad	_c3d20
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.301306892 UTC

.section .text
.align 8
_c3d24:
_c3d24:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3d2g
_c3d2f:
	movq GHC.Types.F#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movss %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3d2g:
	movq $16,904(%r13)
	jmp *stg_gc_f1@gotpcrel(%rip)
	.size _c3d24, .-_c3d24


==================== Asm code ====================
2018-03-16 15:57:52.302297602 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3d24_info:
	.quad	_c3d24
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.304650948 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat4_closure
.type GHC.Float.$fRealFloatFloat4_closure, @object
GHC.Float.$fRealFloatFloat4_closure:
	.quad	GHC.Types.I#_con_info
	.quad	24


==================== Asm code ====================
2018-03-16 15:57:52.308403737 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat_$cfloatDigits_closure
.type GHC.Float.$fRealFloatFloat_$cfloatDigits_closure, @object
GHC.Float.$fRealFloatFloat_$cfloatDigits_closure:
	.quad	GHC.Float.$fRealFloatFloat_$cfloatDigits_info


==================== Asm code ====================
2018-03-16 15:57:52.310209918 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFloatFloat_$cfloatDigits_entry
.type GHC.Float.$fRealFloatFloat_$cfloatDigits_entry, @object
GHC.Float.$fRealFloatFloat_$cfloatDigits_entry:
_c3d2L:
	leaq GHC.Float.$fRealFloatFloat4_closure+1(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Float.$fRealFloatFloat_$cfloatDigits_entry, .-GHC.Float.$fRealFloatFloat_$cfloatDigits_entry


==================== Asm code ====================
2018-03-16 15:57:52.31125819 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat_$cfloatDigits_info
.type GHC.Float.$fRealFloatFloat_$cfloatDigits_info, @object
GHC.Float.$fRealFloatFloat_$cfloatDigits_info:
	.quad	GHC.Float.$fRealFloatFloat_$cfloatDigits_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:52.314812109 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat_$cfloatRadix_closure
.type GHC.Float.$fRealFloatFloat_$cfloatRadix_closure, @object
GHC.Float.$fRealFloatFloat_$cfloatRadix_closure:
	.quad	GHC.Float.$fRealFloatFloat_$cfloatRadix_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:52.315871218 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFloatFloat_$cfloatRadix_entry
.type GHC.Float.$fRealFloatFloat_$cfloatRadix_entry, @object
GHC.Float.$fRealFloatFloat_$cfloatRadix_entry:
_c3d2X:
	leaq GHC.Float.$fRealFloatDouble5_closure(%rip),%rbx
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Float.$fRealFloatFloat_$cfloatRadix_entry, .-GHC.Float.$fRealFloatFloat_$cfloatRadix_entry


==================== Asm code ====================
2018-03-16 15:57:52.316827595 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat_$cfloatRadix_info
.type GHC.Float.$fRealFloatFloat_$cfloatRadix_info, @object
GHC.Float.$fRealFloatFloat_$cfloatRadix_info:
	.quad	GHC.Float.$fRealFloatFloat_$cfloatRadix_entry
	.quad	0
	.quad	4294967310
	.quad	4294967301
	.quad	S3bQP_srt+264


==================== Asm code ====================
2018-03-16 15:57:52.320015434 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble_$cisIEEE_closure
.type GHC.Float.$fRealFloatDouble_$cisIEEE_closure, @object
GHC.Float.$fRealFloatDouble_$cisIEEE_closure:
	.quad	GHC.Float.$fRealFloatDouble_$cisIEEE_info


==================== Asm code ====================
2018-03-16 15:57:52.321075219 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFloatDouble_$cisIEEE_entry
.type GHC.Float.$fRealFloatDouble_$cisIEEE_entry, @object
GHC.Float.$fRealFloatDouble_$cisIEEE_entry:
_c3d39:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Float.$fRealFloatDouble_$cisIEEE_entry, .-GHC.Float.$fRealFloatDouble_$cisIEEE_entry


==================== Asm code ====================
2018-03-16 15:57:52.322605902 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble_$cisIEEE_info
.type GHC.Float.$fRealFloatDouble_$cisIEEE_info, @object
GHC.Float.$fRealFloatDouble_$cisIEEE_info:
	.quad	GHC.Float.$fRealFloatDouble_$cisIEEE_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:52.327288548 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble_$cencodeFloat_closure
.type GHC.Float.$fRealFloatDouble_$cencodeFloat_closure, @object
GHC.Float.$fRealFloatDouble_$cencodeFloat_closure:
	.quad	GHC.Float.$fRealFloatDouble_$cencodeFloat_info


==================== Asm code ====================
2018-03-16 15:57:52.328179889 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFloatDouble_$cencodeFloat_entry
.type GHC.Float.$fRealFloatDouble_$cencodeFloat_entry, @object
GHC.Float.$fRealFloatDouble_$cencodeFloat_entry:
_c3d3p:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3d3x
_c3d3y:
	leaq block_c3d3m_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3d3m
_c3d3n:
	movq (%rbx),%rax
	jmp *(%rax)
_c3d3x:
	leaq GHC.Float.$fRealFloatDouble_$cencodeFloat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFloatDouble_$cencodeFloat_entry, .-GHC.Float.$fRealFloatDouble_$cencodeFloat_entry


==================== Asm code ====================
2018-03-16 15:57:52.328914402 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble_$cencodeFloat_info
.type GHC.Float.$fRealFloatDouble_$cencodeFloat_info, @object
GHC.Float.$fRealFloatDouble_$cencodeFloat_info:
	.quad	GHC.Float.$fRealFloatDouble_$cencodeFloat_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:52.329778473 UTC

.section .text
.align 8
_c3d3m:
_c3d3m:
	movq 8(%rbp),%rax
	leaq block_c3d3s_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq 7(%rbx),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.encodeDoubleInteger_entry@gotpcrel(%rip)
	.size _c3d3m, .-_c3d3m


==================== Asm code ====================
2018-03-16 15:57:52.330390004 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3d3m_info:
	.quad	_c3d3m
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.33110885 UTC

.section .text
.align 8
_c3d3s:
_c3d3s:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3d3C
_c3d3B:
	movq GHC.Types.D#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movsd %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3d3C:
	movq $16,904(%r13)
	jmp *stg_gc_d1@gotpcrel(%rip)
	.size _c3d3s, .-_c3d3s


==================== Asm code ====================
2018-03-16 15:57:52.331706917 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3d3s_info:
	.quad	_c3d3s
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.335623734 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble_$cdecodeFloat_closure
.type GHC.Float.$fRealFloatDouble_$cdecodeFloat_closure, @object
GHC.Float.$fRealFloatDouble_$cdecodeFloat_closure:
	.quad	GHC.Float.$fRealFloatDouble_$cdecodeFloat_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:52.336577178 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFloatDouble_$cdecodeFloat_entry
.type GHC.Float.$fRealFloatDouble_$cdecodeFloat_entry, @object
GHC.Float.$fRealFloatDouble_$cdecodeFloat_entry:
_c3d41:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3d4a
_c3d4b:
	leaq block_c3d3Y_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3d3Y
_c3d3Z:
	movq (%rbx),%rax
	jmp *(%rax)
_c3d4a:
	leaq GHC.Float.$fRealFloatDouble_$cdecodeFloat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFloatDouble_$cdecodeFloat_entry, .-GHC.Float.$fRealFloatDouble_$cdecodeFloat_entry


==================== Asm code ====================
2018-03-16 15:57:52.337546399 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble_$cdecodeFloat_info
.type GHC.Float.$fRealFloatDouble_$cdecodeFloat_info, @object
GHC.Float.$fRealFloatDouble_$cdecodeFloat_info:
	.quad	GHC.Float.$fRealFloatDouble_$cdecodeFloat_entry
	.quad	0
	.quad	279172874254
	.quad	4294967301
	.quad	S3bQP_srt+384


==================== Asm code ====================
2018-03-16 15:57:52.338284549 UTC

.section .text
.align 8
_c3d3Y:
_c3d3Y:
	leaq block_c3d44_info(%rip),%rax
	movq %rax,(%rbp)
	movsd 7(%rbx),%xmm1
	jmp *GHC.Integer.Type.decodeDoubleInteger_entry@gotpcrel(%rip)
	.size _c3d3Y, .-_c3d3Y


==================== Asm code ====================
2018-03-16 15:57:52.338858475 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3d3Y_info:
	.quad	_c3d3Y
	.quad	0
	.quad	4294967326
	.quad	S3bQP_srt+384


==================== Asm code ====================
2018-03-16 15:57:52.339445915 UTC

.section .text
.align 8
_c3d44:
_c3d44:
	movq %r14,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp _c3d45
	.size _c3d44, .-_c3d44


==================== Asm code ====================
2018-03-16 15:57:52.340021378 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3d44_info:
	.quad	_c3d44
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.340774304 UTC

.section .text
.align 8
_c3d45:
_c3d45:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c3d4f
_c3d4e:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	leaq -31(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3d4f:
	movq $40,904(%r13)
	leaq block_c3d45_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c3d45, .-_c3d45


==================== Asm code ====================
2018-03-16 15:57:52.341546653 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3d45_info:
	.quad	_c3d45
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.355242698 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$w$cproperFraction_closure
.type GHC.Float.$w$cproperFraction_closure, @object
GHC.Float.$w$cproperFraction_closure:
	.quad	GHC.Float.$w$cproperFraction_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:52.356029822 UTC

.section .text
.align 8
.globl GHC.Float.$w$cproperFraction_slow
.type GHC.Float.$w$cproperFraction_slow, @object
GHC.Float.$w$cproperFraction_slow:
_c3d4I:
	movsd 8(%rbp),%xmm1
	movq (%rbp),%r14
	addq $16,%rbp
	jmp GHC.Float.$w$cproperFraction_entry
	.size GHC.Float.$w$cproperFraction_slow, .-GHC.Float.$w$cproperFraction_slow


==================== Asm code ====================
2018-03-16 15:57:52.356709508 UTC

.section .text
.align 8
$dReal_s3aMC_entry:
_c3d4U:
	movq 16(%rbx),%r14
	jmp *GHC.Real.$p1Integral_entry@gotpcrel(%rip)
	.size $dReal_s3aMC_entry, .-$dReal_s3aMC_entry


==================== Asm code ====================
2018-03-16 15:57:52.357478395 UTC

.section .data.rel.ro
.align 8
.align 1
$dReal_s3aMC_info:
	.quad	$dReal_s3aMC_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:52.358246676 UTC

.section .text
.align 8
$dNum_s3aMD_entry:
_c3d51:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3d52
_c3d53:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Real.$p1Real_entry@gotpcrel(%rip)
_c3d52:
	jmp *-16(%r13)
	.size $dNum_s3aMD_entry, .-$dNum_s3aMD_entry


==================== Asm code ====================
2018-03-16 15:57:52.358891152 UTC

.section .data.rel.ro
.align 8
.align 1
$dNum_s3aMD_info:
	.quad	$dNum_s3aMD_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:52.359565852 UTC

.section .text
.align 8
sat_s3aMP_entry:
_c3d5u:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3d5y
_c3d5z:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3d5s_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp *GHC.Integer.Type.encodeDoubleInteger_entry@gotpcrel(%rip)
_c3d5y:
	jmp *-16(%r13)
	.size sat_s3aMP_entry, .-sat_s3aMP_entry


==================== Asm code ====================
2018-03-16 15:57:52.360405886 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aMP_info:
	.quad	sat_s3aMP_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 15:57:52.361420816 UTC

.section .text
.align 8
_c3d5s:
_c3d5s:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3d5C
_c3d5B:
	movq GHC.Types.D#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movsd %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3d5C:
	movq $16,904(%r13)
	jmp *stg_gc_d1@gotpcrel(%rip)
	.size _c3d5s, .-_c3d5s


==================== Asm code ====================
2018-03-16 15:57:52.363049471 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3d5s_info:
	.quad	_c3d5s
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.363977169 UTC

.section .text
.align 8
sat_s3aMN_entry:
_c3d5H:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3d5I
_c3d5J:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c3d5I:
	jmp *-16(%r13)
	.size sat_s3aMN_entry, .-sat_s3aMN_entry


==================== Asm code ====================
2018-03-16 15:57:52.364608551 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aMN_info:
	.quad	sat_s3aMN_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:52.365646376 UTC

.section .text
.align 8
sat_s3aMV_entry:
_c3d5Y:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3d5Z
_c3d60:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Float.$fRealFloatDouble5_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c3d5Z:
	jmp *-16(%r13)
	.size sat_s3aMV_entry, .-sat_s3aMV_entry


==================== Asm code ====================
2018-03-16 15:57:52.366311378 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aMV_info:
	.quad	sat_s3aMV_entry
	.quad	1
	.quad	4294967312
	.quad	S3bQP_srt+264


==================== Asm code ====================
2018-03-16 15:57:52.367182561 UTC

.section .text
.align 8
sat_s3aMX_entry:
_c3d61:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3d62
_c3d63:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c3d65
_c3d64:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-32(%r12)
	movq %rbx,-24(%r12)
	leaq sat_s3aMV_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,(%r12)
	leaq -31(%r12),%r8
	leaq -16(%r12),%rdi
	movq GHC.Real.$fIntegralInt_closure@gotpcrel(%rip),%rsi
	movq %rax,%r14
	addq $-16,%rbp
	jmp *GHC.Real.^_entry@gotpcrel(%rip)
_c3d65:
	movq $40,904(%r13)
_c3d62:
	jmp *-16(%r13)
	.size sat_s3aMX_entry, .-sat_s3aMX_entry


==================== Asm code ====================
2018-03-16 15:57:52.367923338 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aMX_info:
	.quad	sat_s3aMX_entry
	.quad	4294967297
	.quad	30064771091
	.quad	S3bQP_srt+264


==================== Asm code ====================
2018-03-16 15:57:52.368639365 UTC

.section .text
.align 8
sat_s3aMU_entry:
_c3d6a:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3d6b
_c3d6c:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c3d6b:
	jmp *-16(%r13)
	.size sat_s3aMU_entry, .-sat_s3aMU_entry


==================== Asm code ====================
2018-03-16 15:57:52.369345684 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aMU_info:
	.quad	sat_s3aMU_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:52.370369618 UTC

.section .text
.align 8
sat_s3aMY_entry:
_c3d6d:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c3d6e
_c3d6f:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c3d6h
_c3d6g:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	leaq sat_s3aMX_info(%rip),%rdx
	movq %rdx,-56(%r12)
	movq %rcx,-40(%r12)
	movq %rbx,-32(%r12)
	leaq sat_s3aMU_info(%rip),%rbx
	movq %rbx,-24(%r12)
	movq %rax,-8(%r12)
	movq %rcx,(%r12)
	movq %rcx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-32(%rbp)
	leaq -56(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Num.*_entry@gotpcrel(%rip)
_c3d6h:
	movq $64,904(%r13)
_c3d6e:
	jmp *-16(%r13)
	.size sat_s3aMY_entry, .-sat_s3aMY_entry


==================== Asm code ====================
2018-03-16 15:57:52.371137552 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aMY_info:
	.quad	sat_s3aMY_entry
	.quad	4294967298
	.quad	30064771087
	.quad	S3bQP_srt+264


==================== Asm code ====================
2018-03-16 15:57:52.371684916 UTC

.section .data.rel.ro
.align 8
.align 1
u3d6V_srtd:
	.quad	S3bQP_srt+16
	.quad	57
	.quad	136304272504520705


==================== Asm code ====================
2018-03-16 15:57:52.372477294 UTC

.section .text
.align 8
.globl GHC.Float.$w$cproperFraction_entry
.type GHC.Float.$w$cproperFraction_entry, @object
GHC.Float.$w$cproperFraction_entry:
_c3d6l:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c3d6m
_c3d6n:
	leaq block_c3d4M_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.Integer.Type.decodeDoubleInteger_entry@gotpcrel(%rip)
_c3d6m:
	leaq GHC.Float.$w$cproperFraction_closure(%rip),%rbx
	movq %r14,-16(%rbp)
	movsd %xmm1,-8(%rbp)
	addq $-16,%rbp
	jmp *-8(%r13)
	.size GHC.Float.$w$cproperFraction_entry, .-GHC.Float.$w$cproperFraction_entry


==================== Asm code ====================
2018-03-16 15:57:52.373138969 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$w$cproperFraction_info
.type GHC.Float.$w$cproperFraction_info, @object
GHC.Float.$w$cproperFraction_info:
	.quad	GHC.Float.$w$cproperFraction_entry
	.quad	0
	.quad	-4294967282
	.quad	8589934592
	.quad	u3d6V_srtd
	.quad	130
	.quad	GHC.Float.$w$cproperFraction_slow


==================== Asm code ====================
2018-03-16 15:57:52.373840097 UTC

.section .data.rel.ro
.align 8
.align 1
u3d6W_srtd:
	.quad	S3bQP_srt+16
	.quad	56
	.quad	64176309722415105


==================== Asm code ====================
2018-03-16 15:57:52.3745589 UTC

.section .text
.align 8
_c3d4M:
_c3d4M:
	movq %r14,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp _c3d4N
	.size _c3d4M, .-_c3d4M


==================== Asm code ====================
2018-03-16 15:57:52.375188331 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3d4M_info:
	.quad	_c3d4M
	.quad	1
	.quad	-4294967266
	.quad	u3d6W_srtd


==================== Asm code ====================
2018-03-16 15:57:52.3757671 UTC

.section .data.rel.ro
.align 8
.align 1
u3d6X_srtd:
	.quad	S3bQP_srt+16
	.quad	56
	.quad	64176309722415105


==================== Asm code ====================
2018-03-16 15:57:52.376826447 UTC

.section .text
.align 8
_c3d4N:
_c3d4N:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c3d6q
_c3d6p:
	leaq $dReal_s3aMC_info(%rip),%rax
	movq %rax,-80(%r12)
	movq 24(%rbp),%rax
	movq %rax,-64(%r12)
	leaq $dNum_s3aMD_info(%rip),%rax
	movq %rax,-56(%r12)
	leaq -80(%r12),%rax
	movq %rax,-40(%r12)
	movq 8(%rbp),%rax
	leaq -56(%r12),%rbx
	testq %rax,%rax
	jl _c3d6j
_c3d6k:
	leaq sat_s3aMY_info(%rip),%rcx
	movq %rcx,-32(%r12)
	movq 16(%rbp),%rcx
	movq %rcx,-16(%r12)
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq GHC.Float.rationalToDouble4_closure+1(%rip),%r14
	leaq -32(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3d6j:
	negq %rax
	testq %rax,%rax
	jge _c3d6N
_c3d6O:
	addq $-40,%r12
	movq GHC.Real.^1_closure@gotpcrel(%rip),%rbx
	addq $32,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c3d6L:
	addq $-40,%r12
	movq %rbx,24(%rbp)
	movq GHC.Real.$fEnumRatio1_closure@gotpcrel(%rip),%rax
	movq %rax,(%rbp)
	jmp _s3aMH
_c3d6N:
	testq %rax,%rax
	je _c3d6L
_c3d6G:
	addq $-40,%r12
	leaq block_c3d6E_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq %rax,%rsi
	leaq GHC.Float.$fRealFloatDouble5_closure(%rip),%r14
	movq %rbx,24(%rbp)
	jmp *GHC.Real.$wf_entry@gotpcrel(%rip)
_c3d6q:
	movq $88,904(%r13)
	leaq block_c3d4N_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c3d4N, .-_c3d4N


==================== Asm code ====================
2018-03-16 15:57:52.377881109 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3d4N_info:
	.quad	_c3d4N
	.quad	67
	.quad	-4294967266
	.quad	u3d6X_srtd


==================== Asm code ====================
2018-03-16 15:57:52.378441044 UTC

.section .data.rel.ro
.align 8
.align 1
u3d6Y_srtd:
	.quad	S3bQP_srt+16
	.quad	51
	.quad	1125899906842625


==================== Asm code ====================
2018-03-16 15:57:52.379172614 UTC

.section .text
.align 8
_c3d6E:
_c3d6E:
	movq %rbx,(%rbp)
	jmp _s3aMH
	.size _c3d6E, .-_c3d6E


==================== Asm code ====================
2018-03-16 15:57:52.379769323 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3d6E_info:
	.quad	_c3d6E
	.quad	67
	.quad	-4294967266
	.quad	u3d6Y_srtd


==================== Asm code ====================
2018-03-16 15:57:52.380479121 UTC

.section .text
.align 8
_s3aMH:
_s3aMH:
	leaq block_c3d5i_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq GHC.Float.rationalToDouble5_closure(%rip),%rsi
	movq (%rbp),%r14
	addq $-8,%rbp
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
	.size _s3aMH, .-_s3aMH


==================== Asm code ====================
2018-03-16 15:57:52.3813187 UTC

.section .text
.align 8
_c3d5i:
_c3d5i:
	cmpq $1,%rbx
	je _c3d6B
_c3d6u:
	movq 8(%rbp),%rax
	leaq block_c3d5m_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rsi
	movq 24(%rbp),%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.quotRemInteger_entry@gotpcrel(%rip)
_c3d6B:
	movq GHC.Real.divZeroError_closure@gotpcrel(%rip),%rbx
	addq $40,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c3d5i, .-_c3d5i


==================== Asm code ====================
2018-03-16 15:57:52.381952472 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3d5i_info:
	.quad	_c3d5i
	.quad	132
	.quad	4294967326
	.quad	S3bQP_srt+472


==================== Asm code ====================
2018-03-16 15:57:52.382748326 UTC

.section .text
.align 8
_c3d5m:
_c3d5m:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c3d6x
_c3d6w:
	leaq sat_s3aMP_info(%rip),%rax
	movq %rax,-56(%r12)
	movq %r14,-40(%r12)
	movq 8(%rbp),%rax
	movq %rax,-32(%r12)
	leaq sat_s3aMN_info(%rip),%rax
	movq %rax,-24(%r12)
	movq 24(%rbp),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -56(%r12),%r14
	leaq -24(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3d6x:
	movq $64,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c3d5m, .-_c3d5m


==================== Asm code ====================
2018-03-16 15:57:52.38359765 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3d5m_info:
	.quad	_c3d5m
	.quad	195
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.387950751 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFracDouble_$cproperFraction_closure
.type GHC.Float.$fRealFracDouble_$cproperFraction_closure, @object
GHC.Float.$fRealFracDouble_$cproperFraction_closure:
	.quad	GHC.Float.$fRealFracDouble_$cproperFraction_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:52.388904461 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFracDouble_$cproperFraction_entry
.type GHC.Float.$fRealFracDouble_$cproperFraction_entry, @object
GHC.Float.$fRealFracDouble_$cproperFraction_entry:
_c3d8M:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3d8S
_c3d8T:
	leaq block_c3d8J_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3d8J
_c3d8K:
	movq (%rbx),%rax
	jmp *(%rax)
_c3d8S:
	leaq GHC.Float.$fRealFracDouble_$cproperFraction_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFracDouble_$cproperFraction_entry, .-GHC.Float.$fRealFracDouble_$cproperFraction_entry


==================== Asm code ====================
2018-03-16 15:57:52.390034206 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFracDouble_$cproperFraction_info
.type GHC.Float.$fRealFracDouble_$cproperFraction_info, @object
GHC.Float.$fRealFracDouble_$cproperFraction_info:
	.quad	GHC.Float.$fRealFracDouble_$cproperFraction_entry
	.quad	0
	.quad	21474836494
	.quad	8589934607
	.quad	S3bQP_srt+464


==================== Asm code ====================
2018-03-16 15:57:52.390942822 UTC

.section .text
.align 8
_c3d8J:
_c3d8J:
	movq 8(%rbp),%rax
	leaq block_c3d8P_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movsd 7(%rbx),%xmm1
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Float.$w$cproperFraction_entry
	.size _c3d8J, .-_c3d8J


==================== Asm code ====================
2018-03-16 15:57:52.391556565 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3d8J_info:
	.quad	_c3d8J
	.quad	1
	.quad	4294967326
	.quad	S3bQP_srt+464


==================== Asm code ====================
2018-03-16 15:57:52.39238649 UTC

.section .text
.align 8
_c3d8P:
_c3d8P:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3d8X
_c3d8W:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3d8X:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c3d8P, .-_c3d8P


==================== Asm code ====================
2018-03-16 15:57:52.393020832 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3d8P_info:
	.quad	_c3d8P
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.396632043 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFracDouble_$ctruncate_closure
.type GHC.Float.$fRealFracDouble_$ctruncate_closure, @object
GHC.Float.$fRealFracDouble_$ctruncate_closure:
	.quad	GHC.Float.$fRealFracDouble_$ctruncate_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:52.397567512 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFracDouble_$ctruncate_entry
.type GHC.Float.$fRealFracDouble_$ctruncate_entry, @object
GHC.Float.$fRealFracDouble_$ctruncate_entry:
_c3d9m:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3d9q
_c3d9r:
	leaq block_c3d9j_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3d9j
_c3d9k:
	movq (%rbx),%rax
	jmp *(%rax)
_c3d9q:
	leaq GHC.Float.$fRealFracDouble_$ctruncate_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFracDouble_$ctruncate_entry, .-GHC.Float.$fRealFracDouble_$ctruncate_entry


==================== Asm code ====================
2018-03-16 15:57:52.398239227 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFracDouble_$ctruncate_info
.type GHC.Float.$fRealFracDouble_$ctruncate_info, @object
GHC.Float.$fRealFracDouble_$ctruncate_info:
	.quad	GHC.Float.$fRealFracDouble_$ctruncate_entry
	.quad	0
	.quad	38654705678
	.quad	8589934607
	.quad	S3bQP_srt+464


==================== Asm code ====================
2018-03-16 15:57:52.399092198 UTC

.section .text
.align 8
_c3d9j:
_c3d9j:
	movq 8(%rbp),%rax
	leaq block_c3d9p_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movsd 7(%rbx),%xmm1
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Float.$w$cproperFraction_entry
	.size _c3d9j, .-_c3d9j


==================== Asm code ====================
2018-03-16 15:57:52.400207399 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3d9j_info:
	.quad	_c3d9j
	.quad	1
	.quad	4294967326
	.quad	S3bQP_srt+464


==================== Asm code ====================
2018-03-16 15:57:52.400913175 UTC

.section .text
.align 8
_c3d9p:
_c3d9p:
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c3d9p, .-_c3d9p


==================== Asm code ====================
2018-03-16 15:57:52.401508963 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3d9p_info:
	.quad	_c3d9p
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.407894755 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFracDouble_$cceiling_closure
.type GHC.Float.$fRealFracDouble_$cceiling_closure, @object
GHC.Float.$fRealFracDouble_$cceiling_closure:
	.quad	GHC.Float.$fRealFracDouble_$cceiling_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:52.40871684 UTC

.section .text
.align 8
sat_s3aNp_entry:
_c3dag:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dah
_c3dai:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Float.$fRealDouble1_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c3dah:
	jmp *-16(%r13)
	.size sat_s3aNp_entry, .-sat_s3aNp_entry


==================== Asm code ====================
2018-03-16 15:57:52.409584399 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aNp_info:
	.quad	sat_s3aNp_entry
	.quad	1
	.quad	4294967312
	.quad	S3bQP_srt+312


==================== Asm code ====================
2018-03-16 15:57:52.410371105 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFracDouble_$cceiling_entry
.type GHC.Float.$fRealFracDouble_$cceiling_entry, @object
GHC.Float.$fRealFracDouble_$cceiling_entry:
_c3daj:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dak
_c3dal:
	leaq block_c3d9O_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3d9O
_c3d9P:
	movq (%rbx),%rax
	jmp *(%rax)
_c3dak:
	leaq GHC.Float.$fRealFracDouble_$cceiling_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFracDouble_$cceiling_entry, .-GHC.Float.$fRealFracDouble_$cceiling_entry


==================== Asm code ====================
2018-03-16 15:57:52.411022832 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFracDouble_$cceiling_info
.type GHC.Float.$fRealFracDouble_$cceiling_info, @object
GHC.Float.$fRealFracDouble_$cceiling_info:
	.quad	GHC.Float.$fRealFracDouble_$cceiling_entry
	.quad	0
	.quad	38280601127616526
	.quad	8589934607
	.quad	S3bQP_srt+312


==================== Asm code ====================
2018-03-16 15:57:52.411678644 UTC

.section .text
.align 8
_c3d9O:
_c3d9O:
	leaq block_c3d9T_info(%rip),%rax
	movq %rax,(%rbp)
	movsd 7(%rbx),%xmm1
	movq 8(%rbp),%r14
	jmp GHC.Float.$w$cproperFraction_entry
	.size _c3d9O, .-_c3d9O


==================== Asm code ====================
2018-03-16 15:57:52.412257858 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3d9O_info:
	.quad	_c3d9O
	.quad	1
	.quad	2251804108652574
	.quad	S3bQP_srt+312


==================== Asm code ====================
2018-03-16 15:57:52.413095611 UTC

.section .text
.align 8
_c3d9T:
_c3d9T:
	leaq block_c3d9V_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq %r14,%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c3d9V
_c3d9W:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3d9T, .-_c3d9T


==================== Asm code ====================
2018-03-16 15:57:52.413760647 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3d9T_info:
	.quad	_c3d9T
	.quad	1
	.quad	4294967326
	.quad	S3bQP_srt+312


==================== Asm code ====================
2018-03-16 15:57:52.414482853 UTC

.section .text
.align 8
_c3d9V:
_c3d9V:
	movsd 7(%rbx),%xmm0
	xorpd %xmm1,%xmm1
	ucomisd %xmm1,%xmm0
	ja _c3dar
_c3daq:
	movq 8(%rbp),%rbx
	addq $24,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_c3dar:
	leaq block_c3da4_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%r14
	jmp *GHC.Real.$p1Integral_entry@gotpcrel(%rip)
	.size _c3d9V, .-_c3d9V


==================== Asm code ====================
2018-03-16 15:57:52.415134362 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3d9V_info:
	.quad	_c3d9V
	.quad	2
	.quad	4294967326
	.quad	S3bQP_srt+312


==================== Asm code ====================
2018-03-16 15:57:52.415721605 UTC

.section .text
.align 8
_c3da4:
_c3da4:
	leaq block_c3da8_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp *GHC.Real.$p1Real_entry@gotpcrel(%rip)
	.size _c3da4, .-_c3da4


==================== Asm code ====================
2018-03-16 15:57:52.416279028 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3da4_info:
	.quad	_c3da4
	.quad	130
	.quad	4294967326
	.quad	S3bQP_srt+312


==================== Asm code ====================
2018-03-16 15:57:52.416961496 UTC

.section .text
.align 8
_c3da8:
_c3da8:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3dav
_c3dau:
	leaq sat_s3aNp_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,(%r12)
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,(%rbp)
	leaq -16(%r12),%rax
	movq %rax,16(%rbp)
	jmp *GHC.Num.+_entry@gotpcrel(%rip)
_c3dav:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3da8, .-_c3da8


==================== Asm code ====================
2018-03-16 15:57:52.418110814 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3da8_info:
	.quad	_c3da8
	.quad	130
	.quad	4294967326
	.quad	S3bQP_srt+312


==================== Asm code ====================
2018-03-16 15:57:52.423778595 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFracDouble_$cfloor_closure
.type GHC.Float.$fRealFracDouble_$cfloor_closure, @object
GHC.Float.$fRealFracDouble_$cfloor_closure:
	.quad	GHC.Float.$fRealFracDouble_$cfloor_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:52.424696422 UTC

.section .text
.align 8
sat_s3aNC_entry:
_c3dbI:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dbJ
_c3dbK:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Float.$fRealDouble1_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c3dbJ:
	jmp *-16(%r13)
	.size sat_s3aNC_entry, .-sat_s3aNC_entry


==================== Asm code ====================
2018-03-16 15:57:52.425450714 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aNC_info:
	.quad	sat_s3aNC_entry
	.quad	1
	.quad	4294967312
	.quad	S3bQP_srt+312


==================== Asm code ====================
2018-03-16 15:57:52.426256222 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFracDouble_$cfloor_entry
.type GHC.Float.$fRealFracDouble_$cfloor_entry, @object
GHC.Float.$fRealFracDouble_$cfloor_entry:
_c3dbL:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dbM
_c3dbN:
	leaq block_c3dbg_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3dbg
_c3dbh:
	movq (%rbx),%rax
	jmp *(%rax)
_c3dbM:
	leaq GHC.Float.$fRealFracDouble_$cfloor_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFracDouble_$cfloor_entry, .-GHC.Float.$fRealFracDouble_$cfloor_entry


==================== Asm code ====================
2018-03-16 15:57:52.426923196 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFracDouble_$cfloor_info
.type GHC.Float.$fRealFracDouble_$cfloor_info, @object
GHC.Float.$fRealFracDouble_$cfloor_info:
	.quad	GHC.Float.$fRealFracDouble_$cfloor_entry
	.quad	0
	.quad	74309398146580494
	.quad	8589934607
	.quad	S3bQP_srt+312


==================== Asm code ====================
2018-03-16 15:57:52.427588429 UTC

.section .text
.align 8
_c3dbg:
_c3dbg:
	leaq block_c3dbl_info(%rip),%rax
	movq %rax,(%rbp)
	movsd 7(%rbx),%xmm1
	movq 8(%rbp),%r14
	jmp GHC.Float.$w$cproperFraction_entry
	.size _c3dbg, .-_c3dbg


==================== Asm code ====================
2018-03-16 15:57:52.428175884 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dbg_info:
	.quad	_c3dbg
	.quad	1
	.quad	2251804108652574
	.quad	S3bQP_srt+312


==================== Asm code ====================
2018-03-16 15:57:52.428897599 UTC

.section .text
.align 8
_c3dbl:
_c3dbl:
	leaq block_c3dbn_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq %r14,%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c3dbn
_c3dbo:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3dbl, .-_c3dbl


==================== Asm code ====================
2018-03-16 15:57:52.429534532 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dbl_info:
	.quad	_c3dbl
	.quad	1
	.quad	4294967326
	.quad	S3bQP_srt+312


==================== Asm code ====================
2018-03-16 15:57:52.430293965 UTC

.section .text
.align 8
_c3dbn:
_c3dbn:
	movsd 7(%rbx),%xmm0
	xorpd %xmm1,%xmm1
	ucomisd %xmm1,%xmm0
	jp _c3dbS
	jb _c3dbT
_c3dbS:
	movq 8(%rbp),%rbx
	addq $24,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_c3dbT:
	leaq block_c3dbw_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%r14
	jmp *GHC.Real.$p1Integral_entry@gotpcrel(%rip)
	.size _c3dbn, .-_c3dbn


==================== Asm code ====================
2018-03-16 15:57:52.430939858 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dbn_info:
	.quad	_c3dbn
	.quad	2
	.quad	4294967326
	.quad	S3bQP_srt+312


==================== Asm code ====================
2018-03-16 15:57:52.43156801 UTC

.section .text
.align 8
_c3dbw:
_c3dbw:
	leaq block_c3dbA_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp *GHC.Real.$p1Real_entry@gotpcrel(%rip)
	.size _c3dbw, .-_c3dbw


==================== Asm code ====================
2018-03-16 15:57:52.432140544 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dbw_info:
	.quad	_c3dbw
	.quad	130
	.quad	4294967326
	.quad	S3bQP_srt+312


==================== Asm code ====================
2018-03-16 15:57:52.432842747 UTC

.section .text
.align 8
_c3dbA:
_c3dbA:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3dbX
_c3dbW:
	leaq sat_s3aNC_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,(%r12)
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,(%rbp)
	leaq -16(%r12),%rax
	movq %rax,16(%rbp)
	jmp *GHC.Num.-_entry@gotpcrel(%rip)
_c3dbX:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3dbA, .-_c3dbA


==================== Asm code ====================
2018-03-16 15:57:52.433790734 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dbA_info:
	.quad	_c3dbA
	.quad	130
	.quad	4294967326
	.quad	S3bQP_srt+312


==================== Asm code ====================
2018-03-16 15:57:52.437327208 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$w$cexponent_closure
.type GHC.Float.$w$cexponent_closure, @object
GHC.Float.$w$cexponent_closure:
	.quad	GHC.Float.$w$cexponent_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:52.438137382 UTC

.section .text
.align 8
.globl GHC.Float.$w$cexponent_entry
.type GHC.Float.$w$cexponent_entry, @object
GHC.Float.$w$cexponent_entry:
_c3dcR:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dcS
_c3dcT:
	leaq block_c3dcI_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp *GHC.Integer.Type.decodeDoubleInteger_entry@gotpcrel(%rip)
_c3dcS:
	leaq GHC.Float.$w$cexponent_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$w$cexponent_entry, .-GHC.Float.$w$cexponent_entry


==================== Asm code ====================
2018-03-16 15:57:52.438826936 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$w$cexponent_info
.type GHC.Float.$w$cexponent_info, @object
GHC.Float.$w$cexponent_info:
	.quad	GHC.Float.$w$cexponent_entry
	.quad	0
	.quad	281547991154702
	.quad	4294967303
	.quad	S3bQP_srt+384


==================== Asm code ====================
2018-03-16 15:57:52.440103491 UTC

.section .text
.align 8
_c3dcI:
_c3dcI:
	leaq block_c3dcM_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq GHC.Float.rationalToDouble5_closure(%rip),%rsi
	movq %r14,%rax
	movq %rbx,%r14
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
	.size _c3dcI, .-_c3dcI


==================== Asm code ====================
2018-03-16 15:57:52.440791649 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dcI_info:
	.quad	_c3dcI
	.quad	0
	.quad	4294967326
	.quad	S3bQP_srt+416


==================== Asm code ====================
2018-03-16 15:57:52.441574068 UTC

.section .text
.align 8
_c3dcM:
_c3dcM:
	cmpq $1,%rbx
	je _c3dcQ
_c3dcP:
	movq 8(%rbp),%rax
	leaq 53(%rax),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3dcQ:
	xorl %ebx,%ebx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3dcM, .-_c3dcM


==================== Asm code ====================
2018-03-16 15:57:52.442184923 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dcM_info:
	.quad	_c3dcM
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.445675108 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble_$cexponent_closure
.type GHC.Float.$fRealFloatDouble_$cexponent_closure, @object
GHC.Float.$fRealFloatDouble_$cexponent_closure:
	.quad	GHC.Float.$fRealFloatDouble_$cexponent_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:52.446567084 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFloatDouble_$cexponent_entry
.type GHC.Float.$fRealFloatDouble_$cexponent_entry, @object
GHC.Float.$fRealFloatDouble_$cexponent_entry:
_c3ddp:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3ddx
_c3ddy:
	leaq block_c3ddm_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3ddm
_c3ddn:
	movq (%rbx),%rax
	jmp *(%rax)
_c3ddx:
	leaq GHC.Float.$fRealFloatDouble_$cexponent_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFloatDouble_$cexponent_entry, .-GHC.Float.$fRealFloatDouble_$cexponent_entry


==================== Asm code ====================
2018-03-16 15:57:52.447219842 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble_$cexponent_info
.type GHC.Float.$fRealFloatDouble_$cexponent_info, @object
GHC.Float.$fRealFloatDouble_$cexponent_info:
	.quad	GHC.Float.$fRealFloatDouble_$cexponent_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S3bQP_srt+512


==================== Asm code ====================
2018-03-16 15:57:52.447886682 UTC

.section .text
.align 8
_c3ddm:
_c3ddm:
	leaq block_c3dds_info(%rip),%rax
	movq %rax,(%rbp)
	movsd 7(%rbx),%xmm1
	jmp GHC.Float.$w$cexponent_entry
	.size _c3ddm, .-_c3ddm


==================== Asm code ====================
2018-03-16 15:57:52.448493653 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3ddm_info:
	.quad	_c3ddm
	.quad	0
	.quad	4294967326
	.quad	S3bQP_srt+512


==================== Asm code ====================
2018-03-16 15:57:52.449228539 UTC

.section .text
.align 8
_c3dds:
_c3dds:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3ddC
_c3ddB:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3ddC:
	movq $16,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c3dds, .-_c3dds


==================== Asm code ====================
2018-03-16 15:57:52.4502632 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dds_info:
	.quad	_c3dds
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.4541457 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble_$csignificand_closure
.type GHC.Float.$fRealFloatDouble_$csignificand_closure, @object
GHC.Float.$fRealFloatDouble_$csignificand_closure:
	.quad	GHC.Float.$fRealFloatDouble_$csignificand_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:52.455021117 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFloatDouble_$csignificand_entry
.type GHC.Float.$fRealFloatDouble_$csignificand_entry, @object
GHC.Float.$fRealFloatDouble_$csignificand_entry:
_c3de1:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3ded
_c3dee:
	leaq block_c3ddY_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3ddY
_c3ddZ:
	movq (%rbx),%rax
	jmp *(%rax)
_c3ded:
	leaq GHC.Float.$fRealFloatDouble_$csignificand_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFloatDouble_$csignificand_entry, .-GHC.Float.$fRealFloatDouble_$csignificand_entry


==================== Asm code ====================
2018-03-16 15:57:52.455719578 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble_$csignificand_info
.type GHC.Float.$fRealFloatDouble_$csignificand_info, @object
GHC.Float.$fRealFloatDouble_$csignificand_info:
	.quad	GHC.Float.$fRealFloatDouble_$csignificand_entry
	.quad	0
	.quad	1125904201809934
	.quad	4294967301
	.quad	S3bQP_srt+384


==================== Asm code ====================
2018-03-16 15:57:52.456391221 UTC

.section .text
.align 8
_c3ddY:
_c3ddY:
	leaq block_c3de4_info(%rip),%rax
	movq %rax,(%rbp)
	movsd 7(%rbx),%xmm1
	jmp *GHC.Integer.Type.decodeDoubleInteger_entry@gotpcrel(%rip)
	.size _c3ddY, .-_c3ddY


==================== Asm code ====================
2018-03-16 15:57:52.457010089 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3ddY_info:
	.quad	_c3ddY
	.quad	0
	.quad	4294967326
	.quad	S3bQP_srt+384


==================== Asm code ====================
2018-03-16 15:57:52.457729456 UTC

.section .text
.align 8
_c3de4:
_c3de4:
	leaq block_c3de8_info(%rip),%rax
	movq %rax,(%rbp)
	movq $-53,%rsi
	movq %rbx,%r14
	jmp *GHC.Integer.Type.encodeDoubleInteger_entry@gotpcrel(%rip)
	.size _c3de4, .-_c3de4


==================== Asm code ====================
2018-03-16 15:57:52.458313251 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3de4_info:
	.quad	_c3de4
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.45906678 UTC

.section .text
.align 8
_c3de8:
_c3de8:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3dej
_c3dei:
	movq GHC.Types.D#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movsd %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3dej:
	movq $16,904(%r13)
	jmp *stg_gc_d1@gotpcrel(%rip)
	.size _c3de8, .-_c3de8


==================== Asm code ====================
2018-03-16 15:57:52.459707915 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3de8_info:
	.quad	_c3de8
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.467647317 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$w$cround_closure
.type GHC.Float.$w$cround_closure, @object
GHC.Float.$w$cround_closure:
	.quad	GHC.Float.$w$cround_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:52.468428635 UTC

.section .text
.align 8
.globl GHC.Float.$w$cround_slow
.type GHC.Float.$w$cround_slow, @object
GHC.Float.$w$cround_slow:
_c3deG:
	movsd 8(%rbp),%xmm1
	movq (%rbp),%r14
	addq $16,%rbp
	jmp GHC.Float.$w$cround_entry
	.size GHC.Float.$w$cround_slow, .-GHC.Float.$w$cround_slow


==================== Asm code ====================
2018-03-16 15:57:52.469209261 UTC

.section .text
.align 8
sat_s3aO7_entry:
_c3dfk:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dfl
_c3dfm:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Float.$fRealDouble1_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c3dfl:
	jmp *-16(%r13)
	.size sat_s3aO7_entry, .-sat_s3aO7_entry


==================== Asm code ====================
2018-03-16 15:57:52.469947761 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aO7_info:
	.quad	sat_s3aO7_entry
	.quad	1
	.quad	4294967312
	.quad	S3bQP_srt+312


==================== Asm code ====================
2018-03-16 15:57:52.470703983 UTC

.section .text
.align 8
sat_s3aO8_entry:
_c3dfs:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dft
_c3dfu:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Float.$fRealDouble1_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c3dft:
	jmp *-16(%r13)
	.size sat_s3aO8_entry, .-sat_s3aO8_entry


==================== Asm code ====================
2018-03-16 15:57:52.471362472 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aO8_info:
	.quad	sat_s3aO8_entry
	.quad	1
	.quad	4294967312
	.quad	S3bQP_srt+312


==================== Asm code ====================
2018-03-16 15:57:52.472145992 UTC

.section .text
.align 8
.globl GHC.Float.$w$cround_entry
.type GHC.Float.$w$cround_entry, @object
GHC.Float.$w$cround_entry:
_c3dfv:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dfw
_c3dfx:
	leaq block_c3deK_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Float.$w$cproperFraction_entry
_c3dfw:
	leaq GHC.Float.$w$cround_closure(%rip),%rbx
	movq %r14,-16(%rbp)
	movsd %xmm1,-8(%rbp)
	addq $-16,%rbp
	jmp *-8(%r13)
	.size GHC.Float.$w$cround_entry, .-GHC.Float.$w$cround_entry


==================== Asm code ====================
2018-03-16 15:57:52.472835042 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$w$cround_info
.type GHC.Float.$w$cround_info, @object
GHC.Float.$w$cround_info:
	.quad	GHC.Float.$w$cround_entry
	.quad	0
	.quad	1155173343075237902
	.quad	8589934592
	.quad	S3bQP_srt+312
	.quad	130
	.quad	GHC.Float.$w$cround_slow


==================== Asm code ====================
2018-03-16 15:57:52.473713368 UTC

.section .text
.align 8
_c3deK:
_c3deK:
	leaq block_c3deM_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq %r14,%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c3deM
_c3deN:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3deK, .-_c3deK


==================== Asm code ====================
2018-03-16 15:57:52.474315487 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3deK_info:
	.quad	_c3deK
	.quad	1
	.quad	38654705694
	.quad	S3bQP_srt+312


==================== Asm code ====================
2018-03-16 15:57:52.475222985 UTC

.section .text
.align 8
_c3deM:
_c3deM:
	movq 16(%rbp),%rax
	movq 8(%rbp),%rcx
	movsd 7(%rbx),%xmm0
	movsd %xmm0,%xmm1
	movsd _n3dgF(%rip),%xmm2
	andpd %xmm2,%xmm1
	subsd _n3dgH(%rip),%xmm1
	xorpd %xmm2,%xmm2
	ucomisd %xmm2,%xmm1
	jp _c3dg1
	jb _u3dg4
_c3dg1:
	xorpd %xmm2,%xmm2
	ucomisd %xmm2,%xmm1
	jp _u3dg5
	je _c3dfP
_u3dg5:
	movsd %xmm0,(%rbp)
	jmp _s3aO3
_u3dg4:
	addq $8,%rbp
	jmp _c3dg2
_c3dfP:
	leaq block_c3dfO_info(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq %rcx,%rsi
	movq %rax,%r14
	movsd %xmm0,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Real.even_entry@gotpcrel(%rip)
	.size _c3deM, .-_c3deM
.section .rodata
.align 8
.align 8
_n3dgF:
	.quad	9223372036854775807
.section .rodata
.align 8
.align 8
_n3dgH:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	224
	.byte	63


==================== Asm code ====================
2018-03-16 15:57:52.475950933 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3deM_info:
	.quad	_c3deM
	.quad	2
	.quad	38654705694
	.quad	S3bQP_srt+312


==================== Asm code ====================
2018-03-16 15:57:52.476699355 UTC

.section .text
.align 8
_c3dfO:
_c3dfO:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u3dg6
_u3dg7:
	addq $16,%rbp
	jmp _c3dg2
_u3dg6:
	addq $8,%rbp
	jmp _s3aO3
	.size _c3dfO, .-_c3dfO


==================== Asm code ====================
2018-03-16 15:57:52.477344449 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dfO_info:
	.quad	_c3dfO
	.quad	67
	.quad	4294967326
	.quad	S3bQP_srt+312


==================== Asm code ====================
2018-03-16 15:57:52.478044074 UTC

.section .text
.align 8
_c3dg2:
_c3dg2:
	movq (%rbp),%rbx
	addq $16,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c3dg2, .-_c3dg2


==================== Asm code ====================
2018-03-16 15:57:52.478699594 UTC

.section .text
.align 8
_s3aO3:
_s3aO3:
	leaq block_c3df5_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 16(%rbp),%r14
	addq $-8,%rbp
	jmp *GHC.Real.$p1Integral_entry@gotpcrel(%rip)
	.size _s3aO3, .-_s3aO3


==================== Asm code ====================
2018-03-16 15:57:52.479347191 UTC

.section .text
.align 8
_c3df5:
_c3df5:
	leaq block_c3df9_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp *GHC.Real.$p1Real_entry@gotpcrel(%rip)
	.size _c3df5, .-_c3df5


==================== Asm code ====================
2018-03-16 15:57:52.480466892 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3df5_info:
	.quad	_c3df5
	.quad	323
	.quad	4294967326
	.quad	S3bQP_srt+312


==================== Asm code ====================
2018-03-16 15:57:52.481861328 UTC

.section .text
.align 8
_c3df9:
_c3df9:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3dfE
_c3dfD:
	movsd 8(%rbp),%xmm0
	xorpd %xmm1,%xmm1
	ucomisd %xmm1,%xmm0
	jp _c3dfG
	jb _c3dfH
_c3dfG:
	leaq sat_s3aO7_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,(%r12)
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,8(%rbp)
	leaq -16(%r12),%rax
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp *GHC.Num.+_entry@gotpcrel(%rip)
_c3dfH:
	leaq sat_s3aO8_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,(%r12)
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,8(%rbp)
	leaq -16(%r12),%rax
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp *GHC.Num.-_entry@gotpcrel(%rip)
_c3dfE:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3df9, .-_c3df9


==================== Asm code ====================
2018-03-16 15:57:52.482681871 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3df9_info:
	.quad	_c3df9
	.quad	323
	.quad	4294967326
	.quad	S3bQP_srt+312


==================== Asm code ====================
2018-03-16 15:57:52.485812765 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFracDouble_$cround_closure
.type GHC.Float.$fRealFracDouble_$cround_closure, @object
GHC.Float.$fRealFracDouble_$cround_closure:
	.quad	GHC.Float.$fRealFracDouble_$cround_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:52.486654663 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFracDouble_$cround_entry
.type GHC.Float.$fRealFracDouble_$cround_entry, @object
GHC.Float.$fRealFracDouble_$cround_entry:
_c3dhn:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dho
_c3dhp:
	leaq block_c3dhk_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3dhk
_c3dhl:
	movq (%rbx),%rax
	jmp *(%rax)
_c3dho:
	leaq GHC.Float.$fRealFracDouble_$cround_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFracDouble_$cround_entry, .-GHC.Float.$fRealFracDouble_$cround_entry


==================== Asm code ====================
2018-03-16 15:57:52.487371019 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFracDouble_$cround_info
.type GHC.Float.$fRealFracDouble_$cround_info, @object
GHC.Float.$fRealFracDouble_$cround_info:
	.quad	GHC.Float.$fRealFracDouble_$cround_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S3bQP_srt+536


==================== Asm code ====================
2018-03-16 15:57:52.4882289 UTC

.section .text
.align 8
_c3dhk:
_c3dhk:
	movsd 7(%rbx),%xmm1
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Float.$w$cround_entry
	.size _c3dhk, .-_c3dhk


==================== Asm code ====================
2018-03-16 15:57:52.488983788 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dhk_info:
	.quad	_c3dhk
	.quad	1
	.quad	4294967326
	.quad	S3bQP_srt+536


==================== Asm code ====================
2018-03-16 15:57:52.490918617 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble4_closure
.type GHC.Float.$fRealFloatDouble4_closure, @object
GHC.Float.$fRealFloatDouble4_closure:
	.quad	GHC.Types.I#_con_info
	.quad	53


==================== Asm code ====================
2018-03-16 15:57:52.493571126 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble_$cfloatDigits_closure
.type GHC.Float.$fRealFloatDouble_$cfloatDigits_closure, @object
GHC.Float.$fRealFloatDouble_$cfloatDigits_closure:
	.quad	GHC.Float.$fRealFloatDouble_$cfloatDigits_info


==================== Asm code ====================
2018-03-16 15:57:52.494647204 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFloatDouble_$cfloatDigits_entry
.type GHC.Float.$fRealFloatDouble_$cfloatDigits_entry, @object
GHC.Float.$fRealFloatDouble_$cfloatDigits_entry:
_c3dhJ:
	leaq GHC.Float.$fRealFloatDouble4_closure+1(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Float.$fRealFloatDouble_$cfloatDigits_entry, .-GHC.Float.$fRealFloatDouble_$cfloatDigits_entry


==================== Asm code ====================
2018-03-16 15:57:52.495520084 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble_$cfloatDigits_info
.type GHC.Float.$fRealFloatDouble_$cfloatDigits_info, @object
GHC.Float.$fRealFloatDouble_$cfloatDigits_info:
	.quad	GHC.Float.$fRealFloatDouble_$cfloatDigits_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:52.498984791 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble_$cfloatRadix_closure
.type GHC.Float.$fRealFloatDouble_$cfloatRadix_closure, @object
GHC.Float.$fRealFloatDouble_$cfloatRadix_closure:
	.quad	GHC.Float.$fRealFloatDouble_$cfloatRadix_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:52.50001603 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFloatDouble_$cfloatRadix_entry
.type GHC.Float.$fRealFloatDouble_$cfloatRadix_entry, @object
GHC.Float.$fRealFloatDouble_$cfloatRadix_entry:
_c3dhV:
	leaq GHC.Float.$fRealFloatDouble5_closure(%rip),%rbx
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Float.$fRealFloatDouble_$cfloatRadix_entry, .-GHC.Float.$fRealFloatDouble_$cfloatRadix_entry


==================== Asm code ====================
2018-03-16 15:57:52.50083703 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble_$cfloatRadix_info
.type GHC.Float.$fRealFloatDouble_$cfloatRadix_info, @object
GHC.Float.$fRealFloatDouble_$cfloatRadix_info:
	.quad	GHC.Float.$fRealFloatDouble_$cfloatRadix_entry
	.quad	0
	.quad	4294967310
	.quad	4294967301
	.quad	S3bQP_srt+552


==================== Asm code ====================
2018-03-16 15:57:52.563050299 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$dmatan2_closure
.type GHC.Float.$dmatan2_closure, @object
GHC.Float.$dmatan2_closure:
	.quad	GHC.Float.$dmatan2_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:52.564279223 UTC

.section .text
.align 8
$dNum_s3aOm_entry:
_c3dij:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dik
_c3dil:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Real.$p1Real_entry@gotpcrel(%rip)
_c3dik:
	jmp *-16(%r13)
	.size $dNum_s3aOm_entry, .-$dNum_s3aOm_entry


==================== Asm code ====================
2018-03-16 15:57:52.565340768 UTC

.section .data.rel.ro
.align 8
.align 1
$dNum_s3aOm_info:
	.quad	$dNum_s3aOm_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:52.56619911 UTC

.section .text
.align 8
$dFloating_s3aOo_entry:
_c3diu:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3div
_c3diw:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Float.$p2RealFloat_entry
_c3div:
	jmp *-16(%r13)
	.size $dFloating_s3aOo_entry, .-$dFloating_s3aOo_entry


==================== Asm code ====================
2018-03-16 15:57:52.567088842 UTC

.section .data.rel.ro
.align 8
.align 1
$dFloating_s3aOo_info:
	.quad	$dFloating_s3aOo_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:52.56817799 UTC

.section .text
.align 8
sat_s3aOp_entry:
_c3diB:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3diC
_c3diD:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Float.rationalToDouble5_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c3diC:
	jmp *-16(%r13)
	.size sat_s3aOp_entry, .-sat_s3aOp_entry


==================== Asm code ====================
2018-03-16 15:57:52.569112483 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aOp_info:
	.quad	sat_s3aOp_entry
	.quad	1
	.quad	4294967312
	.quad	S3bQP_srt+416


==================== Asm code ====================
2018-03-16 15:57:52.570274001 UTC

.section .text
.align 8
sat_s3aP4_entry:
_c3diQ:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3diR
_c3diS:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Float.rationalToDouble5_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c3diR:
	jmp *-16(%r13)
	.size sat_s3aP4_entry, .-sat_s3aP4_entry


==================== Asm code ====================
2018-03-16 15:57:52.571272075 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aP4_info:
	.quad	sat_s3aP4_entry
	.quad	1
	.quad	4294967312
	.quad	S3bQP_srt+416


==================== Asm code ====================
2018-03-16 15:57:52.57226081 UTC

.section .text
.align 8
sat_s3aOW_entry:
_c3dj2:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dj3
_c3dj4:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Float.rationalToDouble5_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c3dj3:
	jmp *-16(%r13)
	.size sat_s3aOW_entry, .-sat_s3aOW_entry


==================== Asm code ====================
2018-03-16 15:57:52.573394582 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aOW_info:
	.quad	sat_s3aOW_entry
	.quad	1
	.quad	4294967312
	.quad	S3bQP_srt+416


==================== Asm code ====================
2018-03-16 15:57:52.574517127 UTC

.section .text
.align 8
sat_s3aOQ_entry:
_c3dje:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3djf
_c3djg:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Float.rationalToDouble5_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c3djf:
	jmp *-16(%r13)
	.size sat_s3aOQ_entry, .-sat_s3aOQ_entry


==================== Asm code ====================
2018-03-16 15:57:52.575580362 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aOQ_info:
	.quad	sat_s3aOQ_entry
	.quad	1
	.quad	4294967312
	.quad	S3bQP_srt+416


==================== Asm code ====================
2018-03-16 15:57:52.576701104 UTC

.section .text
.align 8
sat_s3aOL_entry:
_c3djq:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3djr
_c3djs:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Float.rationalToDouble5_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c3djr:
	jmp *-16(%r13)
	.size sat_s3aOL_entry, .-sat_s3aOL_entry


==================== Asm code ====================
2018-03-16 15:57:52.578713309 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aOL_info:
	.quad	sat_s3aOL_entry
	.quad	1
	.quad	4294967312
	.quad	S3bQP_srt+416


==================== Asm code ====================
2018-03-16 15:57:52.57945819 UTC

.section .text
.align 8
sat_s3aOC_entry:
_c3djH:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3djI
_c3djJ:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Float.rationalToDouble5_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c3djI:
	jmp *-16(%r13)
	.size sat_s3aOC_entry, .-sat_s3aOC_entry


==================== Asm code ====================
2018-03-16 15:57:52.58013709 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aOC_info:
	.quad	sat_s3aOC_entry
	.quad	1
	.quad	4294967312
	.quad	S3bQP_srt+416


==================== Asm code ====================
2018-03-16 15:57:52.580859045 UTC

.section .text
.align 8
sat_s3aOy_entry:
_c3djT:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3djU
_c3djV:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Float.rationalToDouble5_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c3djU:
	jmp *-16(%r13)
	.size sat_s3aOy_entry, .-sat_s3aOy_entry


==================== Asm code ====================
2018-03-16 15:57:52.581552666 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aOy_info:
	.quad	sat_s3aOy_entry
	.quad	1
	.quad	4294967312
	.quad	S3bQP_srt+416


==================== Asm code ====================
2018-03-16 15:57:52.582290595 UTC

.section .text
.align 8
sat_s3aOA_entry:
_c3dk5:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dk6
_c3dk7:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Float.rationalToDouble5_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c3dk6:
	jmp *-16(%r13)
	.size sat_s3aOA_entry, .-sat_s3aOA_entry


==================== Asm code ====================
2018-03-16 15:57:52.582931617 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aOA_info:
	.quad	sat_s3aOA_entry
	.quad	1
	.quad	4294967312
	.quad	S3bQP_srt+416


==================== Asm code ====================
2018-03-16 15:57:52.583671413 UTC

.section .text
.align 8
sat_s3aOE_entry:
_c3dkh:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dki
_c3dkj:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Float.rationalToDouble5_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c3dki:
	jmp *-16(%r13)
	.size sat_s3aOE_entry, .-sat_s3aOE_entry


==================== Asm code ====================
2018-03-16 15:57:52.584327611 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aOE_info:
	.quad	sat_s3aOE_entry
	.quad	1
	.quad	4294967312
	.quad	S3bQP_srt+416


==================== Asm code ====================
2018-03-16 15:57:52.585076389 UTC

.section .text
.align 8
sat_s3aOJ_entry:
_c3dkC:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dkD
_c3dkE:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.negate_entry@gotpcrel(%rip)
_c3dkD:
	jmp *-16(%r13)
	.size sat_s3aOJ_entry, .-sat_s3aOJ_entry


==================== Asm code ====================
2018-03-16 15:57:52.585946547 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aOJ_info:
	.quad	sat_s3aOJ_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:52.586778881 UTC

.section .text
.align 8
sat_s3aOK_entry:
_c3dkF:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dkG
_c3dkH:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c3dkJ
_c3dkI:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rbx
	leaq sat_s3aOJ_info(%rip),%rsi
	movq %rsi,-24(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq %rax,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-32(%rbp)
	movq %rdx,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Float.atan2_entry
_c3dkJ:
	movq $32,904(%r13)
_c3dkG:
	jmp *-16(%r13)
	.size sat_s3aOK_entry, .-sat_s3aOK_entry


==================== Asm code ====================
2018-03-16 15:57:52.587511077 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aOK_info:
	.quad	sat_s3aOK_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 15:57:52.588245133 UTC

.section .text
.align 8
sat_s3aOO_entry:
_c3dl2:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dl3
_c3dl4:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.negate_entry@gotpcrel(%rip)
_c3dl3:
	jmp *-16(%r13)
	.size sat_s3aOO_entry, .-sat_s3aOO_entry


==================== Asm code ====================
2018-03-16 15:57:52.588879825 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aOO_info:
	.quad	sat_s3aOO_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:52.5897439 UTC

.section .text
.align 8
sat_s3aOP_entry:
_c3dl5:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dl6
_c3dl7:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c3dl9
_c3dl8:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rbx
	leaq sat_s3aOO_info(%rip),%rsi
	movq %rsi,-24(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq %rax,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-32(%rbp)
	movq %rdx,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Float.atan2_entry
_c3dl9:
	movq $32,904(%r13)
_c3dl6:
	jmp *-16(%r13)
	.size sat_s3aOP_entry, .-sat_s3aOP_entry


==================== Asm code ====================
2018-03-16 15:57:52.590438115 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aOP_info:
	.quad	sat_s3aOP_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 15:57:52.591142058 UTC

.section .text
.align 8
sat_s3aOS_entry:
_c3dlj:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dlk
_c3dll:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Float.rationalToDouble5_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c3dlk:
	jmp *-16(%r13)
	.size sat_s3aOS_entry, .-sat_s3aOS_entry


==================== Asm code ====================
2018-03-16 15:57:52.591879568 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aOS_info:
	.quad	sat_s3aOS_entry
	.quad	1
	.quad	4294967312
	.quad	S3bQP_srt+416


==================== Asm code ====================
2018-03-16 15:57:52.592581238 UTC

.section .text
.align 8
sat_s3aOU_entry:
_c3dlz:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dlA
_c3dlB:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.negate_entry@gotpcrel(%rip)
_c3dlA:
	jmp *-16(%r13)
	.size sat_s3aOU_entry, .-sat_s3aOU_entry


==================== Asm code ====================
2018-03-16 15:57:52.593229261 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aOU_info:
	.quad	sat_s3aOU_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:52.59412255 UTC

.section .text
.align 8
sat_s3aOV_entry:
_c3dlC:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dlD
_c3dlE:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c3dlG
_c3dlF:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rbx
	leaq sat_s3aOU_info(%rip),%rsi
	movq %rsi,-24(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	movq %rax,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-32(%rbp)
	movq %rdx,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Float.atan2_entry
_c3dlG:
	movq $32,904(%r13)
_c3dlD:
	jmp *-16(%r13)
	.size sat_s3aOV_entry, .-sat_s3aOV_entry


==================== Asm code ====================
2018-03-16 15:57:52.594828447 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aOV_info:
	.quad	sat_s3aOV_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 15:57:52.59556924 UTC

.section .text
.align 8
sat_s3aOY_entry:
_c3dlQ:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dlR
_c3dlS:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Float.rationalToDouble5_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c3dlR:
	jmp *-16(%r13)
	.size sat_s3aOY_entry, .-sat_s3aOY_entry


==================== Asm code ====================
2018-03-16 15:57:52.596224309 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aOY_info:
	.quad	sat_s3aOY_entry
	.quad	1
	.quad	4294967312
	.quad	S3bQP_srt+416


==================== Asm code ====================
2018-03-16 15:57:52.59698566 UTC

.section .text
.align 8
sat_s3aP2_entry:
_c3dm8:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dm9
_c3dma:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3dm6_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%r14
	movq 16(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Real.$p2RealFrac_entry@gotpcrel(%rip)
_c3dm9:
	jmp *-16(%r13)
	.size sat_s3aP2_entry, .-sat_s3aP2_entry


==================== Asm code ====================
2018-03-16 15:57:52.597837533 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aP2_info:
	.quad	sat_s3aP2_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:57:52.598460573 UTC

.section .text
.align 8
_c3dm6:
_c3dm6:
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,(%rbp)
	jmp *GHC.Real./_entry@gotpcrel(%rip)
	.size _c3dm6, .-_c3dm6


==================== Asm code ====================
2018-03-16 15:57:52.59903234 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dm6_info:
	.quad	_c3dm6
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.599823415 UTC

.section .text
.align 8
sat_s3aP3_entry:
_c3dme:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dmf
_c3dmg:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c3dmi
_c3dmh:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rbx
	leaq sat_s3aP2_info(%rip),%rsi
	movq %rsi,-32(%r12)
	movq %rax,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rdx,(%r12)
	movq %rbx,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq -32(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Float.atan_entry
_c3dmi:
	movq $40,904(%r13)
_c3dmf:
	jmp *-16(%r13)
	.size sat_s3aP3_entry, .-sat_s3aP3_entry


==================== Asm code ====================
2018-03-16 15:57:52.600540475 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aP3_info:
	.quad	sat_s3aP3_entry
	.quad	4
	.quad	15


==================== Asm code ====================
2018-03-16 15:57:52.601204056 UTC

.section .text
.align 8
sat_s3aP0_entry:
_c3dmn:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dmo
_c3dmp:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Float.pi_entry
_c3dmo:
	jmp *-16(%r13)
	.size sat_s3aP0_entry, .-sat_s3aP0_entry


==================== Asm code ====================
2018-03-16 15:57:52.601861281 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aP0_info:
	.quad	sat_s3aP0_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:52.602607639 UTC

.section .text
.align 8
sat_s3aP6_entry:
_c3dmz:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dmA
_c3dmB:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Float.rationalToDouble5_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c3dmA:
	jmp *-16(%r13)
	.size sat_s3aP6_entry, .-sat_s3aP6_entry


==================== Asm code ====================
2018-03-16 15:57:52.60329822 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aP6_info:
	.quad	sat_s3aP6_entry
	.quad	1
	.quad	4294967312
	.quad	S3bQP_srt+416


==================== Asm code ====================
2018-03-16 15:57:52.604020568 UTC

.section .text
.align 8
sat_s3aPa_entry:
_c3dmL:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dmM
_c3dmN:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Float.$fRealFloatDouble5_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c3dmM:
	jmp *-16(%r13)
	.size sat_s3aPa_entry, .-sat_s3aPa_entry


==================== Asm code ====================
2018-03-16 15:57:52.604635048 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aPa_info:
	.quad	sat_s3aPa_entry
	.quad	1
	.quad	4294967312
	.quad	S3bQP_srt+552


==================== Asm code ====================
2018-03-16 15:57:52.605343591 UTC

.section .text
.align 8
sat_s3aP9_entry:
_c3dmS:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dmT
_c3dmU:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Float.pi_entry
_c3dmT:
	jmp *-16(%r13)
	.size sat_s3aP9_entry, .-sat_s3aP9_entry


==================== Asm code ====================
2018-03-16 15:57:52.606023324 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aP9_info:
	.quad	sat_s3aP9_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:52.606858258 UTC

.section .text
.align 8
sat_s3aPc_entry:
_c3dn3:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dn4
_c3dn5:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3dn1_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%r14
	movq 16(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Real.$p2RealFrac_entry@gotpcrel(%rip)
_c3dn4:
	jmp *-16(%r13)
	.size sat_s3aPc_entry, .-sat_s3aPc_entry


==================== Asm code ====================
2018-03-16 15:57:52.60753014 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aPc_info:
	.quad	sat_s3aPc_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:57:52.608153415 UTC

.section .text
.align 8
_c3dn1:
_c3dn1:
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,(%rbp)
	jmp *GHC.Real./_entry@gotpcrel(%rip)
	.size _c3dn1, .-_c3dn1


==================== Asm code ====================
2018-03-16 15:57:52.609696159 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dn1_info:
	.quad	_c3dn1
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.610559895 UTC

.section .text
.align 8
.globl GHC.Float.$dmatan2_entry
.type GHC.Float.$dmatan2_entry, @object
GHC.Float.$dmatan2_entry:
_c3dn9:
	leaq -96(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dna
_c3dnb:
	leaq block_c3di7_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %r14,%rax
	movq %rax,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-32,%rbp
	jmp GHC.Float.$p1RealFloat_entry
_c3dna:
	leaq GHC.Float.$dmatan2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$dmatan2_entry, .-GHC.Float.$dmatan2_entry


==================== Asm code ====================
2018-03-16 15:57:52.61124441 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$dmatan2_info
.type GHC.Float.$dmatan2_info, @object
GHC.Float.$dmatan2_info:
	.quad	GHC.Float.$dmatan2_entry
	.quad	0
	.quad	1688854155231246
	.quad	12884901911
	.quad	S3bQP_srt+416


==================== Asm code ====================
2018-03-16 15:57:52.611892837 UTC

.section .text
.align 8
_c3di7:
_c3di7:
	leaq block_c3dib_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Real.$p1RealFrac_entry@gotpcrel(%rip)
	.size _c3di7, .-_c3di7


==================== Asm code ====================
2018-03-16 15:57:52.612515051 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3di7_info:
	.quad	_c3di7
	.quad	3
	.quad	562954248388638
	.quad	S3bQP_srt+416


==================== Asm code ====================
2018-03-16 15:57:52.6132915 UTC

.section .text
.align 8
_c3dib:
_c3dib:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3dnf
_c3dne:
	leaq $dNum_s3aOm_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,(%r12)
	leaq block_c3dim_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%r14
	leaq -16(%r12),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Real.$p2Real_entry@gotpcrel(%rip)
_c3dnf:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3dib, .-_c3dib


==================== Asm code ====================
2018-03-16 15:57:52.613928579 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dib_info:
	.quad	_c3dib
	.quad	4
	.quad	562954248388638
	.quad	S3bQP_srt+416


==================== Asm code ====================
2018-03-16 15:57:52.614738366 UTC

.section .text
.align 8
_c3dim:
_c3dim:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c3dni
_c3dnh:
	leaq $dFloating_s3aOo_info(%rip),%rax
	movq %rax,-40(%r12)
	movq 24(%rbp),%rax
	movq %rax,-24(%r12)
	leaq sat_s3aOp_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq block_c3diE_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 40(%rbp),%rax
	movq %rax,-32(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-24(%rbp)
	movq %rbx,-8(%rbp)
	leaq -40(%r12),%rax
	movq %rax,(%rbp)
	addq $-40,%rbp
	jmp *GHC.Classes.>_entry@gotpcrel(%rip)
_c3dni:
	movq $48,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3dim, .-_c3dim


==================== Asm code ====================
2018-03-16 15:57:52.615496148 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dim_info:
	.quad	_c3dim
	.quad	5
	.quad	562954248388638
	.quad	S3bQP_srt+416


==================== Asm code ====================
2018-03-16 15:57:52.616327165 UTC

.section .text
.align 8
_c3diE:
_c3diE:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c3dnl
_c3dpL:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c3dpO
_c3dpN:
	leaq sat_s3aPc_info(%rip),%rax
	movq %rax,-32(%r12)
	movq 48(%rbp),%rax
	movq %rax,-16(%r12)
	movq 56(%rbp),%rax
	movq %rax,-8(%r12)
	movq 32(%rbp),%rax
	movq %rax,(%r12)
	movq 16(%rbp),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,48(%rbp)
	leaq -32(%r12),%rax
	movq %rax,56(%rbp)
	addq $48,%rbp
	jmp GHC.Float.atan_entry
_c3dpO:
	movq $40,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c3dnl:
	leaq block_c3diI_info(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%r14
	jmp *GHC.Classes.$p1Ord_entry@gotpcrel(%rip)
	.size _c3diE, .-_c3diE


==================== Asm code ====================
2018-03-16 15:57:52.617078205 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3diE_info:
	.quad	_c3diE
	.quad	7
	.quad	562954248388638
	.quad	S3bQP_srt+416


==================== Asm code ====================
2018-03-16 15:57:52.617866629 UTC

.section .text
.align 8
_c3diI:
_c3diI:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3dno
_c3dnn:
	leaq sat_s3aP4_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 24(%rbp),%rax
	movq %rax,(%r12)
	leaq block_c3dmq_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 56(%rbp),%rax
	movq %rax,-24(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-16(%rbp)
	movq %rbx,(%rbp)
	addq $-32,%rbp
	jmp *GHC.Classes.==_entry@gotpcrel(%rip)
_c3dno:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3diI, .-_c3diI


==================== Asm code ====================
2018-03-16 15:57:52.618592281 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3diI_info:
	.quad	_c3diI
	.quad	7
	.quad	562954248388638
	.quad	S3bQP_srt+416


==================== Asm code ====================
2018-03-16 15:57:52.619414873 UTC

.section .text
.align 8
_c3dmq:
_c3dmq:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c3diW
_c3dpu:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3dpx
_c3dpw:
	leaq sat_s3aP6_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 32(%rbp),%rax
	movq %rax,(%r12)
	leaq block_c3dmC_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq 56(%rbp),%rax
	movq %rax,-16(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.Classes.>_entry@gotpcrel(%rip)
_c3dpx:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3dmq, .-_c3dmq


==================== Asm code ====================
2018-03-16 15:57:52.620149128 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dmq_info:
	.quad	_c3dmq
	.quad	8
	.quad	562954248388638
	.quad	S3bQP_srt+416


==================== Asm code ====================
2018-03-16 15:57:52.620962271 UTC

.section .text
.align 8
_c3dmC:
_c3dmC:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c3diW
_c3dpD:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c3dpG
_c3dpF:
	leaq sat_s3aPa_info(%rip),%rax
	movq %rax,-40(%r12)
	movq 32(%rbp),%rax
	movq %rax,-24(%r12)
	leaq sat_s3aP9_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 24(%rbp),%rax
	movq %rax,(%r12)
	leaq block_c3dpC_info(%rip),%rax
	movq %rax,48(%rbp)
	movq 40(%rbp),%r14
	leaq -16(%r12),%rax
	movq %rax,56(%rbp)
	leaq -40(%r12),%rax
	movq %rax,64(%rbp)
	addq $48,%rbp
	jmp *GHC.Real.$p2RealFrac_entry@gotpcrel(%rip)
_c3dpG:
	movq $48,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3dmC, .-_c3dmC


==================== Asm code ====================
2018-03-16 15:57:52.621768308 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dmC_info:
	.quad	_c3dmC
	.quad	8
	.quad	562954248388638
	.quad	S3bQP_srt+416


==================== Asm code ====================
2018-03-16 15:57:52.622584621 UTC

.section .text
.align 8
_c3diW:
_c3diW:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3dnr
_c3dnq:
	leaq sat_s3aOW_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 32(%rbp),%rax
	movq %rax,(%r12)
	leaq block_c3dlH_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq 64(%rbp),%rax
	movq %rax,-16(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.Classes.<_entry@gotpcrel(%rip)
_c3dnr:
	movq $24,904(%r13)
	leaq block_c3diW_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c3diW, .-_c3diW


==================== Asm code ====================
2018-03-16 15:57:52.623311704 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3diW_info:
	.quad	_c3diW
	.quad	8
	.quad	4294967326
	.quad	S3bQP_srt+416


==================== Asm code ====================
2018-03-16 15:57:52.624143458 UTC

.section .text
.align 8
_c3dlH:
_c3dlH:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c3dj8
_c3dpe:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3dph
_c3dpg:
	leaq sat_s3aOY_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 32(%rbp),%rax
	movq %rax,(%r12)
	leaq block_c3dlT_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq 56(%rbp),%rax
	movq %rax,-16(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.Classes.>_entry@gotpcrel(%rip)
_c3dph:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3dlH, .-_c3dlH


==================== Asm code ====================
2018-03-16 15:57:52.624858303 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dlH_info:
	.quad	_c3dlH
	.quad	8
	.quad	4294967326
	.quad	S3bQP_srt+416


==================== Asm code ====================
2018-03-16 15:57:52.626097681 UTC

.section .text
.align 8
_c3dlT:
_c3dlT:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c3dj8
_c3dpm:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c3dpp
_c3dpo:
	leaq sat_s3aP3_info(%rip),%rax
	movq %rax,-64(%r12)
	movq 56(%rbp),%rax
	movq %rax,-48(%r12)
	movq 64(%rbp),%rax
	movq %rax,-40(%r12)
	movq 40(%rbp),%rax
	movq %rax,-32(%r12)
	movq 24(%rbp),%rax
	movq %rax,-24(%r12)
	leaq sat_s3aP0_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,(%r12)
	movq 32(%rbp),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,48(%rbp)
	leaq -16(%r12),%rax
	movq %rax,56(%rbp)
	leaq -64(%r12),%rax
	movq %rax,64(%rbp)
	addq $48,%rbp
	jmp *GHC.Num.+_entry@gotpcrel(%rip)
_c3dpp:
	movq $72,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3dlT, .-_c3dlT


==================== Asm code ====================
2018-03-16 15:57:52.626888387 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dlT_info:
	.quad	_c3dlT
	.quad	8
	.quad	4294967326
	.quad	S3bQP_srt+416


==================== Asm code ====================
2018-03-16 15:57:52.627666069 UTC

.section .text
.align 8
_c3dj8:
_c3dj8:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3dnu
_c3dnt:
	leaq sat_s3aOQ_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 32(%rbp),%rax
	movq %rax,(%r12)
	leaq block_c3dla_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq 64(%rbp),%rax
	movq %rax,-16(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.Classes.<=_entry@gotpcrel(%rip)
_c3dnu:
	movq $24,904(%r13)
	leaq block_c3dj8_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c3dj8, .-_c3dj8


==================== Asm code ====================
2018-03-16 15:57:52.628404399 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dj8_info:
	.quad	_c3dj8
	.quad	1032
	.quad	4294967326
	.quad	S3bQP_srt+416


==================== Asm code ====================
2018-03-16 15:57:52.629302181 UTC

.section .text
.align 8
_c3dla:
_c3dla:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c3djk
_c3doY:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3dp1
_c3dp0:
	leaq sat_s3aOS_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 32(%rbp),%rax
	movq %rax,(%r12)
	leaq block_c3dlm_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq 56(%rbp),%rax
	movq %rax,-16(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.Classes.<_entry@gotpcrel(%rip)
_c3dp1:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3dla, .-_c3dla


==================== Asm code ====================
2018-03-16 15:57:52.629994353 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dla_info:
	.quad	_c3dla
	.quad	1032
	.quad	4294967326
	.quad	S3bQP_srt+416


==================== Asm code ====================
2018-03-16 15:57:52.630867842 UTC

.section .text
.align 8
_c3dlm:
_c3dlm:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c3djk
_c3dp6:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c3dp9
_c3dp8:
	leaq sat_s3aOV_info(%rip),%rax
	movq %rax,-40(%r12)
	movq 48(%rbp),%rax
	movq %rax,-24(%r12)
	movq 56(%rbp),%rax
	movq %rax,-16(%r12)
	movq 64(%rbp),%rax
	movq %rax,-8(%r12)
	movq 32(%rbp),%rax
	movq %rax,(%r12)
	movq %rax,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,56(%rbp)
	leaq -40(%r12),%rax
	movq %rax,64(%rbp)
	addq $56,%rbp
	jmp *GHC.Num.negate_entry@gotpcrel(%rip)
_c3dp9:
	movq $48,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3dlm, .-_c3dlm


==================== Asm code ====================
2018-03-16 15:57:52.631586469 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dlm_info:
	.quad	_c3dlm
	.quad	1032
	.quad	4294967326
	.quad	S3bQP_srt+416


==================== Asm code ====================
2018-03-16 15:57:52.632352568 UTC

.section .text
.align 8
_c3djk:
_c3djk:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3dnx
_c3dnw:
	leaq sat_s3aOL_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 32(%rbp),%rax
	movq %rax,(%r12)
	leaq block_c3dkK_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq 64(%rbp),%rax
	movq %rax,-16(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.Classes.<_entry@gotpcrel(%rip)
_c3dnx:
	movq $24,904(%r13)
	leaq block_c3djk_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c3djk, .-_c3djk


==================== Asm code ====================
2018-03-16 15:57:52.633034428 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3djk_info:
	.quad	_c3djk
	.quad	1032
	.quad	4294967326
	.quad	S3bQP_srt+416


==================== Asm code ====================
2018-03-16 15:57:52.633839881 UTC

.section .text
.align 8
_c3dkK:
_c3dkK:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u3dq5
_c3doL:
	leaq block_c3dkP_info(%rip),%rax
	movq %rax,(%rbp)
	movq 48(%rbp),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq 56(%rbp),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Float.isNegativeZero_entry
_u3dq5:
	addq $8,%rbp
	jmp _s3aOv
	.size _c3dkK, .-_c3dkK


==================== Asm code ====================
2018-03-16 15:57:52.63453139 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dkK_info:
	.quad	_c3dkK
	.quad	1032
	.quad	4294967326
	.quad	S3bQP_srt+416


==================== Asm code ====================
2018-03-16 15:57:52.635404039 UTC

.section .text
.align 8
_c3dkP:
_c3dkP:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _u3dq6
_c3doQ:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c3doT
_c3doS:
	leaq sat_s3aOP_info(%rip),%rax
	movq %rax,-40(%r12)
	movq 48(%rbp),%rax
	movq %rax,-24(%r12)
	movq 56(%rbp),%rax
	movq %rax,-16(%r12)
	movq 64(%rbp),%rax
	movq %rax,-8(%r12)
	movq 32(%rbp),%rax
	movq %rax,(%r12)
	movq %rax,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,56(%rbp)
	leaq -40(%r12),%rax
	movq %rax,64(%rbp)
	addq $56,%rbp
	jmp *GHC.Num.negate_entry@gotpcrel(%rip)
_u3dq6:
	addq $8,%rbp
	jmp _s3aOv
_c3doT:
	movq $48,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3dkP, .-_c3dkP


==================== Asm code ====================
2018-03-16 15:57:52.636153126 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dkP_info:
	.quad	_c3dkP
	.quad	1032
	.quad	4294967326
	.quad	S3bQP_srt+416


==================== Asm code ====================
2018-03-16 15:57:52.63684336 UTC

.section .text
.align 8
_s3aOv:
_s3aOv:
	leaq block_c3dkk_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 40(%rbp),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq 56(%rbp),%rax
	movq %rax,-16(%rbp)
	addq $-24,%rbp
	jmp GHC.Float.isNegativeZero_entry
	.size _s3aOv, .-_s3aOv


==================== Asm code ====================
2018-03-16 15:57:52.637652884 UTC

.section .text
.align 8
_c3dkk:
_c3dkk:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c3djB
_c3dox:
	leaq block_c3dkp_info(%rip),%rax
	movq %rax,(%rbp)
	movq 48(%rbp),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq 56(%rbp),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Float.isNegativeZero_entry
	.size _c3dkk, .-_c3dkk


==================== Asm code ====================
2018-03-16 15:57:52.638291483 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dkk_info:
	.quad	_c3dkk
	.quad	1032
	.quad	4294967326
	.quad	S3bQP_srt+416


==================== Asm code ====================
2018-03-16 15:57:52.639107077 UTC

.section .text
.align 8
_c3dkp:
_c3dkp:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c3djB
_c3doC:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c3doF
_c3doE:
	leaq sat_s3aOK_info(%rip),%rax
	movq %rax,-40(%r12)
	movq 48(%rbp),%rax
	movq %rax,-24(%r12)
	movq 56(%rbp),%rax
	movq %rax,-16(%r12)
	movq 64(%rbp),%rax
	movq %rax,-8(%r12)
	movq 32(%rbp),%rax
	movq %rax,(%r12)
	movq %rax,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,56(%rbp)
	leaq -40(%r12),%rax
	movq %rax,64(%rbp)
	addq $56,%rbp
	jmp *GHC.Num.negate_entry@gotpcrel(%rip)
_c3doF:
	movq $48,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3dkp, .-_c3dkp


==================== Asm code ====================
2018-03-16 15:57:52.639867138 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dkp_info:
	.quad	_c3dkp
	.quad	1032
	.quad	4294967326
	.quad	S3bQP_srt+416


==================== Asm code ====================
2018-03-16 15:57:52.64067288 UTC

.section .text
.align 8
_c3djB:
_c3djB:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3dnB
_c3dnA:
	leaq sat_s3aOC_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 32(%rbp),%rax
	movq %rax,(%r12)
	leaq block_c3dk8_info(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq 56(%rbp),%rax
	movq %rax,-16(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.Classes.==_entry@gotpcrel(%rip)
_c3dnB:
	movq $24,904(%r13)
	leaq block_c3djB_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c3djB, .-_c3djB


==================== Asm code ====================
2018-03-16 15:57:52.641796199 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3djB_info:
	.quad	_c3djB
	.quad	1032
	.quad	4294967326
	.quad	S3bQP_srt+416


==================== Asm code ====================
2018-03-16 15:57:52.642602245 UTC

.section .text
.align 8
_c3dk8:
_c3dk8:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c3djN
_c3do3:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3do6
_c3do5:
	leaq sat_s3aOE_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 32(%rbp),%rax
	movq %rax,(%r12)
	leaq block_c3do2_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq 64(%rbp),%rax
	movq %rax,-16(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.Classes.<_entry@gotpcrel(%rip)
_c3do6:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3dk8, .-_c3dk8


==================== Asm code ====================
2018-03-16 15:57:52.643850021 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dk8_info:
	.quad	_c3dk8
	.quad	1032
	.quad	4294967326
	.quad	S3bQP_srt+416


==================== Asm code ====================
2018-03-16 15:57:52.644687663 UTC

.section .text
.align 8
_c3do2:
_c3do2:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c3dod
_u3dq7:
	addq $24,%rbp
	jmp _c3dor
_c3dod:
	leaq block_c3doa_info(%rip),%rax
	movq %rax,(%rbp)
	movq 48(%rbp),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq 64(%rbp),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Float.isNegativeZero_entry
	.size _c3do2, .-_c3do2


==================== Asm code ====================
2018-03-16 15:57:52.645420446 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3do2_info:
	.quad	_c3do2
	.quad	1160
	.quad	4294967326
	.quad	S3bQP_srt+416


==================== Asm code ====================
2018-03-16 15:57:52.646083902 UTC

.section .text
.align 8
_c3doa:
_c3doa:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c3djN
_u3dq8:
	addq $24,%rbp
	jmp _c3dor
	.size _c3doa, .-_c3doa


==================== Asm code ====================
2018-03-16 15:57:52.646692615 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3doa_info:
	.quad	_c3doa
	.quad	3208
	.quad	4294967326
	.quad	S3bQP_srt+416


==================== Asm code ====================
2018-03-16 15:57:52.647462472 UTC

.section .text
.align 8
_c3djN:
_c3djN:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3dnE
_c3dnD:
	leaq sat_s3aOy_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 32(%rbp),%rax
	movq %rax,(%r12)
	leaq block_c3djW_info(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq 64(%rbp),%rax
	movq %rax,-16(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.Classes.==_entry@gotpcrel(%rip)
_c3dnE:
	movq $24,904(%r13)
	leaq block_c3djN_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c3djN, .-_c3djN


==================== Asm code ====================
2018-03-16 15:57:52.648117607 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3djN_info:
	.quad	_c3djN
	.quad	3464
	.quad	4294967326
	.quad	S3bQP_srt+416


==================== Asm code ====================
2018-03-16 15:57:52.648946092 UTC

.section .text
.align 8
_c3djW:
_c3djW:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _u3dq9
_c3dnK:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3dnN
_c3dnM:
	leaq sat_s3aOA_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 32(%rbp),%rax
	movq %rax,(%r12)
	leaq block_c3dnJ_info(%rip),%rax
	movq %rax,24(%rbp)
	movq 8(%rbp),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,(%rbp)
	movq 56(%rbp),%rax
	movq %rax,8(%rbp)
	leaq -16(%r12),%rax
	movq %rax,16(%rbp)
	jmp *GHC.Classes.==_entry@gotpcrel(%rip)
_u3dq9:
	addq $32,%rbp
	jmp _c3dnT
_c3dnN:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3djW, .-_c3djW


==================== Asm code ====================
2018-03-16 15:57:52.64970921 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3djW_info:
	.quad	_c3djW
	.quad	3464
	.quad	4294967326
	.quad	S3bQP_srt+416


==================== Asm code ====================
2018-03-16 15:57:52.650373917 UTC

.section .text
.align 8
_c3dnJ:
_c3dnJ:
	andl $7,%ebx
	cmpq $1,%rbx
	je _u3dqa
_c3dnX:
	movq 32(%rbp),%rbx
	addq $48,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_u3dqa:
	addq $8,%rbp
	jmp _c3dnT
	.size _c3dnJ, .-_c3dnJ


==================== Asm code ====================
2018-03-16 15:57:52.650975364 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dnJ_info:
	.quad	_c3dnJ
	.quad	389
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.651622697 UTC

.section .text
.align 8
_c3dnT:
_c3dnT:
	movq (%rbp),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,16(%rbp)
	movq 24(%rbp),%rax
	movq 32(%rbp),%rbx
	movq %rbx,24(%rbp)
	movq %rax,32(%rbp)
	addq $16,%rbp
	jmp *GHC.Num.+_entry@gotpcrel(%rip)
	.size _c3dnT, .-_c3dnT


==================== Asm code ====================
2018-03-16 15:57:52.652316591 UTC

.section .text
.align 8
_c3dor:
_c3dor:
	movq (%rbp),%r14
	addq $48,%rbp
	jmp GHC.Float.pi_entry
	.size _c3dor, .-_c3dor


==================== Asm code ====================
2018-03-16 15:57:52.65296932 UTC

.section .text
.align 8
_c3dpC:
_c3dpC:
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,(%rbp)
	jmp *GHC.Real./_entry@gotpcrel(%rip)
	.size _c3dpC, .-_c3dpC


==================== Asm code ====================
2018-03-16 15:57:52.653834981 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dpC_info:
	.quad	_c3dpC
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.658679393 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$dmlog1mexp_closure
.type GHC.Float.$dmlog1mexp_closure, @object
GHC.Float.$dmlog1mexp_closure:
	.quad	GHC.Float.$dmlog1mexp_info


==================== Asm code ====================
2018-03-16 15:57:52.659514152 UTC

.section .text
.align 8
sat_s3aPh_entry:
_c3dxS:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dxT
_c3dxU:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Float.exp_entry
_c3dxT:
	jmp *-16(%r13)
	.size sat_s3aPh_entry, .-sat_s3aPh_entry


==================== Asm code ====================
2018-03-16 15:57:52.660173545 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aPh_info:
	.quad	sat_s3aPh_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:52.661040832 UTC

.section .text
.align 8
sat_s3aPi_entry:
_c3dxX:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dy1
_c3dy2:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c3dy4
_c3dy3:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	leaq sat_s3aPh_info(%rip),%rcx
	movq %rcx,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq block_c3dxV_info(%rip),%rbx
	movq %rbx,-32(%rbp)
	movq %rax,%r14
	leaq -24(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Float.$p1Floating_entry
_c3dy4:
	movq $32,904(%r13)
_c3dy1:
	jmp *-16(%r13)
	.size sat_s3aPi_entry, .-sat_s3aPi_entry


==================== Asm code ====================
2018-03-16 15:57:52.661813424 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aPi_info:
	.quad	sat_s3aPi_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:52.662422443 UTC

.section .text
.align 8
_c3dxV:
_c3dxV:
	leaq block_c3dy0_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp *GHC.Real.$p1Fractional_entry@gotpcrel(%rip)
	.size _c3dxV, .-_c3dxV


==================== Asm code ====================
2018-03-16 15:57:52.662989845 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dxV_info:
	.quad	_c3dxV
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.663615788 UTC

.section .text
.align 8
_c3dy0:
_c3dy0:
	movq %rbx,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,(%rbp)
	jmp *GHC.Num.negate_entry@gotpcrel(%rip)
	.size _c3dy0, .-_c3dy0


==================== Asm code ====================
2018-03-16 15:57:52.664231397 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dy0_info:
	.quad	_c3dy0
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.665051462 UTC

.section .text
.align 8
.globl GHC.Float.$dmlog1mexp_entry
.type GHC.Float.$dmlog1mexp_entry, @object
GHC.Float.$dmlog1mexp_entry:
_c3dya:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dyb
_c3dyc:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c3dye
_c3dyd:
	leaq sat_s3aPi_info(%rip),%rax
	movq %rax,-24(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Float.log1p_entry
_c3dye:
	movq $32,904(%r13)
_c3dyb:
	leaq GHC.Float.$dmlog1mexp_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$dmlog1mexp_entry, .-GHC.Float.$dmlog1mexp_entry


==================== Asm code ====================
2018-03-16 15:57:52.665806187 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$dmlog1mexp_info
.type GHC.Float.$dmlog1mexp_info, @object
GHC.Float.$dmlog1mexp_info:
	.quad	GHC.Float.$dmlog1mexp_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:52.669144303 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$dmlog1pexp_closure
.type GHC.Float.$dmlog1pexp_closure, @object
GHC.Float.$dmlog1pexp_closure:
	.quad	GHC.Float.$dmlog1pexp_info


==================== Asm code ====================
2018-03-16 15:57:52.670382722 UTC

.section .text
.align 8
sat_s3aPl_entry:
_c3dyS:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dyT
_c3dyU:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Float.exp_entry
_c3dyT:
	jmp *-16(%r13)
	.size sat_s3aPl_entry, .-sat_s3aPl_entry


==================== Asm code ====================
2018-03-16 15:57:52.671051645 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aPl_info:
	.quad	sat_s3aPl_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:52.671886862 UTC

.section .text
.align 8
.globl GHC.Float.$dmlog1pexp_entry
.type GHC.Float.$dmlog1pexp_entry, @object
GHC.Float.$dmlog1pexp_entry:
_c3dyV:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dyW
_c3dyX:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c3dyZ
_c3dyY:
	leaq sat_s3aPl_info(%rip),%rax
	movq %rax,-24(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Float.log1p_entry
_c3dyZ:
	movq $32,904(%r13)
_c3dyW:
	leaq GHC.Float.$dmlog1pexp_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$dmlog1pexp_entry, .-GHC.Float.$dmlog1pexp_entry


==================== Asm code ====================
2018-03-16 15:57:52.672585622 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$dmlog1pexp_info
.type GHC.Float.$dmlog1pexp_info, @object
GHC.Float.$dmlog1pexp_info:
	.quad	GHC.Float.$dmlog1pexp_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:52.67742938 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$dmexpm1_closure
.type GHC.Float.$dmexpm1_closure, @object
GHC.Float.$dmexpm1_closure:
	.quad	GHC.Float.$dmexpm1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:52.678279122 UTC

.section .text
.align 8
sat_s3aPr_entry:
_c3dzv:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dzw
_c3dzx:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Float.$fRealDouble1_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c3dzw:
	jmp *-16(%r13)
	.size sat_s3aPr_entry, .-sat_s3aPr_entry


==================== Asm code ====================
2018-03-16 15:57:52.678953227 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aPr_info:
	.quad	sat_s3aPr_entry
	.quad	1
	.quad	4294967312
	.quad	S3bQP_srt+312


==================== Asm code ====================
2018-03-16 15:57:52.679738144 UTC

.section .text
.align 8
sat_s3aPq_entry:
_c3dzC:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dzD
_c3dzE:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Float.exp_entry
_c3dzD:
	jmp *-16(%r13)
	.size sat_s3aPq_entry, .-sat_s3aPq_entry


==================== Asm code ====================
2018-03-16 15:57:52.680344306 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aPq_info:
	.quad	sat_s3aPq_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:52.681107164 UTC

.section .text
.align 8
.globl GHC.Float.$dmexpm1_entry
.type GHC.Float.$dmexpm1_entry, @object
GHC.Float.$dmexpm1_entry:
_c3dzF:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dzG
_c3dzH:
	leaq block_c3dzj_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %r14,%rax
	movq %rax,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Float.$p1Floating_entry
_c3dzG:
	leaq GHC.Float.$dmexpm1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$dmexpm1_entry, .-GHC.Float.$dmexpm1_entry


==================== Asm code ====================
2018-03-16 15:57:52.682424923 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$dmexpm1_info
.type GHC.Float.$dmexpm1_info, @object
GHC.Float.$dmexpm1_info:
	.quad	GHC.Float.$dmexpm1_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S3bQP_srt+568


==================== Asm code ====================
2018-03-16 15:57:52.683170372 UTC

.section .text
.align 8
_c3dzj:
_c3dzj:
	leaq block_c3dzn_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp *GHC.Real.$p1Fractional_entry@gotpcrel(%rip)
	.size _c3dzj, .-_c3dzj


==================== Asm code ====================
2018-03-16 15:57:52.683751504 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dzj_info:
	.quad	_c3dzj
	.quad	2
	.quad	4294967326
	.quad	S3bQP_srt+576


==================== Asm code ====================
2018-03-16 15:57:52.684492594 UTC

.section .text
.align 8
_c3dzn:
_c3dzn:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c3dzL
_c3dzK:
	leaq sat_s3aPr_info(%rip),%rax
	movq %rax,-48(%r12)
	movq %rbx,-32(%r12)
	leaq sat_s3aPq_info(%rip),%rax
	movq %rax,-24(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,(%rbp)
	leaq -24(%r12),%rax
	movq %rax,8(%rbp)
	leaq -48(%r12),%rax
	movq %rax,16(%rbp)
	jmp *GHC.Num.-_entry@gotpcrel(%rip)
_c3dzL:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3dzn, .-_c3dzn


==================== Asm code ====================
2018-03-16 15:57:52.685178912 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dzn_info:
	.quad	_c3dzn
	.quad	2
	.quad	4294967326
	.quad	S3bQP_srt+576


==================== Asm code ====================
2018-03-16 15:57:52.690306985 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$dmlog1p_closure
.type GHC.Float.$dmlog1p_closure, @object
GHC.Float.$dmlog1p_closure:
	.quad	GHC.Float.$dmlog1p_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:52.691155022 UTC

.section .text
.align 8
sat_s3aPw_entry:
_c3dAE:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dAF
_c3dAG:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Float.$fRealDouble1_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c3dAF:
	jmp *-16(%r13)
	.size sat_s3aPw_entry, .-sat_s3aPw_entry


==================== Asm code ====================
2018-03-16 15:57:52.691853471 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aPw_info:
	.quad	sat_s3aPw_entry
	.quad	1
	.quad	4294967312
	.quad	S3bQP_srt+576


==================== Asm code ====================
2018-03-16 15:57:52.692561566 UTC

.section .text
.align 8
sat_s3aPx_entry:
_c3dAH:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dAI
_c3dAJ:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3dAs_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%r14
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Float.$p1Floating_entry
_c3dAI:
	jmp *-16(%r13)
	.size sat_s3aPx_entry, .-sat_s3aPx_entry


==================== Asm code ====================
2018-03-16 15:57:52.69322289 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aPx_info:
	.quad	sat_s3aPx_entry
	.quad	2
	.quad	4294967314
	.quad	S3bQP_srt+576


==================== Asm code ====================
2018-03-16 15:57:52.693936902 UTC

.section .text
.align 8
_c3dAs:
_c3dAs:
	leaq block_c3dAw_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp *GHC.Real.$p1Fractional_entry@gotpcrel(%rip)
	.size _c3dAs, .-_c3dAs


==================== Asm code ====================
2018-03-16 15:57:52.69454018 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dAs_info:
	.quad	_c3dAs
	.quad	1
	.quad	4294967326
	.quad	S3bQP_srt+576


==================== Asm code ====================
2018-03-16 15:57:52.695300163 UTC

.section .text
.align 8
_c3dAw:
_c3dAw:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3dAN
_c3dAM:
	leaq sat_s3aPw_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,(%r12)
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-8(%rbp)
	leaq -16(%r12),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Num.+_entry@gotpcrel(%rip)
_c3dAN:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3dAw, .-_c3dAw


==================== Asm code ====================
2018-03-16 15:57:52.696016493 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dAw_info:
	.quad	_c3dAw
	.quad	1
	.quad	4294967326
	.quad	S3bQP_srt+576


==================== Asm code ====================
2018-03-16 15:57:52.69682198 UTC

.section .text
.align 8
.globl GHC.Float.$dmlog1p_entry
.type GHC.Float.$dmlog1p_entry, @object
GHC.Float.$dmlog1p_entry:
_c3dAO:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dAP
_c3dAQ:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c3dAS
_c3dAR:
	leaq sat_s3aPx_info(%rip),%rax
	movq %rax,-24(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Float.log_entry
_c3dAS:
	movq $32,904(%r13)
_c3dAP:
	leaq GHC.Float.$dmlog1p_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$dmlog1p_entry, .-GHC.Float.$dmlog1p_entry


==================== Asm code ====================
2018-03-16 15:57:52.69790584 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$dmlog1p_info
.type GHC.Float.$dmlog1p_info, @object
GHC.Float.$dmlog1p_info:
	.quad	GHC.Float.$dmlog1p_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S3bQP_srt+576


==================== Asm code ====================
2018-03-16 15:57:52.702354994 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$dmtanh_closure
.type GHC.Float.$dmtanh_closure, @object
GHC.Float.$dmtanh_closure:
	.quad	GHC.Float.$dmtanh_info


==================== Asm code ====================
2018-03-16 15:57:52.703190893 UTC

.section .text
.align 8
sat_s3aPC_entry:
_c3dBx:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dBy
_c3dBz:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Float.cosh_entry
_c3dBy:
	jmp *-16(%r13)
	.size sat_s3aPC_entry, .-sat_s3aPC_entry


==================== Asm code ====================
2018-03-16 15:57:52.703848016 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aPC_info:
	.quad	sat_s3aPC_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:52.704577213 UTC

.section .text
.align 8
sat_s3aPB_entry:
_c3dBE:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dBF
_c3dBG:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Float.sinh_entry
_c3dBF:
	jmp *-16(%r13)
	.size sat_s3aPB_entry, .-sat_s3aPB_entry


==================== Asm code ====================
2018-03-16 15:57:52.705230183 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aPB_info:
	.quad	sat_s3aPB_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:52.706186247 UTC

.section .text
.align 8
.globl GHC.Float.$dmtanh_entry
.type GHC.Float.$dmtanh_entry, @object
GHC.Float.$dmtanh_entry:
_c3dBJ:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dBK
_c3dBL:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c3dBN
_c3dBM:
	leaq sat_s3aPC_info(%rip),%rax
	movq %rax,-56(%r12)
	movq %r14,-40(%r12)
	movq %rsi,-32(%r12)
	leaq sat_s3aPB_info(%rip),%rax
	movq %rax,-24(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq block_c3dBH_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq -56(%r12),%rax
	movq %rax,-16(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Float.$p1Floating_entry
_c3dBN:
	movq $64,904(%r13)
_c3dBK:
	leaq GHC.Float.$dmtanh_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$dmtanh_entry, .-GHC.Float.$dmtanh_entry


==================== Asm code ====================
2018-03-16 15:57:52.706927885 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$dmtanh_info
.type GHC.Float.$dmtanh_info, @object
GHC.Float.$dmtanh_info:
	.quad	GHC.Float.$dmtanh_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:52.707610595 UTC

.section .text
.align 8
_c3dBH:
_c3dBH:
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%rax
	movq 16(%rbp),%rbx
	movq %rbx,8(%rbp)
	movq %rax,16(%rbp)
	jmp *GHC.Real./_entry@gotpcrel(%rip)
	.size _c3dBH, .-_c3dBH


==================== Asm code ====================
2018-03-16 15:57:52.708226134 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dBH_info:
	.quad	_c3dBH
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.713071468 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$dmtan_closure
.type GHC.Float.$dmtan_closure, @object
GHC.Float.$dmtan_closure:
	.quad	GHC.Float.$dmtan_info


==================== Asm code ====================
2018-03-16 15:57:52.71394543 UTC

.section .text
.align 8
sat_s3aPH_entry:
_c3dCs:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dCt
_c3dCu:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Float.cos_entry
_c3dCt:
	jmp *-16(%r13)
	.size sat_s3aPH_entry, .-sat_s3aPH_entry


==================== Asm code ====================
2018-03-16 15:57:52.714576082 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aPH_info:
	.quad	sat_s3aPH_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:52.715277995 UTC

.section .text
.align 8
sat_s3aPG_entry:
_c3dCz:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dCA
_c3dCB:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Float.sin_entry
_c3dCA:
	jmp *-16(%r13)
	.size sat_s3aPG_entry, .-sat_s3aPG_entry


==================== Asm code ====================
2018-03-16 15:57:52.715921027 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aPG_info:
	.quad	sat_s3aPG_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:52.716744314 UTC

.section .text
.align 8
.globl GHC.Float.$dmtan_entry
.type GHC.Float.$dmtan_entry, @object
GHC.Float.$dmtan_entry:
_c3dCE:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dCF
_c3dCG:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c3dCI
_c3dCH:
	leaq sat_s3aPH_info(%rip),%rax
	movq %rax,-56(%r12)
	movq %r14,-40(%r12)
	movq %rsi,-32(%r12)
	leaq sat_s3aPG_info(%rip),%rax
	movq %rax,-24(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq block_c3dCC_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq -56(%r12),%rax
	movq %rax,-16(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Float.$p1Floating_entry
_c3dCI:
	movq $64,904(%r13)
_c3dCF:
	leaq GHC.Float.$dmtan_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$dmtan_entry, .-GHC.Float.$dmtan_entry


==================== Asm code ====================
2018-03-16 15:57:52.717552431 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$dmtan_info
.type GHC.Float.$dmtan_info, @object
GHC.Float.$dmtan_info:
	.quad	GHC.Float.$dmtan_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:52.718233997 UTC

.section .text
.align 8
_c3dCC:
_c3dCC:
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%rax
	movq 16(%rbp),%rbx
	movq %rbx,8(%rbp)
	movq %rax,16(%rbp)
	jmp *GHC.Real./_entry@gotpcrel(%rip)
	.size _c3dCC, .-_c3dCC


==================== Asm code ====================
2018-03-16 15:57:52.718871756 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dCC_info:
	.quad	_c3dCC
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.724069087 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$dmlogBase_closure
.type GHC.Float.$dmlogBase_closure, @object
GHC.Float.$dmlogBase_closure:
	.quad	GHC.Float.$dmlogBase_info


==================== Asm code ====================
2018-03-16 15:57:52.725054857 UTC

.section .text
.align 8
sat_s3aPN_entry:
_c3dDn:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dDo
_c3dDp:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Float.log_entry
_c3dDo:
	jmp *-16(%r13)
	.size sat_s3aPN_entry, .-sat_s3aPN_entry


==================== Asm code ====================
2018-03-16 15:57:52.725750137 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aPN_info:
	.quad	sat_s3aPN_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:52.726511814 UTC

.section .text
.align 8
sat_s3aPM_entry:
_c3dDu:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dDv
_c3dDw:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Float.log_entry
_c3dDv:
	jmp *-16(%r13)
	.size sat_s3aPM_entry, .-sat_s3aPM_entry


==================== Asm code ====================
2018-03-16 15:57:52.727136046 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aPM_info:
	.quad	sat_s3aPM_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:52.727999965 UTC

.section .text
.align 8
.globl GHC.Float.$dmlogBase_entry
.type GHC.Float.$dmlogBase_entry, @object
GHC.Float.$dmlogBase_entry:
_c3dDz:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dDA
_c3dDB:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c3dDD
_c3dDC:
	leaq sat_s3aPN_info(%rip),%rax
	movq %rax,-56(%r12)
	movq %r14,-40(%r12)
	movq %rsi,-32(%r12)
	leaq sat_s3aPM_info(%rip),%rax
	movq %rax,-24(%r12)
	movq %r14,-8(%r12)
	movq %rdi,(%r12)
	leaq block_c3dDx_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq -56(%r12),%rax
	movq %rax,-16(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Float.$p1Floating_entry
_c3dDD:
	movq $64,904(%r13)
_c3dDA:
	leaq GHC.Float.$dmlogBase_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$dmlogBase_entry, .-GHC.Float.$dmlogBase_entry


==================== Asm code ====================
2018-03-16 15:57:52.728691224 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$dmlogBase_info
.type GHC.Float.$dmlogBase_info, @object
GHC.Float.$dmlogBase_info:
	.quad	GHC.Float.$dmlogBase_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:57:52.729422567 UTC

.section .text
.align 8
_c3dDx:
_c3dDx:
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%rax
	movq 16(%rbp),%rbx
	movq %rbx,8(%rbp)
	movq %rax,16(%rbp)
	jmp *GHC.Real./_entry@gotpcrel(%rip)
	.size _c3dDx, .-_c3dDx


==================== Asm code ====================
2018-03-16 15:57:52.730083391 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dDx_info:
	.quad	_c3dDx
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.735191047 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$dm**_closure
.type GHC.Float.$dm**_closure, @object
GHC.Float.$dm**_closure:
	.quad	GHC.Float.$dm**_info


==================== Asm code ====================
2018-03-16 15:57:52.736056256 UTC

.section .text
.align 8
sat_s3aPT_entry:
_c3dEm:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dEn
_c3dEo:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Float.log_entry
_c3dEn:
	jmp *-16(%r13)
	.size sat_s3aPT_entry, .-sat_s3aPT_entry


==================== Asm code ====================
2018-03-16 15:57:52.736719927 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aPT_info:
	.quad	sat_s3aPT_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:52.737637054 UTC

.section .text
.align 8
sat_s3aPU_entry:
_c3dEr:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dEv
_c3dEw:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c3dEy
_c3dEx:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	leaq sat_s3aPT_info(%rip),%rdx
	movq %rdx,-24(%r12)
	movq %rax,-8(%r12)
	movq %rcx,(%r12)
	leaq block_c3dEp_info(%rip),%rcx
	movq %rcx,-40(%rbp)
	movq %rax,%r14
	leaq -24(%r12),%rax
	movq %rax,-32(%rbp)
	movq %rbx,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Float.$p1Floating_entry
_c3dEy:
	movq $32,904(%r13)
_c3dEv:
	jmp *-16(%r13)
	.size sat_s3aPU_entry, .-sat_s3aPU_entry


==================== Asm code ====================
2018-03-16 15:57:52.738407788 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aPU_info:
	.quad	sat_s3aPU_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:57:52.739076825 UTC

.section .text
.align 8
_c3dEp:
_c3dEp:
	leaq block_c3dEu_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp *GHC.Real.$p1Fractional_entry@gotpcrel(%rip)
	.size _c3dEp, .-_c3dEp


==================== Asm code ====================
2018-03-16 15:57:52.739638375 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dEp_info:
	.quad	_c3dEp
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.740245732 UTC

.section .text
.align 8
_c3dEu:
_c3dEu:
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,(%rbp)
	jmp *GHC.Num.*_entry@gotpcrel(%rip)
	.size _c3dEu, .-_c3dEu


==================== Asm code ====================
2018-03-16 15:57:52.740846214 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dEu_info:
	.quad	_c3dEu
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.744893771 UTC

.section .text
.align 8
.globl GHC.Float.$dm**_entry
.type GHC.Float.$dm**_entry, @object
GHC.Float.$dm**_entry:
_c3dEE:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dEF
_c3dEG:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c3dEI
_c3dEH:
	leaq sat_s3aPU_info(%rip),%rax
	movq %rax,-32(%r12)
	movq %r14,-16(%r12)
	movq %rsi,-8(%r12)
	movq %rdi,(%r12)
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	leaq -32(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Float.exp_entry
_c3dEI:
	movq $40,904(%r13)
_c3dEF:
	leaq GHC.Float.$dm**_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$dm**_entry, .-GHC.Float.$dm**_entry


==================== Asm code ====================
2018-03-16 15:57:52.745876217 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$dm**_info
.type GHC.Float.$dm**_info, @object
GHC.Float.$dm**_info:
	.quad	GHC.Float.$dm**_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:57:52.747809242 UTC

.section .data
.align 8
.align 1
lvl1_r2Upz_closure:
	.quad	GHC.Real.:%_con_info
	.quad	GHC.Float.$fRealDouble1_closure
	.quad	GHC.Float.$fRealFloatDouble5_closure
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:52.752657669 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$dmsqrt_closure
.type GHC.Float.$dmsqrt_closure, @object
GHC.Float.$dmsqrt_closure:
	.quad	GHC.Float.$dmsqrt_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:52.753806208 UTC

.section .text
.align 8
sat_s3aPY_entry:
_c3dFp:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dFq
_c3dFr:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3dFn_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp GHC.Float.$p1Floating_entry
_c3dFq:
	jmp *-16(%r13)
	.size sat_s3aPY_entry, .-sat_s3aPY_entry


==================== Asm code ====================
2018-03-16 15:57:52.754472184 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aPY_info:
	.quad	sat_s3aPY_entry
	.quad	1
	.quad	4294967312
	.quad	S3bQP_srt+592


==================== Asm code ====================
2018-03-16 15:57:52.755234425 UTC

.section .text
.align 8
_c3dFn:
_c3dFn:
	movq %rbx,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-8(%rbp)
	leaq lvl1_r2Upz_closure+1(%rip),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Real.fromRational_entry@gotpcrel(%rip)
	.size _c3dFn, .-_c3dFn


==================== Asm code ====================
2018-03-16 15:57:52.755839407 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dFn_info:
	.quad	_c3dFn
	.quad	0
	.quad	4294967326
	.quad	S3bQP_srt+592


==================== Asm code ====================
2018-03-16 15:57:52.756681677 UTC

.section .text
.align 8
.globl GHC.Float.$dmsqrt_entry
.type GHC.Float.$dmsqrt_entry, @object
GHC.Float.$dmsqrt_entry:
_c3dFv:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dFw
_c3dFx:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3dFz
_c3dFy:
	leaq sat_s3aPY_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,-16(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Float.**_entry
_c3dFz:
	movq $24,904(%r13)
_c3dFw:
	leaq GHC.Float.$dmsqrt_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$dmsqrt_entry, .-GHC.Float.$dmsqrt_entry


==================== Asm code ====================
2018-03-16 15:57:52.757519794 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$dmsqrt_info
.type GHC.Float.$dmsqrt_info, @object
GHC.Float.$dmsqrt_info:
	.quad	GHC.Float.$dmsqrt_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S3bQP_srt+592


==================== Asm code ====================
2018-03-16 15:57:52.760878585 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.roundTo2_closure
.type GHC.Float.roundTo2_closure, @object
GHC.Float.roundTo2_closure:
	.quad	GHC.Float.roundTo2_info


==================== Asm code ====================
2018-03-16 15:57:52.761892638 UTC

.section .text
.align 8
.globl GHC.Float.roundTo2_entry
.type GHC.Float.roundTo2_entry, @object
GHC.Float.roundTo2_entry:
_c3dG0:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dG1
_c3dG2:
	leaq block_c3dFX_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3dFX
_c3dFY:
	movq (%rbx),%rax
	jmp *(%rax)
_c3dG1:
	leaq GHC.Float.roundTo2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.roundTo2_entry, .-GHC.Float.roundTo2_entry


==================== Asm code ====================
2018-03-16 15:57:52.762630647 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.roundTo2_info
.type GHC.Float.roundTo2_info, @object
GHC.Float.roundTo2_info:
	.quad	GHC.Float.roundTo2_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:52.763404467 UTC

.section .text
.align 8
_c3dFX:
_c3dFX:
	cmpq $0,7(%rbx)
	je _c3dG9
_c3dG8:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3dG9:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3dFX, .-_c3dFX


==================== Asm code ====================
2018-03-16 15:57:52.76415633 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dFX_info:
	.quad	_c3dFX
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.767473973 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl2_r2UpA_bytes:
	.asciz "roundTo: bad Value"


==================== Asm code ====================
2018-03-16 15:57:52.774654392 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.roundTo1_closure
.type GHC.Float.roundTo1_closure, @object
GHC.Float.roundTo1_closure:
	.quad	GHC.Float.roundTo1_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:52.776535131 UTC

.section .text
.align 8
.globl GHC.Float.roundTo1_entry
.type GHC.Float.roundTo1_entry, @object
GHC.Float.roundTo1_entry:
_c3dGy:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dGz
_c3dGA:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c3dGv
_c3dGu:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq block_c3dGw_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq lvl2_r2UpA_bytes(%rip),%r14
	addq $-24,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c3dGz:
	jmp *-16(%r13)
_c3dGv:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Float.roundTo1_entry, .-GHC.Float.roundTo1_entry


==================== Asm code ====================
2018-03-16 15:57:52.778254695 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.roundTo1_info
.type GHC.Float.roundTo1_info, @object
GHC.Float.roundTo1_info:
	.quad	GHC.Float.roundTo1_entry
	.quad	0
	.quad	4294967317
	.quad	S3bQP_srt+608


==================== Asm code ====================
2018-03-16 15:57:52.779555803 UTC

.section .text
.align 8
_c3dGw:
_c3dGw:
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Err.errorWithoutStackTrace_entry@gotpcrel(%rip)
	.size _c3dGw, .-_c3dGw


==================== Asm code ====================
2018-03-16 15:57:52.78096491 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dGw_info:
	.quad	_c3dGw
	.quad	0
	.quad	4294967326
	.quad	S3bQP_srt+608


==================== Asm code ====================
2018-03-16 15:57:52.7845382 UTC

.section .data
.align 8
.align 1
lvl3_r2UpB_closure:
	.quad	:_con_info
	.quad	GHC.Float.minExpt_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:52.789954216 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$wxs_closure
.type GHC.Float.$wxs_closure, @object
GHC.Float.$wxs_closure:
	.quad	GHC.Float.$wxs_info


==================== Asm code ====================
2018-03-16 15:57:52.791458361 UTC

.section .text
.align 8
sat_s3aQ7_entry:
_c3dH3:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dH4
_c3dH5:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	leaq -1(%rax),%r14
	addq $-16,%rbp
	jmp GHC.Float.$wxs_entry
_c3dH4:
	jmp *-16(%r13)
	.size sat_s3aQ7_entry, .-sat_s3aQ7_entry


==================== Asm code ====================
2018-03-16 15:57:52.792389558 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aQ7_info:
	.quad	sat_s3aQ7_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 15:57:52.793385717 UTC

.section .text
.align 8
.globl GHC.Float.$wxs_entry
.type GHC.Float.$wxs_entry, @object
GHC.Float.$wxs_entry:
_c3dH9:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c3dHd
_c3dHc:
	cmpq $1,%r14
	je _c3dH8
_c3dH7:
	leaq sat_s3aQ7_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq GHC.Float.minExpt_closure+1(%rip),%rax
	movq %rax,-8(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c3dHd:
	movq $48,904(%r13)
	leaq GHC.Float.$wxs_closure(%rip),%rbx
	jmp *-8(%r13)
_c3dH8:
	addq $-48,%r12
	leaq lvl3_r2UpB_closure+2(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Float.$wxs_entry, .-GHC.Float.$wxs_entry


==================== Asm code ====================
2018-03-16 15:57:52.794210572 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$wxs_info
.type GHC.Float.$wxs_info, @object
GHC.Float.$wxs_info:
	.quad	GHC.Float.$wxs_entry
	.quad	0
	.quad	14
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:57:52.812642375 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$wroundTo_closure
.type GHC.Float.$wroundTo_closure, @object
GHC.Float.$wroundTo_closure:
	.quad	GHC.Float.$wroundTo_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:52.813578057 UTC

.section .text
.align 8
b2_s3aQb_entry:
_c3dHG:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dHN
_c3dHO:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3dHD_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _c3dHD
_c3dHE:
	movq (%rbx),%rax
	jmp *(%rax)
_c3dHN:
	jmp *-16(%r13)
	.size b2_s3aQb_entry, .-b2_s3aQb_entry


==================== Asm code ====================
2018-03-16 15:57:52.814270647 UTC

.section .data.rel.ro
.align 8
.align 1
b2_s3aQb_info:
	.quad	b2_s3aQb_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:52.815069633 UTC

.section .text
.align 8
_c3dHD:
_c3dHD:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3dHR
_c3dHQ:
	movq 7(%rbx),%rax
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,%rbx
	shrq $63,%rbx
	addq %rbx,%rax
	sarq $1,%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3dHR:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3dHD, .-_c3dHD


==================== Asm code ====================
2018-03-16 15:57:52.815735988 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dHD_info:
	.quad	_c3dHD
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.816512745 UTC

.section .text
.align 8
sat_s3aQn_entry:
_c3dIa:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dIb
_c3dIc:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3dI7_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _c3dI7
_c3dI8:
	movq (%rbx),%rax
	jmp *(%rax)
_c3dIb:
	jmp *-16(%r13)
	.size sat_s3aQn_entry, .-sat_s3aQn_entry


==================== Asm code ====================
2018-03-16 15:57:52.817175194 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aQn_info:
	.quad	sat_s3aQn_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:52.818022112 UTC

.section .text
.align 8
_c3dI7:
_c3dI7:
	movq 7(%rbx),%rax
	cmpq $0,%rax
	jle _c3dIj
_c3dIk:
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Float.$wxs_entry
_c3dIj:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3dI7, .-_c3dI7


==================== Asm code ====================
2018-03-16 15:57:52.818631798 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dI7_info:
	.quad	_c3dI7
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.819368736 UTC

.section .text
.align 8
sat_s3aQv_entry:
_c3dIz:
	movq 16(%rbx),%r14
	jmp GHC.Float.$seven_entry
	.size sat_s3aQv_entry, .-sat_s3aQv_entry


==================== Asm code ====================
2018-03-16 15:57:52.819977003 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aQv_info:
	.quad	sat_s3aQv_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:52.820902976 UTC

.section .text
.align 8
sat_s3aQQ_entry:
_c3dIZ:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dJ0
_c3dJ1:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq 24(%rbx),%rax
	jl _c3dIX
_c3dIY:
	leaq GHC.Float.$fRealFracFloat2_closure+1(%rip),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3dJ0:
	jmp *-16(%r13)
_c3dIX:
	leaq GHC.Float.minExpt_closure+1(%rip),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s3aQQ_entry, .-sat_s3aQQ_entry


==================== Asm code ====================
2018-03-16 15:57:52.821658015 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aQQ_info:
	.quad	sat_s3aQQ_entry
	.quad	8589934592
	.quad	20


==================== Asm code ====================
2018-03-16 15:57:52.822504551 UTC

.section .text
.align 8
sat_s3aQT_entry:
_c3dJh:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dJi
_c3dJj:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq 24(%rbx),%rax
	jl _c3dJf
_c3dJg:
	leaq GHC.Float.$fRealFracFloat2_closure+1(%rip),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3dJi:
	jmp *-16(%r13)
_c3dJf:
	leaq GHC.Float.minExpt_closure+1(%rip),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s3aQT_entry, .-sat_s3aQT_entry


==================== Asm code ====================
2018-03-16 15:57:52.823329423 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aQT_info:
	.quad	sat_s3aQT_entry
	.quad	8589934592
	.quad	20


==================== Asm code ====================
2018-03-16 15:57:52.82414511 UTC

.section .text
.align 8
sat_s3aQW_entry:
_c3dJz:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dJA
_c3dJB:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	cmpq 24(%rbx),%rax
	jl _c3dJx
_c3dJy:
	leaq GHC.Float.$fRealFracFloat2_closure+1(%rip),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3dJA:
	jmp *-16(%r13)
_c3dJx:
	leaq GHC.Float.minExpt_closure+1(%rip),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size sat_s3aQW_entry, .-sat_s3aQW_entry


==================== Asm code ====================
2018-03-16 15:57:52.824876411 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aQW_info:
	.quad	sat_s3aQW_entry
	.quad	8589934592
	.quad	20


==================== Asm code ====================
2018-03-16 15:57:52.825803104 UTC

.section .text
.align 8
$wf1_s3aQf_entry:
_c3dJG:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dJH
_c3dJI:
	leaq block_c3dHY_info(%rip),%rax
	movq %rax,-48(%rbp)
	movq %rbx,%rax
	movq 5(%rbx),%rcx
	movq 13(%rbx),%rbx
	movq %rbx,%rdx
	movq %rdi,%rbx
	movq %rcx,-40(%rbp)
	movq %rdx,-32(%rbp)
	movq %rax,-24(%rbp)
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-48,%rbp
	testb $7,%bl
	jne _c3dHY
_c3dHZ:
	movq (%rbx),%rax
	jmp *(%rax)
_c3dJH:
	jmp *-8(%r13)
	.size $wf1_s3aQf_entry, .-$wf1_s3aQf_entry


==================== Asm code ====================
2018-03-16 15:57:52.826514666 UTC

.section .data.rel.ro
.align 8
.align 1
$wf1_s3aQf_info:
	.quad	$wf1_s3aQf_entry
	.quad	2
	.quad	11
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:57:52.827435525 UTC

.section .text
.align 8
_c3dHY:
_c3dHY:
	movq 32(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c3dJD
_c3dJE:
	leaq block_c3dIo_info(%rip),%rcx
	movq %rcx,-8(%rbp)
	movq 6(%rbx),%rcx
	movq 14(%rbx),%rbx
	movq %rbx,%rdx
	movq %rax,%rbx
	movq %rdx,(%rbp)
	movq %rcx,32(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c3dIo
_c3dIp:
	movq (%rbx),%rax
	jmp *(%rax)
_c3dJL:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c3dJD:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3dJL
_c3dJK:
	leaq sat_s3aQn_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,(%r12)
	leaq -16(%r12),%r14
	leaq GHC.Float.minExpt_closure+1(%rip),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3dHY, .-_c3dHY


==================== Asm code ====================
2018-03-16 15:57:52.828225974 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dHY_info:
	.quad	_c3dHY
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.829100753 UTC

.section .text
.align 8
_c3dIo:
_c3dIo:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c3dJP
_c3dJO:
	movq 40(%rbp),%rax
	movq 7(%rbx),%rbx
	testq %rbx,%rbx
	jne _c3dK8
_c3dKw:
	addq $-40,%r12
	leaq block_c3dID_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c3dID
_c3dIE:
	movq (%rbx),%rax
	jmp *(%rax)
_c3dK8:
	leaq sat_s3aQv_info(%rip),%rcx
	movq %rcx,-32(%r12)
	movq %rax,-16(%r12)
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	leaq -1(%rbx),%rax
	movq %rax,(%r12)
	movq 8(%rbp),%rax
	leaq block_c3dJU_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rdi
	leaq -32(%r12),%rsi
	leaq -7(%r12),%r14
	movq 32(%rbp),%rbx
	addq $8,%rbp
	jmp $wf1_s3aQf_entry
_c3dJP:
	movq $40,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3dIo, .-_c3dIo


==================== Asm code ====================
2018-03-16 15:57:52.830054107 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dIo_info:
	.quad	_c3dIo
	.quad	6
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.831458011 UTC

.section .text
.align 8
_c3dJU:
_c3dJU:
	leaq block_c3dJW_info(%rip),%rax
	movq %rax,(%rbp)
	movq %r14,40(%rbp)
	testb $7,%bl
	jne _c3dJW
_c3dJX:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3dJU, .-_c3dJU


==================== Asm code ====================
2018-03-16 15:57:52.832138247 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dJU_info:
	.quad	_c3dJU
	.quad	1413
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.832819043 UTC

.section .text
.align 8
_c3dJW:
_c3dJW:
	leaq block_c3dK1_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 32(%rbp),%rbx
	movq %rax,32(%rbp)
	testb $7,%bl
	jne _c3dK1
_c3dK2:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3dJW, .-_c3dJW


==================== Asm code ====================
2018-03-16 15:57:52.833605255 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dJW_info:
	.quad	_c3dJW
	.quad	389
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.834268474 UTC

.section .text
.align 8
_c3dK1:
_c3dK1:
	leaq block_c3dK6_info(%rip),%rax
	movq %rax,16(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,24(%rbp)
	addq $16,%rbp
	testb $7,%bl
	jne _c3dK6
_c3dKc:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3dK1, .-_c3dK1


==================== Asm code ====================
2018-03-16 15:57:52.834849238 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dK1_info:
	.quad	_c3dK1
	.quad	901
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.83572056 UTC

.section .text
.align 8
_c3dK6:
_c3dK6:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c3dKi
_c3dKh:
	movq 24(%rbp),%rax
	movq 16(%rbp),%rcx
	addq 8(%rbp),%rcx
	cmpq 7(%rbx),%rcx
	je _c3dKv
_c3dKs:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-32(%r12)
	movq %rcx,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	leaq -31(%r12),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%r14
	leaq GHC.Float.minExpt_closure+1(%rip),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3dKv:
	movq :_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-32(%r12)
	leaq GHC.Float.minExpt_closure+1(%rip),%rbx
	movq %rbx,-24(%r12)
	movq %rax,-16(%r12)
	leaq -30(%r12),%rax
	addq $-16,%r12
	movq %rax,%r14
	leaq GHC.Float.$fRealFracFloat2_closure+1(%rip),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3dKi:
	movq $40,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3dK6, .-_c3dK6


==================== Asm code ====================
2018-03-16 15:57:52.836458945 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dK6_info:
	.quad	_c3dK6
	.quad	195
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.837143555 UTC

.section .text
.align 8
_c3dID:
_c3dID:
	leaq block_c3dII_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 24(%rbp),%rbx
	movq %rax,40(%rbp)
	testb $7,%bl
	jne _c3dII
_c3dIJ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3dID, .-_c3dID


==================== Asm code ====================
2018-03-16 15:57:52.837767627 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dID_info:
	.quad	_c3dID
	.quad	1670
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.838603718 UTC

.section .text
.align 8
_c3dII:
_c3dII:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c3dKA
_c3dKz:
	movq 40(%rbp),%rax
	movq 7(%rbx),%rbx
	cmpq %rbx,%rax
	je _c3dKD
_c3dKC:
	leaq sat_s3aQQ_info(%rip),%rcx
	movq %rcx,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r14
	leaq -24(%r12),%rbx
	addq $56,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3dKA:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c3dKD:
	addq $-32,%r12
	leaq block_c3dJ3_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	movq 48(%rbp),%rbx
	movq %rax,48(%rbp)
	testb $7,%bl
	jne _c3dJ3
_c3dJ4:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3dII, .-_c3dII


==================== Asm code ====================
2018-03-16 15:57:52.839344472 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dII_info:
	.quad	_c3dII
	.quad	1926
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.840129311 UTC

.section .text
.align 8
_c3dJ3:
_c3dJ3:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c3dKF
_c3dKK:
	leaq block_c3dJm_info(%rip),%rax
	movq %rax,32(%rbp)
	movq 8(%rbp),%rsi
	leaq GHC.Float.roundTo2_closure+1(%rip),%r14
	addq $32,%rbp
	jmp *GHC.List.all_entry@gotpcrel(%rip)
_c3dKI:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c3dKF:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c3dKI
_c3dKH:
	leaq sat_s3aQT_info(%rip),%rax
	movq %rax,-24(%r12)
	movq 40(%rbp),%rax
	movq %rax,-8(%r12)
	movq 48(%rbp),%rax
	movq %rax,(%r12)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r14
	leaq -24(%r12),%rbx
	addq $56,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3dJ3, .-_c3dJ3


==================== Asm code ====================
2018-03-16 15:57:52.840909934 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dJ3_info:
	.quad	_c3dJ3
	.quad	3974
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.841697041 UTC

.section .text
.align 8
_c3dJm:
_c3dJm:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c3dKM
_c3dKT:
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r14
	leaq GHC.Float.minExpt_closure+1(%rip),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3dKP:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c3dKM:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c3dKP
_c3dKO:
	leaq sat_s3aQW_info(%rip),%rax
	movq %rax,-24(%r12)
	movq 8(%rbp),%rax
	movq %rax,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r14
	leaq -24(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3dJm, .-_c3dJm


==================== Asm code ====================
2018-03-16 15:57:52.842458423 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dJm_info:
	.quad	_c3dJm
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.843348485 UTC

.section .text
.align 8
.globl GHC.Float.$wroundTo_entry
.type GHC.Float.$wroundTo_entry, @object
GHC.Float.$wroundTo_entry:
_c3dL9:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dLa
_c3dLb:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c3dLd
_c3dLc:
	leaq b2_s3aQb_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	leaq $wf1_s3aQf_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,-8(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	leaq block_c3dL4_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	movq %rsi,%rbx
	leaq 2(%rax),%rsi
	movq %rbx,%r14
	leaq -13(%r12),%rbx
	addq $-8,%rbp
	jmp $wf1_s3aQf_entry
_c3dLd:
	movq $48,904(%r13)
_c3dLa:
	leaq GHC.Float.$wroundTo_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$wroundTo_entry, .-GHC.Float.$wroundTo_entry


==================== Asm code ====================
2018-03-16 15:57:52.844142485 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$wroundTo_info
.type GHC.Float.$wroundTo_info, @object
GHC.Float.$wroundTo_info:
	.quad	GHC.Float.$wroundTo_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	S3bQP_srt+616


==================== Asm code ====================
2018-03-16 15:57:52.844854232 UTC

.section .text
.align 8
_c3dL4:
_c3dL4:
	leaq block_c3dL6_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,%rax
	movq %r14,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3dL6
_c3dL7:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3dL4, .-_c3dL4


==================== Asm code ====================
2018-03-16 15:57:52.845502757 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dL4_info:
	.quad	_c3dL4
	.quad	0
	.quad	4294967326
	.quad	S3bQP_srt+624


==================== Asm code ====================
2018-03-16 15:57:52.846323558 UTC

.section .text
.align 8
_c3dL6:
_c3dL6:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3dLj
_c3dLi:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	testq %rbx,%rbx
	jne _u3dLt
_c3dLn:
	addq $-24,%r12
	movq %rax,%r14
	movq 16(%rbp),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u3dLt:
	cmpq $1,%rbx
	jne _c3dLm
_c3dLs:
	movq :_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	leaq GHC.Float.$fRealFracFloat2_closure+1(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%r14
	leaq GHC.Float.$fRealFracFloat2_closure+1(%rip),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3dLm:
	addq $-24,%r12
	leaq GHC.Float.roundTo1_closure(%rip),%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c3dLj:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3dL6, .-_c3dL6


==================== Asm code ====================
2018-03-16 15:57:52.847095724 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dL6_info:
	.quad	_c3dL6
	.quad	2
	.quad	4294967326
	.quad	S3bQP_srt+624


==================== Asm code ====================
2018-03-16 15:57:52.850357437 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.roundTo_closure
.type GHC.Float.roundTo_closure, @object
GHC.Float.roundTo_closure:
	.quad	GHC.Float.roundTo_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:52.851149417 UTC

.section .text
.align 8
.globl GHC.Float.roundTo_entry
.type GHC.Float.roundTo_entry, @object
GHC.Float.roundTo_entry:
_c3dOf:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dOg
_c3dOh:
	leaq block_c3dOc_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Float.$wroundTo_entry
_c3dOg:
	leaq GHC.Float.roundTo_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.roundTo_entry, .-GHC.Float.roundTo_entry


==================== Asm code ====================
2018-03-16 15:57:52.851821541 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.roundTo_info
.type GHC.Float.roundTo_info, @object
GHC.Float.roundTo_info:
	.quad	GHC.Float.roundTo_entry
	.quad	0
	.quad	21474836494
	.quad	12884901911
	.quad	S3bQP_srt+616


==================== Asm code ====================
2018-03-16 15:57:52.852588368 UTC

.section .text
.align 8
_c3dOc:
_c3dOc:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3dOk
_c3dOj:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3dOk:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c3dOc, .-_c3dOc


==================== Asm code ====================
2018-03-16 15:57:52.853291586 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dOc_info:
	.quad	_c3dOc
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.854972764 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.maxExpt_closure
.type GHC.Float.maxExpt_closure, @object
GHC.Float.maxExpt_closure:
	.quad	GHC.Types.I#_con_info
	.quad	1100


==================== Asm code ====================
2018-03-16 15:57:52.856660588 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.maxExpt10_closure
.type GHC.Float.maxExpt10_closure, @object
GHC.Float.maxExpt10_closure:
	.quad	GHC.Types.I#_con_info
	.quad	324


==================== Asm code ====================
2018-03-16 15:57:52.860132935 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.gtFloat_closure
.type GHC.Float.gtFloat_closure, @object
GHC.Float.gtFloat_closure:
	.quad	GHC.Float.gtFloat_info


==================== Asm code ====================
2018-03-16 15:57:52.860962561 UTC

.section .text
.align 8
.globl GHC.Float.gtFloat_entry
.type GHC.Float.gtFloat_entry, @object
GHC.Float.gtFloat_entry:
_c3dOF:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dOJ
_c3dOK:
	leaq block_c3dOC_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3dOC
_c3dOD:
	movq (%rbx),%rax
	jmp *(%rax)
_c3dOJ:
	leaq GHC.Float.gtFloat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.gtFloat_entry, .-GHC.Float.gtFloat_entry


==================== Asm code ====================
2018-03-16 15:57:52.862168575 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.gtFloat_info
.type GHC.Float.gtFloat_info, @object
GHC.Float.gtFloat_info:
	.quad	GHC.Float.gtFloat_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:52.862885264 UTC

.section .text
.align 8
_c3dOC:
_c3dOC:
	leaq block_c3dOI_info(%rip),%rax
	movq %rax,(%rbp)
	movss 7(%rbx),%xmm0
	movq 8(%rbp),%rbx
	movss %xmm0,8(%rbp)
	testb $7,%bl
	jne _c3dOI
_c3dOM:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3dOC, .-_c3dOC


==================== Asm code ====================
2018-03-16 15:57:52.863491671 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dOC_info:
	.quad	_c3dOC
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.864690507 UTC

.section .text
.align 8
_c3dOI:
_c3dOI:
	movss 8(%rbp),%xmm0
	ucomiss 7(%rbx),%xmm0
	seta %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl@gotpcrel(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3dOI, .-_c3dOI


==================== Asm code ====================
2018-03-16 15:57:52.865484681 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dOI_info:
	.quad	_c3dOI
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.869003519 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.geFloat_closure
.type GHC.Float.geFloat_closure, @object
GHC.Float.geFloat_closure:
	.quad	GHC.Float.geFloat_info


==================== Asm code ====================
2018-03-16 15:57:52.870363834 UTC

.section .text
.align 8
.globl GHC.Float.geFloat_entry
.type GHC.Float.geFloat_entry, @object
GHC.Float.geFloat_entry:
_c3dPm:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dPq
_c3dPr:
	leaq block_c3dPj_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3dPj
_c3dPk:
	movq (%rbx),%rax
	jmp *(%rax)
_c3dPq:
	leaq GHC.Float.geFloat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.geFloat_entry, .-GHC.Float.geFloat_entry


==================== Asm code ====================
2018-03-16 15:57:52.871012605 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.geFloat_info
.type GHC.Float.geFloat_info, @object
GHC.Float.geFloat_info:
	.quad	GHC.Float.geFloat_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:52.871706224 UTC

.section .text
.align 8
_c3dPj:
_c3dPj:
	leaq block_c3dPp_info(%rip),%rax
	movq %rax,(%rbp)
	movss 7(%rbx),%xmm0
	movq 8(%rbp),%rbx
	movss %xmm0,8(%rbp)
	testb $7,%bl
	jne _c3dPp
_c3dPt:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3dPj, .-_c3dPj


==================== Asm code ====================
2018-03-16 15:57:52.872331484 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dPj_info:
	.quad	_c3dPj
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.872989647 UTC

.section .text
.align 8
_c3dPp:
_c3dPp:
	movss 8(%rbp),%xmm0
	ucomiss 7(%rbx),%xmm0
	setae %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl@gotpcrel(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3dPp, .-_c3dPp


==================== Asm code ====================
2018-03-16 15:57:52.873688584 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dPp_info:
	.quad	_c3dPp
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.877131887 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.ltFloat_closure
.type GHC.Float.ltFloat_closure, @object
GHC.Float.ltFloat_closure:
	.quad	GHC.Float.ltFloat_info


==================== Asm code ====================
2018-03-16 15:57:52.878013381 UTC

.section .text
.align 8
.globl GHC.Float.ltFloat_entry
.type GHC.Float.ltFloat_entry, @object
GHC.Float.ltFloat_entry:
_c3dQ3:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dQ7
_c3dQ8:
	leaq block_c3dQ0_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3dQ0
_c3dQ1:
	movq (%rbx),%rax
	jmp *(%rax)
_c3dQ7:
	leaq GHC.Float.ltFloat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.ltFloat_entry, .-GHC.Float.ltFloat_entry


==================== Asm code ====================
2018-03-16 15:57:52.878664822 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.ltFloat_info
.type GHC.Float.ltFloat_info, @object
GHC.Float.ltFloat_info:
	.quad	GHC.Float.ltFloat_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:52.87938964 UTC

.section .text
.align 8
_c3dQ0:
_c3dQ0:
	leaq block_c3dQ6_info(%rip),%rax
	movq %rax,(%rbp)
	movss 7(%rbx),%xmm0
	movq 8(%rbp),%rbx
	movss %xmm0,8(%rbp)
	testb $7,%bl
	jne _c3dQ6
_c3dQa:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3dQ0, .-_c3dQ0


==================== Asm code ====================
2018-03-16 15:57:52.879958008 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dQ0_info:
	.quad	_c3dQ0
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.880668872 UTC

.section .text
.align 8
_c3dQ6:
_c3dQ6:
	movss 8(%rbp),%xmm0
	ucomiss 7(%rbx),%xmm0
	setb %al
	setnp %bl
	andb %al,%bl
	movzbl %bl,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl@gotpcrel(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3dQ6, .-_c3dQ6


==================== Asm code ====================
2018-03-16 15:57:52.881324763 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dQ6_info:
	.quad	_c3dQ6
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.884723637 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.leFloat_closure
.type GHC.Float.leFloat_closure, @object
GHC.Float.leFloat_closure:
	.quad	GHC.Float.leFloat_info


==================== Asm code ====================
2018-03-16 15:57:52.885734556 UTC

.section .text
.align 8
.globl GHC.Float.leFloat_entry
.type GHC.Float.leFloat_entry, @object
GHC.Float.leFloat_entry:
_c3dQK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dQO
_c3dQP:
	leaq block_c3dQH_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3dQH
_c3dQI:
	movq (%rbx),%rax
	jmp *(%rax)
_c3dQO:
	leaq GHC.Float.leFloat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.leFloat_entry, .-GHC.Float.leFloat_entry


==================== Asm code ====================
2018-03-16 15:57:52.886371431 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.leFloat_info
.type GHC.Float.leFloat_info, @object
GHC.Float.leFloat_info:
	.quad	GHC.Float.leFloat_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:52.887045904 UTC

.section .text
.align 8
_c3dQH:
_c3dQH:
	leaq block_c3dQN_info(%rip),%rax
	movq %rax,(%rbp)
	movss 7(%rbx),%xmm0
	movq 8(%rbp),%rbx
	movss %xmm0,8(%rbp)
	testb $7,%bl
	jne _c3dQN
_c3dQR:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3dQH, .-_c3dQH


==================== Asm code ====================
2018-03-16 15:57:52.887646598 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dQH_info:
	.quad	_c3dQH
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.888329625 UTC

.section .text
.align 8
_c3dQN:
_c3dQN:
	movss 8(%rbp),%xmm0
	ucomiss 7(%rbx),%xmm0
	setbe %al
	setnp %bl
	andb %al,%bl
	movzbl %bl,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl@gotpcrel(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3dQN, .-_c3dQN


==================== Asm code ====================
2018-03-16 15:57:52.888917499 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dQN_info:
	.quad	_c3dQN
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.892037763 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.expFloat_closure
.type GHC.Float.expFloat_closure, @object
GHC.Float.expFloat_closure:
	.quad	GHC.Float.expFloat_info


==================== Asm code ====================
2018-03-16 15:57:52.892829242 UTC

.section .text
.align 8
.globl GHC.Float.expFloat_entry
.type GHC.Float.expFloat_entry, @object
GHC.Float.expFloat_entry:
_c3dRr:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dRz
_c3dRA:
	leaq block_c3dRo_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3dRo
_c3dRp:
	movq (%rbx),%rax
	jmp *(%rax)
_c3dRz:
	leaq GHC.Float.expFloat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.expFloat_entry, .-GHC.Float.expFloat_entry


==================== Asm code ====================
2018-03-16 15:57:52.893525237 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.expFloat_info
.type GHC.Float.expFloat_info, @object
GHC.Float.expFloat_info:
	.quad	GHC.Float.expFloat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:52.894337025 UTC

.section .text
.align 8
_c3dRo:
_c3dRo:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3dRD
_c3dRC:
	subq $8,%rsp
	movss 7(%rbx),%xmm0
	movl $1,%eax
	call expf@plt
	addq $8,%rsp
	movq GHC.Types.F#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3dRD:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3dRo, .-_c3dRo


==================== Asm code ====================
2018-03-16 15:57:52.894963829 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dRo_info:
	.quad	_c3dRo
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.899087239 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fFloatingFloat_$clog1pexp_closure
.type GHC.Float.$fFloatingFloat_$clog1pexp_closure, @object
GHC.Float.$fFloatingFloat_$clog1pexp_closure:
	.quad	GHC.Float.$fFloatingFloat_$clog1pexp_info


==================== Asm code ====================
2018-03-16 15:57:52.899901128 UTC

.section .text
.align 8
.globl GHC.Float.$fFloatingFloat_$clog1pexp_entry
.type GHC.Float.$fFloatingFloat_$clog1pexp_entry, @object
GHC.Float.$fFloatingFloat_$clog1pexp_entry:
_c3dRY:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dRZ
_c3dS0:
	leaq block_c3dRV_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3dRV
_c3dRW:
	movq (%rbx),%rax
	jmp *(%rax)
_c3dRZ:
	leaq GHC.Float.$fFloatingFloat_$clog1pexp_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fFloatingFloat_$clog1pexp_entry, .-GHC.Float.$fFloatingFloat_$clog1pexp_entry


==================== Asm code ====================
2018-03-16 15:57:52.900566813 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fFloatingFloat_$clog1pexp_info
.type GHC.Float.$fFloatingFloat_$clog1pexp_info, @object
GHC.Float.$fFloatingFloat_$clog1pexp_info:
	.quad	GHC.Float.$fFloatingFloat_$clog1pexp_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:52.901721655 UTC

.section .text
.align 8
_c3dRV:
_c3dRV:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3dS5
_c3dS4:
	movss 7(%rbx),%xmm0
	ucomiss _n3dSL(%rip),%xmm0
	jp _c3dSs
	jbe _c3dSB
_c3dSs:
	ucomiss _n3dSV(%rip),%xmm0
	jp _c3dSc
	jbe _c3dSq
_c3dSc:
	addq $-16,%r12
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c3dSB:
	subq $8,%rsp
	movl $1,%eax
	call expf@plt
	addq $8,%rsp
	subq $8,%rsp
	movl $1,%eax
	call ghczuwrapperZC1ZCbaseZCGHCziFloatZClog1pf@plt
	addq $8,%rsp
	movq GHC.Types.F#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3dSq:
	subq $8,%rsp
	movsd %xmm0,%xmm1
	movss _n3dSP(%rip),%xmm2
	xorps %xmm2,%xmm0
	movl $1,%eax
	movsd %xmm1,72(%rsp)
	call expf@plt
	addq $8,%rsp
	movq GHC.Types.F#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movsd 64(%rsp),%xmm1
	addss %xmm0,%xmm1
	movss %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3dS5:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3dRV, .-_c3dRV
.section .rodata
.align 8
.align 4
_n3dSL:
	.byte	0
	.byte	0
	.byte	144
	.byte	65
.section .rodata
.align 8
.align 4
_n3dSP:
	.long	-2147483648
.section .rodata
.align 8
.align 4
_n3dSV:
	.byte	0
	.byte	0
	.byte	200
	.byte	66


==================== Asm code ====================
2018-03-16 15:57:52.902597618 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dRV_info:
	.quad	_c3dRV
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.906350019 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.logFloat_closure
.type GHC.Float.logFloat_closure, @object
GHC.Float.logFloat_closure:
	.quad	GHC.Float.logFloat_info


==================== Asm code ====================
2018-03-16 15:57:52.907154533 UTC

.section .text
.align 8
.globl GHC.Float.logFloat_entry
.type GHC.Float.logFloat_entry, @object
GHC.Float.logFloat_entry:
_c3dT8:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dTg
_c3dTh:
	leaq block_c3dT5_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3dT5
_c3dT6:
	movq (%rbx),%rax
	jmp *(%rax)
_c3dTg:
	leaq GHC.Float.logFloat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.logFloat_entry, .-GHC.Float.logFloat_entry


==================== Asm code ====================
2018-03-16 15:57:52.907850143 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.logFloat_info
.type GHC.Float.logFloat_info, @object
GHC.Float.logFloat_info:
	.quad	GHC.Float.logFloat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:52.908657855 UTC

.section .text
.align 8
_c3dT5:
_c3dT5:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3dTk
_c3dTj:
	subq $8,%rsp
	movss 7(%rbx),%xmm0
	movl $1,%eax
	call logf@plt
	addq $8,%rsp
	movq GHC.Types.F#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3dTk:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3dT5, .-_c3dT5


==================== Asm code ====================
2018-03-16 15:57:52.90933483 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dT5_info:
	.quad	_c3dT5
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.912966942 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fFloatingFloat_$clogBase_closure
.type GHC.Float.$fFloatingFloat_$clogBase_closure, @object
GHC.Float.$fFloatingFloat_$clogBase_closure:
	.quad	GHC.Float.$fFloatingFloat_$clogBase_info


==================== Asm code ====================
2018-03-16 15:57:52.914150489 UTC

.section .text
.align 8
.globl GHC.Float.$fFloatingFloat_$clogBase_entry
.type GHC.Float.$fFloatingFloat_$clogBase_entry, @object
GHC.Float.$fFloatingFloat_$clogBase_entry:
_c3dTF:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dTZ
_c3dU0:
	leaq block_c3dTC_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3dTC
_c3dTD:
	movq (%rbx),%rax
	jmp *(%rax)
_c3dTZ:
	leaq GHC.Float.$fFloatingFloat_$clogBase_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fFloatingFloat_$clogBase_entry, .-GHC.Float.$fFloatingFloat_$clogBase_entry


==================== Asm code ====================
2018-03-16 15:57:52.914858758 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fFloatingFloat_$clogBase_info
.type GHC.Float.$fFloatingFloat_$clogBase_info, @object
GHC.Float.$fFloatingFloat_$clogBase_info:
	.quad	GHC.Float.$fFloatingFloat_$clogBase_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:52.915630705 UTC

.section .text
.align 8
_c3dTC:
_c3dTC:
	movq 8(%rbp),%rax
	subq $8,%rsp
	movss 7(%rbx),%xmm0
	movq %rax,%rbx
	movl $1,%eax
	call logf@plt
	addq $8,%rsp
	leaq block_c3dTM_info(%rip),%rax
	movq %rax,(%rbp)
	movss %xmm0,8(%rbp)
	testb $7,%bl
	jne _c3dTM
_c3dTN:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3dTC, .-_c3dTC


==================== Asm code ====================
2018-03-16 15:57:52.916255273 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dTC_info:
	.quad	_c3dTC
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.917045355 UTC

.section .text
.align 8
_c3dTM:
_c3dTM:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3dU4
_c3dU3:
	movss 8(%rbp),%xmm0
	subq $8,%rsp
	movsd %xmm0,%xmm1
	movss 7(%rbx),%xmm0
	movl $1,%eax
	movsd %xmm1,72(%rsp)
	call logf@plt
	addq $8,%rsp
	movq GHC.Types.F#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movsd 64(%rsp),%xmm1
	divss %xmm0,%xmm1
	movss %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3dU4:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3dTM, .-_c3dTM


==================== Asm code ====================
2018-03-16 15:57:52.917758601 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dTM_info:
	.quad	_c3dTM
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.920942491 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.sqrtFloat_closure
.type GHC.Float.sqrtFloat_closure, @object
GHC.Float.sqrtFloat_closure:
	.quad	GHC.Float.sqrtFloat_info


==================== Asm code ====================
2018-03-16 15:57:52.921811147 UTC

.section .text
.align 8
.globl GHC.Float.sqrtFloat_entry
.type GHC.Float.sqrtFloat_entry, @object
GHC.Float.sqrtFloat_entry:
_c3dUx:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dUF
_c3dUG:
	leaq block_c3dUu_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3dUu
_c3dUv:
	movq (%rbx),%rax
	jmp *(%rax)
_c3dUF:
	leaq GHC.Float.sqrtFloat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.sqrtFloat_entry, .-GHC.Float.sqrtFloat_entry


==================== Asm code ====================
2018-03-16 15:57:52.922462066 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.sqrtFloat_info
.type GHC.Float.sqrtFloat_info, @object
GHC.Float.sqrtFloat_info:
	.quad	GHC.Float.sqrtFloat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:52.923222843 UTC

.section .text
.align 8
_c3dUu:
_c3dUu:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3dUJ
_c3dUI:
	movss 7(%rbx),%xmm0
	sqrtss %xmm0,%xmm0
	movq GHC.Types.F#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3dUJ:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3dUu, .-_c3dUu


==================== Asm code ====================
2018-03-16 15:57:52.92383023 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dUu_info:
	.quad	_c3dUu
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.927159291 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.sinFloat_closure
.type GHC.Float.sinFloat_closure, @object
GHC.Float.sinFloat_closure:
	.quad	GHC.Float.sinFloat_info


==================== Asm code ====================
2018-03-16 15:57:52.927990924 UTC

.section .text
.align 8
.globl GHC.Float.sinFloat_entry
.type GHC.Float.sinFloat_entry, @object
GHC.Float.sinFloat_entry:
_c3dV5:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dVd
_c3dVe:
	leaq block_c3dV2_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3dV2
_c3dV3:
	movq (%rbx),%rax
	jmp *(%rax)
_c3dVd:
	leaq GHC.Float.sinFloat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.sinFloat_entry, .-GHC.Float.sinFloat_entry


==================== Asm code ====================
2018-03-16 15:57:52.92862767 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.sinFloat_info
.type GHC.Float.sinFloat_info, @object
GHC.Float.sinFloat_info:
	.quad	GHC.Float.sinFloat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:52.92945362 UTC

.section .text
.align 8
_c3dV2:
_c3dV2:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3dVh
_c3dVg:
	subq $8,%rsp
	movss 7(%rbx),%xmm0
	movl $1,%eax
	call sinf@plt
	addq $8,%rsp
	movq GHC.Types.F#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3dVh:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3dV2, .-_c3dV2


==================== Asm code ====================
2018-03-16 15:57:52.930110234 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dV2_info:
	.quad	_c3dV2
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.933290204 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.cosFloat_closure
.type GHC.Float.cosFloat_closure, @object
GHC.Float.cosFloat_closure:
	.quad	GHC.Float.cosFloat_info


==================== Asm code ====================
2018-03-16 15:57:52.934123221 UTC

.section .text
.align 8
.globl GHC.Float.cosFloat_entry
.type GHC.Float.cosFloat_entry, @object
GHC.Float.cosFloat_entry:
_c3dVC:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dVK
_c3dVL:
	leaq block_c3dVz_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3dVz
_c3dVA:
	movq (%rbx),%rax
	jmp *(%rax)
_c3dVK:
	leaq GHC.Float.cosFloat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.cosFloat_entry, .-GHC.Float.cosFloat_entry


==================== Asm code ====================
2018-03-16 15:57:52.934839391 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.cosFloat_info
.type GHC.Float.cosFloat_info, @object
GHC.Float.cosFloat_info:
	.quad	GHC.Float.cosFloat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:52.93563623 UTC

.section .text
.align 8
_c3dVz:
_c3dVz:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3dVO
_c3dVN:
	subq $8,%rsp
	movss 7(%rbx),%xmm0
	movl $1,%eax
	call cosf@plt
	addq $8,%rsp
	movq GHC.Types.F#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3dVO:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3dVz, .-_c3dVz


==================== Asm code ====================
2018-03-16 15:57:52.936280053 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dVz_info:
	.quad	_c3dVz
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.939735565 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.tanFloat_closure
.type GHC.Float.tanFloat_closure, @object
GHC.Float.tanFloat_closure:
	.quad	GHC.Float.tanFloat_info


==================== Asm code ====================
2018-03-16 15:57:52.940559012 UTC

.section .text
.align 8
.globl GHC.Float.tanFloat_entry
.type GHC.Float.tanFloat_entry, @object
GHC.Float.tanFloat_entry:
_c3dW9:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dWh
_c3dWi:
	leaq block_c3dW6_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3dW6
_c3dW7:
	movq (%rbx),%rax
	jmp *(%rax)
_c3dWh:
	leaq GHC.Float.tanFloat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.tanFloat_entry, .-GHC.Float.tanFloat_entry


==================== Asm code ====================
2018-03-16 15:57:52.94120455 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.tanFloat_info
.type GHC.Float.tanFloat_info, @object
GHC.Float.tanFloat_info:
	.quad	GHC.Float.tanFloat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:52.942000903 UTC

.section .text
.align 8
_c3dW6:
_c3dW6:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3dWl
_c3dWk:
	subq $8,%rsp
	movss 7(%rbx),%xmm0
	movl $1,%eax
	call tanf@plt
	addq $8,%rsp
	movq GHC.Types.F#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3dWl:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3dW6, .-_c3dW6


==================== Asm code ====================
2018-03-16 15:57:52.943223547 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dW6_info:
	.quad	_c3dW6
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.946475213 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.asinFloat_closure
.type GHC.Float.asinFloat_closure, @object
GHC.Float.asinFloat_closure:
	.quad	GHC.Float.asinFloat_info


==================== Asm code ====================
2018-03-16 15:57:52.947273019 UTC

.section .text
.align 8
.globl GHC.Float.asinFloat_entry
.type GHC.Float.asinFloat_entry, @object
GHC.Float.asinFloat_entry:
_c3dWG:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dWO
_c3dWP:
	leaq block_c3dWD_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3dWD
_c3dWE:
	movq (%rbx),%rax
	jmp *(%rax)
_c3dWO:
	leaq GHC.Float.asinFloat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.asinFloat_entry, .-GHC.Float.asinFloat_entry


==================== Asm code ====================
2018-03-16 15:57:52.947923882 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.asinFloat_info
.type GHC.Float.asinFloat_info, @object
GHC.Float.asinFloat_info:
	.quad	GHC.Float.asinFloat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:52.948708684 UTC

.section .text
.align 8
_c3dWD:
_c3dWD:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3dWS
_c3dWR:
	subq $8,%rsp
	movss 7(%rbx),%xmm0
	movl $1,%eax
	call asinf@plt
	addq $8,%rsp
	movq GHC.Types.F#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3dWS:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3dWD, .-_c3dWD


==================== Asm code ====================
2018-03-16 15:57:52.949382373 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dWD_info:
	.quad	_c3dWD
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.95255753 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.acosFloat_closure
.type GHC.Float.acosFloat_closure, @object
GHC.Float.acosFloat_closure:
	.quad	GHC.Float.acosFloat_info


==================== Asm code ====================
2018-03-16 15:57:52.953749414 UTC

.section .text
.align 8
.globl GHC.Float.acosFloat_entry
.type GHC.Float.acosFloat_entry, @object
GHC.Float.acosFloat_entry:
_c3dXd:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dXl
_c3dXm:
	leaq block_c3dXa_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3dXa
_c3dXb:
	movq (%rbx),%rax
	jmp *(%rax)
_c3dXl:
	leaq GHC.Float.acosFloat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.acosFloat_entry, .-GHC.Float.acosFloat_entry


==================== Asm code ====================
2018-03-16 15:57:52.954402615 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.acosFloat_info
.type GHC.Float.acosFloat_info, @object
GHC.Float.acosFloat_info:
	.quad	GHC.Float.acosFloat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:52.955184664 UTC

.section .text
.align 8
_c3dXa:
_c3dXa:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3dXp
_c3dXo:
	subq $8,%rsp
	movss 7(%rbx),%xmm0
	movl $1,%eax
	call acosf@plt
	addq $8,%rsp
	movq GHC.Types.F#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3dXp:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3dXa, .-_c3dXa


==================== Asm code ====================
2018-03-16 15:57:52.95585102 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dXa_info:
	.quad	_c3dXa
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.95906433 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.atanFloat_closure
.type GHC.Float.atanFloat_closure, @object
GHC.Float.atanFloat_closure:
	.quad	GHC.Float.atanFloat_info


==================== Asm code ====================
2018-03-16 15:57:52.959837191 UTC

.section .text
.align 8
.globl GHC.Float.atanFloat_entry
.type GHC.Float.atanFloat_entry, @object
GHC.Float.atanFloat_entry:
_c3dXK:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dXS
_c3dXT:
	leaq block_c3dXH_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3dXH
_c3dXI:
	movq (%rbx),%rax
	jmp *(%rax)
_c3dXS:
	leaq GHC.Float.atanFloat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.atanFloat_entry, .-GHC.Float.atanFloat_entry


==================== Asm code ====================
2018-03-16 15:57:52.960498255 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.atanFloat_info
.type GHC.Float.atanFloat_info, @object
GHC.Float.atanFloat_info:
	.quad	GHC.Float.atanFloat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:52.961343098 UTC

.section .text
.align 8
_c3dXH:
_c3dXH:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3dXW
_c3dXV:
	subq $8,%rsp
	movss 7(%rbx),%xmm0
	movl $1,%eax
	call atanf@plt
	addq $8,%rsp
	movq GHC.Types.F#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3dXW:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3dXH, .-_c3dXH


==================== Asm code ====================
2018-03-16 15:57:52.962037407 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dXH_info:
	.quad	_c3dXH
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.965307575 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.sinhFloat_closure
.type GHC.Float.sinhFloat_closure, @object
GHC.Float.sinhFloat_closure:
	.quad	GHC.Float.sinhFloat_info


==================== Asm code ====================
2018-03-16 15:57:52.966091504 UTC

.section .text
.align 8
.globl GHC.Float.sinhFloat_entry
.type GHC.Float.sinhFloat_entry, @object
GHC.Float.sinhFloat_entry:
_c3dYh:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dYp
_c3dYq:
	leaq block_c3dYe_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3dYe
_c3dYf:
	movq (%rbx),%rax
	jmp *(%rax)
_c3dYp:
	leaq GHC.Float.sinhFloat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.sinhFloat_entry, .-GHC.Float.sinhFloat_entry


==================== Asm code ====================
2018-03-16 15:57:52.966701984 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.sinhFloat_info
.type GHC.Float.sinhFloat_info, @object
GHC.Float.sinhFloat_info:
	.quad	GHC.Float.sinhFloat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:52.967491734 UTC

.section .text
.align 8
_c3dYe:
_c3dYe:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3dYt
_c3dYs:
	subq $8,%rsp
	movss 7(%rbx),%xmm0
	movl $1,%eax
	call sinhf@plt
	addq $8,%rsp
	movq GHC.Types.F#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3dYt:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3dYe, .-_c3dYe


==================== Asm code ====================
2018-03-16 15:57:52.968143016 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dYe_info:
	.quad	_c3dYe
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.97130887 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.coshFloat_closure
.type GHC.Float.coshFloat_closure, @object
GHC.Float.coshFloat_closure:
	.quad	GHC.Float.coshFloat_info


==================== Asm code ====================
2018-03-16 15:57:52.972108751 UTC

.section .text
.align 8
.globl GHC.Float.coshFloat_entry
.type GHC.Float.coshFloat_entry, @object
GHC.Float.coshFloat_entry:
_c3dYO:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dYW
_c3dYX:
	leaq block_c3dYL_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3dYL
_c3dYM:
	movq (%rbx),%rax
	jmp *(%rax)
_c3dYW:
	leaq GHC.Float.coshFloat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.coshFloat_entry, .-GHC.Float.coshFloat_entry


==================== Asm code ====================
2018-03-16 15:57:52.972811006 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.coshFloat_info
.type GHC.Float.coshFloat_info, @object
GHC.Float.coshFloat_info:
	.quad	GHC.Float.coshFloat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:52.973620283 UTC

.section .text
.align 8
_c3dYL:
_c3dYL:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3dZ0
_c3dYZ:
	subq $8,%rsp
	movss 7(%rbx),%xmm0
	movl $1,%eax
	call coshf@plt
	addq $8,%rsp
	movq GHC.Types.F#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3dZ0:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3dYL, .-_c3dYL


==================== Asm code ====================
2018-03-16 15:57:52.974276706 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dYL_info:
	.quad	_c3dYL
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.97795969 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.tanhFloat_closure
.type GHC.Float.tanhFloat_closure, @object
GHC.Float.tanhFloat_closure:
	.quad	GHC.Float.tanhFloat_info


==================== Asm code ====================
2018-03-16 15:57:52.97879421 UTC

.section .text
.align 8
.globl GHC.Float.tanhFloat_entry
.type GHC.Float.tanhFloat_entry, @object
GHC.Float.tanhFloat_entry:
_c3dZl:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3dZt
_c3dZu:
	leaq block_c3dZi_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3dZi
_c3dZj:
	movq (%rbx),%rax
	jmp *(%rax)
_c3dZt:
	leaq GHC.Float.tanhFloat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.tanhFloat_entry, .-GHC.Float.tanhFloat_entry


==================== Asm code ====================
2018-03-16 15:57:52.979427818 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.tanhFloat_info
.type GHC.Float.tanhFloat_info, @object
GHC.Float.tanhFloat_info:
	.quad	GHC.Float.tanhFloat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:52.980238874 UTC

.section .text
.align 8
_c3dZi:
_c3dZi:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3dZx
_c3dZw:
	subq $8,%rsp
	movss 7(%rbx),%xmm0
	movl $1,%eax
	call tanhf@plt
	addq $8,%rsp
	movq GHC.Types.F#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3dZx:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3dZi, .-_c3dZi


==================== Asm code ====================
2018-03-16 15:57:52.981476612 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dZi_info:
	.quad	_c3dZi
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.985363229 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.powerFloat_closure
.type GHC.Float.powerFloat_closure, @object
GHC.Float.powerFloat_closure:
	.quad	GHC.Float.powerFloat_info


==================== Asm code ====================
2018-03-16 15:57:52.986228698 UTC

.section .text
.align 8
.globl GHC.Float.powerFloat_entry
.type GHC.Float.powerFloat_entry, @object
GHC.Float.powerFloat_entry:
_c3dZS:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3e06
_c3e07:
	leaq block_c3dZP_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3dZP
_c3dZQ:
	movq (%rbx),%rax
	jmp *(%rax)
_c3e06:
	leaq GHC.Float.powerFloat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.powerFloat_entry, .-GHC.Float.powerFloat_entry


==================== Asm code ====================
2018-03-16 15:57:52.986900243 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.powerFloat_info
.type GHC.Float.powerFloat_info, @object
GHC.Float.powerFloat_info:
	.quad	GHC.Float.powerFloat_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:52.987591397 UTC

.section .text
.align 8
_c3dZP:
_c3dZP:
	leaq block_c3dZV_info(%rip),%rax
	movq %rax,(%rbp)
	movss 7(%rbx),%xmm0
	movq 8(%rbp),%rbx
	movss %xmm0,8(%rbp)
	testb $7,%bl
	jne _c3dZV
_c3dZW:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3dZP, .-_c3dZP


==================== Asm code ====================
2018-03-16 15:57:52.988219964 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dZP_info:
	.quad	_c3dZP
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.989004106 UTC

.section .text
.align 8
_c3dZV:
_c3dZV:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3e0b
_c3e0a:
	subq $8,%rsp
	movss 8(%rbp),%xmm0
	movss 7(%rbx),%xmm1
	movl $2,%eax
	call powf@plt
	addq $8,%rsp
	movq GHC.Types.F#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3e0b:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3dZV, .-_c3dZV


==================== Asm code ====================
2018-03-16 15:57:52.990008914 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3dZV_info:
	.quad	_c3dZV
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.993490618 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.gtDouble_closure
.type GHC.Float.gtDouble_closure, @object
GHC.Float.gtDouble_closure:
	.quad	GHC.Float.gtDouble_info


==================== Asm code ====================
2018-03-16 15:57:52.994401504 UTC

.section .text
.align 8
.globl GHC.Float.gtDouble_entry
.type GHC.Float.gtDouble_entry, @object
GHC.Float.gtDouble_entry:
_c3e0C:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3e0G
_c3e0H:
	leaq block_c3e0z_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3e0z
_c3e0A:
	movq (%rbx),%rax
	jmp *(%rax)
_c3e0G:
	leaq GHC.Float.gtDouble_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.gtDouble_entry, .-GHC.Float.gtDouble_entry


==================== Asm code ====================
2018-03-16 15:57:52.995095694 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.gtDouble_info
.type GHC.Float.gtDouble_info, @object
GHC.Float.gtDouble_info:
	.quad	GHC.Float.gtDouble_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:52.995798414 UTC

.section .text
.align 8
_c3e0z:
_c3e0z:
	leaq block_c3e0F_info(%rip),%rax
	movq %rax,(%rbp)
	movsd 7(%rbx),%xmm0
	movq 8(%rbp),%rbx
	movsd %xmm0,8(%rbp)
	testb $7,%bl
	jne _c3e0F
_c3e0J:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3e0z, .-_c3e0z


==================== Asm code ====================
2018-03-16 15:57:52.996398714 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3e0z_info:
	.quad	_c3e0z
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:52.997090878 UTC

.section .text
.align 8
_c3e0F:
_c3e0F:
	movsd 8(%rbp),%xmm0
	ucomisd 7(%rbx),%xmm0
	seta %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl@gotpcrel(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3e0F, .-_c3e0F


==================== Asm code ====================
2018-03-16 15:57:52.997734276 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3e0F_info:
	.quad	_c3e0F
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.001108796 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.geDouble_closure
.type GHC.Float.geDouble_closure, @object
GHC.Float.geDouble_closure:
	.quad	GHC.Float.geDouble_info


==================== Asm code ====================
2018-03-16 15:57:53.002004783 UTC

.section .text
.align 8
.globl GHC.Float.geDouble_entry
.type GHC.Float.geDouble_entry, @object
GHC.Float.geDouble_entry:
_c3e1j:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3e1n
_c3e1o:
	leaq block_c3e1g_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3e1g
_c3e1h:
	movq (%rbx),%rax
	jmp *(%rax)
_c3e1n:
	leaq GHC.Float.geDouble_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.geDouble_entry, .-GHC.Float.geDouble_entry


==================== Asm code ====================
2018-03-16 15:57:53.002655681 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.geDouble_info
.type GHC.Float.geDouble_info, @object
GHC.Float.geDouble_info:
	.quad	GHC.Float.geDouble_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:53.003406754 UTC

.section .text
.align 8
_c3e1g:
_c3e1g:
	leaq block_c3e1m_info(%rip),%rax
	movq %rax,(%rbp)
	movsd 7(%rbx),%xmm0
	movq 8(%rbp),%rbx
	movsd %xmm0,8(%rbp)
	testb $7,%bl
	jne _c3e1m
_c3e1q:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3e1g, .-_c3e1g


==================== Asm code ====================
2018-03-16 15:57:53.004035546 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3e1g_info:
	.quad	_c3e1g
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.004761402 UTC

.section .text
.align 8
_c3e1m:
_c3e1m:
	movsd 8(%rbp),%xmm0
	ucomisd 7(%rbx),%xmm0
	setae %al
	movzbl %al,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl@gotpcrel(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3e1m, .-_c3e1m


==================== Asm code ====================
2018-03-16 15:57:53.005408732 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3e1m_info:
	.quad	_c3e1m
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.008949219 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.ltDouble_closure
.type GHC.Float.ltDouble_closure, @object
GHC.Float.ltDouble_closure:
	.quad	GHC.Float.ltDouble_info


==================== Asm code ====================
2018-03-16 15:57:53.010043515 UTC

.section .text
.align 8
.globl GHC.Float.ltDouble_entry
.type GHC.Float.ltDouble_entry, @object
GHC.Float.ltDouble_entry:
_c3e20:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3e24
_c3e25:
	leaq block_c3e1X_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3e1X
_c3e1Y:
	movq (%rbx),%rax
	jmp *(%rax)
_c3e24:
	leaq GHC.Float.ltDouble_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.ltDouble_entry, .-GHC.Float.ltDouble_entry


==================== Asm code ====================
2018-03-16 15:57:53.010666116 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.ltDouble_info
.type GHC.Float.ltDouble_info, @object
GHC.Float.ltDouble_info:
	.quad	GHC.Float.ltDouble_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:53.011371667 UTC

.section .text
.align 8
_c3e1X:
_c3e1X:
	leaq block_c3e23_info(%rip),%rax
	movq %rax,(%rbp)
	movsd 7(%rbx),%xmm0
	movq 8(%rbp),%rbx
	movsd %xmm0,8(%rbp)
	testb $7,%bl
	jne _c3e23
_c3e27:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3e1X, .-_c3e1X


==================== Asm code ====================
2018-03-16 15:57:53.011964338 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3e1X_info:
	.quad	_c3e1X
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.01268771 UTC

.section .text
.align 8
_c3e23:
_c3e23:
	movsd 8(%rbp),%xmm0
	ucomisd 7(%rbx),%xmm0
	setb %al
	setnp %bl
	andb %al,%bl
	movzbl %bl,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl@gotpcrel(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3e23, .-_c3e23


==================== Asm code ====================
2018-03-16 15:57:53.013358223 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3e23_info:
	.quad	_c3e23
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.016873554 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.leDouble_closure
.type GHC.Float.leDouble_closure, @object
GHC.Float.leDouble_closure:
	.quad	GHC.Float.leDouble_info


==================== Asm code ====================
2018-03-16 15:57:53.017795875 UTC

.section .text
.align 8
.globl GHC.Float.leDouble_entry
.type GHC.Float.leDouble_entry, @object
GHC.Float.leDouble_entry:
_c3e2H:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3e2L
_c3e2M:
	leaq block_c3e2E_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3e2E
_c3e2F:
	movq (%rbx),%rax
	jmp *(%rax)
_c3e2L:
	leaq GHC.Float.leDouble_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.leDouble_entry, .-GHC.Float.leDouble_entry


==================== Asm code ====================
2018-03-16 15:57:53.018412177 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.leDouble_info
.type GHC.Float.leDouble_info, @object
GHC.Float.leDouble_info:
	.quad	GHC.Float.leDouble_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:53.019130419 UTC

.section .text
.align 8
_c3e2E:
_c3e2E:
	leaq block_c3e2K_info(%rip),%rax
	movq %rax,(%rbp)
	movsd 7(%rbx),%xmm0
	movq 8(%rbp),%rbx
	movsd %xmm0,8(%rbp)
	testb $7,%bl
	jne _c3e2K
_c3e2O:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3e2E, .-_c3e2E


==================== Asm code ====================
2018-03-16 15:57:53.020200882 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3e2E_info:
	.quad	_c3e2E
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.020941762 UTC

.section .text
.align 8
_c3e2K:
_c3e2K:
	movsd 8(%rbp),%xmm0
	ucomisd 7(%rbx),%xmm0
	setbe %al
	setnp %bl
	andb %al,%bl
	movzbl %bl,%eax
	shlq $3,%rax
	movq GHC.Types.Bool_closure_tbl@gotpcrel(%rip),%rbx
	movq (%rax,%rbx,1),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3e2K, .-_c3e2K


==================== Asm code ====================
2018-03-16 15:57:53.021616099 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3e2K_info:
	.quad	_c3e2K
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.024705039 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.double2Float_closure
.type GHC.Float.double2Float_closure, @object
GHC.Float.double2Float_closure:
	.quad	GHC.Float.double2Float_info


==================== Asm code ====================
2018-03-16 15:57:53.025546941 UTC

.section .text
.align 8
.globl GHC.Float.double2Float_entry
.type GHC.Float.double2Float_entry, @object
GHC.Float.double2Float_entry:
_c3e3o:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3e3v
_c3e3w:
	leaq block_c3e3l_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3e3l
_c3e3m:
	movq (%rbx),%rax
	jmp *(%rax)
_c3e3v:
	leaq GHC.Float.double2Float_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.double2Float_entry, .-GHC.Float.double2Float_entry


==================== Asm code ====================
2018-03-16 15:57:53.026222239 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.double2Float_info
.type GHC.Float.double2Float_info, @object
GHC.Float.double2Float_info:
	.quad	GHC.Float.double2Float_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:53.026959383 UTC

.section .text
.align 8
_c3e3l:
_c3e3l:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3e3z
_c3e3y:
	movsd 7(%rbx),%xmm0
	cvtsd2ss %xmm0,%xmm0
	movq GHC.Types.F#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3e3z:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3e3l, .-_c3e3l


==================== Asm code ====================
2018-03-16 15:57:53.027626493 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3e3l_info:
	.quad	_c3e3l
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.030674794 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.float2Double_closure
.type GHC.Float.float2Double_closure, @object
GHC.Float.float2Double_closure:
	.quad	GHC.Float.float2Double_info


==================== Asm code ====================
2018-03-16 15:57:53.031436544 UTC

.section .text
.align 8
.globl GHC.Float.float2Double_entry
.type GHC.Float.float2Double_entry, @object
GHC.Float.float2Double_entry:
_c3e3V:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3e42
_c3e43:
	leaq block_c3e3S_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3e3S
_c3e3T:
	movq (%rbx),%rax
	jmp *(%rax)
_c3e42:
	leaq GHC.Float.float2Double_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.float2Double_entry, .-GHC.Float.float2Double_entry


==================== Asm code ====================
2018-03-16 15:57:53.032055591 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.float2Double_info
.type GHC.Float.float2Double_info, @object
GHC.Float.float2Double_info:
	.quad	GHC.Float.float2Double_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:53.032766384 UTC

.section .text
.align 8
_c3e3S:
_c3e3S:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3e46
_c3e45:
	movss 7(%rbx),%xmm0
	cvtss2sd %xmm0,%xmm0
	movq GHC.Types.D#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3e46:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3e3S, .-_c3e3S


==================== Asm code ====================
2018-03-16 15:57:53.033944464 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3e3S_info:
	.quad	_c3e3S
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.037068865 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.expDouble_closure
.type GHC.Float.expDouble_closure, @object
GHC.Float.expDouble_closure:
	.quad	GHC.Float.expDouble_info


==================== Asm code ====================
2018-03-16 15:57:53.037906476 UTC

.section .text
.align 8
.globl GHC.Float.expDouble_entry
.type GHC.Float.expDouble_entry, @object
GHC.Float.expDouble_entry:
_c3e4s:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3e4A
_c3e4B:
	leaq block_c3e4p_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3e4p
_c3e4q:
	movq (%rbx),%rax
	jmp *(%rax)
_c3e4A:
	leaq GHC.Float.expDouble_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.expDouble_entry, .-GHC.Float.expDouble_entry


==================== Asm code ====================
2018-03-16 15:57:53.038585421 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.expDouble_info
.type GHC.Float.expDouble_info, @object
GHC.Float.expDouble_info:
	.quad	GHC.Float.expDouble_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:53.03938368 UTC

.section .text
.align 8
_c3e4p:
_c3e4p:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3e4E
_c3e4D:
	subq $8,%rsp
	movsd 7(%rbx),%xmm0
	movl $1,%eax
	call exp@plt
	addq $8,%rsp
	movq GHC.Types.D#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3e4E:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3e4p, .-_c3e4p


==================== Asm code ====================
2018-03-16 15:57:53.03998343 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3e4p_info:
	.quad	_c3e4p
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.044191902 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fFloatingDouble_$clog1pexp_closure
.type GHC.Float.$fFloatingDouble_$clog1pexp_closure, @object
GHC.Float.$fFloatingDouble_$clog1pexp_closure:
	.quad	GHC.Float.$fFloatingDouble_$clog1pexp_info


==================== Asm code ====================
2018-03-16 15:57:53.045510033 UTC

.section .text
.align 8
.globl GHC.Float.$fFloatingDouble_$clog1pexp_entry
.type GHC.Float.$fFloatingDouble_$clog1pexp_entry, @object
GHC.Float.$fFloatingDouble_$clog1pexp_entry:
_c3e4Z:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3e50
_c3e51:
	leaq block_c3e4W_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3e4W
_c3e4X:
	movq (%rbx),%rax
	jmp *(%rax)
_c3e50:
	leaq GHC.Float.$fFloatingDouble_$clog1pexp_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fFloatingDouble_$clog1pexp_entry, .-GHC.Float.$fFloatingDouble_$clog1pexp_entry


==================== Asm code ====================
2018-03-16 15:57:53.046162273 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fFloatingDouble_$clog1pexp_info
.type GHC.Float.$fFloatingDouble_$clog1pexp_info, @object
GHC.Float.$fFloatingDouble_$clog1pexp_info:
	.quad	GHC.Float.$fFloatingDouble_$clog1pexp_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:53.047251415 UTC

.section .text
.align 8
_c3e4W:
_c3e4W:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3e56
_c3e55:
	movsd 7(%rbx),%xmm0
	ucomisd _n3e5M(%rip),%xmm0
	jp _c3e5t
	jbe _c3e5C
_c3e5t:
	ucomisd _n3e5W(%rip),%xmm0
	jp _c3e5d
	jbe _c3e5r
_c3e5d:
	addq $-16,%r12
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c3e5C:
	subq $8,%rsp
	movl $1,%eax
	call exp@plt
	addq $8,%rsp
	subq $8,%rsp
	movl $1,%eax
	call ghczuwrapperZC3ZCbaseZCGHCziFloatZClog1p@plt
	addq $8,%rsp
	movq GHC.Types.D#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3e5r:
	subq $8,%rsp
	movsd %xmm0,%xmm1
	movsd _n3e5Q(%rip),%xmm2
	xorpd %xmm2,%xmm0
	movl $1,%eax
	movsd %xmm1,72(%rsp)
	call exp@plt
	addq $8,%rsp
	movq GHC.Types.D#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movsd 64(%rsp),%xmm1
	addsd %xmm0,%xmm1
	movsd %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3e56:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3e4W, .-_c3e4W
.section .rodata
.align 8
.align 8
_n3e5M:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	50
	.byte	64
.section .rodata
.align 8
.align 8
_n3e5Q:
	.quad	-9223372036854775808
.section .rodata
.align 8
.align 8
_n3e5W:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	89
	.byte	64


==================== Asm code ====================
2018-03-16 15:57:53.04816137 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3e4W_info:
	.quad	_c3e4W
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.051379825 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.logDouble_closure
.type GHC.Float.logDouble_closure, @object
GHC.Float.logDouble_closure:
	.quad	GHC.Float.logDouble_info


==================== Asm code ====================
2018-03-16 15:57:53.052217603 UTC

.section .text
.align 8
.globl GHC.Float.logDouble_entry
.type GHC.Float.logDouble_entry, @object
GHC.Float.logDouble_entry:
_c3e69:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3e6h
_c3e6i:
	leaq block_c3e66_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3e66
_c3e67:
	movq (%rbx),%rax
	jmp *(%rax)
_c3e6h:
	leaq GHC.Float.logDouble_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.logDouble_entry, .-GHC.Float.logDouble_entry


==================== Asm code ====================
2018-03-16 15:57:53.052907148 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.logDouble_info
.type GHC.Float.logDouble_info, @object
GHC.Float.logDouble_info:
	.quad	GHC.Float.logDouble_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:53.054155197 UTC

.section .text
.align 8
_c3e66:
_c3e66:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3e6l
_c3e6k:
	subq $8,%rsp
	movsd 7(%rbx),%xmm0
	movl $1,%eax
	call log@plt
	addq $8,%rsp
	movq GHC.Types.D#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3e6l:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3e66, .-_c3e66


==================== Asm code ====================
2018-03-16 15:57:53.054819563 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3e66_info:
	.quad	_c3e66
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.058719003 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fFloatingDouble_$clogBase_closure
.type GHC.Float.$fFloatingDouble_$clogBase_closure, @object
GHC.Float.$fFloatingDouble_$clogBase_closure:
	.quad	GHC.Float.$fFloatingDouble_$clogBase_info


==================== Asm code ====================
2018-03-16 15:57:53.059576679 UTC

.section .text
.align 8
.globl GHC.Float.$fFloatingDouble_$clogBase_entry
.type GHC.Float.$fFloatingDouble_$clogBase_entry, @object
GHC.Float.$fFloatingDouble_$clogBase_entry:
_c3e6G:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3e70
_c3e71:
	leaq block_c3e6D_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3e6D
_c3e6E:
	movq (%rbx),%rax
	jmp *(%rax)
_c3e70:
	leaq GHC.Float.$fFloatingDouble_$clogBase_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fFloatingDouble_$clogBase_entry, .-GHC.Float.$fFloatingDouble_$clogBase_entry


==================== Asm code ====================
2018-03-16 15:57:53.060255825 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fFloatingDouble_$clogBase_info
.type GHC.Float.$fFloatingDouble_$clogBase_info, @object
GHC.Float.$fFloatingDouble_$clogBase_info:
	.quad	GHC.Float.$fFloatingDouble_$clogBase_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:53.061663876 UTC

.section .text
.align 8
_c3e6D:
_c3e6D:
	movq 8(%rbp),%rax
	subq $8,%rsp
	movsd 7(%rbx),%xmm0
	movq %rax,%rbx
	movl $1,%eax
	call log@plt
	addq $8,%rsp
	leaq block_c3e6N_info(%rip),%rax
	movq %rax,(%rbp)
	movsd %xmm0,8(%rbp)
	testb $7,%bl
	jne _c3e6N
_c3e6O:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3e6D, .-_c3e6D


==================== Asm code ====================
2018-03-16 15:57:53.06239138 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3e6D_info:
	.quad	_c3e6D
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.063186617 UTC

.section .text
.align 8
_c3e6N:
_c3e6N:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3e75
_c3e74:
	movsd 8(%rbp),%xmm0
	subq $8,%rsp
	movsd %xmm0,%xmm1
	movsd 7(%rbx),%xmm0
	movl $1,%eax
	movsd %xmm1,72(%rsp)
	call log@plt
	addq $8,%rsp
	movq GHC.Types.D#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movsd 64(%rsp),%xmm1
	divsd %xmm0,%xmm1
	movsd %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3e75:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3e6N, .-_c3e6N


==================== Asm code ====================
2018-03-16 15:57:53.063877192 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3e6N_info:
	.quad	_c3e6N
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.067047233 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.sqrtDouble_closure
.type GHC.Float.sqrtDouble_closure, @object
GHC.Float.sqrtDouble_closure:
	.quad	GHC.Float.sqrtDouble_info


==================== Asm code ====================
2018-03-16 15:57:53.067856528 UTC

.section .text
.align 8
.globl GHC.Float.sqrtDouble_entry
.type GHC.Float.sqrtDouble_entry, @object
GHC.Float.sqrtDouble_entry:
_c3e7y:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3e7G
_c3e7H:
	leaq block_c3e7v_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3e7v
_c3e7w:
	movq (%rbx),%rax
	jmp *(%rax)
_c3e7G:
	leaq GHC.Float.sqrtDouble_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.sqrtDouble_entry, .-GHC.Float.sqrtDouble_entry


==================== Asm code ====================
2018-03-16 15:57:53.068524672 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.sqrtDouble_info
.type GHC.Float.sqrtDouble_info, @object
GHC.Float.sqrtDouble_info:
	.quad	GHC.Float.sqrtDouble_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:53.069292118 UTC

.section .text
.align 8
_c3e7v:
_c3e7v:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3e7K
_c3e7J:
	movsd 7(%rbx),%xmm0
	sqrtsd %xmm0,%xmm0
	movq GHC.Types.D#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3e7K:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3e7v, .-_c3e7v


==================== Asm code ====================
2018-03-16 15:57:53.069956629 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3e7v_info:
	.quad	_c3e7v
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.073147387 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.sinDouble_closure
.type GHC.Float.sinDouble_closure, @object
GHC.Float.sinDouble_closure:
	.quad	GHC.Float.sinDouble_info


==================== Asm code ====================
2018-03-16 15:57:53.074001573 UTC

.section .text
.align 8
.globl GHC.Float.sinDouble_entry
.type GHC.Float.sinDouble_entry, @object
GHC.Float.sinDouble_entry:
_c3e86:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3e8e
_c3e8f:
	leaq block_c3e83_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3e83
_c3e84:
	movq (%rbx),%rax
	jmp *(%rax)
_c3e8e:
	leaq GHC.Float.sinDouble_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.sinDouble_entry, .-GHC.Float.sinDouble_entry


==================== Asm code ====================
2018-03-16 15:57:53.07464494 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.sinDouble_info
.type GHC.Float.sinDouble_info, @object
GHC.Float.sinDouble_info:
	.quad	GHC.Float.sinDouble_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:53.075396393 UTC

.section .text
.align 8
_c3e83:
_c3e83:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3e8i
_c3e8h:
	subq $8,%rsp
	movsd 7(%rbx),%xmm0
	movl $1,%eax
	call sin@plt
	addq $8,%rsp
	movq GHC.Types.D#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3e8i:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3e83, .-_c3e83


==================== Asm code ====================
2018-03-16 15:57:53.07608171 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3e83_info:
	.quad	_c3e83
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.079292917 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.cosDouble_closure
.type GHC.Float.cosDouble_closure, @object
GHC.Float.cosDouble_closure:
	.quad	GHC.Float.cosDouble_info


==================== Asm code ====================
2018-03-16 15:57:53.080176676 UTC

.section .text
.align 8
.globl GHC.Float.cosDouble_entry
.type GHC.Float.cosDouble_entry, @object
GHC.Float.cosDouble_entry:
_c3e8D:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3e8L
_c3e8M:
	leaq block_c3e8A_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3e8A
_c3e8B:
	movq (%rbx),%rax
	jmp *(%rax)
_c3e8L:
	leaq GHC.Float.cosDouble_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.cosDouble_entry, .-GHC.Float.cosDouble_entry


==================== Asm code ====================
2018-03-16 15:57:53.080841015 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.cosDouble_info
.type GHC.Float.cosDouble_info, @object
GHC.Float.cosDouble_info:
	.quad	GHC.Float.cosDouble_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:53.081993377 UTC

.section .text
.align 8
_c3e8A:
_c3e8A:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3e8P
_c3e8O:
	subq $8,%rsp
	movsd 7(%rbx),%xmm0
	movl $1,%eax
	call cos@plt
	addq $8,%rsp
	movq GHC.Types.D#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3e8P:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3e8A, .-_c3e8A


==================== Asm code ====================
2018-03-16 15:57:53.082649667 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3e8A_info:
	.quad	_c3e8A
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.085906364 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.tanDouble_closure
.type GHC.Float.tanDouble_closure, @object
GHC.Float.tanDouble_closure:
	.quad	GHC.Float.tanDouble_info


==================== Asm code ====================
2018-03-16 15:57:53.086792231 UTC

.section .text
.align 8
.globl GHC.Float.tanDouble_entry
.type GHC.Float.tanDouble_entry, @object
GHC.Float.tanDouble_entry:
_c3e9a:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3e9i
_c3e9j:
	leaq block_c3e97_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3e97
_c3e98:
	movq (%rbx),%rax
	jmp *(%rax)
_c3e9i:
	leaq GHC.Float.tanDouble_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.tanDouble_entry, .-GHC.Float.tanDouble_entry


==================== Asm code ====================
2018-03-16 15:57:53.087455979 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.tanDouble_info
.type GHC.Float.tanDouble_info, @object
GHC.Float.tanDouble_info:
	.quad	GHC.Float.tanDouble_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:53.088272573 UTC

.section .text
.align 8
_c3e97:
_c3e97:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3e9m
_c3e9l:
	subq $8,%rsp
	movsd 7(%rbx),%xmm0
	movl $1,%eax
	call tan@plt
	addq $8,%rsp
	movq GHC.Types.D#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3e9m:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3e97, .-_c3e97


==================== Asm code ====================
2018-03-16 15:57:53.088923167 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3e97_info:
	.quad	_c3e97
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.092121192 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.asinDouble_closure
.type GHC.Float.asinDouble_closure, @object
GHC.Float.asinDouble_closure:
	.quad	GHC.Float.asinDouble_info


==================== Asm code ====================
2018-03-16 15:57:53.092939104 UTC

.section .text
.align 8
.globl GHC.Float.asinDouble_entry
.type GHC.Float.asinDouble_entry, @object
GHC.Float.asinDouble_entry:
_c3e9H:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3e9P
_c3e9Q:
	leaq block_c3e9E_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3e9E
_c3e9F:
	movq (%rbx),%rax
	jmp *(%rax)
_c3e9P:
	leaq GHC.Float.asinDouble_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.asinDouble_entry, .-GHC.Float.asinDouble_entry


==================== Asm code ====================
2018-03-16 15:57:53.093738948 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.asinDouble_info
.type GHC.Float.asinDouble_info, @object
GHC.Float.asinDouble_info:
	.quad	GHC.Float.asinDouble_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:53.094464563 UTC

.section .text
.align 8
_c3e9E:
_c3e9E:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3e9T
_c3e9S:
	subq $8,%rsp
	movsd 7(%rbx),%xmm0
	movl $1,%eax
	call asin@plt
	addq $8,%rsp
	movq GHC.Types.D#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3e9T:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3e9E, .-_c3e9E


==================== Asm code ====================
2018-03-16 15:57:53.095145676 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3e9E_info:
	.quad	_c3e9E
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.09833201 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.acosDouble_closure
.type GHC.Float.acosDouble_closure, @object
GHC.Float.acosDouble_closure:
	.quad	GHC.Float.acosDouble_info


==================== Asm code ====================
2018-03-16 15:57:53.099686183 UTC

.section .text
.align 8
.globl GHC.Float.acosDouble_entry
.type GHC.Float.acosDouble_entry, @object
GHC.Float.acosDouble_entry:
_c3eae:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3eam
_c3ean:
	leaq block_c3eab_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3eab
_c3eac:
	movq (%rbx),%rax
	jmp *(%rax)
_c3eam:
	leaq GHC.Float.acosDouble_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.acosDouble_entry, .-GHC.Float.acosDouble_entry


==================== Asm code ====================
2018-03-16 15:57:53.100448085 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.acosDouble_info
.type GHC.Float.acosDouble_info, @object
GHC.Float.acosDouble_info:
	.quad	GHC.Float.acosDouble_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:53.101318269 UTC

.section .text
.align 8
_c3eab:
_c3eab:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3eaq
_c3eap:
	subq $8,%rsp
	movsd 7(%rbx),%xmm0
	movl $1,%eax
	call acos@plt
	addq $8,%rsp
	movq GHC.Types.D#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3eaq:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3eab, .-_c3eab


==================== Asm code ====================
2018-03-16 15:57:53.101983878 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3eab_info:
	.quad	_c3eab
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.105084715 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.atanDouble_closure
.type GHC.Float.atanDouble_closure, @object
GHC.Float.atanDouble_closure:
	.quad	GHC.Float.atanDouble_info


==================== Asm code ====================
2018-03-16 15:57:53.105900119 UTC

.section .text
.align 8
.globl GHC.Float.atanDouble_entry
.type GHC.Float.atanDouble_entry, @object
GHC.Float.atanDouble_entry:
_c3eaL:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3eaT
_c3eaU:
	leaq block_c3eaI_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3eaI
_c3eaJ:
	movq (%rbx),%rax
	jmp *(%rax)
_c3eaT:
	leaq GHC.Float.atanDouble_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.atanDouble_entry, .-GHC.Float.atanDouble_entry


==================== Asm code ====================
2018-03-16 15:57:53.106559163 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.atanDouble_info
.type GHC.Float.atanDouble_info, @object
GHC.Float.atanDouble_info:
	.quad	GHC.Float.atanDouble_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:53.107371273 UTC

.section .text
.align 8
_c3eaI:
_c3eaI:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3eaX
_c3eaW:
	subq $8,%rsp
	movsd 7(%rbx),%xmm0
	movl $1,%eax
	call atan@plt
	addq $8,%rsp
	movq GHC.Types.D#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3eaX:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3eaI, .-_c3eaI


==================== Asm code ====================
2018-03-16 15:57:53.108046308 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3eaI_info:
	.quad	_c3eaI
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.11180195 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.sinhDouble_closure
.type GHC.Float.sinhDouble_closure, @object
GHC.Float.sinhDouble_closure:
	.quad	GHC.Float.sinhDouble_info


==================== Asm code ====================
2018-03-16 15:57:53.112574419 UTC

.section .text
.align 8
.globl GHC.Float.sinhDouble_entry
.type GHC.Float.sinhDouble_entry, @object
GHC.Float.sinhDouble_entry:
_c3ebi:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3ebq
_c3ebr:
	leaq block_c3ebf_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3ebf
_c3ebg:
	movq (%rbx),%rax
	jmp *(%rax)
_c3ebq:
	leaq GHC.Float.sinhDouble_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.sinhDouble_entry, .-GHC.Float.sinhDouble_entry


==================== Asm code ====================
2018-03-16 15:57:53.113299771 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.sinhDouble_info
.type GHC.Float.sinhDouble_info, @object
GHC.Float.sinhDouble_info:
	.quad	GHC.Float.sinhDouble_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:53.114091653 UTC

.section .text
.align 8
_c3ebf:
_c3ebf:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3ebu
_c3ebt:
	subq $8,%rsp
	movsd 7(%rbx),%xmm0
	movl $1,%eax
	call sinh@plt
	addq $8,%rsp
	movq GHC.Types.D#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3ebu:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3ebf, .-_c3ebf


==================== Asm code ====================
2018-03-16 15:57:53.114756281 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3ebf_info:
	.quad	_c3ebf
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.117966743 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.coshDouble_closure
.type GHC.Float.coshDouble_closure, @object
GHC.Float.coshDouble_closure:
	.quad	GHC.Float.coshDouble_info


==================== Asm code ====================
2018-03-16 15:57:53.1187792 UTC

.section .text
.align 8
.globl GHC.Float.coshDouble_entry
.type GHC.Float.coshDouble_entry, @object
GHC.Float.coshDouble_entry:
_c3ebP:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3ebX
_c3ebY:
	leaq block_c3ebM_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3ebM
_c3ebN:
	movq (%rbx),%rax
	jmp *(%rax)
_c3ebX:
	leaq GHC.Float.coshDouble_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.coshDouble_entry, .-GHC.Float.coshDouble_entry


==================== Asm code ====================
2018-03-16 15:57:53.119411579 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.coshDouble_info
.type GHC.Float.coshDouble_info, @object
GHC.Float.coshDouble_info:
	.quad	GHC.Float.coshDouble_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:53.120220688 UTC

.section .text
.align 8
_c3ebM:
_c3ebM:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3ec1
_c3ec0:
	subq $8,%rsp
	movsd 7(%rbx),%xmm0
	movl $1,%eax
	call cosh@plt
	addq $8,%rsp
	movq GHC.Types.D#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3ec1:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3ebM, .-_c3ebM


==================== Asm code ====================
2018-03-16 15:57:53.120857037 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3ebM_info:
	.quad	_c3ebM
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.12410847 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.tanhDouble_closure
.type GHC.Float.tanhDouble_closure, @object
GHC.Float.tanhDouble_closure:
	.quad	GHC.Float.tanhDouble_info


==================== Asm code ====================
2018-03-16 15:57:53.124892792 UTC

.section .text
.align 8
.globl GHC.Float.tanhDouble_entry
.type GHC.Float.tanhDouble_entry, @object
GHC.Float.tanhDouble_entry:
_c3ecm:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3ecu
_c3ecv:
	leaq block_c3ecj_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3ecj
_c3eck:
	movq (%rbx),%rax
	jmp *(%rax)
_c3ecu:
	leaq GHC.Float.tanhDouble_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.tanhDouble_entry, .-GHC.Float.tanhDouble_entry


==================== Asm code ====================
2018-03-16 15:57:53.125701404 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.tanhDouble_info
.type GHC.Float.tanhDouble_info, @object
GHC.Float.tanhDouble_info:
	.quad	GHC.Float.tanhDouble_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:53.126515597 UTC

.section .text
.align 8
_c3ecj:
_c3ecj:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3ecy
_c3ecx:
	subq $8,%rsp
	movsd 7(%rbx),%xmm0
	movl $1,%eax
	call tanh@plt
	addq $8,%rsp
	movq GHC.Types.D#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3ecy:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3ecj, .-_c3ecj


==================== Asm code ====================
2018-03-16 15:57:53.127212706 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3ecj_info:
	.quad	_c3ecj
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.131018279 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.powerDouble_closure
.type GHC.Float.powerDouble_closure, @object
GHC.Float.powerDouble_closure:
	.quad	GHC.Float.powerDouble_info


==================== Asm code ====================
2018-03-16 15:57:53.131908439 UTC

.section .text
.align 8
.globl GHC.Float.powerDouble_entry
.type GHC.Float.powerDouble_entry, @object
GHC.Float.powerDouble_entry:
_c3ecT:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3ed7
_c3ed8:
	leaq block_c3ecQ_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3ecQ
_c3ecR:
	movq (%rbx),%rax
	jmp *(%rax)
_c3ed7:
	leaq GHC.Float.powerDouble_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.powerDouble_entry, .-GHC.Float.powerDouble_entry


==================== Asm code ====================
2018-03-16 15:57:53.132619394 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.powerDouble_info
.type GHC.Float.powerDouble_info, @object
GHC.Float.powerDouble_info:
	.quad	GHC.Float.powerDouble_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:53.133678036 UTC

.section .text
.align 8
_c3ecQ:
_c3ecQ:
	leaq block_c3ecW_info(%rip),%rax
	movq %rax,(%rbp)
	movsd 7(%rbx),%xmm0
	movq 8(%rbp),%rbx
	movsd %xmm0,8(%rbp)
	testb $7,%bl
	jne _c3ecW
_c3ecX:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3ecQ, .-_c3ecQ


==================== Asm code ====================
2018-03-16 15:57:53.134272823 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3ecQ_info:
	.quad	_c3ecQ
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.135096856 UTC

.section .text
.align 8
_c3ecW:
_c3ecW:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3edc
_c3edb:
	subq $8,%rsp
	movsd 8(%rbp),%xmm0
	movsd 7(%rbx),%xmm1
	movl $2,%eax
	call pow@plt
	addq $8,%rsp
	movq GHC.Types.D#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3edc:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3ecW, .-_c3ecW


==================== Asm code ====================
2018-03-16 15:57:53.135773726 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3ecW_info:
	.quad	_c3ecW
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.139580464 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.word2Double_closure
.type GHC.Float.word2Double_closure, @object
GHC.Float.word2Double_closure:
	.quad	GHC.Float.word2Double_info


==================== Asm code ====================
2018-03-16 15:57:53.140460342 UTC

.section .text
.align 8
.globl GHC.Float.word2Double_entry
.type GHC.Float.word2Double_entry, @object
GHC.Float.word2Double_entry:
_c3edD:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3edL
_c3edM:
	leaq block_c3edA_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3edA
_c3edB:
	movq (%rbx),%rax
	jmp *(%rax)
_c3edL:
	leaq GHC.Float.word2Double_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.word2Double_entry, .-GHC.Float.word2Double_entry


==================== Asm code ====================
2018-03-16 15:57:53.141152971 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.word2Double_info
.type GHC.Float.word2Double_info, @object
GHC.Float.word2Double_info:
	.quad	GHC.Float.word2Double_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:53.141952197 UTC

.section .text
.align 8
_c3edA:
_c3edA:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3edP
_c3edO:
	subq $8,%rsp
	movq 7(%rbx),%rdi
	xorl %eax,%eax
	call hs_word2float64@plt
	addq $8,%rsp
	movq GHC.Types.D#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3edP:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3edA, .-_c3edA


==================== Asm code ====================
2018-03-16 15:57:53.142604447 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3edA_info:
	.quad	_c3edA
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.145733427 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.word2Float_closure
.type GHC.Float.word2Float_closure, @object
GHC.Float.word2Float_closure:
	.quad	GHC.Float.word2Float_info


==================== Asm code ====================
2018-03-16 15:57:53.146601238 UTC

.section .text
.align 8
.globl GHC.Float.word2Float_entry
.type GHC.Float.word2Float_entry, @object
GHC.Float.word2Float_entry:
_c3eea:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3eei
_c3eej:
	leaq block_c3ee7_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3ee7
_c3ee8:
	movq (%rbx),%rax
	jmp *(%rax)
_c3eei:
	leaq GHC.Float.word2Float_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.word2Float_entry, .-GHC.Float.word2Float_entry


==================== Asm code ====================
2018-03-16 15:57:53.147292702 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.word2Float_info
.type GHC.Float.word2Float_info, @object
GHC.Float.word2Float_info:
	.quad	GHC.Float.word2Float_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:53.148090802 UTC

.section .text
.align 8
_c3ee7:
_c3ee7:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3eem
_c3eel:
	subq $8,%rsp
	movq 7(%rbx),%rdi
	xorl %eax,%eax
	call hs_word2float32@plt
	addq $8,%rsp
	movq GHC.Types.F#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3eem:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3ee7, .-_c3ee7


==================== Asm code ====================
2018-03-16 15:57:53.148765022 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3ee7_info:
	.quad	_c3ee7
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.150432082 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Float.$trModule4_bytes
.type GHC.Float.$trModule4_bytes, @object
GHC.Float.$trModule4_bytes:
	.asciz "base"


==================== Asm code ====================
2018-03-16 15:57:53.152127503 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$trModule3_closure
.type GHC.Float.$trModule3_closure, @object
GHC.Float.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Float.$trModule4_bytes


==================== Asm code ====================
2018-03-16 15:57:53.154007421 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Float.$trModule2_bytes
.type GHC.Float.$trModule2_bytes, @object
GHC.Float.$trModule2_bytes:
	.asciz "GHC.Float"


==================== Asm code ====================
2018-03-16 15:57:53.155615863 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$trModule1_closure
.type GHC.Float.$trModule1_closure, @object
GHC.Float.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Float.$trModule2_bytes


==================== Asm code ====================
2018-03-16 15:57:53.157426753 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$trModule_closure
.type GHC.Float.$trModule_closure, @object
GHC.Float.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	GHC.Float.$trModule3_closure+1
	.quad	GHC.Float.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.15915129 UTC

.section .data
.align 8
.align 1
$krep_r2UpC_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Types.$tcBool_closure
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.160839839 UTC

.section .data
.align 8
.align 1
$krep1_r2UpD_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Types.$tcInt_closure
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.162789264 UTC

.section .data
.align 8
.align 1
$krep2_r2UpE_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Integer.Type.$tcInteger_closure
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.16449265 UTC

.section .data
.align 8
.align 1
$krep3_r2UpF_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Types.$tcConstraint_closure
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.166253158 UTC

.section .data
.align 8
.align 1
$krep4_r2UpG_closure:
	.quad	:_con_info
	.quad	$krep1_r2UpD_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.168605304 UTC

.section .data
.align 8
.align 1
$krep5_r2UpH_closure:
	.quad	:_con_info
	.quad	$krep2_r2UpE_closure+1
	.quad	$krep4_r2UpG_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.1703846 UTC

.section .data
.align 8
.align 1
$krep6_r2UpI_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Tuple.$tc(,)_closure
	.quad	$krep5_r2UpH_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.17202627 UTC

.section .data
.align 8
.align 1
$krep7_r2UpJ_closure:
	.quad	:_con_info
	.quad	$krep1_r2UpD_closure+1
	.quad	$krep4_r2UpG_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.17420644 UTC

.section .data
.align 8
.align 1
$krep8_r2UpK_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Tuple.$tc(,)_closure
	.quad	$krep7_r2UpJ_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.175952058 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$tcFloating1_closure
.type GHC.Float.$tcFloating1_closure, @object
GHC.Float.$tcFloating1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	GHC.Types.krep$*_closure
	.quad	$krep3_r2UpF_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.177742151 UTC

.section .data
.align 8
.align 1
$krep9_r2UpL_closure:
	.quad	GHC.Types.KindRepVar_con_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:53.179397462 UTC

.section .data
.align 8
.align 1
$krep10_r2UpM_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep9_r2UpL_closure+2
	.quad	$krep9_r2UpL_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.181104325 UTC

.section .data
.align 8
.align 1
$krep11_r2UpN_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep1_r2UpD_closure+1
	.quad	$krep10_r2UpM_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.18280727 UTC

.section .data
.align 8
.align 1
$krep12_r2UpO_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep9_r2UpL_closure+2
	.quad	$krep10_r2UpM_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.184474341 UTC

.section .data
.align 8
.align 1
$krep13_r2UpP_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep9_r2UpL_closure+2
	.quad	$krep8_r2UpK_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.186242474 UTC

.section .data
.align 8
.align 1
$krep14_r2UpQ_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep9_r2UpL_closure+2
	.quad	$krep6_r2UpI_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.187980443 UTC

.section .data
.align 8
.align 1
$krep15_r2UpR_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep9_r2UpL_closure+2
	.quad	$krep2_r2UpE_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.189781889 UTC

.section .data
.align 8
.align 1
$krep16_r2UpS_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep9_r2UpL_closure+2
	.quad	$krep1_r2UpD_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.191570566 UTC

.section .data
.align 8
.align 1
$krep17_r2UpT_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep9_r2UpL_closure+2
	.quad	$krep_r2UpC_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.193873314 UTC

.section .data
.align 8
.align 1
$krep18_r2UpU_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep1_r2UpD_closure+1
	.quad	$krep9_r2UpL_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.196129082 UTC

.section .data
.align 8
.align 1
$krep19_r2UpV_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep2_r2UpE_closure+1
	.quad	$krep18_r2UpU_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.199115963 UTC

.section .data
.align 8
.align 1
$krep20_r2UpW_closure:
	.quad	:_con_info
	.quad	$krep9_r2UpL_closure+2
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.201509601 UTC

.section .data
.align 8
.align 1
$krep21_r2UpX_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Real.$tcRealFrac_closure
	.quad	$krep20_r2UpW_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.203972382 UTC

.section .data
.align 8
.align 1
$krep22_r2UpY_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Real.$tcFractional_closure
	.quad	$krep20_r2UpW_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.206195398 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Float.$tcFloating3_bytes
.type GHC.Float.$tcFloating3_bytes, @object
GHC.Float.$tcFloating3_bytes:
	.asciz "Floating"


==================== Asm code ====================
2018-03-16 15:57:53.208477055 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$tcFloating2_closure
.type GHC.Float.$tcFloating2_closure, @object
GHC.Float.$tcFloating2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Float.$tcFloating3_bytes


==================== Asm code ====================
2018-03-16 15:57:53.210924438 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$tcFloating_closure
.type GHC.Float.$tcFloating_closure, @object
GHC.Float.$tcFloating_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Float.$trModule_closure+1
	.quad	GHC.Float.$tcFloating2_closure+1
	.quad	GHC.Float.$tcFloating1_closure+4
	.quad	7129224378091624681
	.quad	-3282061009426630484
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.213234659 UTC

.section .data
.align 8
.align 1
$krep23_r2UpZ_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Float.$tcFloating_closure+1
	.quad	$krep20_r2UpW_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.215265641 UTC

.section .data
.align 8
.align 1
$krep24_r2Uq0_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep10_r2UpM_closure+4
	.quad	$krep23_r2UpZ_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.217139338 UTC

.section .data
.align 8
.align 1
$krep25_r2Uq1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep10_r2UpM_closure+4
	.quad	$krep24_r2Uq0_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.218923283 UTC

.section .data
.align 8
.align 1
$krep26_r2Uq2_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep10_r2UpM_closure+4
	.quad	$krep25_r2Uq1_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.220747597 UTC

.section .data
.align 8
.align 1
$krep27_r2Uq3_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep10_r2UpM_closure+4
	.quad	$krep26_r2Uq2_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.222473317 UTC

.section .data
.align 8
.align 1
$krep28_r2Uq4_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep10_r2UpM_closure+4
	.quad	$krep27_r2Uq3_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.224714405 UTC

.section .data
.align 8
.align 1
$krep29_r2Uq5_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep10_r2UpM_closure+4
	.quad	$krep28_r2Uq4_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.226569969 UTC

.section .data
.align 8
.align 1
$krep30_r2Uq6_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep10_r2UpM_closure+4
	.quad	$krep29_r2Uq5_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.22822106 UTC

.section .data
.align 8
.align 1
$krep31_r2Uq7_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep10_r2UpM_closure+4
	.quad	$krep30_r2Uq6_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.230461613 UTC

.section .data
.align 8
.align 1
$krep32_r2Uq8_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep10_r2UpM_closure+4
	.quad	$krep31_r2Uq7_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.232233191 UTC

.section .data
.align 8
.align 1
$krep33_r2Uq9_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep10_r2UpM_closure+4
	.quad	$krep32_r2Uq8_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.233971932 UTC

.section .data
.align 8
.align 1
$krep34_r2Uqa_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep10_r2UpM_closure+4
	.quad	$krep33_r2Uq9_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.235707649 UTC

.section .data
.align 8
.align 1
$krep35_r2Uqb_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep10_r2UpM_closure+4
	.quad	$krep34_r2Uqa_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.237838636 UTC

.section .data
.align 8
.align 1
$krep36_r2Uqc_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep10_r2UpM_closure+4
	.quad	$krep35_r2Uqb_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.239498554 UTC

.section .data
.align 8
.align 1
$krep37_r2Uqd_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep10_r2UpM_closure+4
	.quad	$krep36_r2Uqc_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.241114539 UTC

.section .data
.align 8
.align 1
$krep38_r2Uqe_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep10_r2UpM_closure+4
	.quad	$krep37_r2Uqd_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.242827687 UTC

.section .data
.align 8
.align 1
$krep39_r2Uqf_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep10_r2UpM_closure+4
	.quad	$krep38_r2Uqe_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.244459016 UTC

.section .data
.align 8
.align 1
$krep40_r2Uqg_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep12_r2UpO_closure+4
	.quad	$krep39_r2Uqf_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.24606665 UTC

.section .data
.align 8
.align 1
$krep41_r2Uqh_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep12_r2UpO_closure+4
	.quad	$krep40_r2Uqg_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.247905143 UTC

.section .data
.align 8
.align 1
$krep42_r2Uqi_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep10_r2UpM_closure+4
	.quad	$krep41_r2Uqh_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.250265965 UTC

.section .data
.align 8
.align 1
$krep43_r2Uqj_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep10_r2UpM_closure+4
	.quad	$krep42_r2Uqi_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.253157641 UTC

.section .data
.align 8
.align 1
$krep44_r2Uqk_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep10_r2UpM_closure+4
	.quad	$krep43_r2Uqj_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.255517286 UTC

.section .data
.align 8
.align 1
$krep45_r2Uql_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep9_r2UpL_closure+2
	.quad	$krep44_r2Uqk_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.257998999 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$tc'C:Floating1_closure
.type GHC.Float.$tc'C:Floating1_closure, @object
GHC.Float.$tc'C:Floating1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep22_r2UpY_closure+1
	.quad	$krep45_r2Uql_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.260195928 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Float.$tc'C:Floating3_bytes
.type GHC.Float.$tc'C:Floating3_bytes, @object
GHC.Float.$tc'C:Floating3_bytes:
	.asciz "'C:Floating"


==================== Asm code ====================
2018-03-16 15:57:53.26306206 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$tc'C:Floating2_closure
.type GHC.Float.$tc'C:Floating2_closure, @object
GHC.Float.$tc'C:Floating2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Float.$tc'C:Floating3_bytes


==================== Asm code ====================
2018-03-16 15:57:53.265612299 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$tc'C:Floating_closure
.type GHC.Float.$tc'C:Floating_closure, @object
GHC.Float.$tc'C:Floating_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Float.$trModule_closure+1
	.quad	GHC.Float.$tc'C:Floating2_closure+1
	.quad	GHC.Float.$tc'C:Floating1_closure+4
	.quad	-5033759850909561461
	.quad	5552297363459117532
	.quad	1
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.267875232 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Float.$tcRealFloat2_bytes
.type GHC.Float.$tcRealFloat2_bytes, @object
GHC.Float.$tcRealFloat2_bytes:
	.asciz "RealFloat"


==================== Asm code ====================
2018-03-16 15:57:53.269937776 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$tcRealFloat1_closure
.type GHC.Float.$tcRealFloat1_closure, @object
GHC.Float.$tcRealFloat1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Float.$tcRealFloat2_bytes


==================== Asm code ====================
2018-03-16 15:57:53.272178126 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$tcRealFloat_closure
.type GHC.Float.$tcRealFloat_closure, @object
GHC.Float.$tcRealFloat_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Float.$trModule_closure+1
	.quad	GHC.Float.$tcRealFloat1_closure+1
	.quad	GHC.Float.$tcFloating1_closure+4
	.quad	3941731172860576649
	.quad	6292609957384615911
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.274596102 UTC

.section .data
.align 8
.align 1
$krep46_r2Uqm_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Float.$tcRealFloat_closure+1
	.quad	$krep20_r2UpW_closure+2
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.276832906 UTC

.section .data
.align 8
.align 1
$krep47_r2Uqn_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep12_r2UpO_closure+4
	.quad	$krep46_r2Uqm_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.279995174 UTC

.section .data
.align 8
.align 1
$krep48_r2Uqo_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep17_r2UpT_closure+4
	.quad	$krep47_r2Uqn_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.282289104 UTC

.section .data
.align 8
.align 1
$krep49_r2Uqp_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep17_r2UpT_closure+4
	.quad	$krep48_r2Uqo_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.284083334 UTC

.section .data
.align 8
.align 1
$krep50_r2Uqq_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep17_r2UpT_closure+4
	.quad	$krep49_r2Uqp_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.286459893 UTC

.section .data
.align 8
.align 1
$krep51_r2Uqr_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep17_r2UpT_closure+4
	.quad	$krep50_r2Uqq_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.288094611 UTC

.section .data
.align 8
.align 1
$krep52_r2Uqs_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep17_r2UpT_closure+4
	.quad	$krep51_r2Uqr_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.289883978 UTC

.section .data
.align 8
.align 1
$krep53_r2Uqt_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep11_r2UpN_closure+4
	.quad	$krep52_r2Uqs_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.291590329 UTC

.section .data
.align 8
.align 1
$krep54_r2Uqu_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep10_r2UpM_closure+4
	.quad	$krep53_r2Uqt_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.293632049 UTC

.section .data
.align 8
.align 1
$krep55_r2Uqv_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep16_r2UpS_closure+4
	.quad	$krep54_r2Uqu_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.295272903 UTC

.section .data
.align 8
.align 1
$krep56_r2Uqw_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep19_r2UpV_closure+4
	.quad	$krep55_r2Uqv_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.297010298 UTC

.section .data
.align 8
.align 1
$krep57_r2Uqx_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep14_r2UpQ_closure+4
	.quad	$krep56_r2Uqw_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.298773142 UTC

.section .data
.align 8
.align 1
$krep58_r2Uqy_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep13_r2UpP_closure+4
	.quad	$krep57_r2Uqx_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.300404422 UTC

.section .data
.align 8
.align 1
$krep59_r2Uqz_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep16_r2UpS_closure+4
	.quad	$krep58_r2Uqy_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.302123116 UTC

.section .data
.align 8
.align 1
$krep60_r2UqA_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep15_r2UpR_closure+4
	.quad	$krep59_r2Uqz_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.303810458 UTC

.section .data
.align 8
.align 1
$krep61_r2UqB_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep23_r2UpZ_closure+1
	.quad	$krep60_r2UqA_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.305683329 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$tc'C:RealFloat1_closure
.type GHC.Float.$tc'C:RealFloat1_closure, @object
GHC.Float.$tc'C:RealFloat1_closure:
	.quad	GHC.Types.KindRepFun_con_info
	.quad	$krep21_r2UpX_closure+1
	.quad	$krep61_r2UqB_closure+4
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.30727738 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Float.$tc'C:RealFloat3_bytes
.type GHC.Float.$tc'C:RealFloat3_bytes, @object
GHC.Float.$tc'C:RealFloat3_bytes:
	.asciz "'C:RealFloat"


==================== Asm code ====================
2018-03-16 15:57:53.308911991 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$tc'C:RealFloat2_closure
.type GHC.Float.$tc'C:RealFloat2_closure, @object
GHC.Float.$tc'C:RealFloat2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Float.$tc'C:RealFloat3_bytes


==================== Asm code ====================
2018-03-16 15:57:53.311403317 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$tc'C:RealFloat_closure
.type GHC.Float.$tc'C:RealFloat_closure, @object
GHC.Float.$tc'C:RealFloat_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Float.$trModule_closure+1
	.quad	GHC.Float.$tc'C:RealFloat2_closure+1
	.quad	GHC.Float.$tc'C:RealFloat1_closure+4
	.quad	9049810847819341732
	.quad	-8295682842096717869
	.quad	1
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.313074635 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Float.$tcFFFormat2_bytes
.type GHC.Float.$tcFFFormat2_bytes, @object
GHC.Float.$tcFFFormat2_bytes:
	.asciz "FFFormat"


==================== Asm code ====================
2018-03-16 15:57:53.314776907 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$tcFFFormat1_closure
.type GHC.Float.$tcFFFormat1_closure, @object
GHC.Float.$tcFFFormat1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Float.$tcFFFormat2_bytes


==================== Asm code ====================
2018-03-16 15:57:53.316550538 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$tcFFFormat_closure
.type GHC.Float.$tcFFFormat_closure, @object
GHC.Float.$tcFFFormat_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Float.$trModule_closure+1
	.quad	GHC.Float.$tcFFFormat1_closure+1
	.quad	GHC.Types.krep$*_closure
	.quad	1010825520712496676
	.quad	1474964314088479952
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.318704957 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$tc'FFExponent1_closure
.type GHC.Float.$tc'FFExponent1_closure, @object
GHC.Float.$tc'FFExponent1_closure:
	.quad	GHC.Types.KindRepTyConApp_con_info
	.quad	GHC.Float.$tcFFFormat_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.320326538 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Float.$tc'FFExponent3_bytes
.type GHC.Float.$tc'FFExponent3_bytes, @object
GHC.Float.$tc'FFExponent3_bytes:
	.asciz "'FFExponent"


==================== Asm code ====================
2018-03-16 15:57:53.322315641 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$tc'FFExponent2_closure
.type GHC.Float.$tc'FFExponent2_closure, @object
GHC.Float.$tc'FFExponent2_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Float.$tc'FFExponent3_bytes


==================== Asm code ====================
2018-03-16 15:57:53.324685632 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$tc'FFExponent_closure
.type GHC.Float.$tc'FFExponent_closure, @object
GHC.Float.$tc'FFExponent_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Float.$trModule_closure+1
	.quad	GHC.Float.$tc'FFExponent2_closure+1
	.quad	GHC.Float.$tc'FFExponent1_closure+1
	.quad	5889061327753760791
	.quad	-4865309098699357616
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.326871894 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Float.$tc'FFFixed2_bytes
.type GHC.Float.$tc'FFFixed2_bytes, @object
GHC.Float.$tc'FFFixed2_bytes:
	.asciz "'FFFixed"


==================== Asm code ====================
2018-03-16 15:57:53.329000708 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$tc'FFFixed1_closure
.type GHC.Float.$tc'FFFixed1_closure, @object
GHC.Float.$tc'FFFixed1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Float.$tc'FFFixed2_bytes


==================== Asm code ====================
2018-03-16 15:57:53.331883471 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$tc'FFFixed_closure
.type GHC.Float.$tc'FFFixed_closure, @object
GHC.Float.$tc'FFFixed_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Float.$trModule_closure+1
	.quad	GHC.Float.$tc'FFFixed1_closure+1
	.quad	GHC.Float.$tc'FFExponent1_closure+1
	.quad	-1473113365748875527
	.quad	5471565003344425987
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.334045551 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.Float.$tc'FFGeneric2_bytes
.type GHC.Float.$tc'FFGeneric2_bytes, @object
GHC.Float.$tc'FFGeneric2_bytes:
	.asciz "'FFGeneric"


==================== Asm code ====================
2018-03-16 15:57:53.336206563 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$tc'FFGeneric1_closure
.type GHC.Float.$tc'FFGeneric1_closure, @object
GHC.Float.$tc'FFGeneric1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.Float.$tc'FFGeneric2_bytes


==================== Asm code ====================
2018-03-16 15:57:53.338564659 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$tc'FFGeneric_closure
.type GHC.Float.$tc'FFGeneric_closure, @object
GHC.Float.$tc'FFGeneric_closure:
	.quad	GHC.Types.TyCon_con_info
	.quad	GHC.Float.$trModule_closure+1
	.quad	GHC.Float.$tc'FFGeneric1_closure+1
	.quad	GHC.Float.$tc'FFExponent1_closure+1
	.quad	-2660460686654006056
	.quad	-8183479453991749983
	.quad	0
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.343386336 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.isFloatNaN_closure
.type GHC.Float.isFloatNaN_closure, @object
GHC.Float.isFloatNaN_closure:
	.quad	GHC.Float.isFloatNaN_info


==================== Asm code ====================
2018-03-16 15:57:53.344514108 UTC

.section .text
.align 8
.globl GHC.Float.isFloatNaN_entry
.type GHC.Float.isFloatNaN_entry, @object
GHC.Float.isFloatNaN_entry:
_c3ege:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3egk
_c3egl:
	leaq block_c3egb_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3egb
_c3egc:
	movq (%rbx),%rax
	jmp *(%rax)
_c3egk:
	leaq GHC.Float.isFloatNaN_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.isFloatNaN_entry, .-GHC.Float.isFloatNaN_entry


==================== Asm code ====================
2018-03-16 15:57:53.345512744 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.isFloatNaN_info
.type GHC.Float.isFloatNaN_info, @object
GHC.Float.isFloatNaN_info:
	.quad	GHC.Float.isFloatNaN_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:53.346531971 UTC

.section .text
.align 8
_c3egb:
_c3egb:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3ego
_c3egn:
	subq $8,%rsp
	movss 7(%rbx),%xmm0
	movl $1,%eax
	call isFloatNaN@plt
	addq $8,%rsp
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3ego:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3egb, .-_c3egb


==================== Asm code ====================
2018-03-16 15:57:53.347419602 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3egb_info:
	.quad	_c3egb
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.352294083 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.isFloatInfinite_closure
.type GHC.Float.isFloatInfinite_closure, @object
GHC.Float.isFloatInfinite_closure:
	.quad	GHC.Float.isFloatInfinite_info


==================== Asm code ====================
2018-03-16 15:57:53.353352274 UTC

.section .text
.align 8
.globl GHC.Float.isFloatInfinite_entry
.type GHC.Float.isFloatInfinite_entry, @object
GHC.Float.isFloatInfinite_entry:
_c3egJ:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3egP
_c3egQ:
	leaq block_c3egG_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3egG
_c3egH:
	movq (%rbx),%rax
	jmp *(%rax)
_c3egP:
	leaq GHC.Float.isFloatInfinite_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.isFloatInfinite_entry, .-GHC.Float.isFloatInfinite_entry


==================== Asm code ====================
2018-03-16 15:57:53.354217073 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.isFloatInfinite_info
.type GHC.Float.isFloatInfinite_info, @object
GHC.Float.isFloatInfinite_info:
	.quad	GHC.Float.isFloatInfinite_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:53.35528903 UTC

.section .text
.align 8
_c3egG:
_c3egG:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3egT
_c3egS:
	subq $8,%rsp
	movss 7(%rbx),%xmm0
	movl $1,%eax
	call isFloatInfinite@plt
	addq $8,%rsp
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3egT:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3egG, .-_c3egG


==================== Asm code ====================
2018-03-16 15:57:53.356178833 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3egG_info:
	.quad	_c3egG
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.360265694 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.isFloatDenormalized_closure
.type GHC.Float.isFloatDenormalized_closure, @object
GHC.Float.isFloatDenormalized_closure:
	.quad	GHC.Float.isFloatDenormalized_info


==================== Asm code ====================
2018-03-16 15:57:53.361355142 UTC

.section .text
.align 8
.globl GHC.Float.isFloatDenormalized_entry
.type GHC.Float.isFloatDenormalized_entry, @object
GHC.Float.isFloatDenormalized_entry:
_c3ehe:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3ehk
_c3ehl:
	leaq block_c3ehb_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3ehb
_c3ehc:
	movq (%rbx),%rax
	jmp *(%rax)
_c3ehk:
	leaq GHC.Float.isFloatDenormalized_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.isFloatDenormalized_entry, .-GHC.Float.isFloatDenormalized_entry


==================== Asm code ====================
2018-03-16 15:57:53.362143388 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.isFloatDenormalized_info
.type GHC.Float.isFloatDenormalized_info, @object
GHC.Float.isFloatDenormalized_info:
	.quad	GHC.Float.isFloatDenormalized_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:53.36298386 UTC

.section .text
.align 8
_c3ehb:
_c3ehb:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3eho
_c3ehn:
	subq $8,%rsp
	movss 7(%rbx),%xmm0
	movl $1,%eax
	call isFloatDenormalized@plt
	addq $8,%rsp
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3eho:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3ehb, .-_c3ehb


==================== Asm code ====================
2018-03-16 15:57:53.363866664 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3ehb_info:
	.quad	_c3ehb
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.367987766 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.isFloatNegativeZero_closure
.type GHC.Float.isFloatNegativeZero_closure, @object
GHC.Float.isFloatNegativeZero_closure:
	.quad	GHC.Float.isFloatNegativeZero_info


==================== Asm code ====================
2018-03-16 15:57:53.36897969 UTC

.section .text
.align 8
.globl GHC.Float.isFloatNegativeZero_entry
.type GHC.Float.isFloatNegativeZero_entry, @object
GHC.Float.isFloatNegativeZero_entry:
_c3ehJ:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3ehP
_c3ehQ:
	leaq block_c3ehG_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3ehG
_c3ehH:
	movq (%rbx),%rax
	jmp *(%rax)
_c3ehP:
	leaq GHC.Float.isFloatNegativeZero_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.isFloatNegativeZero_entry, .-GHC.Float.isFloatNegativeZero_entry


==================== Asm code ====================
2018-03-16 15:57:53.369916047 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.isFloatNegativeZero_info
.type GHC.Float.isFloatNegativeZero_info, @object
GHC.Float.isFloatNegativeZero_info:
	.quad	GHC.Float.isFloatNegativeZero_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:53.370974373 UTC

.section .text
.align 8
_c3ehG:
_c3ehG:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3ehT
_c3ehS:
	subq $8,%rsp
	movss 7(%rbx),%xmm0
	movl $1,%eax
	call isFloatNegativeZero@plt
	addq $8,%rsp
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3ehT:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3ehG, .-_c3ehG


==================== Asm code ====================
2018-03-16 15:57:53.371821404 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3ehG_info:
	.quad	_c3ehG
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.376086488 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.isFloatFinite_closure
.type GHC.Float.isFloatFinite_closure, @object
GHC.Float.isFloatFinite_closure:
	.quad	GHC.Float.isFloatFinite_info


==================== Asm code ====================
2018-03-16 15:57:53.377089451 UTC

.section .text
.align 8
.globl GHC.Float.isFloatFinite_entry
.type GHC.Float.isFloatFinite_entry, @object
GHC.Float.isFloatFinite_entry:
_c3eie:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3eik
_c3eil:
	leaq block_c3eib_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3eib
_c3eic:
	movq (%rbx),%rax
	jmp *(%rax)
_c3eik:
	leaq GHC.Float.isFloatFinite_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.isFloatFinite_entry, .-GHC.Float.isFloatFinite_entry


==================== Asm code ====================
2018-03-16 15:57:53.378040677 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.isFloatFinite_info
.type GHC.Float.isFloatFinite_info, @object
GHC.Float.isFloatFinite_info:
	.quad	GHC.Float.isFloatFinite_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:53.379046745 UTC

.section .text
.align 8
_c3eib:
_c3eib:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3eio
_c3ein:
	subq $8,%rsp
	movss 7(%rbx),%xmm0
	movl $1,%eax
	call isFloatFinite@plt
	addq $8,%rsp
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3eio:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3eib, .-_c3eib


==================== Asm code ====================
2018-03-16 15:57:53.379936052 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3eib_info:
	.quad	_c3eib
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.387214161 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$w$cscaleFloat1_closure
.type GHC.Float.$w$cscaleFloat1_closure, @object
GHC.Float.$w$cscaleFloat1_closure:
	.quad	GHC.Float.$w$cscaleFloat1_info


==================== Asm code ====================
2018-03-16 15:57:53.388145697 UTC

.section .text
.align 8
.globl GHC.Float.$w$cscaleFloat1_slow
.type GHC.Float.$w$cscaleFloat1_slow, @object
GHC.Float.$w$cscaleFloat1_slow:
_c3eiD:
	movss 8(%rbp),%xmm1
	movq (%rbp),%r14
	addq $16,%rbp
	jmp GHC.Float.$w$cscaleFloat1_entry
	.size GHC.Float.$w$cscaleFloat1_slow, .-GHC.Float.$w$cscaleFloat1_slow


==================== Asm code ====================
2018-03-16 15:57:53.389535966 UTC

.section .text
.align 8
.globl GHC.Float.$w$cscaleFloat1_entry
.type GHC.Float.$w$cscaleFloat1_entry, @object
GHC.Float.$w$cscaleFloat1_entry:
_c3eiL:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3eiM
_c3eiN:
	testq %r14,%r14
	je _c3eiK
_c3eiJ:
	xorps %xmm0,%xmm0
	ucomiss %xmm0,%xmm1
	jp _c3ejD
	je _c3eiK
_c3ejD:
	subq $8,%rsp
	movss %xmm1,%xmm0
	movl $1,%eax
	movsd %xmm1,72(%rsp)
	call isFloatFinite@plt
	addq $8,%rsp
	testq %rax,%rax
	je _n3ejP
_c3eiY:
	leaq block_c3eiW_info(%rip),%rax
	movq %rax,-16(%rbp)
	movsd 64(%rsp),%xmm0
	movss %xmm0,%xmm1
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	jmp *stg_decodeFloat_Int#@gotpcrel(%rip)
_c3eiM:
	leaq GHC.Float.$w$cscaleFloat1_closure(%rip),%rbx
	movq %r14,-16(%rbp)
	movss %xmm1,-8(%rbp)
	addq $-16,%rbp
	jmp *-8(%r13)
_n3ejP:
	movsd 64(%rsp),%xmm1
_c3eiK:
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Float.$w$cscaleFloat1_entry, .-GHC.Float.$w$cscaleFloat1_entry


==================== Asm code ====================
2018-03-16 15:57:53.390586614 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$w$cscaleFloat1_info
.type GHC.Float.$w$cscaleFloat1_info, @object
GHC.Float.$w$cscaleFloat1_info:
	.quad	GHC.Float.$w$cscaleFloat1_entry
	.quad	0
	.quad	14
	.quad	8589934592
	.quad	0
	.quad	194
	.quad	GHC.Float.$w$cscaleFloat1_slow


==================== Asm code ====================
2018-03-16 15:57:53.391681332 UTC

.section .text
.align 8
_c3eiW:
_c3eiW:
	movq 8(%rbp),%rax
	cmpq $349,%rax
	jl _s3aVA
_c3ejA:
	movl $349,%eax
_s3aVA:
	cmpq $-349,%rax
	jl _c3ejh
_c3ejr:
	leaq block_c3ejq_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq %r14,%rcx
	movq %rbx,%r14
	addq %rax,%rcx
	movq %rcx,8(%rbp)
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
_c3ejh:
	leaq block_c3ejf_info(%rip),%rax
	movq %rax,(%rbp)
	movq %r14,%rax
	movq %rbx,%r14
	addq $-349,%rax
	movq %rax,8(%rbp)
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
	.size _c3eiW, .-_c3eiW


==================== Asm code ====================
2018-03-16 15:57:53.392613956 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3eiW_info:
	.quad	_c3eiW
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.393523907 UTC

.section .text
.align 8
_c3ejf:
_c3ejf:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $16,%rbp
	jmp *GHC.Integer.Type.encodeFloatInteger_entry@gotpcrel(%rip)
	.size _c3ejf, .-_c3ejf


==================== Asm code ====================
2018-03-16 15:57:53.394956986 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3ejf_info:
	.quad	_c3ejf
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.395827541 UTC

.section .text
.align 8
_c3ejq:
_c3ejq:
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	addq $16,%rbp
	jmp *GHC.Integer.Type.encodeFloatInteger_entry@gotpcrel(%rip)
	.size _c3ejq, .-_c3ejq


==================== Asm code ====================
2018-03-16 15:57:53.396652697 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3ejq_info:
	.quad	_c3ejq
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.401935779 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat_$cscaleFloat_closure
.type GHC.Float.$fRealFloatFloat_$cscaleFloat_closure, @object
GHC.Float.$fRealFloatFloat_$cscaleFloat_closure:
	.quad	GHC.Float.$fRealFloatFloat_$cscaleFloat_info


==================== Asm code ====================
2018-03-16 15:57:53.40300602 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFloatFloat_$cscaleFloat_entry
.type GHC.Float.$fRealFloatFloat_$cscaleFloat_entry, @object
GHC.Float.$fRealFloatFloat_$cscaleFloat_entry:
_c3ekc:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3ekp
_c3ekq:
	leaq block_c3ek9_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3ek9
_c3eka:
	movq (%rbx),%rax
	jmp *(%rax)
_c3ekp:
	leaq GHC.Float.$fRealFloatFloat_$cscaleFloat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFloatFloat_$cscaleFloat_entry, .-GHC.Float.$fRealFloatFloat_$cscaleFloat_entry


==================== Asm code ====================
2018-03-16 15:57:53.403825875 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat_$cscaleFloat_info
.type GHC.Float.$fRealFloatFloat_$cscaleFloat_info, @object
GHC.Float.$fRealFloatFloat_$cscaleFloat_info:
	.quad	GHC.Float.$fRealFloatFloat_$cscaleFloat_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:53.404483939 UTC

.section .text
.align 8
_c3ek9:
_c3ek9:
	leaq block_c3ekf_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c3ekf
_c3ekg:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3ek9, .-_c3ek9


==================== Asm code ====================
2018-03-16 15:57:53.405330769 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3ek9_info:
	.quad	_c3ek9
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.406174602 UTC

.section .text
.align 8
_c3ekf:
_c3ekf:
	movq 8(%rbp),%rax
	leaq block_c3ekk_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movss 7(%rbx),%xmm1
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Float.$w$cscaleFloat1_entry
	.size _c3ekf, .-_c3ekf


==================== Asm code ====================
2018-03-16 15:57:53.406953797 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3ekf_info:
	.quad	_c3ekf
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.407863539 UTC

.section .text
.align 8
_c3ekk:
_c3ekk:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3ekv
_c3eku:
	movq GHC.Types.F#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movss %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3ekv:
	movq $16,904(%r13)
	jmp *stg_gc_f1@gotpcrel(%rip)
	.size _c3ekk, .-_c3ekk


==================== Asm code ====================
2018-03-16 15:57:53.408744264 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3ekk_info:
	.quad	_c3ekk
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.414829397 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.isDoubleNaN_closure
.type GHC.Float.isDoubleNaN_closure, @object
GHC.Float.isDoubleNaN_closure:
	.quad	GHC.Float.isDoubleNaN_info


==================== Asm code ====================
2018-03-16 15:57:53.415575868 UTC

.section .text
.align 8
.globl GHC.Float.isDoubleNaN_entry
.type GHC.Float.isDoubleNaN_entry, @object
GHC.Float.isDoubleNaN_entry:
_c3el0:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3el6
_c3el7:
	leaq block_c3ekX_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3ekX
_c3ekY:
	movq (%rbx),%rax
	jmp *(%rax)
_c3el6:
	leaq GHC.Float.isDoubleNaN_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.isDoubleNaN_entry, .-GHC.Float.isDoubleNaN_entry


==================== Asm code ====================
2018-03-16 15:57:53.416234141 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.isDoubleNaN_info
.type GHC.Float.isDoubleNaN_info, @object
GHC.Float.isDoubleNaN_info:
	.quad	GHC.Float.isDoubleNaN_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:53.417195915 UTC

.section .text
.align 8
_c3ekX:
_c3ekX:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3ela
_c3el9:
	subq $8,%rsp
	movsd 7(%rbx),%xmm0
	movl $1,%eax
	call isDoubleNaN@plt
	addq $8,%rsp
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3ela:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3ekX, .-_c3ekX


==================== Asm code ====================
2018-03-16 15:57:53.418131747 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3ekX_info:
	.quad	_c3ekX
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.421519214 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.isDoubleInfinite_closure
.type GHC.Float.isDoubleInfinite_closure, @object
GHC.Float.isDoubleInfinite_closure:
	.quad	GHC.Float.isDoubleInfinite_info


==================== Asm code ====================
2018-03-16 15:57:53.422340594 UTC

.section .text
.align 8
.globl GHC.Float.isDoubleInfinite_entry
.type GHC.Float.isDoubleInfinite_entry, @object
GHC.Float.isDoubleInfinite_entry:
_c3elv:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3elB
_c3elC:
	leaq block_c3els_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3els
_c3elt:
	movq (%rbx),%rax
	jmp *(%rax)
_c3elB:
	leaq GHC.Float.isDoubleInfinite_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.isDoubleInfinite_entry, .-GHC.Float.isDoubleInfinite_entry


==================== Asm code ====================
2018-03-16 15:57:53.423034202 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.isDoubleInfinite_info
.type GHC.Float.isDoubleInfinite_info, @object
GHC.Float.isDoubleInfinite_info:
	.quad	GHC.Float.isDoubleInfinite_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:53.423801217 UTC

.section .text
.align 8
_c3els:
_c3els:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3elF
_c3elE:
	subq $8,%rsp
	movsd 7(%rbx),%xmm0
	movl $1,%eax
	call isDoubleInfinite@plt
	addq $8,%rsp
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3elF:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3els, .-_c3els


==================== Asm code ====================
2018-03-16 15:57:53.424452344 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3els_info:
	.quad	_c3els
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.42769727 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.isDoubleDenormalized_closure
.type GHC.Float.isDoubleDenormalized_closure, @object
GHC.Float.isDoubleDenormalized_closure:
	.quad	GHC.Float.isDoubleDenormalized_info


==================== Asm code ====================
2018-03-16 15:57:53.428541497 UTC

.section .text
.align 8
.globl GHC.Float.isDoubleDenormalized_entry
.type GHC.Float.isDoubleDenormalized_entry, @object
GHC.Float.isDoubleDenormalized_entry:
_c3em0:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3em6
_c3em7:
	leaq block_c3elX_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3elX
_c3elY:
	movq (%rbx),%rax
	jmp *(%rax)
_c3em6:
	leaq GHC.Float.isDoubleDenormalized_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.isDoubleDenormalized_entry, .-GHC.Float.isDoubleDenormalized_entry


==================== Asm code ====================
2018-03-16 15:57:53.429234823 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.isDoubleDenormalized_info
.type GHC.Float.isDoubleDenormalized_info, @object
GHC.Float.isDoubleDenormalized_info:
	.quad	GHC.Float.isDoubleDenormalized_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:53.430378962 UTC

.section .text
.align 8
_c3elX:
_c3elX:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3ema
_c3em9:
	subq $8,%rsp
	movsd 7(%rbx),%xmm0
	movl $1,%eax
	call isDoubleDenormalized@plt
	addq $8,%rsp
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3ema:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3elX, .-_c3elX


==================== Asm code ====================
2018-03-16 15:57:53.431496706 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3elX_info:
	.quad	_c3elX
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.435918907 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.isDoubleNegativeZero_closure
.type GHC.Float.isDoubleNegativeZero_closure, @object
GHC.Float.isDoubleNegativeZero_closure:
	.quad	GHC.Float.isDoubleNegativeZero_info


==================== Asm code ====================
2018-03-16 15:57:53.436837851 UTC

.section .text
.align 8
.globl GHC.Float.isDoubleNegativeZero_entry
.type GHC.Float.isDoubleNegativeZero_entry, @object
GHC.Float.isDoubleNegativeZero_entry:
_c3emv:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3emB
_c3emC:
	leaq block_c3ems_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3ems
_c3emt:
	movq (%rbx),%rax
	jmp *(%rax)
_c3emB:
	leaq GHC.Float.isDoubleNegativeZero_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.isDoubleNegativeZero_entry, .-GHC.Float.isDoubleNegativeZero_entry


==================== Asm code ====================
2018-03-16 15:57:53.437794226 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.isDoubleNegativeZero_info
.type GHC.Float.isDoubleNegativeZero_info, @object
GHC.Float.isDoubleNegativeZero_info:
	.quad	GHC.Float.isDoubleNegativeZero_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:53.438934643 UTC

.section .text
.align 8
_c3ems:
_c3ems:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3emF
_c3emE:
	subq $8,%rsp
	movsd 7(%rbx),%xmm0
	movl $1,%eax
	call isDoubleNegativeZero@plt
	addq $8,%rsp
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3emF:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3ems, .-_c3ems


==================== Asm code ====================
2018-03-16 15:57:53.439891882 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3ems_info:
	.quad	_c3ems
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.445131776 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.isDoubleFinite_closure
.type GHC.Float.isDoubleFinite_closure, @object
GHC.Float.isDoubleFinite_closure:
	.quad	GHC.Float.isDoubleFinite_info


==================== Asm code ====================
2018-03-16 15:57:53.446219088 UTC

.section .text
.align 8
.globl GHC.Float.isDoubleFinite_entry
.type GHC.Float.isDoubleFinite_entry, @object
GHC.Float.isDoubleFinite_entry:
_c3en0:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3en6
_c3en7:
	leaq block_c3emX_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3emX
_c3emY:
	movq (%rbx),%rax
	jmp *(%rax)
_c3en6:
	leaq GHC.Float.isDoubleFinite_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.isDoubleFinite_entry, .-GHC.Float.isDoubleFinite_entry


==================== Asm code ====================
2018-03-16 15:57:53.447161716 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.isDoubleFinite_info
.type GHC.Float.isDoubleFinite_info, @object
GHC.Float.isDoubleFinite_info:
	.quad	GHC.Float.isDoubleFinite_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:53.44817573 UTC

.section .text
.align 8
_c3emX:
_c3emX:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3ena
_c3en9:
	subq $8,%rsp
	movsd 7(%rbx),%xmm0
	movl $1,%eax
	call isDoubleFinite@plt
	addq $8,%rsp
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3ena:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3emX, .-_c3emX


==================== Asm code ====================
2018-03-16 15:57:53.449103936 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3emX_info:
	.quad	_c3emX
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.455044614 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$w$cscaleFloat_closure
.type GHC.Float.$w$cscaleFloat_closure, @object
GHC.Float.$w$cscaleFloat_closure:
	.quad	GHC.Float.$w$cscaleFloat_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:53.456279229 UTC

.section .text
.align 8
.globl GHC.Float.$w$cscaleFloat_slow
.type GHC.Float.$w$cscaleFloat_slow, @object
GHC.Float.$w$cscaleFloat_slow:
_c3enp:
	movsd 8(%rbp),%xmm1
	movq (%rbp),%r14
	addq $16,%rbp
	jmp GHC.Float.$w$cscaleFloat_entry
	.size GHC.Float.$w$cscaleFloat_slow, .-GHC.Float.$w$cscaleFloat_slow


==================== Asm code ====================
2018-03-16 15:57:53.458063886 UTC

.section .text
.align 8
.globl GHC.Float.$w$cscaleFloat_entry
.type GHC.Float.$w$cscaleFloat_entry, @object
GHC.Float.$w$cscaleFloat_entry:
_c3enx:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3eny
_c3enz:
	testq %r14,%r14
	je _c3enw
_c3env:
	xorpd %xmm0,%xmm0
	ucomisd %xmm0,%xmm1
	jp _c3eo7
	je _c3enw
_c3eo7:
	subq $8,%rsp
	movsd %xmm1,%xmm0
	movl $1,%eax
	movsd %xmm1,72(%rsp)
	call isDoubleFinite@plt
	addq $8,%rsp
	testq %rax,%rax
	je _n3eon
_c3enK:
	leaq block_c3enI_info(%rip),%rax
	movq %rax,-16(%rbp)
	movsd 64(%rsp),%xmm0
	movsd %xmm0,%xmm1
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.Integer.Type.decodeDoubleInteger_entry@gotpcrel(%rip)
_c3eny:
	leaq GHC.Float.$w$cscaleFloat_closure(%rip),%rbx
	movq %r14,-16(%rbp)
	movsd %xmm1,-8(%rbp)
	addq $-16,%rbp
	jmp *-8(%r13)
_n3eon:
	movsd 64(%rsp),%xmm1
_c3enw:
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Float.$w$cscaleFloat_entry, .-GHC.Float.$w$cscaleFloat_entry


==================== Asm code ====================
2018-03-16 15:57:53.459198661 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$w$cscaleFloat_info
.type GHC.Float.$w$cscaleFloat_info, @object
GHC.Float.$w$cscaleFloat_info:
	.quad	GHC.Float.$w$cscaleFloat_entry
	.quad	0
	.quad	12884901902
	.quad	8589934592
	.quad	S3bQP_srt+640
	.quad	194
	.quad	GHC.Float.$w$cscaleFloat_slow


==================== Asm code ====================
2018-03-16 15:57:53.460336401 UTC

.section .text
.align 8
_c3enI:
_c3enI:
	movq 8(%rbp),%rax
	cmpq $2257,%rax
	jl _s3aWA
_c3eo4:
	movl $2257,%eax
_s3aWA:
	cmpq $-2257,%rax
	jl _c3enY
_c3enZ:
	movq %r14,%rsi
	addq %rax,%rsi
	movq %rbx,%r14
	addq $16,%rbp
	jmp *GHC.Integer.Type.encodeDoubleInteger_entry@gotpcrel(%rip)
_c3enY:
	leaq -2257(%r14),%rsi
	movq %rbx,%r14
	addq $16,%rbp
	jmp *GHC.Integer.Type.encodeDoubleInteger_entry@gotpcrel(%rip)
	.size _c3enI, .-_c3enI


==================== Asm code ====================
2018-03-16 15:57:53.461036668 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3enI_info:
	.quad	_c3enI
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.465447685 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble_$cscaleFloat_closure
.type GHC.Float.$fRealFloatDouble_$cscaleFloat_closure, @object
GHC.Float.$fRealFloatDouble_$cscaleFloat_closure:
	.quad	GHC.Float.$fRealFloatDouble_$cscaleFloat_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:53.466288389 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFloatDouble_$cscaleFloat_entry
.type GHC.Float.$fRealFloatDouble_$cscaleFloat_entry, @object
GHC.Float.$fRealFloatDouble_$cscaleFloat_entry:
_c3eoA:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3eoN
_c3eoO:
	leaq block_c3eox_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3eox
_c3eoy:
	movq (%rbx),%rax
	jmp *(%rax)
_c3eoN:
	leaq GHC.Float.$fRealFloatDouble_$cscaleFloat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFloatDouble_$cscaleFloat_entry, .-GHC.Float.$fRealFloatDouble_$cscaleFloat_entry


==================== Asm code ====================
2018-03-16 15:57:53.466971478 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble_$cscaleFloat_info
.type GHC.Float.$fRealFloatDouble_$cscaleFloat_info, @object
GHC.Float.$fRealFloatDouble_$cscaleFloat_info:
	.quad	GHC.Float.$fRealFloatDouble_$cscaleFloat_entry
	.quad	0
	.quad	21474836494
	.quad	8589934607
	.quad	S3bQP_srt+640


==================== Asm code ====================
2018-03-16 15:57:53.467702794 UTC

.section .text
.align 8
_c3eox:
_c3eox:
	leaq block_c3eoD_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c3eoD
_c3eoE:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3eox, .-_c3eox


==================== Asm code ====================
2018-03-16 15:57:53.468363307 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3eox_info:
	.quad	_c3eox
	.quad	1
	.quad	4294967326
	.quad	S3bQP_srt+640


==================== Asm code ====================
2018-03-16 15:57:53.469029773 UTC

.section .text
.align 8
_c3eoD:
_c3eoD:
	movq 8(%rbp),%rax
	leaq block_c3eoI_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movsd 7(%rbx),%xmm1
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Float.$w$cscaleFloat_entry
	.size _c3eoD, .-_c3eoD


==================== Asm code ====================
2018-03-16 15:57:53.469718347 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3eoD_info:
	.quad	_c3eoD
	.quad	65
	.quad	4294967326
	.quad	S3bQP_srt+640


==================== Asm code ====================
2018-03-16 15:57:53.470516148 UTC

.section .text
.align 8
_c3eoI:
_c3eoI:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3eoT
_c3eoS:
	movq GHC.Types.D#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movsd %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3eoT:
	movq $16,904(%r13)
	jmp *stg_gc_d1@gotpcrel(%rip)
	.size _c3eoI, .-_c3eoI


==================== Asm code ====================
2018-03-16 15:57:53.471146921 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3eoI_info:
	.quad	_c3eoI
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.474499339 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.log1pDouble_closure
.type GHC.Float.log1pDouble_closure, @object
GHC.Float.log1pDouble_closure:
	.quad	GHC.Float.log1pDouble_info


==================== Asm code ====================
2018-03-16 15:57:53.4752818 UTC

.section .text
.align 8
.globl GHC.Float.log1pDouble_entry
.type GHC.Float.log1pDouble_entry, @object
GHC.Float.log1pDouble_entry:
_c3epo:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3epu
_c3epv:
	leaq block_c3epl_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3epl
_c3epm:
	movq (%rbx),%rax
	jmp *(%rax)
_c3epu:
	leaq GHC.Float.log1pDouble_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.log1pDouble_entry, .-GHC.Float.log1pDouble_entry


==================== Asm code ====================
2018-03-16 15:57:53.475931466 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.log1pDouble_info
.type GHC.Float.log1pDouble_info, @object
GHC.Float.log1pDouble_info:
	.quad	GHC.Float.log1pDouble_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:53.47670384 UTC

.section .text
.align 8
_c3epl:
_c3epl:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3epy
_c3epx:
	subq $8,%rsp
	movsd 7(%rbx),%xmm0
	movl $1,%eax
	call ghczuwrapperZC3ZCbaseZCGHCziFloatZClog1p@plt
	addq $8,%rsp
	movq GHC.Types.D#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3epy:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3epl, .-_c3epl


==================== Asm code ====================
2018-03-16 15:57:53.477483742 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3epl_info:
	.quad	_c3epl
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.480700157 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.expm1Double_closure
.type GHC.Float.expm1Double_closure, @object
GHC.Float.expm1Double_closure:
	.quad	GHC.Float.expm1Double_info


==================== Asm code ====================
2018-03-16 15:57:53.481812743 UTC

.section .text
.align 8
.globl GHC.Float.expm1Double_entry
.type GHC.Float.expm1Double_entry, @object
GHC.Float.expm1Double_entry:
_c3epT:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3epZ
_c3eq0:
	leaq block_c3epQ_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3epQ
_c3epR:
	movq (%rbx),%rax
	jmp *(%rax)
_c3epZ:
	leaq GHC.Float.expm1Double_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.expm1Double_entry, .-GHC.Float.expm1Double_entry


==================== Asm code ====================
2018-03-16 15:57:53.482548114 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.expm1Double_info
.type GHC.Float.expm1Double_info, @object
GHC.Float.expm1Double_info:
	.quad	GHC.Float.expm1Double_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:53.483367502 UTC

.section .text
.align 8
_c3epQ:
_c3epQ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3eq3
_c3eq2:
	subq $8,%rsp
	movsd 7(%rbx),%xmm0
	movl $1,%eax
	call ghczuwrapperZC2ZCbaseZCGHCziFloatZCexpm1@plt
	addq $8,%rsp
	movq GHC.Types.D#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3eq3:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3epQ, .-_c3epQ


==================== Asm code ====================
2018-03-16 15:57:53.484041799 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3epQ_info:
	.quad	_c3epQ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.487047961 UTC

.section .data
.align 8
.align 1
lvl4_r2UqC_closure:
	.quad	lvl4_r2UqC_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:53.487954142 UTC

.section .text
.align 8
lvl4_r2UqC_entry:
_c3eqq:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3eqt
_c3equ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3eqw
_c3eqv:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c3eqm
_c3eql:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	subq $8,%rsp
	movsd _n3eqB(%rip),%xmm0
	movl $1,%eax
	call log@plt
	addq $8,%rsp
	movq GHC.Types.D#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3eqw:
	movq $16,904(%r13)
_c3eqt:
	jmp *-16(%r13)
_c3eqm:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl4_r2UqC_entry, .-lvl4_r2UqC_entry
.section .rodata
.align 8
.align 8
_n3eqB:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	64


==================== Asm code ====================
2018-03-16 15:57:53.489537328 UTC

.section .data.rel.ro
.align 8
.align 1
lvl4_r2UqC_info:
	.quad	lvl4_r2UqC_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:57:53.49435713 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fFloatingDouble_$clog1mexp_closure
.type GHC.Float.$fFloatingDouble_$clog1mexp_closure, @object
GHC.Float.$fFloatingDouble_$clog1mexp_closure:
	.quad	GHC.Float.$fFloatingDouble_$clog1mexp_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:53.495145286 UTC

.section .text
.align 8
.globl GHC.Float.$fFloatingDouble_$clog1mexp_entry
.type GHC.Float.$fFloatingDouble_$clog1mexp_entry, @object
GHC.Float.$fFloatingDouble_$clog1mexp_entry:
_c3eqP:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3eqT
_c3eqU:
	leaq block_c3eqM_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3eqM
_c3eqN:
	movq (%rbx),%rax
	jmp *(%rax)
_c3eqT:
	leaq GHC.Float.$fFloatingDouble_$clog1mexp_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fFloatingDouble_$clog1mexp_entry, .-GHC.Float.$fFloatingDouble_$clog1mexp_entry


==================== Asm code ====================
2018-03-16 15:57:53.495825808 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fFloatingDouble_$clog1mexp_info
.type GHC.Float.$fFloatingDouble_$clog1mexp_info, @object
GHC.Float.$fFloatingDouble_$clog1mexp_info:
	.quad	GHC.Float.$fFloatingDouble_$clog1mexp_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S3bQP_srt+664


==================== Asm code ====================
2018-03-16 15:57:53.496553485 UTC

.section .text
.align 8
_c3eqM:
_c3eqM:
	leaq block_c3eqS_info(%rip),%rax
	movq %rax,-8(%rbp)
	movsd 7(%rbx),%xmm0
	leaq lvl4_r2UqC_closure(%rip),%rbx
	movsd %xmm0,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c3eqS
_c3eqW:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3eqM, .-_c3eqM


==================== Asm code ====================
2018-03-16 15:57:53.497148594 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3eqM_info:
	.quad	_c3eqM
	.quad	0
	.quad	4294967326
	.quad	S3bQP_srt+672


==================== Asm code ====================
2018-03-16 15:57:53.498191874 UTC

.section .text
.align 8
_c3eqS:
_c3eqS:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3er2
_c3er1:
	movsd 8(%rbp),%xmm0
	ucomisd 7(%rbx),%xmm0
	jp _c3erh
	jbe _c3ert
_c3erh:
	subq $8,%rsp
	movl $1,%eax
	call exp@plt
	addq $8,%rsp
	subq $8,%rsp
	movsd _n3erK(%rip),%xmm1
	xorpd %xmm1,%xmm0
	movl $1,%eax
	call ghczuwrapperZC3ZCbaseZCGHCziFloatZClog1p@plt
	addq $8,%rsp
	movq GHC.Types.D#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3ert:
	subq $8,%rsp
	movl $1,%eax
	call ghczuwrapperZC2ZCbaseZCGHCziFloatZCexpm1@plt
	addq $8,%rsp
	subq $8,%rsp
	movsd _n3erO(%rip),%xmm1
	xorpd %xmm1,%xmm0
	movl $1,%eax
	call log@plt
	addq $8,%rsp
	movq GHC.Types.D#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3er2:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3eqS, .-_c3eqS
.section .rodata
.align 8
.align 8
_n3erK:
	.quad	-9223372036854775808
.section .rodata
.align 8
.align 8
_n3erO:
	.quad	-9223372036854775808


==================== Asm code ====================
2018-03-16 15:57:53.499072619 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3eqS_info:
	.quad	_c3eqS
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.501137279 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fFloatingDouble_closure
.type GHC.Float.$fFloatingDouble_closure, @object
GHC.Float.$fFloatingDouble_closure:
	.quad	GHC.Float.C:Floating_con_info
	.quad	GHC.Float.$fFractionalDouble_closure+1
	.quad	GHC.Float.$fFloatingDouble_$cpi_closure+1
	.quad	GHC.Float.expDouble_closure+1
	.quad	GHC.Float.logDouble_closure+1
	.quad	GHC.Float.sqrtDouble_closure+1
	.quad	GHC.Float.powerDouble_closure+2
	.quad	GHC.Float.$fFloatingDouble_$clogBase_closure+2
	.quad	GHC.Float.sinDouble_closure+1
	.quad	GHC.Float.cosDouble_closure+1
	.quad	GHC.Float.tanDouble_closure+1
	.quad	GHC.Float.asinDouble_closure+1
	.quad	GHC.Float.acosDouble_closure+1
	.quad	GHC.Float.atanDouble_closure+1
	.quad	GHC.Float.sinhDouble_closure+1
	.quad	GHC.Float.coshDouble_closure+1
	.quad	GHC.Float.tanhDouble_closure+1
	.quad	GHC.Float.$fFloatingDouble_$casinh_closure+1
	.quad	GHC.Float.$fFloatingDouble_$cacosh_closure+1
	.quad	GHC.Float.$fFloatingDouble_$catanh_closure+1
	.quad	GHC.Float.log1pDouble_closure+1
	.quad	GHC.Float.expm1Double_closure+1
	.quad	GHC.Float.$fFloatingDouble_$clog1pexp_closure+1
	.quad	GHC.Float.$fFloatingDouble_$clog1mexp_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:53.504494251 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.log1pFloat_closure
.type GHC.Float.log1pFloat_closure, @object
GHC.Float.log1pFloat_closure:
	.quad	GHC.Float.log1pFloat_info


==================== Asm code ====================
2018-03-16 15:57:53.505494733 UTC

.section .text
.align 8
.globl GHC.Float.log1pFloat_entry
.type GHC.Float.log1pFloat_entry, @object
GHC.Float.log1pFloat_entry:
_c3es2:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3es8
_c3es9:
	leaq block_c3erZ_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3erZ
_c3es0:
	movq (%rbx),%rax
	jmp *(%rax)
_c3es8:
	leaq GHC.Float.log1pFloat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.log1pFloat_entry, .-GHC.Float.log1pFloat_entry


==================== Asm code ====================
2018-03-16 15:57:53.506127202 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.log1pFloat_info
.type GHC.Float.log1pFloat_info, @object
GHC.Float.log1pFloat_info:
	.quad	GHC.Float.log1pFloat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:53.506918632 UTC

.section .text
.align 8
_c3erZ:
_c3erZ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3esc
_c3esb:
	subq $8,%rsp
	movss 7(%rbx),%xmm0
	movl $1,%eax
	call ghczuwrapperZC1ZCbaseZCGHCziFloatZClog1pf@plt
	addq $8,%rsp
	movq GHC.Types.F#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3esc:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3erZ, .-_c3erZ


==================== Asm code ====================
2018-03-16 15:57:53.507565037 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3erZ_info:
	.quad	_c3erZ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.51088361 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.expm1Float_closure
.type GHC.Float.expm1Float_closure, @object
GHC.Float.expm1Float_closure:
	.quad	GHC.Float.expm1Float_info


==================== Asm code ====================
2018-03-16 15:57:53.511678291 UTC

.section .text
.align 8
.globl GHC.Float.expm1Float_entry
.type GHC.Float.expm1Float_entry, @object
GHC.Float.expm1Float_entry:
_c3esx:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3esD
_c3esE:
	leaq block_c3esu_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3esu
_c3esv:
	movq (%rbx),%rax
	jmp *(%rax)
_c3esD:
	leaq GHC.Float.expm1Float_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.expm1Float_entry, .-GHC.Float.expm1Float_entry


==================== Asm code ====================
2018-03-16 15:57:53.512529272 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.expm1Float_info
.type GHC.Float.expm1Float_info, @object
GHC.Float.expm1Float_info:
	.quad	GHC.Float.expm1Float_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:53.513662397 UTC

.section .text
.align 8
_c3esu:
_c3esu:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3esH
_c3esG:
	subq $8,%rsp
	movss 7(%rbx),%xmm0
	movl $1,%eax
	call ghczuwrapperZC0ZCbaseZCGHCziFloatZCexpm1f@plt
	addq $8,%rsp
	movq GHC.Types.F#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3esH:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3esu, .-_c3esu


==================== Asm code ====================
2018-03-16 15:57:53.514327271 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3esu_info:
	.quad	_c3esu
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.517458316 UTC

.section .data
.align 8
.align 1
lvl5_r2UqD_closure:
	.quad	lvl5_r2UqD_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:53.518479515 UTC

.section .text
.align 8
lvl5_r2UqD_entry:
_c3et4:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3et7
_c3et8:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3eta
_c3et9:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c3et0
_c3esZ:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	subq $8,%rsp
	movss _n3etf(%rip),%xmm0
	movl $1,%eax
	call logf@plt
	addq $8,%rsp
	movq GHC.Types.F#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3eta:
	movq $16,904(%r13)
_c3et7:
	jmp *-16(%r13)
_c3et0:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl5_r2UqD_entry, .-lvl5_r2UqD_entry
.section .rodata
.align 8
.align 4
_n3etf:
	.byte	0
	.byte	0
	.byte	0
	.byte	64


==================== Asm code ====================
2018-03-16 15:57:53.519229984 UTC

.section .data.rel.ro
.align 8
.align 1
lvl5_r2UqD_info:
	.quad	lvl5_r2UqD_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:57:53.523372188 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fFloatingFloat_$clog1mexp_closure
.type GHC.Float.$fFloatingFloat_$clog1mexp_closure, @object
GHC.Float.$fFloatingFloat_$clog1mexp_closure:
	.quad	GHC.Float.$fFloatingFloat_$clog1mexp_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:53.524205373 UTC

.section .text
.align 8
.globl GHC.Float.$fFloatingFloat_$clog1mexp_entry
.type GHC.Float.$fFloatingFloat_$clog1mexp_entry, @object
GHC.Float.$fFloatingFloat_$clog1mexp_entry:
_c3ett:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3etx
_c3ety:
	leaq block_c3etq_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3etq
_c3etr:
	movq (%rbx),%rax
	jmp *(%rax)
_c3etx:
	leaq GHC.Float.$fFloatingFloat_$clog1mexp_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fFloatingFloat_$clog1mexp_entry, .-GHC.Float.$fFloatingFloat_$clog1mexp_entry


==================== Asm code ====================
2018-03-16 15:57:53.525080831 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fFloatingFloat_$clog1mexp_info
.type GHC.Float.$fFloatingFloat_$clog1mexp_info, @object
GHC.Float.$fFloatingFloat_$clog1mexp_info:
	.quad	GHC.Float.$fFloatingFloat_$clog1mexp_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S3bQP_srt+680


==================== Asm code ====================
2018-03-16 15:57:53.526019926 UTC

.section .text
.align 8
_c3etq:
_c3etq:
	leaq block_c3etw_info(%rip),%rax
	movq %rax,-8(%rbp)
	movss 7(%rbx),%xmm0
	leaq lvl5_r2UqD_closure(%rip),%rbx
	movss %xmm0,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c3etw
_c3etA:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3etq, .-_c3etq


==================== Asm code ====================
2018-03-16 15:57:53.526653681 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3etq_info:
	.quad	_c3etq
	.quad	0
	.quad	4294967326
	.quad	S3bQP_srt+688


==================== Asm code ====================
2018-03-16 15:57:53.527908605 UTC

.section .text
.align 8
_c3etw:
_c3etw:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3etG
_c3etF:
	movss 8(%rbp),%xmm0
	ucomiss 7(%rbx),%xmm0
	jp _c3etV
	jbe _c3eu7
_c3etV:
	subq $8,%rsp
	movl $1,%eax
	call expf@plt
	addq $8,%rsp
	subq $8,%rsp
	movss _n3euo(%rip),%xmm1
	xorps %xmm1,%xmm0
	movl $1,%eax
	call ghczuwrapperZC1ZCbaseZCGHCziFloatZClog1pf@plt
	addq $8,%rsp
	movq GHC.Types.F#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3eu7:
	subq $8,%rsp
	movl $1,%eax
	call ghczuwrapperZC0ZCbaseZCGHCziFloatZCexpm1f@plt
	addq $8,%rsp
	subq $8,%rsp
	movss _n3eus(%rip),%xmm1
	xorps %xmm1,%xmm0
	movl $1,%eax
	call logf@plt
	addq $8,%rsp
	movq GHC.Types.F#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3etG:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3etw, .-_c3etw
.section .rodata
.align 8
.align 4
_n3euo:
	.long	-2147483648
.section .rodata
.align 8
.align 4
_n3eus:
	.long	-2147483648


==================== Asm code ====================
2018-03-16 15:57:53.528753983 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3etw_info:
	.quad	_c3etw
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.53179696 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fFloatingFloat_closure
.type GHC.Float.$fFloatingFloat_closure, @object
GHC.Float.$fFloatingFloat_closure:
	.quad	GHC.Float.C:Floating_con_info
	.quad	GHC.Float.$fFractionalFloat_closure+1
	.quad	GHC.Float.$fFloatingFloat_$cpi_closure+1
	.quad	GHC.Float.expFloat_closure+1
	.quad	GHC.Float.logFloat_closure+1
	.quad	GHC.Float.sqrtFloat_closure+1
	.quad	GHC.Float.powerFloat_closure+2
	.quad	GHC.Float.$fFloatingFloat_$clogBase_closure+2
	.quad	GHC.Float.sinFloat_closure+1
	.quad	GHC.Float.cosFloat_closure+1
	.quad	GHC.Float.tanFloat_closure+1
	.quad	GHC.Float.asinFloat_closure+1
	.quad	GHC.Float.acosFloat_closure+1
	.quad	GHC.Float.atanFloat_closure+1
	.quad	GHC.Float.sinhFloat_closure+1
	.quad	GHC.Float.coshFloat_closure+1
	.quad	GHC.Float.tanhFloat_closure+1
	.quad	GHC.Float.$fFloatingFloat_$casinh_closure+1
	.quad	GHC.Float.$fFloatingFloat_$cacosh_closure+1
	.quad	GHC.Float.$fFloatingFloat_$catanh_closure+1
	.quad	GHC.Float.log1pFloat_closure+1
	.quad	GHC.Float.expm1Float_closure+1
	.quad	GHC.Float.$fFloatingFloat_$clog1pexp_closure+1
	.quad	GHC.Float.$fFloatingFloat_$clog1mexp_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:53.534362702 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.stgWord32ToFloat_closure
.type GHC.Float.stgWord32ToFloat_closure, @object
GHC.Float.stgWord32ToFloat_closure:
	.quad	GHC.Float.stgWord32ToFloat_info


==================== Asm code ====================
2018-03-16 15:57:53.535092931 UTC

.section .text
.align 8
.globl GHC.Float.stgWord32ToFloat_entry
.type GHC.Float.stgWord32ToFloat_entry, @object
GHC.Float.stgWord32ToFloat_entry:
_c3euD:
	movq %r14,%rbx
	jmp *stg_word32ToFloatzh@gotpcrel(%rip)
	.size GHC.Float.stgWord32ToFloat_entry, .-GHC.Float.stgWord32ToFloat_entry


==================== Asm code ====================
2018-03-16 15:57:53.535797315 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.stgWord32ToFloat_info
.type GHC.Float.stgWord32ToFloat_info, @object
GHC.Float.stgWord32ToFloat_info:
	.quad	GHC.Float.stgWord32ToFloat_entry
	.quad	0
	.quad	14
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:57:53.539525537 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.castWord32ToFloat_closure
.type GHC.Float.castWord32ToFloat_closure, @object
GHC.Float.castWord32ToFloat_closure:
	.quad	GHC.Float.castWord32ToFloat_info


==================== Asm code ====================
2018-03-16 15:57:53.540460892 UTC

.section .text
.align 8
.globl GHC.Float.castWord32ToFloat_entry
.type GHC.Float.castWord32ToFloat_entry, @object
GHC.Float.castWord32ToFloat_entry:
_c3euR:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3euZ
_c3ev0:
	leaq block_c3euO_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3euO
_c3euP:
	movq (%rbx),%rax
	jmp *(%rax)
_c3euZ:
	leaq GHC.Float.castWord32ToFloat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.castWord32ToFloat_entry, .-GHC.Float.castWord32ToFloat_entry


==================== Asm code ====================
2018-03-16 15:57:53.541229444 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.castWord32ToFloat_info
.type GHC.Float.castWord32ToFloat_info, @object
GHC.Float.castWord32ToFloat_info:
	.quad	GHC.Float.castWord32ToFloat_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:53.541923849 UTC

.section .text
.align 8
_c3euO:
_c3euO:
	leaq block_c3euU_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rbx
	jmp *stg_word32ToFloatzh@gotpcrel(%rip)
	.size _c3euO, .-_c3euO


==================== Asm code ====================
2018-03-16 15:57:53.542597546 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3euO_info:
	.quad	_c3euO
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.543336121 UTC

.section .text
.align 8
_c3euU:
_c3euU:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3ev4
_c3ev3:
	movq GHC.Types.F#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movss %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3ev4:
	movq $16,904(%r13)
	jmp *stg_gc_f1@gotpcrel(%rip)
	.size _c3euU, .-_c3euU


==================== Asm code ====================
2018-03-16 15:57:53.543991384 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3euU_info:
	.quad	_c3euU
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.546161638 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.stgFloatToWord32_closure
.type GHC.Float.stgFloatToWord32_closure, @object
GHC.Float.stgFloatToWord32_closure:
	.quad	GHC.Float.stgFloatToWord32_info


==================== Asm code ====================
2018-03-16 15:57:53.546803429 UTC

.section .text
.align 8
.globl GHC.Float.stgFloatToWord32_entry
.type GHC.Float.stgFloatToWord32_entry, @object
GHC.Float.stgFloatToWord32_entry:
_c3evq:
	jmp *stg_floatToWord32zh@gotpcrel(%rip)
	.size GHC.Float.stgFloatToWord32_entry, .-GHC.Float.stgFloatToWord32_entry


==================== Asm code ====================
2018-03-16 15:57:53.547614847 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.stgFloatToWord32_info
.type GHC.Float.stgFloatToWord32_info, @object
GHC.Float.stgFloatToWord32_info:
	.quad	GHC.Float.stgFloatToWord32_entry
	.quad	0
	.quad	14
	.quad	4294967302


==================== Asm code ====================
2018-03-16 15:57:53.551067363 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.castFloatToWord32_closure
.type GHC.Float.castFloatToWord32_closure, @object
GHC.Float.castFloatToWord32_closure:
	.quad	GHC.Float.castFloatToWord32_info


==================== Asm code ====================
2018-03-16 15:57:53.551914495 UTC

.section .text
.align 8
.globl GHC.Float.castFloatToWord32_entry
.type GHC.Float.castFloatToWord32_entry, @object
GHC.Float.castFloatToWord32_entry:
_c3evE:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3evM
_c3evN:
	leaq block_c3evB_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3evB
_c3evC:
	movq (%rbx),%rax
	jmp *(%rax)
_c3evM:
	leaq GHC.Float.castFloatToWord32_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.castFloatToWord32_entry, .-GHC.Float.castFloatToWord32_entry


==================== Asm code ====================
2018-03-16 15:57:53.552580881 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.castFloatToWord32_info
.type GHC.Float.castFloatToWord32_info, @object
GHC.Float.castFloatToWord32_info:
	.quad	GHC.Float.castFloatToWord32_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:53.553430147 UTC

.section .text
.align 8
_c3evB:
_c3evB:
	leaq block_c3evH_info(%rip),%rax
	movq %rax,(%rbp)
	movss 7(%rbx),%xmm1
	jmp *stg_floatToWord32zh@gotpcrel(%rip)
	.size _c3evB, .-_c3evB


==================== Asm code ====================
2018-03-16 15:57:53.554055036 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3evB_info:
	.quad	_c3evB
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.554749142 UTC

.section .text
.align 8
_c3evH:
_c3evH:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3evR
_c3evQ:
	movq GHC.Word.W32#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3evR:
	movq $16,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c3evH, .-_c3evH


==================== Asm code ====================
2018-03-16 15:57:53.55544182 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3evH_info:
	.quad	_c3evH
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.557708376 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.stgWord64ToDouble_closure
.type GHC.Float.stgWord64ToDouble_closure, @object
GHC.Float.stgWord64ToDouble_closure:
	.quad	GHC.Float.stgWord64ToDouble_info


==================== Asm code ====================
2018-03-16 15:57:53.558360753 UTC

.section .text
.align 8
.globl GHC.Float.stgWord64ToDouble_entry
.type GHC.Float.stgWord64ToDouble_entry, @object
GHC.Float.stgWord64ToDouble_entry:
_c3ewd:
	movq %r14,%rbx
	jmp *stg_word64ToDoublezh@gotpcrel(%rip)
	.size GHC.Float.stgWord64ToDouble_entry, .-GHC.Float.stgWord64ToDouble_entry


==================== Asm code ====================
2018-03-16 15:57:53.559053781 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.stgWord64ToDouble_info
.type GHC.Float.stgWord64ToDouble_info, @object
GHC.Float.stgWord64ToDouble_info:
	.quad	GHC.Float.stgWord64ToDouble_entry
	.quad	0
	.quad	14
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:57:53.562509859 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.castWord64ToDouble_closure
.type GHC.Float.castWord64ToDouble_closure, @object
GHC.Float.castWord64ToDouble_closure:
	.quad	GHC.Float.castWord64ToDouble_info


==================== Asm code ====================
2018-03-16 15:57:53.563343129 UTC

.section .text
.align 8
.globl GHC.Float.castWord64ToDouble_entry
.type GHC.Float.castWord64ToDouble_entry, @object
GHC.Float.castWord64ToDouble_entry:
_c3ewr:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3ewz
_c3ewA:
	leaq block_c3ewo_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3ewo
_c3ewp:
	movq (%rbx),%rax
	jmp *(%rax)
_c3ewz:
	leaq GHC.Float.castWord64ToDouble_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.castWord64ToDouble_entry, .-GHC.Float.castWord64ToDouble_entry


==================== Asm code ====================
2018-03-16 15:57:53.56403693 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.castWord64ToDouble_info
.type GHC.Float.castWord64ToDouble_info, @object
GHC.Float.castWord64ToDouble_info:
	.quad	GHC.Float.castWord64ToDouble_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:53.564684013 UTC

.section .text
.align 8
_c3ewo:
_c3ewo:
	leaq block_c3ewu_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rbx
	jmp *stg_word64ToDoublezh@gotpcrel(%rip)
	.size _c3ewo, .-_c3ewo


==================== Asm code ====================
2018-03-16 15:57:53.565316078 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3ewo_info:
	.quad	_c3ewo
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.566027053 UTC

.section .text
.align 8
_c3ewu:
_c3ewu:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3ewE
_c3ewD:
	movq GHC.Types.D#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movsd %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3ewE:
	movq $16,904(%r13)
	jmp *stg_gc_d1@gotpcrel(%rip)
	.size _c3ewu, .-_c3ewu


==================== Asm code ====================
2018-03-16 15:57:53.567192191 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3ewu_info:
	.quad	_c3ewu
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.569600931 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.stgDoubleToWord64_closure
.type GHC.Float.stgDoubleToWord64_closure, @object
GHC.Float.stgDoubleToWord64_closure:
	.quad	GHC.Float.stgDoubleToWord64_info


==================== Asm code ====================
2018-03-16 15:57:53.570294499 UTC

.section .text
.align 8
.globl GHC.Float.stgDoubleToWord64_entry
.type GHC.Float.stgDoubleToWord64_entry, @object
GHC.Float.stgDoubleToWord64_entry:
_c3ex0:
	jmp *stg_doubleToWord64zh@gotpcrel(%rip)
	.size GHC.Float.stgDoubleToWord64_entry, .-GHC.Float.stgDoubleToWord64_entry


==================== Asm code ====================
2018-03-16 15:57:53.570854398 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.stgDoubleToWord64_info
.type GHC.Float.stgDoubleToWord64_info, @object
GHC.Float.stgDoubleToWord64_info:
	.quad	GHC.Float.stgDoubleToWord64_entry
	.quad	0
	.quad	14
	.quad	4294967303


==================== Asm code ====================
2018-03-16 15:57:53.574575303 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.castDoubleToWord64_closure
.type GHC.Float.castDoubleToWord64_closure, @object
GHC.Float.castDoubleToWord64_closure:
	.quad	GHC.Float.castDoubleToWord64_info


==================== Asm code ====================
2018-03-16 15:57:53.575481651 UTC

.section .text
.align 8
.globl GHC.Float.castDoubleToWord64_entry
.type GHC.Float.castDoubleToWord64_entry, @object
GHC.Float.castDoubleToWord64_entry:
_c3exe:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3exm
_c3exn:
	leaq block_c3exb_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3exb
_c3exc:
	movq (%rbx),%rax
	jmp *(%rax)
_c3exm:
	leaq GHC.Float.castDoubleToWord64_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.castDoubleToWord64_entry, .-GHC.Float.castDoubleToWord64_entry


==================== Asm code ====================
2018-03-16 15:57:53.576159883 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.castDoubleToWord64_info
.type GHC.Float.castDoubleToWord64_info, @object
GHC.Float.castDoubleToWord64_info:
	.quad	GHC.Float.castDoubleToWord64_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:53.576996326 UTC

.section .text
.align 8
_c3exb:
_c3exb:
	leaq block_c3exh_info(%rip),%rax
	movq %rax,(%rbp)
	movsd 7(%rbx),%xmm1
	jmp *stg_doubleToWord64zh@gotpcrel(%rip)
	.size _c3exb, .-_c3exb


==================== Asm code ====================
2018-03-16 15:57:53.577679272 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3exb_info:
	.quad	_c3exb
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.578404451 UTC

.section .text
.align 8
_c3exh:
_c3exh:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3exr
_c3exq:
	movq GHC.Word.W64#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3exr:
	movq $16,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c3exh, .-_c3exh


==================== Asm code ====================
2018-03-16 15:57:53.579083409 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3exh_info:
	.quad	_c3exh
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.582988838 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fEnumFloat_$csucc_closure
.type GHC.Float.$fEnumFloat_$csucc_closure, @object
GHC.Float.$fEnumFloat_$csucc_closure:
	.quad	GHC.Float.$fEnumFloat_$csucc_info


==================== Asm code ====================
2018-03-16 15:57:53.583886134 UTC

.section .text
.align 8
.globl GHC.Float.$fEnumFloat_$csucc_entry
.type GHC.Float.$fEnumFloat_$csucc_entry, @object
GHC.Float.$fEnumFloat_$csucc_entry:
_c3exQ:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3exX
_c3exY:
	leaq block_c3exN_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3exN
_c3exO:
	movq (%rbx),%rax
	jmp *(%rax)
_c3exX:
	leaq GHC.Float.$fEnumFloat_$csucc_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fEnumFloat_$csucc_entry, .-GHC.Float.$fEnumFloat_$csucc_entry


==================== Asm code ====================
2018-03-16 15:57:53.58465255 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fEnumFloat_$csucc_info
.type GHC.Float.$fEnumFloat_$csucc_info, @object
GHC.Float.$fEnumFloat_$csucc_info:
	.quad	GHC.Float.$fEnumFloat_$csucc_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:53.585449137 UTC

.section .text
.align 8
_c3exN:
_c3exN:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3ey1
_c3ey0:
	movss 7(%rbx),%xmm0
	addss _n3eyb(%rip),%xmm0
	movq GHC.Types.F#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3ey1:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3exN, .-_c3exN
.section .rodata
.align 8
.align 4
_n3eyb:
	.byte	0
	.byte	0
	.byte	128
	.byte	63


==================== Asm code ====================
2018-03-16 15:57:53.586159078 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3exN_info:
	.quad	_c3exN
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.589630268 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fEnumFloat_$cpred_closure
.type GHC.Float.$fEnumFloat_$cpred_closure, @object
GHC.Float.$fEnumFloat_$cpred_closure:
	.quad	GHC.Float.$fEnumFloat_$cpred_info


==================== Asm code ====================
2018-03-16 15:57:53.590588093 UTC

.section .text
.align 8
.globl GHC.Float.$fEnumFloat_$cpred_entry
.type GHC.Float.$fEnumFloat_$cpred_entry, @object
GHC.Float.$fEnumFloat_$cpred_entry:
_c3eyo:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3eyv
_c3eyw:
	leaq block_c3eyl_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3eyl
_c3eym:
	movq (%rbx),%rax
	jmp *(%rax)
_c3eyv:
	leaq GHC.Float.$fEnumFloat_$cpred_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fEnumFloat_$cpred_entry, .-GHC.Float.$fEnumFloat_$cpred_entry


==================== Asm code ====================
2018-03-16 15:57:53.591294845 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fEnumFloat_$cpred_info
.type GHC.Float.$fEnumFloat_$cpred_info, @object
GHC.Float.$fEnumFloat_$cpred_info:
	.quad	GHC.Float.$fEnumFloat_$cpred_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:53.592153872 UTC

.section .text
.align 8
_c3eyl:
_c3eyl:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3eyz
_c3eyy:
	movss 7(%rbx),%xmm0
	subss _n3eyJ(%rip),%xmm0
	movq GHC.Types.F#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3eyz:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3eyl, .-_c3eyl
.section .rodata
.align 8
.align 4
_n3eyJ:
	.byte	0
	.byte	0
	.byte	128
	.byte	63


==================== Asm code ====================
2018-03-16 15:57:53.592891023 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3eyl_info:
	.quad	_c3eyl
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.594816845 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloat_closure
.type GHC.Float.$fRealFloat_closure, @object
GHC.Float.$fRealFloat_closure:
	.quad	GHC.Real.C:Real_con_info
	.quad	GHC.Float.$fNumFloat_closure+1
	.quad	GHC.Classes.$fOrdFloat_closure
	.quad	GHC.Float.$fRealFloat_$ctoRational_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:53.596553152 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFracFloat_closure
.type GHC.Float.$fRealFracFloat_closure, @object
GHC.Float.$fRealFracFloat_closure:
	.quad	GHC.Real.C:RealFrac_con_info
	.quad	GHC.Float.$fRealFloat_closure+1
	.quad	GHC.Float.$fFractionalFloat_closure+1
	.quad	GHC.Float.$fRealFracFloat_$cproperFraction_closure+2
	.quad	GHC.Float.$fRealFracFloat_$ctruncate_closure+2
	.quad	GHC.Float.$fRealFracFloat_$cround_closure+2
	.quad	GHC.Float.$fRealFracFloat_$cceiling_closure+2
	.quad	GHC.Float.$fRealFracFloat_$cfloor_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:53.600523096 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fEnumDouble_$csucc_closure
.type GHC.Float.$fEnumDouble_$csucc_closure, @object
GHC.Float.$fEnumDouble_$csucc_closure:
	.quad	GHC.Float.$fEnumDouble_$csucc_info


==================== Asm code ====================
2018-03-16 15:57:53.601432328 UTC

.section .text
.align 8
.globl GHC.Float.$fEnumDouble_$csucc_entry
.type GHC.Float.$fEnumDouble_$csucc_entry, @object
GHC.Float.$fEnumDouble_$csucc_entry:
_c3eyY:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3ez5
_c3ez6:
	leaq block_c3eyV_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3eyV
_c3eyW:
	movq (%rbx),%rax
	jmp *(%rax)
_c3ez5:
	leaq GHC.Float.$fEnumDouble_$csucc_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fEnumDouble_$csucc_entry, .-GHC.Float.$fEnumDouble_$csucc_entry


==================== Asm code ====================
2018-03-16 15:57:53.602089772 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fEnumDouble_$csucc_info
.type GHC.Float.$fEnumDouble_$csucc_info, @object
GHC.Float.$fEnumDouble_$csucc_info:
	.quad	GHC.Float.$fEnumDouble_$csucc_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:53.602892943 UTC

.section .text
.align 8
_c3eyV:
_c3eyV:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3ez9
_c3ez8:
	movsd 7(%rbx),%xmm0
	addsd _n3ezj(%rip),%xmm0
	movq GHC.Types.D#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3ez9:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3eyV, .-_c3eyV
.section .rodata
.align 8
.align 8
_n3ezj:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	240
	.byte	63


==================== Asm code ====================
2018-03-16 15:57:53.603557495 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3eyV_info:
	.quad	_c3eyV
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.607978723 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fEnumDouble_$cpred_closure
.type GHC.Float.$fEnumDouble_$cpred_closure, @object
GHC.Float.$fEnumDouble_$cpred_closure:
	.quad	GHC.Float.$fEnumDouble_$cpred_info


==================== Asm code ====================
2018-03-16 15:57:53.608967253 UTC

.section .text
.align 8
.globl GHC.Float.$fEnumDouble_$cpred_entry
.type GHC.Float.$fEnumDouble_$cpred_entry, @object
GHC.Float.$fEnumDouble_$cpred_entry:
_c3ezw:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3ezD
_c3ezE:
	leaq block_c3ezt_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3ezt
_c3ezu:
	movq (%rbx),%rax
	jmp *(%rax)
_c3ezD:
	leaq GHC.Float.$fEnumDouble_$cpred_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fEnumDouble_$cpred_entry, .-GHC.Float.$fEnumDouble_$cpred_entry


==================== Asm code ====================
2018-03-16 15:57:53.609708759 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fEnumDouble_$cpred_info
.type GHC.Float.$fEnumDouble_$cpred_info, @object
GHC.Float.$fEnumDouble_$cpred_info:
	.quad	GHC.Float.$fEnumDouble_$cpred_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:53.610466554 UTC

.section .text
.align 8
_c3ezt:
_c3ezt:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3ezH
_c3ezG:
	movsd 7(%rbx),%xmm0
	subsd _n3ezR(%rip),%xmm0
	movq GHC.Types.D#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3ezH:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3ezt, .-_c3ezt
.section .rodata
.align 8
.align 8
_n3ezR:
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	0
	.byte	240
	.byte	63


==================== Asm code ====================
2018-03-16 15:57:53.611132935 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3ezt_info:
	.quad	_c3ezt
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.613084251 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealDouble_closure
.type GHC.Float.$fRealDouble_closure, @object
GHC.Float.$fRealDouble_closure:
	.quad	GHC.Real.C:Real_con_info
	.quad	GHC.Float.$fNumDouble_closure+1
	.quad	GHC.Classes.$fOrdDouble_closure
	.quad	GHC.Float.$fRealDouble_$ctoRational_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:53.615393791 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFracDouble_closure
.type GHC.Float.$fRealFracDouble_closure, @object
GHC.Float.$fRealFracDouble_closure:
	.quad	GHC.Real.C:RealFrac_con_info
	.quad	GHC.Float.$fRealDouble_closure+1
	.quad	GHC.Float.$fFractionalDouble_closure+1
	.quad	GHC.Float.$fRealFracDouble_$cproperFraction_closure+2
	.quad	GHC.Float.$fRealFracDouble_$ctruncate_closure+2
	.quad	GHC.Float.$fRealFracDouble_$cround_closure+2
	.quad	GHC.Float.$fRealFracDouble_$cceiling_closure+2
	.quad	GHC.Float.$fRealFracDouble_$cfloor_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:53.618617627 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble_$cisNaN_closure
.type GHC.Float.$fRealFloatDouble_$cisNaN_closure, @object
GHC.Float.$fRealFloatDouble_$cisNaN_closure:
	.quad	GHC.Float.$fRealFloatDouble_$cisNaN_info


==================== Asm code ====================
2018-03-16 15:57:53.619516543 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFloatDouble_$cisNaN_entry
.type GHC.Float.$fRealFloatDouble_$cisNaN_entry, @object
GHC.Float.$fRealFloatDouble_$cisNaN_entry:
_c3eA6:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3eA7
_c3eA8:
	leaq block_c3eA3_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3eA3
_c3eA4:
	movq (%rbx),%rax
	jmp *(%rax)
_c3eA7:
	leaq GHC.Float.$fRealFloatDouble_$cisNaN_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFloatDouble_$cisNaN_entry, .-GHC.Float.$fRealFloatDouble_$cisNaN_entry


==================== Asm code ====================
2018-03-16 15:57:53.62016699 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble_$cisNaN_info
.type GHC.Float.$fRealFloatDouble_$cisNaN_info, @object
GHC.Float.$fRealFloatDouble_$cisNaN_info:
	.quad	GHC.Float.$fRealFloatDouble_$cisNaN_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:53.621052 UTC

.section .text
.align 8
_c3eA3:
_c3eA3:
	subq $8,%rsp
	movsd 7(%rbx),%xmm0
	movl $1,%eax
	call isDoubleNaN@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c3eAh
_c3eAg:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3eAh:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3eA3, .-_c3eA3


==================== Asm code ====================
2018-03-16 15:57:53.62175823 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3eA3_info:
	.quad	_c3eA3
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.62494566 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble_$cisInfinite_closure
.type GHC.Float.$fRealFloatDouble_$cisInfinite_closure, @object
GHC.Float.$fRealFloatDouble_$cisInfinite_closure:
	.quad	GHC.Float.$fRealFloatDouble_$cisInfinite_info


==================== Asm code ====================
2018-03-16 15:57:53.626283584 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFloatDouble_$cisInfinite_entry
.type GHC.Float.$fRealFloatDouble_$cisInfinite_entry, @object
GHC.Float.$fRealFloatDouble_$cisInfinite_entry:
_c3eAE:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3eAF
_c3eAG:
	leaq block_c3eAB_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3eAB
_c3eAC:
	movq (%rbx),%rax
	jmp *(%rax)
_c3eAF:
	leaq GHC.Float.$fRealFloatDouble_$cisInfinite_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFloatDouble_$cisInfinite_entry, .-GHC.Float.$fRealFloatDouble_$cisInfinite_entry


==================== Asm code ====================
2018-03-16 15:57:53.626926765 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble_$cisInfinite_info
.type GHC.Float.$fRealFloatDouble_$cisInfinite_info, @object
GHC.Float.$fRealFloatDouble_$cisInfinite_info:
	.quad	GHC.Float.$fRealFloatDouble_$cisInfinite_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:53.627705507 UTC

.section .text
.align 8
_c3eAB:
_c3eAB:
	subq $8,%rsp
	movsd 7(%rbx),%xmm0
	movl $1,%eax
	call isDoubleInfinite@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c3eAP
_c3eAO:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3eAP:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3eAB, .-_c3eAB


==================== Asm code ====================
2018-03-16 15:57:53.628485117 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3eAB_info:
	.quad	_c3eAB
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.631989034 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble_$cisDenormalized_closure
.type GHC.Float.$fRealFloatDouble_$cisDenormalized_closure, @object
GHC.Float.$fRealFloatDouble_$cisDenormalized_closure:
	.quad	GHC.Float.$fRealFloatDouble_$cisDenormalized_info


==================== Asm code ====================
2018-03-16 15:57:53.632952302 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFloatDouble_$cisDenormalized_entry
.type GHC.Float.$fRealFloatDouble_$cisDenormalized_entry, @object
GHC.Float.$fRealFloatDouble_$cisDenormalized_entry:
_c3eBc:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3eBd
_c3eBe:
	leaq block_c3eB9_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3eB9
_c3eBa:
	movq (%rbx),%rax
	jmp *(%rax)
_c3eBd:
	leaq GHC.Float.$fRealFloatDouble_$cisDenormalized_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFloatDouble_$cisDenormalized_entry, .-GHC.Float.$fRealFloatDouble_$cisDenormalized_entry


==================== Asm code ====================
2018-03-16 15:57:53.633999056 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble_$cisDenormalized_info
.type GHC.Float.$fRealFloatDouble_$cisDenormalized_info, @object
GHC.Float.$fRealFloatDouble_$cisDenormalized_info:
	.quad	GHC.Float.$fRealFloatDouble_$cisDenormalized_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:53.634777481 UTC

.section .text
.align 8
_c3eB9:
_c3eB9:
	subq $8,%rsp
	movsd 7(%rbx),%xmm0
	movl $1,%eax
	call isDoubleDenormalized@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c3eBn
_c3eBm:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3eBn:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3eB9, .-_c3eB9


==================== Asm code ====================
2018-03-16 15:57:53.635466128 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3eB9_info:
	.quad	_c3eB9
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.638660176 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble_$cisNegativeZero_closure
.type GHC.Float.$fRealFloatDouble_$cisNegativeZero_closure, @object
GHC.Float.$fRealFloatDouble_$cisNegativeZero_closure:
	.quad	GHC.Float.$fRealFloatDouble_$cisNegativeZero_info


==================== Asm code ====================
2018-03-16 15:57:53.639498786 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFloatDouble_$cisNegativeZero_entry
.type GHC.Float.$fRealFloatDouble_$cisNegativeZero_entry, @object
GHC.Float.$fRealFloatDouble_$cisNegativeZero_entry:
_c3eBK:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3eBL
_c3eBM:
	leaq block_c3eBH_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3eBH
_c3eBI:
	movq (%rbx),%rax
	jmp *(%rax)
_c3eBL:
	leaq GHC.Float.$fRealFloatDouble_$cisNegativeZero_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFloatDouble_$cisNegativeZero_entry, .-GHC.Float.$fRealFloatDouble_$cisNegativeZero_entry


==================== Asm code ====================
2018-03-16 15:57:53.64031112 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble_$cisNegativeZero_info
.type GHC.Float.$fRealFloatDouble_$cisNegativeZero_info, @object
GHC.Float.$fRealFloatDouble_$cisNegativeZero_info:
	.quad	GHC.Float.$fRealFloatDouble_$cisNegativeZero_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:53.641319635 UTC

.section .text
.align 8
_c3eBH:
_c3eBH:
	subq $8,%rsp
	movsd 7(%rbx),%xmm0
	movl $1,%eax
	call isDoubleNegativeZero@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c3eBV
_c3eBU:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3eBV:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3eBH, .-_c3eBH


==================== Asm code ====================
2018-03-16 15:57:53.641991995 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3eBH_info:
	.quad	_c3eBH
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.646086262 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat_$cisNaN_closure
.type GHC.Float.$fRealFloatFloat_$cisNaN_closure, @object
GHC.Float.$fRealFloatFloat_$cisNaN_closure:
	.quad	GHC.Float.$fRealFloatFloat_$cisNaN_info


==================== Asm code ====================
2018-03-16 15:57:53.647182985 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFloatFloat_$cisNaN_entry
.type GHC.Float.$fRealFloatFloat_$cisNaN_entry, @object
GHC.Float.$fRealFloatFloat_$cisNaN_entry:
_c3eCi:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3eCj
_c3eCk:
	leaq block_c3eCf_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3eCf
_c3eCg:
	movq (%rbx),%rax
	jmp *(%rax)
_c3eCj:
	leaq GHC.Float.$fRealFloatFloat_$cisNaN_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFloatFloat_$cisNaN_entry, .-GHC.Float.$fRealFloatFloat_$cisNaN_entry


==================== Asm code ====================
2018-03-16 15:57:53.64791287 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat_$cisNaN_info
.type GHC.Float.$fRealFloatFloat_$cisNaN_info, @object
GHC.Float.$fRealFloatFloat_$cisNaN_info:
	.quad	GHC.Float.$fRealFloatFloat_$cisNaN_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:53.648691909 UTC

.section .text
.align 8
_c3eCf:
_c3eCf:
	subq $8,%rsp
	movss 7(%rbx),%xmm0
	movl $1,%eax
	call isFloatNaN@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c3eCt
_c3eCs:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3eCt:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3eCf, .-_c3eCf


==================== Asm code ====================
2018-03-16 15:57:53.649714482 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3eCf_info:
	.quad	_c3eCf
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.653044538 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat_$cisInfinite_closure
.type GHC.Float.$fRealFloatFloat_$cisInfinite_closure, @object
GHC.Float.$fRealFloatFloat_$cisInfinite_closure:
	.quad	GHC.Float.$fRealFloatFloat_$cisInfinite_info


==================== Asm code ====================
2018-03-16 15:57:53.654046196 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFloatFloat_$cisInfinite_entry
.type GHC.Float.$fRealFloatFloat_$cisInfinite_entry, @object
GHC.Float.$fRealFloatFloat_$cisInfinite_entry:
_c3eCQ:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3eCR
_c3eCS:
	leaq block_c3eCN_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3eCN
_c3eCO:
	movq (%rbx),%rax
	jmp *(%rax)
_c3eCR:
	leaq GHC.Float.$fRealFloatFloat_$cisInfinite_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFloatFloat_$cisInfinite_entry, .-GHC.Float.$fRealFloatFloat_$cisInfinite_entry


==================== Asm code ====================
2018-03-16 15:57:53.654704937 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat_$cisInfinite_info
.type GHC.Float.$fRealFloatFloat_$cisInfinite_info, @object
GHC.Float.$fRealFloatFloat_$cisInfinite_info:
	.quad	GHC.Float.$fRealFloatFloat_$cisInfinite_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:53.655541659 UTC

.section .text
.align 8
_c3eCN:
_c3eCN:
	subq $8,%rsp
	movss 7(%rbx),%xmm0
	movl $1,%eax
	call isFloatInfinite@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c3eD1
_c3eD0:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3eD1:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3eCN, .-_c3eCN


==================== Asm code ====================
2018-03-16 15:57:53.656230164 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3eCN_info:
	.quad	_c3eCN
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.659510023 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat_$cisDenormalized_closure
.type GHC.Float.$fRealFloatFloat_$cisDenormalized_closure, @object
GHC.Float.$fRealFloatFloat_$cisDenormalized_closure:
	.quad	GHC.Float.$fRealFloatFloat_$cisDenormalized_info


==================== Asm code ====================
2018-03-16 15:57:53.660405124 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFloatFloat_$cisDenormalized_entry
.type GHC.Float.$fRealFloatFloat_$cisDenormalized_entry, @object
GHC.Float.$fRealFloatFloat_$cisDenormalized_entry:
_c3eDo:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3eDp
_c3eDq:
	leaq block_c3eDl_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3eDl
_c3eDm:
	movq (%rbx),%rax
	jmp *(%rax)
_c3eDp:
	leaq GHC.Float.$fRealFloatFloat_$cisDenormalized_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFloatFloat_$cisDenormalized_entry, .-GHC.Float.$fRealFloatFloat_$cisDenormalized_entry


==================== Asm code ====================
2018-03-16 15:57:53.661091454 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat_$cisDenormalized_info
.type GHC.Float.$fRealFloatFloat_$cisDenormalized_info, @object
GHC.Float.$fRealFloatFloat_$cisDenormalized_info:
	.quad	GHC.Float.$fRealFloatFloat_$cisDenormalized_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:53.661971244 UTC

.section .text
.align 8
_c3eDl:
_c3eDl:
	subq $8,%rsp
	movss 7(%rbx),%xmm0
	movl $1,%eax
	call isFloatDenormalized@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c3eDz
_c3eDy:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3eDz:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3eDl, .-_c3eDl


==================== Asm code ====================
2018-03-16 15:57:53.662608653 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3eDl_info:
	.quad	_c3eDl
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.666048468 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat_$cisNegativeZero_closure
.type GHC.Float.$fRealFloatFloat_$cisNegativeZero_closure, @object
GHC.Float.$fRealFloatFloat_$cisNegativeZero_closure:
	.quad	GHC.Float.$fRealFloatFloat_$cisNegativeZero_info


==================== Asm code ====================
2018-03-16 15:57:53.666887127 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFloatFloat_$cisNegativeZero_entry
.type GHC.Float.$fRealFloatFloat_$cisNegativeZero_entry, @object
GHC.Float.$fRealFloatFloat_$cisNegativeZero_entry:
_c3eDW:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3eDX
_c3eDY:
	leaq block_c3eDT_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3eDT
_c3eDU:
	movq (%rbx),%rax
	jmp *(%rax)
_c3eDX:
	leaq GHC.Float.$fRealFloatFloat_$cisNegativeZero_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFloatFloat_$cisNegativeZero_entry, .-GHC.Float.$fRealFloatFloat_$cisNegativeZero_entry


==================== Asm code ====================
2018-03-16 15:57:53.667566604 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat_$cisNegativeZero_info
.type GHC.Float.$fRealFloatFloat_$cisNegativeZero_info, @object
GHC.Float.$fRealFloatFloat_$cisNegativeZero_info:
	.quad	GHC.Float.$fRealFloatFloat_$cisNegativeZero_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:53.668352703 UTC

.section .text
.align 8
_c3eDT:
_c3eDT:
	subq $8,%rsp
	movss 7(%rbx),%xmm0
	movl $1,%eax
	call isFloatNegativeZero@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c3eE7
_c3eE6:
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3eE7:
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3eDT, .-_c3eDT


==================== Asm code ====================
2018-03-16 15:57:53.668987738 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3eDT_info:
	.quad	_c3eDT
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.670737416 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl6_r2UqE_bytes:
	.asciz "Int"


==================== Asm code ====================
2018-03-16 15:57:53.673716883 UTC

.section .data
.align 8
.align 1
lvl7_r2UqF_closure:
	.quad	lvl7_r2UqF_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:53.674702981 UTC

.section .text
.align 8
lvl7_r2UqF_entry:
_c3eEu:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3eEv
_c3eEw:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c3eEt
_c3eEs:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl6_r2UqE_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c3eEv:
	jmp *-16(%r13)
_c3eEt:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl7_r2UqF_entry, .-lvl7_r2UqF_entry


==================== Asm code ====================
2018-03-16 15:57:53.675382499 UTC

.section .data.rel.ro
.align 8
.align 1
lvl7_r2UqF_info:
	.quad	lvl7_r2UqF_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:57:53.678179559 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.expts2_closure
.type GHC.Float.expts2_closure, @object
GHC.Float.expts2_closure:
	.quad	GHC.Float.expts2_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:53.679184319 UTC

.section .text
.align 8
.globl GHC.Float.expts2_entry
.type GHC.Float.expts2_entry, @object
GHC.Float.expts2_entry:
_c3eEK:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3eEO
_c3eEN:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	leaq lvl7_r2UqF_closure(%rip),%r9
	leaq -7(%r12),%r8
	leaq GHC.Float.maxExpt_closure+1(%rip),%rdi
	leaq GHC.Float.minExpt_closure+1(%rip),%rsi
	movq GHC.Show.$fShowInt_closure@gotpcrel(%rip),%r14
	jmp *GHC.Arr.$windexError_entry@gotpcrel(%rip)
_c3eEO:
	movq $16,904(%r13)
	leaq GHC.Float.expts2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.expts2_entry, .-GHC.Float.expts2_entry


==================== Asm code ====================
2018-03-16 15:57:53.679896804 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.expts2_info
.type GHC.Float.expts2_info, @object
GHC.Float.expts2_info:
	.quad	GHC.Float.expts2_entry
	.quad	0
	.quad	30064771086
	.quad	4294967300
	.quad	S3bQP_srt+696


==================== Asm code ====================
2018-03-16 15:57:53.686721785 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.expts1_closure
.type GHC.Float.expts1_closure, @object
GHC.Float.expts1_closure:
	.quad	GHC.Float.expts1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:53.687701124 UTC

.section .text
.align 8
sat_s3aZS_entry:
_c3eFo:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3eFp
_c3eFv:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	testq %rax,%rax
	jge _c3eFm
_c3eFn:
	movq GHC.Real.^1_closure@gotpcrel(%rip),%rbx
	addq $-16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c3eFu:
	movq GHC.Real.$fEnumRatio1_closure@gotpcrel(%rip),%rbx
	addq $-16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c3eFm:
	testq %rax,%rax
	je _c3eFu
_c3eFt:
	movq %rax,%rsi
	leaq GHC.Float.$fRealFloatDouble5_closure(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Real.$wf_entry@gotpcrel(%rip)
_c3eFp:
	jmp *-16(%r13)
	.size sat_s3aZS_entry, .-sat_s3aZS_entry


==================== Asm code ====================
2018-03-16 15:57:53.689090466 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3aZS_info:
	.quad	sat_s3aZS_entry
	.quad	4294967296
	.quad	70398808948753
	.quad	S3bQP_srt+440


==================== Asm code ====================
2018-03-16 15:57:53.689805634 UTC

.section .data.rel.ro
.align 8
.align 1
u3eG3_srtd:
	.quad	S3bQP_srt+440
	.quad	37
	.quad	111669166087


==================== Asm code ====================
2018-03-16 15:57:53.690620134 UTC

.section .text
.align 8
.globl GHC.Float.expts1_entry
.type GHC.Float.expts1_entry, @object
GHC.Float.expts1_entry:
_c3eFw:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3eFx
_c3eFy:
	leaq block_c3eEY_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq GHC.Arr.arrEleBottom_closure@gotpcrel(%rip),%r14
	movl $1101,%ebx
	addq $-8,%rbp
	jmp *stg_newArray#@gotpcrel(%rip)
_c3eFx:
	leaq GHC.Float.expts1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.expts1_entry, .-GHC.Float.expts1_entry


==================== Asm code ====================
2018-03-16 15:57:53.691291716 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.expts1_info
.type GHC.Float.expts1_info, @object
GHC.Float.expts1_info:
	.quad	GHC.Float.expts1_entry
	.quad	0
	.quad	-4294967282
	.quad	4294967299
	.quad	u3eG3_srtd


==================== Asm code ====================
2018-03-16 15:57:53.691842323 UTC

.section .data.rel.ro
.align 8
.align 1
u3eG4_srtd:
	.quad	S3bQP_srt+440
	.quad	34
	.quad	8589950983


==================== Asm code ====================
2018-03-16 15:57:53.692573544 UTC

.section .text
.align 8
_c3eEY:
_c3eEY:
	movq $0,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp _c3eF5
	.size _c3eEY, .-_c3eEY


==================== Asm code ====================
2018-03-16 15:57:53.693202628 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3eEY_info:
	.quad	_c3eEY
	.quad	0
	.quad	-4294967266
	.quad	u3eG4_srtd


==================== Asm code ====================
2018-03-16 15:57:53.694178274 UTC

.section .text
.align 8
_c3eF5:
_c3eF5:
	addq $24,%r12
	movq (%rbp),%rax
	cmpq 856(%r13),%r12
	ja _c3eFJ
_c3eFI:
	cmpq $0,%rax
	jl _c3eFN
_c3eFT:
	cmpq $1100,%rax
	jg _c3eFN
_c3eFS:
	leaq sat_s3aZS_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,(%r12)
	movq 8(%rbp),%rbx
	leaq -16(%r12),%rcx
	movq %rcx,24(%rbx,%rax,8)
	movq stg_MUT_ARR_PTRS_DIRTY_info@gotpcrel(%rip),%rcx
	movq %rcx,(%rbx)
	leaq 24(%rbx),%rcx
	movq %rax,%rdx
	shrq $7,%rdx
	movq 8(%rbx),%rbx
	shlq $3,%rbx
	addq %rdx,%rbx
	movb $1,(%rcx,%rbx,1)
	cmpq $1100,%rax
	je _c3eFB
_c3eFQ:
	incq %rax
	movq %rax,(%rbp)
	jmp _c3eF5
_c3eFN:
	addq $-24,%r12
	movq %rax,%r14
	addq $16,%rbp
	jmp GHC.Float.expts2_entry
_c3eFJ:
	movq $24,904(%r13)
	leaq block_c3eF4_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c3eF5, .-_c3eF5


==================== Asm code ====================
2018-03-16 15:57:53.694967832 UTC

.section .data.rel.ro
.align 8
.align 1
u3eG5_srtd:
	.quad	S3bQP_srt+440
	.quad	34
	.quad	8589950983


==================== Asm code ====================
2018-03-16 15:57:53.695593645 UTC

.section .text
.align 8
_c3eF4:
_c3eF4:
	movq %rbx,(%rbp)
	jmp _c3eF5
	.size _c3eF4, .-_c3eF4


==================== Asm code ====================
2018-03-16 15:57:53.696161232 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3eF4_info:
	.quad	_c3eF4
	.quad	1
	.quad	-4294967266
	.quad	u3eG5_srtd


==================== Asm code ====================
2018-03-16 15:57:53.696971234 UTC

.section .text
.align 8
_c3eFB:
_c3eFB:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c3eFG
_c3eFF:
	movq 8(%rbp),%rax
	movq stg_MUT_ARR_PTRS_FROZEN0_info@gotpcrel(%rip),%rbx
	movq %rbx,(%rax)
	movq GHC.Arr.Array_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-32(%r12)
	leaq GHC.Float.minExpt_closure+1(%rip),%rbx
	movq %rbx,-24(%r12)
	leaq GHC.Float.maxExpt_closure+1(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,-8(%r12)
	movq $1101,(%r12)
	leaq -31(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3eFG:
	movq $40,904(%r13)
	leaq block_c3eFB_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c3eFB, .-_c3eFB


==================== Asm code ====================
2018-03-16 15:57:53.6982675 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3eFB_info:
	.quad	_c3eFB
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.701198011 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.expts_closure
.type GHC.Float.expts_closure, @object
GHC.Float.expts_closure:
	.quad	GHC.Float.expts_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:53.702295793 UTC

.section .text
.align 8
.globl GHC.Float.expts_entry
.type GHC.Float.expts_entry, @object
GHC.Float.expts_entry:
_c3eGU:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3eGV
_c3eGW:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c3eGR
_c3eGQ:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq block_c3eGS_info(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-24,%rbp
	jmp GHC.Float.expts1_entry
_c3eGV:
	jmp *-16(%r13)
_c3eGR:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Float.expts_entry, .-GHC.Float.expts_entry


==================== Asm code ====================
2018-03-16 15:57:53.7030683 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.expts_info
.type GHC.Float.expts_info, @object
GHC.Float.expts_info:
	.quad	GHC.Float.expts_entry
	.quad	0
	.quad	4294967317
	.quad	S3bQP_srt+728


==================== Asm code ====================
2018-03-16 15:57:53.703712809 UTC

.section .text
.align 8
_c3eGS:
_c3eGS:
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3eGS, .-_c3eGS


==================== Asm code ====================
2018-03-16 15:57:53.70427099 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3eGS_info:
	.quad	_c3eGS
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.706056421 UTC

.section .data
.align 8
.align 1
sat_s3aZZ_closure:
	.quad	GHC.Types.I#_con_info
	.quad	10


==================== Asm code ====================
2018-03-16 15:57:53.707896195 UTC

.section .data
.align 8
.align 1
sat_s3b00_closure:
	.quad	:_con_info
	.quad	sat_s3aZZ_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:53.711045246 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.expts4_closure
.type GHC.Float.expts4_closure, @object
GHC.Float.expts4_closure:
	.quad	GHC.Float.expts4_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:53.712122054 UTC

.section .text
.align 8
.globl GHC.Float.expts4_entry
.type GHC.Float.expts4_entry, @object
GHC.Float.expts4_entry:
_c3eHk:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3eHl
_c3eHm:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c3eHj
_c3eHi:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq sat_s3b00_closure+2(%rip),%rsi
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%r14
	addq $-16,%rbp
	jmp *GHC.Integer.Type.mkInteger_entry@gotpcrel(%rip)
_c3eHl:
	jmp *-16(%r13)
_c3eHj:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Float.expts4_entry, .-GHC.Float.expts4_entry


==================== Asm code ====================
2018-03-16 15:57:53.712866694 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.expts4_info
.type GHC.Float.expts4_info, @object
GHC.Float.expts4_info:
	.quad	GHC.Float.expts4_entry
	.quad	0
	.quad	4294967317
	.quad	S3bQP_srt+736


==================== Asm code ====================
2018-03-16 15:57:53.715795693 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.expts5_closure
.type GHC.Float.expts5_closure, @object
GHC.Float.expts5_closure:
	.quad	GHC.Float.expts5_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:53.716758242 UTC

.section .text
.align 8
.globl GHC.Float.expts5_entry
.type GHC.Float.expts5_entry, @object
GHC.Float.expts5_entry:
_c3eHB:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3eHF
_c3eHE:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	leaq lvl7_r2UqF_closure(%rip),%r9
	leaq -7(%r12),%r8
	leaq GHC.Float.maxExpt10_closure+1(%rip),%rdi
	leaq GHC.Float.minExpt_closure+1(%rip),%rsi
	movq GHC.Show.$fShowInt_closure@gotpcrel(%rip),%r14
	jmp *GHC.Arr.$windexError_entry@gotpcrel(%rip)
_c3eHF:
	movq $16,904(%r13)
	leaq GHC.Float.expts5_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.expts5_entry, .-GHC.Float.expts5_entry


==================== Asm code ====================
2018-03-16 15:57:53.717550008 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.expts5_info
.type GHC.Float.expts5_info, @object
GHC.Float.expts5_info:
	.quad	GHC.Float.expts5_entry
	.quad	0
	.quad	296352743438
	.quad	4294967300
	.quad	S3bQP_srt+696


==================== Asm code ====================
2018-03-16 15:57:53.724175131 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.expts3_closure
.type GHC.Float.expts3_closure, @object
GHC.Float.expts3_closure:
	.quad	GHC.Float.expts3_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:53.725661383 UTC

.section .text
.align 8
sat_s3b0m_entry:
_c3eIf:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3eIg
_c3eIm:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	testq %rax,%rax
	jge _c3eId
_c3eIe:
	movq GHC.Real.^1_closure@gotpcrel(%rip),%rbx
	addq $-16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c3eIl:
	movq GHC.Real.$fEnumRatio1_closure@gotpcrel(%rip),%rbx
	addq $-16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c3eId:
	testq %rax,%rax
	je _c3eIl
_c3eIk:
	movq %rax,%rsi
	leaq GHC.Float.expts4_closure(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Real.$wf_entry@gotpcrel(%rip)
_c3eIg:
	jmp *-16(%r13)
	.size sat_s3b0m_entry, .-sat_s3b0m_entry


==================== Asm code ====================
2018-03-16 15:57:53.72641162 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3b0m_info:
	.quad	sat_s3b0m_entry
	.quad	4294967296
	.quad	64424509457
	.quad	S3bQP_srt+752


==================== Asm code ====================
2018-03-16 15:57:53.727157683 UTC

.section .text
.align 8
.globl GHC.Float.expts3_entry
.type GHC.Float.expts3_entry, @object
GHC.Float.expts3_entry:
_c3eIn:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3eIo
_c3eIp:
	leaq block_c3eHP_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq GHC.Arr.arrEleBottom_closure@gotpcrel(%rip),%r14
	movl $325,%ebx
	addq $-8,%rbp
	jmp *stg_newArray#@gotpcrel(%rip)
_c3eIo:
	leaq GHC.Float.expts3_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.expts3_entry, .-GHC.Float.expts3_entry


==================== Asm code ====================
2018-03-16 15:57:53.727845687 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.expts3_info
.type GHC.Float.expts3_info, @object
GHC.Float.expts3_info:
	.quad	GHC.Float.expts3_entry
	.quad	0
	.quad	2168958484494
	.quad	4294967299
	.quad	S3bQP_srt+720


==================== Asm code ====================
2018-03-16 15:57:53.729124093 UTC

.section .text
.align 8
_c3eHP:
_c3eHP:
	movq $0,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp _c3eHW
	.size _c3eHP, .-_c3eHP


==================== Asm code ====================
2018-03-16 15:57:53.72998397 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3eHP_info:
	.quad	_c3eHP
	.quad	0
	.quad	133143986206
	.quad	S3bQP_srt+744


==================== Asm code ====================
2018-03-16 15:57:53.731030434 UTC

.section .text
.align 8
_c3eHW:
_c3eHW:
	addq $24,%r12
	movq (%rbp),%rax
	cmpq 856(%r13),%r12
	ja _c3eIA
_c3eIz:
	cmpq $0,%rax
	jl _c3eIE
_c3eIK:
	cmpq $324,%rax
	jg _c3eIE
_c3eIJ:
	leaq sat_s3b0m_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,(%r12)
	movq 8(%rbp),%rbx
	leaq -16(%r12),%rcx
	movq %rcx,24(%rbx,%rax,8)
	movq stg_MUT_ARR_PTRS_DIRTY_info@gotpcrel(%rip),%rcx
	movq %rcx,(%rbx)
	leaq 24(%rbx),%rcx
	movq %rax,%rdx
	shrq $7,%rdx
	movq 8(%rbx),%rbx
	shlq $3,%rbx
	addq %rdx,%rbx
	movb $1,(%rcx,%rbx,1)
	cmpq $324,%rax
	je _c3eIs
_c3eIH:
	incq %rax
	movq %rax,(%rbp)
	jmp _c3eHW
_c3eIE:
	addq $-24,%r12
	movq %rax,%r14
	addq $16,%rbp
	jmp GHC.Float.expts5_entry
_c3eIA:
	movq $24,904(%r13)
	leaq block_c3eHV_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c3eHW, .-_c3eHW


==================== Asm code ====================
2018-03-16 15:57:53.731930411 UTC

.section .text
.align 8
_c3eHV:
_c3eHV:
	movq %rbx,(%rbp)
	jmp _c3eHW
	.size _c3eHV, .-_c3eHV


==================== Asm code ====================
2018-03-16 15:57:53.732494528 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3eHV_info:
	.quad	_c3eHV
	.quad	1
	.quad	133143986206
	.quad	S3bQP_srt+744


==================== Asm code ====================
2018-03-16 15:57:53.733326457 UTC

.section .text
.align 8
_c3eIs:
_c3eIs:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c3eIx
_c3eIw:
	movq 8(%rbp),%rax
	movq stg_MUT_ARR_PTRS_FROZEN0_info@gotpcrel(%rip),%rbx
	movq %rbx,(%rax)
	movq GHC.Arr.Array_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-32(%r12)
	leaq GHC.Float.minExpt_closure+1(%rip),%rbx
	movq %rbx,-24(%r12)
	leaq GHC.Float.maxExpt10_closure+1(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,-8(%r12)
	movq $325,(%r12)
	leaq -31(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3eIx:
	movq $40,904(%r13)
	leaq block_c3eIs_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c3eIs, .-_c3eIs


==================== Asm code ====================
2018-03-16 15:57:53.734039588 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3eIs_info:
	.quad	_c3eIs
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.737207293 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.expts10_closure
.type GHC.Float.expts10_closure, @object
GHC.Float.expts10_closure:
	.quad	GHC.Float.expts10_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:53.738316743 UTC

.section .text
.align 8
.globl GHC.Float.expts10_entry
.type GHC.Float.expts10_entry, @object
GHC.Float.expts10_entry:
_c3eJF:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3eJG
_c3eJH:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c3eJC
_c3eJB:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq block_c3eJD_info(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-24,%rbp
	jmp GHC.Float.expts3_entry
_c3eJG:
	jmp *-16(%r13)
_c3eJC:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Float.expts10_entry, .-GHC.Float.expts10_entry


==================== Asm code ====================
2018-03-16 15:57:53.739144774 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.expts10_info
.type GHC.Float.expts10_info, @object
GHC.Float.expts10_info:
	.quad	GHC.Float.expts10_entry
	.quad	0
	.quad	4294967317
	.quad	S3bQP_srt+784


==================== Asm code ====================
2018-03-16 15:57:53.739804366 UTC

.section .text
.align 8
_c3eJD:
_c3eJD:
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3eJD, .-_c3eJD


==================== Asm code ====================
2018-03-16 15:57:53.740410099 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3eJD_info:
	.quad	_c3eJD
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.745963662 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$wintegerLogBase_closure
.type GHC.Float.$wintegerLogBase_closure, @object
GHC.Float.$wintegerLogBase_closure:
	.quad	GHC.Float.$wintegerLogBase_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:53.746550628 UTC

.section .data.rel.ro
.align 8
.align 1
u3eKE_srtd:
	.quad	S3bQP_srt+64
	.quad	93
	.quad	2305843009213693953
	.quad	402653184


==================== Asm code ====================
2018-03-16 15:57:53.747394865 UTC

.section .text
.align 8
.globl GHC.Float.$wintegerLogBase_entry
.type GHC.Float.$wintegerLogBase_entry, @object
GHC.Float.$wintegerLogBase_entry:
_c3eK6:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3eK7
_c3eK8:
	leaq block_c3eK1_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rax
	movq %r14,%rsi
	movq %r14,%rbx
	movq %rax,%r14
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.Integer.Type.ltInteger#_entry@gotpcrel(%rip)
_c3eK7:
	leaq GHC.Float.$wintegerLogBase_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$wintegerLogBase_entry, .-GHC.Float.$wintegerLogBase_entry


==================== Asm code ====================
2018-03-16 15:57:53.748179745 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$wintegerLogBase_info
.type GHC.Float.$wintegerLogBase_info, @object
GHC.Float.$wintegerLogBase_info:
	.quad	GHC.Float.$wintegerLogBase_entry
	.quad	0
	.quad	-4294967282
	.quad	8589934607
	.quad	u3eKE_srtd


==================== Asm code ====================
2018-03-16 15:57:53.748767804 UTC

.section .data.rel.ro
.align 8
.align 1
u3eKF_srtd:
	.quad	S3bQP_srt+64
	.quad	92
	.quad	2305843009213693953
	.quad	134217728


==================== Asm code ====================
2018-03-16 15:57:53.749585183 UTC

.section .text
.align 8
_c3eK1:
_c3eK1:
	cmpq $1,%rbx
	je _c3eK5
_c3eK4:
	leaq block_c3eKb_info(%rip),%rax
	movq %rax,(%rbp)
	leaq GHC.Float.$fRealFloatDouble5_closure(%rip),%rsi
	movq 8(%rbp),%r14
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
_c3eK5:
	xorl %ebx,%ebx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3eK1, .-_c3eK1


==================== Asm code ====================
2018-03-16 15:57:53.750248531 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3eK1_info:
	.quad	_c3eK1
	.quad	2
	.quad	-4294967266
	.quad	u3eKF_srtd


==================== Asm code ====================
2018-03-16 15:57:53.750814146 UTC

.section .data.rel.ro
.align 8
.align 1
u3eKG_srtd:
	.quad	S3bQP_srt+64
	.quad	92
	.quad	1
	.quad	134217728


==================== Asm code ====================
2018-03-16 15:57:53.751638052 UTC

.section .text
.align 8
_c3eKb:
_c3eKb:
	movq 16(%rbp),%rax
	cmpq $1,%rbx
	je _c3eKn
_c3eKi:
	movq %rax,%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp *GHC.Integer.Logarithms.integerLogBase#_entry@gotpcrel(%rip)
_c3eKn:
	leaq block_c3eKl_info(%rip),%rbx
	movq %rbx,16(%rbp)
	movq %rax,%rbx
	addq $16,%rbp
	testb $7,%bl
	jne _c3eKl
_c3eKo:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3eKb, .-_c3eKb


==================== Asm code ====================
2018-03-16 15:57:53.752287472 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3eKb_info:
	.quad	_c3eKb
	.quad	2
	.quad	-4294967266
	.quad	u3eKG_srtd


==================== Asm code ====================
2018-03-16 15:57:53.753070781 UTC

.section .text
.align 8
_c3eKl:
_c3eKl:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c3eKy
_c3eKu:
	movq $-1,%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3eKy:
	movq 7(%rbx),%rsi
	xorl %r14d,%r14d
	addq $8,%rbp
	jmp *GHC.Integer.Logarithms.Internals.integerLog2#_step_entry@gotpcrel(%rip)
	.size _c3eKl, .-_c3eKl


==================== Asm code ====================
2018-03-16 15:57:53.753770842 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3eKl_info:
	.quad	_c3eKl
	.quad	0
	.quad	4294967326
	.quad	S3bQP_srt+808


==================== Asm code ====================
2018-03-16 15:57:53.756986539 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.integerLogBase_closure
.type GHC.Float.integerLogBase_closure, @object
GHC.Float.integerLogBase_closure:
	.quad	GHC.Float.integerLogBase_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:53.758131353 UTC

.section .text
.align 8
.globl GHC.Float.integerLogBase_entry
.type GHC.Float.integerLogBase_entry, @object
GHC.Float.integerLogBase_entry:
_c3eLc:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3eLg
_c3eLh:
	leaq block_c3eLa_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Float.$wintegerLogBase_entry
_c3eLg:
	leaq GHC.Float.integerLogBase_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.integerLogBase_entry, .-GHC.Float.integerLogBase_entry


==================== Asm code ====================
2018-03-16 15:57:53.758834707 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.integerLogBase_info
.type GHC.Float.integerLogBase_info, @object
GHC.Float.integerLogBase_info:
	.quad	GHC.Float.integerLogBase_entry
	.quad	0
	.quad	21474836494
	.quad	8589934607
	.quad	S3bQP_srt+800


==================== Asm code ====================
2018-03-16 15:57:53.759566415 UTC

.section .text
.align 8
_c3eLa:
_c3eLa:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3eLk
_c3eLj:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3eLk:
	movq $16,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c3eLa, .-_c3eLa


==================== Asm code ====================
2018-03-16 15:57:53.760200046 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3eLa_info:
	.quad	_c3eLa
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.765013205 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$dmexponent_closure
.type GHC.Float.$dmexponent_closure, @object
GHC.Float.$dmexponent_closure:
	.quad	GHC.Float.$dmexponent_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:53.76594041 UTC

.section .text
.align 8
.globl GHC.Float.$dmexponent_entry
.type GHC.Float.$dmexponent_entry, @object
GHC.Float.$dmexponent_entry:
_c3eLC:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c3eLD
_c3eLE:
	leaq block_c3eLA_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %r14,%rax
	movq stg_ap_p_info@gotpcrel(%rip),%rbx
	movq %rbx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rax,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-40,%rbp
	jmp GHC.Float.decodeFloat_entry
_c3eLD:
	leaq GHC.Float.$dmexponent_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$dmexponent_entry, .-GHC.Float.$dmexponent_entry


==================== Asm code ====================
2018-03-16 15:57:53.766656131 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$dmexponent_info
.type GHC.Float.$dmexponent_info, @object
GHC.Float.$dmexponent_info:
	.quad	GHC.Float.$dmexponent_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S3bQP_srt+824


==================== Asm code ====================
2018-03-16 15:57:53.767359151 UTC

.section .text
.align 8
_c3eLA:
_c3eLA:
	leaq block_c3eLH_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq GHC.Float.rationalToDouble5_closure(%rip),%rsi
	movq 7(%rbx),%r14
	movq 15(%rbx),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
	.size _c3eLA, .-_c3eLA


==================== Asm code ====================
2018-03-16 15:57:53.767991045 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3eLA_info:
	.quad	_c3eLA
	.quad	2
	.quad	4294967326
	.quad	S3bQP_srt+832


==================== Asm code ====================
2018-03-16 15:57:53.769425118 UTC

.section .text
.align 8
_c3eLH:
_c3eLH:
	cmpq $1,%rbx
	je _c3eM9
_c3eM1:
	movq 8(%rbp),%rax
	leaq block_c3eLM_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c3eLM
_c3eLN:
	movq (%rbx),%rax
	jmp *(%rax)
_c3eM9:
	leaq GHC.Float.minExpt_closure+1(%rip),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3eLH, .-_c3eLH


==================== Asm code ====================
2018-03-16 15:57:53.770198306 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3eLH_info:
	.quad	_c3eLH
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.770977721 UTC

.section .text
.align 8
_c3eLM:
_c3eLM:
	movq 8(%rbp),%rax
	leaq block_c3eLR_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-8(%rbp)
	movq 16(%rbp),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq %rax,16(%rbp)
	addq $-8,%rbp
	jmp GHC.Float.floatDigits_entry
	.size _c3eLM, .-_c3eLM


==================== Asm code ====================
2018-03-16 15:57:53.771678829 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3eLM_info:
	.quad	_c3eLM
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.772420822 UTC

.section .text
.align 8
_c3eLR:
_c3eLR:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3eM5
_c3eM4:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	addq (%rax),%rbx
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3eM5:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3eLR, .-_c3eLR


==================== Asm code ====================
2018-03-16 15:57:53.773100333 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3eLR_info:
	.quad	_c3eLR
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.778216254 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$dmsignificand_closure
.type GHC.Float.$dmsignificand_closure, @object
GHC.Float.$dmsignificand_closure:
	.quad	GHC.Float.$dmsignificand_info


==================== Asm code ====================
2018-03-16 15:57:53.779069406 UTC

.section .text
.align 8
sat_s3b0W_entry:
_c3eMR:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c3eMY
_c3eMZ:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3eMP_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	addq $-40,%rbp
	jmp GHC.Float.floatDigits_entry
_c3eMY:
	jmp *-16(%r13)
	.size sat_s3b0W_entry, .-sat_s3b0W_entry


==================== Asm code ====================
2018-03-16 15:57:53.779741124 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3b0W_info:
	.quad	sat_s3b0W_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:53.780483676 UTC

.section .text
.align 8
_c3eMP:
_c3eMP:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3eN2
_c3eN1:
	movq 7(%rbx),%rax
	negq %rax
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3eN2:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3eMP, .-_c3eMP


==================== Asm code ====================
2018-03-16 15:57:53.781109831 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3eMP_info:
	.quad	_c3eMP
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.781910173 UTC

.section .text
.align 8
sat_s3b0S_entry:
_c3eN9:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c3eNa
_c3eNb:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3eN7_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-32(%rbp)
	addq $-40,%rbp
	jmp GHC.Float.decodeFloat_entry
_c3eNa:
	jmp *-16(%r13)
	.size sat_s3b0S_entry, .-sat_s3b0S_entry


==================== Asm code ====================
2018-03-16 15:57:53.782583249 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3b0S_info:
	.quad	sat_s3b0S_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:53.783238204 UTC

.section .text
.align 8
_c3eN7:
_c3eN7:
	movq 7(%rbx),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3eN7, .-_c3eN7


==================== Asm code ====================
2018-03-16 15:57:53.783866837 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3eN7_info:
	.quad	_c3eN7
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.7846966 UTC

.section .text
.align 8
.globl GHC.Float.$dmsignificand_entry
.type GHC.Float.$dmsignificand_entry, @object
GHC.Float.$dmsignificand_entry:
_c3eNf:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3eNg
_c3eNh:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c3eNj
_c3eNi:
	leaq sat_s3b0W_info(%rip),%rax
	movq %rax,-56(%r12)
	movq %r14,-40(%r12)
	movq %rsi,-32(%r12)
	leaq sat_s3b0S_info(%rip),%rax
	movq %rax,-24(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	leaq -24(%r12),%rax
	movq %rax,-16(%rbp)
	leaq -56(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Float.encodeFloat_entry
_c3eNj:
	movq $64,904(%r13)
_c3eNg:
	leaq GHC.Float.$dmsignificand_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$dmsignificand_entry, .-GHC.Float.$dmsignificand_entry


==================== Asm code ====================
2018-03-16 15:57:53.785858211 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$dmsignificand_info
.type GHC.Float.$dmsignificand_info, @object
GHC.Float.$dmsignificand_info:
	.quad	GHC.Float.$dmsignificand_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:53.787534066 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble3_closure
.type GHC.Float.$fRealFloatDouble3_closure, @object
GHC.Float.$fRealFloatDouble3_closure:
	.quad	GHC.Types.I#_con_info
	.quad	-1021


==================== Asm code ====================
2018-03-16 15:57:53.789351607 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble2_closure
.type GHC.Float.$fRealFloatDouble2_closure, @object
GHC.Float.$fRealFloatDouble2_closure:
	.quad	GHC.Types.I#_con_info
	.quad	1024


==================== Asm code ====================
2018-03-16 15:57:53.791111717 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble1_closure
.type GHC.Float.$fRealFloatDouble1_closure, @object
GHC.Float.$fRealFloatDouble1_closure:
	.quad	(,)_con_info
	.quad	GHC.Float.$fRealFloatDouble3_closure+1
	.quad	GHC.Float.$fRealFloatDouble2_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.793389098 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble_$cfloatRange_closure
.type GHC.Float.$fRealFloatDouble_$cfloatRange_closure, @object
GHC.Float.$fRealFloatDouble_$cfloatRange_closure:
	.quad	GHC.Float.$fRealFloatDouble_$cfloatRange_info


==================== Asm code ====================
2018-03-16 15:57:53.794117526 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFloatDouble_$cfloatRange_entry
.type GHC.Float.$fRealFloatDouble_$cfloatRange_entry, @object
GHC.Float.$fRealFloatDouble_$cfloatRange_entry:
_c3eO1:
	leaq GHC.Float.$fRealFloatDouble1_closure+1(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Float.$fRealFloatDouble_$cfloatRange_entry, .-GHC.Float.$fRealFloatDouble_$cfloatRange_entry


==================== Asm code ====================
2018-03-16 15:57:53.794660215 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble_$cfloatRange_info
.type GHC.Float.$fRealFloatDouble_$cfloatRange_info, @object
GHC.Float.$fRealFloatDouble_$cfloatRange_info:
	.quad	GHC.Float.$fRealFloatDouble_$cfloatRange_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:53.80701976 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$w$catan2_closure
.type GHC.Float.$w$catan2_closure, @object
GHC.Float.$w$catan2_closure:
	.quad	GHC.Float.$w$catan2_info


==================== Asm code ====================
2018-03-16 15:57:53.807960509 UTC

.section .text
.align 8
.globl GHC.Float.$w$catan2_slow
.type GHC.Float.$w$catan2_slow, @object
GHC.Float.$w$catan2_slow:
_c3eOa:
	movsd 8(%rbp),%xmm1
	movq (%rbp),%r14
	addq $16,%rbp
	jmp GHC.Float.$w$catan2_entry
	.size GHC.Float.$w$catan2_slow, .-GHC.Float.$w$catan2_slow


==================== Asm code ====================
2018-03-16 15:57:53.80913246 UTC

.section .text
.align 8
sat_s3b14_entry:
_c3eOA:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3eOB
_c3eOC:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Float.negateDouble_entry
_c3eOB:
	jmp *-16(%r13)
	.size sat_s3b14_entry, .-sat_s3b14_entry


==================== Asm code ====================
2018-03-16 15:57:53.810125762 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3b14_info:
	.quad	sat_s3b14_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:53.811425887 UTC

.section .text
.align 8
.globl GHC.Float.$w$catan2_entry
.type GHC.Float.$w$catan2_entry, @object
GHC.Float.$w$catan2_entry:
_c3eOG:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3eOH
_c3eOI:
	xorpd %xmm0,%xmm0
	ucomisd %xmm0,%xmm1
	ja _c3eOF
_c3eOE:
	xorpd %xmm0,%xmm0
	ucomisd %xmm0,%xmm1
	jp _u3eRz
	je _c3eRc
_u3eRz:
	movq %r14,-16(%rbp)
	movsd %xmm1,-8(%rbp)
	addq $-16,%rbp
	jmp _s3b11
_c3eOF:
	leaq block_c3eRo_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movsd %xmm1,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3eRo
_c3eRp:
	movq (%rbx),%rax
	jmp *(%rax)
_c3eRc:
	leaq block_c3eRb_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %r14,%rbx
	movq %r14,-16(%rbp)
	movsd %xmm1,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c3eRb
_c3eRd:
	movq (%rbx),%rax
	jmp *(%rax)
_c3eOH:
	leaq GHC.Float.$w$catan2_closure(%rip),%rbx
	movq %r14,-16(%rbp)
	movsd %xmm1,-8(%rbp)
	addq $-16,%rbp
	jmp *-8(%r13)
	.size GHC.Float.$w$catan2_entry, .-GHC.Float.$w$catan2_entry


==================== Asm code ====================
2018-03-16 15:57:53.812589068 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$w$catan2_info
.type GHC.Float.$w$catan2_info, @object
GHC.Float.$w$catan2_info:
	.quad	GHC.Float.$w$catan2_entry
	.quad	0
	.quad	14
	.quad	8589934592
	.quad	0
	.quad	130
	.quad	GHC.Float.$w$catan2_slow


==================== Asm code ====================
2018-03-16 15:57:53.813695957 UTC

.section .text
.align 8
_c3eRo:
_c3eRo:
	subq $8,%rsp
	movsd 7(%rbx),%xmm0
	divsd 8(%rbp),%xmm0
	movl $1,%eax
	call atan@plt
	addq $8,%rsp
	movsd %xmm0,%xmm1
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3eRo, .-_c3eRo


==================== Asm code ====================
2018-03-16 15:57:53.8146833 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3eRo_info:
	.quad	_c3eRo
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.816503967 UTC

.section .text
.align 8
_c3eRb:
_c3eRb:
	movsd 7(%rbx),%xmm0
	xorpd %xmm1,%xmm1
	ucomisd %xmm1,%xmm0
	ja _c3eRm
_u3eRA:
	addq $8,%rbp
	jmp _s3b11
_c3eRm:
	movsd _n3eSu(%rip),%xmm1
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3eRb, .-_c3eRb
.section .rodata
.align 8
.align 8
_n3eSu:
	.byte	24
	.byte	45
	.byte	68
	.byte	84
	.byte	251
	.byte	33
	.byte	249
	.byte	63


==================== Asm code ====================
2018-03-16 15:57:53.817615762 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3eRb_info:
	.quad	_c3eRb
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.818762487 UTC

.section .text
.align 8
_s3b11:
_s3b11:
	movsd 8(%rbp),%xmm0
	xorpd %xmm1,%xmm1
	ucomisd %xmm1,%xmm0
	jp _s3b12
	jb _c3eQK
	jmp _s3b12
_c3eQK:
	leaq block_c3eQJ_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq (%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3eQJ
_c3eQL:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _s3b11, .-_s3b11


==================== Asm code ====================
2018-03-16 15:57:53.819937737 UTC

.section .text
.align 8
_c3eQJ:
_c3eQJ:
	movsd 7(%rbx),%xmm0
	xorpd %xmm1,%xmm1
	ucomisd %xmm1,%xmm0
	ja _c3eR4
_u3eRB:
	addq $8,%rbp
	jmp _s3b12
_c3eR4:
	subq $8,%rsp
	divsd 16(%rbp),%xmm0
	movl $1,%eax
	call atan@plt
	addq $8,%rsp
	movsd %xmm0,%xmm1
	addsd _n3eSJ(%rip),%xmm1
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3eQJ, .-_c3eQJ
.section .rodata
.align 8
.align 8
_n3eSJ:
	.byte	24
	.byte	45
	.byte	68
	.byte	84
	.byte	251
	.byte	33
	.byte	9
	.byte	64


==================== Asm code ====================
2018-03-16 15:57:53.820895363 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3eQJ_info:
	.quad	_c3eQJ
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.822223278 UTC

.section .text
.align 8
_s3b12:
_s3b12:
	movsd 8(%rbp),%xmm0
	xorpd %xmm1,%xmm1
	ucomisd %xmm1,%xmm0
	jp _s3b16
	jbe _c3eQs
	jmp _s3b16
_c3eQs:
	leaq block_c3eQr_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq (%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3eQr
_c3eQt:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _s3b12, .-_s3b12


==================== Asm code ====================
2018-03-16 15:57:53.823198145 UTC

.section .text
.align 8
_c3eQr:
_c3eQr:
	movsd 7(%rbx),%xmm0
	xorpd %xmm1,%xmm1
	ucomisd %xmm1,%xmm0
	jp _u3eRC
	jb _c3eOu
_u3eRC:
	addq $8,%rbp
	jmp _s3b16
	.size _c3eQr, .-_c3eQr


==================== Asm code ====================
2018-03-16 15:57:53.823976458 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3eQr_info:
	.quad	_c3eQr
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.824947807 UTC

.section .text
.align 8
_s3b16:
_s3b16:
	movsd 8(%rbp),%xmm0
	xorpd %xmm1,%xmm1
	ucomisd %xmm1,%xmm0
	jp _s3b17
	jb _c3eQ9
	jmp _s3b17
_c3eQ9:
	leaq block_c3eQ8_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq (%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3eQ8
_c3eQa:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _s3b16, .-_s3b16


==================== Asm code ====================
2018-03-16 15:57:53.826092928 UTC

.section .text
.align 8
_c3eQ8:
_c3eQ8:
	subq $8,%rsp
	movsd 7(%rbx),%xmm0
	movl $1,%eax
	call isDoubleNegativeZero@plt
	addq $8,%rsp
	testq %rax,%rax
	je _u3eRD
	jmp _c3eOu
_u3eRD:
	addq $8,%rbp
	jmp _s3b17
	.size _c3eQ8, .-_c3eQ8


==================== Asm code ====================
2018-03-16 15:57:53.826872303 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3eQ8_info:
	.quad	_c3eQ8
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.827972561 UTC

.section .text
.align 8
_s3b17:
_s3b17:
	movq (%rbp),%rax
	subq $8,%rsp
	movsd 8(%rbp),%xmm0
	movq %rax,%rbx
	movl $1,%eax
	call isDoubleNegativeZero@plt
	addq $8,%rsp
	testq %rax,%rax
	je _u3eRE
_c3ePP:
	leaq block_c3ePN_info(%rip),%rcx
	movq %rcx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3ePN
_c3ePQ:
	movq (%rbx),%rax
	jmp *(%rax)
_u3eRE:
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp _s3b1c
	.size _s3b17, .-_s3b17


==================== Asm code ====================
2018-03-16 15:57:53.829122722 UTC

.section .text
.align 8
_c3ePN:
_c3ePN:
	subq $8,%rsp
	movsd 7(%rbx),%xmm0
	movl $1,%eax
	call isDoubleNegativeZero@plt
	addq $8,%rsp
	testq %rax,%rax
	je _u3eRF
_u3eRG:
	addq $8,%rbp
	jmp _c3eOu
_u3eRF:
	addq $8,%rbp
	jmp _s3b1c
	.size _c3ePN, .-_c3ePN


==================== Asm code ====================
2018-03-16 15:57:53.830064968 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3ePN_info:
	.quad	_c3ePN
	.quad	323
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.830970909 UTC

.section .text
.align 8
_s3b1c:
_s3b1c:
	leaq block_c3ePd_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 8(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3ePd
_c3ePf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _s3b1c, .-_s3b1c


==================== Asm code ====================
2018-03-16 15:57:53.832294932 UTC

.section .text
.align 8
_c3ePd:
_c3ePd:
	movsd 24(%rbp),%xmm0
	movsd 7(%rbx),%xmm1
	xorpd %xmm2,%xmm2
	ucomisd %xmm2,%xmm1
	jp _c3ePp
	je _c3ePK
_c3ePp:
	movsd %xmm1,%xmm2
	movsd %xmm0,%xmm1
	addsd %xmm2,%xmm1
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3ePJ:
	movsd _n3eTw(%rip),%xmm1
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3ePF:
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3ePK:
	xorpd %xmm2,%xmm2
	ucomisd %xmm2,%xmm0
	jp _c3ePI
	jb _c3ePJ
_c3ePI:
	cmpq $0,8(%rbp)
	jne _c3ePJ
_c3ePG:
	xorpd %xmm2,%xmm2
	ucomisd %xmm2,%xmm0
	jp _c3ePE
	je _c3ePF
_c3ePE:
	movsd %xmm1,%xmm2
	movsd %xmm0,%xmm1
	addsd %xmm2,%xmm1
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3ePd, .-_c3ePd
.section .rodata
.align 8
.align 8
_n3eTw:
	.byte	24
	.byte	45
	.byte	68
	.byte	84
	.byte	251
	.byte	33
	.byte	9
	.byte	64


==================== Asm code ====================
2018-03-16 15:57:53.833377851 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3ePd_info:
	.quad	_c3ePd
	.quad	451
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.834365225 UTC

.section .text
.align 8
_c3eOu:
_c3eOu:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3eOS
_c3eOR:
	leaq sat_s3b14_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	movsd 16(%rbp),%xmm0
	leaq block_c3eOL_info(%rip),%rax
	movq %rax,16(%rbp)
	movsd %xmm0,%xmm1
	leaq -16(%r12),%r14
	addq $16,%rbp
	jmp GHC.Float.$w$catan2_entry
_c3eOS:
	movq $24,904(%r13)
	leaq block_c3eOu_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c3eOu, .-_c3eOu


==================== Asm code ====================
2018-03-16 15:57:53.835239732 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3eOu_info:
	.quad	_c3eOu
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.83606212 UTC

.section .text
.align 8
_c3eOL:
_c3eOL:
	movsd _n3eTK(%rip),%xmm0
	xorpd %xmm0,%xmm1
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3eOL, .-_c3eOL
.section .rodata
.align 8
.align 8
_n3eTK:
	.quad	-9223372036854775808


==================== Asm code ====================
2018-03-16 15:57:53.836835697 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3eOL_info:
	.quad	_c3eOL
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.841122458 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble_$catan2_closure
.type GHC.Float.$fRealFloatDouble_$catan2_closure, @object
GHC.Float.$fRealFloatDouble_$catan2_closure:
	.quad	GHC.Float.$fRealFloatDouble_$catan2_info


==================== Asm code ====================
2018-03-16 15:57:53.843054941 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFloatDouble_$catan2_entry
.type GHC.Float.$fRealFloatDouble_$catan2_entry, @object
GHC.Float.$fRealFloatDouble_$catan2_entry:
_c3eTW:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3eU4
_c3eU5:
	leaq block_c3eTT_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3eTT
_c3eTU:
	movq (%rbx),%rax
	jmp *(%rax)
_c3eU4:
	leaq GHC.Float.$fRealFloatDouble_$catan2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFloatDouble_$catan2_entry, .-GHC.Float.$fRealFloatDouble_$catan2_entry


==================== Asm code ====================
2018-03-16 15:57:53.843752265 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble_$catan2_info
.type GHC.Float.$fRealFloatDouble_$catan2_info, @object
GHC.Float.$fRealFloatDouble_$catan2_info:
	.quad	GHC.Float.$fRealFloatDouble_$catan2_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:53.844423507 UTC

.section .text
.align 8
_c3eTT:
_c3eTT:
	movq 8(%rbp),%rax
	leaq block_c3eTZ_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movsd 7(%rbx),%xmm1
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Float.$w$catan2_entry
	.size _c3eTT, .-_c3eTT


==================== Asm code ====================
2018-03-16 15:57:53.845012385 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3eTT_info:
	.quad	_c3eTT
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.845793617 UTC

.section .text
.align 8
_c3eTZ:
_c3eTZ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3eU9
_c3eU8:
	movq GHC.Types.D#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movsd %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3eU9:
	movq $16,904(%r13)
	jmp *stg_gc_d1@gotpcrel(%rip)
	.size _c3eTZ, .-_c3eTZ


==================== Asm code ====================
2018-03-16 15:57:53.846431749 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3eTZ_info:
	.quad	_c3eTZ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.848350856 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatDouble_closure
.type GHC.Float.$fRealFloatDouble_closure, @object
GHC.Float.$fRealFloatDouble_closure:
	.quad	GHC.Float.C:RealFloat_con_info
	.quad	GHC.Float.$fRealFracDouble_closure+1
	.quad	GHC.Float.$fFloatingDouble_closure+1
	.quad	GHC.Float.$fRealFloatDouble_$cfloatRadix_closure+1
	.quad	GHC.Float.$fRealFloatDouble_$cfloatDigits_closure+1
	.quad	GHC.Float.$fRealFloatDouble_$cfloatRange_closure+1
	.quad	GHC.Float.$fRealFloatDouble_$cdecodeFloat_closure+1
	.quad	GHC.Float.$fRealFloatDouble_$cencodeFloat_closure+2
	.quad	GHC.Float.$fRealFloatDouble_$cexponent_closure+1
	.quad	GHC.Float.$fRealFloatDouble_$csignificand_closure+1
	.quad	GHC.Float.$fRealFloatDouble_$cscaleFloat_closure+2
	.quad	GHC.Float.$fRealFloatDouble_$cisNaN_closure+1
	.quad	GHC.Float.$fRealFloatDouble_$cisInfinite_closure+1
	.quad	GHC.Float.$fRealFloatDouble_$cisDenormalized_closure+1
	.quad	GHC.Float.$fRealFloatDouble_$cisNegativeZero_closure+1
	.quad	GHC.Float.$fRealFloatDouble_$cisIEEE_closure+1
	.quad	GHC.Float.$fRealFloatDouble_$catan2_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:53.850275491 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat3_closure
.type GHC.Float.$fRealFloatFloat3_closure, @object
GHC.Float.$fRealFloatFloat3_closure:
	.quad	GHC.Types.I#_con_info
	.quad	-125


==================== Asm code ====================
2018-03-16 15:57:53.852074934 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat2_closure
.type GHC.Float.$fRealFloatFloat2_closure, @object
GHC.Float.$fRealFloatFloat2_closure:
	.quad	GHC.Types.I#_con_info
	.quad	128


==================== Asm code ====================
2018-03-16 15:57:53.853895832 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat1_closure
.type GHC.Float.$fRealFloatFloat1_closure, @object
GHC.Float.$fRealFloatFloat1_closure:
	.quad	(,)_con_info
	.quad	GHC.Float.$fRealFloatFloat3_closure+1
	.quad	GHC.Float.$fRealFloatFloat2_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:53.856819554 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat_$cfloatRange_closure
.type GHC.Float.$fRealFloatFloat_$cfloatRange_closure, @object
GHC.Float.$fRealFloatFloat_$cfloatRange_closure:
	.quad	GHC.Float.$fRealFloatFloat_$cfloatRange_info


==================== Asm code ====================
2018-03-16 15:57:53.857628391 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFloatFloat_$cfloatRange_entry
.type GHC.Float.$fRealFloatFloat_$cfloatRange_entry, @object
GHC.Float.$fRealFloatFloat_$cfloatRange_entry:
_c3eUz:
	leaq GHC.Float.$fRealFloatFloat1_closure+1(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Float.$fRealFloatFloat_$cfloatRange_entry, .-GHC.Float.$fRealFloatFloat_$cfloatRange_entry


==================== Asm code ====================
2018-03-16 15:57:53.858227219 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat_$cfloatRange_info
.type GHC.Float.$fRealFloatFloat_$cfloatRange_info, @object
GHC.Float.$fRealFloatFloat_$cfloatRange_info:
	.quad	GHC.Float.$fRealFloatFloat_$cfloatRange_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:53.871199387 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$w$catan1_closure
.type GHC.Float.$w$catan1_closure, @object
GHC.Float.$w$catan1_closure:
	.quad	GHC.Float.$w$catan1_info


==================== Asm code ====================
2018-03-16 15:57:53.871984439 UTC

.section .text
.align 8
.globl GHC.Float.$w$catan1_slow
.type GHC.Float.$w$catan1_slow, @object
GHC.Float.$w$catan1_slow:
_c3eUI:
	movss 8(%rbp),%xmm1
	movq (%rbp),%r14
	addq $16,%rbp
	jmp GHC.Float.$w$catan1_entry
	.size GHC.Float.$w$catan1_slow, .-GHC.Float.$w$catan1_slow


==================== Asm code ====================
2018-03-16 15:57:53.872780358 UTC

.section .text
.align 8
sat_s3b22_entry:
_c3eV8:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3eV9
_c3eVa:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Float.negateFloat_entry
_c3eV9:
	jmp *-16(%r13)
	.size sat_s3b22_entry, .-sat_s3b22_entry


==================== Asm code ====================
2018-03-16 15:57:53.873498896 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3b22_info:
	.quad	sat_s3b22_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:53.874458097 UTC

.section .text
.align 8
.globl GHC.Float.$w$catan1_entry
.type GHC.Float.$w$catan1_entry, @object
GHC.Float.$w$catan1_entry:
_c3eVe:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3eVf
_c3eVg:
	xorps %xmm0,%xmm0
	ucomiss %xmm0,%xmm1
	ja _c3eVd
_c3eVc:
	xorps %xmm0,%xmm0
	ucomiss %xmm0,%xmm1
	jp _u3eY7
	je _c3eXK
_u3eY7:
	movq %r14,-16(%rbp)
	movss %xmm1,-8(%rbp)
	addq $-16,%rbp
	jmp _s3b1Z
_c3eVd:
	leaq block_c3eXW_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movss %xmm1,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3eXW
_c3eXX:
	movq (%rbx),%rax
	jmp *(%rax)
_c3eXK:
	leaq block_c3eXJ_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %r14,%rbx
	movq %r14,-16(%rbp)
	movss %xmm1,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c3eXJ
_c3eXL:
	movq (%rbx),%rax
	jmp *(%rax)
_c3eVf:
	leaq GHC.Float.$w$catan1_closure(%rip),%rbx
	movq %r14,-16(%rbp)
	movss %xmm1,-8(%rbp)
	addq $-16,%rbp
	jmp *-8(%r13)
	.size GHC.Float.$w$catan1_entry, .-GHC.Float.$w$catan1_entry


==================== Asm code ====================
2018-03-16 15:57:53.875256528 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$w$catan1_info
.type GHC.Float.$w$catan1_info, @object
GHC.Float.$w$catan1_info:
	.quad	GHC.Float.$w$catan1_entry
	.quad	0
	.quad	14
	.quad	8589934592
	.quad	0
	.quad	130
	.quad	GHC.Float.$w$catan1_slow


==================== Asm code ====================
2018-03-16 15:57:53.875951438 UTC

.section .text
.align 8
_c3eXW:
_c3eXW:
	subq $8,%rsp
	movss 7(%rbx),%xmm0
	divss 8(%rbp),%xmm0
	movl $1,%eax
	call atanf@plt
	addq $8,%rsp
	movss %xmm0,%xmm1
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3eXW, .-_c3eXW


==================== Asm code ====================
2018-03-16 15:57:53.876538368 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3eXW_info:
	.quad	_c3eXW
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.877200596 UTC

.section .text
.align 8
_c3eXJ:
_c3eXJ:
	movss 7(%rbx),%xmm0
	xorps %xmm1,%xmm1
	ucomiss %xmm1,%xmm0
	ja _c3eXU
_u3eY8:
	addq $8,%rbp
	jmp _s3b1Z
_c3eXU:
	movss _n3eZ2(%rip),%xmm1
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3eXJ, .-_c3eXJ
.section .rodata
.align 8
.align 4
_n3eZ2:
	.byte	219
	.byte	15
	.byte	201
	.byte	63


==================== Asm code ====================
2018-03-16 15:57:53.877891166 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3eXJ_info:
	.quad	_c3eXJ
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.878632135 UTC

.section .text
.align 8
_s3b1Z:
_s3b1Z:
	movss 8(%rbp),%xmm0
	xorps %xmm1,%xmm1
	ucomiss %xmm1,%xmm0
	jp _s3b20
	jb _c3eXi
	jmp _s3b20
_c3eXi:
	leaq block_c3eXh_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq (%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3eXh
_c3eXj:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _s3b1Z, .-_s3b1Z


==================== Asm code ====================
2018-03-16 15:57:53.879460691 UTC

.section .text
.align 8
_c3eXh:
_c3eXh:
	movss 7(%rbx),%xmm0
	xorps %xmm1,%xmm1
	ucomiss %xmm1,%xmm0
	ja _c3eXC
_u3eY9:
	addq $8,%rbp
	jmp _s3b20
_c3eXC:
	subq $8,%rsp
	divss 16(%rbp),%xmm0
	movl $1,%eax
	call atanf@plt
	addq $8,%rsp
	movss %xmm0,%xmm1
	addss _n3eZh(%rip),%xmm1
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3eXh, .-_c3eXh
.section .rodata
.align 8
.align 4
_n3eZh:
	.byte	219
	.byte	15
	.byte	73
	.byte	64


==================== Asm code ====================
2018-03-16 15:57:53.880151106 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3eXh_info:
	.quad	_c3eXh
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.88090917 UTC

.section .text
.align 8
_s3b20:
_s3b20:
	movss 8(%rbp),%xmm0
	xorps %xmm1,%xmm1
	ucomiss %xmm1,%xmm0
	jp _s3b24
	jbe _c3eX0
	jmp _s3b24
_c3eX0:
	leaq block_c3eWZ_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq (%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3eWZ
_c3eX1:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _s3b20, .-_s3b20


==================== Asm code ====================
2018-03-16 15:57:53.881728812 UTC

.section .text
.align 8
_c3eWZ:
_c3eWZ:
	movss 7(%rbx),%xmm0
	xorps %xmm1,%xmm1
	ucomiss %xmm1,%xmm0
	jp _u3eYa
	jb _c3eV2
_u3eYa:
	addq $8,%rbp
	jmp _s3b24
	.size _c3eWZ, .-_c3eWZ


==================== Asm code ====================
2018-03-16 15:57:53.882334721 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3eWZ_info:
	.quad	_c3eWZ
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.883064355 UTC

.section .text
.align 8
_s3b24:
_s3b24:
	movss 8(%rbp),%xmm0
	xorps %xmm1,%xmm1
	ucomiss %xmm1,%xmm0
	jp _s3b25
	jb _c3eWH
	jmp _s3b25
_c3eWH:
	leaq block_c3eWG_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq (%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3eWG
_c3eWI:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _s3b24, .-_s3b24


==================== Asm code ====================
2018-03-16 15:57:53.883848633 UTC

.section .text
.align 8
_c3eWG:
_c3eWG:
	subq $8,%rsp
	movss 7(%rbx),%xmm0
	movl $1,%eax
	call isFloatNegativeZero@plt
	addq $8,%rsp
	testq %rax,%rax
	je _u3eYb
	jmp _c3eV2
_u3eYb:
	addq $8,%rbp
	jmp _s3b25
	.size _c3eWG, .-_c3eWG


==================== Asm code ====================
2018-03-16 15:57:53.884490174 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3eWG_info:
	.quad	_c3eWG
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.885698856 UTC

.section .text
.align 8
_s3b25:
_s3b25:
	movq (%rbp),%rax
	subq $8,%rsp
	movss 8(%rbp),%xmm0
	movq %rax,%rbx
	movl $1,%eax
	call isFloatNegativeZero@plt
	addq $8,%rsp
	testq %rax,%rax
	je _u3eYc
_c3eWn:
	leaq block_c3eWl_info(%rip),%rcx
	movq %rcx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3eWl
_c3eWo:
	movq (%rbx),%rax
	jmp *(%rax)
_u3eYc:
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp _s3b2a
	.size _s3b25, .-_s3b25


==================== Asm code ====================
2018-03-16 15:57:53.886498861 UTC

.section .text
.align 8
_c3eWl:
_c3eWl:
	subq $8,%rsp
	movss 7(%rbx),%xmm0
	movl $1,%eax
	call isFloatNegativeZero@plt
	addq $8,%rsp
	testq %rax,%rax
	je _u3eYd
_u3eYe:
	addq $8,%rbp
	jmp _c3eV2
_u3eYd:
	addq $8,%rbp
	jmp _s3b2a
	.size _c3eWl, .-_c3eWl


==================== Asm code ====================
2018-03-16 15:57:53.88714367 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3eWl_info:
	.quad	_c3eWl
	.quad	323
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.887822324 UTC

.section .text
.align 8
_s3b2a:
_s3b2a:
	leaq block_c3eVL_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 8(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3eVL
_c3eVN:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _s3b2a, .-_s3b2a


==================== Asm code ====================
2018-03-16 15:57:53.888802649 UTC

.section .text
.align 8
_c3eVL:
_c3eVL:
	movss 24(%rbp),%xmm0
	movss 7(%rbx),%xmm1
	xorps %xmm2,%xmm2
	ucomiss %xmm2,%xmm1
	jp _c3eVX
	je _c3eWi
_c3eVX:
	movsd %xmm1,%xmm2
	movss %xmm0,%xmm1
	addss %xmm2,%xmm1
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3eWh:
	movss _n3f04(%rip),%xmm1
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3eWd:
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3eWi:
	xorps %xmm2,%xmm2
	ucomiss %xmm2,%xmm0
	jp _c3eWg
	jb _c3eWh
_c3eWg:
	cmpq $0,8(%rbp)
	jne _c3eWh
_c3eWe:
	xorps %xmm2,%xmm2
	ucomiss %xmm2,%xmm0
	jp _c3eWc
	je _c3eWd
_c3eWc:
	movsd %xmm1,%xmm2
	movss %xmm0,%xmm1
	addss %xmm2,%xmm1
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3eVL, .-_c3eVL
.section .rodata
.align 8
.align 4
_n3f04:
	.byte	219
	.byte	15
	.byte	73
	.byte	64


==================== Asm code ====================
2018-03-16 15:57:53.889610582 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3eVL_info:
	.quad	_c3eVL
	.quad	451
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.890378878 UTC

.section .text
.align 8
_c3eV2:
_c3eV2:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3eVq
_c3eVp:
	leaq sat_s3b22_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	movss 16(%rbp),%xmm0
	leaq block_c3eVj_info(%rip),%rax
	movq %rax,16(%rbp)
	movss %xmm0,%xmm1
	leaq -16(%r12),%r14
	addq $16,%rbp
	jmp GHC.Float.$w$catan1_entry
_c3eVq:
	movq $24,904(%r13)
	leaq block_c3eV2_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c3eV2, .-_c3eV2


==================== Asm code ====================
2018-03-16 15:57:53.891083973 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3eV2_info:
	.quad	_c3eV2
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.891784427 UTC

.section .text
.align 8
_c3eVj:
_c3eVj:
	movss _n3f0i(%rip),%xmm0
	xorps %xmm0,%xmm1
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3eVj, .-_c3eVj
.section .rodata
.align 8
.align 4
_n3f0i:
	.long	-2147483648


==================== Asm code ====================
2018-03-16 15:57:53.892384658 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3eVj_info:
	.quad	_c3eVj
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.896082397 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat_$catan2_closure
.type GHC.Float.$fRealFloatFloat_$catan2_closure, @object
GHC.Float.$fRealFloatFloat_$catan2_closure:
	.quad	GHC.Float.$fRealFloatFloat_$catan2_info


==================== Asm code ====================
2018-03-16 15:57:53.896925926 UTC

.section .text
.align 8
.globl GHC.Float.$fRealFloatFloat_$catan2_entry
.type GHC.Float.$fRealFloatFloat_$catan2_entry, @object
GHC.Float.$fRealFloatFloat_$catan2_entry:
_c3f0u:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3f0C
_c3f0D:
	leaq block_c3f0r_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3f0r
_c3f0s:
	movq (%rbx),%rax
	jmp *(%rax)
_c3f0C:
	leaq GHC.Float.$fRealFloatFloat_$catan2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fRealFloatFloat_$catan2_entry, .-GHC.Float.$fRealFloatFloat_$catan2_entry


==================== Asm code ====================
2018-03-16 15:57:53.897736441 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat_$catan2_info
.type GHC.Float.$fRealFloatFloat_$catan2_info, @object
GHC.Float.$fRealFloatFloat_$catan2_info:
	.quad	GHC.Float.$fRealFloatFloat_$catan2_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:53.898410482 UTC

.section .text
.align 8
_c3f0r:
_c3f0r:
	movq 8(%rbp),%rax
	leaq block_c3f0x_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movss 7(%rbx),%xmm1
	movq %rax,%r14
	addq $8,%rbp
	jmp GHC.Float.$w$catan1_entry
	.size _c3f0r, .-_c3f0r


==================== Asm code ====================
2018-03-16 15:57:53.899019468 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3f0r_info:
	.quad	_c3f0r
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.900313754 UTC

.section .text
.align 8
_c3f0x:
_c3f0x:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3f0H
_c3f0G:
	movq GHC.Types.F#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movss %xmm1,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3f0H:
	movq $16,904(%r13)
	jmp *stg_gc_f1@gotpcrel(%rip)
	.size _c3f0x, .-_c3f0x


==================== Asm code ====================
2018-03-16 15:57:53.901061303 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3f0x_info:
	.quad	_c3f0x
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.903301828 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fRealFloatFloat_closure
.type GHC.Float.$fRealFloatFloat_closure, @object
GHC.Float.$fRealFloatFloat_closure:
	.quad	GHC.Float.C:RealFloat_con_info
	.quad	GHC.Float.$fRealFracFloat_closure+1
	.quad	GHC.Float.$fFloatingFloat_closure+1
	.quad	GHC.Float.$fRealFloatFloat_$cfloatRadix_closure+1
	.quad	GHC.Float.$fRealFloatFloat_$cfloatDigits_closure+1
	.quad	GHC.Float.$fRealFloatFloat_$cfloatRange_closure+1
	.quad	GHC.Float.$fRealFloatFloat_$cdecodeFloat_closure+1
	.quad	GHC.Float.$fRealFloatFloat_$cencodeFloat_closure+2
	.quad	GHC.Float.$fRealFloatFloat_$cexponent_closure+1
	.quad	GHC.Float.$fRealFloatFloat_$csignificand_closure+1
	.quad	GHC.Float.$fRealFloatFloat_$cscaleFloat_closure+2
	.quad	GHC.Float.$fRealFloatFloat_$cisNaN_closure+1
	.quad	GHC.Float.$fRealFloatFloat_$cisInfinite_closure+1
	.quad	GHC.Float.$fRealFloatFloat_$cisDenormalized_closure+1
	.quad	GHC.Float.$fRealFloatFloat_$cisNegativeZero_closure+1
	.quad	GHC.Float.$fRealFloatFloat_$cisIEEE_closure+1
	.quad	GHC.Float.$fRealFloatFloat_$catan2_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:53.905036955 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fShowDouble3_closure
.type GHC.Float.$fShowDouble3_closure, @object
GHC.Float.$fShowDouble3_closure:
	.quad	GHC.Types.C#_con_info
	.quad	45


==================== Asm code ====================
2018-03-16 15:57:53.913873623 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$w$sshowSignedFloat1_closure
.type GHC.Float.$w$sshowSignedFloat1_closure, @object
GHC.Float.$w$sshowSignedFloat1_closure:
	.quad	GHC.Float.$w$sshowSignedFloat1_info


==================== Asm code ====================
2018-03-16 15:57:53.914657991 UTC

.section .text
.align 8
.globl GHC.Float.$w$sshowSignedFloat1_slow
.type GHC.Float.$w$sshowSignedFloat1_slow, @object
GHC.Float.$w$sshowSignedFloat1_slow:
_c3f12:
	movss 16(%rbp),%xmm1
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $24,%rbp
	jmp GHC.Float.$w$sshowSignedFloat1_entry
	.size GHC.Float.$w$sshowSignedFloat1_slow, .-GHC.Float.$w$sshowSignedFloat1_slow


==================== Asm code ====================
2018-03-16 15:57:53.915641337 UTC

.section .text
.align 8
g_s3b2Z_entry:
_c3f1m:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3f1p
_c3f1q:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3f1s
_c3f1r:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movss 24(%rbx),%xmm0
	movss _n3f2D(%rip),%xmm1
	xorps %xmm1,%xmm0
	movq GHC.Types.F#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movss %xmm0,(%r12)
	leaq -7(%r12),%r14
	movq %rax,%rbx
	addq $-16,%rbp
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_c3f1s:
	movq $16,904(%r13)
_c3f1p:
	jmp *-16(%r13)
	.size g_s3b2Z_entry, .-g_s3b2Z_entry
.section .rodata
.align 8
.align 4
_n3f2D:
	.long	-2147483648


==================== Asm code ====================
2018-03-16 15:57:53.916449898 UTC

.section .data.rel.ro
.align 8
.align 1
g_s3b2Z_info:
	.quad	g_s3b2Z_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 15:57:53.917221857 UTC

.section .text
.align 8
sat_s3b35_entry:
_c3f1D:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c3f1H
_c3f1G:
	movq 7(%rbx),%rax
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rbx
	movq %rbx,-48(%r12)
	movq %rax,-32(%r12)
	movq %r14,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq GHC.Float.$fShowDouble3_closure+1(%rip),%rax
	movq %rax,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c3f1H:
	movq $56,904(%r13)
	jmp *-8(%r13)
	.size sat_s3b35_entry, .-sat_s3b35_entry


==================== Asm code ====================
2018-03-16 15:57:53.917996176 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3b35_info:
	.quad	sat_s3b35_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:53.918796649 UTC

.section .text
.align 8
sat_s3b38_entry:
_c3f1T:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3f1U
_c3f1V:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3f1X
_c3f1W:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq :_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%r12)
	movq GHC.Show.$fShow(,)2_closure@gotpcrel(%rip),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -14(%r12),%r14
	movq %rax,%rbx
	addq $-16,%rbp
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_c3f1X:
	movq $24,904(%r13)
_c3f1U:
	jmp *-16(%r13)
	.size sat_s3b38_entry, .-sat_s3b38_entry


==================== Asm code ====================
2018-03-16 15:57:53.919520893 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3b38_info:
	.quad	sat_s3b38_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:53.920303736 UTC

.section .text
.align 8
sat_s3b3a_entry:
_c3f20:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _c3f24
_c3f23:
	movq 7(%rbx),%rax
	leaq sat_s3b38_info(%rip),%rbx
	movq %rbx,-72(%r12)
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-40(%r12)
	leaq GHC.Float.$fShowDouble3_closure+1(%rip),%rax
	movq %rax,-32(%r12)
	leaq -72(%r12),%rax
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq GHC.Show.$fShow(,)4_closure@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	leaq -38(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c3f24:
	movq $80,904(%r13)
	jmp *-8(%r13)
	.size sat_s3b3a_entry, .-sat_s3b3a_entry


==================== Asm code ====================
2018-03-16 15:57:53.921030443 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3b3a_info:
	.quad	sat_s3b3a_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:53.922479507 UTC

.section .text
.align 8
.globl GHC.Float.$w$sshowSignedFloat1_entry
.type GHC.Float.$w$sshowSignedFloat1_entry, @object
GHC.Float.$w$sshowSignedFloat1_entry:
_c3f2a:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3f2b
_c3f2c:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3f2e
_c3f2d:
	xorps %xmm0,%xmm0
	ucomiss %xmm0,%xmm1
	jp _c3f28
	jb _c3f29
_c3f28:
	subq $8,%rsp
	movss %xmm1,%xmm0
	movl $1,%eax
	movq %rsi,%rbx
	movsd %xmm1,72(%rsp)
	call isFloatNegativeZero@plt
	addq $8,%rsp
	testq %rax,%rax
	jne _n3f3g
_c3f2v:
	movq GHC.Types.F#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movsd 64(%rsp),%xmm0
	movss %xmm0,(%r12)
	movq %r14,%rax
	leaq -7(%r12),%r14
	movq %rax,%rbx
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_c3f2e:
	movq $16,904(%r13)
_c3f2b:
	leaq GHC.Float.$w$sshowSignedFloat1_closure(%rip),%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movss %xmm1,-8(%rbp)
	addq $-24,%rbp
	jmp *-8(%r13)
_n3f3g:
	movsd 64(%rsp),%xmm1
	movq %rbx,%rsi
_c3f29:
	addq $-16,%r12
	leaq block_c3f1b_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movss %xmm1,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c3f1b
_c3f1c:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Float.$w$sshowSignedFloat1_entry, .-GHC.Float.$w$sshowSignedFloat1_entry


==================== Asm code ====================
2018-03-16 15:57:53.92335236 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$w$sshowSignedFloat1_info
.type GHC.Float.$w$sshowSignedFloat1_info, @object
GHC.Float.$w$sshowSignedFloat1_info:
	.quad	GHC.Float.$w$sshowSignedFloat1_entry
	.quad	0
	.quad	14
	.quad	12884901888
	.quad	0
	.quad	259
	.quad	GHC.Float.$w$sshowSignedFloat1_slow


==================== Asm code ====================
2018-03-16 15:57:53.924164412 UTC

.section .text
.align 8
_c3f1b:
_c3f1b:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c3f2i
_c3f2h:
	movq 7(%rbx),%rax
	leaq g_s3b2Z_info(%rip),%rbx
	movq %rbx,-40(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-24(%r12)
	movss 16(%rbp),%xmm0
	movss %xmm0,-16(%r12)
	leaq -40(%r12),%rbx
	cmpq $6,%rax
	jle _c3f2k
_c3f2l:
	leaq sat_s3b3a_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3f2k:
	leaq sat_s3b35_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3f2i:
	movq $48,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3f1b, .-_c3f1b


==================== Asm code ====================
2018-03-16 15:57:53.924869426 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3f1b_info:
	.quad	_c3f1b
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.928023526 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fShowFloat_$sshowSignedFloat_closure
.type GHC.Float.$fShowFloat_$sshowSignedFloat_closure, @object
GHC.Float.$fShowFloat_$sshowSignedFloat_closure:
	.quad	GHC.Float.$fShowFloat_$sshowSignedFloat_info


==================== Asm code ====================
2018-03-16 15:57:53.928872486 UTC

.section .text
.align 8
.globl GHC.Float.$fShowFloat_$sshowSignedFloat_entry
.type GHC.Float.$fShowFloat_$sshowSignedFloat_entry, @object
GHC.Float.$fShowFloat_$sshowSignedFloat_entry:
_c3f3z:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3f3A
_c3f3B:
	leaq block_c3f3w_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rdi,%rbx
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c3f3w
_c3f3x:
	movq (%rbx),%rax
	jmp *(%rax)
_c3f3A:
	leaq GHC.Float.$fShowFloat_$sshowSignedFloat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fShowFloat_$sshowSignedFloat_entry, .-GHC.Float.$fShowFloat_$sshowSignedFloat_entry


==================== Asm code ====================
2018-03-16 15:57:53.92959783 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fShowFloat_$sshowSignedFloat_info
.type GHC.Float.$fShowFloat_$sshowSignedFloat_info, @object
GHC.Float.$fShowFloat_$sshowSignedFloat_info:
	.quad	GHC.Float.$fShowFloat_$sshowSignedFloat_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:57:53.930256895 UTC

.section .text
.align 8
_c3f3w:
_c3f3w:
	movss 7(%rbx),%xmm1
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Float.$w$sshowSignedFloat1_entry
	.size _c3f3w, .-_c3f3w


==================== Asm code ====================
2018-03-16 15:57:53.930853223 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3f3w_info:
	.quad	_c3f3w
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.939194588 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$w$sshowSignedFloat_closure
.type GHC.Float.$w$sshowSignedFloat_closure, @object
GHC.Float.$w$sshowSignedFloat_closure:
	.quad	GHC.Float.$w$sshowSignedFloat_info


==================== Asm code ====================
2018-03-16 15:57:53.939939675 UTC

.section .text
.align 8
.globl GHC.Float.$w$sshowSignedFloat_slow
.type GHC.Float.$w$sshowSignedFloat_slow, @object
GHC.Float.$w$sshowSignedFloat_slow:
_c3f3R:
	movsd 16(%rbp),%xmm1
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $24,%rbp
	jmp GHC.Float.$w$sshowSignedFloat_entry
	.size GHC.Float.$w$sshowSignedFloat_slow, .-GHC.Float.$w$sshowSignedFloat_slow


==================== Asm code ====================
2018-03-16 15:57:53.940835208 UTC

.section .text
.align 8
g_s3b3t_entry:
_c3f4b:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3f4e
_c3f4f:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3f4h
_c3f4g:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movsd 24(%rbx),%xmm0
	movsd _n3f5s(%rip),%xmm1
	xorpd %xmm1,%xmm0
	movq GHC.Types.D#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movsd %xmm0,(%r12)
	leaq -7(%r12),%r14
	movq %rax,%rbx
	addq $-16,%rbp
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_c3f4h:
	movq $16,904(%r13)
_c3f4e:
	jmp *-16(%r13)
	.size g_s3b3t_entry, .-g_s3b3t_entry
.section .rodata
.align 8
.align 8
_n3f5s:
	.quad	-9223372036854775808


==================== Asm code ====================
2018-03-16 15:57:53.941609884 UTC

.section .data.rel.ro
.align 8
.align 1
g_s3b3t_info:
	.quad	g_s3b3t_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 15:57:53.942378289 UTC

.section .text
.align 8
sat_s3b3z_entry:
_c3f4s:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c3f4w
_c3f4v:
	movq 7(%rbx),%rax
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rbx
	movq %rbx,-48(%r12)
	movq %rax,-32(%r12)
	movq %r14,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq GHC.Float.$fShowDouble3_closure+1(%rip),%rax
	movq %rax,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c3f4w:
	movq $56,904(%r13)
	jmp *-8(%r13)
	.size sat_s3b3z_entry, .-sat_s3b3z_entry


==================== Asm code ====================
2018-03-16 15:57:53.943083894 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3b3z_info:
	.quad	sat_s3b3z_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:53.943887635 UTC

.section .text
.align 8
sat_s3b3C_entry:
_c3f4I:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3f4J
_c3f4K:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3f4M
_c3f4L:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq :_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%r12)
	movq GHC.Show.$fShow(,)2_closure@gotpcrel(%rip),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -14(%r12),%r14
	movq %rax,%rbx
	addq $-16,%rbp
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_c3f4M:
	movq $24,904(%r13)
_c3f4J:
	jmp *-16(%r13)
	.size sat_s3b3C_entry, .-sat_s3b3C_entry


==================== Asm code ====================
2018-03-16 15:57:53.944614778 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3b3C_info:
	.quad	sat_s3b3C_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:53.945669283 UTC

.section .text
.align 8
sat_s3b3E_entry:
_c3f4P:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _c3f4T
_c3f4S:
	movq 7(%rbx),%rax
	leaq sat_s3b3C_info(%rip),%rbx
	movq %rbx,-72(%r12)
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-40(%r12)
	leaq GHC.Float.$fShowDouble3_closure+1(%rip),%rax
	movq %rax,-32(%r12)
	leaq -72(%r12),%rax
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq GHC.Show.$fShow(,)4_closure@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	leaq -38(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c3f4T:
	movq $80,904(%r13)
	jmp *-8(%r13)
	.size sat_s3b3E_entry, .-sat_s3b3E_entry


==================== Asm code ====================
2018-03-16 15:57:53.946373989 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3b3E_info:
	.quad	sat_s3b3E_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:53.948184289 UTC

.section .text
.align 8
.globl GHC.Float.$w$sshowSignedFloat_entry
.type GHC.Float.$w$sshowSignedFloat_entry, @object
GHC.Float.$w$sshowSignedFloat_entry:
_c3f4Z:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3f50
_c3f51:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3f53
_c3f52:
	xorpd %xmm0,%xmm0
	ucomisd %xmm0,%xmm1
	jp _c3f4X
	jb _c3f4Y
_c3f4X:
	subq $8,%rsp
	movsd %xmm1,%xmm0
	movl $1,%eax
	movq %rsi,%rbx
	movsd %xmm1,72(%rsp)
	call isDoubleNegativeZero@plt
	addq $8,%rsp
	testq %rax,%rax
	jne _n3f65
_c3f5k:
	movq GHC.Types.D#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movsd 64(%rsp),%xmm0
	movsd %xmm0,(%r12)
	movq %r14,%rax
	leaq -7(%r12),%r14
	movq %rax,%rbx
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_c3f53:
	movq $16,904(%r13)
_c3f50:
	leaq GHC.Float.$w$sshowSignedFloat_closure(%rip),%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movsd %xmm1,-8(%rbp)
	addq $-24,%rbp
	jmp *-8(%r13)
_n3f65:
	movsd 64(%rsp),%xmm1
	movq %rbx,%rsi
_c3f4Y:
	addq $-16,%r12
	leaq block_c3f40_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movsd %xmm1,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c3f40
_c3f41:
	movq (%rbx),%rax
	jmp *(%rax)
	.size GHC.Float.$w$sshowSignedFloat_entry, .-GHC.Float.$w$sshowSignedFloat_entry


==================== Asm code ====================
2018-03-16 15:57:53.94913932 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$w$sshowSignedFloat_info
.type GHC.Float.$w$sshowSignedFloat_info, @object
GHC.Float.$w$sshowSignedFloat_info:
	.quad	GHC.Float.$w$sshowSignedFloat_entry
	.quad	0
	.quad	14
	.quad	12884901888
	.quad	0
	.quad	259
	.quad	GHC.Float.$w$sshowSignedFloat_slow


==================== Asm code ====================
2018-03-16 15:57:53.950101711 UTC

.section .text
.align 8
_c3f40:
_c3f40:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c3f57
_c3f56:
	movq 7(%rbx),%rax
	leaq g_s3b3t_info(%rip),%rbx
	movq %rbx,-40(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-24(%r12)
	movsd 16(%rbp),%xmm0
	movsd %xmm0,-16(%r12)
	leaq -40(%r12),%rbx
	cmpq $6,%rax
	jle _c3f59
_c3f5a:
	leaq sat_s3b3E_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3f59:
	leaq sat_s3b3z_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3f57:
	movq $48,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3f40, .-_c3f40


==================== Asm code ====================
2018-03-16 15:57:53.950799257 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3f40_info:
	.quad	_c3f40
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.953958885 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fShowDouble_$sshowSignedFloat_closure
.type GHC.Float.$fShowDouble_$sshowSignedFloat_closure, @object
GHC.Float.$fShowDouble_$sshowSignedFloat_closure:
	.quad	GHC.Float.$fShowDouble_$sshowSignedFloat_info


==================== Asm code ====================
2018-03-16 15:57:53.954796715 UTC

.section .text
.align 8
.globl GHC.Float.$fShowDouble_$sshowSignedFloat_entry
.type GHC.Float.$fShowDouble_$sshowSignedFloat_entry, @object
GHC.Float.$fShowDouble_$sshowSignedFloat_entry:
_c3f6o:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3f6p
_c3f6q:
	leaq block_c3f6l_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rdi,%rbx
	movq %r14,-16(%rbp)
	movq %rsi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c3f6l
_c3f6m:
	movq (%rbx),%rax
	jmp *(%rax)
_c3f6p:
	leaq GHC.Float.$fShowDouble_$sshowSignedFloat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fShowDouble_$sshowSignedFloat_entry, .-GHC.Float.$fShowDouble_$sshowSignedFloat_entry


==================== Asm code ====================
2018-03-16 15:57:53.955457047 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fShowDouble_$sshowSignedFloat_info
.type GHC.Float.$fShowDouble_$sshowSignedFloat_info, @object
GHC.Float.$fShowDouble_$sshowSignedFloat_info:
	.quad	GHC.Float.$fShowDouble_$sshowSignedFloat_entry
	.quad	0
	.quad	14
	.quad	12884901911


==================== Asm code ====================
2018-03-16 15:57:53.956120728 UTC

.section .text
.align 8
_c3f6l:
_c3f6l:
	movsd 7(%rbx),%xmm1
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $24,%rbp
	jmp GHC.Float.$w$sshowSignedFloat_entry
	.size _c3f6l, .-_c3f6l


==================== Asm code ====================
2018-03-16 15:57:53.956689652 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3f6l_info:
	.quad	_c3f6l
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.968355209 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.showSignedFloat_closure
.type GHC.Float.showSignedFloat_closure, @object
GHC.Float.showSignedFloat_closure:
	.quad	GHC.Float.showSignedFloat_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:53.969224699 UTC

.section .text
.align 8
$dNum_s3b3X_entry:
_c3f6V:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3f6W
_c3f6X:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Real.$p1Real_entry@gotpcrel(%rip)
_c3f6W:
	jmp *-16(%r13)
	.size $dNum_s3b3X_entry, .-$dNum_s3b3X_entry


==================== Asm code ====================
2018-03-16 15:57:53.969877769 UTC

.section .data.rel.ro
.align 8
.align 1
$dNum_s3b3X_info:
	.quad	$dNum_s3b3X_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:53.970609869 UTC

.section .text
.align 8
sat_s3b4d_entry:
_c3f72:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3f73
_c3f74:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Float.rationalToDouble5_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c3f73:
	jmp *-16(%r13)
	.size sat_s3b4d_entry, .-sat_s3b4d_entry


==================== Asm code ====================
2018-03-16 15:57:53.971276686 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3b4d_info:
	.quad	sat_s3b4d_entry
	.quad	1
	.quad	4294967312
	.quad	S3bQP_srt+832


==================== Asm code ====================
2018-03-16 15:57:53.972007513 UTC

.section .text
.align 8
sat_s3b42_entry:
_c3f7r:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3f7s
_c3f7t:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.negate_entry@gotpcrel(%rip)
_c3f7s:
	jmp *-16(%r13)
	.size sat_s3b42_entry, .-sat_s3b42_entry


==================== Asm code ====================
2018-03-16 15:57:53.972695697 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3b42_info:
	.quad	sat_s3b42_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:53.973980786 UTC

.section .text
.align 8
g_s3b41_entry:
_c3f7u:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3f7v
_c3f7w:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c3f7y
_c3f7x:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	leaq sat_s3b42_info(%rip),%rdx
	movq %rdx,-24(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%r14
	movq %rax,%rbx
	addq $-16,%rbp
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_c3f7y:
	movq $32,904(%r13)
_c3f7v:
	jmp *-16(%r13)
	.size g_s3b41_entry, .-g_s3b41_entry


==================== Asm code ====================
2018-03-16 15:57:53.974682039 UTC

.section .data.rel.ro
.align 8
.align 1
g_s3b41_info:
	.quad	g_s3b41_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:57:53.975504136 UTC

.section .text
.align 8
sat_s3b46_entry:
_c3f7J:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c3f7N
_c3f7M:
	movq 7(%rbx),%rax
	movq stg_ap_2_upd_info@gotpcrel(%rip),%rbx
	movq %rbx,-48(%r12)
	movq %rax,-32(%r12)
	movq %r14,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq GHC.Float.$fShowDouble3_closure+1(%rip),%rax
	movq %rax,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c3f7N:
	movq $56,904(%r13)
	jmp *-8(%r13)
	.size sat_s3b46_entry, .-sat_s3b46_entry


==================== Asm code ====================
2018-03-16 15:57:53.976163286 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3b46_info:
	.quad	sat_s3b46_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:53.976951524 UTC

.section .text
.align 8
sat_s3b49_entry:
_c3f7Z:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3f80
_c3f81:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3f83
_c3f82:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq :_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%r12)
	movq GHC.Show.$fShow(,)2_closure@gotpcrel(%rip),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -14(%r12),%r14
	movq %rax,%rbx
	addq $-16,%rbp
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_c3f83:
	movq $24,904(%r13)
_c3f80:
	jmp *-16(%r13)
	.size sat_s3b49_entry, .-sat_s3b49_entry


==================== Asm code ====================
2018-03-16 15:57:53.977700496 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3b49_info:
	.quad	sat_s3b49_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:53.978485092 UTC

.section .text
.align 8
sat_s3b4b_entry:
_c3f86:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _c3f8a
_c3f89:
	movq 7(%rbx),%rax
	leaq sat_s3b49_info(%rip),%rbx
	movq %rbx,-72(%r12)
	movq %rax,-56(%r12)
	movq %r14,-48(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-40(%r12)
	leaq GHC.Float.$fShowDouble3_closure+1(%rip),%rax
	movq %rax,-32(%r12)
	leaq -72(%r12),%rax
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq GHC.Show.$fShow(,)4_closure@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	leaq -38(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c3f8a:
	movq $80,904(%r13)
	jmp *-8(%r13)
	.size sat_s3b4b_entry, .-sat_s3b4b_entry


==================== Asm code ====================
2018-03-16 15:57:53.979174725 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3b4b_info:
	.quad	sat_s3b4b_entry
	.quad	1
	.quad	9
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:53.979867866 UTC

.section .text
.align 8
.globl GHC.Float.showSignedFloat_entry
.type GHC.Float.showSignedFloat_entry, @object
GHC.Float.showSignedFloat_entry:
_c3f8b:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _c3f8c
_c3f8d:
	leaq block_c3f6J_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %r14,%rax
	movq %rax,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movq %r8,-8(%rbp)
	addq $-40,%rbp
	jmp GHC.Float.$p1RealFloat_entry
_c3f8c:
	leaq GHC.Float.showSignedFloat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.showSignedFloat_entry, .-GHC.Float.showSignedFloat_entry


==================== Asm code ====================
2018-03-16 15:57:53.980507693 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.showSignedFloat_info
.type GHC.Float.showSignedFloat_info, @object
GHC.Float.showSignedFloat_info:
	.quad	GHC.Float.showSignedFloat_entry
	.quad	0
	.quad	12884901902
	.quad	17179869208
	.quad	S3bQP_srt+832


==================== Asm code ====================
2018-03-16 15:57:53.98115697 UTC

.section .text
.align 8
_c3f6J:
_c3f6J:
	leaq block_c3f6N_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp *GHC.Real.$p1RealFrac_entry@gotpcrel(%rip)
	.size _c3f6J, .-_c3f6J


==================== Asm code ====================
2018-03-16 15:57:53.981775351 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3f6J_info:
	.quad	_c3f6J
	.quad	4
	.quad	4294967326
	.quad	S3bQP_srt+832


==================== Asm code ====================
2018-03-16 15:57:53.982572003 UTC

.section .text
.align 8
_c3f6N:
_c3f6N:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c3f8h
_c3f8g:
	leaq $dNum_s3b3X_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %rbx,-24(%r12)
	leaq sat_s3b4d_info(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	leaq block_c3f75_info(%rip),%rcx
	movq %rcx,-16(%rbp)
	movq %rbx,%r14
	leaq -16(%r12),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp *GHC.Real.$p2Real_entry@gotpcrel(%rip)
_c3f8h:
	movq $48,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3f6N, .-_c3f6N


==================== Asm code ====================
2018-03-16 15:57:53.983302707 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3f6N_info:
	.quad	_c3f6N
	.quad	4
	.quad	4294967326
	.quad	S3bQP_srt+832


==================== Asm code ====================
2018-03-16 15:57:53.983998178 UTC

.section .text
.align 8
_c3f75:
_c3f75:
	movq 8(%rbp),%rax
	leaq block_c3f8i_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq 48(%rbp),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp *GHC.Classes.<_entry@gotpcrel(%rip)
	.size _c3f75, .-_c3f75


==================== Asm code ====================
2018-03-16 15:57:53.98462966 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3f75_info:
	.quad	_c3f75
	.quad	6
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.985558975 UTC

.section .text
.align 8
_c3f8i:
_c3f8i:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c3f8x
_u3f8O:
	addq $8,%rbp
	jmp _s3b3Y
_c3f8x:
	leaq block_c3f8u_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq 40(%rbp),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Float.isNegativeZero_entry
	.size _c3f8i, .-_c3f8i


==================== Asm code ====================
2018-03-16 15:57:53.986193926 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3f8i_info:
	.quad	_c3f8i
	.quad	5
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.986900236 UTC

.section .text
.align 8
_c3f8u:
_c3f8u:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c3f8D
_u3f8P:
	addq $8,%rbp
	jmp _s3b3Y
_c3f8D:
	movq 40(%rbp),%r14
	movq 24(%rbp),%rbx
	addq $48,%rbp
	jmp *stg_ap_p_fast@gotpcrel(%rip)
	.size _c3f8u, .-_c3f8u


==================== Asm code ====================
2018-03-16 15:57:53.987488197 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3f8u_info:
	.quad	_c3f8u
	.quad	133
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.988193172 UTC

.section .text
.align 8
_s3b3Y:
_s3b3Y:
	leaq block_c3f7e_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 24(%rbp),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3f7e
_c3f7f:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _s3b3Y, .-_s3b3Y


==================== Asm code ====================
2018-03-16 15:57:53.98906556 UTC

.section .text
.align 8
_c3f7e:
_c3f7e:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c3f8n
_c3f8m:
	movq 7(%rbx),%rax
	leaq g_s3b41_info(%rip),%rbx
	movq %rbx,-48(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq 40(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-16(%r12)
	leaq -48(%r12),%rbx
	cmpq $6,%rax
	jle _c3f8p
_c3f8q:
	leaq sat_s3b4b_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3f8p:
	leaq sat_s3b46_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3f8n:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3f7e, .-_c3f7e


==================== Asm code ====================
2018-03-16 15:57:53.989820862 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3f7e_info:
	.quad	_c3f7e
	.quad	645
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.995280513 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.clamp_closure
.type GHC.Float.clamp_closure, @object
GHC.Float.clamp_closure:
	.quad	GHC.Float.clamp_info


==================== Asm code ====================
2018-03-16 15:57:53.99614533 UTC

.section .text
.align 8
.globl GHC.Float.clamp_entry
.type GHC.Float.clamp_entry, @object
GHC.Float.clamp_entry:
_c3faE:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3faI
_c3faJ:
	leaq block_c3faB_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3faB
_c3faC:
	movq (%rbx),%rax
	jmp *(%rax)
_c3faI:
	leaq GHC.Float.clamp_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.clamp_entry, .-GHC.Float.clamp_entry


==================== Asm code ====================
2018-03-16 15:57:53.996772157 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.clamp_info
.type GHC.Float.clamp_info, @object
GHC.Float.clamp_info:
	.quad	GHC.Float.clamp_entry
	.quad	0
	.quad	14
	.quad	8589934607


==================== Asm code ====================
2018-03-16 15:57:53.997560021 UTC

.section .text
.align 8
_c3faB:
_c3faB:
	leaq block_c3faH_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 8(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,8(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c3faH
_c3faL:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3faB, .-_c3faB


==================== Asm code ====================
2018-03-16 15:57:53.998150681 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3faB_info:
	.quad	_c3faB
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:53.999043286 UTC

.section .text
.align 8
_c3faH:
_c3faH:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3faR
_c3faQ:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rcx
	movq %rax,%rdx
	negq %rdx
	cmpq %rcx,%rax
	jg _c3fb6
_c3fbf:
	cmpq %rax,%rdx
	jg _c3fbd
_c3fbe:
	addq $-16,%r12
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c3fbd:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rdx,(%r12)
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3fb6:
	cmpq %rcx,%rdx
	jg _c3fb3
_c3fb4:
	addq $-16,%r12
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c3fb3:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rdx,(%r12)
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3faR:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3faH, .-_c3faH


==================== Asm code ====================
2018-03-16 15:57:53.999800274 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3faH_info:
	.quad	_c3faH
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:54.013732689 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$dmscaleFloat_closure
.type GHC.Float.$dmscaleFloat_closure, @object
GHC.Float.$dmscaleFloat_closure:
	.quad	GHC.Float.$dmscaleFloat_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:54.014609974 UTC

.section .text
.align 8
sat_s3b4B_entry:
_c3fc4:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3fc5
_c3fc6:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3fc2_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp *GHC.Real.$p1Real_entry@gotpcrel(%rip)
_c3fc5:
	jmp *-16(%r13)
	.size sat_s3b4B_entry, .-sat_s3b4B_entry


==================== Asm code ====================
2018-03-16 15:57:54.015215892 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3b4B_info:
	.quad	sat_s3b4B_entry
	.quad	1
	.quad	4294967312
	.quad	S3bQP_srt+832


==================== Asm code ====================
2018-03-16 15:57:54.015880893 UTC

.section .text
.align 8
_c3fc2:
_c3fc2:
	movq %rbx,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-8(%rbp)
	leaq GHC.Float.rationalToDouble5_closure(%rip),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
	.size _c3fc2, .-_c3fc2


==================== Asm code ====================
2018-03-16 15:57:54.016437313 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fc2_info:
	.quad	_c3fc2
	.quad	0
	.quad	4294967326
	.quad	S3bQP_srt+832


==================== Asm code ====================
2018-03-16 15:57:54.017149465 UTC

.section .text
.align 8
ds2_s3b4F_entry:
_c3fcy:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3fcz
_c3fcA:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Float.decodeFloat_entry
_c3fcz:
	jmp *-16(%r13)
	.size ds2_s3b4F_entry, .-ds2_s3b4F_entry


==================== Asm code ====================
2018-03-16 15:57:54.017842515 UTC

.section .data.rel.ro
.align 8
.align 1
ds2_s3b4F_info:
	.quad	ds2_s3b4F_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:54.018649338 UTC

.section .text
.align 8
sat_s3b59_entry:
_c3fcI:
	leaq -80(%rbp),%rax
	cmpq %r15,%rax
	jb _c3fd5
_c3fd6:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3fcF_info(%rip),%rax
	movq %rax,-48(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 40(%rbx),%rdx
	movq 32(%rbx),%rbx
	movq %rax,-40(%rbp)
	movq %rcx,-32(%rbp)
	movq %rdx,-24(%rbp)
	addq $-48,%rbp
	testb $7,%bl
	jne _c3fcF
_c3fcG:
	movq (%rbx),%rax
	jmp *(%rax)
_c3fd5:
	jmp *-16(%r13)
	.size sat_s3b59_entry, .-sat_s3b59_entry


==================== Asm code ====================
2018-03-16 15:57:54.019319649 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3b59_info:
	.quad	sat_s3b59_entry
	.quad	4294967299
	.quad	15


==================== Asm code ====================
2018-03-16 15:57:54.019972657 UTC

.section .text
.align 8
_c3fcF:
_c3fcF:
	leaq block_c3fcL_info(%rip),%rax
	movq %rax,(%rbp)
	movq 15(%rbx),%rbx
	testb $7,%bl
	jne _c3fcL
_c3fcM:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3fcF, .-_c3fcF


==================== Asm code ====================
2018-03-16 15:57:54.020521597 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fcF_info:
	.quad	_c3fcF
	.quad	259
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:54.021180692 UTC

.section .text
.align 8
_c3fcL:
_c3fcL:
	leaq block_c3fcQ_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 8(%rbp),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbp),%rax
	movq %rax,-16(%rbp)
	movq 7(%rbx),%rax
	movq %rax,(%rbp)
	addq $-24,%rbp
	jmp GHC.Float.floatRange_entry
	.size _c3fcL, .-_c3fcL


==================== Asm code ====================
2018-03-16 15:57:54.021903087 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fcL_info:
	.quad	_c3fcL
	.quad	259
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:54.022612987 UTC

.section .text
.align 8
_c3fcQ:
_c3fcQ:
	leaq block_c3fcU_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq 15(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c3fcU
_c3fcV:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3fcQ, .-_c3fcQ


==================== Asm code ====================
2018-03-16 15:57:54.023196067 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fcQ_info:
	.quad	_c3fcQ
	.quad	580
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:54.02388156 UTC

.section .text
.align 8
_c3fcU:
_c3fcU:
	leaq block_c3fcZ_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c3fcZ
_c3fd0:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3fcU, .-_c3fcU


==================== Asm code ====================
2018-03-16 15:57:54.024448964 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fcU_info:
	.quad	_c3fcU
	.quad	1157
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:54.025105639 UTC

.section .text
.align 8
_c3fcZ:
_c3fcZ:
	leaq block_c3fd4_info(%rip),%rax
	movq %rax,(%rbp)
	movq 24(%rbp),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq 32(%rbp),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq %rax,32(%rbp)
	addq $-16,%rbp
	jmp GHC.Float.floatDigits_entry
	.size _c3fcZ, .-_c3fcZ


==================== Asm code ====================
2018-03-16 15:57:54.025806627 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fcZ_info:
	.quad	_c3fcZ
	.quad	1221
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:54.026831506 UTC

.section .text
.align 8
_c3fd4:
_c3fd4:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3fdh
_c3fdg:
	movq 40(%rbp),%rax
	movq 16(%rbp),%rcx
	movq 7(%rbx),%rbx
	shlq $2,%rbx
	subq 32(%rbp),%rbx
	movq 8(%rbp),%rdx
	addq %rbx,%rdx
	movq %rdx,%rbx
	negq %rbx
	cmpq %rax,%rdx
	jg _c3fdN
_c3fe4:
	cmpq %rdx,%rbx
	jg _c3fdX
_c3fe3:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	addq %rdx,%rcx
	movq %rcx,(%r12)
	leaq -7(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3fdX:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	addq %rbx,%rcx
	movq %rcx,(%r12)
	leaq -7(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3fdN:
	cmpq %rax,%rbx
	jg _c3fdF
_c3fdL:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	addq %rax,%rcx
	movq %rcx,(%r12)
	leaq -7(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3fdF:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	addq %rbx,%rcx
	movq %rcx,(%r12)
	leaq -7(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3fdh:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3fd4, .-_c3fd4


==================== Asm code ====================
2018-03-16 15:57:54.027652046 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fd4_info:
	.quad	_c3fd4
	.quad	1989
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:54.028396562 UTC

.section .text
.align 8
.globl GHC.Float.$dmscaleFloat_entry
.type GHC.Float.$dmscaleFloat_entry, @object
GHC.Float.$dmscaleFloat_entry:
_c3fe9:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _c3fea
_c3feb:
	leaq block_c3fbJ_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rbx
	movq %r14,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c3fbJ
_c3fbK:
	movq (%rbx),%rax
	jmp *(%rax)
_c3fea:
	leaq GHC.Float.$dmscaleFloat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$dmscaleFloat_entry, .-GHC.Float.$dmscaleFloat_entry


==================== Asm code ====================
2018-03-16 15:57:54.029052555 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$dmscaleFloat_info
.type GHC.Float.$dmscaleFloat_info, @object
GHC.Float.$dmscaleFloat_info:
	.quad	GHC.Float.$dmscaleFloat_entry
	.quad	0
	.quad	21474836494
	.quad	12884901911
	.quad	S3bQP_srt+832


==================== Asm code ====================
2018-03-16 15:57:54.030020903 UTC

.section .text
.align 8
_c3fbJ:
_c3fbJ:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jne _c3fee
_u3feN:
	addq $16,%rbp
	jmp _c3feI
_c3fee:
	leaq block_c3fbQ_info(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq 8(%rbp),%r14
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp GHC.Float.$p1RealFloat_entry
	.size _c3fbJ, .-_c3fbJ


==================== Asm code ====================
2018-03-16 15:57:54.030631984 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fbJ_info:
	.quad	_c3fbJ
	.quad	2
	.quad	4294967326
	.quad	S3bQP_srt+832


==================== Asm code ====================
2018-03-16 15:57:54.03124431 UTC

.section .text
.align 8
_c3fbQ:
_c3fbQ:
	leaq block_c3fbU_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp *GHC.Real.$p1RealFrac_entry@gotpcrel(%rip)
	.size _c3fbQ, .-_c3fbQ


==================== Asm code ====================
2018-03-16 15:57:54.031782988 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fbQ_info:
	.quad	_c3fbQ
	.quad	67
	.quad	4294967326
	.quad	S3bQP_srt+832


==================== Asm code ====================
2018-03-16 15:57:54.032507051 UTC

.section .text
.align 8
_c3fbU:
_c3fbU:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3fei
_c3feh:
	leaq sat_s3b4B_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,(%r12)
	leaq block_c3fca_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%r14
	leaq -16(%r12),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Real.$p2Real_entry@gotpcrel(%rip)
_c3fei:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3fbU, .-_c3fbU


==================== Asm code ====================
2018-03-16 15:57:54.033158158 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fbU_info:
	.quad	_c3fbU
	.quad	67
	.quad	4294967326
	.quad	S3bQP_srt+832


==================== Asm code ====================
2018-03-16 15:57:54.033838235 UTC

.section .text
.align 8
_c3fca:
_c3fca:
	leaq block_c3fce_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp *GHC.Classes.$p1Ord_entry@gotpcrel(%rip)
	.size _c3fca, .-_c3fca


==================== Asm code ====================
2018-03-16 15:57:54.034436792 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fca_info:
	.quad	_c3fca
	.quad	132
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:54.035676306 UTC

.section .text
.align 8
_c3fce:
_c3fce:
	movq 8(%rbp),%rax
	leaq block_c3fci_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq 32(%rbp),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp *GHC.Classes.==_entry@gotpcrel(%rip)
	.size _c3fce, .-_c3fce


==================== Asm code ====================
2018-03-16 15:57:54.036401415 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fce_info:
	.quad	_c3fce
	.quad	132
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:54.037197502 UTC

.section .text
.align 8
_c3fci:
_c3fci:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c3fen
_u3feO:
	addq $24,%rbp
	jmp _c3feI
_c3fen:
	leaq block_c3fcm_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq 24(%rbp),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Float.isNaN_entry
	.size _c3fci, .-_c3fci


==================== Asm code ====================
2018-03-16 15:57:54.038024841 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fci_info:
	.quad	_c3fci
	.quad	67
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:54.038760304 UTC

.section .text
.align 8
_c3fcm:
_c3fcm:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c3feq
_u3feP:
	addq $24,%rbp
	jmp _c3feI
_c3feq:
	leaq block_c3fcq_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq 24(%rbp),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Float.isInfinite_entry
	.size _c3fcm, .-_c3fcm


==================== Asm code ====================
2018-03-16 15:57:54.039387579 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fcm_info:
	.quad	_c3fcm
	.quad	67
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:54.040227732 UTC

.section .text
.align 8
_c3fcq:
_c3fcq:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c3fes
_u3feQ:
	addq $24,%rbp
	jmp _c3feI
_c3fev:
	movq $104,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c3fes:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _c3fev
_c3feu:
	leaq ds2_s3b4F_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 16(%rbp),%rax
	movq %rax,-80(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-72(%r12)
	leaq sat_s3b59_info(%rip),%rcx
	movq %rcx,-64(%r12)
	movq %rax,-48(%r12)
	movq %rbx,-40(%r12)
	leaq -96(%r12),%rbx
	movq %rbx,-32(%r12)
	movq 8(%rbp),%rcx
	movq %rcx,-24(%r12)
	movq stg_sel_0_upd_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rbx,(%r12)
	movq %rax,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,8(%rbp)
	leaq -16(%r12),%rax
	movq %rax,16(%rbp)
	leaq -64(%r12),%rax
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp GHC.Float.encodeFloat_entry
	.size _c3fcq, .-_c3fcq


==================== Asm code ====================
2018-03-16 15:57:54.0410025 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fcq_info:
	.quad	_c3fcq
	.quad	67
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:54.041633863 UTC

.section .text
.align 8
_c3feI:
_c3feI:
	movq (%rbp),%rbx
	addq $8,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c3feI, .-_c3feI


==================== Asm code ====================
2018-03-16 15:57:54.079982113 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$wfromRat''_closure
.type GHC.Float.$wfromRat''_closure, @object
GHC.Float.$wfromRat''_closure:
	.quad	GHC.Float.$wfromRat''_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:54.080811465 UTC

.section .text
.align 8
.globl GHC.Float.$wfromRat''_slow
.type GHC.Float.$wfromRat''_slow, @object
GHC.Float.$wfromRat''_slow:
_c3fha:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.Float.$wfromRat''_entry
	.size GHC.Float.$wfromRat''_slow, .-GHC.Float.$wfromRat''_slow


==================== Asm code ====================
2018-03-16 15:57:54.08165432 UTC

.section .text
.align 8
sat_s3b5y_entry:
_c3fhS:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3fhT
_c3fhU:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movl $1,%esi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Integer.Type.shiftLInteger_entry@gotpcrel(%rip)
_c3fhT:
	jmp *-16(%r13)
	.size sat_s3b5y_entry, .-sat_s3b5y_entry


==================== Asm code ====================
2018-03-16 15:57:54.08223889 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3b5y_info:
	.quad	sat_s3b5y_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:54.082942835 UTC

.section .text
.align 8
sat_s3b5G_entry:
_c3fi9:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3fia
_c3fib:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movl $1,%esi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Integer.Type.shiftLInteger_entry@gotpcrel(%rip)
_c3fia:
	jmp *-16(%r13)
	.size sat_s3b5G_entry, .-sat_s3b5G_entry


==================== Asm code ====================
2018-03-16 15:57:54.08356445 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3b5G_info:
	.quad	sat_s3b5G_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:54.084099869 UTC

.section .data.rel.ro
.align 8
.align 1
u3fs2_srtd:
	.quad	S3bQP_srt+48
	.quad	96
	.quad	1
	.quad	2147483648


==================== Asm code ====================
2018-03-16 15:57:54.084871432 UTC

.section .text
.align 8
ds_s3b5j_entry:
_c3fij:
	leaq -64(%rbp),%rax
	cmpq %r15,%rax
	jb _c3fik
_c3fk5:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3fic_info(%rip),%rax
	movq %rax,-64(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rbx
	movq %rbx,%rdi
	movq %rax,%rbx
	movq %rdx,-56(%rbp)
	movq %rsi,-48(%rbp)
	movq %rax,-40(%rbp)
	movq %rcx,-32(%rbp)
	movq %rdi,-24(%rbp)
	addq $-64,%rbp
	testb $7,%bl
	jne _c3fic
_c3fid:
	movq (%rbx),%rax
	jmp *(%rax)
_c3fik:
	jmp *-16(%r13)
	.size ds_s3b5j_entry, .-ds_s3b5j_entry


==================== Asm code ====================
2018-03-16 15:57:54.085852819 UTC

.section .data.rel.ro
.align 8
.align 1
ds_s3b5j_info:
	.quad	ds_s3b5j_entry
	.quad	12884901890
	.quad	-4294967281
	.quad	u3fs2_srtd


==================== Asm code ====================
2018-03-16 15:57:54.08640397 UTC

.section .data.rel.ro
.align 8
.align 1
u3fs3_srtd:
	.quad	S3bQP_srt+48
	.quad	96
	.quad	1
	.quad	2147483648


==================== Asm code ====================
2018-03-16 15:57:54.087285353 UTC

.section .text
.align 8
_c3fic:
_c3fic:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c3fih
_c3fig:
	movq $-1,%rax
	subq 40(%rbp),%rax
	cmpq 8(%rbp),%rax
	jl _u3fkx
_c3fkg:
	movq %rax,40(%rbp)
	addq $16,%rbp
	jmp _s3b5k
_u3fkx:
	addq $8,%rbp
	jmp _c3fkv
_c3fih:
	leaq block_c3fkj_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rsi
	xorl %r14d,%r14d
	jmp *GHC.Integer.Logarithms.Internals.integerLog2#_step_entry@gotpcrel(%rip)
	.size _c3fic, .-_c3fic


==================== Asm code ====================
2018-03-16 15:57:54.088038506 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fic_info:
	.quad	_c3fic
	.quad	1221
	.quad	-4294967266
	.quad	u3fs3_srtd


==================== Asm code ====================
2018-03-16 15:57:54.088758777 UTC

.section .text
.align 8
_c3fkj:
_c3fkj:
	subq 40(%rbp),%rbx
	cmpq 8(%rbp),%rbx
	jl _u3fkz
_c3fkw:
	movq %rbx,40(%rbp)
	addq $16,%rbp
	jmp _s3b5k
_u3fkz:
	addq $8,%rbp
	jmp _c3fkv
	.size _c3fkj, .-_c3fkj


==================== Asm code ====================
2018-03-16 15:57:54.089464445 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fkj_info:
	.quad	_c3fkj
	.quad	1221
	.quad	4294967326
	.quad	S3bQP_srt+856


==================== Asm code ====================
2018-03-16 15:57:54.090160359 UTC

.section .text
.align 8
_c3fkv:
_c3fkv:
	movq (%rbp),%rax
	movq %rax,32(%rbp)
	addq $8,%rbp
	jmp _s3b5k
	.size _c3fkv, .-_c3fkv


==================== Asm code ====================
2018-03-16 15:57:54.091209886 UTC

.section .text
.align 8
_s3b5k:
_s3b5k:
	movq (%rbp),%rax
	movq 8(%rbp),%rbx
	movq 24(%rbp),%rcx
	cmpq %rax,%rcx
	jge _c3fjH
_c3fjY:
	subq %rcx,%rax
	testq %rax,%rax
	jl _c3fjU
_c3fjX:
	leaq block_c3fjW_info(%rip),%rcx
	movq %rcx,-8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $-8,%rbp
	jmp *GHC.Integer.Type.shiftLInteger_entry@gotpcrel(%rip)
_c3fjU:
	leaq block_c3fjW_info(%rip),%rcx
	movq %rcx,-8(%rbp)
	movq %rax,%rsi
	negq %rsi
	movq %rbx,%r14
	addq $-8,%rbp
	jmp *GHC.Integer.Type.shiftRInteger_entry@gotpcrel(%rip)
_c3fjF:
	movq %rbx,16(%rbp)
	movq %rdx,8(%rbp)
	jmp _s3b5m
_c3fjH:
	movq 16(%rbp),%rdx
	cmpq %rax,%rcx
	je _c3fjF
_c3fjy:
	subq %rax,%rcx
	testq %rcx,%rcx
	jl _c3fjt
_c3fjw:
	leaq block_c3fjv_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rcx,%rsi
	movq %rdx,%r14
	addq $-8,%rbp
	jmp *GHC.Integer.Type.shiftLInteger_entry@gotpcrel(%rip)
_c3fjt:
	leaq block_c3fjv_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rcx,%rsi
	negq %rsi
	movq %rdx,%r14
	addq $-8,%rbp
	jmp *GHC.Integer.Type.shiftRInteger_entry@gotpcrel(%rip)
	.size _s3b5k, .-_s3b5k


==================== Asm code ====================
2018-03-16 15:57:54.092188875 UTC

.section .text
.align 8
_c3fjv:
_c3fjv:
	movq 16(%rbp),%rax
	movq %rbx,16(%rbp)
	movq %rax,24(%rbp)
	addq $8,%rbp
	jmp _s3b5m
	.size _c3fjv, .-_c3fjv


==================== Asm code ====================
2018-03-16 15:57:54.09274383 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fjv_info:
	.quad	_c3fjv
	.quad	836
	.quad	4294967326
	.quad	S3bQP_srt+856


==================== Asm code ====================
2018-03-16 15:57:54.093481524 UTC

.section .text
.align 8
_c3fjW:
_c3fjW:
	movq 24(%rbp),%rax
	movq %rbx,24(%rbp)
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp _s3b5m
	.size _c3fjW, .-_c3fjW


==================== Asm code ====================
2018-03-16 15:57:54.094066366 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fjW_info:
	.quad	_c3fjW
	.quad	708
	.quad	4294967326
	.quad	S3bQP_srt+856


==================== Asm code ====================
2018-03-16 15:57:54.094869955 UTC

.section .text
.align 8
_s3b5m:
_s3b5m:
	movq (%rbp),%rax
	movq 8(%rbp),%rbx
	testq %rax,%rax
	jl _c3fio
_c3fiN:
	leaq block_c3fhW_info(%rip),%rcx
	movq %rcx,-8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $-8,%rbp
	jmp *GHC.Integer.Type.shiftLInteger_entry@gotpcrel(%rip)
_c3fio:
	leaq block_c3fhF_info(%rip),%rcx
	movq %rcx,-8(%rbp)
	movq %rax,%rsi
	negq %rsi
	movq %rbx,%r14
	addq $-8,%rbp
	jmp *GHC.Integer.Type.shiftRInteger_entry@gotpcrel(%rip)
	.size _s3b5m, .-_s3b5m


==================== Asm code ====================
2018-03-16 15:57:54.09569898 UTC

.section .text
.align 8
_c3fhF:
_c3fhF:
	leaq block_c3fhJ_info(%rip),%rax
	movq %rax,(%rbp)
	movq 24(%rbp),%rsi
	movq %rbx,%r14
	jmp *GHC.Integer.Type.leInteger#_entry@gotpcrel(%rip)
	.size _c3fhF, .-_c3fhF


==================== Asm code ====================
2018-03-16 15:57:54.096299931 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fhF_info:
	.quad	_c3fhF
	.quad	580
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:54.09745525 UTC

.section .text
.align 8
_c3fhJ:
_c3fhJ:
	movq 8(%rbp),%rax
	movq 32(%rbp),%rcx
	movq 24(%rbp),%rdx
	movq 16(%rbp),%rsi
	cmpq $1,%rbx
	je _c3fiJ
_c3fix:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c3fiA
_c3fiz:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-40(%r12)
	subq %rax,%rcx
	movq %rcx,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	leaq -39(%r12),%rax
	movq %rax,-16(%r12)
	movq %rdx,-8(%r12)
	movq %rsi,(%r12)
	leaq -23(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3fiM:
	movq $72,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
_c3fiJ:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c3fiM
_c3fiL:
	leaq sat_s3b5y_info(%rip),%rbx
	movq %rbx,-64(%r12)
	movq %rsi,-48(%r12)
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-40(%r12)
	subq %rax,%rcx
	leaq 1(%rcx),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	leaq -39(%r12),%rax
	movq %rax,-16(%r12)
	movq %rdx,-8(%r12)
	leaq -64(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3fiA:
	movq $48,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c3fhJ, .-_c3fhJ


==================== Asm code ====================
2018-03-16 15:57:54.098391464 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fhJ_info:
	.quad	_c3fhJ
	.quad	580
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:54.099042808 UTC

.section .text
.align 8
_c3fhW:
_c3fhW:
	leaq block_c3fi0_info(%rip),%rax
	movq %rax,(%rbp)
	movq 24(%rbp),%rsi
	movq %rbx,%r14
	jmp *GHC.Integer.Type.leInteger#_entry@gotpcrel(%rip)
	.size _c3fhW, .-_c3fhW


==================== Asm code ====================
2018-03-16 15:57:54.099642787 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fhW_info:
	.quad	_c3fhW
	.quad	580
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:54.10066701 UTC

.section .text
.align 8
_c3fi0:
_c3fi0:
	movq 8(%rbp),%rax
	movq 32(%rbp),%rcx
	movq 24(%rbp),%rdx
	movq 16(%rbp),%rsi
	cmpq $1,%rbx
	je _c3fj8
_c3fiW:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c3fiZ
_c3fiY:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-40(%r12)
	subq %rax,%rcx
	movq %rcx,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	leaq -39(%r12),%rax
	movq %rax,-16(%r12)
	movq %rdx,-8(%r12)
	movq %rsi,(%r12)
	leaq -23(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3fjb:
	movq $72,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
_c3fj8:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c3fjb
_c3fja:
	leaq sat_s3b5G_info(%rip),%rbx
	movq %rbx,-64(%r12)
	movq %rsi,-48(%r12)
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-40(%r12)
	subq %rax,%rcx
	leaq 1(%rcx),%rax
	movq %rax,-32(%r12)
	movq (,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-24(%r12)
	leaq -39(%r12),%rax
	movq %rax,-16(%r12)
	movq %rdx,-8(%r12)
	leaq -64(%r12),%rax
	movq %rax,(%r12)
	leaq -23(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3fiZ:
	movq $48,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c3fi0, .-_c3fi0


==================== Asm code ====================
2018-03-16 15:57:54.101658222 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fi0_info:
	.quad	_c3fi0
	.quad	580
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:54.102252351 UTC

.section .data.rel.ro
.align 8
.align 1
u3fs4_srtd:
	.quad	S3bQP_srt+8
	.quad	104
	.quad	288230376151711745
	.quad	549755814016


==================== Asm code ====================
2018-03-16 15:57:54.104557948 UTC

.section .text
.align 8
sat_s3b6b_entry:
_c3fkW:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c3fkX
_c3fkY:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3fkT_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _c3fkT
_c3fkU:
	movq (%rbx),%rax
	jmp *(%rax)
_c3fkX:
	jmp *-16(%r13)
	.size sat_s3b6b_entry, .-sat_s3b6b_entry


==================== Asm code ====================
2018-03-16 15:57:54.105333469 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3b6b_info:
	.quad	sat_s3b6b_entry
	.quad	1
	.quad	-4294967280
	.quad	u3fs4_srtd


==================== Asm code ====================
2018-03-16 15:57:54.105882728 UTC

.section .data.rel.ro
.align 8
.align 1
u3fs5_srtd:
	.quad	S3bQP_srt+8
	.quad	104
	.quad	288230376151711745
	.quad	549755814016


==================== Asm code ====================
2018-03-16 15:57:54.10658381 UTC

.section .text
.align 8
_c3fkT:
_c3fkT:
	leaq block_c3fl1_info(%rip),%rax
	movq %rax,-16(%rbp)
	leaq GHC.Float.rationalToDouble5_closure(%rip),%rsi
	movq 23(%rbx),%rax
	movq %rax,%r14
	movq %rax,-8(%rbp)
	movq 15(%rbx),%rax
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
	.size _c3fkT, .-_c3fkT


==================== Asm code ====================
2018-03-16 15:57:54.107200728 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fkT_info:
	.quad	_c3fkT
	.quad	0
	.quad	-4294967266
	.quad	u3fs5_srtd


==================== Asm code ====================
2018-03-16 15:57:54.107926613 UTC

.section .text
.align 8
_c3fl1:
_c3fl1:
	cmpq $1,%rbx
	je _c3flT
_c3flb:
	leaq block_c3fl6_info(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	jmp *GHC.Integer.Type.quotRemInteger_entry@gotpcrel(%rip)
_c3flT:
	movq GHC.Real.divZeroError_closure@gotpcrel(%rip),%rbx
	addq $24,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c3fl1, .-_c3fl1


==================== Asm code ====================
2018-03-16 15:57:54.108595492 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fl1_info:
	.quad	_c3fl1
	.quad	2
	.quad	30064771102
	.quad	S3bQP_srt+864


==================== Asm code ====================
2018-03-16 15:57:54.109310424 UTC

.section .text
.align 8
_c3fl6:
_c3fl6:
	leaq block_c3fl8_info(%rip),%rax
	movq %rax,(%rbp)
	movl $1,%esi
	movq %rbx,16(%rbp)
	jmp *GHC.Integer.Type.shiftLInteger_entry@gotpcrel(%rip)
	.size _c3fl6, .-_c3fl6


==================== Asm code ====================
2018-03-16 15:57:54.109920414 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fl6_info:
	.quad	_c3fl6
	.quad	130
	.quad	21474836510
	.quad	S3bQP_srt+864


==================== Asm code ====================
2018-03-16 15:57:54.11059001 UTC

.section .text
.align 8
_c3fl8:
_c3fl8:
	movq 8(%rbp),%rax
	leaq block_c3flg_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.compareInteger_entry@gotpcrel(%rip)
	.size _c3fl8, .-_c3fl8


==================== Asm code ====================
2018-03-16 15:57:54.111200496 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fl8_info:
	.quad	_c3fl8
	.quad	2
	.quad	21474836510
	.quad	S3bQP_srt+864


==================== Asm code ====================
2018-03-16 15:57:54.111921741 UTC

.section .text
.align 8
_c3flg:
_c3flg:
	andl $7,%ebx
	cmpq $3,%rbx
	jb _u3flV
_u3flW:
	addq $8,%rbp
	jmp _c3flP
_u3flX:
	addq $8,%rbp
	jmp _c3flI
_u3flV:
	cmpq $2,%rbx
	jb _u3flX
_c3fls:
	leaq block_c3flq_info(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%r14
	jmp *GHC.Integer.Type.integerToInt_entry@gotpcrel(%rip)
	.size _c3flg, .-_c3flg


==================== Asm code ====================
2018-03-16 15:57:54.112540682 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3flg_info:
	.quad	_c3flg
	.quad	1
	.quad	21474836510
	.quad	S3bQP_srt+864


==================== Asm code ====================
2018-03-16 15:57:54.113191318 UTC

.section .text
.align 8
_c3flq:
_c3flq:
	testb $1,%bl
	je _u3flY
_u3flZ:
	addq $8,%rbp
	jmp _c3flP
_u3flY:
	addq $8,%rbp
	jmp _c3flI
	.size _c3flq, .-_c3flq


==================== Asm code ====================
2018-03-16 15:57:54.113815691 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3flq_info:
	.quad	_c3flq
	.quad	1
	.quad	21474836510
	.quad	S3bQP_srt+864


==================== Asm code ====================
2018-03-16 15:57:54.114474894 UTC

.section .text
.align 8
_c3flI:
_c3flI:
	movq (%rbp),%rbx
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3flI, .-_c3flI


==================== Asm code ====================
2018-03-16 15:57:54.115148796 UTC

.section .text
.align 8
_c3flP:
_c3flP:
	leaq GHC.Float.$fRealDouble1_closure(%rip),%rsi
	movq (%rbp),%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.plusInteger_entry@gotpcrel(%rip)
	.size _c3flP, .-_c3flP


==================== Asm code ====================
2018-03-16 15:57:54.115987489 UTC

.section .text
.align 8
n'_s3b6C_entry:
_c3fmD:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3fmE
_c3fmL:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	negq %rbx
	testq %rbx,%rbx
	jl _c3fmJ
_c3fmK:
	movq %rbx,%rsi
	movq %rax,%r14
	addq $-16,%rbp
	jmp *GHC.Integer.Type.shiftLInteger_entry@gotpcrel(%rip)
_c3fmJ:
	movq %rbx,%rsi
	negq %rsi
	movq %rax,%r14
	addq $-16,%rbp
	jmp *GHC.Integer.Type.shiftRInteger_entry@gotpcrel(%rip)
_c3fmE:
	jmp *-16(%r13)
	.size n'_s3b6C_entry, .-n'_s3b6C_entry


==================== Asm code ====================
2018-03-16 15:57:54.116699329 UTC

.section .data.rel.ro
.align 8
.align 1
n'_s3b6C_info:
	.quad	n'_s3b6C_entry
	.quad	4294967297
	.quad	4294967315
	.quad	S3bQP_srt+856


==================== Asm code ====================
2018-03-16 15:57:54.117796505 UTC

.section .text
.align 8
sat_s3b6I_entry:
_c3fn3:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3fn4
_c3fn5:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq GHC.Float.$fRealDouble1_closure(%rip),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Integer.Type.plusInteger_entry@gotpcrel(%rip)
_c3fn4:
	jmp *-16(%r13)
	.size sat_s3b6I_entry, .-sat_s3b6I_entry


==================== Asm code ====================
2018-03-16 15:57:54.118410637 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3b6I_info:
	.quad	sat_s3b6I_entry
	.quad	1
	.quad	21474836496
	.quad	S3bQP_srt+864


==================== Asm code ====================
2018-03-16 15:57:54.119079732 UTC

.section .text
.align 8
sat_s3b6P_entry:
_c3fnr:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3fns
_c3fnt:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq GHC.Float.$fRealDouble1_closure(%rip),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Integer.Type.plusInteger_entry@gotpcrel(%rip)
_c3fns:
	jmp *-16(%r13)
	.size sat_s3b6P_entry, .-sat_s3b6P_entry


==================== Asm code ====================
2018-03-16 15:57:54.119699856 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3b6P_info:
	.quad	sat_s3b6P_entry
	.quad	1
	.quad	21474836496
	.quad	S3bQP_srt+864


==================== Asm code ====================
2018-03-16 15:57:54.120242446 UTC

.section .data.rel.ro
.align 8
.align 1
u3fs6_srtd:
	.quad	S3bQP_srt+56
	.quad	104
	.quad	1
	.quad	755914244096


==================== Asm code ====================
2018-03-16 15:57:54.121099652 UTC

.section .text
.align 8
sat_s3b7b_entry:
_c3fnO:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _c3fnP
_c3foZ:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	leaq 1(%rbx),%rdx
	subq %rcx,%rdx
	negq %rdx
	testq %rdx,%rdx
	jl _c3foN
_c3foU:
	leaq block_c3foT_info(%rip),%rsi
	movq %rsi,-48(%rbp)
	movq %rdx,%rsi
	movq %rax,%r14
	movq %rcx,-40(%rbp)
	movq %rax,-32(%rbp)
	movq %rbx,-24(%rbp)
	addq $-48,%rbp
	jmp *GHC.Integer.Type.shiftLInteger_entry@gotpcrel(%rip)
_c3foN:
	leaq block_c3foL_info(%rip),%rsi
	movq %rsi,-48(%rbp)
	movq %rdx,%rsi
	negq %rsi
	movq %rax,%r14
	movq %rcx,-40(%rbp)
	movq %rax,-32(%rbp)
	movq %rbx,-24(%rbp)
	addq $-48,%rbp
	jmp *GHC.Integer.Type.shiftRInteger_entry@gotpcrel(%rip)
_c3fnP:
	jmp *-16(%r13)
	.size sat_s3b7b_entry, .-sat_s3b7b_entry


==================== Asm code ====================
2018-03-16 15:57:54.121890768 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3b7b_info:
	.quad	sat_s3b7b_entry
	.quad	8589934593
	.quad	-4294967281
	.quad	u3fs6_srtd


==================== Asm code ====================
2018-03-16 15:57:54.122416488 UTC

.section .data.rel.ro
.align 8
.align 1
u3fs7_srtd:
	.quad	S3bQP_srt+56
	.quad	104
	.quad	1
	.quad	687194767360


==================== Asm code ====================
2018-03-16 15:57:54.123019262 UTC

.section .text
.align 8
_c3foL:
_c3foL:
	movq %rbx,(%rbp)
	jmp _s3b71
	.size _c3foL, .-_c3foL


==================== Asm code ====================
2018-03-16 15:57:54.123578323 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3foL_info:
	.quad	_c3foL
	.quad	323
	.quad	-4294967266
	.quad	u3fs7_srtd


==================== Asm code ====================
2018-03-16 15:57:54.124131842 UTC

.section .data.rel.ro
.align 8
.align 1
u3fs8_srtd:
	.quad	S3bQP_srt+56
	.quad	104
	.quad	1
	.quad	687194767360


==================== Asm code ====================
2018-03-16 15:57:54.124736789 UTC

.section .text
.align 8
_c3foT:
_c3foT:
	movq %rbx,(%rbp)
	jmp _s3b71
	.size _c3foT, .-_c3foT


==================== Asm code ====================
2018-03-16 15:57:54.125351876 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3foT_info:
	.quad	_c3foT
	.quad	323
	.quad	-4294967266
	.quad	u3fs8_srtd


==================== Asm code ====================
2018-03-16 15:57:54.12606301 UTC

.section .text
.align 8
_s3b71:
_s3b71:
	movq 24(%rbp),%rax
	subq 8(%rbp),%rax
	leaq block_c3fo6_info(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,%rsi
	movq 16(%rbp),%r14
	addq $-8,%rbp
	jmp *GHC.Integer.Logarithms.Internals.roundingMode#_entry@gotpcrel(%rip)
	.size _s3b71, .-_s3b71


==================== Asm code ====================
2018-03-16 15:57:54.12681772 UTC

.section .text
.align 8
_c3fo6:
_c3fo6:
	testq %rbx,%rbx
	je _u3fp3
_u3fp0:
	cmpq $2,%rbx
	je _u3fp4
_c3fod:
	leaq block_c3foa_info(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%r14
	jmp *GHC.Integer.Type.integerToInt_entry@gotpcrel(%rip)
_u3fp4:
	addq $8,%rbp
	jmp _c3foE
_u3fp3:
	addq $8,%rbp
	jmp _c3foA
	.size _c3fo6, .-_c3fo6


==================== Asm code ====================
2018-03-16 15:57:54.127425336 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fo6_info:
	.quad	_c3fo6
	.quad	900
	.quad	21474836510
	.quad	S3bQP_srt+864


==================== Asm code ====================
2018-03-16 15:57:54.128095531 UTC

.section .text
.align 8
_c3foa:
_c3foa:
	testb $1,%bl
	je _u3fp5
_u3fp6:
	addq $8,%rbp
	jmp _c3foE
_u3fp5:
	addq $8,%rbp
	jmp _c3foA
	.size _c3foa, .-_c3foa


==================== Asm code ====================
2018-03-16 15:57:54.128696311 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3foa_info:
	.quad	_c3foa
	.quad	900
	.quad	21474836510
	.quad	S3bQP_srt+864


==================== Asm code ====================
2018-03-16 15:57:54.129430213 UTC

.section .text
.align 8
_c3foA:
_c3foA:
	movq (%rbp),%rbx
	andq $-8,%rbx
	addq $32,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3foA, .-_c3foA


==================== Asm code ====================
2018-03-16 15:57:54.130090591 UTC

.section .text
.align 8
_c3foE:
_c3foE:
	leaq GHC.Float.$fRealDouble1_closure(%rip),%rsi
	movq (%rbp),%r14
	addq $32,%rbp
	jmp *GHC.Integer.Type.plusInteger_entry@gotpcrel(%rip)
	.size _c3foE, .-_c3foE


==================== Asm code ====================
2018-03-16 15:57:54.130674432 UTC

.section .data.rel.ro
.align 8
.align 1
u3fs9_srtd:
	.quad	S3bQP_srt+56
	.quad	105
	.quad	5
	.quad	2139967455232


==================== Asm code ====================
2018-03-16 15:57:54.131432784 UTC

.section .text
.align 8
.globl GHC.Float.$wfromRat''_entry
.type GHC.Float.$wfromRat''_entry, @object
GHC.Float.$wfromRat''_entry:
_c3fpk:
	leaq -64(%rbp),%rax
	cmpq %r15,%rax
	jb _c3fpl
_c3fpm:
	leaq block_c3fpd_info(%rip),%rax
	movq %rax,-48(%rbp)
	movq %r9,%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-48,%rbp
	testb $7,%bl
	jne _c3fpd
_c3fpe:
	movq (%rbx),%rax
	jmp *(%rax)
_c3fpl:
	leaq GHC.Float.$wfromRat''_closure(%rip),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.Float.$wfromRat''_entry, .-GHC.Float.$wfromRat''_entry


==================== Asm code ====================
2018-03-16 15:57:54.132164283 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$wfromRat''_info
.type GHC.Float.$wfromRat''_info, @object
GHC.Float.$wfromRat''_info:
	.quad	GHC.Float.$wfromRat''_entry
	.quad	0
	.quad	-4294967282
	.quad	21474836480
	.quad	u3fs9_srtd
	.quad	389
	.quad	GHC.Float.$wfromRat''_slow


==================== Asm code ====================
2018-03-16 15:57:54.133636727 UTC

.section .data.rel.ro
.align 8
.align 1
u3fsa_srtd:
	.quad	S3bQP_srt+56
	.quad	104
	.quad	5
	.quad	1040455827456


==================== Asm code ====================
2018-03-16 15:57:54.134485498 UTC

.section .text
.align 8
_c3fpd:
_c3fpd:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c3fpi
_c3fph:
	movq $1,-8(%rbp)
	movq $-1,(%rbp)
	addq $-16,%rbp
	jmp _c3fhg
_c3fpi:
	leaq block_c3fr2_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rsi
	xorl %r14d,%r14d
	jmp *GHC.Integer.Logarithms.Internals.integerLog2IsPowerOf2#_couldBe_entry@gotpcrel(%rip)
	.size _c3fpd, .-_c3fpd


==================== Asm code ====================
2018-03-16 15:57:54.135184397 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fpd_info:
	.quad	_c3fpd
	.quad	389
	.quad	-4294967266
	.quad	u3fsa_srtd


==================== Asm code ====================
2018-03-16 15:57:54.135764803 UTC

.section .data.rel.ro
.align 8
.align 1
u3fsb_srtd:
	.quad	S3bQP_srt+56
	.quad	104
	.quad	5
	.quad	1040455827456


==================== Asm code ====================
2018-03-16 15:57:54.13640317 UTC

.section .text
.align 8
_c3fr2:
_c3fr2:
	movq %rbx,(%rbp)
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	jmp _c3fhg
	.size _c3fr2, .-_c3fr2


==================== Asm code ====================
2018-03-16 15:57:54.136943988 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fr2_info:
	.quad	_c3fr2
	.quad	389
	.quad	-4294967266
	.quad	u3fsb_srtd


==================== Asm code ====================
2018-03-16 15:57:54.137493892 UTC

.section .data.rel.ro
.align 8
.align 1
u3fsc_srtd:
	.quad	S3bQP_srt+56
	.quad	104
	.quad	5
	.quad	1040455827456


==================== Asm code ====================
2018-03-16 15:57:54.138453965 UTC

.section .text
.align 8
_c3fhg:
_c3fhg:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _c3fpp
_c3fpo:
	movq 48(%rbp),%rax
	cmpq $0,8(%rbp)
	je _c3fqG
_c3fpr:
	leaq ds_s3b5j_info(%rip),%rbx
	movq %rbx,-96(%r12)
	movq %rax,-80(%r12)
	movq 56(%rbp),%rax
	movq %rax,-72(%r12)
	movq 32(%rbp),%rax
	movq %rax,-64(%r12)
	movq 40(%rbp),%rax
	movq %rax,-56(%r12)
	movq 16(%rbp),%rax
	movq %rax,-48(%r12)
	movq stg_sel_0_upd_info@gotpcrel(%rip),%rax
	movq %rax,-40(%r12)
	leaq -96(%r12),%rax
	movq %rax,-24(%r12)
	leaq sat_s3b6b_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,(%r12)
	movq 24(%rbp),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,40(%rbp)
	leaq -16(%r12),%rax
	movq %rax,48(%rbp)
	leaq -40(%r12),%rax
	movq %rax,56(%rbp)
	addq $40,%rbp
	jmp GHC.Float.encodeFloat_entry
_c3fqG:
	addq $-104,%r12
	leaq block_c3fps_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c3fps
_c3fqH:
	movq (%rbx),%rax
	jmp *(%rax)
_c3fpp:
	movq $104,904(%r13)
	leaq block_c3fhg_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c3fhg, .-_c3fhg


==================== Asm code ====================
2018-03-16 15:57:54.13927373 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fhg_info:
	.quad	_c3fhg
	.quad	1735
	.quad	-4294967266
	.quad	u3fsc_srtd


==================== Asm code ====================
2018-03-16 15:57:54.139820971 UTC

.section .data.rel.ro
.align 8
.align 1
u3fsd_srtd:
	.quad	S3bQP_srt+56
	.quad	104
	.quad	5
	.quad	765577920512


==================== Asm code ====================
2018-03-16 15:57:54.140566525 UTC

.section .text
.align 8
_c3fps:
_c3fps:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c3fqS
_c3fqN:
	movq $-1,48(%rbp)
	addq $8,%rbp
	jmp _c3fm9
_c3fqS:
	leaq block_c3fqQ_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rsi
	xorl %r14d,%r14d
	jmp *GHC.Integer.Logarithms.Internals.integerLog2#_step_entry@gotpcrel(%rip)
	.size _c3fps, .-_c3fps


==================== Asm code ====================
2018-03-16 15:57:54.141200183 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fps_info:
	.quad	_c3fps
	.quad	2886
	.quad	-4294967266
	.quad	u3fsd_srtd


==================== Asm code ====================
2018-03-16 15:57:54.141807382 UTC

.section .data.rel.ro
.align 8
.align 1
u3fse_srtd:
	.quad	S3bQP_srt+56
	.quad	104
	.quad	5
	.quad	764504178688


==================== Asm code ====================
2018-03-16 15:57:54.142437933 UTC

.section .text
.align 8
_c3fqQ:
_c3fqQ:
	movq %rbx,48(%rbp)
	addq $8,%rbp
	jmp _c3fm9
	.size _c3fqQ, .-_c3fqQ


==================== Asm code ====================
2018-03-16 15:57:54.143024885 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fqQ_info:
	.quad	_c3fqQ
	.quad	2886
	.quad	-4294967266
	.quad	u3fse_srtd


==================== Asm code ====================
2018-03-16 15:57:54.144396127 UTC

.section .text
.align 8
_c3fm9:
_c3fm9:
	addq $56,%r12
	movq 40(%rbp),%rax
	cmpq 856(%r13),%r12
	ja _c3fpv
_c3fpu:
	movq 8(%rbp),%rbx
	movq 16(%rbp),%rcx
	movq 24(%rbp),%rdx
	movq 32(%rbp),%rsi
	movq (%rbp),%rdi
	movq %rdi,%r8
	addq %rcx,%r8
	decq %r8
	cmpq %r8,%rax
	jl _c3fqB
_c3fqF:
	cmpq %rdx,%rax
	jge _c3fqD
_c3fqE:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	negq %rdi
	movq %rdi,-40(%r12)
	leaq -47(%r12),%rax
	addq $-40,%r12
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rbx
	movq %rbx,24(%rbp)
	movq %rax,40(%rbp)
	addq $24,%rbp
	jmp GHC.Float.encodeFloat_entry
_c3fqD:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-48(%r12)
	movl $1,%ecx
	subq %rdx,%rcx
	subq %rdi,%rcx
	movq %rax,%rdi
	addq %rcx,%rdi
	movq %rdi,-40(%r12)
	leaq sat_s3b7b_info(%rip),%rcx
	movq %rcx,-32(%r12)
	movq %rsi,-16(%r12)
	movq %rdx,-8(%r12)
	movq %rax,(%r12)
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,24(%rbp)
	leaq -32(%r12),%rax
	movq %rax,32(%rbp)
	leaq -47(%r12),%rax
	movq %rax,40(%rbp)
	addq $24,%rbp
	jmp GHC.Float.encodeFloat_entry
_c3fqB:
	movq %rcx,%r8
	subq %rdx,%r8
	addq %r8,%rdi
	testq %rdi,%rdi
	jg _c3fqy
_c3fqz:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-48(%r12)
	subq %rdx,%rcx
	subq %rdi,%rcx
	movq %rcx,-40(%r12)
	leaq -47(%r12),%rax
	addq $-40,%r12
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rbx
	movq %rbx,24(%rbp)
	movq %rax,40(%rbp)
	addq $24,%rbp
	jmp GHC.Float.encodeFloat_entry
_c3fqy:
	cmpq %rax,%rdi
	jg _c3fq5
_c3fq6:
	leaq n'_s3b6C_info(%rip),%rax
	movq %rax,-48(%r12)
	movq %rsi,-32(%r12)
	movq %rdi,-24(%r12)
	leaq -48(%r12),%rax
	addq $-24,%r12
	leaq block_c3fmR_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rsi,%rbx
	leaq -1(%rdi),%rsi
	movq %rbx,%r14
	movq %rax,40(%rbp)
	jmp *GHC.Integer.Logarithms.Internals.roundingMode#_entry@gotpcrel(%rip)
_c3fq5:
	incq %rax
	cmpq %rax,%rdi
	jle _c3fpE
_c3fq3:
	addq $-56,%r12
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,24(%rbp)
	leaq GHC.Float.rationalToDouble5_closure(%rip),%rax
	movq %rax,32(%rbp)
	leaq GHC.Float.minExpt_closure+1(%rip),%rax
	movq %rax,40(%rbp)
	addq $24,%rbp
	jmp GHC.Float.encodeFloat_entry
_c3fpE:
	addq $-56,%r12
	leaq block_c3fpC_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rsi,%rbx
	testb $7,%bl
	jne _c3fpC
_c3fpF:
	movq (%rbx),%rax
	jmp *(%rax)
_c3fpv:
	movq $56,904(%r13)
	leaq block_c3fm8_info(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,%rbx
	addq $-8,%rbp
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c3fm9, .-_c3fm9


==================== Asm code ====================
2018-03-16 15:57:54.145693351 UTC

.section .data.rel.ro
.align 8
.align 1
u3fsf_srtd:
	.quad	S3bQP_srt+56
	.quad	104
	.quad	5
	.quad	764504178688


==================== Asm code ====================
2018-03-16 15:57:54.146319575 UTC

.section .text
.align 8
_c3fm8:
_c3fm8:
	movq %rbx,48(%rbp)
	addq $8,%rbp
	jmp _c3fm9
	.size _c3fm8, .-_c3fm8


==================== Asm code ====================
2018-03-16 15:57:54.146803946 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fm8_info:
	.quad	_c3fm8
	.quad	2886
	.quad	-4294967266
	.quad	u3fsf_srtd


==================== Asm code ====================
2018-03-16 15:57:54.14731271 UTC

.section .data.rel.ro
.align 8
.align 1
u3fsg_srtd:
	.quad	S3bQP_srt+72
	.quad	100
	.quad	1
	.quad	36507222016


==================== Asm code ====================
2018-03-16 15:57:54.148163524 UTC

.section .text
.align 8
_c3fpC:
_c3fpC:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c3fpS
_c3fpI:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3fpN
_c3fpM:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq 16(%rbp),%rax
	subq 24(%rbp),%rax
	movq %rax,(%r12)
	movq 8(%rbp),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,24(%rbp)
	leaq GHC.Float.$fRealDouble1_closure(%rip),%rax
	movq %rax,32(%rbp)
	leaq -7(%r12),%rax
	movq %rax,40(%rbp)
	addq $24,%rbp
	jmp GHC.Float.encodeFloat_entry
_c3fpS:
	leaq block_c3fpQ_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rsi
	xorl %r14d,%r14d
	jmp *GHC.Integer.Logarithms.Internals.integerLog2IsPowerOf2#_couldBe_entry@gotpcrel(%rip)
_c3fpN:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3fpC, .-_c3fpC


==================== Asm code ====================
2018-03-16 15:57:54.148868499 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fpC_info:
	.quad	_c3fpC
	.quad	1925
	.quad	-4294967266
	.quad	u3fsg_srtd


==================== Asm code ====================
2018-03-16 15:57:54.149522327 UTC

.section .text
.align 8
_c3fpQ:
_c3fpQ:
	movq %r14,40(%rbp)
	jmp _c3fpT
	.size _c3fpQ, .-_c3fpQ


==================== Asm code ====================
2018-03-16 15:57:54.150074219 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fpQ_info:
	.quad	_c3fpQ
	.quad	1925
	.quad	73014444062
	.quad	S3bQP_srt+832


==================== Asm code ====================
2018-03-16 15:57:54.150917705 UTC

.section .text
.align 8
_c3fpT:
_c3fpT:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3fpY
_c3fpX:
	movq 8(%rbp),%rax
	cmpq $0,40(%rbp)
	je _c3fq2
_c3fq1:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq 16(%rbp),%rbx
	subq 24(%rbp),%rbx
	movq %rbx,(%r12)
	movq %rax,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,24(%rbp)
	leaq GHC.Float.$fRealDouble1_closure(%rip),%rax
	movq %rax,32(%rbp)
	leaq -7(%r12),%rax
	movq %rax,40(%rbp)
	addq $24,%rbp
	jmp GHC.Float.encodeFloat_entry
_c3fq2:
	addq $-16,%r12
	movq %rax,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,24(%rbp)
	leaq GHC.Float.rationalToDouble5_closure(%rip),%rax
	movq %rax,32(%rbp)
	leaq GHC.Float.minExpt_closure+1(%rip),%rax
	movq %rax,40(%rbp)
	addq $24,%rbp
	jmp GHC.Float.encodeFloat_entry
_c3fpY:
	movq $16,904(%r13)
	leaq block_c3fpT_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c3fpT, .-_c3fpT


==================== Asm code ====================
2018-03-16 15:57:54.151723129 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fpT_info:
	.quad	_c3fpT
	.quad	1925
	.quad	73014444062
	.quad	S3bQP_srt+832


==================== Asm code ====================
2018-03-16 15:57:54.152703206 UTC

.section .text
.align 8
_c3fmR:
_c3fmR:
	movq 40(%rbp),%rax
	movq 8(%rbp),%rcx
	movq 16(%rbp),%rdx
	movq 24(%rbp),%rsi
	testq %rbx,%rbx
	je _c3fqc
_u3frE:
	cmpq $1,%rbx
	je _c3fqi
_c3fq8:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c3fqb
_c3fqa:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-32(%r12)
	subq %rsi,%rdx
	movq %rdx,-24(%r12)
	leaq sat_s3b6I_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,(%r12)
	movq %rcx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,24(%rbp)
	leaq -16(%r12),%rax
	movq %rax,32(%rbp)
	leaq -31(%r12),%rax
	movq %rax,40(%rbp)
	addq $24,%rbp
	jmp GHC.Float.encodeFloat_entry
_c3fqi:
	leaq block_c3fn9_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq %rax,%r14
	jmp *GHC.Integer.Type.integerToInt_entry@gotpcrel(%rip)
_c3fqg:
	movq $16,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
_c3fqc:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3fqg
_c3fqf:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	subq %rsi,%rdx
	movq %rdx,(%r12)
	movq %rcx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rbx
	movq %rbx,24(%rbp)
	movq %rax,32(%rbp)
	leaq -7(%r12),%rax
	movq %rax,40(%rbp)
	addq $24,%rbp
	jmp GHC.Float.encodeFloat_entry
_c3fqb:
	movq $40,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c3fmR, .-_c3fmR


==================== Asm code ====================
2018-03-16 15:57:54.154413077 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fmR_info:
	.quad	_c3fmR
	.quad	901
	.quad	21474836510
	.quad	S3bQP_srt+864


==================== Asm code ====================
2018-03-16 15:57:54.155124923 UTC

.section .text
.align 8
_c3fn9:
_c3fn9:
	andl $1,%ebx
	testq %rbx,%rbx
	jne _u3frM
_u3frL:
	movq %rbx,32(%rbp)
	addq $8,%rbp
	jmp _c3fqs
_u3frM:
	movq %rbx,32(%rbp)
	addq $8,%rbp
	jmp _c3fnh
	.size _c3fn9, .-_c3fn9


==================== Asm code ====================
2018-03-16 15:57:54.155743968 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fn9_info:
	.quad	_c3fn9
	.quad	901
	.quad	21474836510
	.quad	S3bQP_srt+864


==================== Asm code ====================
2018-03-16 15:57:54.156493896 UTC

.section .text
.align 8
_c3fnh:
_c3fnh:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c3fqo
_c3fqn:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-32(%r12)
	movq 8(%rbp),%rax
	subq 16(%rbp),%rax
	movq %rax,-24(%r12)
	leaq sat_s3b6P_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 32(%rbp),%rax
	movq %rax,(%r12)
	movq (%rbp),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,16(%rbp)
	leaq -16(%r12),%rax
	movq %rax,24(%rbp)
	leaq -31(%r12),%rax
	movq %rax,32(%rbp)
	addq $16,%rbp
	jmp GHC.Float.encodeFloat_entry
_c3fqo:
	movq $40,904(%r13)
	leaq block_c3fng_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 24(%rbp),%rbx
	addq $-8,%rbp
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c3fnh, .-_c3fnh


==================== Asm code ====================
2018-03-16 15:57:54.157306881 UTC

.section .text
.align 8
_c3fng:
_c3fng:
	movq %rbx,32(%rbp)
	addq $8,%rbp
	jmp _c3fnh
	.size _c3fng, .-_c3fng


==================== Asm code ====================
2018-03-16 15:57:54.157848 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fng_info:
	.quad	_c3fng
	.quad	901
	.quad	21474836510
	.quad	S3bQP_srt+864


==================== Asm code ====================
2018-03-16 15:57:54.158551542 UTC

.section .text
.align 8
_c3fqs:
_c3fqs:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3fqw
_c3fqv:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq 8(%rbp),%rax
	subq 16(%rbp),%rax
	movq %rax,(%r12)
	movq (%rbp),%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,16(%rbp)
	movq 32(%rbp),%rax
	movq %rax,24(%rbp)
	leaq -7(%r12),%rax
	movq %rax,32(%rbp)
	addq $16,%rbp
	jmp GHC.Float.encodeFloat_entry
_c3fqw:
	movq $16,904(%r13)
	leaq block_c3fqq_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 24(%rbp),%rbx
	addq $-8,%rbp
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c3fqs, .-_c3fqs


==================== Asm code ====================
2018-03-16 15:57:54.159426723 UTC

.section .text
.align 8
_c3fqq:
_c3fqq:
	movq %rbx,32(%rbp)
	addq $8,%rbp
	jmp _c3fqs
	.size _c3fqq, .-_c3fqq


==================== Asm code ====================
2018-03-16 15:57:54.160161509 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fqq_info:
	.quad	_c3fqq
	.quad	901
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:54.16531317 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.fromRat''_closure
.type GHC.Float.fromRat''_closure, @object
GHC.Float.fromRat''_closure:
	.quad	GHC.Float.fromRat''_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:54.166383393 UTC

.section .text
.align 8
.globl GHC.Float.fromRat''_entry
.type GHC.Float.fromRat''_entry, @object
GHC.Float.fromRat''_entry:
_c3fxZ:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c3fy3
_c3fy4:
	leaq block_c3fxW_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq %rsi,%rbx
	movq %r14,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _c3fxW
_c3fxX:
	movq (%rbx),%rax
	jmp *(%rax)
_c3fy3:
	leaq GHC.Float.fromRat''_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.fromRat''_entry, .-GHC.Float.fromRat''_entry


==================== Asm code ====================
2018-03-16 15:57:54.167273627 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.fromRat''_info
.type GHC.Float.fromRat''_info, @object
GHC.Float.fromRat''_info:
	.quad	GHC.Float.fromRat''_entry
	.quad	0
	.quad	12884901902
	.quad	21474836505
	.quad	S3bQP_srt+888


==================== Asm code ====================
2018-03-16 15:57:54.168251503 UTC

.section .text
.align 8
_c3fxW:
_c3fxW:
	leaq block_c3fy2_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c3fy2
_c3fy6:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3fxW, .-_c3fxW


==================== Asm code ====================
2018-03-16 15:57:54.169074163 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fxW_info:
	.quad	_c3fxW
	.quad	4
	.quad	4294967326
	.quad	S3bQP_srt+888


==================== Asm code ====================
2018-03-16 15:57:54.170971475 UTC

.section .text
.align 8
_c3fy2:
_c3fy2:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 7(%rbx),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $40,%rbp
	jmp GHC.Float.$wfromRat''_entry
	.size _c3fy2, .-_c3fy2


==================== Asm code ====================
2018-03-16 15:57:54.171829087 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fy2_info:
	.quad	_c3fy2
	.quad	132
	.quad	4294967326
	.quad	S3bQP_srt+888


==================== Asm code ====================
2018-03-16 15:57:54.178873002 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$w$cfromEnum_closure
.type GHC.Float.$w$cfromEnum_closure, @object
GHC.Float.$w$cfromEnum_closure:
	.quad	GHC.Float.$w$cfromEnum_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:54.179611551 UTC

.section .data.rel.ro
.align 8
.align 1
u3fzu_srtd:
	.quad	S3bQP_srt+648
	.quad	33
	.quad	4303355905


==================== Asm code ====================
2018-03-16 15:57:54.180596682 UTC

.section .text
.align 8
.globl GHC.Float.$w$cfromEnum_entry
.type GHC.Float.$w$cfromEnum_entry, @object
GHC.Float.$w$cfromEnum_entry:
_c3fyF:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3fyG
_c3fyH:
	leaq block_c3fyw_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp *GHC.Integer.Type.decodeDoubleInteger_entry@gotpcrel(%rip)
_c3fyG:
	leaq GHC.Float.$w$cfromEnum_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$w$cfromEnum_entry, .-GHC.Float.$w$cfromEnum_entry


==================== Asm code ====================
2018-03-16 15:57:54.18155457 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$w$cfromEnum_info
.type GHC.Float.$w$cfromEnum_info, @object
GHC.Float.$w$cfromEnum_info:
	.quad	GHC.Float.$w$cfromEnum_entry
	.quad	0
	.quad	-4294967282
	.quad	4294967303
	.quad	u3fzu_srtd


==================== Asm code ====================
2018-03-16 15:57:54.182658498 UTC

.section .text
.align 8
_c3fyw:
_c3fyw:
	testq %r14,%r14
	jge _c3fyD
_c3fyE:
	negq %r14
	cmpq $52,%r14
	jle _c3fyY
_c3fzt:
	xorl %ebx,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3fyY:
	leaq block_c3fyW_info(%rip),%rax
	movq %rax,-16(%rbp)
	leaq GHC.Float.rationalToDouble5_closure(%rip),%rsi
	movq %r14,%rax
	movq %rbx,%r14
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp *GHC.Integer.Type.ltInteger#_entry@gotpcrel(%rip)
_c3fyD:
	leaq block_c3fyK_info(%rip),%rax
	movq %rax,(%rbp)
	movq %r14,%rsi
	movq %rbx,%r14
	jmp *GHC.Integer.Type.shiftLInteger_entry@gotpcrel(%rip)
	.size _c3fyw, .-_c3fyw


==================== Asm code ====================
2018-03-16 15:57:54.183624188 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fyw_info:
	.quad	_c3fyw
	.quad	0
	.quad	4294967326
	.quad	S3bQP_srt+832


==================== Asm code ====================
2018-03-16 15:57:54.18445323 UTC

.section .text
.align 8
_c3fyK:
_c3fyK:
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.integerToInt_entry@gotpcrel(%rip)
	.size _c3fyK, .-_c3fyK


==================== Asm code ====================
2018-03-16 15:57:54.18516712 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fyK_info:
	.quad	_c3fyK
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:54.186635973 UTC

.section .text
.align 8
_c3fyW:
_c3fyW:
	movq 16(%rbp),%rax
	cmpq $1,%rbx
	je _c3fzq
_c3fz9:
	leaq block_c3fz2_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%r14
	jmp *GHC.Integer.Type.integerToInt_entry@gotpcrel(%rip)
_c3fzq:
	leaq block_c3fzd_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%r14
	jmp *GHC.Integer.Type.negateInteger_entry@gotpcrel(%rip)
	.size _c3fyW, .-_c3fyW


==================== Asm code ====================
2018-03-16 15:57:54.187470136 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fyW_info:
	.quad	_c3fyW
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:54.188275673 UTC

.section .text
.align 8
_c3fzd:
_c3fzd:
	leaq block_c3fzh_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp *GHC.Integer.Type.integerToInt_entry@gotpcrel(%rip)
	.size _c3fzd, .-_c3fzd


==================== Asm code ====================
2018-03-16 15:57:54.189086825 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fzd_info:
	.quad	_c3fzd
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:54.189983375 UTC

.section .text
.align 8
_c3fzh:
_c3fzh:
	movq 8(%rbp),%rcx
	sarq %cl,%rbx
	negq %rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3fzh, .-_c3fzh


==================== Asm code ====================
2018-03-16 15:57:54.190736885 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fzh_info:
	.quad	_c3fzh
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:54.191560181 UTC

.section .text
.align 8
_c3fz2:
_c3fz2:
	movq 8(%rbp),%rcx
	sarq %cl,%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3fz2, .-_c3fz2


==================== Asm code ====================
2018-03-16 15:57:54.192291624 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fz2_info:
	.quad	_c3fz2
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:54.196807696 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fEnumDouble_$cfromEnum_closure
.type GHC.Float.$fEnumDouble_$cfromEnum_closure, @object
GHC.Float.$fEnumDouble_$cfromEnum_closure:
	.quad	GHC.Float.$fEnumDouble_$cfromEnum_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:54.197871816 UTC

.section .text
.align 8
.globl GHC.Float.$fEnumDouble_$cfromEnum_entry
.type GHC.Float.$fEnumDouble_$cfromEnum_entry, @object
GHC.Float.$fEnumDouble_$cfromEnum_entry:
_c3fAb:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3fAj
_c3fAk:
	leaq block_c3fA8_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3fA8
_c3fA9:
	movq (%rbx),%rax
	jmp *(%rax)
_c3fAj:
	leaq GHC.Float.$fEnumDouble_$cfromEnum_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fEnumDouble_$cfromEnum_entry, .-GHC.Float.$fEnumDouble_$cfromEnum_entry


==================== Asm code ====================
2018-03-16 15:57:54.198744318 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fEnumDouble_$cfromEnum_info
.type GHC.Float.$fEnumDouble_$cfromEnum_info, @object
GHC.Float.$fEnumDouble_$cfromEnum_info:
	.quad	GHC.Float.$fEnumDouble_$cfromEnum_entry
	.quad	0
	.quad	12884901902
	.quad	4294967301
	.quad	S3bQP_srt+904


==================== Asm code ====================
2018-03-16 15:57:54.199603961 UTC

.section .text
.align 8
_c3fA8:
_c3fA8:
	leaq block_c3fAe_info(%rip),%rax
	movq %rax,(%rbp)
	movsd 7(%rbx),%xmm1
	jmp GHC.Float.$w$cfromEnum_entry
	.size _c3fA8, .-_c3fA8


==================== Asm code ====================
2018-03-16 15:57:54.200349584 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fA8_info:
	.quad	_c3fA8
	.quad	0
	.quad	4294967326
	.quad	S3bQP_srt+904


==================== Asm code ====================
2018-03-16 15:57:54.201319697 UTC

.section .text
.align 8
_c3fAe:
_c3fAe:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3fAo
_c3fAn:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3fAo:
	movq $16,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c3fAe, .-_c3fAe


==================== Asm code ====================
2018-03-16 15:57:54.20218468 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fAe_info:
	.quad	_c3fAe
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:54.205203623 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fEnumDouble_$cenumFromTo_closure
.type GHC.Float.$fEnumDouble_$cenumFromTo_closure, @object
GHC.Float.$fEnumDouble_$cenumFromTo_closure:
	.quad	GHC.Float.$fEnumDouble_$cenumFromTo_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:54.206202219 UTC

.section .text
.align 8
.globl GHC.Float.$fEnumDouble_$cenumFromTo_entry
.type GHC.Float.$fEnumDouble_$cenumFromTo_entry, @object
GHC.Float.$fEnumDouble_$cenumFromTo_entry:
_c3fAK:
	movq %rsi,%r8
	movq %r14,%rdi
	leaq GHC.Float.$fFractionalDouble_closure+1(%rip),%rsi
	movq GHC.Classes.$fOrdDouble_closure@gotpcrel(%rip),%r14
	jmp *GHC.Real.numericEnumFromTo_entry@gotpcrel(%rip)
	.size GHC.Float.$fEnumDouble_$cenumFromTo_entry, .-GHC.Float.$fEnumDouble_$cenumFromTo_entry


==================== Asm code ====================
2018-03-16 15:57:54.207064102 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fEnumDouble_$cenumFromTo_info
.type GHC.Float.$fEnumDouble_$cenumFromTo_info, @object
GHC.Float.$fEnumDouble_$cenumFromTo_info:
	.quad	GHC.Float.$fEnumDouble_$cenumFromTo_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S3bQP_srt+920


==================== Asm code ====================
2018-03-16 15:57:54.209934357 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fEnumDouble_$cenumFromThenTo_closure
.type GHC.Float.$fEnumDouble_$cenumFromThenTo_closure, @object
GHC.Float.$fEnumDouble_$cenumFromThenTo_closure:
	.quad	GHC.Float.$fEnumDouble_$cenumFromThenTo_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:54.210686161 UTC

.section .text
.align 8
.globl GHC.Float.$fEnumDouble_$cenumFromThenTo_entry
.type GHC.Float.$fEnumDouble_$cenumFromThenTo_entry, @object
GHC.Float.$fEnumDouble_$cenumFromThenTo_entry:
_c3fAV:
	movq %rdi,%r9
	movq %rsi,%r8
	movq %r14,%rdi
	leaq GHC.Float.$fFractionalDouble_closure+1(%rip),%rsi
	movq GHC.Classes.$fOrdDouble_closure@gotpcrel(%rip),%r14
	jmp *GHC.Real.numericEnumFromThenTo_entry@gotpcrel(%rip)
	.size GHC.Float.$fEnumDouble_$cenumFromThenTo_entry, .-GHC.Float.$fEnumDouble_$cenumFromThenTo_entry


==================== Asm code ====================
2018-03-16 15:57:54.211329363 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fEnumDouble_$cenumFromThenTo_info
.type GHC.Float.$fEnumDouble_$cenumFromThenTo_info, @object
GHC.Float.$fEnumDouble_$cenumFromThenTo_info:
	.quad	GHC.Float.$fEnumDouble_$cenumFromThenTo_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	S3bQP_srt+928


==================== Asm code ====================
2018-03-16 15:57:54.213309596 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fEnumDouble_closure
.type GHC.Float.$fEnumDouble_closure, @object
GHC.Float.$fEnumDouble_closure:
	.quad	GHC.Enum.C:Enum_con_info
	.quad	GHC.Float.$fEnumDouble_$csucc_closure+1
	.quad	GHC.Float.$fEnumDouble_$cpred_closure+1
	.quad	GHC.Float.RealFracMethods.int2Double_closure+1
	.quad	GHC.Float.$fEnumDouble_$cfromEnum_closure+1
	.quad	GHC.Float.$fEnumDouble_$snumericEnumFrom_closure+1
	.quad	GHC.Float.$fEnumDouble_$snumericEnumFromThen_closure+2
	.quad	GHC.Float.$fEnumDouble_$cenumFromTo_closure+2
	.quad	GHC.Float.$fEnumDouble_$cenumFromThenTo_closure+3
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:54.21655912 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fEnumFloat_$cenumFromTo_closure
.type GHC.Float.$fEnumFloat_$cenumFromTo_closure, @object
GHC.Float.$fEnumFloat_$cenumFromTo_closure:
	.quad	GHC.Float.$fEnumFloat_$cenumFromTo_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:54.217119007 UTC

.section .data.rel.ro
.align 8
.align 1
u3fBa_srtd:
	.quad	S3bQP_srt+232
	.quad	87
	.quad	1
	.quad	4194304


==================== Asm code ====================
2018-03-16 15:57:54.217897194 UTC

.section .text
.align 8
.globl GHC.Float.$fEnumFloat_$cenumFromTo_entry
.type GHC.Float.$fEnumFloat_$cenumFromTo_entry, @object
GHC.Float.$fEnumFloat_$cenumFromTo_entry:
_c3fB7:
	movq %rsi,%r8
	movq %r14,%rdi
	leaq GHC.Float.$fFractionalFloat_closure+1(%rip),%rsi
	movq GHC.Classes.$fOrdFloat_closure@gotpcrel(%rip),%r14
	jmp *GHC.Real.numericEnumFromTo_entry@gotpcrel(%rip)
	.size GHC.Float.$fEnumFloat_$cenumFromTo_entry, .-GHC.Float.$fEnumFloat_$cenumFromTo_entry


==================== Asm code ====================
2018-03-16 15:57:54.218538788 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fEnumFloat_$cenumFromTo_info
.type GHC.Float.$fEnumFloat_$cenumFromTo_info, @object
GHC.Float.$fEnumFloat_$cenumFromTo_info:
	.quad	GHC.Float.$fEnumFloat_$cenumFromTo_entry
	.quad	0
	.quad	-4294967282
	.quad	8589934607
	.quad	u3fBa_srtd


==================== Asm code ====================
2018-03-16 15:57:54.220922535 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fEnumFloat_$cenumFromThenTo_closure
.type GHC.Float.$fEnumFloat_$cenumFromThenTo_closure, @object
GHC.Float.$fEnumFloat_$cenumFromThenTo_closure:
	.quad	GHC.Float.$fEnumFloat_$cenumFromThenTo_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:54.22153028 UTC

.section .data.rel.ro
.align 8
.align 1
u3fBn_srtd:
	.quad	S3bQP_srt+232
	.quad	89
	.quad	1
	.quad	16777216


==================== Asm code ====================
2018-03-16 15:57:54.222191816 UTC

.section .text
.align 8
.globl GHC.Float.$fEnumFloat_$cenumFromThenTo_entry
.type GHC.Float.$fEnumFloat_$cenumFromThenTo_entry, @object
GHC.Float.$fEnumFloat_$cenumFromThenTo_entry:
_c3fBk:
	movq %rdi,%r9
	movq %rsi,%r8
	movq %r14,%rdi
	leaq GHC.Float.$fFractionalFloat_closure+1(%rip),%rsi
	movq GHC.Classes.$fOrdFloat_closure@gotpcrel(%rip),%r14
	jmp *GHC.Real.numericEnumFromThenTo_entry@gotpcrel(%rip)
	.size GHC.Float.$fEnumFloat_$cenumFromThenTo_entry, .-GHC.Float.$fEnumFloat_$cenumFromThenTo_entry


==================== Asm code ====================
2018-03-16 15:57:54.22285361 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fEnumFloat_$cenumFromThenTo_info
.type GHC.Float.$fEnumFloat_$cenumFromThenTo_info, @object
GHC.Float.$fEnumFloat_$cenumFromThenTo_info:
	.quad	GHC.Float.$fEnumFloat_$cenumFromThenTo_entry
	.quad	0
	.quad	-4294967282
	.quad	12884901911
	.quad	u3fBn_srtd


==================== Asm code ====================
2018-03-16 15:57:54.227252998 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$w$cfromEnum1_closure
.type GHC.Float.$w$cfromEnum1_closure, @object
GHC.Float.$w$cfromEnum1_closure:
	.quad	GHC.Float.$w$cfromEnum1_info


==================== Asm code ====================
2018-03-16 15:57:54.228009432 UTC

.section .text
.align 8
.globl GHC.Float.$w$cfromEnum1_entry
.type GHC.Float.$w$cfromEnum1_entry, @object
GHC.Float.$w$cfromEnum1_entry:
_c3fBG:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3fBH
_c3fBI:
	leaq block_c3fBx_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp *stg_decodeFloat_Int#@gotpcrel(%rip)
_c3fBH:
	leaq GHC.Float.$w$cfromEnum1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$w$cfromEnum1_entry, .-GHC.Float.$w$cfromEnum1_entry


==================== Asm code ====================
2018-03-16 15:57:54.228631366 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$w$cfromEnum1_info
.type GHC.Float.$w$cfromEnum1_info, @object
GHC.Float.$w$cfromEnum1_info:
	.quad	GHC.Float.$w$cfromEnum1_entry
	.quad	0
	.quad	14
	.quad	4294967302


==================== Asm code ====================
2018-03-16 15:57:54.229572091 UTC

.section .text
.align 8
_c3fBx:
_c3fBx:
	testq %r14,%r14
	jge _c3fBE
_c3fBF:
	negq %r14
	cmpq $23,%r14
	jle _c3fCi
_c3fCj:
	xorl %ebx,%ebx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3fCi:
	testq %rbx,%rbx
	jge _c3fC7
_c3fCg:
	negq %rbx
	movq %r14,%rcx
	sarq %cl,%rbx
	negq %rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3fC7:
	movq %r14,%rcx
	shrq %cl,%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3fBE:
	leaq block_c3fBL_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rax
	movq %rbx,%r14
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
	.size _c3fBx, .-_c3fBx


==================== Asm code ====================
2018-03-16 15:57:54.230303655 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fBx_info:
	.quad	_c3fBx
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:54.230933512 UTC

.section .text
.align 8
_c3fBL:
_c3fBL:
	movq 8(%rbp),%rax
	leaq block_c3fBP_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.shiftLInteger_entry@gotpcrel(%rip)
	.size _c3fBL, .-_c3fBL


==================== Asm code ====================
2018-03-16 15:57:54.231487552 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fBL_info:
	.quad	_c3fBL
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:54.232059264 UTC

.section .text
.align 8
_c3fBP:
_c3fBP:
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.integerToInt_entry@gotpcrel(%rip)
	.size _c3fBP, .-_c3fBP


==================== Asm code ====================
2018-03-16 15:57:54.232611167 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fBP_info:
	.quad	_c3fBP
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:54.236017585 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fEnumFloat_$cfromEnum_closure
.type GHC.Float.$fEnumFloat_$cfromEnum_closure, @object
GHC.Float.$fEnumFloat_$cfromEnum_closure:
	.quad	GHC.Float.$fEnumFloat_$cfromEnum_info


==================== Asm code ====================
2018-03-16 15:57:54.236836019 UTC

.section .text
.align 8
.globl GHC.Float.$fEnumFloat_$cfromEnum_entry
.type GHC.Float.$fEnumFloat_$cfromEnum_entry, @object
GHC.Float.$fEnumFloat_$cfromEnum_entry:
_c3fCN:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3fCV
_c3fCW:
	leaq block_c3fCK_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3fCK
_c3fCL:
	movq (%rbx),%rax
	jmp *(%rax)
_c3fCV:
	leaq GHC.Float.$fEnumFloat_$cfromEnum_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fEnumFloat_$cfromEnum_entry, .-GHC.Float.$fEnumFloat_$cfromEnum_entry


==================== Asm code ====================
2018-03-16 15:57:54.237773884 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fEnumFloat_$cfromEnum_info
.type GHC.Float.$fEnumFloat_$cfromEnum_info, @object
GHC.Float.$fEnumFloat_$cfromEnum_info:
	.quad	GHC.Float.$fEnumFloat_$cfromEnum_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:54.238393183 UTC

.section .text
.align 8
_c3fCK:
_c3fCK:
	leaq block_c3fCQ_info(%rip),%rax
	movq %rax,(%rbp)
	movss 7(%rbx),%xmm1
	jmp GHC.Float.$w$cfromEnum1_entry
	.size _c3fCK, .-_c3fCK


==================== Asm code ====================
2018-03-16 15:57:54.238984793 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fCK_info:
	.quad	_c3fCK
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:54.239750651 UTC

.section .text
.align 8
_c3fCQ:
_c3fCQ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3fD0
_c3fCZ:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3fD0:
	movq $16,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c3fCQ, .-_c3fCQ


==================== Asm code ====================
2018-03-16 15:57:54.240396643 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fCQ_info:
	.quad	_c3fCQ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:54.24225987 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fEnumFloat_closure
.type GHC.Float.$fEnumFloat_closure, @object
GHC.Float.$fEnumFloat_closure:
	.quad	GHC.Enum.C:Enum_con_info
	.quad	GHC.Float.$fEnumFloat_$csucc_closure+1
	.quad	GHC.Float.$fEnumFloat_$cpred_closure+1
	.quad	GHC.Float.RealFracMethods.int2Float_closure+1
	.quad	GHC.Float.$fEnumFloat_$cfromEnum_closure+1
	.quad	GHC.Float.$fEnumFloat_$snumericEnumFrom_closure+1
	.quad	GHC.Float.$fEnumFloat_$snumericEnumFromThen_closure+2
	.quad	GHC.Float.$fEnumFloat_$cenumFromTo_closure+2
	.quad	GHC.Float.$fEnumFloat_$cenumFromThenTo_closure+3
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:54.244762971 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.expt1_closure
.type GHC.Float.expt1_closure, @object
GHC.Float.expt1_closure:
	.quad	GHC.Float.expt1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:54.245480273 UTC

.section .text
.align 8
.globl GHC.Float.expt1_entry
.type GHC.Float.expt1_entry, @object
GHC.Float.expt1_entry:
_c3fDn:
	leaq lvl7_r2UqF_closure(%rip),%r9
	movq %rdi,%r8
	movq %r14,%rdi
	movq GHC.Show.$fShowInt_closure@gotpcrel(%rip),%r14
	jmp *GHC.Arr.$windexError_entry@gotpcrel(%rip)
	.size GHC.Float.expt1_entry, .-GHC.Float.expt1_entry


==================== Asm code ====================
2018-03-16 15:57:54.24609691 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.expt1_info
.type GHC.Float.expt1_info, @object
GHC.Float.expt1_info:
	.quad	GHC.Float.expt1_entry
	.quad	0
	.quad	21474836494
	.quad	12884901911
	.quad	S3bQP_srt+696


==================== Asm code ====================
2018-03-16 15:57:54.255813304 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$wexpt_closure
.type GHC.Float.$wexpt_closure, @object
GHC.Float.$wexpt_closure:
	.quad	GHC.Float.$wexpt_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:54.256990732 UTC

.section .data.rel.ro
.align 8
.align 1
u3fFV_srtd:
	.quad	S3bQP_srt+552
	.quad	53
	.quad	8444249804636161


==================== Asm code ====================
2018-03-16 15:57:54.257985258 UTC

.section .text
.align 8
.globl GHC.Float.$wexpt_entry
.type GHC.Float.$wexpt_entry, @object
GHC.Float.$wexpt_entry:
_c3fDA:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c3fDB
_c3fDC:
	leaq block_c3fDy_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq %rsi,%rax
	leaq GHC.Float.$fRealFloatDouble5_closure(%rip),%rsi
	movq %r14,%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
_c3fDB:
	leaq GHC.Float.$wexpt_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$wexpt_entry, .-GHC.Float.$wexpt_entry


==================== Asm code ====================
2018-03-16 15:57:54.258619283 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$wexpt_info
.type GHC.Float.$wexpt_info, @object
GHC.Float.$wexpt_info:
	.quad	GHC.Float.$wexpt_entry
	.quad	0
	.quad	-4294967282
	.quad	8589934606
	.quad	u3fFV_srtd


==================== Asm code ====================
2018-03-16 15:57:54.259529923 UTC

.section .text
.align 8
_c3fDy:
_c3fDy:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3fDH
_c3fDG:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq 16(%rbp),%rax
	movq %rax,(%r12)
	movq 8(%rbp),%rcx
	leaq -7(%r12),%rdx
	cmpq $1,%rbx
	jne _s3b8d
_c3fFI:
	testq %rax,%rax
	jl _s3b8d
_c3fFH:
	cmpq $1100,%rax
	jg _s3b8d
_c3fFn:
	leaq block_c3fFc_info(%rip),%rax
	movq %rax,(%rbp)
	leaq GHC.Float.expts_closure(%rip),%rbx
	movq %rdx,8(%rbp)
	testb $7,%bl
	jne _c3fFc
_c3fFd:
	movq (%rbx),%rax
	jmp *(%rax)
_s3b8d:
	leaq block_c3fDO_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq GHC.Float.expts4_closure(%rip),%rsi
	movq %rcx,%r14
	movq %rdx,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
_c3fDH:
	movq $16,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c3fDy, .-_c3fDy


==================== Asm code ====================
2018-03-16 15:57:54.260278782 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fDy_info:
	.quad	_c3fDy
	.quad	130
	.quad	792633598841716766
	.quad	S3bQP_srt+752


==================== Asm code ====================
2018-03-16 15:57:54.261001498 UTC

.section .text
.align 8
_c3fFc:
_c3fFc:
	leaq block_c3fFh_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 15(%rbx),%rax
	movq 23(%rbx),%rcx
	movq 7(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3fFh
_c3fFi:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3fFc, .-_c3fFc


==================== Asm code ====================
2018-03-16 15:57:54.261638394 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fFc_info:
	.quad	_c3fFc
	.quad	130
	.quad	4294967326
	.quad	S3bQP_srt+968


==================== Asm code ====================
2018-03-16 15:57:54.26238847 UTC

.section .text
.align 8
_c3fFh:
_c3fFh:
	leaq block_c3fFm_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 16(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c3fFm
_c3fFq:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3fFh, .-_c3fFh


==================== Asm code ====================
2018-03-16 15:57:54.263012697 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fFh_info:
	.quad	_c3fFh
	.quad	516
	.quad	4294967326
	.quad	S3bQP_srt+968


==================== Asm code ====================
2018-03-16 15:57:54.263812148 UTC

.section .text
.align 8
_c3fFm:
_c3fFm:
	movq 32(%rbp),%rax
	movq 40(%rbp),%rcx
	movq 24(%rbp),%rdx
	movq 8(%rbp),%rsi
	movq %rbx,%rdi
	cmpq %rcx,%rsi
	jg _c3fFE
_c3fFG:
	cmpq 7(%rbx),%rcx
	jg _c3fFE
_c3fFF:
	movq 16(%rbp),%rax
	subq %rsi,%rcx
	movq 24(%rax,%rcx,8),%rbx
	andq $-8,%rbx
	addq $48,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c3fFE:
	movq %rdi,%rcx
	movq %rax,%rdi
	movq %rdx,%rsi
	movq %rcx,%r14
	addq $48,%rbp
	jmp GHC.Float.expt1_entry
	.size _c3fFm, .-_c3fFm


==================== Asm code ====================
2018-03-16 15:57:54.264504651 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fFm_info:
	.quad	_c3fFm
	.quad	1093
	.quad	4294967326
	.quad	S3bQP_srt+968


==================== Asm code ====================
2018-03-16 15:57:54.265933393 UTC

.section .text
.align 8
_c3fDO:
_c3fDO:
	movq 16(%rbp),%rax
	movq 24(%rbp),%rcx
	cmpq $1,%rbx
	je _c3fEU
_c3fE5:
	testq %rcx,%rcx
	jl _c3fEl
_c3fE2:
	testq %rcx,%rcx
	je _c3fEi
_c3fDZ:
	movq %rcx,%rsi
	movq %rax,%r14
	addq $32,%rbp
	jmp *GHC.Real.$wf_entry@gotpcrel(%rip)
_c3fEU:
	cmpq $324,%rcx
	jg _c3fEn
_c3fEA:
	leaq block_c3fEp_info(%rip),%rax
	movq %rax,(%rbp)
	leaq GHC.Float.expts10_closure(%rip),%rbx
	testb $7,%bl
	jne _c3fEp
_c3fEq:
	movq (%rbx),%rax
	jmp *(%rax)
_c3fEl:
	movq GHC.Real.^1_closure@gotpcrel(%rip),%rbx
	addq $32,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c3fEi:
	movq GHC.Real.$fEnumRatio1_closure@gotpcrel(%rip),%rbx
	addq $32,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c3fEn:
	testq %rcx,%rcx
	jl _c3fEl
_c3fEk:
	testq %rcx,%rcx
	je _c3fEi
_c3fEh:
	movq %rcx,%rsi
	movq %rax,%r14
	addq $32,%rbp
	jmp *GHC.Real.$wf_entry@gotpcrel(%rip)
	.size _c3fDO, .-_c3fDO


==================== Asm code ====================
2018-03-16 15:57:54.266726735 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fDO_info:
	.quad	_c3fDO
	.quad	259
	.quad	360288000254410782
	.quad	S3bQP_srt+760


==================== Asm code ====================
2018-03-16 15:57:54.267454183 UTC

.section .text
.align 8
_c3fEp:
_c3fEp:
	leaq block_c3fEu_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 15(%rbx),%rax
	movq 23(%rbx),%rcx
	movq 7(%rbx),%rbx
	movq %rcx,(%rbp)
	movq %rax,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c3fEu
_c3fEv:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3fEp, .-_c3fEp


==================== Asm code ====================
2018-03-16 15:57:54.268057897 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fEp_info:
	.quad	_c3fEp
	.quad	387
	.quad	4294967326
	.quad	S3bQP_srt+968


==================== Asm code ====================
2018-03-16 15:57:54.268778391 UTC

.section .text
.align 8
_c3fEu:
_c3fEu:
	leaq block_c3fEz_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rbx
	movq %rbx,%rcx
	movq 24(%rbp),%rbx
	movq %rcx,(%rbp)
	movq %rax,24(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c3fEz
_c3fED:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3fEu, .-_c3fEu


==================== Asm code ====================
2018-03-16 15:57:54.269476988 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fEu_info:
	.quad	_c3fEu
	.quad	516
	.quad	4294967326
	.quad	S3bQP_srt+968


==================== Asm code ====================
2018-03-16 15:57:54.270299953 UTC

.section .text
.align 8
_c3fEz:
_c3fEz:
	movq 24(%rbp),%rax
	movq 40(%rbp),%rcx
	movq 32(%rbp),%rdx
	movq 8(%rbp),%rsi
	movq %rbx,%rdi
	cmpq %rcx,%rsi
	jg _c3fER
_c3fET:
	cmpq 7(%rbx),%rcx
	jg _c3fER
_c3fES:
	movq 16(%rbp),%rax
	subq %rsi,%rcx
	movq 24(%rax,%rcx,8),%rbx
	andq $-8,%rbx
	addq $48,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c3fER:
	movq %rdi,%rcx
	movq %rax,%rdi
	movq %rdx,%rsi
	movq %rcx,%r14
	addq $48,%rbp
	jmp GHC.Float.expt1_entry
	.size _c3fEz, .-_c3fEz


==================== Asm code ====================
2018-03-16 15:57:54.270978318 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fEz_info:
	.quad	_c3fEz
	.quad	1093
	.quad	4294967326
	.quad	S3bQP_srt+968


==================== Asm code ====================
2018-03-16 15:57:54.274293231 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.expt_closure
.type GHC.Float.expt_closure, @object
GHC.Float.expt_closure:
	.quad	GHC.Float.expt_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:54.27541804 UTC

.section .text
.align 8
.globl GHC.Float.expt_entry
.type GHC.Float.expt_entry, @object
GHC.Float.expt_entry:
_c3fGY:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3fGZ
_c3fH0:
	leaq block_c3fGV_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3fGV
_c3fGW:
	movq (%rbx),%rax
	jmp *(%rax)
_c3fGZ:
	leaq GHC.Float.expt_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.expt_entry, .-GHC.Float.expt_entry


==================== Asm code ====================
2018-03-16 15:57:54.276361316 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.expt_info
.type GHC.Float.expt_info, @object
GHC.Float.expt_info:
	.quad	GHC.Float.expt_entry
	.quad	0
	.quad	21474836494
	.quad	8589934607
	.quad	S3bQP_srt+960


==================== Asm code ====================
2018-03-16 15:57:54.277326918 UTC

.section .text
.align 8
_c3fGV:
_c3fGV:
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Float.$wexpt_entry
	.size _c3fGV, .-_c3fGV


==================== Asm code ====================
2018-03-16 15:57:54.278137259 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fGV_info:
	.quad	_c3fGV
	.quad	1
	.quad	4294967326
	.quad	S3bQP_srt+960


==================== Asm code ====================
2018-03-16 15:57:54.30079728 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.fromRat'_closure
.type GHC.Float.fromRat'_closure, @object
GHC.Float.fromRat'_closure:
	.quad	GHC.Float.fromRat'_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:54.301788546 UTC

.section .text
.align 8
sat_s3b98_entry:
_c3fIm:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3fIq
_c3fIr:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3fIj_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _c3fIj
_c3fIk:
	movq (%rbx),%rax
	jmp *(%rax)
_c3fIq:
	jmp *-16(%r13)
	.size sat_s3b98_entry, .-sat_s3b98_entry


==================== Asm code ====================
2018-03-16 15:57:54.302493763 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3b98_info:
	.quad	sat_s3b98_entry
	.quad	1
	.quad	12884901904
	.quad	S3bQP_srt+984


==================== Asm code ====================
2018-03-16 15:57:54.303200741 UTC

.section .text
.align 8
_c3fIj:
_c3fIj:
	leaq block_c3fIp_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rbx
	testb $7,%bl
	jne _c3fIp
_c3fIt:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3fIj, .-_c3fIj


==================== Asm code ====================
2018-03-16 15:57:54.303810438 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fIj_info:
	.quad	_c3fIj
	.quad	0
	.quad	12884901918
	.quad	S3bQP_srt+984


==================== Asm code ====================
2018-03-16 15:57:54.30443128 UTC

.section .text
.align 8
_c3fIp:
_c3fIp:
	movq 15(%rbx),%rdi
	movq 7(%rbx),%rsi
	movq GHC.Real.$fIntegralInteger_closure@gotpcrel(%rip),%r14
	addq $8,%rbp
	jmp *GHC.Real.$w$s$cround_entry@gotpcrel(%rip)
	.size _c3fIp, .-_c3fIp


==================== Asm code ====================
2018-03-16 15:57:54.304982872 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fIp_info:
	.quad	_c3fIp
	.quad	0
	.quad	12884901918
	.quad	S3bQP_srt+984


==================== Asm code ====================
2018-03-16 15:57:54.305858425 UTC

.section .text
.align 8
r_s3b8Z_entry:
_c3fIA:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c3fIB
_c3fIC:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c3fIE
_c3fID:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq stg_sel_1_upd_info@gotpcrel(%rip),%rcx
	movq %rcx,-40(%r12)
	movq %rbx,-24(%r12)
	leaq sat_s3b98_info(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rbx,(%r12)
	movq %rax,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-40(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-32(%rbp)
	leaq -40(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Float.encodeFloat_entry
_c3fIE:
	movq $48,904(%r13)
_c3fIB:
	jmp *-16(%r13)
	.size r_s3b8Z_entry, .-r_s3b8Z_entry


==================== Asm code ====================
2018-03-16 15:57:54.306624851 UTC

.section .data.rel.ro
.align 8
.align 1
r_s3b8Z_info:
	.quad	r_s3b8Z_entry
	.quad	2
	.quad	12884901906
	.quad	S3bQP_srt+984


==================== Asm code ====================
2018-03-16 15:57:54.30734716 UTC

.section .text
.align 8
b_s3b90_entry:
_c3fIH:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3fII
_c3fIJ:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Float.floatRadix_entry
_c3fII:
	jmp *-16(%r13)
	.size b_s3b90_entry, .-b_s3b90_entry


==================== Asm code ====================
2018-03-16 15:57:54.308009579 UTC

.section .data.rel.ro
.align 8
.align 1
b_s3b90_info:
	.quad	b_s3b90_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:54.308791492 UTC

.section .text
.align 8
sat_s3b9E_entry:
_c3fJs:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3fJt
_c3fJu:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3fJp_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq GHC.Real.$fEnumRatio1_closure@gotpcrel(%rip),%r8
	movq 16(%rbx),%rdi
	movq 32(%rbx),%rsi
	movq 24(%rbx),%r14
	addq $-24,%rbp
	jmp *GHC.Real.$w$s$c/_entry@gotpcrel(%rip)
_c3fJt:
	jmp *-16(%r13)
	.size sat_s3b9E_entry, .-sat_s3b9E_entry


==================== Asm code ====================
2018-03-16 15:57:54.30958597 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3b9E_info:
	.quad	sat_s3b9E_entry
	.quad	3
	.quad	1152921508901814287
	.quad	S3bQP_srt+776


==================== Asm code ====================
2018-03-16 15:57:54.310352861 UTC

.section .text
.align 8
_c3fJp:
_c3fJp:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3fJx
_c3fJw:
	movq GHC.Real.:%_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3fJx:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c3fJp, .-_c3fJp


==================== Asm code ====================
2018-03-16 15:57:54.310972183 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fJp_info:
	.quad	_c3fJp
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:54.31249165 UTC

.section .text
.align 8
ds_s3b91_entry:
_c3fJy:
	leaq -104(%rbp),%rax
	cmpq %r15,%rax
	jb _c3fJz
_c3fJA:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3fHr_info(%rip),%rax
	movq %rax,-56(%rbp)
	movq 16(%rbx),%rax
	movq %rax,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rcx
	movq %rcx,-72(%rbp)
	movq 32(%rbx),%rcx
	movq %rcx,-64(%rbp)
	movq %rax,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq %rcx,-32(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-72,%rbp
	jmp GHC.Float.floatDigits_entry
_c3fJz:
	jmp *-16(%r13)
	.size ds_s3b91_entry, .-ds_s3b91_entry


==================== Asm code ====================
2018-03-16 15:57:54.313214368 UTC

.section .data.rel.ro
.align 8
.align 1
ds_s3b91_info:
	.quad	ds_s3b91_entry
	.quad	4
	.quad	3494802145587232783
	.quad	S3bQP_srt+776


==================== Asm code ====================
2018-03-16 15:57:54.31398001 UTC

.section .text
.align 8
_c3fHr:
_c3fHr:
	leaq block_c3fHv_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 7(%rbx),%rax
	movq %rax,%rsi
	movq 32(%rbp),%r14
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp GHC.Float.$wexpt_entry
	.size _c3fHr, .-_c3fHr


==================== Asm code ====================
2018-03-16 15:57:54.314599213 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fHr_info:
	.quad	_c3fHr
	.quad	4
	.quad	3494802145587232798
	.quad	S3bQP_srt+776


==================== Asm code ====================
2018-03-16 15:57:54.315304351 UTC

.section .text
.align 8
_c3fHv:
_c3fHv:
	leaq block_c3fHz_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rax
	movq 24(%rbp),%rbx
	movq %rax,24(%rbp)
	testb $7,%bl
	jne _c3fHz
_c3fHA:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3fHv, .-_c3fHv


==================== Asm code ====================
2018-03-16 15:57:54.315896027 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fHv_info:
	.quad	_c3fHv
	.quad	69
	.quad	3494802145587232798
	.quad	S3bQP_srt+776


==================== Asm code ====================
2018-03-16 15:57:54.31658273 UTC

.section .text
.align 8
_c3fHz:
_c3fHz:
	leaq block_c3fHE_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 7(%rbx),%rax
	movq %rax,%rsi
	movq 40(%rbp),%r14
	movq 15(%rbx),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp GHC.Float.$wintegerLogBase_entry
	.size _c3fHz, .-_c3fHz


==================== Asm code ====================
2018-03-16 15:57:54.317178202 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fHz_info:
	.quad	_c3fHz
	.quad	69
	.quad	3494802145587232798
	.quad	S3bQP_srt+776


==================== Asm code ====================
2018-03-16 15:57:54.317923658 UTC

.section .text
.align 8
_c3fHE:
_c3fHE:
	leaq block_c3fHI_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 8(%rbp),%rsi
	movq 56(%rbp),%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp GHC.Float.$wintegerLogBase_entry
	.size _c3fHE, .-_c3fHE


==================== Asm code ====================
2018-03-16 15:57:54.31851485 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fHE_info:
	.quad	_c3fHE
	.quad	263
	.quad	3494802145587232798
	.quad	S3bQP_srt+776


==================== Asm code ====================
2018-03-16 15:57:54.319174314 UTC

.section .text
.align 8
_c3fHI:
_c3fHI:
	leaq block_c3fHM_info(%rip),%rax
	movq %rax,(%rbp)
	movq 40(%rbp),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq 56(%rbp),%rax
	movq %rax,-8(%rbp)
	movq %rbx,56(%rbp)
	addq $-16,%rbp
	jmp GHC.Float.floatRange_entry
	.size _c3fHI, .-_c3fHI


==================== Asm code ====================
2018-03-16 15:57:54.319787287 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fHI_info:
	.quad	_c3fHI
	.quad	584
	.quad	3494802111227494430
	.quad	S3bQP_srt+776


==================== Asm code ====================
2018-03-16 15:57:54.320512132 UTC

.section .text
.align 8
_c3fHM:
_c3fHM:
	leaq block_c3fHQ_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rbx
	testb $7,%bl
	jne _c3fHQ
_c3fHR:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3fHM, .-_c3fHM


==================== Asm code ====================
2018-03-16 15:57:54.321090657 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fHM_info:
	.quad	_c3fHM
	.quad	5704
	.quad	3494802111227494430
	.quad	S3bQP_srt+776


==================== Asm code ====================
2018-03-16 15:57:54.322125399 UTC

.section .text
.align 8
_c3fHQ:
_c3fHQ:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3fJJ
_c3fJI:
	movq 64(%rbp),%rax
	movq 32(%rbp),%rcx
	movq 8(%rbp),%rdx
	subq 56(%rbp),%rdx
	subq %rcx,%rdx
	movq 7(%rbx),%rbx
	subq %rcx,%rbx
	cmpq %rbx,%rdx
	jg _c3fKb
_c3fKc:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rcx
_s3b9t:
	testq %rbx,%rbx
	jge _c3fK0
_c3fK5:
	leaq block_c3fJ3_info(%rip),%rdx
	movq %rdx,8(%rbp)
	movq %rbx,%rsi
	negq %rsi
	movq %rax,%r14
	movq %rcx,40(%rbp)
	movq %rbx,56(%rbp)
	addq $8,%rbp
	jmp GHC.Float.$wexpt_entry
_c3fKb:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rdx,(%r12)
	leaq -7(%r12),%rbx
_n3fLS:
	movq %rbx,%rcx
	movq %rdx,%rbx
	jmp _s3b9t
_c3fK0:
	leaq block_c3fIS_info(%rip),%rdx
	movq %rdx,8(%rbp)
	movq %rbx,%rsi
	movq %rax,%r14
	movq %rcx,40(%rbp)
	movq %rbx,56(%rbp)
	addq $8,%rbp
	jmp GHC.Float.$wexpt_entry
_c3fJJ:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3fHQ, .-_c3fHQ


==================== Asm code ====================
2018-03-16 15:57:54.322985561 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fHQ_info:
	.quad	_c3fHQ
	.quad	5704
	.quad	3494802111227494430
	.quad	S3bQP_srt+776


==================== Asm code ====================
2018-03-16 15:57:54.323649492 UTC

.section .text
.align 8
_c3fIS:
_c3fIS:
	leaq block_c3fIW_info(%rip),%rax
	movq %rax,24(%rbp)
	leaq GHC.Float.$fRealDouble1_closure(%rip),%r8
	movq %rbx,%rdi
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $24,%rbp
	jmp *GHC.Real.$w$s$c/_entry@gotpcrel(%rip)
	.size _c3fIS, .-_c3fIS


==================== Asm code ====================
2018-03-16 15:57:54.324232322 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fIS_info:
	.quad	_c3fIS
	.quad	2311
	.quad	3458773314208530462
	.quad	S3bQP_srt+776


==================== Asm code ====================
2018-03-16 15:57:54.324951016 UTC

.section .text
.align 8
_c3fIW:
_c3fIW:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3fK4
_c3fK3:
	movq GHC.Real.:%_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq %r14,-16(%rbp)
	leaq -15(%r12),%rax
	movq %rax,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp _s3b9w
_c3fK4:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c3fIW, .-_c3fIW


==================== Asm code ====================
2018-03-16 15:57:54.325649459 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fIW_info:
	.quad	_c3fIW
	.quad	260
	.quad	3458764518115508254
	.quad	S3bQP_srt+776


==================== Asm code ====================
2018-03-16 15:57:54.326341445 UTC

.section .text
.align 8
_c3fJ3:
_c3fJ3:
	leaq block_c3fJ7_info(%rip),%rax
	movq %rax,24(%rbp)
	movq %rbx,%r8
	leaq GHC.Float.$fRealDouble1_closure(%rip),%rdi
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $24,%rbp
	jmp *GHC.Real.$w$s$c/_entry@gotpcrel(%rip)
	.size _c3fJ3, .-_c3fJ3


==================== Asm code ====================
2018-03-16 15:57:54.326970782 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fJ3_info:
	.quad	_c3fJ3
	.quad	2311
	.quad	3458773314208530462
	.quad	S3bQP_srt+776


==================== Asm code ====================
2018-03-16 15:57:54.327731843 UTC

.section .text
.align 8
_c3fJ7:
_c3fJ7:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3fK9
_c3fK8:
	movq GHC.Real.:%_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	movq %rbx,(%rbp)
	movq %r14,-16(%rbp)
	leaq -15(%r12),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp _s3b9w
_c3fK9:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c3fJ7, .-_c3fJ7


==================== Asm code ====================
2018-03-16 15:57:54.32838345 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fJ7_info:
	.quad	_c3fJ7
	.quad	260
	.quad	3458764518115508254
	.quad	S3bQP_srt+776


==================== Asm code ====================
2018-03-16 15:57:54.329019721 UTC

.section .text
.align 8
_s3b9w:
_s3b9w:
	leaq block_c3fJd_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq GHC.Real.$fEnumRatio1_closure@gotpcrel(%rip),%r8
	movq 32(%rbp),%rdi
	movq (%rbp),%rsi
	movq 16(%rbp),%r14
	addq $-8,%rbp
	jmp *GHC.Real.$w$s$ccompare_entry@gotpcrel(%rip)
	.size _s3b9w, .-_s3b9w


==================== Asm code ====================
2018-03-16 15:57:54.3301325 UTC

.section .text
.align 8
_c3fJd:
_c3fJd:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c3fJV
_c3fJO:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _c3fJR
_c3fJQ:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-72(%r12)
	movq 48(%rbp),%rax
	incq %rax
	movq %rax,-64(%r12)
	leaq sat_s3b9E_info(%rip),%rax
	movq %rax,-56(%r12)
	movq 56(%rbp),%rax
	movq %rax,-40(%r12)
	movq 24(%rbp),%rax
	movq %rax,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -56(%r12),%rax
	movq %rax,-8(%r12)
	leaq -71(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $64,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3fJY:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c3fJV:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3fJY
_c3fJX:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	movq 32(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $64,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3fJR:
	movq $80,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3fJd, .-_c3fJd


==================== Asm code ====================
2018-03-16 15:57:54.330972314 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fJd_info:
	.quad	_c3fJd
	.quad	3079
	.quad	1152921508901814302
	.quad	S3bQP_srt+776


==================== Asm code ====================
2018-03-16 15:57:54.331752549 UTC

.section .text
.align 8
.globl GHC.Float.fromRat'_entry
.type GHC.Float.fromRat'_entry, @object
GHC.Float.fromRat'_entry:
_c3fKk:
	addq $112,%r12
	cmpq 856(%r13),%r12
	ja _c3fKo
_c3fKn:
	leaq r_s3b8Z_info(%rip),%rax
	movq %rax,-104(%r12)
	movq %r14,-88(%r12)
	leaq -40(%r12),%rax
	movq %rax,-80(%r12)
	leaq b_s3b90_info(%rip),%rax
	movq %rax,-72(%r12)
	movq %r14,-56(%r12)
	leaq -104(%r12),%rax
	movq %rax,-48(%r12)
	leaq ds_s3b91_info(%rip),%rbx
	movq %rbx,-40(%r12)
	movq %r14,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rax,-8(%r12)
	leaq -72(%r12),%rbx
	movq %rbx,(%r12)
	movq %rax,%rbx
	jmp *stg_ap_0_fast@gotpcrel(%rip)
_c3fKo:
	movq $112,904(%r13)
	leaq GHC.Float.fromRat'_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.fromRat'_entry, .-GHC.Float.fromRat'_entry


==================== Asm code ====================
2018-03-16 15:57:54.332511648 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.fromRat'_info
.type GHC.Float.fromRat'_info, @object
GHC.Float.fromRat'_info:
	.quad	GHC.Float.fromRat'_entry
	.quad	0
	.quad	8971179292469755918
	.quad	8589934607
	.quad	S3bQP_srt+776


==================== Asm code ====================
2018-03-16 15:57:54.351750641 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$wfromRat_closure
.type GHC.Float.$wfromRat_closure, @object
GHC.Float.$wfromRat_closure:
	.quad	GHC.Float.$wfromRat_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:54.352896055 UTC

.section .text
.align 8
$dRealFrac_s3b9Z_entry:
_c3fMP:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3fMQ
_c3fMR:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Float.$p1RealFloat_entry
_c3fMQ:
	jmp *-16(%r13)
	.size $dRealFrac_s3b9Z_entry, .-$dRealFrac_s3b9Z_entry


==================== Asm code ====================
2018-03-16 15:57:54.353785787 UTC

.section .data.rel.ro
.align 8
.align 1
$dRealFrac_s3b9Z_info:
	.quad	$dRealFrac_s3b9Z_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:54.354618555 UTC

.section .text
.align 8
$dReal_s3ba0_entry:
_c3fMW:
	movq 16(%rbx),%r14
	jmp *GHC.Real.$p1RealFrac_entry@gotpcrel(%rip)
	.size $dReal_s3ba0_entry, .-$dReal_s3ba0_entry


==================== Asm code ====================
2018-03-16 15:57:54.355410765 UTC

.section .data.rel.ro
.align 8
.align 1
$dReal_s3ba0_info:
	.quad	$dReal_s3ba0_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:54.356336483 UTC

.section .text
.align 8
$dNum_s3ba1_entry:
_c3fN3:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3fN4
_c3fN5:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Real.$p1Real_entry@gotpcrel(%rip)
_c3fN4:
	jmp *-16(%r13)
	.size $dNum_s3ba1_entry, .-$dNum_s3ba1_entry


==================== Asm code ====================
2018-03-16 15:57:54.357189728 UTC

.section .data.rel.ro
.align 8
.align 1
$dNum_s3ba1_info:
	.quad	$dNum_s3ba1_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:54.358203422 UTC

.section .text
.align 8
sat_s3ba6_entry:
_c3fNt:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3fNx
_c3fNy:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3fNr_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%r14
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Integer.Type.negateInteger_entry@gotpcrel(%rip)
_c3fNx:
	jmp *-16(%r13)
	.size sat_s3ba6_entry, .-sat_s3ba6_entry


==================== Asm code ====================
2018-03-16 15:57:54.359064327 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3ba6_info:
	.quad	sat_s3ba6_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:54.359978401 UTC

.section .text
.align 8
_c3fNr:
_c3fNr:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3fNB
_c3fNA:
	movq GHC.Real.:%_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3fNB:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3fNr, .-_c3fNr


==================== Asm code ====================
2018-03-16 15:57:54.360890559 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fNr_info:
	.quad	_c3fNr
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:54.362037813 UTC

.section .text
.align 8
sat_s3ba7_entry:
_c3fNC:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3fND
_c3fNE:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c3fNG
_c3fNF:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	leaq sat_s3ba6_info(%rip),%rdx
	movq %rdx,-24(%r12)
	movq %rcx,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rsi
	movq %rax,%r14
	addq $-16,%rbp
	jmp GHC.Float.fromRat'_entry
_c3fNG:
	movq $32,904(%r13)
_c3fND:
	jmp *-16(%r13)
	.size sat_s3ba7_entry, .-sat_s3ba7_entry


==================== Asm code ====================
2018-03-16 15:57:54.363967035 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3ba7_info:
	.quad	sat_s3ba7_entry
	.quad	3
	.quad	4294967311
	.quad	S3bQP_srt+1016


==================== Asm code ====================
2018-03-16 15:57:54.365021301 UTC

.section .text
.align 8
sat_s3bad_entry:
_c3fNV:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3fNW
_c3fNX:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Float.rationalToDouble5_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c3fNW:
	jmp *-16(%r13)
	.size sat_s3bad_entry, .-sat_s3bad_entry


==================== Asm code ====================
2018-03-16 15:57:54.366079425 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bad_info:
	.quad	sat_s3bad_entry
	.quad	1
	.quad	4294967312
	.quad	S3bQP_srt+832


==================== Asm code ====================
2018-03-16 15:57:54.367032548 UTC

.section .text
.align 8
sat_s3bac_entry:
_c3fO2:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3fO3
_c3fO4:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Float.rationalToDouble5_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c3fO3:
	jmp *-16(%r13)
	.size sat_s3bac_entry, .-sat_s3bac_entry


==================== Asm code ====================
2018-03-16 15:57:54.367942098 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bac_info:
	.quad	sat_s3bac_entry
	.quad	1
	.quad	4294967312
	.quad	S3bQP_srt+832


==================== Asm code ====================
2018-03-16 15:57:54.368929581 UTC

.section .text
.align 8
sat_s3bag_entry:
_c3fOf:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3fOg
_c3fOh:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Float.rationalToDouble5_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c3fOg:
	jmp *-16(%r13)
	.size sat_s3bag_entry, .-sat_s3bag_entry


==================== Asm code ====================
2018-03-16 15:57:54.369862574 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bag_info:
	.quad	sat_s3bag_entry
	.quad	1
	.quad	4294967312
	.quad	S3bQP_srt+832


==================== Asm code ====================
2018-03-16 15:57:54.370790282 UTC

.section .text
.align 8
sat_s3baf_entry:
_c3fOm:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3fOn
_c3fOo:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Float.$fRealDouble1_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c3fOn:
	jmp *-16(%r13)
	.size sat_s3baf_entry, .-sat_s3baf_entry


==================== Asm code ====================
2018-03-16 15:57:54.371693669 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3baf_info:
	.quad	sat_s3baf_entry
	.quad	1
	.quad	4294967312
	.quad	S3bQP_srt+864


==================== Asm code ====================
2018-03-16 15:57:54.372841411 UTC

.section .text
.align 8
sat_s3bah_entry:
_c3fOr:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c3fOs
_c3fOt:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c3fOv
_c3fOu:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	leaq sat_s3bag_info(%rip),%rcx
	movq %rcx,-40(%r12)
	movq %rbx,-24(%r12)
	leaq sat_s3baf_info(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rbx,(%r12)
	leaq block_c3fOp_info(%rip),%rbx
	movq %rbx,-40(%rbp)
	movq %rax,%r14
	leaq -40(%r12),%rax
	movq %rax,-32(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp *GHC.Real.$p2RealFrac_entry@gotpcrel(%rip)
_c3fOv:
	movq $48,904(%r13)
_c3fOs:
	jmp *-16(%r13)
	.size sat_s3bah_entry, .-sat_s3bah_entry


==================== Asm code ====================
2018-03-16 15:57:54.373940644 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bah_info:
	.quad	sat_s3bah_entry
	.quad	2
	.quad	73014444050
	.quad	S3bQP_srt+832


==================== Asm code ====================
2018-03-16 15:57:54.374789353 UTC

.section .text
.align 8
_c3fOp:
_c3fOp:
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%rax
	movq 16(%rbp),%rbx
	movq %rbx,8(%rbp)
	movq %rax,16(%rbp)
	jmp *GHC.Real./_entry@gotpcrel(%rip)
	.size _c3fOp, .-_c3fOp


==================== Asm code ====================
2018-03-16 15:57:54.375603746 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fOp_info:
	.quad	_c3fOp
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:54.376562058 UTC

.section .text
.align 8
sat_s3bak_entry:
_c3fOF:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3fOG
_c3fOH:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Float.rationalToDouble5_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c3fOG:
	jmp *-16(%r13)
	.size sat_s3bak_entry, .-sat_s3bak_entry


==================== Asm code ====================
2018-03-16 15:57:54.378612177 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bak_info:
	.quad	sat_s3bak_entry
	.quad	1
	.quad	4294967312
	.quad	S3bQP_srt+832


==================== Asm code ====================
2018-03-16 15:57:54.379614961 UTC

.section .text
.align 8
sat_s3baj_entry:
_c3fOM:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3fON
_c3fOO:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Float.$fRealDouble1_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c3fON:
	jmp *-16(%r13)
	.size sat_s3baj_entry, .-sat_s3baj_entry


==================== Asm code ====================
2018-03-16 15:57:54.38052898 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3baj_info:
	.quad	sat_s3baj_entry
	.quad	1
	.quad	4294967312
	.quad	S3bQP_srt+864


==================== Asm code ====================
2018-03-16 15:57:54.381764179 UTC

.section .text
.align 8
.globl GHC.Float.$wfromRat_entry
.type GHC.Float.$wfromRat_entry, @object
GHC.Float.$wfromRat_entry:
_c3fOS:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c3fOT
_c3fOU:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c3fOW
_c3fOV:
	leaq $dRealFrac_s3b9Z_info(%rip),%rax
	movq %rax,-64(%r12)
	movq %r14,-48(%r12)
	leaq $dReal_s3ba0_info(%rip),%rax
	movq %rax,-40(%r12)
	leaq -64(%r12),%rax
	movq %rax,-24(%r12)
	leaq $dNum_s3ba1_info(%rip),%rbx
	movq %rbx,-16(%r12)
	leaq -40(%r12),%rbx
	movq %rbx,(%r12)
	leaq block_c3fN6_info(%rip),%rbx
	movq %rbx,-48(%rbp)
	movq %rsi,%rbx
	leaq GHC.Float.rationalToDouble5_closure(%rip),%rsi
	movq %r14,%rcx
	movq %rdi,%r14
	movq %rax,-40(%rbp)
	leaq -16(%r12),%rax
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	movq %rbx,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-48,%rbp
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
_c3fOW:
	movq $72,904(%r13)
_c3fOT:
	leaq GHC.Float.$wfromRat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$wfromRat_entry, .-GHC.Float.$wfromRat_entry


==================== Asm code ====================
2018-03-16 15:57:54.382950103 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$wfromRat_info
.type GHC.Float.$wfromRat_info, @object
GHC.Float.$wfromRat_info:
	.quad	GHC.Float.$wfromRat_entry
	.quad	0
	.quad	108086464071335950
	.quad	12884901911
	.quad	S3bQP_srt+832


==================== Asm code ====================
2018-03-16 15:57:54.383968284 UTC

.section .text
.align 8
_c3fN6:
_c3fN6:
	movq 32(%rbp),%rax
	cmpq $1,%rbx
	je _c3fOR
_c3fOQ:
	leaq block_c3fNa_info(%rip),%rbx
	movq %rbx,8(%rbp)
	leaq GHC.Float.rationalToDouble5_closure(%rip),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.gtInteger#_entry@gotpcrel(%rip)
_c3fOR:
	leaq block_c3fNJ_info(%rip),%rbx
	movq %rbx,(%rbp)
	leaq GHC.Float.rationalToDouble5_closure(%rip),%rsi
	movq %rax,%r14
	jmp *GHC.Integer.Type.gtInteger#_entry@gotpcrel(%rip)
	.size _c3fN6, .-_c3fN6


==================== Asm code ====================
2018-03-16 15:57:54.384850679 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fN6_info:
	.quad	_c3fN6
	.quad	5
	.quad	36028870033408030
	.quad	S3bQP_srt+832


==================== Asm code ====================
2018-03-16 15:57:54.385996775 UTC

.section .text
.align 8
_c3fNJ:
_c3fNJ:
	cmpq $1,%rbx
	je _c3fPz
_c3fPj:
	leaq block_c3fNN_info(%rip),%rax
	movq %rax,(%rbp)
	leaq GHC.Float.rationalToDouble5_closure(%rip),%rsi
	movq 32(%rbp),%r14
	jmp *GHC.Integer.Type.ltInteger#_entry@gotpcrel(%rip)
_c3fPC:
	movq $48,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
_c3fPz:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c3fPC
_c3fPB:
	leaq sat_s3bak_info(%rip),%rax
	movq %rax,-40(%r12)
	movq 16(%rbp),%rax
	movq %rax,-24(%r12)
	leaq sat_s3baj_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,(%r12)
	leaq block_c3fPy_info(%rip),%rax
	movq %rax,24(%rbp)
	movq 8(%rbp),%r14
	leaq -16(%r12),%rax
	movq %rax,32(%rbp)
	leaq -40(%r12),%rax
	movq %rax,40(%rbp)
	addq $24,%rbp
	jmp *GHC.Real.$p2RealFrac_entry@gotpcrel(%rip)
	.size _c3fNJ, .-_c3fNJ


==================== Asm code ====================
2018-03-16 15:57:54.38697403 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fNJ_info:
	.quad	_c3fNJ
	.quad	1285
	.quad	73014444062
	.quad	S3bQP_srt+832


==================== Asm code ====================
2018-03-16 15:57:54.387831217 UTC

.section .text
.align 8
_c3fPy:
_c3fPy:
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,(%rbp)
	jmp *GHC.Real./_entry@gotpcrel(%rip)
	.size _c3fPy, .-_c3fPy


==================== Asm code ====================
2018-03-16 15:57:54.388656598 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fPy_info:
	.quad	_c3fPy
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:54.389935912 UTC

.section .text
.align 8
_c3fNN:
_c3fNN:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rcx
	cmpq $1,%rbx
	je _c3fPu
_c3fPm:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c3fPp
_c3fPo:
	leaq sat_s3bad_info(%rip),%rbx
	movq %rbx,-40(%r12)
	movq %rcx,-24(%r12)
	leaq sat_s3bac_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rcx,(%r12)
	leaq block_c3fPk_info(%rip),%rbx
	movq %rbx,24(%rbp)
	movq %rax,%r14
	leaq -16(%r12),%rax
	movq %rax,32(%rbp)
	leaq -40(%r12),%rax
	movq %rax,40(%rbp)
	addq $24,%rbp
	jmp *GHC.Real.$p2RealFrac_entry@gotpcrel(%rip)
_c3fPx:
	movq $32,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
_c3fPu:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c3fPx
_c3fPw:
	leaq sat_s3bah_info(%rip),%rbx
	movq %rbx,-24(%r12)
	movq %rax,-8(%r12)
	movq %rcx,(%r12)
	movq %rcx,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,32(%rbp)
	leaq -24(%r12),%rax
	movq %rax,40(%rbp)
	addq $32,%rbp
	jmp *GHC.Num.negate_entry@gotpcrel(%rip)
_c3fPp:
	movq $48,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c3fNN, .-_c3fNN


==================== Asm code ====================
2018-03-16 15:57:54.391051973 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fNN_info:
	.quad	_c3fNN
	.quad	1797
	.quad	73014444062
	.quad	S3bQP_srt+832


==================== Asm code ====================
2018-03-16 15:57:54.391929641 UTC

.section .text
.align 8
_c3fPk:
_c3fPk:
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,(%rbp)
	jmp *GHC.Real./_entry@gotpcrel(%rip)
	.size _c3fPk, .-_c3fPk


==================== Asm code ====================
2018-03-16 15:57:54.392532194 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fPk_info:
	.quad	_c3fPk
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:54.393385589 UTC

.section .text
.align 8
_c3fNa:
_c3fNa:
	movq 24(%rbp),%rax
	cmpq $1,%rbx
	je _c3fPc
_c3fP0:
	leaq block_c3fNe_info(%rip),%rbx
	movq %rbx,(%rbp)
	leaq GHC.Float.rationalToDouble5_closure(%rip),%rsi
	movq %rax,%r14
	jmp *GHC.Integer.Type.ltInteger#_entry@gotpcrel(%rip)
_c3fPf:
	movq $24,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
_c3fPc:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3fPf
_c3fPe:
	movq GHC.Real.:%_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,-8(%r12)
	movq 32(%rbp),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rsi
	movq 16(%rbp),%r14
	addq $40,%rbp
	jmp GHC.Float.fromRat'_entry
	.size _c3fNa, .-_c3fNa


==================== Asm code ====================
2018-03-16 15:57:54.39420734 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fNa_info:
	.quad	_c3fNa
	.quad	4
	.quad	36028801313931294
	.quad	S3bQP_srt+832


==================== Asm code ====================
2018-03-16 15:57:54.395116125 UTC

.section .text
.align 8
_c3fNe:
_c3fNe:
	movq 16(%rbp),%rax
	cmpq $1,%rbx
	je _c3fP5
_c3fP4:
	movq %rax,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,16(%rbp)
	leaq GHC.Float.rationalToDouble5_closure(%rip),%rax
	movq %rax,24(%rbp)
	leaq GHC.Float.minExpt_closure+1(%rip),%rax
	movq %rax,32(%rbp)
	addq $16,%rbp
	jmp GHC.Float.encodeFloat_entry
_c3fP8:
	movq $40,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
_c3fP5:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c3fP8
_c3fP7:
	leaq sat_s3ba7_info(%rip),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-16(%r12)
	movq 24(%rbp),%rax
	movq %rax,-8(%r12)
	movq 32(%rbp),%rax
	movq %rax,(%r12)
	movq 8(%rbp),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,24(%rbp)
	leaq -32(%r12),%rax
	movq %rax,32(%rbp)
	addq $24,%rbp
	jmp *GHC.Num.negate_entry@gotpcrel(%rip)
	.size _c3fNe, .-_c3fNe


==================== Asm code ====================
2018-03-16 15:57:54.395879146 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fNe_info:
	.quad	_c3fNe
	.quad	4
	.quad	36028801313931294
	.quad	S3bQP_srt+832


==================== Asm code ====================
2018-03-16 15:57:54.399043221 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.fromRat_closure
.type GHC.Float.fromRat_closure, @object
GHC.Float.fromRat_closure:
	.quad	GHC.Float.fromRat_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:54.399858204 UTC

.section .text
.align 8
.globl GHC.Float.fromRat_entry
.type GHC.Float.fromRat_entry, @object
GHC.Float.fromRat_entry:
_c3fSe:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3fSf
_c3fSg:
	leaq block_c3fSb_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3fSb
_c3fSc:
	movq (%rbx),%rax
	jmp *(%rax)
_c3fSf:
	leaq GHC.Float.fromRat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.fromRat_entry, .-GHC.Float.fromRat_entry


==================== Asm code ====================
2018-03-16 15:57:54.400496017 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.fromRat_info
.type GHC.Float.fromRat_info, @object
GHC.Float.fromRat_info:
	.quad	GHC.Float.fromRat_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S3bQP_srt+1024


==================== Asm code ====================
2018-03-16 15:57:54.401184336 UTC

.section .text
.align 8
_c3fSb:
_c3fSb:
	movq 15(%rbx),%rdi
	movq 7(%rbx),%rsi
	movq 8(%rbp),%r14
	addq $16,%rbp
	jmp GHC.Float.$wfromRat_entry
	.size _c3fSb, .-_c3fSb


==================== Asm code ====================
2018-03-16 15:57:54.402295626 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fSb_info:
	.quad	_c3fSb
	.quad	1
	.quad	4294967326
	.quad	S3bQP_srt+1024


==================== Asm code ====================
2018-03-16 15:57:54.407479129 UTC

.section .data
.align 8
.align 1
lvl8_r2UqG_closure:
	.quad	lvl8_r2UqG_info


==================== Asm code ====================
2018-03-16 15:57:54.40882474 UTC

.section .text
.align 8
lvl8_r2UqG_entry:
_c3fSB:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3fSF
_c3fSG:
	leaq block_c3fSz_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp *GHC.Integer.Type.integerToInt_entry@gotpcrel(%rip)
_c3fSF:
	leaq lvl8_r2UqG_closure(%rip),%rbx
	jmp *-8(%r13)
	.size lvl8_r2UqG_entry, .-lvl8_r2UqG_entry


==================== Asm code ====================
2018-03-16 15:57:54.410230402 UTC

.section .data.rel.ro
.align 8
.align 1
lvl8_r2UqG_info:
	.quad	lvl8_r2UqG_entry
	.quad	0
	.quad	14
	.quad	4294967301


==================== Asm code ====================
2018-03-16 15:57:54.41140718 UTC

.section .text
.align 8
_c3fSz:
_c3fSz:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3fSJ
_c3fSI:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3fSJ:
	movq $16,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c3fSz, .-_c3fSz


==================== Asm code ====================
2018-03-16 15:57:54.41236262 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fSz_info:
	.quad	_c3fSz
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:54.416612692 UTC

.section .data
.align 8
.align 1
lvl9_r2UqH_closure:
	.quad	lvl9_r2UqH_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:54.417436887 UTC

.section .data.rel.ro
.align 8
.align 1
u3fT4_srtd:
	.quad	S3bQP_srt+552
	.quad	52
	.quad	2251799813685249


==================== Asm code ====================
2018-03-16 15:57:54.418810373 UTC

.section .text
.align 8
lvl9_r2UqH_entry:
_c3fT1:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3fT2
_c3fT3:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c3fT0
_c3fSZ:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $23,%esi
	leaq GHC.Float.$fRealFloatDouble5_closure(%rip),%r14
	addq $-16,%rbp
	jmp GHC.Float.$wexpt_entry
_c3fT2:
	jmp *-16(%r13)
_c3fT0:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl9_r2UqH_entry, .-lvl9_r2UqH_entry


==================== Asm code ====================
2018-03-16 15:57:54.419926337 UTC

.section .data.rel.ro
.align 8
.align 1
lvl9_r2UqH_info:
	.quad	lvl9_r2UqH_entry
	.quad	0
	.quad	-4294967275
	.quad	u3fT4_srtd


==================== Asm code ====================
2018-03-16 15:57:54.422131792 UTC

.section .data
.align 8
.align 1
sat_s3bas_closure:
	.quad	GHC.Types.I#_con_info
	.quad	4


==================== Asm code ====================
2018-03-16 15:57:54.423862999 UTC

.section .data
.align 8
.align 1
sat_s3bat_closure:
	.quad	:_con_info
	.quad	sat_s3bas_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:54.426912961 UTC

.section .data
.align 8
.align 1
lvl10_r2UqI_closure:
	.quad	lvl10_r2UqI_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:54.427836019 UTC

.section .text
.align 8
lvl10_r2UqI_entry:
_c3fTm:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3fTn
_c3fTo:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c3fTl
_c3fTk:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq sat_s3bat_closure+2(%rip),%rsi
	movq GHC.Types.True_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%r14
	addq $-16,%rbp
	jmp *GHC.Integer.Type.mkInteger_entry@gotpcrel(%rip)
_c3fTn:
	jmp *-16(%r13)
_c3fTl:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl10_r2UqI_entry, .-lvl10_r2UqI_entry


==================== Asm code ====================
2018-03-16 15:57:54.428516682 UTC

.section .data.rel.ro
.align 8
.align 1
lvl10_r2UqI_info:
	.quad	lvl10_r2UqI_entry
	.quad	0
	.quad	4294967317
	.quad	S3bQP_srt+1040


==================== Asm code ====================
2018-03-16 15:57:54.487880727 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$w$sfloatToDigits1_closure
.type GHC.Float.$w$sfloatToDigits1_closure, @object
GHC.Float.$w$sfloatToDigits1_closure:
	.quad	GHC.Float.$w$sfloatToDigits1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:54.488674949 UTC

.section .text
.align 8
.globl GHC.Float.$w$sfloatToDigits1_slow
.type GHC.Float.$w$sfloatToDigits1_slow, @object
GHC.Float.$w$sfloatToDigits1_slow:
_c3fTz:
	movss 8(%rbp),%xmm1
	movq (%rbp),%r14
	addq $16,%rbp
	jmp GHC.Float.$w$sfloatToDigits1_entry
	.size GHC.Float.$w$sfloatToDigits1_slow, .-GHC.Float.$w$sfloatToDigits1_slow


==================== Asm code ====================
2018-03-16 15:57:54.489504929 UTC

.section .text
.align 8
sat_s3baB_entry:
_c3fTT:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3fTU
_c3fTV:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Integer.Type.smallInteger_entry@gotpcrel(%rip)
_c3fTU:
	jmp *-16(%r13)
	.size sat_s3baB_entry, .-sat_s3baB_entry


==================== Asm code ====================
2018-03-16 15:57:54.490193228 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3baB_info:
	.quad	sat_s3baB_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 15:57:54.490923007 UTC

.section .text
.align 8
ds_s3bax_entry:
_c3fTX:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c3fTY
_c3fTZ:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3fTK_info(%rip),%rax
	movq %rax,-24(%rbp)
	movss 16(%rbx),%xmm1
	addq $-24,%rbp
	jmp *stg_decodeFloat_Int#@gotpcrel(%rip)
_c3fTY:
	jmp *-16(%r13)
	.size ds_s3bax_entry, .-ds_s3bax_entry


==================== Asm code ====================
2018-03-16 15:57:54.491576184 UTC

.section .data.rel.ro
.align 8
.align 1
ds_s3bax_info:
	.quad	ds_s3bax_entry
	.quad	4294967296
	.quad	17


==================== Asm code ====================
2018-03-16 15:57:54.492194828 UTC

.section .text
.align 8
_c3fTK:
_c3fTK:
	movq %r14,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp _c3fTL
	.size _c3fTK, .-_c3fTK


==================== Asm code ====================
2018-03-16 15:57:54.492777982 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fTK_info:
	.quad	_c3fTK
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:54.493576507 UTC

.section .text
.align 8
_c3fTL:
_c3fTL:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c3fU2
_c3fU1:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-56(%r12)
	movq 8(%rbp),%rax
	movq %rax,-48(%r12)
	leaq sat_s3baB_info(%rip),%rax
	movq %rax,-40(%r12)
	movq 16(%rbp),%rax
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -55(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3fU2:
	movq $64,904(%r13)
	leaq block_c3fTL_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c3fTL, .-_c3fTL


==================== Asm code ====================
2018-03-16 15:57:54.494322142 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fTL_info:
	.quad	_c3fTL
	.quad	194
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:54.494898486 UTC

.section .data.rel.ro
.align 8
.align 1
u3g4K_srtd:
	.quad	S3bQP_srt+552
	.quad	52
	.quad	2252933685051393


==================== Asm code ====================
2018-03-16 15:57:54.495640274 UTC

.section .text
.align 8
sat_s3baN_entry:
_c3fUA:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c3fUB
_c3fUC:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3fUy_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rsi
	leaq GHC.Float.$fRealFloatDouble5_closure(%rip),%r14
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Float.$wexpt_entry
_c3fUB:
	jmp *-16(%r13)
	.size sat_s3baN_entry, .-sat_s3baN_entry


==================== Asm code ====================
2018-03-16 15:57:54.496300206 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3baN_info:
	.quad	sat_s3baN_entry
	.quad	4294967297
	.quad	-4294967277
	.quad	u3g4K_srtd


==================== Asm code ====================
2018-03-16 15:57:54.496926499 UTC

.section .text
.align 8
_c3fUy:
_c3fUy:
	leaq block_c3fUF_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq GHC.Float.rationalToDouble5_closure(%rip),%rsi
	movq %rbx,%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
	.size _c3fUy, .-_c3fUy


==================== Asm code ====================
2018-03-16 15:57:54.497574219 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fUy_info:
	.quad	_c3fUy
	.quad	1
	.quad	141733920798
	.quad	S3bQP_srt+832


==================== Asm code ====================
2018-03-16 15:57:54.498291794 UTC

.section .text
.align 8
_c3fUF:
_c3fUF:
	cmpq $1,%rbx
	je _c3fUQ
_c3fUM:
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $24,%rbp
	jmp *GHC.Integer.Type.quotInteger_entry@gotpcrel(%rip)
_c3fUQ:
	movq GHC.Real.divZeroError_closure@gotpcrel(%rip),%rbx
	addq $24,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c3fUF, .-_c3fUF


==================== Asm code ====================
2018-03-16 15:57:54.498908911 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fUF_info:
	.quad	_c3fUF
	.quad	2
	.quad	4294967326
	.quad	S3bQP_srt+872


==================== Asm code ====================
2018-03-16 15:57:54.49946703 UTC

.section .data.rel.ro
.align 8
.align 1
u3g4L_srtd:
	.quad	S3bQP_srt+552
	.quad	52
	.quad	2252933685051393


==================== Asm code ====================
2018-03-16 15:57:54.500171552 UTC

.section .text
.align 8
ds1_s3baD_entry:
_c3fUR:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c3fUS
_c3fUT:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3fU9_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _c3fU9
_c3fUa:
	movq (%rbx),%rax
	jmp *(%rax)
_c3fUS:
	jmp *-16(%r13)
	.size ds1_s3baD_entry, .-ds1_s3baD_entry


==================== Asm code ====================
2018-03-16 15:57:54.500759561 UTC

.section .data.rel.ro
.align 8
.align 1
ds1_s3baD_info:
	.quad	ds1_s3baD_entry
	.quad	1
	.quad	-4294967280
	.quad	u3g4L_srtd


==================== Asm code ====================
2018-03-16 15:57:54.501353999 UTC

.section .data.rel.ro
.align 8
.align 1
u3g4M_srtd:
	.quad	S3bQP_srt+552
	.quad	52
	.quad	2252933685051393


==================== Asm code ====================
2018-03-16 15:57:54.502072395 UTC

.section .text
.align 8
_c3fU9:
_c3fU9:
	leaq block_c3fUe_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3fUe
_c3fUf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3fU9, .-_c3fU9


==================== Asm code ====================
2018-03-16 15:57:54.50265271 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fU9_info:
	.quad	_c3fU9
	.quad	0
	.quad	-4294967266
	.quad	u3g4M_srtd


==================== Asm code ====================
2018-03-16 15:57:54.50319695 UTC

.section .data.rel.ro
.align 8
.align 1
u3g4N_srtd:
	.quad	S3bQP_srt+552
	.quad	52
	.quad	2252933685051393


==================== Asm code ====================
2018-03-16 15:57:54.504046141 UTC

.section .text
.align 8
_c3fUe:
_c3fUe:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c3fUX
_c3fUW:
	movq 7(%rbx),%rax
	movq $-149,%rbx
	subq %rax,%rbx
	testq %rbx,%rbx
	jle _c3fUZ
_c3fV1:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-64(%r12)
	addq %rbx,%rax
	movq %rax,-56(%r12)
	leaq sat_s3baN_info(%rip),%rax
	movq %rax,-48(%r12)
	movq 8(%rbp),%rax
	movq %rax,-32(%r12)
	movq %rbx,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -48(%r12),%rax
	movq %rax,-8(%r12)
	leaq -63(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3fUZ:
	addq $-72,%r12
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c3fUX:
	movq $72,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3fUe, .-_c3fUe


==================== Asm code ====================
2018-03-16 15:57:54.504803092 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fUe_info:
	.quad	_c3fUe
	.quad	2
	.quad	-4294967266
	.quad	u3g4N_srtd


==================== Asm code ====================
2018-03-16 15:57:54.505405654 UTC

.section .data.rel.ro
.align 8
.align 1
u3g4O_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4613937818241073153


==================== Asm code ====================
2018-03-16 15:57:54.506155822 UTC

.section .text
.align 8
sat_s3bb5_entry:
_c3fVx:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3fVA
_c3fVB:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3fVz_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rsi
	negq %rsi
	leaq GHC.Float.$fRealFloatDouble5_closure(%rip),%r14
	addq $-24,%rbp
	jmp GHC.Float.$wexpt_entry
_c3fVA:
	jmp *-16(%r13)
	.size sat_s3bb5_entry, .-sat_s3bb5_entry


==================== Asm code ====================
2018-03-16 15:57:54.506847933 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bb5_info:
	.quad	sat_s3bb5_entry
	.quad	4294967296
	.quad	-4294967279
	.quad	u3g4O_srtd


==================== Asm code ====================
2018-03-16 15:57:54.507399706 UTC

.section .data.rel.ro
.align 8
.align 1
u3g4P_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:54.508006891 UTC

.section .text
.align 8
_c3fVz:
_c3fVz:
	leaq GHC.Float.$fRealFloatDouble5_closure(%rip),%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c3fVz, .-_c3fVz


==================== Asm code ====================
2018-03-16 15:57:54.508575365 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fVz_info:
	.quad	_c3fVz
	.quad	0
	.quad	-4294967266
	.quad	u3g4P_srtd


==================== Asm code ====================
2018-03-16 15:57:54.509148482 UTC

.section .data.rel.ro
.align 8
.align 1
u3g4Q_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:54.509931648 UTC

.section .text
.align 8
sat_s3bb2_entry:
_c3fVK:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3fVL
_c3fVM:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq GHC.Float.$fRealFloatDouble5_closure(%rip),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
_c3fVL:
	jmp *-16(%r13)
	.size sat_s3bb2_entry, .-sat_s3bb2_entry


==================== Asm code ====================
2018-03-16 15:57:54.51052853 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bb2_info:
	.quad	sat_s3bb2_entry
	.quad	1
	.quad	-4294967280
	.quad	u3g4Q_srtd


==================== Asm code ====================
2018-03-16 15:57:54.511056136 UTC

.section .data.rel.ro
.align 8
.align 1
u3g4R_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4613937818241073153


==================== Asm code ====================
2018-03-16 15:57:54.51177774 UTC

.section .text
.align 8
sat_s3bbd_entry:
_c3fW2:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3fW8
_c3fW9:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3fW7_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rax
	negq %rax
	leaq 1(%rax),%rsi
	leaq GHC.Float.$fRealFloatDouble5_closure(%rip),%r14
	addq $-24,%rbp
	jmp GHC.Float.$wexpt_entry
_c3fW8:
	jmp *-16(%r13)
	.size sat_s3bbd_entry, .-sat_s3bbd_entry


==================== Asm code ====================
2018-03-16 15:57:54.512435022 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bbd_info:
	.quad	sat_s3bbd_entry
	.quad	4294967296
	.quad	-4294967279
	.quad	u3g4R_srtd


==================== Asm code ====================
2018-03-16 15:57:54.512974095 UTC

.section .data.rel.ro
.align 8
.align 1
u3g4S_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:54.513678995 UTC

.section .text
.align 8
_c3fW7:
_c3fW7:
	leaq GHC.Float.$fRealFloatDouble5_closure(%rip),%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c3fW7, .-_c3fW7


==================== Asm code ====================
2018-03-16 15:57:54.514282157 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fW7_info:
	.quad	_c3fW7
	.quad	0
	.quad	-4294967266
	.quad	u3g4S_srtd


==================== Asm code ====================
2018-03-16 15:57:54.51485731 UTC

.section .data.rel.ro
.align 8
.align 1
u3g4T_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:54.516453527 UTC

.section .text
.align 8
sat_s3bb9_entry:
_c3fWk:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3fWl
_c3fWm:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3fWi_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq GHC.Float.$fRealFloatDouble5_closure(%rip),%rsi
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
_c3fWl:
	jmp *-16(%r13)
	.size sat_s3bb9_entry, .-sat_s3bb9_entry


==================== Asm code ====================
2018-03-16 15:57:54.517224539 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bb9_info:
	.quad	sat_s3bb9_entry
	.quad	1
	.quad	-4294967280
	.quad	u3g4T_srtd


==================== Asm code ====================
2018-03-16 15:57:54.517903091 UTC

.section .data.rel.ro
.align 8
.align 1
u3g4U_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:54.51859344 UTC

.section .text
.align 8
_c3fWi:
_c3fWi:
	leaq GHC.Float.$fRealFloatDouble5_closure(%rip),%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c3fWi, .-_c3fWi


==================== Asm code ====================
2018-03-16 15:57:54.51917313 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fWi_info:
	.quad	_c3fWi
	.quad	0
	.quad	-4294967266
	.quad	u3g4U_srtd


==================== Asm code ====================
2018-03-16 15:57:54.519706335 UTC

.section .data.rel.ro
.align 8
.align 1
u3g4V_srtd:
	.quad	S3bQP_srt+552
	.quad	52
	.quad	2251799813685249


==================== Asm code ====================
2018-03-16 15:57:54.520418806 UTC

.section .text
.align 8
be_s3bbe_entry:
_c3fWv:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3fWw
_c3fWx:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rsi
	leaq GHC.Float.$fRealFloatDouble5_closure(%rip),%r14
	addq $-16,%rbp
	jmp GHC.Float.$wexpt_entry
_c3fWw:
	jmp *-16(%r13)
	.size be_s3bbe_entry, .-be_s3bbe_entry


==================== Asm code ====================
2018-03-16 15:57:54.521077782 UTC

.section .data.rel.ro
.align 8
.align 1
be_s3bbe_info:
	.quad	be_s3bbe_entry
	.quad	4294967296
	.quad	-4294967279
	.quad	u3g4V_srtd


==================== Asm code ====================
2018-03-16 15:57:54.521700074 UTC

.section .data.rel.ro
.align 8
.align 1
u3g4W_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:54.522401289 UTC

.section .text
.align 8
sat_s3bbh_entry:
_c3fWI:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3fWJ
_c3fWK:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3fWG_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
_c3fWJ:
	jmp *-16(%r13)
	.size sat_s3bbh_entry, .-sat_s3bbh_entry


==================== Asm code ====================
2018-03-16 15:57:54.523057507 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bbh_info:
	.quad	sat_s3bbh_entry
	.quad	2
	.quad	-4294967278
	.quad	u3g4W_srtd


==================== Asm code ====================
2018-03-16 15:57:54.52360937 UTC

.section .data.rel.ro
.align 8
.align 1
u3g4X_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:54.524245152 UTC

.section .text
.align 8
_c3fWG:
_c3fWG:
	leaq GHC.Float.$fRealFloatDouble5_closure(%rip),%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c3fWG, .-_c3fWG


==================== Asm code ====================
2018-03-16 15:57:54.524796493 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fWG_info:
	.quad	_c3fWG
	.quad	0
	.quad	-4294967266
	.quad	u3g4X_srtd


==================== Asm code ====================
2018-03-16 15:57:54.525437615 UTC

.section .data.rel.ro
.align 8
.align 1
u3g4Y_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:54.526169956 UTC

.section .text
.align 8
sat_s3bbl_entry:
_c3fWU:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3fWV
_c3fWW:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq GHC.Float.$fRealFloatDouble5_closure(%rip),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
_c3fWV:
	jmp *-16(%r13)
	.size sat_s3bbl_entry, .-sat_s3bbl_entry


==================== Asm code ====================
2018-03-16 15:57:54.526770059 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bbl_info:
	.quad	sat_s3bbl_entry
	.quad	1
	.quad	-4294967280
	.quad	u3g4Y_srtd


==================== Asm code ====================
2018-03-16 15:57:54.527357902 UTC

.section .data.rel.ro
.align 8
.align 1
u3g4Z_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:54.528118909 UTC

.section .text
.align 8
sat_s3bbk_entry:
_c3fX3:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3fX7
_c3fX8:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3fX1_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
_c3fX7:
	jmp *-16(%r13)
	.size sat_s3bbk_entry, .-sat_s3bbk_entry


==================== Asm code ====================
2018-03-16 15:57:54.528793854 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bbk_info:
	.quad	sat_s3bbk_entry
	.quad	2
	.quad	-4294967278
	.quad	u3g4Z_srtd


==================== Asm code ====================
2018-03-16 15:57:54.530282914 UTC

.section .data.rel.ro
.align 8
.align 1
u3g50_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:54.53095291 UTC

.section .text
.align 8
_c3fX1:
_c3fX1:
	leaq block_c3fX6_info(%rip),%rax
	movq %rax,(%rbp)
	leaq GHC.Float.$fRealFloatDouble5_closure(%rip),%rsi
	movq %rbx,%r14
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c3fX1, .-_c3fX1


==================== Asm code ====================
2018-03-16 15:57:54.531534513 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fX1_info:
	.quad	_c3fX1
	.quad	0
	.quad	-4294967266
	.quad	u3g50_srtd


==================== Asm code ====================
2018-03-16 15:57:54.532070553 UTC

.section .data.rel.ro
.align 8
.align 1
u3g51_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:54.532704739 UTC

.section .text
.align 8
_c3fX6:
_c3fX6:
	leaq GHC.Float.$fRealFloatDouble5_closure(%rip),%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c3fX6, .-_c3fX6


==================== Asm code ====================
2018-03-16 15:57:54.533331896 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fX6_info:
	.quad	_c3fX6
	.quad	0
	.quad	-4294967266
	.quad	u3g51_srtd


==================== Asm code ====================
2018-03-16 15:57:54.533815072 UTC

.section .data.rel.ro
.align 8
.align 1
u3g52_srtd:
	.quad	S3bQP_srt+552
	.quad	65
	.quad	-4609433668857888767
	.quad	1


==================== Asm code ====================
2018-03-16 15:57:54.534619577 UTC

.section .text
.align 8
ds2_s3baU_entry:
_c3fXe:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c3fXf
_c3fXg:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3fV9_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c3fV9
_c3fVa:
	movq (%rbx),%rax
	jmp *(%rax)
_c3fXf:
	jmp *-16(%r13)
	.size ds2_s3baU_entry, .-ds2_s3baU_entry


==================== Asm code ====================
2018-03-16 15:57:54.535291199 UTC

.section .data.rel.ro
.align 8
.align 1
ds2_s3baU_info:
	.quad	ds2_s3baU_entry
	.quad	2
	.quad	-4294967278
	.quad	u3g52_srtd


==================== Asm code ====================
2018-03-16 15:57:54.535864375 UTC

.section .data.rel.ro
.align 8
.align 1
u3g53_srtd:
	.quad	S3bQP_srt+552
	.quad	65
	.quad	-4609433668857888767
	.quad	1


==================== Asm code ====================
2018-03-16 15:57:54.536479152 UTC

.section .text
.align 8
_c3fV9:
_c3fV9:
	leaq block_c3fVe_info(%rip),%rax
	movq %rax,(%rbp)
	movq 15(%rbx),%rbx
	testb $7,%bl
	jne _c3fVe
_c3fVf:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3fV9, .-_c3fV9


==================== Asm code ====================
2018-03-16 15:57:54.537098895 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fV9_info:
	.quad	_c3fV9
	.quad	1
	.quad	-4294967266
	.quad	u3g53_srtd


==================== Asm code ====================
2018-03-16 15:57:54.537711247 UTC

.section .data.rel.ro
.align 8
.align 1
u3g54_srtd:
	.quad	S3bQP_srt+552
	.quad	65
	.quad	-4609433668857888767
	.quad	1


==================== Asm code ====================
2018-03-16 15:57:54.538665508 UTC

.section .text
.align 8
_c3fVe:
_c3fVe:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3fXk
_c3fXj:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	testq %rbx,%rbx
	jl _c3fXC
_c3fXD:
	leaq be_s3bbe_info(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rbx,(%r12)
	leaq block_c3fWy_info(%rip),%rbx
	movq %rbx,-8(%rbp)
	leaq lvl9_r2UqH_closure(%rip),%rsi
	movq %rax,%r14
	leaq -16(%r12),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
_c3fXC:
	cmpq $-149,%rbx
	jle _c3fXq
_c3fXr:
	addq $-24,%r12
	leaq block_c3fVR_info(%rip),%rcx
	movq %rcx,-8(%rbp)
	leaq lvl9_r2UqH_closure(%rip),%rsi
	movq %rax,%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
_c3fXq:
	addq $-24,%r12
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp _c3fVp
_c3fXk:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3fVe, .-_c3fVe


==================== Asm code ====================
2018-03-16 15:57:54.539432389 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fVe_info:
	.quad	_c3fVe
	.quad	1
	.quad	-4294967266
	.quad	u3g54_srtd


==================== Asm code ====================
2018-03-16 15:57:54.540003026 UTC

.section .data.rel.ro
.align 8
.align 1
u3g55_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4613938367996887041


==================== Asm code ====================
2018-03-16 15:57:54.540812034 UTC

.section .text
.align 8
_c3fVR:
_c3fVR:
	cmpq $1,%rbx
	je _c3fXx
	jmp _c3fVp
_c3fXA:
	movq $88,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
_c3fXx:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c3fXA
_c3fXz:
	leaq sat_s3bbd_info(%rip),%rax
	movq %rax,-80(%r12)
	movq 8(%rbp),%rax
	movq %rax,-64(%r12)
	leaq sat_s3bb9_info(%rip),%rax
	movq %rax,-56(%r12)
	movq 16(%rbp),%rax
	movq %rax,-40(%r12)
	movq (,,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-32(%r12)
	leaq -56(%r12),%rax
	movq %rax,-24(%r12)
	leaq -80(%r12),%rax
	movq %rax,-16(%r12)
	leaq GHC.Float.$fRealFloatDouble5_closure(%rip),%rax
	movq %rax,-8(%r12)
	leaq GHC.Float.$fRealDouble1_closure(%rip),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3fVR, .-_c3fVR


==================== Asm code ====================
2018-03-16 15:57:54.541870783 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fVR_info:
	.quad	_c3fVR
	.quad	66
	.quad	-4294967266
	.quad	u3g55_srtd


==================== Asm code ====================
2018-03-16 15:57:54.542409974 UTC

.section .data.rel.ro
.align 8
.align 1
u3g56_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4613938367996887041


==================== Asm code ====================
2018-03-16 15:57:54.543207616 UTC

.section .text
.align 8
_c3fVp:
_c3fVp:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c3fXo
_c3fXn:
	leaq sat_s3bb5_info(%rip),%rax
	movq %rax,-80(%r12)
	movq 8(%rbp),%rax
	movq %rax,-64(%r12)
	leaq sat_s3bb2_info(%rip),%rax
	movq %rax,-56(%r12)
	movq 16(%rbp),%rax
	movq %rax,-40(%r12)
	movq (,,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-32(%r12)
	leaq -56(%r12),%rax
	movq %rax,-24(%r12)
	leaq -80(%r12),%rax
	movq %rax,-16(%r12)
	leaq GHC.Float.$fRealDouble1_closure(%rip),%rax
	movq %rax,-8(%r12)
	leaq GHC.Float.$fRealDouble1_closure(%rip),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3fXo:
	movq $88,904(%r13)
	leaq block_c3fVp_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c3fVp, .-_c3fVp


==================== Asm code ====================
2018-03-16 15:57:54.54386974 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fVp_info:
	.quad	_c3fVp
	.quad	66
	.quad	-4294967266
	.quad	u3g56_srtd


==================== Asm code ====================
2018-03-16 15:57:54.544368097 UTC

.section .data.rel.ro
.align 8
.align 1
u3g57_srtd:
	.quad	S3bQP_srt+552
	.quad	65
	.quad	4611686018427387905
	.quad	1


==================== Asm code ====================
2018-03-16 15:57:54.54533918 UTC

.section .text
.align 8
_c3fWy:
_c3fWy:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rcx
	cmpq $1,%rbx
	je _c3fXL
_c3fXG:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c3fXJ
_c3fXI:
	leaq sat_s3bbh_info(%rip),%rbx
	movq %rbx,-64(%r12)
	movq %rcx,-48(%r12)
	movq %rax,-40(%r12)
	movq (,,,)_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-32(%r12)
	leaq -64(%r12),%rbx
	movq %rbx,-24(%r12)
	leaq GHC.Float.$fRealFloatDouble5_closure(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,-8(%r12)
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3fXO:
	movq $96,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
_c3fXL:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _c3fXO
_c3fXN:
	leaq sat_s3bbl_info(%rip),%rbx
	movq %rbx,-88(%r12)
	movq %rax,-72(%r12)
	leaq sat_s3bbk_info(%rip),%rbx
	movq %rbx,-64(%r12)
	movq %rcx,-48(%r12)
	movq %rax,-40(%r12)
	movq (,,,)_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-32(%r12)
	leaq -64(%r12),%rbx
	movq %rbx,-24(%r12)
	leaq lvl10_r2UqI_closure(%rip),%rbx
	movq %rbx,-16(%r12)
	leaq -88(%r12),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3fXJ:
	movq $72,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c3fWy, .-_c3fWy


==================== Asm code ====================
2018-03-16 15:57:54.546642004 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fWy_info:
	.quad	_c3fWy
	.quad	2
	.quad	-4294967266
	.quad	u3g57_srtd


==================== Asm code ====================
2018-03-16 15:57:54.547207079 UTC

.section .data.rel.ro
.align 8
.align 1
u3g58_srtd:
	.quad	S3bQP_srt+688
	.quad	46
	.quad	35201572929793


==================== Asm code ====================
2018-03-16 15:57:54.548059471 UTC

.section .text
.align 8
k_s3bbE_entry:
_c3fY3:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _c3fY4
_c3fY5:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3fY1_info(%rip),%rax
	movq %rax,-64(%rbp)
	movq 64(%rbx),%rsi
	movq 56(%rbx),%r14
	movq 16(%rbx),%rax
	movq %rax,-56(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-48(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 48(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-64,%rbp
	jmp *GHC.Integer.Type.plusInteger_entry@gotpcrel(%rip)
_c3fY4:
	jmp *-16(%r13)
	.size k_s3bbE_entry, .-k_s3bbE_entry


==================== Asm code ====================
2018-03-16 15:57:54.548783626 UTC

.section .data.rel.ro
.align 8
.align 1
k_s3bbE_info:
	.quad	k_s3bbE_entry
	.quad	7
	.quad	-4294967281
	.quad	u3g58_srtd


==================== Asm code ====================
2018-03-16 15:57:54.549364671 UTC

.section .data.rel.ro
.align 8
.align 1
u3g59_srtd:
	.quad	S3bQP_srt+688
	.quad	46
	.quad	35201572929793


==================== Asm code ====================
2018-03-16 15:57:54.550073423 UTC

.section .text
.align 8
_c3fY1:
_c3fY1:
	leaq block_c3fYa_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq GHC.Float.expts4_closure(%rip),%rsi
	movq 8(%rbp),%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
	.size _c3fY1, .-_c3fY1


==================== Asm code ====================
2018-03-16 15:57:54.550622894 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fY1_info:
	.quad	_c3fY1
	.quad	5
	.quad	-4294967266
	.quad	u3g59_srtd


==================== Asm code ====================
2018-03-16 15:57:54.551192799 UTC

.section .data.rel.ro
.align 8
.align 1
u3g5a_srtd:
	.quad	S3bQP_srt+688
	.quad	46
	.quad	35201572929537


==================== Asm code ====================
2018-03-16 15:57:54.551951286 UTC

.section .text
.align 8
_c3fYa:
_c3fYa:
	cmpq $1,%rbx
	je _c3g0t
_c3fZJ:
	leaq block_c3fZf_info(%rip),%rax
	movq %rax,(%rbp)
	leaq GHC.Float.$fRealDouble1_closure(%rip),%rsi
	movq 40(%rbp),%r14
	jmp *GHC.Integer.Type.plusInteger_entry@gotpcrel(%rip)
_c3g0t:
	leaq block_c3g0m_info(%rip),%rax
	movq %rax,(%rbp)
	movq 24(%rbp),%rbx
	testb $7,%bl
	jne _c3g0m
_c3g0n:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3fYa, .-_c3fYa


==================== Asm code ====================
2018-03-16 15:57:54.552637292 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fYa_info:
	.quad	_c3fYa
	.quad	6
	.quad	-4294967266
	.quad	u3g5a_srtd


==================== Asm code ====================
2018-03-16 15:57:54.55363751 UTC

.section .text
.align 8
_c3g0m:
_c3g0m:
	leaq block_c3g0r_info(%rip),%rax
	movq %rax,(%rbp)
	movq 15(%rbx),%rbx
	testb $7,%bl
	jne _c3g0r
_c3g0v:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3g0m, .-_c3g0m


==================== Asm code ====================
2018-03-16 15:57:54.554200857 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3g0m_info:
	.quad	_c3g0m
	.quad	1798
	.quad	8800387989534
	.quad	S3bQP_srt+960


==================== Asm code ====================
2018-03-16 15:57:54.554963793 UTC

.section .text
.align 8
_c3g0r:
_c3g0r:
	movq 7(%rbx),%rax
	addq $23,%rax
	testq %rax,%rax
	jl _c3g0G
_c3g0H:
	movl $28738,%ebx
	imulq $8651,%rax
	cqto
	idivq %rbx
	incq %rax
	movq %rax,40(%rbp)
	addq $8,%rbp
	jmp _c3fYd
_c3g0G:
	movl $28738,%ebx
	imulq $8651,%rax
	cqto
	idivq %rbx
	movq %rax,40(%rbp)
	addq $8,%rbp
	jmp _c3fYd
	.size _c3g0r, .-_c3g0r


==================== Asm code ====================
2018-03-16 15:57:54.555616063 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3g0r_info:
	.quad	_c3g0r
	.quad	1798
	.quad	8800387989534
	.quad	S3bQP_srt+960


==================== Asm code ====================
2018-03-16 15:57:54.556159239 UTC

.section .data.rel.ro
.align 8
.align 1
u3g5b_srtd:
	.quad	S3bQP_srt+688
	.quad	46
	.quad	35201551958017


==================== Asm code ====================
2018-03-16 15:57:54.556826705 UTC

.section .text
.align 8
_c3fZf:
_c3fZf:
	leaq block_c3fZj_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp *GHC.Integer.Type.floatFromInteger_entry@gotpcrel(%rip)
	.size _c3fZf, .-_c3fZf


==================== Asm code ====================
2018-03-16 15:57:54.557460662 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fZf_info:
	.quad	_c3fZf
	.quad	1286
	.quad	-4294967266
	.quad	u3g5b_srtd


==================== Asm code ====================
2018-03-16 15:57:54.558010109 UTC

.section .data.rel.ro
.align 8
.align 1
u3g5c_srtd:
	.quad	S3bQP_srt+688
	.quad	46
	.quad	35201551958017


==================== Asm code ====================
2018-03-16 15:57:54.55882303 UTC

.section .text
.align 8
_c3fZj:
_c3fZj:
	movq 32(%rbp),%rax
	subq $8,%rsp
	movss %xmm1,%xmm0
	movq %rax,%rbx
	movl $1,%eax
	call logf@plt
	addq $8,%rsp
	leaq block_c3fZr_info(%rip),%rax
	movq %rax,(%rbp)
	movss %xmm0,40(%rbp)
	testb $7,%bl
	jne _c3fZr
_c3fZs:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3fZj, .-_c3fZj


==================== Asm code ====================
2018-03-16 15:57:54.559389826 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fZj_info:
	.quad	_c3fZj
	.quad	1286
	.quad	-4294967266
	.quad	u3g5c_srtd


==================== Asm code ====================
2018-03-16 15:57:54.55998528 UTC

.section .data.rel.ro
.align 8
.align 1
u3g5d_srtd:
	.quad	S3bQP_srt+688
	.quad	46
	.quad	35201551958017


==================== Asm code ====================
2018-03-16 15:57:54.560578663 UTC

.section .text
.align 8
_c3fZr:
_c3fZr:
	leaq block_c3fZw_info(%rip),%rax
	movq %rax,(%rbp)
	movq 15(%rbx),%rbx
	testb $7,%bl
	jne _c3fZw
_c3fZx:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3fZr, .-_c3fZr


==================== Asm code ====================
2018-03-16 15:57:54.561173236 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fZr_info:
	.quad	_c3fZr
	.quad	1798
	.quad	-4294967266
	.quad	u3g5d_srtd


==================== Asm code ====================
2018-03-16 15:57:54.561804616 UTC

.section .data.rel.ro
.align 8
.align 1
u3g5e_srtd:
	.quad	S3bQP_srt+688
	.quad	46
	.quad	35201551958017


==================== Asm code ====================
2018-03-16 15:57:54.562509523 UTC

.section .text
.align 8
_c3fZw:
_c3fZw:
	leaq block_c3fZB_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	leaq lvl5_r2UqD_closure(%rip),%rbx
	movq %rax,32(%rbp)
	testb $7,%bl
	jne _c3fZB
_c3fZC:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3fZw, .-_c3fZw


==================== Asm code ====================
2018-03-16 15:57:54.563104363 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fZw_info:
	.quad	_c3fZw
	.quad	1798
	.quad	-4294967266
	.quad	u3g5e_srtd


==================== Asm code ====================
2018-03-16 15:57:54.563741273 UTC

.section .text
.align 8
_c3fZB:
_c3fZB:
	leaq block_c3fZG_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%r14
	movss 7(%rbx),%xmm0
	movss %xmm0,24(%rbp)
	jmp *GHC.Integer.Type.floatFromInteger_entry@gotpcrel(%rip)
	.size _c3fZB, .-_c3fZB


==================== Asm code ====================
2018-03-16 15:57:54.564363751 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fZB_info:
	.quad	_c3fZB
	.quad	1798
	.quad	8800387989534
	.quad	S3bQP_srt+960


==================== Asm code ====================
2018-03-16 15:57:54.565312344 UTC

.section .text
.align 8
_c3fZG:
_c3fZG:
	movss 40(%rbp),%xmm0
	movq 32(%rbp),%rax
	movss 24(%rbp),%xmm2
	subq $8,%rsp
	movsd %xmm0,%xmm3
	movss %xmm1,%xmm0
	movq %rax,%rbx
	movl $1,%eax
	movsd %xmm3,72(%rsp)
	movsd %xmm2,80(%rsp)
	call logf@plt
	addq $8,%rsp
	cvtsi2ssq %rbx,%xmm1
	movsd 72(%rsp),%xmm2
	mulss %xmm2,%xmm1
	movsd 64(%rsp),%xmm2
	addss %xmm1,%xmm2
	divss %xmm0,%xmm2
	cvttss2siq %xmm2,%rax
	cvtsi2ssq %rax,%xmm0
	ucomiss %xmm2,%xmm0
	jp _c3g0i
	jb _c3g0j
_c3g0i:
	movq %rax,40(%rbp)
	addq $8,%rbp
	jmp _c3fYd
_c3g0j:
	incq %rax
	movq %rax,40(%rbp)
	addq $8,%rbp
	jmp _c3fYd
	.size _c3fZG, .-_c3fZG


==================== Asm code ====================
2018-03-16 15:57:54.566005669 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fZG_info:
	.quad	_c3fZG
	.quad	1798
	.quad	8800387989534
	.quad	S3bQP_srt+960


==================== Asm code ====================
2018-03-16 15:57:54.566737875 UTC

.section .text
.align 8
_c3fYd:
_c3fYd:
	movq 8(%rbp),%rax
	movq 32(%rbp),%rbx
	testq %rbx,%rbx
	jl _c3fYs
_c3fYS:
	leaq block_c3fYN_info(%rip),%rcx
	movq %rcx,-8(%rbp)
	movq %rbx,%rsi
	movq %rax,%r14
	addq $-8,%rbp
	jmp GHC.Float.$wexpt_entry
_c3fYs:
	leaq block_c3fYm_info(%rip),%rcx
	movq %rcx,-8(%rbp)
	movq %rbx,%rsi
	negq %rsi
	movq %rax,%r14
	addq $-8,%rbp
	jmp GHC.Float.$wexpt_entry
	.size _c3fYd, .-_c3fYd


==================== Asm code ====================
2018-03-16 15:57:54.567426236 UTC

.section .text
.align 8
_c3fYm:
_c3fYm:
	leaq block_c3fYq_info(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c3fYm, .-_c3fYm


==================== Asm code ====================
2018-03-16 15:57:54.568042272 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fYm_info:
	.quad	_c3fYm
	.quad	1798
	.quad	8800387989534
	.quad	S3bQP_srt+960


==================== Asm code ====================
2018-03-16 15:57:54.568678741 UTC

.section .text
.align 8
_c3fYq:
_c3fYq:
	leaq block_c3fYx_info(%rip),%rax
	movq %rax,(%rbp)
	movq 48(%rbp),%rsi
	movq %rbx,%r14
	jmp *GHC.Integer.Type.leInteger#_entry@gotpcrel(%rip)
	.size _c3fYq, .-_c3fYq


==================== Asm code ====================
2018-03-16 15:57:54.569687021 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fYq_info:
	.quad	_c3fYq
	.quad	1798
	.quad	8800387989534
	.quad	S3bQP_srt+960


==================== Asm code ====================
2018-03-16 15:57:54.570455599 UTC

.section .text
.align 8
_c3fYx:
_c3fYx:
	movq 40(%rbp),%rax
	cmpq $1,%rbx
	je _c3fYI
_c3fYE:
	incq %rax
	movq %rax,40(%rbp)
	addq $8,%rbp
	jmp _c3fYd
_c3fYL:
	movq $16,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
_c3fYI:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3fYL
_c3fYK:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $56,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3fYx, .-_c3fYx


==================== Asm code ====================
2018-03-16 15:57:54.571142055 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fYx_info:
	.quad	_c3fYx
	.quad	1798
	.quad	8800387989534
	.quad	S3bQP_srt+960


==================== Asm code ====================
2018-03-16 15:57:54.571756578 UTC

.section .text
.align 8
_c3fYN:
_c3fYN:
	leaq block_c3fYR_info(%rip),%rax
	movq %rax,(%rbp)
	movq 48(%rbp),%rsi
	movq %rbx,%r14
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c3fYN, .-_c3fYN


==================== Asm code ====================
2018-03-16 15:57:54.572308381 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fYN_info:
	.quad	_c3fYN
	.quad	1798
	.quad	8800387989534
	.quad	S3bQP_srt+960


==================== Asm code ====================
2018-03-16 15:57:54.572960488 UTC

.section .text
.align 8
_c3fYR:
_c3fYR:
	leaq block_c3fYX_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rsi
	movq 8(%rbp),%r14
	jmp *GHC.Integer.Type.leInteger#_entry@gotpcrel(%rip)
	.size _c3fYR, .-_c3fYR


==================== Asm code ====================
2018-03-16 15:57:54.573631077 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fYR_info:
	.quad	_c3fYR
	.quad	1798
	.quad	8800387989534
	.quad	S3bQP_srt+960


==================== Asm code ====================
2018-03-16 15:57:54.574402762 UTC

.section .text
.align 8
_c3fYX:
_c3fYX:
	movq 40(%rbp),%rax
	cmpq $1,%rbx
	je _c3fZ8
_c3fZ4:
	incq %rax
	movq %rax,40(%rbp)
	addq $8,%rbp
	jmp _c3fYd
_c3fZb:
	movq $16,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
_c3fZ8:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3fZb
_c3fZa:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $56,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3fYX, .-_c3fYX


==================== Asm code ====================
2018-03-16 15:57:54.575096851 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3fYX_info:
	.quad	_c3fYX
	.quad	1798
	.quad	8800387989534
	.quad	S3bQP_srt+960


==================== Asm code ====================
2018-03-16 15:57:54.576347561 UTC

.section .text
.align 8
sat_s3bcJ_entry:
_c3g27:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3g28
_c3g29:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq GHC.Float.$fRealDouble1_closure(%rip),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Integer.Type.plusInteger_entry@gotpcrel(%rip)
_c3g28:
	jmp *-16(%r13)
	.size sat_s3bcJ_entry, .-sat_s3bcJ_entry


==================== Asm code ====================
2018-03-16 15:57:54.577049777 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bcJ_info:
	.quad	sat_s3bcJ_entry
	.quad	1
	.quad	21474836496
	.quad	S3bQP_srt+864


==================== Asm code ====================
2018-03-16 15:57:54.577941403 UTC

.section .text
.align 8
sat_s3bcN_entry:
_c3g2r:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3g2s
_c3g2t:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq GHC.Float.$fRealDouble1_closure(%rip),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Integer.Type.plusInteger_entry@gotpcrel(%rip)
_c3g2s:
	jmp *-16(%r13)
	.size sat_s3bcN_entry, .-sat_s3bcN_entry


==================== Asm code ====================
2018-03-16 15:57:54.578592909 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bcN_info:
	.quad	sat_s3bcN_entry
	.quad	1
	.quad	21474836496
	.quad	S3bQP_srt+864


==================== Asm code ====================
2018-03-16 15:57:54.579137744 UTC

.section .data.rel.ro
.align 8
.align 1
u3g5f_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611689901077823489


==================== Asm code ====================
2018-03-16 15:57:54.579823724 UTC

.section .text
.align 8
gen_s3bcr_entry:
_c3g2x:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _c3g2y
_u3g3f:
	movq %rbx,-48(%rbp)
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-48,%rbp
	jmp _c3g1s
_c3g2y:
	jmp *-8(%r13)
	.size gen_s3bcr_entry, .-gen_s3bcr_entry


==================== Asm code ====================
2018-03-16 15:57:54.580450437 UTC

.section .data.rel.ro
.align 8
.align 1
gen_s3bcr_info:
	.quad	gen_s3bcr_entry
	.quad	1
	.quad	-4294967287
	.quad	21474836505
	.quad	u3g5f_srtd


==================== Asm code ====================
2018-03-16 15:57:54.581155595 UTC

.section .text
.align 8
_c3g1s:
_c3g1s:
	movq (%rbp),%rax
	movq 3(%rax),%rax
	leaq block_c3g1v_info(%rip),%rbx
	movq %rbx,-16(%rbp)
	leaq GHC.Float.rationalToDouble5_closure(%rip),%rsi
	movq 24(%rbp),%r14
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
	.size _c3g1s, .-_c3g1s


==================== Asm code ====================
2018-03-16 15:57:54.58220624 UTC

.section .data.rel.ro
.align 8
.align 1
u3g5g_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611689901077823489


==================== Asm code ====================
2018-03-16 15:57:54.582904785 UTC

.section .text
.align 8
_c3g1v:
_c3g1v:
	cmpq $1,%rbx
	je _c3g2w
_c3g2v:
	leaq block_c3g1z_info(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%rsi
	movq 32(%rbp),%r14
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
_c3g2w:
	movq GHC.Real.divZeroError_closure@gotpcrel(%rip),%rbx
	addq $64,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c3g1v, .-_c3g1v


==================== Asm code ====================
2018-03-16 15:57:54.583540206 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3g1v_info:
	.quad	_c3g1v
	.quad	7
	.quad	-4294967266
	.quad	u3g5g_srtd


==================== Asm code ====================
2018-03-16 15:57:54.584099075 UTC

.section .data.rel.ro
.align 8
.align 1
u3g5h_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611689901077823489


==================== Asm code ====================
2018-03-16 15:57:54.584728835 UTC

.section .text
.align 8
_c3g1z:
_c3g1z:
	leaq block_c3g1D_info(%rip),%rax
	movq %rax,(%rbp)
	movq 40(%rbp),%rsi
	movq %rbx,%r14
	jmp *GHC.Integer.Type.quotRemInteger_entry@gotpcrel(%rip)
	.size _c3g1z, .-_c3g1z


==================== Asm code ====================
2018-03-16 15:57:54.585378198 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3g1z_info:
	.quad	_c3g1z
	.quad	519
	.quad	-4294967266
	.quad	u3g5h_srtd


==================== Asm code ====================
2018-03-16 15:57:54.585948402 UTC

.section .data.rel.ro
.align 8
.align 1
u3g5i_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611689901077823489


==================== Asm code ====================
2018-03-16 15:57:54.586640315 UTC

.section .text
.align 8
_c3g1D:
_c3g1D:
	leaq block_c3g1F_info(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%rsi
	movq %r14,%rax
	movq 48(%rbp),%r14
	movq %rax,32(%rbp)
	movq %rbx,48(%rbp)
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c3g1D, .-_c3g1D


==================== Asm code ====================
2018-03-16 15:57:54.58726152 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3g1D_info:
	.quad	_c3g1D
	.quad	519
	.quad	-4294967266
	.quad	u3g5i_srtd


==================== Asm code ====================
2018-03-16 15:57:54.587797177 UTC

.section .data.rel.ro
.align 8
.align 1
u3g5j_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611689901077823489


==================== Asm code ====================
2018-03-16 15:57:54.588523634 UTC

.section .text
.align 8
_c3g1F:
_c3g1F:
	leaq block_c3g1J_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rsi
	movq 32(%rbp),%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Integer.Type.plusInteger_entry@gotpcrel(%rip)
	.size _c3g1F, .-_c3g1F


==================== Asm code ====================
2018-03-16 15:57:54.589147129 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3g1F_info:
	.quad	_c3g1F
	.quad	7
	.quad	-4294967266
	.quad	u3g5j_srtd


==================== Asm code ====================
2018-03-16 15:57:54.589730617 UTC

.section .data.rel.ro
.align 8
.align 1
u3g5k_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611689901077823489


==================== Asm code ====================
2018-03-16 15:57:54.590340022 UTC

.section .text
.align 8
_c3g1J:
_c3g1J:
	leaq block_c3g1N_info(%rip),%rax
	movq %rax,(%rbp)
	movq 48(%rbp),%rsi
	movq %rbx,%r14
	jmp *GHC.Integer.Type.gtInteger#_entry@gotpcrel(%rip)
	.size _c3g1J, .-_c3g1J


==================== Asm code ====================
2018-03-16 15:57:54.590920971 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3g1J_info:
	.quad	_c3g1J
	.quad	8
	.quad	-4294967266
	.quad	u3g5k_srtd


==================== Asm code ====================
2018-03-16 15:57:54.591455175 UTC

.section .data.rel.ro
.align 8
.align 1
u3g5l_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611689901077823489


==================== Asm code ====================
2018-03-16 15:57:54.592114159 UTC

.section .text
.align 8
_c3g1N:
_c3g1N:
	leaq block_c3g1R_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%rsi
	movq 64(%rbp),%r14
	movq %rbx,64(%rbp)
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c3g1N, .-_c3g1N


==================== Asm code ====================
2018-03-16 15:57:54.592727742 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3g1N_info:
	.quad	_c3g1N
	.quad	8
	.quad	-4294967266
	.quad	u3g5l_srtd


==================== Asm code ====================
2018-03-16 15:57:54.593920896 UTC

.section .data.rel.ro
.align 8
.align 1
u3g5m_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611689901077823489


==================== Asm code ====================
2018-03-16 15:57:54.594517845 UTC

.section .text
.align 8
_c3g1R:
_c3g1R:
	leaq block_c3g1V_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rsi
	movq 40(%rbp),%r14
	movq %rbx,16(%rbp)
	jmp *GHC.Integer.Type.ltInteger#_entry@gotpcrel(%rip)
	.size _c3g1R, .-_c3g1R


==================== Asm code ====================
2018-03-16 15:57:54.595085035 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3g1R_info:
	.quad	_c3g1R
	.quad	8328
	.quad	-4294967266
	.quad	u3g5m_srtd


==================== Asm code ====================
2018-03-16 15:57:54.59563509 UTC

.section .data.rel.ro
.align 8
.align 1
u3g5n_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611689901077823489


==================== Asm code ====================
2018-03-16 15:57:54.596717043 UTC

.section .text
.align 8
_c3g1V:
_c3g1V:
	movq 32(%rbp),%rax
	movq 56(%rbp),%rcx
	movq 40(%rbp),%rdx
	movq 64(%rbp),%rsi
	cmpq $1,%rbx
	je _c3g2Q
_c3g2I:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c3g2L
_c3g2K:
	cmpq $1,%rsi
	je _c3g2P
_c3g2N:
	movq :_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rax,-24(%r12)
	leaq -38(%r12),%rax
	addq $-24,%r12
	movq %rax,32(%rbp)
	movq %rdx,40(%rbp)
	movq 48(%rbp),%rax
	movq %rax,48(%rbp)
	movq 8(%rbp),%rax
	movq %rax,56(%rbp)
	movq 16(%rbp),%rax
	movq %rax,64(%rbp)
	addq $24,%rbp
	jmp _c3g1s
_c3g2X:
	addq $-24,%r12
	leaq block_c3g2f_info(%rip),%rax
	movq %rax,24(%rbp)
	leaq GHC.Float.$fRealFloatDouble5_closure(%rip),%rsi
	movq %rdx,%r14
	addq $24,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
_c3g2Q:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3g2T
_c3g2S:
	cmpq $1,%rsi
	je _c3g2X
_c3g2W:
	movq :_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $72,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3g2T:
	movq $24,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
_c3g2P:
	leaq sat_s3bcJ_info(%rip),%rbx
	movq %rbx,-40(%r12)
	movq %rcx,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	leaq -40(%r12),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $72,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3g2L:
	movq $48,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c3g1V, .-_c3g1V


==================== Asm code ====================
2018-03-16 15:57:54.597731214 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3g1V_info:
	.quad	_c3g1V
	.quad	8200
	.quad	-4294967266
	.quad	u3g5n_srtd


==================== Asm code ====================
2018-03-16 15:57:54.598377267 UTC

.section .text
.align 8
_c3g2f:
_c3g2f:
	leaq block_c3g2j_info(%rip),%rax
	movq %rax,(%rbp)
	movq 24(%rbp),%rsi
	movq %rbx,%r14
	jmp *GHC.Integer.Type.ltInteger#_entry@gotpcrel(%rip)
	.size _c3g2f, .-_c3g2f


==================== Asm code ====================
2018-03-16 15:57:54.598926923 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3g2f_info:
	.quad	_c3g2f
	.quad	1157
	.quad	21474836510
	.quad	S3bQP_srt+864


==================== Asm code ====================
2018-03-16 15:57:54.599770028 UTC

.section .text
.align 8
_c3g2j:
_c3g2j:
	movq 8(%rbp),%rax
	movq 32(%rbp),%rcx
	cmpq $1,%rbx
	je _c3g38
_c3g31:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c3g34
_c3g33:
	leaq sat_s3bcN_info(%rip),%rbx
	movq %rbx,-40(%r12)
	movq %rcx,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	leaq -40(%r12),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3g3b:
	movq $24,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
_c3g38:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3g3b
_c3g3a:
	movq :_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3g34:
	movq $48,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c3g2j, .-_c3g2j


==================== Asm code ====================
2018-03-16 15:57:54.60050652 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3g2j_info:
	.quad	_c3g2j
	.quad	1413
	.quad	21474836510
	.quad	S3bQP_srt+864


==================== Asm code ====================
2018-03-16 15:57:54.601030024 UTC

.section .data.rel.ro
.align 8
.align 1
u3g5o_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4613941700891508737


==================== Asm code ====================
2018-03-16 15:57:54.601898497 UTC

.section .text
.align 8
sat_s3bdb_entry:
_c3g3j:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _c3g3k
_c3g3l:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3g1l_info(%rip),%rax
	movq %rax,-64(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%rbx
	movq %rax,-56(%rbp)
	movq %rcx,-48(%rbp)
	movq %rdx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	addq $-64,%rbp
	testb $7,%bl
	jne _c3g1l
_c3g1m:
	movq (%rbx),%rax
	jmp *(%rax)
_c3g3k:
	jmp *-16(%r13)
	.size sat_s3bdb_entry, .-sat_s3bdb_entry


==================== Asm code ====================
2018-03-16 15:57:54.602606557 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bdb_info:
	.quad	sat_s3bdb_entry
	.quad	6
	.quad	-4294967281
	.quad	u3g5o_srtd


==================== Asm code ====================
2018-03-16 15:57:54.603210506 UTC

.section .data.rel.ro
.align 8
.align 1
u3g5p_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4613941700891508737


==================== Asm code ====================
2018-03-16 15:57:54.604057382 UTC

.section .text
.align 8
_c3g1l:
_c3g1l:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3g3o
_c3g3n:
	movq 7(%rbx),%rax
	leaq gen_s3bcr_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,(%r12)
	movq 16(%rbp),%rbx
	leaq -3(%r12),%rcx
	testq %rax,%rax
	jl _c3g3W
_c3g4q:
	leaq block_c3g48_info(%rip),%rdx
	movq %rdx,-8(%rbp)
	movq %rax,(%rbp)
	movq %rcx,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c3g48
_c3g49:
	movq (%rbx),%rax
	jmp *(%rax)
_c3g3W:
	leaq block_c3g3s_info(%rip),%rdx
	movq %rdx,-8(%rbp)
	movq %rax,(%rbp)
	movq %rcx,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c3g3s
_c3g3t:
	movq (%rbx),%rax
	jmp *(%rax)
_c3g3o:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3g1l, .-_c3g1l


==================== Asm code ====================
2018-03-16 15:57:54.604813519 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3g1l_info:
	.quad	_c3g1l
	.quad	5
	.quad	-4294967266
	.quad	u3g5p_srtd


==================== Asm code ====================
2018-03-16 15:57:54.606241445 UTC

.section .data.rel.ro
.align 8
.align 1
u3g5q_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4613941700891508737


==================== Asm code ====================
2018-03-16 15:57:54.606997584 UTC

.section .text
.align 8
_c3g3s:
_c3g3s:
	movq 8(%rbp),%rax
	negq %rax
	leaq block_c3g3A_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq 16(%rbp),%r14
	movq 31(%rbx),%rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp GHC.Float.$wexpt_entry
	.size _c3g3s, .-_c3g3s


==================== Asm code ====================
2018-03-16 15:57:54.607656978 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3g3s_info:
	.quad	_c3g3s
	.quad	70
	.quad	-4294967266
	.quad	u3g5q_srtd


==================== Asm code ====================
2018-03-16 15:57:54.608232381 UTC

.section .data.rel.ro
.align 8
.align 1
u3g5r_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611689901077823489


==================== Asm code ====================
2018-03-16 15:57:54.608871252 UTC

.section .text
.align 8
_c3g3A:
_c3g3A:
	leaq block_c3g3E_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rsi
	movq 8(%rbp),%r14
	movq %rbx,8(%rbp)
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c3g3A, .-_c3g3A


==================== Asm code ====================
2018-03-16 15:57:54.609491172 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3g3A_info:
	.quad	_c3g3A
	.quad	5
	.quad	-4294967266
	.quad	u3g5r_srtd


==================== Asm code ====================
2018-03-16 15:57:54.61006243 UTC

.section .data.rel.ro
.align 8
.align 1
u3g5s_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611689901077823489


==================== Asm code ====================
2018-03-16 15:57:54.610718185 UTC

.section .text
.align 8
_c3g3E:
_c3g3E:
	leaq block_c3g3I_info(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%rsi
	movq 40(%rbp),%r14
	movq %rbx,40(%rbp)
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c3g3E, .-_c3g3E


==================== Asm code ====================
2018-03-16 15:57:54.611316688 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3g3E_info:
	.quad	_c3g3E
	.quad	5
	.quad	-4294967266
	.quad	u3g5s_srtd


==================== Asm code ====================
2018-03-16 15:57:54.611890678 UTC

.section .data.rel.ro
.align 8
.align 1
u3g5t_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611689901077823489


==================== Asm code ====================
2018-03-16 15:57:54.612561357 UTC

.section .text
.align 8
_c3g3I:
_c3g3I:
	movq 8(%rbp),%rax
	leaq block_c3g3M_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq 32(%rbp),%r14
	movq %rbx,32(%rbp)
	addq $8,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c3g3I, .-_c3g3I


==================== Asm code ====================
2018-03-16 15:57:54.613193932 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3g3I_info:
	.quad	_c3g3I
	.quad	5
	.quad	-4294967266
	.quad	u3g5t_srtd


==================== Asm code ====================
2018-03-16 15:57:54.613824802 UTC

.section .data.rel.ro
.align 8
.align 1
u3g5u_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611689901077823489


==================== Asm code ====================
2018-03-16 15:57:54.614498713 UTC

.section .text
.align 8
_c3g3M:
_c3g3M:
	movq 32(%rbp),%rax
	leaq block_c3g3Q_info(%rip),%rcx
	movq %rcx,32(%rbp)
	movq %rax,%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq %rbx,%rsi
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r14
	movq 8(%rbp),%rbx
	addq $32,%rbp
	jmp gen_s3bcr_entry
	.size _c3g3M, .-_c3g3M


==================== Asm code ====================
2018-03-16 15:57:54.615130043 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3g3M_info:
	.quad	_c3g3M
	.quad	4
	.quad	-4294967266
	.quad	u3g5u_srtd


==================== Asm code ====================
2018-03-16 15:57:54.615777147 UTC

.section .text
.align 8
_c3g3Q:
_c3g3Q:
	leaq block_c3g3U_info(%rip),%rax
	movq %rax,(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rsi
	movq %rbx,%r14
	jmp *GHC.List.reverse1_entry@gotpcrel(%rip)
	.size _c3g3Q, .-_c3g3Q


==================== Asm code ====================
2018-03-16 15:57:54.616402349 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3g3Q_info:
	.quad	_c3g3Q
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:54.617067071 UTC

.section .text
.align 8
_c3g3U:
_c3g3U:
	movq %rbx,%rsi
	leaq lvl8_r2UqG_closure+1(%rip),%r14
	addq $8,%rbp
	jmp *GHC.Base.map_entry@gotpcrel(%rip)
	.size _c3g3U, .-_c3g3U


==================== Asm code ====================
2018-03-16 15:57:54.618101715 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3g3U_info:
	.quad	_c3g3U
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:54.61866756 UTC

.section .data.rel.ro
.align 8
.align 1
u3g5v_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4613941700891508737


==================== Asm code ====================
2018-03-16 15:57:54.61936678 UTC

.section .text
.align 8
_c3g48:
_c3g48:
	movq 8(%rbp),%rax
	leaq block_c3g4d_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq 16(%rbp),%r14
	movq 31(%rbx),%rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp GHC.Float.$wexpt_entry
	.size _c3g48, .-_c3g48


==================== Asm code ====================
2018-03-16 15:57:54.620011169 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3g48_info:
	.quad	_c3g48
	.quad	70
	.quad	-4294967266
	.quad	u3g5v_srtd


==================== Asm code ====================
2018-03-16 15:57:54.620583452 UTC

.section .data.rel.ro
.align 8
.align 1
u3g5w_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611689901077823489


==================== Asm code ====================
2018-03-16 15:57:54.621216431 UTC

.section .text
.align 8
_c3g4d:
_c3g4d:
	leaq block_c3g4h_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rsi
	movq 24(%rbp),%r14
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c3g4d, .-_c3g4d


==================== Asm code ====================
2018-03-16 15:57:54.621865049 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3g4d_info:
	.quad	_c3g4d
	.quad	5
	.quad	-4294967266
	.quad	u3g5w_srtd


==================== Asm code ====================
2018-03-16 15:57:54.622477687 UTC

.section .data.rel.ro
.align 8
.align 1
u3g5x_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611689901077823489


==================== Asm code ====================
2018-03-16 15:57:54.62322913 UTC

.section .text
.align 8
_c3g4h:
_c3g4h:
	movq 40(%rbp),%rax
	leaq block_c3g4l_info(%rip),%rcx
	movq %rcx,40(%rbp)
	movq 8(%rbp),%r9
	movq %rax,%r8
	movq %rbx,%rdi
	movq 32(%rbp),%rsi
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r14
	movq 16(%rbp),%rbx
	addq $40,%rbp
	jmp gen_s3bcr_entry
	.size _c3g4h, .-_c3g4h


==================== Asm code ====================
2018-03-16 15:57:54.623872278 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3g4h_info:
	.quad	_c3g4h
	.quad	261
	.quad	-4294967266
	.quad	u3g5x_srtd


==================== Asm code ====================
2018-03-16 15:57:54.624529177 UTC

.section .text
.align 8
_c3g4l:
_c3g4l:
	leaq block_c3g4p_info(%rip),%rax
	movq %rax,(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rsi
	movq %rbx,%r14
	jmp *GHC.List.reverse1_entry@gotpcrel(%rip)
	.size _c3g4l, .-_c3g4l


==================== Asm code ====================
2018-03-16 15:57:54.62515979 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3g4l_info:
	.quad	_c3g4l
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:54.625848602 UTC

.section .text
.align 8
_c3g4p:
_c3g4p:
	movq %rbx,%rsi
	leaq lvl8_r2UqG_closure+1(%rip),%r14
	addq $8,%rbp
	jmp *GHC.Base.map_entry@gotpcrel(%rip)
	.size _c3g4p, .-_c3g4p


==================== Asm code ====================
2018-03-16 15:57:54.626419481 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3g4p_info:
	.quad	_c3g4p
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:54.626991071 UTC

.section .data.rel.ro
.align 8
.align 1
u3g5y_srtd:
	.quad	S3bQP_srt+552
	.quad	66
	.quad	-4609430335929581567
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:54.628077768 UTC

.section .text
.align 8
.globl GHC.Float.$w$sfloatToDigits1_entry
.type GHC.Float.$w$sfloatToDigits1_entry, @object
GHC.Float.$w$sfloatToDigits1_entry:
_c3g4F:
	addq $312,%r12
	cmpq 856(%r13),%r12
	ja _c3g4J
_c3g4I:
	xorps %xmm0,%xmm0
	ucomiss %xmm0,%xmm1
	jp _c3g4D
	je _c3g4E
_c3g4D:
	leaq ds_s3bax_info(%rip),%rax
	movq %rax,-304(%r12)
	movss %xmm1,-288(%r12)
	leaq ds1_s3baD_info(%rip),%rax
	movq %rax,-280(%r12)
	leaq -304(%r12),%rax
	movq %rax,-264(%r12)
	movq stg_sel_0_upd_info@gotpcrel(%rip),%rbx
	movq %rbx,-256(%r12)
	leaq -280(%r12),%rbx
	movq %rbx,-240(%r12)
	leaq ds2_s3baU_info(%rip),%rcx
	movq %rcx,-232(%r12)
	movq %rbx,-216(%r12)
	leaq -256(%r12),%rcx
	movq %rcx,-208(%r12)
	movq stg_sel_1_upd_info@gotpcrel(%rip),%rdx
	movq %rdx,-200(%r12)
	leaq -232(%r12),%rdx
	movq %rdx,-184(%r12)
	movq stg_sel_0_upd_info@gotpcrel(%rip),%rsi
	movq %rsi,-176(%r12)
	movq %rdx,-160(%r12)
	movq stg_sel_2_upd_info@gotpcrel(%rip),%rsi
	movq %rsi,-152(%r12)
	movq %rdx,-136(%r12)
	leaq k_s3bbE_info(%rip),%rsi
	movq %rsi,-128(%r12)
	movq %r14,-112(%r12)
	movq %rax,-104(%r12)
	movq %rbx,-96(%r12)
	movq %rcx,-88(%r12)
	leaq -200(%r12),%rax
	movq %rax,-80(%r12)
	leaq -176(%r12),%rbx
	movq %rbx,-72(%r12)
	leaq -152(%r12),%rcx
	movq %rcx,-64(%r12)
	leaq sat_s3bdb_info(%rip),%rsi
	movq %rsi,-56(%r12)
	movq %r14,-40(%r12)
	movq %rdx,-32(%r12)
	movq %rax,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	leaq -128(%r12),%rax
	movq %rax,(%r12)
	movq %rax,%r14
	leaq -56(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c3g4J:
	movq $312,904(%r13)
	leaq GHC.Float.$w$sfloatToDigits1_closure(%rip),%rbx
	movq %r14,-16(%rbp)
	movss %xmm1,-8(%rbp)
	addq $-16,%rbp
	jmp *-8(%r13)
_c3g4E:
	addq $-312,%r12
	leaq GHC.Float.minExpt_closure+1(%rip),%r14
	leaq lvl3_r2UpB_closure+2(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Float.$w$sfloatToDigits1_entry, .-GHC.Float.$w$sfloatToDigits1_entry


==================== Asm code ====================
2018-03-16 15:57:54.629078641 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$w$sfloatToDigits1_info
.type GHC.Float.$w$sfloatToDigits1_info, @object
GHC.Float.$w$sfloatToDigits1_info:
	.quad	GHC.Float.$w$sfloatToDigits1_entry
	.quad	0
	.quad	-4294967282
	.quad	8589934592
	.quad	u3g5y_srtd
	.quad	130
	.quad	GHC.Float.$w$sfloatToDigits1_slow


==================== Asm code ====================
2018-03-16 15:57:54.63234944 UTC

.section .data
.align 8
.align 1
lvl11_r2UqJ_closure:
	.quad	lvl11_r2UqJ_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:54.632859928 UTC

.section .data.rel.ro
.align 8
.align 1
u3gdS_srtd:
	.quad	S3bQP_srt+552
	.quad	52
	.quad	2251799813685249


==================== Asm code ====================
2018-03-16 15:57:54.633800989 UTC

.section .text
.align 8
lvl11_r2UqJ_entry:
_c3gdP:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3gdQ
_c3gdR:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c3gdO
_c3gdN:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	movl $52,%esi
	leaq GHC.Float.$fRealFloatDouble5_closure(%rip),%r14
	addq $-16,%rbp
	jmp GHC.Float.$wexpt_entry
_c3gdQ:
	jmp *-16(%r13)
_c3gdO:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl11_r2UqJ_entry, .-lvl11_r2UqJ_entry


==================== Asm code ====================
2018-03-16 15:57:54.634502759 UTC

.section .data.rel.ro
.align 8
.align 1
lvl11_r2UqJ_info:
	.quad	lvl11_r2UqJ_entry
	.quad	0
	.quad	-4294967275
	.quad	u3gdS_srtd


==================== Asm code ====================
2018-03-16 15:57:54.686793628 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$w$sfloatToDigits_closure
.type GHC.Float.$w$sfloatToDigits_closure, @object
GHC.Float.$w$sfloatToDigits_closure:
	.quad	GHC.Float.$w$sfloatToDigits_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:54.687575361 UTC

.section .text
.align 8
.globl GHC.Float.$w$sfloatToDigits_slow
.type GHC.Float.$w$sfloatToDigits_slow, @object
GHC.Float.$w$sfloatToDigits_slow:
_c3ge3:
	movsd 8(%rbp),%xmm1
	movq (%rbp),%r14
	addq $16,%rbp
	jmp GHC.Float.$w$sfloatToDigits_entry
	.size GHC.Float.$w$sfloatToDigits_slow, .-GHC.Float.$w$sfloatToDigits_slow


==================== Asm code ====================
2018-03-16 15:57:54.688329361 UTC

.section .text
.align 8
ds_s3bdf_entry:
_c3gek:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c3gel
_c3gem:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3gee_info(%rip),%rax
	movq %rax,-24(%rbp)
	movsd 16(%rbx),%xmm1
	addq $-24,%rbp
	jmp *GHC.Integer.Type.decodeDoubleInteger_entry@gotpcrel(%rip)
_c3gel:
	jmp *-16(%r13)
	.size ds_s3bdf_entry, .-ds_s3bdf_entry


==================== Asm code ====================
2018-03-16 15:57:54.688987305 UTC

.section .data.rel.ro
.align 8
.align 1
ds_s3bdf_info:
	.quad	ds_s3bdf_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S3bQP_srt+1080


==================== Asm code ====================
2018-03-16 15:57:54.68964281 UTC

.section .text
.align 8
_c3gee:
_c3gee:
	movq %r14,-8(%rbp)
	movq %rbx,(%rbp)
	addq $-16,%rbp
	jmp _c3gef
	.size _c3gee, .-_c3gee


==================== Asm code ====================
2018-03-16 15:57:54.69024829 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gee_info:
	.quad	_c3gee
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:54.690979358 UTC

.section .text
.align 8
_c3gef:
_c3gef:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c3gep
_c3geo:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-32(%r12)
	movq 8(%rbp),%rax
	movq %rax,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq 16(%rbp),%rax
	movq %rax,-8(%r12)
	leaq -31(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3gep:
	movq $40,904(%r13)
	leaq block_c3gef_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c3gef, .-_c3gef


==================== Asm code ====================
2018-03-16 15:57:54.691656089 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gef_info:
	.quad	_c3gef
	.quad	66
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:54.692198834 UTC

.section .data.rel.ro
.align 8
.align 1
u3gp7_srtd:
	.quad	S3bQP_srt+552
	.quad	52
	.quad	2252933685051393


==================== Asm code ====================
2018-03-16 15:57:54.692930852 UTC

.section .text
.align 8
sat_s3bdu_entry:
_c3geX:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c3geY
_c3geZ:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3geV_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rsi
	leaq GHC.Float.$fRealFloatDouble5_closure(%rip),%r14
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Float.$wexpt_entry
_c3geY:
	jmp *-16(%r13)
	.size sat_s3bdu_entry, .-sat_s3bdu_entry


==================== Asm code ====================
2018-03-16 15:57:54.693639516 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bdu_info:
	.quad	sat_s3bdu_entry
	.quad	4294967297
	.quad	-4294967277
	.quad	u3gp7_srtd


==================== Asm code ====================
2018-03-16 15:57:54.694313876 UTC

.section .text
.align 8
_c3geV:
_c3geV:
	leaq block_c3gf2_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq GHC.Float.rationalToDouble5_closure(%rip),%rsi
	movq %rbx,%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
	.size _c3geV, .-_c3geV


==================== Asm code ====================
2018-03-16 15:57:54.694942076 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3geV_info:
	.quad	_c3geV
	.quad	1
	.quad	141733920798
	.quad	S3bQP_srt+832


==================== Asm code ====================
2018-03-16 15:57:54.695649357 UTC

.section .text
.align 8
_c3gf2:
_c3gf2:
	cmpq $1,%rbx
	je _c3gfd
_c3gf9:
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $24,%rbp
	jmp *GHC.Integer.Type.quotInteger_entry@gotpcrel(%rip)
_c3gfd:
	movq GHC.Real.divZeroError_closure@gotpcrel(%rip),%rbx
	addq $24,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c3gf2, .-_c3gf2


==================== Asm code ====================
2018-03-16 15:57:54.69623209 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gf2_info:
	.quad	_c3gf2
	.quad	2
	.quad	4294967326
	.quad	S3bQP_srt+872


==================== Asm code ====================
2018-03-16 15:57:54.69679826 UTC

.section .data.rel.ro
.align 8
.align 1
u3gp8_srtd:
	.quad	S3bQP_srt+552
	.quad	52
	.quad	2252933685051393


==================== Asm code ====================
2018-03-16 15:57:54.697615515 UTC

.section .text
.align 8
ds1_s3bdk_entry:
_c3gfe:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c3gff
_c3gfg:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3gew_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _c3gew
_c3gex:
	movq (%rbx),%rax
	jmp *(%rax)
_c3gff:
	jmp *-16(%r13)
	.size ds1_s3bdk_entry, .-ds1_s3bdk_entry


==================== Asm code ====================
2018-03-16 15:57:54.698301033 UTC

.section .data.rel.ro
.align 8
.align 1
ds1_s3bdk_info:
	.quad	ds1_s3bdk_entry
	.quad	1
	.quad	-4294967280
	.quad	u3gp8_srtd


==================== Asm code ====================
2018-03-16 15:57:54.698907455 UTC

.section .data.rel.ro
.align 8
.align 1
u3gp9_srtd:
	.quad	S3bQP_srt+552
	.quad	52
	.quad	2252933685051393


==================== Asm code ====================
2018-03-16 15:57:54.699557176 UTC

.section .text
.align 8
_c3gew:
_c3gew:
	leaq block_c3geB_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3geB
_c3geC:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3gew, .-_c3gew


==================== Asm code ====================
2018-03-16 15:57:54.700177432 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gew_info:
	.quad	_c3gew
	.quad	0
	.quad	-4294967266
	.quad	u3gp9_srtd


==================== Asm code ====================
2018-03-16 15:57:54.700672617 UTC

.section .data.rel.ro
.align 8
.align 1
u3gpa_srtd:
	.quad	S3bQP_srt+552
	.quad	52
	.quad	2252933685051393


==================== Asm code ====================
2018-03-16 15:57:54.701587846 UTC

.section .text
.align 8
_c3geB:
_c3geB:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c3gfk
_c3gfj:
	movq 7(%rbx),%rax
	movq $-1074,%rbx
	subq %rax,%rbx
	testq %rbx,%rbx
	jle _c3gfm
_c3gfo:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-64(%r12)
	addq %rbx,%rax
	movq %rax,-56(%r12)
	leaq sat_s3bdu_info(%rip),%rax
	movq %rax,-48(%r12)
	movq 8(%rbp),%rax
	movq %rax,-32(%r12)
	movq %rbx,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -48(%r12),%rax
	movq %rax,-8(%r12)
	leaq -63(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3gfm:
	addq $-72,%r12
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c3gfk:
	movq $72,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3geB, .-_c3geB


==================== Asm code ====================
2018-03-16 15:57:54.702395335 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3geB_info:
	.quad	_c3geB
	.quad	2
	.quad	-4294967266
	.quad	u3gpa_srtd


==================== Asm code ====================
2018-03-16 15:57:54.702982965 UTC

.section .data.rel.ro
.align 8
.align 1
u3gpb_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4613937818241073153


==================== Asm code ====================
2018-03-16 15:57:54.703709755 UTC

.section .text
.align 8
sat_s3bdM_entry:
_c3gfU:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3gfX
_c3gfY:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3gfW_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rsi
	negq %rsi
	leaq GHC.Float.$fRealFloatDouble5_closure(%rip),%r14
	addq $-24,%rbp
	jmp GHC.Float.$wexpt_entry
_c3gfX:
	jmp *-16(%r13)
	.size sat_s3bdM_entry, .-sat_s3bdM_entry


==================== Asm code ====================
2018-03-16 15:57:54.70438504 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bdM_info:
	.quad	sat_s3bdM_entry
	.quad	4294967296
	.quad	-4294967279
	.quad	u3gpb_srtd


==================== Asm code ====================
2018-03-16 15:57:54.704948495 UTC

.section .data.rel.ro
.align 8
.align 1
u3gpc_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:54.705625432 UTC

.section .text
.align 8
_c3gfW:
_c3gfW:
	leaq GHC.Float.$fRealFloatDouble5_closure(%rip),%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c3gfW, .-_c3gfW


==================== Asm code ====================
2018-03-16 15:57:54.706189502 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gfW_info:
	.quad	_c3gfW
	.quad	0
	.quad	-4294967266
	.quad	u3gpc_srtd


==================== Asm code ====================
2018-03-16 15:57:54.706740763 UTC

.section .data.rel.ro
.align 8
.align 1
u3gpd_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:54.707455195 UTC

.section .text
.align 8
sat_s3bdJ_entry:
_c3gg7:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3gg8
_c3gg9:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq GHC.Float.$fRealFloatDouble5_closure(%rip),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
_c3gg8:
	jmp *-16(%r13)
	.size sat_s3bdJ_entry, .-sat_s3bdJ_entry


==================== Asm code ====================
2018-03-16 15:57:54.708098179 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bdJ_info:
	.quad	sat_s3bdJ_entry
	.quad	1
	.quad	-4294967280
	.quad	u3gpd_srtd


==================== Asm code ====================
2018-03-16 15:57:54.70868084 UTC

.section .data.rel.ro
.align 8
.align 1
u3gpe_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4613937818241073153


==================== Asm code ====================
2018-03-16 15:57:54.709463957 UTC

.section .text
.align 8
sat_s3bdU_entry:
_c3ggp:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3ggv
_c3ggw:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3ggu_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rax
	negq %rax
	leaq 1(%rax),%rsi
	leaq GHC.Float.$fRealFloatDouble5_closure(%rip),%r14
	addq $-24,%rbp
	jmp GHC.Float.$wexpt_entry
_c3ggv:
	jmp *-16(%r13)
	.size sat_s3bdU_entry, .-sat_s3bdU_entry


==================== Asm code ====================
2018-03-16 15:57:54.710120101 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bdU_info:
	.quad	sat_s3bdU_entry
	.quad	4294967296
	.quad	-4294967279
	.quad	u3gpe_srtd


==================== Asm code ====================
2018-03-16 15:57:54.71068016 UTC

.section .data.rel.ro
.align 8
.align 1
u3gpf_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:54.71127272 UTC

.section .text
.align 8
_c3ggu:
_c3ggu:
	leaq GHC.Float.$fRealFloatDouble5_closure(%rip),%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c3ggu, .-_c3ggu


==================== Asm code ====================
2018-03-16 15:57:54.711803984 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3ggu_info:
	.quad	_c3ggu
	.quad	0
	.quad	-4294967266
	.quad	u3gpf_srtd


==================== Asm code ====================
2018-03-16 15:57:54.712357291 UTC

.section .data.rel.ro
.align 8
.align 1
u3gpg_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:54.71311319 UTC

.section .text
.align 8
sat_s3bdQ_entry:
_c3ggH:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3ggI
_c3ggJ:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3ggF_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq GHC.Float.$fRealFloatDouble5_closure(%rip),%rsi
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
_c3ggI:
	jmp *-16(%r13)
	.size sat_s3bdQ_entry, .-sat_s3bdQ_entry


==================== Asm code ====================
2018-03-16 15:57:54.713794751 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bdQ_info:
	.quad	sat_s3bdQ_entry
	.quad	1
	.quad	-4294967280
	.quad	u3gpg_srtd


==================== Asm code ====================
2018-03-16 15:57:54.715270338 UTC

.section .data.rel.ro
.align 8
.align 1
u3gph_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:54.715974631 UTC

.section .text
.align 8
_c3ggF:
_c3ggF:
	leaq GHC.Float.$fRealFloatDouble5_closure(%rip),%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c3ggF, .-_c3ggF


==================== Asm code ====================
2018-03-16 15:57:54.716612106 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3ggF_info:
	.quad	_c3ggF
	.quad	0
	.quad	-4294967266
	.quad	u3gph_srtd


==================== Asm code ====================
2018-03-16 15:57:54.717138588 UTC

.section .data.rel.ro
.align 8
.align 1
u3gpi_srtd:
	.quad	S3bQP_srt+552
	.quad	52
	.quad	2251799813685249


==================== Asm code ====================
2018-03-16 15:57:54.717879751 UTC

.section .text
.align 8
be_s3bdV_entry:
_c3ggS:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3ggT
_c3ggU:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rsi
	leaq GHC.Float.$fRealFloatDouble5_closure(%rip),%r14
	addq $-16,%rbp
	jmp GHC.Float.$wexpt_entry
_c3ggT:
	jmp *-16(%r13)
	.size be_s3bdV_entry, .-be_s3bdV_entry


==================== Asm code ====================
2018-03-16 15:57:54.718527035 UTC

.section .data.rel.ro
.align 8
.align 1
be_s3bdV_info:
	.quad	be_s3bdV_entry
	.quad	4294967296
	.quad	-4294967279
	.quad	u3gpi_srtd


==================== Asm code ====================
2018-03-16 15:57:54.719093476 UTC

.section .data.rel.ro
.align 8
.align 1
u3gpj_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:54.71982063 UTC

.section .text
.align 8
sat_s3bdY_entry:
_c3gh5:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3gh6
_c3gh7:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3gh3_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
_c3gh6:
	jmp *-16(%r13)
	.size sat_s3bdY_entry, .-sat_s3bdY_entry


==================== Asm code ====================
2018-03-16 15:57:54.720453215 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bdY_info:
	.quad	sat_s3bdY_entry
	.quad	2
	.quad	-4294967278
	.quad	u3gpj_srtd


==================== Asm code ====================
2018-03-16 15:57:54.721023641 UTC

.section .data.rel.ro
.align 8
.align 1
u3gpk_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:54.721677348 UTC

.section .text
.align 8
_c3gh3:
_c3gh3:
	leaq GHC.Float.$fRealFloatDouble5_closure(%rip),%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c3gh3, .-_c3gh3


==================== Asm code ====================
2018-03-16 15:57:54.722297326 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gh3_info:
	.quad	_c3gh3
	.quad	0
	.quad	-4294967266
	.quad	u3gpk_srtd


==================== Asm code ====================
2018-03-16 15:57:54.722856473 UTC

.section .data.rel.ro
.align 8
.align 1
u3gpl_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:54.72363709 UTC

.section .text
.align 8
sat_s3be2_entry:
_c3ghh:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3ghi
_c3ghj:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq GHC.Float.$fRealFloatDouble5_closure(%rip),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
_c3ghi:
	jmp *-16(%r13)
	.size sat_s3be2_entry, .-sat_s3be2_entry


==================== Asm code ====================
2018-03-16 15:57:54.724269865 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3be2_info:
	.quad	sat_s3be2_entry
	.quad	1
	.quad	-4294967280
	.quad	u3gpl_srtd


==================== Asm code ====================
2018-03-16 15:57:54.724840945 UTC

.section .data.rel.ro
.align 8
.align 1
u3gpm_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:54.726347441 UTC

.section .text
.align 8
sat_s3be1_entry:
_c3ghq:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3ghu
_c3ghv:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3gho_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
_c3ghu:
	jmp *-16(%r13)
	.size sat_s3be1_entry, .-sat_s3be1_entry


==================== Asm code ====================
2018-03-16 15:57:54.727012136 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3be1_info:
	.quad	sat_s3be1_entry
	.quad	2
	.quad	-4294967278
	.quad	u3gpm_srtd


==================== Asm code ====================
2018-03-16 15:57:54.727552418 UTC

.section .data.rel.ro
.align 8
.align 1
u3gpn_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:54.728194423 UTC

.section .text
.align 8
_c3gho:
_c3gho:
	leaq block_c3ght_info(%rip),%rax
	movq %rax,(%rbp)
	leaq GHC.Float.$fRealFloatDouble5_closure(%rip),%rsi
	movq %rbx,%r14
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c3gho, .-_c3gho


==================== Asm code ====================
2018-03-16 15:57:54.728803043 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gho_info:
	.quad	_c3gho
	.quad	0
	.quad	-4294967266
	.quad	u3gpn_srtd


==================== Asm code ====================
2018-03-16 15:57:54.729404024 UTC

.section .data.rel.ro
.align 8
.align 1
u3gpo_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:54.730053716 UTC

.section .text
.align 8
_c3ght:
_c3ght:
	leaq GHC.Float.$fRealFloatDouble5_closure(%rip),%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c3ght, .-_c3ght


==================== Asm code ====================
2018-03-16 15:57:54.730631463 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3ght_info:
	.quad	_c3ght
	.quad	0
	.quad	-4294967266
	.quad	u3gpo_srtd


==================== Asm code ====================
2018-03-16 15:57:54.731193329 UTC

.section .data.rel.ro
.align 8
.align 1
u3gpp_srtd:
	.quad	S3bQP_srt+552
	.quad	68
	.quad	4613938367996887041
	.quad	9


==================== Asm code ====================
2018-03-16 15:57:54.731999775 UTC

.section .text
.align 8
ds2_s3bdB_entry:
_c3ghB:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c3ghC
_c3ghD:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3gfw_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c3gfw
_c3gfx:
	movq (%rbx),%rax
	jmp *(%rax)
_c3ghC:
	jmp *-16(%r13)
	.size ds2_s3bdB_entry, .-ds2_s3bdB_entry


==================== Asm code ====================
2018-03-16 15:57:54.732700097 UTC

.section .data.rel.ro
.align 8
.align 1
ds2_s3bdB_info:
	.quad	ds2_s3bdB_entry
	.quad	2
	.quad	-4294967278
	.quad	u3gpp_srtd


==================== Asm code ====================
2018-03-16 15:57:54.733294628 UTC

.section .data.rel.ro
.align 8
.align 1
u3gpq_srtd:
	.quad	S3bQP_srt+552
	.quad	68
	.quad	4613938367996887041
	.quad	9


==================== Asm code ====================
2018-03-16 15:57:54.734012506 UTC

.section .text
.align 8
_c3gfw:
_c3gfw:
	leaq block_c3gfB_info(%rip),%rax
	movq %rax,(%rbp)
	movq 15(%rbx),%rbx
	testb $7,%bl
	jne _c3gfB
_c3gfC:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3gfw, .-_c3gfw


==================== Asm code ====================
2018-03-16 15:57:54.734627074 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gfw_info:
	.quad	_c3gfw
	.quad	1
	.quad	-4294967266
	.quad	u3gpq_srtd


==================== Asm code ====================
2018-03-16 15:57:54.73516181 UTC

.section .data.rel.ro
.align 8
.align 1
u3gpr_srtd:
	.quad	S3bQP_srt+552
	.quad	68
	.quad	4613938367996887041
	.quad	9


==================== Asm code ====================
2018-03-16 15:57:54.736047783 UTC

.section .text
.align 8
_c3gfB:
_c3gfB:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3ghH
_c3ghG:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	testq %rbx,%rbx
	jl _c3ghZ
_c3gi0:
	leaq be_s3bdV_info(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rbx,(%r12)
	leaq block_c3ggV_info(%rip),%rbx
	movq %rbx,-8(%rbp)
	leaq lvl11_r2UqJ_closure(%rip),%rsi
	movq %rax,%r14
	leaq -16(%r12),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
_c3ghZ:
	cmpq $-1074,%rbx
	jle _c3ghN
_c3ghO:
	addq $-24,%r12
	leaq block_c3gge_info(%rip),%rcx
	movq %rcx,-8(%rbp)
	leaq lvl11_r2UqJ_closure(%rip),%rsi
	movq %rax,%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
_c3ghN:
	addq $-24,%r12
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp _c3gfM
_c3ghH:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3gfB, .-_c3gfB


==================== Asm code ====================
2018-03-16 15:57:54.736840838 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gfB_info:
	.quad	_c3gfB
	.quad	1
	.quad	-4294967266
	.quad	u3gpr_srtd


==================== Asm code ====================
2018-03-16 15:57:54.7373801 UTC

.section .data.rel.ro
.align 8
.align 1
u3gps_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4613938367996887041


==================== Asm code ====================
2018-03-16 15:57:54.738187194 UTC

.section .text
.align 8
_c3gge:
_c3gge:
	cmpq $1,%rbx
	je _c3ghU
	jmp _c3gfM
_c3ghX:
	movq $88,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
_c3ghU:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c3ghX
_c3ghW:
	leaq sat_s3bdU_info(%rip),%rax
	movq %rax,-80(%r12)
	movq 8(%rbp),%rax
	movq %rax,-64(%r12)
	leaq sat_s3bdQ_info(%rip),%rax
	movq %rax,-56(%r12)
	movq 16(%rbp),%rax
	movq %rax,-40(%r12)
	movq (,,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-32(%r12)
	leaq -56(%r12),%rax
	movq %rax,-24(%r12)
	leaq -80(%r12),%rax
	movq %rax,-16(%r12)
	leaq GHC.Float.$fRealFloatDouble5_closure(%rip),%rax
	movq %rax,-8(%r12)
	leaq GHC.Float.$fRealDouble1_closure(%rip),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3gge, .-_c3gge


==================== Asm code ====================
2018-03-16 15:57:54.738958207 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gge_info:
	.quad	_c3gge
	.quad	66
	.quad	-4294967266
	.quad	u3gps_srtd


==================== Asm code ====================
2018-03-16 15:57:54.739502224 UTC

.section .data.rel.ro
.align 8
.align 1
u3gpt_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4613938367996887041


==================== Asm code ====================
2018-03-16 15:57:54.740247213 UTC

.section .text
.align 8
_c3gfM:
_c3gfM:
	addq $88,%r12
	cmpq 856(%r13),%r12
	ja _c3ghL
_c3ghK:
	leaq sat_s3bdM_info(%rip),%rax
	movq %rax,-80(%r12)
	movq 8(%rbp),%rax
	movq %rax,-64(%r12)
	leaq sat_s3bdJ_info(%rip),%rax
	movq %rax,-56(%r12)
	movq 16(%rbp),%rax
	movq %rax,-40(%r12)
	movq (,,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-32(%r12)
	leaq -56(%r12),%rax
	movq %rax,-24(%r12)
	leaq -80(%r12),%rax
	movq %rax,-16(%r12)
	leaq GHC.Float.$fRealDouble1_closure(%rip),%rax
	movq %rax,-8(%r12)
	leaq GHC.Float.$fRealDouble1_closure(%rip),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3ghL:
	movq $88,904(%r13)
	leaq block_c3gfM_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c3gfM, .-_c3gfM


==================== Asm code ====================
2018-03-16 15:57:54.741017655 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gfM_info:
	.quad	_c3gfM
	.quad	66
	.quad	-4294967266
	.quad	u3gpt_srtd


==================== Asm code ====================
2018-03-16 15:57:54.742107626 UTC

.section .data.rel.ro
.align 8
.align 1
u3gpu_srtd:
	.quad	S3bQP_srt+552
	.quad	65
	.quad	4611686018427387905
	.quad	1


==================== Asm code ====================
2018-03-16 15:57:54.743052282 UTC

.section .text
.align 8
_c3ggV:
_c3ggV:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rcx
	cmpq $1,%rbx
	je _c3gi8
_c3gi3:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c3gi6
_c3gi5:
	leaq sat_s3bdY_info(%rip),%rbx
	movq %rbx,-64(%r12)
	movq %rcx,-48(%r12)
	movq %rax,-40(%r12)
	movq (,,,)_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-32(%r12)
	leaq -64(%r12),%rbx
	movq %rbx,-24(%r12)
	leaq GHC.Float.$fRealFloatDouble5_closure(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,-8(%r12)
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3gib:
	movq $96,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
_c3gi8:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _c3gib
_c3gia:
	leaq sat_s3be2_info(%rip),%rbx
	movq %rbx,-88(%r12)
	movq %rax,-72(%r12)
	leaq sat_s3be1_info(%rip),%rbx
	movq %rbx,-64(%r12)
	movq %rcx,-48(%r12)
	movq %rax,-40(%r12)
	movq (,,,)_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-32(%r12)
	leaq -64(%r12),%rbx
	movq %rbx,-24(%r12)
	leaq lvl10_r2UqI_closure(%rip),%rbx
	movq %rbx,-16(%r12)
	leaq -88(%r12),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3gi6:
	movq $72,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c3ggV, .-_c3ggV


==================== Asm code ====================
2018-03-16 15:57:54.743894514 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3ggV_info:
	.quad	_c3ggV
	.quad	2
	.quad	-4294967266
	.quad	u3gpu_srtd


==================== Asm code ====================
2018-03-16 15:57:54.744451937 UTC

.section .data.rel.ro
.align 8
.align 1
u3gpv_srtd:
	.quad	S3bQP_srt+688
	.quad	46
	.quad	35201572929793


==================== Asm code ====================
2018-03-16 15:57:54.745778918 UTC

.section .text
.align 8
k_s3bel_entry:
_c3giq:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _c3gir
_c3gis:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3gio_info(%rip),%rax
	movq %rax,-64(%rbp)
	movq 64(%rbx),%rsi
	movq 56(%rbx),%r14
	movq 16(%rbx),%rax
	movq %rax,-56(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-48(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 48(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-64,%rbp
	jmp *GHC.Integer.Type.plusInteger_entry@gotpcrel(%rip)
_c3gir:
	jmp *-16(%r13)
	.size k_s3bel_entry, .-k_s3bel_entry


==================== Asm code ====================
2018-03-16 15:57:54.746561547 UTC

.section .data.rel.ro
.align 8
.align 1
k_s3bel_info:
	.quad	k_s3bel_entry
	.quad	7
	.quad	-4294967281
	.quad	u3gpv_srtd


==================== Asm code ====================
2018-03-16 15:57:54.747161602 UTC

.section .data.rel.ro
.align 8
.align 1
u3gpw_srtd:
	.quad	S3bQP_srt+688
	.quad	46
	.quad	35201572929793


==================== Asm code ====================
2018-03-16 15:57:54.74785424 UTC

.section .text
.align 8
_c3gio:
_c3gio:
	leaq block_c3gix_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq GHC.Float.expts4_closure(%rip),%rsi
	movq 8(%rbp),%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
	.size _c3gio, .-_c3gio


==================== Asm code ====================
2018-03-16 15:57:54.748450303 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gio_info:
	.quad	_c3gio
	.quad	5
	.quad	-4294967266
	.quad	u3gpw_srtd


==================== Asm code ====================
2018-03-16 15:57:54.749014206 UTC

.section .data.rel.ro
.align 8
.align 1
u3gpx_srtd:
	.quad	S3bQP_srt+688
	.quad	46
	.quad	35201572929537


==================== Asm code ====================
2018-03-16 15:57:54.749844728 UTC

.section .text
.align 8
_c3gix:
_c3gix:
	cmpq $1,%rbx
	je _c3gkQ
_c3gk6:
	leaq block_c3gjC_info(%rip),%rax
	movq %rax,(%rbp)
	leaq GHC.Float.$fRealDouble1_closure(%rip),%rsi
	movq 40(%rbp),%r14
	jmp *GHC.Integer.Type.plusInteger_entry@gotpcrel(%rip)
_c3gkQ:
	leaq block_c3gkJ_info(%rip),%rax
	movq %rax,(%rbp)
	movq 24(%rbp),%rbx
	testb $7,%bl
	jne _c3gkJ
_c3gkK:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3gix, .-_c3gix


==================== Asm code ====================
2018-03-16 15:57:54.750471091 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gix_info:
	.quad	_c3gix
	.quad	6
	.quad	-4294967266
	.quad	u3gpx_srtd


==================== Asm code ====================
2018-03-16 15:57:54.751154025 UTC

.section .text
.align 8
_c3gkJ:
_c3gkJ:
	leaq block_c3gkO_info(%rip),%rax
	movq %rax,(%rbp)
	movq 15(%rbx),%rbx
	testb $7,%bl
	jne _c3gkO
_c3gkS:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3gkJ, .-_c3gkJ


==================== Asm code ====================
2018-03-16 15:57:54.751715314 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gkJ_info:
	.quad	_c3gkJ
	.quad	1798
	.quad	8800387989534
	.quad	S3bQP_srt+960


==================== Asm code ====================
2018-03-16 15:57:54.75249132 UTC

.section .text
.align 8
_c3gkO:
_c3gkO:
	movq 7(%rbx),%rax
	addq $52,%rax
	testq %rax,%rax
	jl _c3gl3
_c3gl4:
	movl $28738,%ebx
	imulq $8651,%rax
	cqto
	idivq %rbx
	incq %rax
	movq %rax,40(%rbp)
	addq $8,%rbp
	jmp _c3giA
_c3gl3:
	movl $28738,%ebx
	imulq $8651,%rax
	cqto
	idivq %rbx
	movq %rax,40(%rbp)
	addq $8,%rbp
	jmp _c3giA
	.size _c3gkO, .-_c3gkO


==================== Asm code ====================
2018-03-16 15:57:54.753121716 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gkO_info:
	.quad	_c3gkO
	.quad	1798
	.quad	8800387989534
	.quad	S3bQP_srt+960


==================== Asm code ====================
2018-03-16 15:57:54.753738438 UTC

.section .data.rel.ro
.align 8
.align 1
u3gpy_srtd:
	.quad	S3bQP_srt+688
	.quad	46
	.quad	35201551958017


==================== Asm code ====================
2018-03-16 15:57:54.75436277 UTC

.section .text
.align 8
_c3gjC:
_c3gjC:
	leaq block_c3gjG_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp *GHC.Integer.Type.floatFromInteger_entry@gotpcrel(%rip)
	.size _c3gjC, .-_c3gjC


==================== Asm code ====================
2018-03-16 15:57:54.754940363 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gjC_info:
	.quad	_c3gjC
	.quad	1286
	.quad	-4294967266
	.quad	u3gpy_srtd


==================== Asm code ====================
2018-03-16 15:57:54.755508116 UTC

.section .data.rel.ro
.align 8
.align 1
u3gpz_srtd:
	.quad	S3bQP_srt+688
	.quad	46
	.quad	35201551958017


==================== Asm code ====================
2018-03-16 15:57:54.756261951 UTC

.section .text
.align 8
_c3gjG:
_c3gjG:
	movq 32(%rbp),%rax
	subq $8,%rsp
	movss %xmm1,%xmm0
	movq %rax,%rbx
	movl $1,%eax
	call logf@plt
	addq $8,%rsp
	leaq block_c3gjO_info(%rip),%rax
	movq %rax,(%rbp)
	movss %xmm0,40(%rbp)
	testb $7,%bl
	jne _c3gjO
_c3gjP:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3gjG, .-_c3gjG


==================== Asm code ====================
2018-03-16 15:57:54.756925252 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gjG_info:
	.quad	_c3gjG
	.quad	1286
	.quad	-4294967266
	.quad	u3gpz_srtd


==================== Asm code ====================
2018-03-16 15:57:54.757499009 UTC

.section .data.rel.ro
.align 8
.align 1
u3gpA_srtd:
	.quad	S3bQP_srt+688
	.quad	46
	.quad	35201551958017


==================== Asm code ====================
2018-03-16 15:57:54.758147276 UTC

.section .text
.align 8
_c3gjO:
_c3gjO:
	leaq block_c3gjT_info(%rip),%rax
	movq %rax,(%rbp)
	movq 15(%rbx),%rbx
	testb $7,%bl
	jne _c3gjT
_c3gjU:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3gjO, .-_c3gjO


==================== Asm code ====================
2018-03-16 15:57:54.758718376 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gjO_info:
	.quad	_c3gjO
	.quad	1798
	.quad	-4294967266
	.quad	u3gpA_srtd


==================== Asm code ====================
2018-03-16 15:57:54.759231257 UTC

.section .data.rel.ro
.align 8
.align 1
u3gpB_srtd:
	.quad	S3bQP_srt+688
	.quad	46
	.quad	35201551958017


==================== Asm code ====================
2018-03-16 15:57:54.75996681 UTC

.section .text
.align 8
_c3gjT:
_c3gjT:
	leaq block_c3gjY_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	leaq lvl5_r2UqD_closure(%rip),%rbx
	movq %rax,32(%rbp)
	testb $7,%bl
	jne _c3gjY
_c3gjZ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3gjT, .-_c3gjT


==================== Asm code ====================
2018-03-16 15:57:54.76067668 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gjT_info:
	.quad	_c3gjT
	.quad	1798
	.quad	-4294967266
	.quad	u3gpB_srtd


==================== Asm code ====================
2018-03-16 15:57:54.761372855 UTC

.section .text
.align 8
_c3gjY:
_c3gjY:
	leaq block_c3gk3_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%r14
	movss 7(%rbx),%xmm0
	movss %xmm0,24(%rbp)
	jmp *GHC.Integer.Type.floatFromInteger_entry@gotpcrel(%rip)
	.size _c3gjY, .-_c3gjY


==================== Asm code ====================
2018-03-16 15:57:54.761938012 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gjY_info:
	.quad	_c3gjY
	.quad	1798
	.quad	8800387989534
	.quad	S3bQP_srt+960


==================== Asm code ====================
2018-03-16 15:57:54.762796682 UTC

.section .text
.align 8
_c3gk3:
_c3gk3:
	movss 40(%rbp),%xmm0
	movq 32(%rbp),%rax
	movss 24(%rbp),%xmm2
	subq $8,%rsp
	movsd %xmm0,%xmm3
	movss %xmm1,%xmm0
	movq %rax,%rbx
	movl $1,%eax
	movsd %xmm3,72(%rsp)
	movsd %xmm2,80(%rsp)
	call logf@plt
	addq $8,%rsp
	cvtsi2ssq %rbx,%xmm1
	movsd 72(%rsp),%xmm2
	mulss %xmm2,%xmm1
	movsd 64(%rsp),%xmm2
	addss %xmm1,%xmm2
	divss %xmm0,%xmm2
	cvttss2siq %xmm2,%rax
	cvtsi2ssq %rax,%xmm0
	ucomiss %xmm2,%xmm0
	jp _c3gkF
	jb _c3gkG
_c3gkF:
	movq %rax,40(%rbp)
	addq $8,%rbp
	jmp _c3giA
_c3gkG:
	incq %rax
	movq %rax,40(%rbp)
	addq $8,%rbp
	jmp _c3giA
	.size _c3gk3, .-_c3gk3


==================== Asm code ====================
2018-03-16 15:57:54.763536797 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gk3_info:
	.quad	_c3gk3
	.quad	1798
	.quad	8800387989534
	.quad	S3bQP_srt+960


==================== Asm code ====================
2018-03-16 15:57:54.764353863 UTC

.section .text
.align 8
_c3giA:
_c3giA:
	movq 8(%rbp),%rax
	movq 32(%rbp),%rbx
	testq %rbx,%rbx
	jl _c3giP
_c3gjf:
	leaq block_c3gja_info(%rip),%rcx
	movq %rcx,-8(%rbp)
	movq %rbx,%rsi
	movq %rax,%r14
	addq $-8,%rbp
	jmp GHC.Float.$wexpt_entry
_c3giP:
	leaq block_c3giJ_info(%rip),%rcx
	movq %rcx,-8(%rbp)
	movq %rbx,%rsi
	negq %rsi
	movq %rax,%r14
	addq $-8,%rbp
	jmp GHC.Float.$wexpt_entry
	.size _c3giA, .-_c3giA


==================== Asm code ====================
2018-03-16 15:57:54.765117566 UTC

.section .text
.align 8
_c3giJ:
_c3giJ:
	leaq block_c3giN_info(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%rsi
	movq %rbx,%r14
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c3giJ, .-_c3giJ


==================== Asm code ====================
2018-03-16 15:57:54.765893773 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3giJ_info:
	.quad	_c3giJ
	.quad	1798
	.quad	8800387989534
	.quad	S3bQP_srt+960


==================== Asm code ====================
2018-03-16 15:57:54.766596836 UTC

.section .text
.align 8
_c3giN:
_c3giN:
	leaq block_c3giU_info(%rip),%rax
	movq %rax,(%rbp)
	movq 48(%rbp),%rsi
	movq %rbx,%r14
	jmp *GHC.Integer.Type.leInteger#_entry@gotpcrel(%rip)
	.size _c3giN, .-_c3giN


==================== Asm code ====================
2018-03-16 15:57:54.76719585 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3giN_info:
	.quad	_c3giN
	.quad	1798
	.quad	8800387989534
	.quad	S3bQP_srt+960


==================== Asm code ====================
2018-03-16 15:57:54.767936199 UTC

.section .text
.align 8
_c3giU:
_c3giU:
	movq 40(%rbp),%rax
	cmpq $1,%rbx
	je _c3gj5
_c3gj1:
	incq %rax
	movq %rax,40(%rbp)
	addq $8,%rbp
	jmp _c3giA
_c3gj8:
	movq $16,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
_c3gj5:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3gj8
_c3gj7:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $56,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3giU, .-_c3giU


==================== Asm code ====================
2018-03-16 15:57:54.768598253 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3giU_info:
	.quad	_c3giU
	.quad	1798
	.quad	8800387989534
	.quad	S3bQP_srt+960


==================== Asm code ====================
2018-03-16 15:57:54.769819348 UTC

.section .text
.align 8
_c3gja:
_c3gja:
	leaq block_c3gje_info(%rip),%rax
	movq %rax,(%rbp)
	movq 48(%rbp),%rsi
	movq %rbx,%r14
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c3gja, .-_c3gja


==================== Asm code ====================
2018-03-16 15:57:54.770434076 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gja_info:
	.quad	_c3gja
	.quad	1798
	.quad	8800387989534
	.quad	S3bQP_srt+960


==================== Asm code ====================
2018-03-16 15:57:54.771165633 UTC

.section .text
.align 8
_c3gje:
_c3gje:
	leaq block_c3gjk_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rsi
	movq 8(%rbp),%r14
	jmp *GHC.Integer.Type.leInteger#_entry@gotpcrel(%rip)
	.size _c3gje, .-_c3gje


==================== Asm code ====================
2018-03-16 15:57:54.771748835 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gje_info:
	.quad	_c3gje
	.quad	1798
	.quad	8800387989534
	.quad	S3bQP_srt+960


==================== Asm code ====================
2018-03-16 15:57:54.772540242 UTC

.section .text
.align 8
_c3gjk:
_c3gjk:
	movq 40(%rbp),%rax
	cmpq $1,%rbx
	je _c3gjv
_c3gjr:
	incq %rax
	movq %rax,40(%rbp)
	addq $8,%rbp
	jmp _c3giA
_c3gjy:
	movq $16,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
_c3gjv:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3gjy
_c3gjx:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $56,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3gjk, .-_c3gjk


==================== Asm code ====================
2018-03-16 15:57:54.77335657 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gjk_info:
	.quad	_c3gjk
	.quad	1798
	.quad	8800387989534
	.quad	S3bQP_srt+960


==================== Asm code ====================
2018-03-16 15:57:54.774087741 UTC

.section .text
.align 8
sat_s3bfq_entry:
_c3gmu:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3gmv
_c3gmw:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq GHC.Float.$fRealDouble1_closure(%rip),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Integer.Type.plusInteger_entry@gotpcrel(%rip)
_c3gmv:
	jmp *-16(%r13)
	.size sat_s3bfq_entry, .-sat_s3bfq_entry


==================== Asm code ====================
2018-03-16 15:57:54.774695518 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bfq_info:
	.quad	sat_s3bfq_entry
	.quad	1
	.quad	21474836496
	.quad	S3bQP_srt+864


==================== Asm code ====================
2018-03-16 15:57:54.776072869 UTC

.section .text
.align 8
sat_s3bfu_entry:
_c3gmO:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3gmP
_c3gmQ:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq GHC.Float.$fRealDouble1_closure(%rip),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Integer.Type.plusInteger_entry@gotpcrel(%rip)
_c3gmP:
	jmp *-16(%r13)
	.size sat_s3bfu_entry, .-sat_s3bfu_entry


==================== Asm code ====================
2018-03-16 15:57:54.776773102 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bfu_info:
	.quad	sat_s3bfu_entry
	.quad	1
	.quad	21474836496
	.quad	S3bQP_srt+864


==================== Asm code ====================
2018-03-16 15:57:54.77740262 UTC

.section .data.rel.ro
.align 8
.align 1
u3gpC_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611689901077823489


==================== Asm code ====================
2018-03-16 15:57:54.778115522 UTC

.section .text
.align 8
gen_s3bf8_entry:
_c3gmU:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _c3gmV
_u3gnC:
	movq %rbx,-48(%rbp)
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-48,%rbp
	jmp _c3glP
_c3gmV:
	jmp *-8(%r13)
	.size gen_s3bf8_entry, .-gen_s3bf8_entry


==================== Asm code ====================
2018-03-16 15:57:54.778780378 UTC

.section .data.rel.ro
.align 8
.align 1
gen_s3bf8_info:
	.quad	gen_s3bf8_entry
	.quad	1
	.quad	-4294967287
	.quad	21474836505
	.quad	u3gpC_srtd


==================== Asm code ====================
2018-03-16 15:57:54.779451122 UTC

.section .text
.align 8
_c3glP:
_c3glP:
	movq (%rbp),%rax
	movq 3(%rax),%rax
	leaq block_c3glS_info(%rip),%rbx
	movq %rbx,-16(%rbp)
	leaq GHC.Float.rationalToDouble5_closure(%rip),%rsi
	movq 24(%rbp),%r14
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
	.size _c3glP, .-_c3glP


==================== Asm code ====================
2018-03-16 15:57:54.780218636 UTC

.section .data.rel.ro
.align 8
.align 1
u3gpD_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611689901077823489


==================== Asm code ====================
2018-03-16 15:57:54.780870039 UTC

.section .text
.align 8
_c3glS:
_c3glS:
	cmpq $1,%rbx
	je _c3gmT
_c3gmS:
	leaq block_c3glW_info(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%rsi
	movq 32(%rbp),%r14
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
_c3gmT:
	movq GHC.Real.divZeroError_closure@gotpcrel(%rip),%rbx
	addq $64,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c3glS, .-_c3glS


==================== Asm code ====================
2018-03-16 15:57:54.781524784 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3glS_info:
	.quad	_c3glS
	.quad	7
	.quad	-4294967266
	.quad	u3gpD_srtd


==================== Asm code ====================
2018-03-16 15:57:54.782156304 UTC

.section .data.rel.ro
.align 8
.align 1
u3gpE_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611689901077823489


==================== Asm code ====================
2018-03-16 15:57:54.782807304 UTC

.section .text
.align 8
_c3glW:
_c3glW:
	leaq block_c3gm0_info(%rip),%rax
	movq %rax,(%rbp)
	movq 40(%rbp),%rsi
	movq %rbx,%r14
	jmp *GHC.Integer.Type.quotRemInteger_entry@gotpcrel(%rip)
	.size _c3glW, .-_c3glW


==================== Asm code ====================
2018-03-16 15:57:54.783415572 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3glW_info:
	.quad	_c3glW
	.quad	519
	.quad	-4294967266
	.quad	u3gpE_srtd


==================== Asm code ====================
2018-03-16 15:57:54.783970051 UTC

.section .data.rel.ro
.align 8
.align 1
u3gpF_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611689901077823489


==================== Asm code ====================
2018-03-16 15:57:54.784731914 UTC

.section .text
.align 8
_c3gm0:
_c3gm0:
	leaq block_c3gm2_info(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%rsi
	movq %r14,%rax
	movq 48(%rbp),%r14
	movq %rax,32(%rbp)
	movq %rbx,48(%rbp)
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c3gm0, .-_c3gm0


==================== Asm code ====================
2018-03-16 15:57:54.786193698 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gm0_info:
	.quad	_c3gm0
	.quad	519
	.quad	-4294967266
	.quad	u3gpF_srtd


==================== Asm code ====================
2018-03-16 15:57:54.786744845 UTC

.section .data.rel.ro
.align 8
.align 1
u3gpG_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611689901077823489


==================== Asm code ====================
2018-03-16 15:57:54.787554006 UTC

.section .text
.align 8
_c3gm2:
_c3gm2:
	leaq block_c3gm6_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rsi
	movq 32(%rbp),%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Integer.Type.plusInteger_entry@gotpcrel(%rip)
	.size _c3gm2, .-_c3gm2


==================== Asm code ====================
2018-03-16 15:57:54.788184822 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gm2_info:
	.quad	_c3gm2
	.quad	7
	.quad	-4294967266
	.quad	u3gpG_srtd


==================== Asm code ====================
2018-03-16 15:57:54.788711555 UTC

.section .data.rel.ro
.align 8
.align 1
u3gpH_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611689901077823489


==================== Asm code ====================
2018-03-16 15:57:54.789391644 UTC

.section .text
.align 8
_c3gm6:
_c3gm6:
	leaq block_c3gma_info(%rip),%rax
	movq %rax,(%rbp)
	movq 48(%rbp),%rsi
	movq %rbx,%r14
	jmp *GHC.Integer.Type.gtInteger#_entry@gotpcrel(%rip)
	.size _c3gm6, .-_c3gm6


==================== Asm code ====================
2018-03-16 15:57:54.789955724 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gm6_info:
	.quad	_c3gm6
	.quad	8
	.quad	-4294967266
	.quad	u3gpH_srtd


==================== Asm code ====================
2018-03-16 15:57:54.790512581 UTC

.section .data.rel.ro
.align 8
.align 1
u3gpI_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611689901077823489


==================== Asm code ====================
2018-03-16 15:57:54.79117145 UTC

.section .text
.align 8
_c3gma:
_c3gma:
	leaq block_c3gme_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%rsi
	movq 64(%rbp),%r14
	movq %rbx,64(%rbp)
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c3gma, .-_c3gma


==================== Asm code ====================
2018-03-16 15:57:54.791769663 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gma_info:
	.quad	_c3gma
	.quad	8
	.quad	-4294967266
	.quad	u3gpI_srtd


==================== Asm code ====================
2018-03-16 15:57:54.792467171 UTC

.section .data.rel.ro
.align 8
.align 1
u3gpJ_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611689901077823489


==================== Asm code ====================
2018-03-16 15:57:54.793117418 UTC

.section .text
.align 8
_c3gme:
_c3gme:
	leaq block_c3gmi_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rsi
	movq 40(%rbp),%r14
	movq %rbx,16(%rbp)
	jmp *GHC.Integer.Type.ltInteger#_entry@gotpcrel(%rip)
	.size _c3gme, .-_c3gme


==================== Asm code ====================
2018-03-16 15:57:54.793747893 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gme_info:
	.quad	_c3gme
	.quad	8328
	.quad	-4294967266
	.quad	u3gpJ_srtd


==================== Asm code ====================
2018-03-16 15:57:54.794317981 UTC

.section .data.rel.ro
.align 8
.align 1
u3gpK_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611689901077823489


==================== Asm code ====================
2018-03-16 15:57:54.79547079 UTC

.section .text
.align 8
_c3gmi:
_c3gmi:
	movq 32(%rbp),%rax
	movq 56(%rbp),%rcx
	movq 40(%rbp),%rdx
	movq 64(%rbp),%rsi
	cmpq $1,%rbx
	je _c3gnd
_c3gn5:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c3gn8
_c3gn7:
	cmpq $1,%rsi
	je _c3gnc
_c3gna:
	movq :_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rax,-24(%r12)
	leaq -38(%r12),%rax
	addq $-24,%r12
	movq %rax,32(%rbp)
	movq %rdx,40(%rbp)
	movq 48(%rbp),%rax
	movq %rax,48(%rbp)
	movq 8(%rbp),%rax
	movq %rax,56(%rbp)
	movq 16(%rbp),%rax
	movq %rax,64(%rbp)
	addq $24,%rbp
	jmp _c3glP
_c3gnk:
	addq $-24,%r12
	leaq block_c3gmC_info(%rip),%rax
	movq %rax,24(%rbp)
	leaq GHC.Float.$fRealFloatDouble5_closure(%rip),%rsi
	movq %rdx,%r14
	addq $24,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
_c3gnd:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3gng
_c3gnf:
	cmpq $1,%rsi
	je _c3gnk
_c3gnj:
	movq :_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $72,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3gng:
	movq $24,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
_c3gnc:
	leaq sat_s3bfq_info(%rip),%rbx
	movq %rbx,-40(%r12)
	movq %rcx,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	leaq -40(%r12),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $72,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3gn8:
	movq $48,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c3gmi, .-_c3gmi


==================== Asm code ====================
2018-03-16 15:57:54.796484155 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gmi_info:
	.quad	_c3gmi
	.quad	8200
	.quad	-4294967266
	.quad	u3gpK_srtd


==================== Asm code ====================
2018-03-16 15:57:54.797211212 UTC

.section .text
.align 8
_c3gmC:
_c3gmC:
	leaq block_c3gmG_info(%rip),%rax
	movq %rax,(%rbp)
	movq 24(%rbp),%rsi
	movq %rbx,%r14
	jmp *GHC.Integer.Type.ltInteger#_entry@gotpcrel(%rip)
	.size _c3gmC, .-_c3gmC


==================== Asm code ====================
2018-03-16 15:57:54.797964784 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gmC_info:
	.quad	_c3gmC
	.quad	1157
	.quad	21474836510
	.quad	S3bQP_srt+864


==================== Asm code ====================
2018-03-16 15:57:54.798850292 UTC

.section .text
.align 8
_c3gmG:
_c3gmG:
	movq 8(%rbp),%rax
	movq 32(%rbp),%rcx
	cmpq $1,%rbx
	je _c3gnv
_c3gno:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c3gnr
_c3gnq:
	leaq sat_s3bfu_info(%rip),%rbx
	movq %rbx,-40(%r12)
	movq %rcx,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	leaq -40(%r12),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3gny:
	movq $24,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
_c3gnv:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3gny
_c3gnx:
	movq :_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3gnr:
	movq $48,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c3gmG, .-_c3gmG


==================== Asm code ====================
2018-03-16 15:57:54.799638601 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gmG_info:
	.quad	_c3gmG
	.quad	1413
	.quad	21474836510
	.quad	S3bQP_srt+864


==================== Asm code ====================
2018-03-16 15:57:54.800189043 UTC

.section .data.rel.ro
.align 8
.align 1
u3gpL_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4613941700891508737


==================== Asm code ====================
2018-03-16 15:57:54.800959489 UTC

.section .text
.align 8
sat_s3bfS_entry:
_c3gnG:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _c3gnH
_c3gnI:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3glI_info(%rip),%rax
	movq %rax,-64(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%rbx
	movq %rax,-56(%rbp)
	movq %rcx,-48(%rbp)
	movq %rdx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	addq $-64,%rbp
	testb $7,%bl
	jne _c3glI
_c3glJ:
	movq (%rbx),%rax
	jmp *(%rax)
_c3gnH:
	jmp *-16(%r13)
	.size sat_s3bfS_entry, .-sat_s3bfS_entry


==================== Asm code ====================
2018-03-16 15:57:54.801869743 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bfS_info:
	.quad	sat_s3bfS_entry
	.quad	6
	.quad	-4294967281
	.quad	u3gpL_srtd


==================== Asm code ====================
2018-03-16 15:57:54.802476982 UTC

.section .data.rel.ro
.align 8
.align 1
u3gpM_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4613941700891508737


==================== Asm code ====================
2018-03-16 15:57:54.803357035 UTC

.section .text
.align 8
_c3glI:
_c3glI:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3gnL
_c3gnK:
	movq 7(%rbx),%rax
	leaq gen_s3bf8_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,(%r12)
	movq 16(%rbp),%rbx
	leaq -3(%r12),%rcx
	testq %rax,%rax
	jl _c3goj
_c3goN:
	leaq block_c3gov_info(%rip),%rdx
	movq %rdx,-8(%rbp)
	movq %rax,(%rbp)
	movq %rcx,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c3gov
_c3gow:
	movq (%rbx),%rax
	jmp *(%rax)
_c3goj:
	leaq block_c3gnP_info(%rip),%rdx
	movq %rdx,-8(%rbp)
	movq %rax,(%rbp)
	movq %rcx,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c3gnP
_c3gnQ:
	movq (%rbx),%rax
	jmp *(%rax)
_c3gnL:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3glI, .-_c3glI


==================== Asm code ====================
2018-03-16 15:57:54.804107231 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3glI_info:
	.quad	_c3glI
	.quad	5
	.quad	-4294967266
	.quad	u3gpM_srtd


==================== Asm code ====================
2018-03-16 15:57:54.80466344 UTC

.section .data.rel.ro
.align 8
.align 1
u3gpN_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4613941700891508737


==================== Asm code ====================
2018-03-16 15:57:54.805389798 UTC

.section .text
.align 8
_c3gnP:
_c3gnP:
	movq 8(%rbp),%rax
	negq %rax
	leaq block_c3gnX_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq 16(%rbp),%r14
	movq 31(%rbx),%rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp GHC.Float.$wexpt_entry
	.size _c3gnP, .-_c3gnP


==================== Asm code ====================
2018-03-16 15:57:54.806516184 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gnP_info:
	.quad	_c3gnP
	.quad	70
	.quad	-4294967266
	.quad	u3gpN_srtd


==================== Asm code ====================
2018-03-16 15:57:54.807164933 UTC

.section .data.rel.ro
.align 8
.align 1
u3gpO_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611689901077823489


==================== Asm code ====================
2018-03-16 15:57:54.80792421 UTC

.section .text
.align 8
_c3gnX:
_c3gnX:
	leaq block_c3go1_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rsi
	movq 8(%rbp),%r14
	movq %rbx,8(%rbp)
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c3gnX, .-_c3gnX


==================== Asm code ====================
2018-03-16 15:57:54.808496426 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gnX_info:
	.quad	_c3gnX
	.quad	5
	.quad	-4294967266
	.quad	u3gpO_srtd


==================== Asm code ====================
2018-03-16 15:57:54.809064744 UTC

.section .data.rel.ro
.align 8
.align 1
u3gpP_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611689901077823489


==================== Asm code ====================
2018-03-16 15:57:54.809769343 UTC

.section .text
.align 8
_c3go1:
_c3go1:
	leaq block_c3go5_info(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%rsi
	movq 40(%rbp),%r14
	movq %rbx,40(%rbp)
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c3go1, .-_c3go1


==================== Asm code ====================
2018-03-16 15:57:54.810357719 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3go1_info:
	.quad	_c3go1
	.quad	5
	.quad	-4294967266
	.quad	u3gpP_srtd


==================== Asm code ====================
2018-03-16 15:57:54.810916535 UTC

.section .data.rel.ro
.align 8
.align 1
u3gpQ_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611689901077823489


==================== Asm code ====================
2018-03-16 15:57:54.811573527 UTC

.section .text
.align 8
_c3go5:
_c3go5:
	movq 8(%rbp),%rax
	leaq block_c3go9_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq 32(%rbp),%r14
	movq %rbx,32(%rbp)
	addq $8,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c3go5, .-_c3go5


==================== Asm code ====================
2018-03-16 15:57:54.812225056 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3go5_info:
	.quad	_c3go5
	.quad	5
	.quad	-4294967266
	.quad	u3gpQ_srtd


==================== Asm code ====================
2018-03-16 15:57:54.812746644 UTC

.section .data.rel.ro
.align 8
.align 1
u3gpR_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611689901077823489


==================== Asm code ====================
2018-03-16 15:57:54.813500415 UTC

.section .text
.align 8
_c3go9:
_c3go9:
	movq 32(%rbp),%rax
	leaq block_c3god_info(%rip),%rcx
	movq %rcx,32(%rbp)
	movq %rax,%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq %rbx,%rsi
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r14
	movq 8(%rbp),%rbx
	addq $32,%rbp
	jmp gen_s3bf8_entry
	.size _c3go9, .-_c3go9


==================== Asm code ====================
2018-03-16 15:57:54.814140115 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3go9_info:
	.quad	_c3go9
	.quad	4
	.quad	-4294967266
	.quad	u3gpR_srtd


==================== Asm code ====================
2018-03-16 15:57:54.814810118 UTC

.section .text
.align 8
_c3god:
_c3god:
	leaq block_c3goh_info(%rip),%rax
	movq %rax,(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rsi
	movq %rbx,%r14
	jmp *GHC.List.reverse1_entry@gotpcrel(%rip)
	.size _c3god, .-_c3god


==================== Asm code ====================
2018-03-16 15:57:54.815378545 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3god_info:
	.quad	_c3god
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:54.816018544 UTC

.section .text
.align 8
_c3goh:
_c3goh:
	movq %rbx,%rsi
	leaq lvl8_r2UqG_closure+1(%rip),%r14
	addq $8,%rbp
	jmp *GHC.Base.map_entry@gotpcrel(%rip)
	.size _c3goh, .-_c3goh


==================== Asm code ====================
2018-03-16 15:57:54.816600609 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3goh_info:
	.quad	_c3goh
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:54.817195538 UTC

.section .data.rel.ro
.align 8
.align 1
u3gpS_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4613941700891508737


==================== Asm code ====================
2018-03-16 15:57:54.818159835 UTC

.section .text
.align 8
_c3gov:
_c3gov:
	movq 8(%rbp),%rax
	leaq block_c3goA_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq 16(%rbp),%r14
	movq 31(%rbx),%rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp GHC.Float.$wexpt_entry
	.size _c3gov, .-_c3gov


==================== Asm code ====================
2018-03-16 15:57:54.818698037 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gov_info:
	.quad	_c3gov
	.quad	70
	.quad	-4294967266
	.quad	u3gpS_srtd


==================== Asm code ====================
2018-03-16 15:57:54.819269759 UTC

.section .data.rel.ro
.align 8
.align 1
u3gpT_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611689901077823489


==================== Asm code ====================
2018-03-16 15:57:54.819950834 UTC

.section .text
.align 8
_c3goA:
_c3goA:
	leaq block_c3goE_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rsi
	movq 24(%rbp),%r14
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c3goA, .-_c3goA


==================== Asm code ====================
2018-03-16 15:57:54.820557667 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3goA_info:
	.quad	_c3goA
	.quad	5
	.quad	-4294967266
	.quad	u3gpT_srtd


==================== Asm code ====================
2018-03-16 15:57:54.821122235 UTC

.section .data.rel.ro
.align 8
.align 1
u3gpU_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611689901077823489


==================== Asm code ====================
2018-03-16 15:57:54.821903347 UTC

.section .text
.align 8
_c3goE:
_c3goE:
	movq 40(%rbp),%rax
	leaq block_c3goI_info(%rip),%rcx
	movq %rcx,40(%rbp)
	movq 8(%rbp),%r9
	movq %rax,%r8
	movq %rbx,%rdi
	movq 32(%rbp),%rsi
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r14
	movq 16(%rbp),%rbx
	addq $40,%rbp
	jmp gen_s3bf8_entry
	.size _c3goE, .-_c3goE


==================== Asm code ====================
2018-03-16 15:57:54.82251721 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3goE_info:
	.quad	_c3goE
	.quad	261
	.quad	-4294967266
	.quad	u3gpU_srtd


==================== Asm code ====================
2018-03-16 15:57:54.823186548 UTC

.section .text
.align 8
_c3goI:
_c3goI:
	leaq block_c3goM_info(%rip),%rax
	movq %rax,(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rsi
	movq %rbx,%r14
	jmp *GHC.List.reverse1_entry@gotpcrel(%rip)
	.size _c3goI, .-_c3goI


==================== Asm code ====================
2018-03-16 15:57:54.823792413 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3goI_info:
	.quad	_c3goI
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:54.824450134 UTC

.section .text
.align 8
_c3goM:
_c3goM:
	movq %rbx,%rsi
	leaq lvl8_r2UqG_closure+1(%rip),%r14
	addq $8,%rbp
	jmp *GHC.Base.map_entry@gotpcrel(%rip)
	.size _c3goM, .-_c3goM


==================== Asm code ====================
2018-03-16 15:57:54.825041783 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3goM_info:
	.quad	_c3goM
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:54.825692356 UTC

.section .data.rel.ro
.align 8
.align 1
u3gpV_srtd:
	.quad	S3bQP_srt+552
	.quad	69
	.quad	4613941700925194241
	.quad	29


==================== Asm code ====================
2018-03-16 15:57:54.826727143 UTC

.section .text
.align 8
.globl GHC.Float.$w$sfloatToDigits_entry
.type GHC.Float.$w$sfloatToDigits_entry, @object
GHC.Float.$w$sfloatToDigits_entry:
_c3gp2:
	addq $312,%r12
	cmpq 856(%r13),%r12
	ja _c3gp6
_c3gp5:
	xorpd %xmm0,%xmm0
	ucomisd %xmm0,%xmm1
	jp _c3gp0
	je _c3gp1
_c3gp0:
	leaq ds_s3bdf_info(%rip),%rax
	movq %rax,-304(%r12)
	movsd %xmm1,-288(%r12)
	leaq ds1_s3bdk_info(%rip),%rax
	movq %rax,-280(%r12)
	leaq -304(%r12),%rax
	movq %rax,-264(%r12)
	movq stg_sel_0_upd_info@gotpcrel(%rip),%rbx
	movq %rbx,-256(%r12)
	leaq -280(%r12),%rbx
	movq %rbx,-240(%r12)
	leaq ds2_s3bdB_info(%rip),%rcx
	movq %rcx,-232(%r12)
	movq %rbx,-216(%r12)
	leaq -256(%r12),%rcx
	movq %rcx,-208(%r12)
	movq stg_sel_1_upd_info@gotpcrel(%rip),%rdx
	movq %rdx,-200(%r12)
	leaq -232(%r12),%rdx
	movq %rdx,-184(%r12)
	movq stg_sel_0_upd_info@gotpcrel(%rip),%rsi
	movq %rsi,-176(%r12)
	movq %rdx,-160(%r12)
	movq stg_sel_2_upd_info@gotpcrel(%rip),%rsi
	movq %rsi,-152(%r12)
	movq %rdx,-136(%r12)
	leaq k_s3bel_info(%rip),%rsi
	movq %rsi,-128(%r12)
	movq %r14,-112(%r12)
	movq %rax,-104(%r12)
	movq %rbx,-96(%r12)
	movq %rcx,-88(%r12)
	leaq -200(%r12),%rax
	movq %rax,-80(%r12)
	leaq -176(%r12),%rbx
	movq %rbx,-72(%r12)
	leaq -152(%r12),%rcx
	movq %rcx,-64(%r12)
	leaq sat_s3bfS_info(%rip),%rsi
	movq %rsi,-56(%r12)
	movq %r14,-40(%r12)
	movq %rdx,-32(%r12)
	movq %rax,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	leaq -128(%r12),%rax
	movq %rax,(%r12)
	movq %rax,%r14
	leaq -56(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c3gp6:
	movq $312,904(%r13)
	leaq GHC.Float.$w$sfloatToDigits_closure(%rip),%rbx
	movq %r14,-16(%rbp)
	movsd %xmm1,-8(%rbp)
	addq $-16,%rbp
	jmp *-8(%r13)
_c3gp1:
	addq $-312,%r12
	leaq GHC.Float.minExpt_closure+1(%rip),%r14
	leaq lvl3_r2UpB_closure+2(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Float.$w$sfloatToDigits_entry, .-GHC.Float.$w$sfloatToDigits_entry


==================== Asm code ====================
2018-03-16 15:57:54.827752834 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$w$sfloatToDigits_info
.type GHC.Float.$w$sfloatToDigits_info, @object
GHC.Float.$w$sfloatToDigits_info:
	.quad	GHC.Float.$w$sfloatToDigits_entry
	.quad	0
	.quad	-4294967282
	.quad	8589934592
	.quad	u3gpV_srtd
	.quad	130
	.quad	GHC.Float.$w$sfloatToDigits_slow


==================== Asm code ====================
2018-03-16 15:57:54.891813664 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$wfloatToDigits_closure
.type GHC.Float.$wfloatToDigits_closure, @object
GHC.Float.$wfloatToDigits_closure:
	.quad	GHC.Float.$wfloatToDigits_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:54.892669254 UTC

.section .text
.align 8
sat_s3bg1_entry:
_c3gyh:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3gyi
_c3gyj:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3gyf_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp *GHC.Real.$p1Real_entry@gotpcrel(%rip)
_c3gyi:
	jmp *-16(%r13)
	.size sat_s3bg1_entry, .-sat_s3bg1_entry


==================== Asm code ====================
2018-03-16 15:57:54.893359142 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bg1_info:
	.quad	sat_s3bg1_entry
	.quad	1
	.quad	4294967312
	.quad	S3bQP_srt+1104


==================== Asm code ====================
2018-03-16 15:57:54.89408736 UTC

.section .text
.align 8
_c3gyf:
_c3gyf:
	movq %rbx,%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-8(%rbp)
	leaq GHC.Float.rationalToDouble5_closure(%rip),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
	.size _c3gyf, .-_c3gyf


==================== Asm code ====================
2018-03-16 15:57:54.894660792 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gyf_info:
	.quad	_c3gyf
	.quad	0
	.quad	4294967326
	.quad	S3bQP_srt+1104


==================== Asm code ====================
2018-03-16 15:57:54.89534949 UTC

.section .text
.align 8
b_s3bg3_entry:
_c3gyD:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3gyE
_c3gyF:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Float.floatRadix_entry
_c3gyE:
	jmp *-16(%r13)
	.size b_s3bg3_entry, .-b_s3bg3_entry


==================== Asm code ====================
2018-03-16 15:57:54.895985411 UTC

.section .data.rel.ro
.align 8
.align 1
b_s3bg3_info:
	.quad	b_s3bg3_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:54.89670688 UTC

.section .text
.align 8
p_s3bg4_entry:
_c3gyK:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3gyL
_c3gyM:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Float.floatDigits_entry
_c3gyL:
	jmp *-16(%r13)
	.size p_s3bg4_entry, .-p_s3bg4_entry


==================== Asm code ====================
2018-03-16 15:57:54.897426728 UTC

.section .data.rel.ro
.align 8
.align 1
p_s3bg4_info:
	.quad	p_s3bg4_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:54.898154001 UTC

.section .text
.align 8
minExp_s3bg5_entry:
_c3gyT:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c3gza
_c3gzb:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3gyR_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-48(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-48,%rbp
	jmp GHC.Float.floatRange_entry
_c3gza:
	jmp *-16(%r13)
	.size minExp_s3bg5_entry, .-minExp_s3bg5_entry


==================== Asm code ====================
2018-03-16 15:57:54.898825258 UTC

.section .data.rel.ro
.align 8
.align 1
minExp_s3bg5_info:
	.quad	minExp_s3bg5_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:57:54.899501381 UTC

.section .text
.align 8
_c3gyR:
_c3gyR:
	leaq block_c3gyW_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rbx
	testb $7,%bl
	jne _c3gyW
_c3gyX:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3gyR, .-_c3gyR


==================== Asm code ====================
2018-03-16 15:57:54.900067962 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gyR_info:
	.quad	_c3gyR
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:54.900738871 UTC

.section .text
.align 8
_c3gyW:
_c3gyW:
	leaq block_c3gz1_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c3gz1
_c3gz2:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3gyW, .-_c3gyW


==================== Asm code ====================
2018-03-16 15:57:54.901461701 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gyW_info:
	.quad	_c3gyW
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:54.902210574 UTC

.section .text
.align 8
_c3gz1:
_c3gz1:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3gzg
_c3gzf:
	leaq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	subq (%rax),%rbx
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -7(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3gzg:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3gz1, .-_c3gz1


==================== Asm code ====================
2018-03-16 15:57:54.902873956 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gz1_info:
	.quad	_c3gz1
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:54.903590888 UTC

.section .text
.align 8
ds_s3bge_entry:
_c3gzn:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3gzo
_c3gzp:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Float.decodeFloat_entry
_c3gzo:
	jmp *-16(%r13)
	.size ds_s3bge_entry, .-ds_s3bge_entry


==================== Asm code ====================
2018-03-16 15:57:54.904244899 UTC

.section .data.rel.ro
.align 8
.align 1
ds_s3bge_info:
	.quad	ds_s3bge_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:54.904954095 UTC

.section .text
.align 8
sat_s3bgr_entry:
_c3gA0:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c3gA1
_c3gA2:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3gzY_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rsi
	movq 16(%rbx),%r14
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp GHC.Float.$wexpt_entry
_c3gA1:
	jmp *-16(%r13)
	.size sat_s3bgr_entry, .-sat_s3bgr_entry


==================== Asm code ====================
2018-03-16 15:57:54.905761272 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bgr_info:
	.quad	sat_s3bgr_entry
	.quad	4294967298
	.quad	2305851809601683471
	.quad	S3bQP_srt+872


==================== Asm code ====================
2018-03-16 15:57:54.906449408 UTC

.section .text
.align 8
_c3gzY:
_c3gzY:
	leaq block_c3gA5_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq GHC.Float.rationalToDouble5_closure(%rip),%rsi
	movq %rbx,%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
	.size _c3gzY, .-_c3gzY


==================== Asm code ====================
2018-03-16 15:57:54.907032302 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gzY_info:
	.quad	_c3gzY
	.quad	1
	.quad	2305843013508661278
	.quad	S3bQP_srt+872


==================== Asm code ====================
2018-03-16 15:57:54.907738044 UTC

.section .text
.align 8
_c3gA5:
_c3gA5:
	cmpq $1,%rbx
	je _c3gAg
_c3gAc:
	movq 8(%rbp),%rsi
	movq 16(%rbp),%r14
	addq $24,%rbp
	jmp *GHC.Integer.Type.quotInteger_entry@gotpcrel(%rip)
_c3gAg:
	movq GHC.Real.divZeroError_closure@gotpcrel(%rip),%rbx
	addq $24,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c3gA5, .-_c3gA5


==================== Asm code ====================
2018-03-16 15:57:54.908353028 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gA5_info:
	.quad	_c3gA5
	.quad	2
	.quad	4294967326
	.quad	S3bQP_srt+872


==================== Asm code ====================
2018-03-16 15:57:54.909128346 UTC

.section .text
.align 8
ds1_s3bgf_entry:
_c3gAh:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _c3gAi
_c3gAj:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3gzu_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 16(%rbx),%rax
	movq 32(%rbx),%rcx
	movq 24(%rbx),%rbx
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _c3gzu
_c3gzv:
	movq (%rbx),%rax
	jmp *(%rax)
_c3gAi:
	jmp *-16(%r13)
	.size ds1_s3bgf_entry, .-ds1_s3bgf_entry


==================== Asm code ====================
2018-03-16 15:57:54.909902375 UTC

.section .data.rel.ro
.align 8
.align 1
ds1_s3bgf_info:
	.quad	ds1_s3bgf_entry
	.quad	3
	.quad	2305851809601683471
	.quad	S3bQP_srt+872


==================== Asm code ====================
2018-03-16 15:57:54.910582469 UTC

.section .text
.align 8
_c3gzu:
_c3gzu:
	leaq block_c3gzz_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c3gzz
_c3gzA:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3gzu, .-_c3gzu


==================== Asm code ====================
2018-03-16 15:57:54.911202096 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gzu_info:
	.quad	_c3gzu
	.quad	2
	.quad	2305851809601683486
	.quad	S3bQP_srt+872


==================== Asm code ====================
2018-03-16 15:57:54.911873017 UTC

.section .text
.align 8
_c3gzz:
_c3gzz:
	leaq block_c3gzE_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,%rax
	movq 7(%rbx),%rcx
	movq 15(%rbx),%rbx
	movq %rcx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3gzE
_c3gzF:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3gzz, .-_c3gzz


==================== Asm code ====================
2018-03-16 15:57:54.912497652 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gzz_info:
	.quad	_c3gzz
	.quad	130
	.quad	2305851809601683486
	.quad	S3bQP_srt+872


==================== Asm code ====================
2018-03-16 15:57:54.913434613 UTC

.section .text
.align 8
_c3gzE:
_c3gzE:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _c3gAo
_c3gAn:
	movq 7(%rbx),%rax
	movq 32(%rbp),%rbx
	subq %rax,%rbx
	testq %rbx,%rbx
	jle _c3gAq
_c3gAs:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-72(%r12)
	addq %rbx,%rax
	movq %rax,-64(%r12)
	leaq sat_s3bgr_info(%rip),%rax
	movq %rax,-56(%r12)
	movq 24(%rbp),%rax
	movq %rax,-40(%r12)
	movq 8(%rbp),%rax
	movq %rax,-32(%r12)
	movq %rbx,-24(%r12)
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -56(%r12),%rax
	movq %rax,-8(%r12)
	leaq -71(%r12),%rax
	movq %rax,(%r12)
	leaq -15(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3gAq:
	addq $-80,%r12
	movq 16(%rbp),%rbx
	andq $-8,%rbx
	addq $40,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c3gAo:
	movq $80,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3gzE, .-_c3gzE


==================== Asm code ====================
2018-03-16 15:57:54.914287543 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gzE_info:
	.quad	_c3gzE
	.quad	516
	.quad	2305851809601683486
	.quad	S3bQP_srt+872


==================== Asm code ====================
2018-03-16 15:57:54.914824011 UTC

.section .data.rel.ro
.align 8
.align 1
u3gLB_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4613937818241073153


==================== Asm code ====================
2018-03-16 15:57:54.915601967 UTC

.section .text
.align 8
sat_s3bgL_entry:
_c3gB4:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3gB7
_c3gB8:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3gB6_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 24(%rbx),%rsi
	negq %rsi
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp GHC.Float.$wexpt_entry
_c3gB7:
	jmp *-16(%r13)
	.size sat_s3bgL_entry, .-sat_s3bgL_entry


==================== Asm code ====================
2018-03-16 15:57:54.916247557 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bgL_info:
	.quad	sat_s3bgL_entry
	.quad	4294967297
	.quad	-4294967277
	.quad	u3gLB_srtd


==================== Asm code ====================
2018-03-16 15:57:54.916796279 UTC

.section .data.rel.ro
.align 8
.align 1
u3gLC_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:54.917527749 UTC

.section .text
.align 8
_c3gB6:
_c3gB6:
	leaq GHC.Float.$fRealFloatDouble5_closure(%rip),%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c3gB6, .-_c3gB6


==================== Asm code ====================
2018-03-16 15:57:54.918135024 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gB6_info:
	.quad	_c3gB6
	.quad	0
	.quad	-4294967266
	.quad	u3gLC_srtd


==================== Asm code ====================
2018-03-16 15:57:54.91868892 UTC

.section .data.rel.ro
.align 8
.align 1
u3gLD_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:54.919379809 UTC

.section .text
.align 8
sat_s3bgI_entry:
_c3gBh:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3gBi
_c3gBj:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq GHC.Float.$fRealFloatDouble5_closure(%rip),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
_c3gBi:
	jmp *-16(%r13)
	.size sat_s3bgI_entry, .-sat_s3bgI_entry


==================== Asm code ====================
2018-03-16 15:57:54.920028362 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bgI_info:
	.quad	sat_s3bgI_entry
	.quad	1
	.quad	-4294967280
	.quad	u3gLD_srtd


==================== Asm code ====================
2018-03-16 15:57:54.921710483 UTC

.section .data.rel.ro
.align 8
.align 1
u3gLE_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4613937818241073153


==================== Asm code ====================
2018-03-16 15:57:54.92258758 UTC

.section .text
.align 8
sat_s3bgX_entry:
_c3gBL:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3gBR
_c3gBS:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3gBQ_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 24(%rbx),%rax
	negq %rax
	leaq 1(%rax),%rsi
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp GHC.Float.$wexpt_entry
_c3gBR:
	jmp *-16(%r13)
	.size sat_s3bgX_entry, .-sat_s3bgX_entry


==================== Asm code ====================
2018-03-16 15:57:54.923294935 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bgX_info:
	.quad	sat_s3bgX_entry
	.quad	4294967297
	.quad	-4294967277
	.quad	u3gLE_srtd


==================== Asm code ====================
2018-03-16 15:57:54.923851787 UTC

.section .data.rel.ro
.align 8
.align 1
u3gLF_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:54.924538558 UTC

.section .text
.align 8
_c3gBQ:
_c3gBQ:
	leaq GHC.Float.$fRealFloatDouble5_closure(%rip),%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c3gBQ, .-_c3gBQ


==================== Asm code ====================
2018-03-16 15:57:54.925114443 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gBQ_info:
	.quad	_c3gBQ
	.quad	0
	.quad	-4294967266
	.quad	u3gLF_srtd


==================== Asm code ====================
2018-03-16 15:57:54.925755294 UTC

.section .data.rel.ro
.align 8
.align 1
u3gLG_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:54.926467867 UTC

.section .text
.align 8
sat_s3bgT_entry:
_c3gC3:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3gC4
_c3gC5:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3gC1_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rsi
	movq 24(%rbx),%r14
	addq $-24,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
_c3gC4:
	jmp *-16(%r13)
	.size sat_s3bgT_entry, .-sat_s3bgT_entry


==================== Asm code ====================
2018-03-16 15:57:54.927124558 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bgT_info:
	.quad	sat_s3bgT_entry
	.quad	2
	.quad	-4294967278
	.quad	u3gLG_srtd


==================== Asm code ====================
2018-03-16 15:57:54.927666455 UTC

.section .data.rel.ro
.align 8
.align 1
u3gLH_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:54.928315932 UTC

.section .text
.align 8
_c3gC1:
_c3gC1:
	leaq GHC.Float.$fRealFloatDouble5_closure(%rip),%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c3gC1, .-_c3gC1


==================== Asm code ====================
2018-03-16 15:57:54.928879413 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gC1_info:
	.quad	_c3gC1
	.quad	0
	.quad	-4294967266
	.quad	u3gLH_srtd


==================== Asm code ====================
2018-03-16 15:57:54.929621153 UTC

.section .text
.align 8
be_s3bh0_entry:
_c3gCj:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3gCk
_c3gCl:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Float.$wexpt_entry
_c3gCk:
	jmp *-16(%r13)
	.size be_s3bh0_entry, .-be_s3bh0_entry


==================== Asm code ====================
2018-03-16 15:57:54.930335348 UTC

.section .data.rel.ro
.align 8
.align 1
be_s3bh0_info:
	.quad	be_s3bh0_entry
	.quad	4294967297
	.quad	4294967315
	.quad	S3bQP_srt+960


==================== Asm code ====================
2018-03-16 15:57:54.930938368 UTC

.section .data.rel.ro
.align 8
.align 1
u3gLI_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:54.931649118 UTC

.section .text
.align 8
sat_s3bh5_entry:
_c3gCD:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3gCE
_c3gCF:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3gCB_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 24(%rbx),%rsi
	movq 16(%rbx),%r14
	addq $-24,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
_c3gCE:
	jmp *-16(%r13)
	.size sat_s3bh5_entry, .-sat_s3bh5_entry


==================== Asm code ====================
2018-03-16 15:57:54.93238897 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bh5_info:
	.quad	sat_s3bh5_entry
	.quad	2
	.quad	-4294967278
	.quad	u3gLI_srtd


==================== Asm code ====================
2018-03-16 15:57:54.933066956 UTC

.section .data.rel.ro
.align 8
.align 1
u3gLJ_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:54.934052209 UTC

.section .text
.align 8
_c3gCB:
_c3gCB:
	leaq GHC.Float.$fRealFloatDouble5_closure(%rip),%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c3gCB, .-_c3gCB


==================== Asm code ====================
2018-03-16 15:57:54.934914417 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gCB_info:
	.quad	_c3gCB
	.quad	0
	.quad	-4294967266
	.quad	u3gLJ_srtd


==================== Asm code ====================
2018-03-16 15:57:54.936019637 UTC

.section .text
.align 8
sat_s3bha_entry:
_c3gCP:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3gCQ
_c3gCR:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rsi
	movq 24(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
_c3gCQ:
	jmp *-16(%r13)
	.size sat_s3bha_entry, .-sat_s3bha_entry


==================== Asm code ====================
2018-03-16 15:57:54.937031239 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bha_info:
	.quad	sat_s3bha_entry
	.quad	2
	.quad	4294967314
	.quad	S3bQP_srt+1048


==================== Asm code ====================
2018-03-16 15:57:54.937736194 UTC

.section .data.rel.ro
.align 8
.align 1
u3gLK_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:54.938461147 UTC

.section .text
.align 8
sat_s3bh9_entry:
_c3gCW:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3gCX
_c3gCY:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rsi
	leaq GHC.Float.$fRealFloatDouble5_closure(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
_c3gCX:
	jmp *-16(%r13)
	.size sat_s3bh9_entry, .-sat_s3bh9_entry


==================== Asm code ====================
2018-03-16 15:57:54.939117703 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bh9_info:
	.quad	sat_s3bh9_entry
	.quad	1
	.quad	-4294967280
	.quad	u3gLK_srtd


==================== Asm code ====================
2018-03-16 15:57:54.940001471 UTC

.section .data.rel.ro
.align 8
.align 1
u3gLL_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:54.941127718 UTC

.section .text
.align 8
sat_s3bh8_entry:
_c3gD5:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3gD9
_c3gDa:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3gD3_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 32(%rbx),%rsi
	movq 24(%rbx),%r14
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
_c3gD9:
	jmp *-16(%r13)
	.size sat_s3bh8_entry, .-sat_s3bh8_entry


==================== Asm code ====================
2018-03-16 15:57:54.942162151 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bh8_info:
	.quad	sat_s3bh8_entry
	.quad	3
	.quad	-4294967281
	.quad	u3gLL_srtd


==================== Asm code ====================
2018-03-16 15:57:54.943058313 UTC

.section .data.rel.ro
.align 8
.align 1
u3gLM_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:54.944021754 UTC

.section .text
.align 8
_c3gD3:
_c3gD3:
	movq 8(%rbp),%rax
	leaq block_c3gD8_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c3gD3, .-_c3gD3


==================== Asm code ====================
2018-03-16 15:57:54.944904651 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gD3_info:
	.quad	_c3gD3
	.quad	1
	.quad	-4294967266
	.quad	u3gLM_srtd


==================== Asm code ====================
2018-03-16 15:57:54.945774197 UTC

.section .data.rel.ro
.align 8
.align 1
u3gLN_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:54.946511635 UTC

.section .text
.align 8
_c3gD8:
_c3gD8:
	leaq GHC.Float.$fRealFloatDouble5_closure(%rip),%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c3gD8, .-_c3gD8


==================== Asm code ====================
2018-03-16 15:57:54.947084264 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gD8_info:
	.quad	_c3gD8
	.quad	0
	.quad	-4294967266
	.quad	u3gLN_srtd


==================== Asm code ====================
2018-03-16 15:57:54.947664348 UTC

.section .data.rel.ro
.align 8
.align 1
u3gLO_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4613938367996887041


==================== Asm code ====================
2018-03-16 15:57:54.948482992 UTC

.section .text
.align 8
ds2_s3bgy_entry:
_c3gDg:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _c3gDh
_c3gDi:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3gAB_info(%rip),%rax
	movq %rax,-56(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 48(%rbx),%rsi
	movq 40(%rbx),%rbx
	movq %rax,-48(%rbp)
	movq %rcx,-40(%rbp)
	movq %rdx,-32(%rbp)
	movq %rsi,-24(%rbp)
	addq $-56,%rbp
	testb $7,%bl
	jne _c3gAB
_c3gAC:
	movq (%rbx),%rax
	jmp *(%rax)
_c3gDh:
	jmp *-16(%r13)
	.size ds2_s3bgy_entry, .-ds2_s3bgy_entry


==================== Asm code ====================
2018-03-16 15:57:54.949217168 UTC

.section .data.rel.ro
.align 8
.align 1
ds2_s3bgy_info:
	.quad	ds2_s3bgy_entry
	.quad	5
	.quad	-4294967281
	.quad	u3gLO_srtd


==================== Asm code ====================
2018-03-16 15:57:54.949829838 UTC

.section .data.rel.ro
.align 8
.align 1
u3gLP_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4613938367996887041


==================== Asm code ====================
2018-03-16 15:57:54.950500415 UTC

.section .text
.align 8
_c3gAB:
_c3gAB:
	leaq block_c3gAG_info(%rip),%rax
	movq %rax,(%rbp)
	movq 15(%rbx),%rbx
	testb $7,%bl
	jne _c3gAG
_c3gAH:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3gAB, .-_c3gAB


==================== Asm code ====================
2018-03-16 15:57:54.951116657 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gAB_info:
	.quad	_c3gAB
	.quad	4
	.quad	-4294967266
	.quad	u3gLP_srtd


==================== Asm code ====================
2018-03-16 15:57:54.95171611 UTC

.section .data.rel.ro
.align 8
.align 1
u3gLQ_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4613938367996887041


==================== Asm code ====================
2018-03-16 15:57:54.952495247 UTC

.section .text
.align 8
_c3gAG:
_c3gAG:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jl _c3gDm
_c3gDG:
	leaq block_c3gCa_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq 16(%rbp),%rbx
	movq %rax,24(%rbp)
	testb $7,%bl
	jne _c3gCa
_c3gCb:
	movq (%rbx),%rax
	jmp *(%rax)
_c3gDm:
	leaq block_c3gAO_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq 24(%rbp),%rbx
	movq %rax,24(%rbp)
	testb $7,%bl
	jne _c3gAO
_c3gAP:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3gAG, .-_c3gAG


==================== Asm code ====================
2018-03-16 15:57:54.953189668 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gAG_info:
	.quad	_c3gAG
	.quad	4
	.quad	-4294967266
	.quad	u3gLQ_srtd


==================== Asm code ====================
2018-03-16 15:57:54.957627749 UTC

.section .data.rel.ro
.align 8
.align 1
u3gLR_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4613938367996887041


==================== Asm code ====================
2018-03-16 15:57:54.958707242 UTC

.section .text
.align 8
_c3gAO:
_c3gAO:
	movq 24(%rbp),%rax
	cmpq 7(%rbx),%rax
	jle _c3gAW
_c3gDu:
	leaq block_c3gBo_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%rbx
	testb $7,%bl
	jne _c3gBo
_c3gBp:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3gAO, .-_c3gAO


==================== Asm code ====================
2018-03-16 15:57:54.95964069 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gAO_info:
	.quad	_c3gAO
	.quad	260
	.quad	-4294967266
	.quad	u3gLR_srtd


==================== Asm code ====================
2018-03-16 15:57:54.960273828 UTC

.section .data.rel.ro
.align 8
.align 1
u3gLS_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4613938367996887041


==================== Asm code ====================
2018-03-16 15:57:54.960939229 UTC

.section .text
.align 8
_c3gBo:
_c3gBo:
	leaq block_c3gBw_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	leaq -1(%rax),%rsi
	movq 8(%rbp),%r14
	jmp GHC.Float.$wexpt_entry
	.size _c3gBo, .-_c3gBo


==================== Asm code ====================
2018-03-16 15:57:54.961578857 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gBo_info:
	.quad	_c3gBo
	.quad	388
	.quad	-4294967266
	.quad	u3gLS_srtd


==================== Asm code ====================
2018-03-16 15:57:54.962141203 UTC

.section .data.rel.ro
.align 8
.align 1
u3gLT_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4613938367996887041


==================== Asm code ====================
2018-03-16 15:57:54.962875641 UTC

.section .text
.align 8
_c3gBw:
_c3gBw:
	leaq block_c3gBA_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rsi
	movq 32(%rbp),%r14
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
	.size _c3gBw, .-_c3gBw


==================== Asm code ====================
2018-03-16 15:57:54.963486799 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gBw_info:
	.quad	_c3gBw
	.quad	388
	.quad	-4294967266
	.quad	u3gLT_srtd


==================== Asm code ====================
2018-03-16 15:57:54.964059286 UTC

.section .data.rel.ro
.align 8
.align 1
u3gLU_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4613938367996887041


==================== Asm code ====================
2018-03-16 15:57:54.96514012 UTC

.section .text
.align 8
_c3gBA:
_c3gBA:
	cmpq $1,%rbx
	je _c3gDC
	jmp _c3gAW
_c3gDF:
	movq $104,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
_c3gDC:
	addq $104,%r12
	cmpq 856(%r13),%r12
	ja _c3gDF
_c3gDE:
	leaq sat_s3bgX_info(%rip),%rax
	movq %rax,-96(%r12)
	movq 8(%rbp),%rax
	movq %rax,-80(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-72(%r12)
	leaq sat_s3bgT_info(%rip),%rbx
	movq %rbx,-64(%r12)
	movq %rax,-48(%r12)
	movq 32(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq (,,,)_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-32(%r12)
	leaq -64(%r12),%rbx
	movq %rbx,-24(%r12)
	leaq -96(%r12),%rbx
	movq %rbx,-16(%r12)
	movq %rax,-8(%r12)
	leaq GHC.Float.$fRealDouble1_closure(%rip),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3gBA, .-_c3gBA


==================== Asm code ====================
2018-03-16 15:57:54.966065447 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gBA_info:
	.quad	_c3gBA
	.quad	388
	.quad	-4294967266
	.quad	u3gLU_srtd


==================== Asm code ====================
2018-03-16 15:57:54.966659491 UTC

.section .data.rel.ro
.align 8
.align 1
u3gLV_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4613938367996887041


==================== Asm code ====================
2018-03-16 15:57:54.967551168 UTC

.section .text
.align 8
_c3gAW:
_c3gAW:
	addq $96,%r12
	cmpq 856(%r13),%r12
	ja _c3gDr
_c3gDq:
	leaq sat_s3bgL_info(%rip),%rax
	movq %rax,-88(%r12)
	movq 8(%rbp),%rax
	movq %rax,-72(%r12)
	movq 24(%rbp),%rax
	movq %rax,-64(%r12)
	leaq sat_s3bgI_info(%rip),%rax
	movq %rax,-56(%r12)
	movq 32(%rbp),%rax
	movq %rax,-40(%r12)
	movq (,,,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-32(%r12)
	leaq -56(%r12),%rax
	movq %rax,-24(%r12)
	leaq -88(%r12),%rax
	movq %rax,-16(%r12)
	leaq GHC.Float.$fRealDouble1_closure(%rip),%rax
	movq %rax,-8(%r12)
	leaq GHC.Float.$fRealDouble1_closure(%rip),%rax
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3gDr:
	movq $96,904(%r13)
	leaq block_c3gAW_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c3gAW, .-_c3gAW


==================== Asm code ====================
2018-03-16 15:57:54.968311307 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gAW_info:
	.quad	_c3gAW
	.quad	388
	.quad	-4294967266
	.quad	u3gLV_srtd


==================== Asm code ====================
2018-03-16 15:57:54.968855028 UTC

.section .data.rel.ro
.align 8
.align 1
u3gLW_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4613937818241073153


==================== Asm code ====================
2018-03-16 15:57:54.970490976 UTC

.section .text
.align 8
_c3gCa:
_c3gCa:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c3gDJ
_c3gDI:
	movq 7(%rbx),%rax
	leaq be_s3bh0_info(%rip),%rbx
	movq %rbx,-24(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq 24(%rbp),%rcx
	movq %rcx,(%r12)
	leaq block_c3gCp_info(%rip),%rcx
	movq %rcx,(%rbp)
	leaq -1(%rax),%rsi
	movq %rbx,%r14
	leaq -24(%r12),%rax
	movq %rax,24(%rbp)
	jmp GHC.Float.$wexpt_entry
_c3gDJ:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3gCa, .-_c3gCa


==================== Asm code ====================
2018-03-16 15:57:54.971153772 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gCa_info:
	.quad	_c3gCa
	.quad	388
	.quad	-4294967266
	.quad	u3gLW_srtd


==================== Asm code ====================
2018-03-16 15:57:54.971727364 UTC

.section .data.rel.ro
.align 8
.align 1
u3gLX_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:54.972730327 UTC

.section .text
.align 8
_c3gCp:
_c3gCp:
	leaq block_c3gCt_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rsi
	movq 32(%rbp),%r14
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
	.size _c3gCp, .-_c3gCp


==================== Asm code ====================
2018-03-16 15:57:54.973535003 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gCp_info:
	.quad	_c3gCp
	.quad	132
	.quad	-4294967266
	.quad	u3gLX_srtd


==================== Asm code ====================
2018-03-16 15:57:54.974353707 UTC

.section .data.rel.ro
.align 8
.align 1
u3gLY_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4611686018427387905


==================== Asm code ====================
2018-03-16 15:57:54.975812378 UTC

.section .text
.align 8
_c3gCt:
_c3gCt:
	movq 24(%rbp),%rax
	movq 32(%rbp),%rcx
	cmpq $1,%rbx
	je _c3gDS
_c3gDN:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c3gDQ
_c3gDP:
	leaq sat_s3bh5_info(%rip),%rbx
	movq %rbx,-64(%r12)
	movq %rcx,-48(%r12)
	movq %rax,-40(%r12)
	movq (,,,)_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-32(%r12)
	leaq -64(%r12),%rbx
	movq %rbx,-24(%r12)
	leaq GHC.Float.$fRealFloatDouble5_closure(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,-8(%r12)
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3gDV:
	movq $136,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
_c3gDS:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _c3gDV
_c3gDU:
	leaq sat_s3bha_info(%rip),%rbx
	movq %rbx,-128(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-112(%r12)
	movq %rax,-104(%r12)
	leaq sat_s3bh9_info(%rip),%rdx
	movq %rdx,-96(%r12)
	movq %rbx,-80(%r12)
	leaq sat_s3bh8_info(%rip),%rdx
	movq %rdx,-72(%r12)
	movq %rbx,-56(%r12)
	movq %rcx,-48(%r12)
	movq %rax,-40(%r12)
	movq (,,,)_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-32(%r12)
	leaq -72(%r12),%rbx
	movq %rbx,-24(%r12)
	leaq -96(%r12),%rbx
	movq %rbx,-16(%r12)
	leaq -128(%r12),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -31(%r12),%rbx
	addq $40,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3gDQ:
	movq $72,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c3gCt, .-_c3gCt


==================== Asm code ====================
2018-03-16 15:57:54.976940953 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gCt_info:
	.quad	_c3gCt
	.quad	132
	.quad	-4294967266
	.quad	u3gLY_srtd


==================== Asm code ====================
2018-03-16 15:57:54.977751085 UTC

.section .data.rel.ro
.align 8
.align 1
u3gLZ_srtd:
	.quad	S3bQP_srt+552
	.quad	63
	.quad	4613940567053697025


==================== Asm code ====================
2018-03-16 15:57:54.978820284 UTC

.section .text
.align 8
k_s3bht_entry:
_c3gEc:
	leaq -96(%rbp),%rax
	cmpq %r15,%rax
	jb _c3gEg
_c3gEh:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3gEa_info(%rip),%rax
	movq %rax,-96(%rbp)
	leaq GHC.Float.$fRealFloatDouble5_closure(%rip),%rsi
	movq 24(%rbx),%rax
	movq %rax,%r14
	movq 16(%rbx),%rcx
	movq %rcx,-88(%rbp)
	movq %rax,-80(%rbp)
	movq 32(%rbx),%rax
	movq %rax,-72(%rbp)
	movq 40(%rbx),%rax
	movq %rax,-64(%rbp)
	movq 48(%rbx),%rax
	movq %rax,-56(%rbp)
	movq 56(%rbx),%rax
	movq %rax,-48(%rbp)
	movq 64(%rbx),%rax
	movq %rax,-40(%rbp)
	movq 72(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 80(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-96,%rbp
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
_c3gEg:
	jmp *-16(%r13)
	.size k_s3bht_entry, .-k_s3bht_entry


==================== Asm code ====================
2018-03-16 15:57:54.98048287 UTC

.section .data.rel.ro
.align 8
.align 1
k_s3bht_info:
	.quad	k_s3bht_entry
	.quad	9
	.quad	-4294967281
	.quad	u3gLZ_srtd


==================== Asm code ====================
2018-03-16 15:57:54.981762484 UTC

.section .data.rel.ro
.align 8
.align 1
u3gM0_srtd:
	.quad	S3bQP_srt+752
	.quad	38
	.quad	137506144257


==================== Asm code ====================
2018-03-16 15:57:54.982799423 UTC

.section .text
.align 8
_c3gEa:
_c3gEa:
	leaq block_c3gEf_info(%rip),%rax
	movq %rax,(%rbp)
	movq 72(%rbp),%rsi
	movq 64(%rbp),%r14
	movq %rbx,72(%rbp)
	jmp *GHC.Integer.Type.plusInteger_entry@gotpcrel(%rip)
	.size _c3gEa, .-_c3gEa


==================== Asm code ====================
2018-03-16 15:57:54.984137889 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gEa_info:
	.quad	_c3gEa
	.quad	9
	.quad	-4294967266
	.quad	u3gM0_srtd


==================== Asm code ====================
2018-03-16 15:57:54.985114826 UTC

.section .data.rel.ro
.align 8
.align 1
u3gM1_srtd:
	.quad	S3bQP_srt+752
	.quad	38
	.quad	137506144257


==================== Asm code ====================
2018-03-16 15:57:54.98668701 UTC

.section .text
.align 8
_c3gEf:
_c3gEf:
	cmpq $1,72(%rbp)
	je _c3gGG
_u3gHC:
	movq %rbx,72(%rbp)
	addq $8,%rbp
	jmp _s3bhI
_c3gGG:
	leaq block_c3gGF_info(%rip),%rax
	movq %rax,(%rbp)
	leaq GHC.Float.expts4_closure(%rip),%rsi
	movq 8(%rbp),%r14
	movq %rbx,72(%rbp)
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
	.size _c3gEf, .-_c3gEf


==================== Asm code ====================
2018-03-16 15:57:54.987742876 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gEf_info:
	.quad	_c3gEf
	.quad	24585
	.quad	-4294967266
	.quad	u3gM1_srtd


==================== Asm code ====================
2018-03-16 15:57:54.988707433 UTC

.section .text
.align 8
_c3gGF:
_c3gGF:
	cmpq $1,%rbx
	je _c3gH1
_u3gHD:
	addq $8,%rbp
	jmp _s3bhI
_c3gH1:
	leaq block_c3gGP_info(%rip),%rax
	movq %rax,(%rbp)
	movq 24(%rbp),%rbx
	testb $7,%bl
	jne _c3gGP
_c3gGQ:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3gGF, .-_c3gGF


==================== Asm code ====================
2018-03-16 15:57:54.989630891 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gGF_info:
	.quad	_c3gGF
	.quad	8201
	.quad	36046410679844894
	.quad	S3bQP_srt+864


==================== Asm code ====================
2018-03-16 15:57:54.990417325 UTC

.section .text
.align 8
_c3gGP:
_c3gGP:
	leaq block_c3gGU_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 32(%rbp),%rbx
	movq %rax,64(%rbp)
	testb $7,%bl
	jne _c3gGU
_c3gGV:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3gGP, .-_c3gGP


==================== Asm code ====================
2018-03-16 15:57:54.99116098 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gGP_info:
	.quad	_c3gGP
	.quad	11657
	.quad	8800387989534
	.quad	S3bQP_srt+960


==================== Asm code ====================
2018-03-16 15:57:54.992047851 UTC

.section .text
.align 8
_c3gGU:
_c3gGU:
	leaq block_c3gGZ_info(%rip),%rax
	movq %rax,(%rbp)
	movq 15(%rbx),%rbx
	testb $7,%bl
	jne _c3gGZ
_c3gH4:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3gGU, .-_c3gGU


==================== Asm code ====================
2018-03-16 15:57:54.992881489 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gGU_info:
	.quad	_c3gGU
	.quad	12169
	.quad	8800387989534
	.quad	S3bQP_srt+960


==================== Asm code ====================
2018-03-16 15:57:54.994063102 UTC

.section .text
.align 8
_c3gGZ:
_c3gGZ:
	movq 7(%rbx),%rax
	decq %rax
	movq 64(%rbp),%rbx
	addq %rax,%rbx
	testq %rbx,%rbx
	jl _c3gHi
_c3gHj:
	movl $28738,%eax
	movq %rax,%rcx
	movq %rbx,%rax
	imulq $8651,%rax
	cqto
	idivq %rcx
	incq %rax
	movq %rax,64(%rbp)
	addq $8,%rbp
	jmp _c3gEq
_c3gHi:
	movl $28738,%eax
	movq %rax,%rcx
	movq %rbx,%rax
	imulq $8651,%rax
	cqto
	idivq %rcx
	movq %rax,64(%rbp)
	addq $8,%rbp
	jmp _c3gEq
	.size _c3gGZ, .-_c3gGZ


==================== Asm code ====================
2018-03-16 15:57:54.99479218 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gGZ_info:
	.quad	_c3gGZ
	.quad	12169
	.quad	8800387989534
	.quad	S3bQP_srt+960


==================== Asm code ====================
2018-03-16 15:57:54.995599111 UTC

.section .text
.align 8
_s3bhI:
_s3bhI:
	leaq block_c3gFu_info(%rip),%rax
	movq %rax,-8(%rbp)
	leaq GHC.Float.$fRealDouble1_closure(%rip),%rsi
	movq 40(%rbp),%r14
	addq $-8,%rbp
	jmp *GHC.Integer.Type.plusInteger_entry@gotpcrel(%rip)
	.size _s3bhI, .-_s3bhI


==================== Asm code ====================
2018-03-16 15:57:54.99660204 UTC

.section .text
.align 8
_c3gFu:
_c3gFu:
	leaq block_c3gFy_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp *GHC.Integer.Type.floatFromInteger_entry@gotpcrel(%rip)
	.size _c3gFu, .-_c3gFu


==================== Asm code ====================
2018-03-16 15:57:54.997823334 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gFu_info:
	.quad	_c3gFu
	.quad	11017
	.quad	8800387989534
	.quad	S3bQP_srt+960


==================== Asm code ====================
2018-03-16 15:57:54.998691652 UTC

.section .text
.align 8
_c3gFy:
_c3gFy:
	movq 40(%rbp),%rax
	subq $8,%rsp
	movss %xmm1,%xmm0
	movq %rax,%rbx
	movl $1,%eax
	call logf@plt
	addq $8,%rsp
	leaq block_c3gFG_info(%rip),%rax
	movq %rax,(%rbp)
	movss %xmm0,64(%rbp)
	testb $7,%bl
	jne _c3gFG
_c3gFH:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3gFy, .-_c3gFy


==================== Asm code ====================
2018-03-16 15:57:54.999342854 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gFy_info:
	.quad	_c3gFy
	.quad	11017
	.quad	8800387989534
	.quad	S3bQP_srt+960


==================== Asm code ====================
2018-03-16 15:57:55.000008164 UTC

.section .text
.align 8
_c3gFG:
_c3gFG:
	leaq block_c3gFL_info(%rip),%rax
	movq %rax,(%rbp)
	movq 15(%rbx),%rbx
	testb $7,%bl
	jne _c3gFL
_c3gFM:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3gFG, .-_c3gFG


==================== Asm code ====================
2018-03-16 15:57:55.000515284 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gFG_info:
	.quad	_c3gFG
	.quad	12041
	.quad	8800387989534
	.quad	S3bQP_srt+960


==================== Asm code ====================
2018-03-16 15:57:55.001093365 UTC

.section .text
.align 8
_c3gFL:
_c3gFL:
	leaq block_c3gFQ_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%r14
	movq 7(%rbx),%rax
	movq %rax,48(%rbp)
	jmp *GHC.Integer.Type.floatFromInteger_entry@gotpcrel(%rip)
	.size _c3gFL, .-_c3gFL


==================== Asm code ====================
2018-03-16 15:57:55.001674602 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gFL_info:
	.quad	_c3gFL
	.quad	12041
	.quad	8800387989534
	.quad	S3bQP_srt+960


==================== Asm code ====================
2018-03-16 15:57:55.002390736 UTC

.section .text
.align 8
_c3gFQ:
_c3gFQ:
	movq 8(%rbp),%rax
	subq $8,%rsp
	movss %xmm1,%xmm0
	movq %rax,%rbx
	movl $1,%eax
	call logf@plt
	addq $8,%rsp
	leaq block_c3gFY_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	movss %xmm0,40(%rbp)
	jmp *GHC.Integer.Type.floatFromInteger_entry@gotpcrel(%rip)
	.size _c3gFQ, .-_c3gFQ


==================== Asm code ====================
2018-03-16 15:57:55.002956681 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gFQ_info:
	.quad	_c3gFQ
	.quad	12169
	.quad	8800387989534
	.quad	S3bQP_srt+960


==================== Asm code ====================
2018-03-16 15:57:55.003844876 UTC

.section .text
.align 8
_c3gFY:
_c3gFY:
	movss 64(%rbp),%xmm0
	movq 48(%rbp),%rax
	movss 40(%rbp),%xmm2
	subq $8,%rsp
	movsd %xmm0,%xmm3
	movss %xmm1,%xmm0
	movq %rax,%rbx
	movl $1,%eax
	movsd %xmm3,72(%rsp)
	movsd %xmm2,80(%rsp)
	call logf@plt
	addq $8,%rsp
	cvtsi2ssq %rbx,%xmm1
	movsd 72(%rsp),%xmm2
	mulss %xmm2,%xmm1
	movsd 64(%rsp),%xmm2
	addss %xmm1,%xmm2
	divss %xmm0,%xmm2
	cvttss2siq %xmm2,%rax
	cvtsi2ssq %rax,%xmm0
	ucomiss %xmm2,%xmm0
	jp _c3gGy
	jb _c3gGz
_c3gGy:
	movq %rax,64(%rbp)
	addq $8,%rbp
	jmp _c3gEq
_c3gGz:
	incq %rax
	movq %rax,64(%rbp)
	addq $8,%rbp
	jmp _c3gEq
	.size _c3gFY, .-_c3gFY


==================== Asm code ====================
2018-03-16 15:57:55.004482229 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gFY_info:
	.quad	_c3gFY
	.quad	12169
	.quad	8800387989534
	.quad	S3bQP_srt+960


==================== Asm code ====================
2018-03-16 15:57:55.005212913 UTC

.section .text
.align 8
_c3gEq:
_c3gEq:
	movq (%rbp),%rax
	movq 56(%rbp),%rbx
	testq %rbx,%rbx
	jl _c3gEF
_c3gF5:
	leaq block_c3gF0_info(%rip),%rcx
	movq %rcx,-8(%rbp)
	movq %rbx,%rsi
	movq %rax,%r14
	addq $-8,%rbp
	jmp GHC.Float.$wexpt_entry
_c3gEF:
	leaq block_c3gEz_info(%rip),%rcx
	movq %rcx,-8(%rbp)
	movq %rbx,%rsi
	negq %rsi
	movq %rax,%r14
	addq $-8,%rbp
	jmp GHC.Float.$wexpt_entry
	.size _c3gEq, .-_c3gEq


==================== Asm code ====================
2018-03-16 15:57:55.005988329 UTC

.section .text
.align 8
_c3gEz:
_c3gEz:
	leaq block_c3gED_info(%rip),%rax
	movq %rax,(%rbp)
	movq 72(%rbp),%rsi
	movq %rbx,%r14
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c3gEz, .-_c3gEz


==================== Asm code ====================
2018-03-16 15:57:55.006553122 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gEz_info:
	.quad	_c3gEz
	.quad	12169
	.quad	8800387989534
	.quad	S3bQP_srt+960


==================== Asm code ====================
2018-03-16 15:57:55.007131959 UTC

.section .text
.align 8
_c3gED:
_c3gED:
	leaq block_c3gEK_info(%rip),%rax
	movq %rax,(%rbp)
	movq 56(%rbp),%rsi
	movq %rbx,%r14
	jmp *GHC.Integer.Type.leInteger#_entry@gotpcrel(%rip)
	.size _c3gED, .-_c3gED


==================== Asm code ====================
2018-03-16 15:57:55.00767774 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gED_info:
	.quad	_c3gED
	.quad	12169
	.quad	8800387989534
	.quad	S3bQP_srt+960


==================== Asm code ====================
2018-03-16 15:57:55.008399854 UTC

.section .text
.align 8
_c3gEK:
_c3gEK:
	movq 64(%rbp),%rax
	cmpq $1,%rbx
	je _c3gEV
_c3gER:
	incq %rax
	movq %rax,64(%rbp)
	addq $8,%rbp
	jmp _c3gEq
_c3gEY:
	movq $16,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
_c3gEV:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3gEY
_c3gEX:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $80,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3gEK, .-_c3gEK


==================== Asm code ====================
2018-03-16 15:57:55.009046186 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gEK_info:
	.quad	_c3gEK
	.quad	12169
	.quad	8800387989534
	.quad	S3bQP_srt+960


==================== Asm code ====================
2018-03-16 15:57:55.009688787 UTC

.section .text
.align 8
_c3gF0:
_c3gF0:
	leaq block_c3gF4_info(%rip),%rax
	movq %rax,(%rbp)
	movq 56(%rbp),%rsi
	movq %rbx,%r14
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c3gF0, .-_c3gF0


==================== Asm code ====================
2018-03-16 15:57:55.010244004 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gF0_info:
	.quad	_c3gF0
	.quad	12169
	.quad	8800387989534
	.quad	S3bQP_srt+960


==================== Asm code ====================
2018-03-16 15:57:55.010921448 UTC

.section .text
.align 8
_c3gF4:
_c3gF4:
	leaq block_c3gFa_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rsi
	movq 72(%rbp),%r14
	jmp *GHC.Integer.Type.leInteger#_entry@gotpcrel(%rip)
	.size _c3gF4, .-_c3gF4


==================== Asm code ====================
2018-03-16 15:57:55.011524999 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gF4_info:
	.quad	_c3gF4
	.quad	12169
	.quad	8800387989534
	.quad	S3bQP_srt+960


==================== Asm code ====================
2018-03-16 15:57:55.012294188 UTC

.section .text
.align 8
_c3gFa:
_c3gFa:
	movq 64(%rbp),%rax
	cmpq $1,%rbx
	je _c3gFl
_c3gFh:
	incq %rax
	movq %rax,64(%rbp)
	addq $8,%rbp
	jmp _c3gEq
_c3gFo:
	movq $16,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
_c3gFl:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3gFo
_c3gFn:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $80,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3gFa, .-_c3gFa


==================== Asm code ====================
2018-03-16 15:57:55.012921729 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gFa_info:
	.quad	_c3gFa
	.quad	12169
	.quad	8800387989534
	.quad	S3bQP_srt+960


==================== Asm code ====================
2018-03-16 15:57:55.013660145 UTC

.section .text
.align 8
sat_s3biE_entry:
_c3gIN:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3gIO
_c3gIP:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq GHC.Float.$fRealDouble1_closure(%rip),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Integer.Type.plusInteger_entry@gotpcrel(%rip)
_c3gIO:
	jmp *-16(%r13)
	.size sat_s3biE_entry, .-sat_s3biE_entry


==================== Asm code ====================
2018-03-16 15:57:55.014313733 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3biE_info:
	.quad	sat_s3biE_entry
	.quad	1
	.quad	21474836496
	.quad	S3bQP_srt+864


==================== Asm code ====================
2018-03-16 15:57:55.014992707 UTC

.section .text
.align 8
sat_s3biI_entry:
_c3gJ7:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3gJ8
_c3gJ9:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq GHC.Float.$fRealDouble1_closure(%rip),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Integer.Type.plusInteger_entry@gotpcrel(%rip)
_c3gJ8:
	jmp *-16(%r13)
	.size sat_s3biI_entry, .-sat_s3biI_entry


==================== Asm code ====================
2018-03-16 15:57:55.01561782 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3biI_info:
	.quad	sat_s3biI_entry
	.quad	1
	.quad	21474836496
	.quad	S3bQP_srt+864


==================== Asm code ====================
2018-03-16 15:57:55.016126619 UTC

.section .data.rel.ro
.align 8
.align 1
u3gM2_srtd:
	.quad	S3bQP_srt+552
	.quad	70
	.quad	4611689866718085121
	.quad	32


==================== Asm code ====================
2018-03-16 15:57:55.016782308 UTC

.section .text
.align 8
gen_s3bim_entry:
_c3gJd:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _c3gJe
_u3gJV:
	movq %rbx,-48(%rbp)
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-48,%rbp
	jmp _c3gI8
_c3gJe:
	jmp *-8(%r13)
	.size gen_s3bim_entry, .-gen_s3bim_entry


==================== Asm code ====================
2018-03-16 15:57:55.018321557 UTC

.section .data.rel.ro
.align 8
.align 1
gen_s3bim_info:
	.quad	gen_s3bim_entry
	.quad	1
	.quad	-4294967287
	.quad	21474836505
	.quad	u3gM2_srtd


==================== Asm code ====================
2018-03-16 15:57:55.018969052 UTC

.section .text
.align 8
_c3gI8:
_c3gI8:
	movq (%rbp),%rax
	movq 3(%rax),%rax
	leaq block_c3gIb_info(%rip),%rbx
	movq %rbx,-16(%rbp)
	leaq GHC.Float.rationalToDouble5_closure(%rip),%rsi
	movq 24(%rbp),%r14
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.Integer.Type.eqInteger#_entry@gotpcrel(%rip)
	.size _c3gI8, .-_c3gI8


==================== Asm code ====================
2018-03-16 15:57:55.019625937 UTC

.section .data.rel.ro
.align 8
.align 1
u3gM3_srtd:
	.quad	S3bQP_srt+552
	.quad	70
	.quad	4611689866718085121
	.quad	32


==================== Asm code ====================
2018-03-16 15:57:55.020329887 UTC

.section .text
.align 8
_c3gIb:
_c3gIb:
	cmpq $1,%rbx
	je _c3gJc
_c3gJb:
	leaq block_c3gIf_info(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%rsi
	movq 32(%rbp),%r14
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
_c3gJc:
	movq GHC.Real.divZeroError_closure@gotpcrel(%rip),%rbx
	addq $64,%rbp
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size _c3gIb, .-_c3gIb


==================== Asm code ====================
2018-03-16 15:57:55.020957118 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gIb_info:
	.quad	_c3gIb
	.quad	7
	.quad	-4294967266
	.quad	u3gM3_srtd


==================== Asm code ====================
2018-03-16 15:57:55.021590689 UTC

.section .data.rel.ro
.align 8
.align 1
u3gM4_srtd:
	.quad	S3bQP_srt+552
	.quad	70
	.quad	4611689866718085121
	.quad	32


==================== Asm code ====================
2018-03-16 15:57:55.022241044 UTC

.section .text
.align 8
_c3gIf:
_c3gIf:
	leaq block_c3gIj_info(%rip),%rax
	movq %rax,(%rbp)
	movq 40(%rbp),%rsi
	movq %rbx,%r14
	jmp *GHC.Integer.Type.quotRemInteger_entry@gotpcrel(%rip)
	.size _c3gIf, .-_c3gIf


==================== Asm code ====================
2018-03-16 15:57:55.022822364 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gIf_info:
	.quad	_c3gIf
	.quad	519
	.quad	-4294967266
	.quad	u3gM4_srtd


==================== Asm code ====================
2018-03-16 15:57:55.023369968 UTC

.section .data.rel.ro
.align 8
.align 1
u3gM5_srtd:
	.quad	S3bQP_srt+552
	.quad	70
	.quad	4611689866718085121
	.quad	32


==================== Asm code ====================
2018-03-16 15:57:55.024007582 UTC

.section .text
.align 8
_c3gIj:
_c3gIj:
	leaq block_c3gIl_info(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%rsi
	movq %r14,%rax
	movq 48(%rbp),%r14
	movq %rax,32(%rbp)
	movq %rbx,48(%rbp)
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c3gIj, .-_c3gIj


==================== Asm code ====================
2018-03-16 15:57:55.024617612 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gIj_info:
	.quad	_c3gIj
	.quad	519
	.quad	-4294967266
	.quad	u3gM5_srtd


==================== Asm code ====================
2018-03-16 15:57:55.02514616 UTC

.section .data.rel.ro
.align 8
.align 1
u3gM6_srtd:
	.quad	S3bQP_srt+552
	.quad	70
	.quad	4611689866718085121
	.quad	32


==================== Asm code ====================
2018-03-16 15:57:55.026326969 UTC

.section .text
.align 8
_c3gIl:
_c3gIl:
	leaq block_c3gIp_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rsi
	movq 32(%rbp),%r14
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Integer.Type.plusInteger_entry@gotpcrel(%rip)
	.size _c3gIl, .-_c3gIl


==================== Asm code ====================
2018-03-16 15:57:55.026972581 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gIl_info:
	.quad	_c3gIl
	.quad	7
	.quad	-4294967266
	.quad	u3gM6_srtd


==================== Asm code ====================
2018-03-16 15:57:55.027596111 UTC

.section .data.rel.ro
.align 8
.align 1
u3gM7_srtd:
	.quad	S3bQP_srt+552
	.quad	70
	.quad	4611689866718085121
	.quad	32


==================== Asm code ====================
2018-03-16 15:57:55.028277399 UTC

.section .text
.align 8
_c3gIp:
_c3gIp:
	leaq block_c3gIt_info(%rip),%rax
	movq %rax,(%rbp)
	movq 48(%rbp),%rsi
	movq %rbx,%r14
	jmp *GHC.Integer.Type.gtInteger#_entry@gotpcrel(%rip)
	.size _c3gIp, .-_c3gIp


==================== Asm code ====================
2018-03-16 15:57:55.028907891 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gIp_info:
	.quad	_c3gIp
	.quad	8
	.quad	-4294967266
	.quad	u3gM7_srtd


==================== Asm code ====================
2018-03-16 15:57:55.029478381 UTC

.section .data.rel.ro
.align 8
.align 1
u3gM8_srtd:
	.quad	S3bQP_srt+552
	.quad	70
	.quad	4611689866718085121
	.quad	32


==================== Asm code ====================
2018-03-16 15:57:55.030082896 UTC

.section .text
.align 8
_c3gIt:
_c3gIt:
	leaq block_c3gIx_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%rsi
	movq 64(%rbp),%r14
	movq %rbx,64(%rbp)
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c3gIt, .-_c3gIt


==================== Asm code ====================
2018-03-16 15:57:55.030655249 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gIt_info:
	.quad	_c3gIt
	.quad	8
	.quad	-4294967266
	.quad	u3gM8_srtd


==================== Asm code ====================
2018-03-16 15:57:55.031211017 UTC

.section .data.rel.ro
.align 8
.align 1
u3gM9_srtd:
	.quad	S3bQP_srt+552
	.quad	70
	.quad	4611689866718085121
	.quad	32


==================== Asm code ====================
2018-03-16 15:57:55.031837743 UTC

.section .text
.align 8
_c3gIx:
_c3gIx:
	leaq block_c3gIB_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rsi
	movq 40(%rbp),%r14
	movq %rbx,16(%rbp)
	jmp *GHC.Integer.Type.ltInteger#_entry@gotpcrel(%rip)
	.size _c3gIx, .-_c3gIx


==================== Asm code ====================
2018-03-16 15:57:55.032379989 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gIx_info:
	.quad	_c3gIx
	.quad	8328
	.quad	-4294967266
	.quad	u3gM9_srtd


==================== Asm code ====================
2018-03-16 15:57:55.032933024 UTC

.section .data.rel.ro
.align 8
.align 1
u3gMa_srtd:
	.quad	S3bQP_srt+552
	.quad	70
	.quad	4611689866718085121
	.quad	32


==================== Asm code ====================
2018-03-16 15:57:55.034108168 UTC

.section .text
.align 8
_c3gIB:
_c3gIB:
	movq 32(%rbp),%rax
	movq 56(%rbp),%rcx
	movq 40(%rbp),%rdx
	movq 64(%rbp),%rsi
	cmpq $1,%rbx
	je _c3gJw
_c3gJo:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c3gJr
_c3gJq:
	cmpq $1,%rsi
	je _c3gJv
_c3gJt:
	movq :_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-40(%r12)
	movq %rcx,-32(%r12)
	movq %rax,-24(%r12)
	leaq -38(%r12),%rax
	addq $-24,%r12
	movq %rax,32(%rbp)
	movq %rdx,40(%rbp)
	movq 48(%rbp),%rax
	movq %rax,48(%rbp)
	movq 8(%rbp),%rax
	movq %rax,56(%rbp)
	movq 16(%rbp),%rax
	movq %rax,64(%rbp)
	addq $24,%rbp
	jmp _c3gI8
_c3gJD:
	addq $-24,%r12
	leaq block_c3gIV_info(%rip),%rax
	movq %rax,24(%rbp)
	leaq GHC.Float.$fRealFloatDouble5_closure(%rip),%rsi
	movq %rdx,%r14
	addq $24,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
_c3gJw:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3gJz
_c3gJy:
	cmpq $1,%rsi
	je _c3gJD
_c3gJC:
	movq :_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $72,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3gJz:
	movq $24,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
_c3gJv:
	leaq sat_s3biE_info(%rip),%rbx
	movq %rbx,-40(%r12)
	movq %rcx,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	leaq -40(%r12),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $72,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3gJr:
	movq $48,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c3gIB, .-_c3gIB


==================== Asm code ====================
2018-03-16 15:57:55.035098391 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gIB_info:
	.quad	_c3gIB
	.quad	8200
	.quad	-4294967266
	.quad	u3gMa_srtd


==================== Asm code ====================
2018-03-16 15:57:55.035808847 UTC

.section .text
.align 8
_c3gIV:
_c3gIV:
	leaq block_c3gIZ_info(%rip),%rax
	movq %rax,(%rbp)
	movq 24(%rbp),%rsi
	movq %rbx,%r14
	jmp *GHC.Integer.Type.ltInteger#_entry@gotpcrel(%rip)
	.size _c3gIV, .-_c3gIV


==================== Asm code ====================
2018-03-16 15:57:55.036399955 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gIV_info:
	.quad	_c3gIV
	.quad	1157
	.quad	21474836510
	.quad	S3bQP_srt+864


==================== Asm code ====================
2018-03-16 15:57:55.037747632 UTC

.section .text
.align 8
_c3gIZ:
_c3gIZ:
	movq 8(%rbp),%rax
	movq 32(%rbp),%rcx
	cmpq $1,%rbx
	je _c3gJO
_c3gJH:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c3gJK
_c3gJJ:
	leaq sat_s3biI_info(%rip),%rbx
	movq %rbx,-40(%r12)
	movq %rcx,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	leaq -40(%r12),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3gJR:
	movq $24,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
_c3gJO:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3gJR
_c3gJQ:
	movq :_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3gJK:
	movq $48,904(%r13)
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _c3gIZ, .-_c3gIZ


==================== Asm code ====================
2018-03-16 15:57:55.038509506 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gIZ_info:
	.quad	_c3gIZ
	.quad	1413
	.quad	21474836510
	.quad	S3bQP_srt+864


==================== Asm code ====================
2018-03-16 15:57:55.039039941 UTC

.section .data.rel.ro
.align 8
.align 1
u3gMb_srtd:
	.quad	S3bQP_srt+552
	.quad	70
	.quad	4613941666531770369
	.quad	32


==================== Asm code ====================
2018-03-16 15:57:55.039902945 UTC

.section .text
.align 8
sat_s3bj6_entry:
_c3gJZ:
	leaq -72(%rbp),%rax
	cmpq %r15,%rax
	jb _c3gK0
_c3gK1:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3gI1_info(%rip),%rax
	movq %rax,-64(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rdi
	movq 56(%rbx),%rbx
	movq %rax,-56(%rbp)
	movq %rcx,-48(%rbp)
	movq %rdx,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	addq $-64,%rbp
	testb $7,%bl
	jne _c3gI1
_c3gI2:
	movq (%rbx),%rax
	jmp *(%rax)
_c3gK0:
	jmp *-16(%r13)
	.size sat_s3bj6_entry, .-sat_s3bj6_entry


==================== Asm code ====================
2018-03-16 15:57:55.040600631 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bj6_info:
	.quad	sat_s3bj6_entry
	.quad	6
	.quad	-4294967281
	.quad	u3gMb_srtd


==================== Asm code ====================
2018-03-16 15:57:55.041221563 UTC

.section .data.rel.ro
.align 8
.align 1
u3gMc_srtd:
	.quad	S3bQP_srt+552
	.quad	70
	.quad	4613941666531770369
	.quad	32


==================== Asm code ====================
2018-03-16 15:57:55.042147136 UTC

.section .text
.align 8
_c3gI1:
_c3gI1:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3gK4
_c3gK3:
	movq 7(%rbx),%rax
	leaq gen_s3bim_info(%rip),%rbx
	movq %rbx,-8(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,(%r12)
	movq 16(%rbp),%rbx
	leaq -3(%r12),%rcx
	testq %rax,%rax
	jl _c3gKC
_c3gL6:
	leaq block_c3gKO_info(%rip),%rdx
	movq %rdx,-8(%rbp)
	movq %rax,(%rbp)
	movq %rcx,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c3gKO
_c3gKP:
	movq (%rbx),%rax
	jmp *(%rax)
_c3gKC:
	leaq block_c3gK8_info(%rip),%rdx
	movq %rdx,-8(%rbp)
	movq %rax,(%rbp)
	movq %rcx,16(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c3gK8
_c3gK9:
	movq (%rbx),%rax
	jmp *(%rax)
_c3gK4:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3gI1, .-_c3gI1


==================== Asm code ====================
2018-03-16 15:57:55.042924712 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gI1_info:
	.quad	_c3gI1
	.quad	5
	.quad	-4294967266
	.quad	u3gMc_srtd


==================== Asm code ====================
2018-03-16 15:57:55.04348951 UTC

.section .data.rel.ro
.align 8
.align 1
u3gMd_srtd:
	.quad	S3bQP_srt+552
	.quad	70
	.quad	4613941666531770369
	.quad	32


==================== Asm code ====================
2018-03-16 15:57:55.044159723 UTC

.section .text
.align 8
_c3gK8:
_c3gK8:
	movq 8(%rbp),%rax
	negq %rax
	leaq block_c3gKg_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq 16(%rbp),%r14
	movq 31(%rbx),%rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp GHC.Float.$wexpt_entry
	.size _c3gK8, .-_c3gK8


==================== Asm code ====================
2018-03-16 15:57:55.044782647 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gK8_info:
	.quad	_c3gK8
	.quad	70
	.quad	-4294967266
	.quad	u3gMd_srtd


==================== Asm code ====================
2018-03-16 15:57:55.045383352 UTC

.section .data.rel.ro
.align 8
.align 1
u3gMe_srtd:
	.quad	S3bQP_srt+552
	.quad	70
	.quad	4611689866718085121
	.quad	32


==================== Asm code ====================
2018-03-16 15:57:55.0460604 UTC

.section .text
.align 8
_c3gKg:
_c3gKg:
	leaq block_c3gKk_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rsi
	movq 8(%rbp),%r14
	movq %rbx,8(%rbp)
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c3gKg, .-_c3gKg


==================== Asm code ====================
2018-03-16 15:57:55.046615591 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gKg_info:
	.quad	_c3gKg
	.quad	5
	.quad	-4294967266
	.quad	u3gMe_srtd


==================== Asm code ====================
2018-03-16 15:57:55.047155441 UTC

.section .data.rel.ro
.align 8
.align 1
u3gMf_srtd:
	.quad	S3bQP_srt+552
	.quad	70
	.quad	4611689866718085121
	.quad	32


==================== Asm code ====================
2018-03-16 15:57:55.047760006 UTC

.section .text
.align 8
_c3gKk:
_c3gKk:
	leaq block_c3gKo_info(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%rsi
	movq 40(%rbp),%r14
	movq %rbx,40(%rbp)
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c3gKk, .-_c3gKk


==================== Asm code ====================
2018-03-16 15:57:55.048319268 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gKk_info:
	.quad	_c3gKk
	.quad	5
	.quad	-4294967266
	.quad	u3gMf_srtd


==================== Asm code ====================
2018-03-16 15:57:55.048862259 UTC

.section .data.rel.ro
.align 8
.align 1
u3gMg_srtd:
	.quad	S3bQP_srt+552
	.quad	70
	.quad	4611689866718085121
	.quad	32


==================== Asm code ====================
2018-03-16 15:57:55.049584579 UTC

.section .text
.align 8
_c3gKo:
_c3gKo:
	movq 8(%rbp),%rax
	leaq block_c3gKs_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq 32(%rbp),%r14
	movq %rbx,32(%rbp)
	addq $8,%rbp
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c3gKo, .-_c3gKo


==================== Asm code ====================
2018-03-16 15:57:55.050165533 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gKo_info:
	.quad	_c3gKo
	.quad	5
	.quad	-4294967266
	.quad	u3gMg_srtd


==================== Asm code ====================
2018-03-16 15:57:55.050725637 UTC

.section .data.rel.ro
.align 8
.align 1
u3gMh_srtd:
	.quad	S3bQP_srt+552
	.quad	70
	.quad	4611689866718085121
	.quad	32


==================== Asm code ====================
2018-03-16 15:57:55.051440625 UTC

.section .text
.align 8
_c3gKs:
_c3gKs:
	movq 32(%rbp),%rax
	leaq block_c3gKw_info(%rip),%rcx
	movq %rcx,32(%rbp)
	movq %rax,%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq %rbx,%rsi
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r14
	movq 8(%rbp),%rbx
	addq $32,%rbp
	jmp gen_s3bim_entry
	.size _c3gKs, .-_c3gKs


==================== Asm code ====================
2018-03-16 15:57:55.052012357 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gKs_info:
	.quad	_c3gKs
	.quad	4
	.quad	-4294967266
	.quad	u3gMh_srtd


==================== Asm code ====================
2018-03-16 15:57:55.052675897 UTC

.section .text
.align 8
_c3gKw:
_c3gKw:
	leaq block_c3gKA_info(%rip),%rax
	movq %rax,(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rsi
	movq %rbx,%r14
	jmp *GHC.List.reverse1_entry@gotpcrel(%rip)
	.size _c3gKw, .-_c3gKw


==================== Asm code ====================
2018-03-16 15:57:55.053317305 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gKw_info:
	.quad	_c3gKw
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.053968237 UTC

.section .text
.align 8
_c3gKA:
_c3gKA:
	movq %rbx,%rsi
	leaq lvl8_r2UqG_closure+1(%rip),%r14
	addq $8,%rbp
	jmp *GHC.Base.map_entry@gotpcrel(%rip)
	.size _c3gKA, .-_c3gKA


==================== Asm code ====================
2018-03-16 15:57:55.054521731 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gKA_info:
	.quad	_c3gKA
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.055613645 UTC

.section .data.rel.ro
.align 8
.align 1
u3gMi_srtd:
	.quad	S3bQP_srt+552
	.quad	70
	.quad	4613941666531770369
	.quad	32


==================== Asm code ====================
2018-03-16 15:57:55.056353673 UTC

.section .text
.align 8
_c3gKO:
_c3gKO:
	movq 8(%rbp),%rax
	leaq block_c3gKT_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq 16(%rbp),%r14
	movq 31(%rbx),%rax
	movq %rax,16(%rbp)
	addq $8,%rbp
	jmp GHC.Float.$wexpt_entry
	.size _c3gKO, .-_c3gKO


==================== Asm code ====================
2018-03-16 15:57:55.05702059 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gKO_info:
	.quad	_c3gKO
	.quad	70
	.quad	-4294967266
	.quad	u3gMi_srtd


==================== Asm code ====================
2018-03-16 15:57:55.05766511 UTC

.section .data.rel.ro
.align 8
.align 1
u3gMj_srtd:
	.quad	S3bQP_srt+552
	.quad	70
	.quad	4611689866718085121
	.quad	32


==================== Asm code ====================
2018-03-16 15:57:55.058272958 UTC

.section .text
.align 8
_c3gKT:
_c3gKT:
	leaq block_c3gKX_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rsi
	movq 24(%rbp),%r14
	jmp *GHC.Integer.Type.timesInteger_entry@gotpcrel(%rip)
	.size _c3gKT, .-_c3gKT


==================== Asm code ====================
2018-03-16 15:57:55.059029623 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gKT_info:
	.quad	_c3gKT
	.quad	5
	.quad	-4294967266
	.quad	u3gMj_srtd


==================== Asm code ====================
2018-03-16 15:57:55.059579539 UTC

.section .data.rel.ro
.align 8
.align 1
u3gMk_srtd:
	.quad	S3bQP_srt+552
	.quad	70
	.quad	4611689866718085121
	.quad	32


==================== Asm code ====================
2018-03-16 15:57:55.060308628 UTC

.section .text
.align 8
_c3gKX:
_c3gKX:
	movq 40(%rbp),%rax
	leaq block_c3gL1_info(%rip),%rcx
	movq %rcx,40(%rbp)
	movq 8(%rbp),%r9
	movq %rax,%r8
	movq %rbx,%rdi
	movq 32(%rbp),%rsi
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r14
	movq 16(%rbp),%rbx
	addq $40,%rbp
	jmp gen_s3bim_entry
	.size _c3gKX, .-_c3gKX


==================== Asm code ====================
2018-03-16 15:57:55.061017218 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gKX_info:
	.quad	_c3gKX
	.quad	261
	.quad	-4294967266
	.quad	u3gMk_srtd


==================== Asm code ====================
2018-03-16 15:57:55.061685369 UTC

.section .text
.align 8
_c3gL1:
_c3gL1:
	leaq block_c3gL5_info(%rip),%rax
	movq %rax,(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rsi
	movq %rbx,%r14
	jmp *GHC.List.reverse1_entry@gotpcrel(%rip)
	.size _c3gL1, .-_c3gL1


==================== Asm code ====================
2018-03-16 15:57:55.062257069 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gL1_info:
	.quad	_c3gL1
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.062915372 UTC

.section .text
.align 8
_c3gL5:
_c3gL5:
	movq %rbx,%rsi
	leaq lvl8_r2UqG_closure+1(%rip),%r14
	addq $8,%rbp
	jmp *GHC.Base.map_entry@gotpcrel(%rip)
	.size _c3gL5, .-_c3gL5


==================== Asm code ====================
2018-03-16 15:57:55.063457319 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gL5_info:
	.quad	_c3gL5
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.063955624 UTC

.section .data.rel.ro
.align 8
.align 1
u3gMl_srtd:
	.quad	S3bQP_srt+552
	.quad	71
	.quad	4613941666565324801
	.quad	96


==================== Asm code ====================
2018-03-16 15:57:55.064753606 UTC

.section .text
.align 8
.globl GHC.Float.$wfloatToDigits_entry
.type GHC.Float.$wfloatToDigits_entry, @object
GHC.Float.$wfloatToDigits_entry:
_c3gLi:
	leaq -56(%rbp),%rax
	cmpq %r15,%rax
	jb _c3gLj
_c3gLk:
	leaq block_c3gy3_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %r14,%rax
	movq %rax,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-32,%rbp
	jmp GHC.Float.$p1RealFloat_entry
_c3gLj:
	leaq GHC.Float.$wfloatToDigits_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$wfloatToDigits_entry, .-GHC.Float.$wfloatToDigits_entry


==================== Asm code ====================
2018-03-16 15:57:55.065434316 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$wfloatToDigits_info
.type GHC.Float.$wfloatToDigits_info, @object
GHC.Float.$wfloatToDigits_info:
	.quad	GHC.Float.$wfloatToDigits_entry
	.quad	0
	.quad	-4294967282
	.quad	12884901911
	.quad	u3gMl_srtd


==================== Asm code ====================
2018-03-16 15:57:55.065981586 UTC

.section .data.rel.ro
.align 8
.align 1
u3gMm_srtd:
	.quad	S3bQP_srt+552
	.quad	70
	.quad	4613941666565324801
	.quad	32


==================== Asm code ====================
2018-03-16 15:57:55.066614567 UTC

.section .text
.align 8
_c3gy3:
_c3gy3:
	leaq block_c3gy7_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp *GHC.Real.$p1RealFrac_entry@gotpcrel(%rip)
	.size _c3gy3, .-_c3gy3


==================== Asm code ====================
2018-03-16 15:57:55.067233691 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gy3_info:
	.quad	_c3gy3
	.quad	3
	.quad	-4294967266
	.quad	u3gMm_srtd


==================== Asm code ====================
2018-03-16 15:57:55.067818939 UTC

.section .data.rel.ro
.align 8
.align 1
u3gMn_srtd:
	.quad	S3bQP_srt+552
	.quad	70
	.quad	4613941666565324801
	.quad	32


==================== Asm code ====================
2018-03-16 15:57:55.068579497 UTC

.section .text
.align 8
_c3gy7:
_c3gy7:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3gLo
_c3gLn:
	leaq sat_s3bg1_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,(%r12)
	leaq block_c3gyn_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%r14
	leaq -16(%r12),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Real.$p2Real_entry@gotpcrel(%rip)
_c3gLo:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3gy7, .-_c3gy7


==================== Asm code ====================
2018-03-16 15:57:55.069234389 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gy7_info:
	.quad	_c3gy7
	.quad	3
	.quad	-4294967266
	.quad	u3gMn_srtd


==================== Asm code ====================
2018-03-16 15:57:55.069846069 UTC

.section .data.rel.ro
.align 8
.align 1
u3gMo_srtd:
	.quad	S3bQP_srt+552
	.quad	70
	.quad	4613941666565324801
	.quad	32


==================== Asm code ====================
2018-03-16 15:57:55.070497006 UTC

.section .text
.align 8
_c3gyn:
_c3gyn:
	leaq block_c3gyr_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp *GHC.Classes.$p1Ord_entry@gotpcrel(%rip)
	.size _c3gyn, .-_c3gyn


==================== Asm code ====================
2018-03-16 15:57:55.071059544 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gyn_info:
	.quad	_c3gyn
	.quad	4
	.quad	-4294967266
	.quad	u3gMo_srtd


==================== Asm code ====================
2018-03-16 15:57:55.071591056 UTC

.section .data.rel.ro
.align 8
.align 1
u3gMp_srtd:
	.quad	S3bQP_srt+552
	.quad	70
	.quad	4613941666565324801
	.quad	32


==================== Asm code ====================
2018-03-16 15:57:55.072250964 UTC

.section .text
.align 8
_c3gyr:
_c3gyr:
	movq 8(%rbp),%rax
	leaq block_c3gyv_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq 32(%rbp),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-16,%rbp
	jmp *GHC.Classes.==_entry@gotpcrel(%rip)
	.size _c3gyr, .-_c3gyr


==================== Asm code ====================
2018-03-16 15:57:55.072920106 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gyr_info:
	.quad	_c3gyr
	.quad	4
	.quad	-4294967266
	.quad	u3gMp_srtd


==================== Asm code ====================
2018-03-16 15:57:55.073536059 UTC

.section .data.rel.ro
.align 8
.align 1
u3gMq_srtd:
	.quad	S3bQP_srt+552
	.quad	70
	.quad	4613941666565324801
	.quad	32


==================== Asm code ====================
2018-03-16 15:57:55.07472414 UTC

.section .text
.align 8
_c3gyv:
_c3gyv:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c3gLs
_c3gLz:
	leaq GHC.Float.minExpt_closure+1(%rip),%r14
	leaq lvl3_r2UpB_closure+2(%rip),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3gLv:
	movq $480,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c3gLs:
	addq $480,%r12
	cmpq 856(%r13),%r12
	ja _c3gLv
_c3gLu:
	leaq b_s3bg3_info(%rip),%rax
	movq %rax,-472(%r12)
	movq 8(%rbp),%rax
	movq %rax,-456(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-448(%r12)
	leaq p_s3bg4_info(%rip),%rcx
	movq %rcx,-440(%r12)
	movq %rax,-424(%r12)
	movq %rbx,-416(%r12)
	leaq minExp_s3bg5_info(%rip),%rcx
	movq %rcx,-408(%r12)
	movq %rax,-392(%r12)
	movq %rbx,-384(%r12)
	leaq -440(%r12),%rcx
	movq %rcx,-376(%r12)
	leaq ds_s3bge_info(%rip),%rdx
	movq %rdx,-368(%r12)
	movq %rax,-352(%r12)
	movq %rbx,-344(%r12)
	leaq ds1_s3bgf_info(%rip),%rax
	movq %rax,-336(%r12)
	leaq -472(%r12),%rax
	movq %rax,-320(%r12)
	leaq -408(%r12),%rbx
	movq %rbx,-312(%r12)
	leaq -368(%r12),%rdx
	movq %rdx,-304(%r12)
	movq stg_sel_0_upd_info@gotpcrel(%rip),%rsi
	movq %rsi,-296(%r12)
	leaq -336(%r12),%rsi
	movq %rsi,-280(%r12)
	leaq ds2_s3bgy_info(%rip),%rdi
	movq %rdi,-272(%r12)
	movq %rax,-256(%r12)
	movq %rcx,-248(%r12)
	movq %rbx,-240(%r12)
	movq %rsi,-232(%r12)
	leaq -296(%r12),%rbx
	movq %rbx,-224(%r12)
	movq stg_sel_1_upd_info@gotpcrel(%rip),%rdi
	movq %rdi,-216(%r12)
	leaq -272(%r12),%rdi
	movq %rdi,-200(%r12)
	movq stg_sel_0_upd_info@gotpcrel(%rip),%r8
	movq %r8,-192(%r12)
	movq %rdi,-176(%r12)
	movq stg_sel_2_upd_info@gotpcrel(%rip),%r8
	movq %r8,-168(%r12)
	movq %rdi,-152(%r12)
	leaq k_s3bht_info(%rip),%r8
	movq %r8,-144(%r12)
	movq 16(%rbp),%r8
	movq %r8,-128(%r12)
	movq %rax,-120(%r12)
	movq %rcx,-112(%r12)
	movq %rdx,-104(%r12)
	movq %rsi,-96(%r12)
	movq %rbx,-88(%r12)
	leaq -216(%r12),%rax
	movq %rax,-80(%r12)
	leaq -192(%r12),%rbx
	movq %rbx,-72(%r12)
	leaq -168(%r12),%rcx
	movq %rcx,-64(%r12)
	leaq sat_s3bj6_info(%rip),%rdx
	movq %rdx,-56(%r12)
	movq %r8,-40(%r12)
	movq %rdi,-32(%r12)
	movq %rax,-24(%r12)
	movq %rbx,-16(%r12)
	movq %rcx,-8(%r12)
	leaq -144(%r12),%rax
	movq %rax,(%r12)
	movq %rax,%r14
	leaq -56(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3gyv, .-_c3gyv


==================== Asm code ====================
2018-03-16 15:57:55.075880135 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gyv_info:
	.quad	_c3gyv
	.quad	3
	.quad	-4294967266
	.quad	u3gMq_srtd


==================== Asm code ====================
2018-03-16 15:57:55.079046206 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.floatToDigits_closure
.type GHC.Float.floatToDigits_closure, @object
GHC.Float.floatToDigits_closure:
	.quad	GHC.Float.floatToDigits_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:55.079785151 UTC

.section .text
.align 8
.globl GHC.Float.floatToDigits_entry
.type GHC.Float.floatToDigits_entry, @object
GHC.Float.floatToDigits_entry:
_c3gWx:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3gWy
_c3gWz:
	leaq block_c3gWu_info(%rip),%rax
	movq %rax,-8(%rbp)
	addq $-8,%rbp
	jmp GHC.Float.$wfloatToDigits_entry
_c3gWy:
	leaq GHC.Float.floatToDigits_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.floatToDigits_entry, .-GHC.Float.floatToDigits_entry


==================== Asm code ====================
2018-03-16 15:57:55.080409708 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.floatToDigits_info
.type GHC.Float.floatToDigits_info, @object
GHC.Float.floatToDigits_info:
	.quad	GHC.Float.floatToDigits_entry
	.quad	0
	.quad	12884901902
	.quad	12884901911
	.quad	S3bQP_srt+1112


==================== Asm code ====================
2018-03-16 15:57:55.081122808 UTC

.section .text
.align 8
_c3gWu:
_c3gWu:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3gWC
_c3gWB:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3gWC:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c3gWu, .-_c3gWu


==================== Asm code ====================
2018-03-16 15:57:55.081776602 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gWu_info:
	.quad	_c3gWu
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.083436271 UTC

.section .data
.align 8
.align 1
base_r2UqK_closure:
	.quad	GHC.Types.I#_con_info
	.quad	10


==================== Asm code ====================
2018-03-16 15:57:55.085594796 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl12_r2UqL_bytes:
	.asciz "formatRealFloat/doFmt/FFExponent: []"


==================== Asm code ====================
2018-03-16 15:57:55.088693392 UTC

.section .data
.align 8
.align 1
lvl13_r2UqM_closure:
	.quad	lvl13_r2UqM_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:55.089648868 UTC

.section .text
.align 8
lvl13_r2UqM_entry:
_c3gWY:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3gWZ
_c3gX0:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c3gWV
_c3gWU:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq block_c3gWW_info(%rip),%rax
	movq %rax,-24(%rbp)
	leaq lvl12_r2UqL_bytes(%rip),%r14
	addq $-24,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c3gWZ:
	jmp *-16(%r13)
_c3gWV:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl13_r2UqM_entry, .-lvl13_r2UqM_entry


==================== Asm code ====================
2018-03-16 15:57:55.090367271 UTC

.section .data.rel.ro
.align 8
.align 1
lvl13_r2UqM_info:
	.quad	lvl13_r2UqM_entry
	.quad	0
	.quad	4294967317
	.quad	S3bQP_srt+1128


==================== Asm code ====================
2018-03-16 15:57:55.09100887 UTC

.section .text
.align 8
_c3gWW:
_c3gWW:
	movq %rbx,%r14
	addq $8,%rbp
	jmp *GHC.Err.errorWithoutStackTrace_entry@gotpcrel(%rip)
	.size _c3gWW, .-_c3gWW


==================== Asm code ====================
2018-03-16 15:57:55.091588939 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gWW_info:
	.quad	_c3gWW
	.quad	0
	.quad	4294967326
	.quad	S3bQP_srt+1128


==================== Asm code ====================
2018-03-16 15:57:55.093293622 UTC

.section .data
.align 8
.align 1
lvl14_r2UqN_closure:
	.quad	GHC.Types.C#_con_info
	.quad	46


==================== Asm code ====================
2018-03-16 15:57:55.094933872 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl15_r2UqO_bytes:
	.asciz "0.0e0"


==================== Asm code ====================
2018-03-16 15:57:55.097546088 UTC

.section .data
.align 8
.align 1
lvl16_r2UqP_closure:
	.quad	lvl16_r2UqP_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:55.098404907 UTC

.section .text
.align 8
lvl16_r2UqP_entry:
_c3gXo:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3gXp
_c3gXq:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c3gXn
_c3gXm:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl15_r2UqO_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c3gXp:
	jmp *-16(%r13)
_c3gXn:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl16_r2UqP_entry, .-lvl16_r2UqP_entry


==================== Asm code ====================
2018-03-16 15:57:55.099059363 UTC

.section .data.rel.ro
.align 8
.align 1
lvl16_r2UqP_info:
	.quad	lvl16_r2UqP_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:57:55.100714342 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl17_r2UqQ_bytes:
	.asciz "GHC/Float.hs:692:12-70|d : ds'"


==================== Asm code ====================
2018-03-16 15:57:55.103787091 UTC

.section .data
.align 8
.align 1
lvl18_r2UqR_closure:
	.quad	lvl18_r2UqR_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:55.104673112 UTC

.section .text
.align 8
lvl18_r2UqR_entry:
_c3gXG:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3gXH
_c3gXI:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c3gXF
_c3gXE:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl17_r2UqQ_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *Control.Exception.Base.patError_entry@gotpcrel(%rip)
_c3gXH:
	jmp *-16(%r13)
_c3gXF:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl18_r2UqR_entry, .-lvl18_r2UqR_entry


==================== Asm code ====================
2018-03-16 15:57:55.105407717 UTC

.section .data.rel.ro
.align 8
.align 1
lvl18_r2UqR_info:
	.quad	lvl18_r2UqR_entry
	.quad	0
	.quad	4294967317
	.quad	S3bQP_srt+1136


==================== Asm code ====================
2018-03-16 15:57:55.107080963 UTC

.section .data
.align 8
.align 1
lvl19_r2UqS_closure:
	.quad	GHC.Types.C#_con_info
	.quad	101


==================== Asm code ====================
2018-03-16 15:57:55.108752209 UTC

.section .data
.align 8
.align 1
lvl20_r2UqT_closure:
	.quad	GHC.Types.C#_con_info
	.quad	48


==================== Asm code ====================
2018-03-16 15:57:55.110424188 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl21_r2UqU_bytes:
	.asciz "e0"


==================== Asm code ====================
2018-03-16 15:57:55.112061814 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl22_r2UqV_bytes:
	.asciz "0"


==================== Asm code ====================
2018-03-16 15:57:55.115653917 UTC

.section .data
.align 8
.align 1
lvl23_r2UqW_closure:
	.quad	lvl23_r2UqW_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:55.117404642 UTC

.section .text
.align 8
lvl23_r2UqW_entry:
_c3gY1:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3gY2
_c3gY3:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c3gY0
_c3gXZ:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl22_r2UqV_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c3gY2:
	jmp *-16(%r13)
_c3gY0:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl23_r2UqW_entry, .-lvl23_r2UqW_entry


==================== Asm code ====================
2018-03-16 15:57:55.118176526 UTC

.section .data.rel.ro
.align 8
.align 1
lvl23_r2UqW_info:
	.quad	lvl23_r2UqW_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:57:55.126097739 UTC

.section .data
.align 8
.align 1
$wf_r2UqX_closure:
	.quad	$wf_r2UqX_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:55.126968525 UTC

.section .text
.align 8
sat_s3bjt_entry:
_c3gYH:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3gYI
_c3gYJ:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3gYA_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _c3gYA
_c3gYB:
	movq (%rbx),%rax
	jmp *(%rax)
_c3gYI:
	jmp *-16(%r13)
	.size sat_s3bjt_entry, .-sat_s3bjt_entry


==================== Asm code ====================
2018-03-16 15:57:55.127596282 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bjt_info:
	.quad	sat_s3bjt_entry
	.quad	1
	.quad	4294967312
	.quad	S3bQP_srt+1144


==================== Asm code ====================
2018-03-16 15:57:55.128286765 UTC

.section .text
.align 8
_c3gYA:
_c3gYA:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c3gYE
_c3gYF:
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c3gYE:
	leaq lvl23_r2UqW_closure(%rip),%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3gYA, .-_c3gYA


==================== Asm code ====================
2018-03-16 15:57:55.1288702 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gYA_info:
	.quad	_c3gYA
	.quad	0
	.quad	4294967326
	.quad	S3bQP_srt+1144


==================== Asm code ====================
2018-03-16 15:57:55.130311481 UTC

.section .text
.align 8
sat_s3bjA_entry:
_c3gZ4:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3gZ5
_c3gZ6:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3gYX_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _c3gYX
_c3gYY:
	movq (%rbx),%rax
	jmp *(%rax)
_c3gZ5:
	jmp *-16(%r13)
	.size sat_s3bjA_entry, .-sat_s3bjA_entry


==================== Asm code ====================
2018-03-16 15:57:55.130979219 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bjA_info:
	.quad	sat_s3bjA_entry
	.quad	1
	.quad	4294967312
	.quad	S3bQP_srt+1144


==================== Asm code ====================
2018-03-16 15:57:55.131695607 UTC

.section .text
.align 8
_c3gYX:
_c3gYX:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c3gZ1
_c3gZ2:
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c3gZ1:
	leaq lvl23_r2UqW_closure(%rip),%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3gYX, .-_c3gYX


==================== Asm code ====================
2018-03-16 15:57:55.132339033 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gYX_info:
	.quad	_c3gYX
	.quad	0
	.quad	4294967326
	.quad	S3bQP_srt+1144


==================== Asm code ====================
2018-03-16 15:57:55.133044336 UTC

.section .text
.align 8
$wf_r2UqX_entry:
_c3gZh:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3gZi
_u3gZI:
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-24,%rbp
	jmp _c3gYd
_c3gZi:
	leaq $wf_r2UqX_closure(%rip),%rbx
	jmp *-8(%r13)
	.size $wf_r2UqX_entry, .-$wf_r2UqX_entry


==================== Asm code ====================
2018-03-16 15:57:55.133707792 UTC

.section .data.rel.ro
.align 8
.align 1
$wf_r2UqX_info:
	.quad	$wf_r2UqX_entry
	.quad	0
	.quad	12884901902
	.quad	12884901907
	.quad	S3bQP_srt+1144


==================== Asm code ====================
2018-03-16 15:57:55.134492413 UTC

.section .text
.align 8
_c3gYd:
_c3gYd:
	movq (%rbp),%rax
	testq %rax,%rax
	jne _c3gZf
_c3gZg:
	movq 8(%rbp),%rax
	leaq block_c3gYs_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rbx
	leaq 1(%rbx),%rsi
	movq %rax,%r14
	addq $8,%rbp
	jmp *GHC.List.reverse1_entry@gotpcrel(%rip)
_c3gZf:
	leaq block_c3gYi_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq 16(%rbp),%rbx
	movq %rax,16(%rbp)
	testb $7,%bl
	jne _c3gYi
_c3gYj:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3gYd, .-_c3gYd


==================== Asm code ====================
2018-03-16 15:57:55.135525542 UTC

.section .text
.align 8
_c3gYi:
_c3gYi:
	movq 8(%rbp),%rax
	movq 16(%rbp),%rcx
	movq %rbx,%rdx
	andl $7,%edx
	cmpq $1,%rdx
	je _c3gZl
_c3gZp:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3gZs
_c3gZr:
	movq 6(%rbx),%rdx
	movq 14(%rbx),%rbx
	movq :_con_info@gotpcrel(%rip),%rsi
	movq %rsi,-16(%r12)
	movq %rdx,-8(%r12)
	movq %rax,(%r12)
	leaq -1(%rcx),%rax
	movq %rax,(%rbp)
	leaq -14(%r12),%rax
	movq %rax,8(%rbp)
	movq %rbx,16(%rbp)
	jmp _c3gYd
_c3gZs:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c3gZl:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3gZs
_c3gZn:
	movq :_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	leaq lvl20_r2UqT_closure+1(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -1(%rcx),%rax
	movq %rax,(%rbp)
	leaq -14(%r12),%rax
	movq %rax,8(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,16(%rbp)
	jmp _c3gYd
	.size _c3gYi, .-_c3gYi


==================== Asm code ====================
2018-03-16 15:57:55.136353501 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gYi_info:
	.quad	_c3gYi
	.quad	130
	.quad	4294967326
	.quad	S3bQP_srt+1144


==================== Asm code ====================
2018-03-16 15:57:55.137294917 UTC

.section .text
.align 8
_c3gYs:
_c3gYs:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c3gZv
_c3gZA:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c3gZD
_c3gZC:
	leaq sat_s3bjA_info(%rip),%rcx
	movq %rcx,-40(%r12)
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq lvl14_r2UqN_closure+1(%rip),%rax
	movq %rax,-8(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rsi
	movq %rbx,%r14
	addq $16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_c3gZD:
	movq $48,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c3gZv:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c3gZD
_c3gZx:
	leaq sat_s3bjt_info(%rip),%rbx
	movq %rbx,-40(%r12)
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq lvl14_r2UqN_closure+1(%rip),%rax
	movq %rax,-8(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rsi
	leaq lvl23_r2UqW_closure(%rip),%r14
	addq $16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
	.size _c3gYs, .-_c3gYs


==================== Asm code ====================
2018-03-16 15:57:55.138109236 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3gYs_info:
	.quad	_c3gYs
	.quad	1
	.quad	4294967326
	.quad	S3bQP_srt+1144


==================== Asm code ====================
2018-03-16 15:57:55.139755985 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl24_r2UqY_bytes:
	.asciz "GHC/Float.hs:720:11-64|d : ds'"


==================== Asm code ====================
2018-03-16 15:57:55.142832514 UTC

.section .data
.align 8
.align 1
lvl25_r2UqZ_closure:
	.quad	lvl25_r2UqZ_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:55.143728009 UTC

.section .text
.align 8
lvl25_r2UqZ_entry:
_c3h12:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3h13
_c3h14:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c3h11
_c3h10:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl24_r2UqY_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *Control.Exception.Base.patError_entry@gotpcrel(%rip)
_c3h13:
	jmp *-16(%r13)
_c3h11:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl25_r2UqZ_entry, .-lvl25_r2UqZ_entry


==================== Asm code ====================
2018-03-16 15:57:55.144452734 UTC

.section .data.rel.ro
.align 8
.align 1
lvl25_r2UqZ_info:
	.quad	lvl25_r2UqZ_entry
	.quad	0
	.quad	4294967317
	.quad	S3bQP_srt+1136


==================== Asm code ====================
2018-03-16 15:57:55.146125233 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl26_r2Ur0_bytes:
	.asciz "Infinity"


==================== Asm code ====================
2018-03-16 15:57:55.148764557 UTC

.section .data
.align 8
.align 1
lvl27_r2Ur1_closure:
	.quad	lvl27_r2Ur1_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:55.149939779 UTC

.section .text
.align 8
lvl27_r2Ur1_entry:
_c3h1k:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3h1l
_c3h1m:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c3h1j
_c3h1i:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl26_r2Ur0_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c3h1l:
	jmp *-16(%r13)
_c3h1j:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl27_r2Ur1_entry, .-lvl27_r2Ur1_entry


==================== Asm code ====================
2018-03-16 15:57:55.150934589 UTC

.section .data.rel.ro
.align 8
.align 1
lvl27_r2Ur1_info:
	.quad	lvl27_r2Ur1_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:57:55.153139044 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl28_r2Ur2_bytes:
	.asciz "-Infinity"


==================== Asm code ====================
2018-03-16 15:57:55.156742424 UTC

.section .data
.align 8
.align 1
lvl29_r2Ur3_closure:
	.quad	lvl29_r2Ur3_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:55.158343207 UTC

.section .text
.align 8
lvl29_r2Ur3_entry:
_c3h1C:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3h1D
_c3h1E:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c3h1B
_c3h1A:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl28_r2Ur2_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c3h1D:
	jmp *-16(%r13)
_c3h1B:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl29_r2Ur3_entry, .-lvl29_r2Ur3_entry


==================== Asm code ====================
2018-03-16 15:57:55.159831518 UTC

.section .data.rel.ro
.align 8
.align 1
lvl29_r2Ur3_info:
	.quad	lvl29_r2Ur3_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:57:55.161742998 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl30_r2Ur4_bytes:
	.asciz "NaN"


==================== Asm code ====================
2018-03-16 15:57:55.16429043 UTC

.section .data
.align 8
.align 1
lvl31_r2Ur5_closure:
	.quad	lvl31_r2Ur5_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:55.16519243 UTC

.section .text
.align 8
lvl31_r2Ur5_entry:
_c3h1U:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3h1V
_c3h1W:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c3h1T
_c3h1S:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl30_r2Ur4_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c3h1V:
	jmp *-16(%r13)
_c3h1T:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl31_r2Ur5_entry, .-lvl31_r2Ur5_entry


==================== Asm code ====================
2018-03-16 15:57:55.165954181 UTC

.section .data.rel.ro
.align 8
.align 1
lvl31_r2Ur5_info:
	.quad	lvl31_r2Ur5_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:57:55.167581381 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl32_r2Ur6_bytes:
	.asciz ".0e"


==================== Asm code ====================
2018-03-16 15:57:55.169235459 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl33_r2Ur7_bytes:
	.asciz "e"


==================== Asm code ====================
2018-03-16 15:57:55.171988125 UTC

.section .data
.align 8
.align 1
lvl34_r2Ur8_closure:
	.quad	lvl34_r2Ur8_info
	.quad	0
	.quad	0
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:55.172877865 UTC

.section .text
.align 8
lvl34_r2Ur8_entry:
_c3h2d:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3h2e
_c3h2f:
	subq $8,%rsp
	movq %r13,%rax
	movq %rbx,%rsi
	movq %rax,%rdi
	xorl %eax,%eax
	call newCAF@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c3h2c
_c3h2b:
	movq stg_bh_upd_frame_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	leaq lvl21_r2UqU_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackCString#_entry@gotpcrel(%rip)
_c3h2e:
	jmp *-16(%r13)
_c3h2c:
	movq (%rbx),%rax
	jmp *(%rax)
	.size lvl34_r2Ur8_entry, .-lvl34_r2Ur8_entry


==================== Asm code ====================
2018-03-16 15:57:55.173603171 UTC

.section .data.rel.ro
.align 8
.align 1
lvl34_r2Ur8_info:
	.quad	lvl34_r2Ur8_entry
	.quad	0
	.quad	21


==================== Asm code ====================
2018-03-16 15:57:55.175334672 UTC

.section .data
.align 8
.align 1
lvl35_r2Ur9_closure:
	.quad	:_con_info
	.quad	lvl20_r2UqT_closure+1
	.quad	lvl34_r2Ur8_closure
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:55.178772994 UTC

.section .data
.align 8
.align 1
$wxs1_r2Ura_closure:
	.quad	$wxs1_r2Ura_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:55.179587947 UTC

.section .text
.align 8
sat_s3bjF_entry:
_c3h2B:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3h2C
_c3h2D:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	leaq -1(%rax),%r14
	addq $-16,%rbp
	jmp $wxs1_r2Ura_entry
_c3h2C:
	jmp *-16(%r13)
	.size sat_s3bjF_entry, .-sat_s3bjF_entry


==================== Asm code ====================
2018-03-16 15:57:55.180209056 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bjF_info:
	.quad	sat_s3bjF_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S3bQP_srt+1160


==================== Asm code ====================
2018-03-16 15:57:55.181021904 UTC

.section .text
.align 8
$wxs1_r2Ura_entry:
_c3h2H:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c3h2L
_c3h2K:
	cmpq $1,%r14
	je _c3h2G
_c3h2F:
	leaq sat_s3bjF_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq lvl20_r2UqT_closure+1(%rip),%rax
	movq %rax,-8(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c3h2L:
	movq $48,904(%r13)
	leaq $wxs1_r2Ura_closure(%rip),%rbx
	jmp *-8(%r13)
_c3h2G:
	addq $-48,%r12
	leaq lvl35_r2Ur9_closure+2(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size $wxs1_r2Ura_entry, .-$wxs1_r2Ura_entry


==================== Asm code ====================
2018-03-16 15:57:55.181752994 UTC

.section .data.rel.ro
.align 8
.align 1
$wxs1_r2Ura_info:
	.quad	$wxs1_r2Ura_entry
	.quad	0
	.quad	12884901902
	.quad	4294967300
	.quad	S3bQP_srt+1160


==================== Asm code ====================
2018-03-16 15:57:55.183405409 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
lvl36_r2Urb_bytes:
	.asciz "0."


==================== Asm code ====================
2018-03-16 15:57:55.18878886 UTC

.section .data
.align 8
.align 1
$j_r2Urc_closure:
	.quad	$j_r2Urc_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:55.19000114 UTC

.section .text
.align 8
$j_r2Urc_entry:
_c3h3b:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3h3c
_c3h3d:
	leaq block_c3h38_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %r14,%rbx
	movq %rsi,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3h38
_c3h39:
	movq (%rbx),%rax
	jmp *(%rax)
_c3h3c:
	leaq $j_r2Urc_closure(%rip),%rbx
	jmp *-8(%r13)
	.size $j_r2Urc_entry, .-$j_r2Urc_entry


==================== Asm code ====================
2018-03-16 15:57:55.190620417 UTC

.section .data.rel.ro
.align 8
.align 1
$j_r2Urc_info:
	.quad	$j_r2Urc_entry
	.quad	0
	.quad	30064771086
	.quad	8589934607
	.quad	S3bQP_srt+1176


==================== Asm code ====================
2018-03-16 15:57:55.191462377 UTC

.section .text
.align 8
_c3h38:
_c3h38:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3h3i
_c3h3h:
	movq 8(%rbp),%rax
	cmpq $0,7(%rbx)
	jle _c3h3p
_c3h3F:
	addq $-24,%r12
	leaq block_c3h3E_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rsi
	movq GHC.Show.intToDigit_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r14
	addq $8,%rbp
	jmp *GHC.Base.map_entry@gotpcrel(%rip)
_c3h3p:
	movq :_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	leaq GHC.Float.minExpt_closure+1(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq block_c3h3n_info(%rip),%rax
	movq %rax,8(%rbp)
	leaq -14(%r12),%rsi
	movq GHC.Show.intToDigit_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r14
	addq $8,%rbp
	jmp *GHC.Base.map_entry@gotpcrel(%rip)
_c3h3i:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3h38, .-_c3h38


==================== Asm code ====================
2018-03-16 15:57:55.19221491 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3h38_info:
	.quad	_c3h38
	.quad	1
	.quad	12884901918
	.quad	S3bQP_srt+1176


==================== Asm code ====================
2018-03-16 15:57:55.192998704 UTC

.section .text
.align 8
_c3h3n:
_c3h3n:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _u3h3V
_c3h3z:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3h3C
_c3h3B:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq (,)_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u3h3V:
	addq $8,%rbp
	jmp _c3h3L
_c3h3C:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3h3n, .-_c3h3n


==================== Asm code ====================
2018-03-16 15:57:55.193751619 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3h3n_info:
	.quad	_c3h3n
	.quad	0
	.quad	4294967326
	.quad	S3bQP_srt+1184


==================== Asm code ====================
2018-03-16 15:57:55.194558652 UTC

.section .text
.align 8
_c3h3E:
_c3h3E:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _u3h3W
_c3h3P:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3h3S
_c3h3R:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq (,)_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u3h3W:
	addq $8,%rbp
	jmp _c3h3L
_c3h3S:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3h3E, .-_c3h3E


==================== Asm code ====================
2018-03-16 15:57:55.195823751 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3h3E_info:
	.quad	_c3h3E
	.quad	0
	.quad	4294967326
	.quad	S3bQP_srt+1184


==================== Asm code ====================
2018-03-16 15:57:55.196547429 UTC

.section .text
.align 8
_c3h3L:
_c3h3L:
	leaq lvl25_r2UqZ_closure(%rip),%rbx
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3h3L, .-_c3h3L


==================== Asm code ====================
2018-03-16 15:57:55.198488034 UTC

.section .data
.align 8
.align 1
lvl37_r2Urd_closure:
	.quad	:_con_info
	.quad	lvl14_r2UqN_closure+1
	.quad	GHC.Types.[]_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:55.274394639 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$w$sformatRealFloatAlt1_closure
.type GHC.Float.$w$sformatRealFloatAlt1_closure, @object
GHC.Float.$w$sformatRealFloatAlt1_closure:
	.quad	GHC.Float.$w$sformatRealFloatAlt1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:55.275221465 UTC

.section .text
.align 8
.globl GHC.Float.$w$sformatRealFloatAlt1_slow
.type GHC.Float.$w$sformatRealFloatAlt1_slow, @object
GHC.Float.$w$sformatRealFloatAlt1_slow:
_c3h4z:
	movss 24(%rbp),%xmm1
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $32,%rbp
	jmp GHC.Float.$w$sformatRealFloatAlt1_entry
	.size GHC.Float.$w$sformatRealFloatAlt1_slow, .-GHC.Float.$w$sformatRealFloatAlt1_slow


==================== Asm code ====================
2018-03-16 15:57:55.27606163 UTC

.section .text
.align 8
show_e'_s3bkk_entry:
_c3h5o:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3h5x
_c3h5y:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3h5l_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _c3h5l
_c3h5m:
	movq (%rbx),%rax
	jmp *(%rax)
_c3h5x:
	jmp *-16(%r13)
	.size show_e'_s3bkk_entry, .-show_e'_s3bkk_entry


==================== Asm code ====================
2018-03-16 15:57:55.276727206 UTC

.section .data.rel.ro
.align 8
.align 1
show_e'_s3bkk_info:
	.quad	show_e'_s3bkk_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:55.277443191 UTC

.section .text
.align 8
_c3h5l:
_c3h5l:
	leaq block_c3h5u_info(%rip),%rax
	movq %rax,(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rdi
	movq 7(%rbx),%rax
	leaq -1(%rax),%rsi
	xorl %r14d,%r14d
	jmp *GHC.Show.$wshowSignedInt_entry@gotpcrel(%rip)
	.size _c3h5l, .-_c3h5l


==================== Asm code ====================
2018-03-16 15:57:55.278113598 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3h5l_info:
	.quad	_c3h5l
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.278807196 UTC

.section .text
.align 8
_c3h5u:
_c3h5u:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3h5C
_c3h5B:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3h5C:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c3h5u, .-_c3h5u


==================== Asm code ====================
2018-03-16 15:57:55.279446337 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3h5u_info:
	.quad	_c3h5u
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.280179217 UTC

.section .text
.align 8
sat_s3bks_entry:
_c3h5N:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3h5O
_c3h5P:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rsi
	leaq lvl32_r2Ur6_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_c3h5O:
	jmp *-16(%r13)
	.size sat_s3bks_entry, .-sat_s3bks_entry


==================== Asm code ====================
2018-03-16 15:57:55.280793136 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bks_info:
	.quad	sat_s3bks_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:55.28147735 UTC

.section .text
.align 8
sat_s3bkv_entry:
_c3h60:
	movq 16(%rbx),%rsi
	leaq lvl33_r2Ur7_bytes(%rip),%r14
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
	.size sat_s3bkv_entry, .-sat_s3bkv_entry


==================== Asm code ====================
2018-03-16 15:57:55.282045994 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bkv_info:
	.quad	sat_s3bkv_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:55.282792352 UTC

.section .text
.align 8
sat_s3bkw_entry:
_c3h63:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3h64
_c3h65:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3h67
_c3h66:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	leaq sat_s3bkv_info(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rax,(%r12)
	leaq -16(%r12),%rsi
	movq %rbx,%r14
	addq $-16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_c3h67:
	movq $24,904(%r13)
_c3h64:
	jmp *-16(%r13)
	.size sat_s3bkw_entry, .-sat_s3bkw_entry


==================== Asm code ====================
2018-03-16 15:57:55.283513232 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bkw_info:
	.quad	sat_s3bkw_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:55.284211965 UTC

.section .text
.align 8
dec'_s3bkD_entry:
_c3h6h:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3h6i
_c3h6j:
	leaq block_c3h6e_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 16(%rbx),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3h6e
_c3h6f:
	movq (%rbx),%rax
	jmp *(%rax)
_c3h6i:
	jmp *-16(%r13)
	.size dec'_s3bkD_entry, .-dec'_s3bkD_entry


==================== Asm code ====================
2018-03-16 15:57:55.284827041 UTC

.section .data.rel.ro
.align 8
.align 1
dec'_s3bkD_info:
	.quad	dec'_s3bkD_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:55.285579295 UTC

.section .text
.align 8
_c3h6e:
_c3h6e:
	cmpq $1,7(%rbx)
	jg _c3h6q
_c3h6r:
	leaq GHC.Float.$fRealFracFloat2_closure+1(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3h6q:
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3h6e, .-_c3h6e


==================== Asm code ====================
2018-03-16 15:57:55.286175798 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3h6e_info:
	.quad	_c3h6e
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.286879041 UTC

.section .text
.align 8
sat_s3bkN_entry:
_c3h6I:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3h6P
_c3h6Q:
	leaq block_c3h6G_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 16(%rbx),%rbx
	addq $-8,%rbp
	jmp dec'_s3bkD_entry
_c3h6P:
	jmp *-16(%r13)
	.size sat_s3bkN_entry, .-sat_s3bkN_entry


==================== Asm code ====================
2018-03-16 15:57:55.287521076 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bkN_info:
	.quad	sat_s3bkN_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:55.288229224 UTC

.section .text
.align 8
_c3h6G:
_c3h6G:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3h6T
_c3h6S:
	movq 7(%rbx),%rax
	incq %rax
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3h6T:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3h6G, .-_c3h6G


==================== Asm code ====================
2018-03-16 15:57:55.288896945 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3h6G_info:
	.quad	_c3h6G
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.28975382 UTC

.section .text
.align 8
ds5_s3bkJ_entry:
_c3h6X:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3h6Y
_c3h6Z:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3h71
_c3h70:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	leaq sat_s3bkN_info(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rbx,(%r12)
	leaq block_c3h6U_info(%rip),%rbx
	movq %rbx,-24(%rbp)
	movq %rax,%rdi
	leaq -16(%r12),%rsi
	leaq base_r2UqK_closure+1(%rip),%r14
	addq $-24,%rbp
	jmp GHC.Float.$wroundTo_entry
_c3h71:
	movq $24,904(%r13)
_c3h6Y:
	jmp *-16(%r13)
	.size ds5_s3bkJ_entry, .-ds5_s3bkJ_entry


==================== Asm code ====================
2018-03-16 15:57:55.290483887 UTC

.section .data.rel.ro
.align 8
.align 1
ds5_s3bkJ_info:
	.quad	ds5_s3bkJ_entry
	.quad	2
	.quad	4294967314
	.quad	S3bQP_srt+1200


==================== Asm code ====================
2018-03-16 15:57:55.291232306 UTC

.section .text
.align 8
_c3h6U:
_c3h6U:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3h74
_c3h73:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3h74:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c3h6U, .-_c3h6U


==================== Asm code ====================
2018-03-16 15:57:55.291900543 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3h6U_info:
	.quad	_c3h6U
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.292629934 UTC

.section .text
.align 8
ds6_s3bkR_entry:
_c3h7c:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3h7g
_c3h7h:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3h79_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _c3h79
_c3h7a:
	movq (%rbx),%rax
	jmp *(%rax)
_c3h7g:
	jmp *-16(%r13)
	.size ds6_s3bkR_entry, .-ds6_s3bkR_entry


==================== Asm code ====================
2018-03-16 15:57:55.293337834 UTC

.section .data.rel.ro
.align 8
.align 1
ds6_s3bkR_info:
	.quad	ds6_s3bkR_entry
	.quad	1
	.quad	210453397520
	.quad	S3bQP_srt+1176


==================== Asm code ====================
2018-03-16 15:57:55.294027546 UTC

.section .text
.align 8
_c3h79:
_c3h79:
	leaq block_c3h7f_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c3h7f
_c3h7j:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3h79, .-_c3h79


==================== Asm code ====================
2018-03-16 15:57:55.294605943 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3h79_info:
	.quad	_c3h79
	.quad	0
	.quad	210453397534
	.quad	S3bQP_srt+1176


==================== Asm code ====================
2018-03-16 15:57:55.295350434 UTC

.section .text
.align 8
_c3h7f:
_c3h7f:
	movq 8(%rbp),%rax
	cmpq $0,7(%rbx)
	jle _c3h7t
_c3h7J:
	leaq block_c3h7I_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c3h7I
_c3h7K:
	movq (%rbx),%rax
	jmp *(%rax)
_c3h7t:
	leaq block_c3h7r_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rsi
	movq GHC.Show.intToDigit_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r14
	addq $8,%rbp
	jmp *GHC.Base.map_entry@gotpcrel(%rip)
	.size _c3h7f, .-_c3h7f


==================== Asm code ====================
2018-03-16 15:57:55.296047672 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3h7f_info:
	.quad	_c3h7f
	.quad	1
	.quad	210453397534
	.quad	S3bQP_srt+1176


==================== Asm code ====================
2018-03-16 15:57:55.296827883 UTC

.section .text
.align 8
_c3h7r:
_c3h7r:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _u3h8h
_c3h7D:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3h7G
_c3h7F:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq (,)_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u3h8h:
	addq $8,%rbp
	jmp _c3h86
_c3h7G:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3h7r, .-_c3h7r


==================== Asm code ====================
2018-03-16 15:57:55.297579984 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3h7r_info:
	.quad	_c3h7r
	.quad	0
	.quad	4294967326
	.quad	S3bQP_srt+1216


==================== Asm code ====================
2018-03-16 15:57:55.298259463 UTC

.section .text
.align 8
_c3h7I:
_c3h7I:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c3h7Q
_c3h7V:
	leaq block_c3h7T_info(%rip),%rax
	movq %rax,(%rbp)
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp *GHC.List.init1_entry@gotpcrel(%rip)
_c3h7Q:
	movq GHC.List.init2_closure@gotpcrel(%rip),%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3h7I, .-_c3h7I


==================== Asm code ====================
2018-03-16 15:57:55.298909056 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3h7I_info:
	.quad	_c3h7I
	.quad	0
	.quad	210453397534
	.quad	S3bQP_srt+1176


==================== Asm code ====================
2018-03-16 15:57:55.299527109 UTC

.section .text
.align 8
_c3h7T:
_c3h7T:
	leaq block_c3h7Z_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rsi
	movq GHC.Show.intToDigit_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r14
	jmp *GHC.Base.map_entry@gotpcrel(%rip)
	.size _c3h7T, .-_c3h7T


==================== Asm code ====================
2018-03-16 15:57:55.300126221 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3h7T_info:
	.quad	_c3h7T
	.quad	0
	.quad	141733920798
	.quad	S3bQP_srt+1176


==================== Asm code ====================
2018-03-16 15:57:55.300891231 UTC

.section .text
.align 8
_c3h7Z:
_c3h7Z:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _u3h8i
_c3h8a:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3h8d
_c3h8c:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq (,)_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u3h8i:
	addq $8,%rbp
	jmp _c3h86
_c3h8d:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3h7Z, .-_c3h7Z


==================== Asm code ====================
2018-03-16 15:57:55.301643086 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3h7Z_info:
	.quad	_c3h7Z
	.quad	0
	.quad	4294967326
	.quad	S3bQP_srt+1216


==================== Asm code ====================
2018-03-16 15:57:55.302274536 UTC

.section .text
.align 8
_c3h86:
_c3h86:
	leaq lvl18_r2UqR_closure(%rip),%rbx
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3h86, .-_c3h86


==================== Asm code ====================
2018-03-16 15:57:55.303022425 UTC

.section .text
.align 8
sat_s3bls_entry:
_c3h8E:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3h90
_c3h91:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3h8B_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c3h8B
_c3h8C:
	movq (%rbx),%rax
	jmp *(%rax)
_c3h90:
	jmp *-16(%r13)
	.size sat_s3bls_entry, .-sat_s3bls_entry


==================== Asm code ====================
2018-03-16 15:57:55.304479689 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bls_info:
	.quad	sat_s3bls_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:55.305284736 UTC

.section .text
.align 8
_c3h8B:
_c3h8B:
	leaq block_c3h8H_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c3h8H
_c3h8I:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3h8B, .-_c3h8B


==================== Asm code ====================
2018-03-16 15:57:55.305895991 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3h8B_info:
	.quad	_c3h8B
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.306635518 UTC

.section .text
.align 8
_c3h8H:
_c3h8H:
	leaq block_c3h8M_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rbx
	testb $7,%bl
	jne _c3h8M
_c3h8N:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3h8H, .-_c3h8H


==================== Asm code ====================
2018-03-16 15:57:55.307284945 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3h8H_info:
	.quad	_c3h8H
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.30793586 UTC

.section .text
.align 8
_c3h8M:
_c3h8M:
	movq 7(%rbx),%rax
	decq %rax
	movq 8(%rbp),%rbx
	addq %rax,%rbx
	leaq block_c3h8X_info(%rip),%rax
	movq %rax,8(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rdi
	movq %rbx,%rsi
	xorl %r14d,%r14d
	addq $8,%rbp
	jmp *GHC.Show.$wshowSignedInt_entry@gotpcrel(%rip)
	.size _c3h8M, .-_c3h8M


==================== Asm code ====================
2018-03-16 15:57:55.308517899 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3h8M_info:
	.quad	_c3h8M
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.309278837 UTC

.section .text
.align 8
_c3h8X:
_c3h8X:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3h97
_c3h96:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3h97:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c3h8X, .-_c3h8X


==================== Asm code ====================
2018-03-16 15:57:55.309879209 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3h8X_info:
	.quad	_c3h8X
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.310629972 UTC

.section .text
.align 8
sat_s3blu_entry:
_c3h9b:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c3h9d
_c3h9e:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3h8s_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _c3h8s
_c3h8t:
	movq (%rbx),%rax
	jmp *(%rax)
_c3h9d:
	jmp *-16(%r13)
	.size sat_s3blu_entry, .-sat_s3blu_entry


==================== Asm code ====================
2018-03-16 15:57:55.311299164 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3blu_info:
	.quad	sat_s3blu_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:57:55.312068635 UTC

.section .text
.align 8
_c3h8s:
_c3h8s:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c3h9h
_c3h9g:
	movq 15(%rbx),%rax
	leaq sat_s3bls_info(%rip),%rbx
	movq %rbx,-48(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	leaq lvl19_r2UqS_closure+1(%rip),%rbx
	movq %rbx,-8(%r12)
	leaq -48(%r12),%rbx
	movq %rbx,(%r12)
	leaq -14(%r12),%rsi
	movq %rax,%r14
	addq $24,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_c3h9h:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3h8s, .-_c3h8s


==================== Asm code ====================
2018-03-16 15:57:55.312770764 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3h8s_info:
	.quad	_c3h8s
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.314084305 UTC

.section .text
.align 8
sat_s3blG_entry:
_c3h9I:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3h9J
_c3h9K:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3h9G_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	jmp dec'_s3bkD_entry
_c3h9J:
	jmp *-16(%r13)
	.size sat_s3blG_entry, .-sat_s3blG_entry


==================== Asm code ====================
2018-03-16 15:57:55.314696333 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3blG_info:
	.quad	sat_s3blG_entry
	.quad	1
	.quad	1103806595088
	.quad	S3bQP_srt+1160


==================== Asm code ====================
2018-03-16 15:57:55.315382666 UTC

.section .text
.align 8
_c3h9G:
_c3h9G:
	movq 7(%rbx),%rax
	cmpq $0,%rax
	jle _c3h9R
_c3h9S:
	movq %rax,%r14
	addq $8,%rbp
	jmp $wxs1_r2Ura_entry
_c3h9R:
	leaq lvl34_r2Ur8_closure(%rip),%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3h9G, .-_c3h9G


==================== Asm code ====================
2018-03-16 15:57:55.315959216 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3h9G_info:
	.quad	_c3h9G
	.quad	0
	.quad	1103806595102
	.quad	S3bQP_srt+1160


==================== Asm code ====================
2018-03-16 15:57:55.316559732 UTC

.section .text
.align 8
sat_s3blO_entry:
_c3hac:
	movq 16(%rbx),%rsi
	movq GHC.Show.intToDigit_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r14
	jmp *GHC.Base.map_entry@gotpcrel(%rip)
	.size sat_s3blO_entry, .-sat_s3blO_entry


==================== Asm code ====================
2018-03-16 15:57:55.317142406 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3blO_info:
	.quad	sat_s3blO_entry
	.quad	1
	.quad	4294967312
	.quad	S3bQP_srt+1176


==================== Asm code ====================
2018-03-16 15:57:55.317867569 UTC

.section .text
.align 8
n1_s3blR_entry:
_c3hav:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3haw
_c3hax:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rsi
	movq GHC.Show.intToDigit_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r14
	addq $-16,%rbp
	jmp *GHC.Base.map_entry@gotpcrel(%rip)
_c3haw:
	jmp *-16(%r13)
	.size n1_s3blR_entry, .-n1_s3blR_entry


==================== Asm code ====================
2018-03-16 15:57:55.318507294 UTC

.section .data.rel.ro
.align 8
.align 1
n1_s3blR_info:
	.quad	n1_s3blR_entry
	.quad	1
	.quad	4294967312
	.quad	S3bQP_srt+1176


==================== Asm code ====================
2018-03-16 15:57:55.319204014 UTC

.section .text
.align 8
sat_s3blX_entry:
_c3haM:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3haN
_c3haO:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	leaq -1(%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp $wxs4_s3blT_entry
_c3haN:
	jmp *-16(%r13)
	.size sat_s3blX_entry, .-sat_s3blX_entry


==================== Asm code ====================
2018-03-16 15:57:55.319821169 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3blX_info:
	.quad	sat_s3blX_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 15:57:55.320652984 UTC

.section .text
.align 8
$wxs4_s3blT_entry:
_c3haS:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c3haW
_c3haV:
	cmpq $1,%r14
	je _c3haR
_c3haQ:
	leaq sat_s3blX_info(%rip),%rax
	movq %rax,-48(%r12)
	movq %rbx,-32(%r12)
	movq %r14,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq lvl20_r2UqT_closure+1(%rip),%rax
	movq %rax,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c3haW:
	movq $56,904(%r13)
	jmp *-8(%r13)
_c3haR:
	movq 7(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size $wxs4_s3blT_entry, .-$wxs4_s3blT_entry


==================== Asm code ====================
2018-03-16 15:57:55.321415806 UTC

.section .data.rel.ro
.align 8
.align 1
$wxs4_s3blT_info:
	.quad	$wxs4_s3blT_entry
	.quad	1
	.quad	9
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:57:55.322269404 UTC

.section .text
.align 8
sat_s3blY_entry:
_c3haY:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3haZ
_c3hb0:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c3hb2
_c3hb1:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	negq %rbx
	cmpq $0,%rbx
	jle _c3hb4
_c3hb5:
	leaq n1_s3blR_info(%rip),%rcx
	movq %rcx,-56(%r12)
	movq %rax,-40(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-32(%r12)
	leaq lvl20_r2UqT_closure+1(%rip),%rax
	movq %rax,-24(%r12)
	leaq -56(%r12),%rax
	movq %rax,-16(%r12)
	leaq $wxs4_s3blT_info(%rip),%rax
	movq %rax,-8(%r12)
	leaq -30(%r12),%rax
	movq %rax,(%r12)
	movq %rbx,%r14
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	jmp $wxs4_s3blT_entry
_c3hb4:
	addq $-64,%r12
	movq %rax,%rsi
	movq GHC.Show.intToDigit_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r14
	addq $-16,%rbp
	jmp *GHC.Base.map_entry@gotpcrel(%rip)
_c3hb2:
	movq $64,904(%r13)
_c3haZ:
	jmp *-16(%r13)
	.size sat_s3blY_entry, .-sat_s3blY_entry


==================== Asm code ====================
2018-03-16 15:57:55.323097517 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3blY_info:
	.quad	sat_s3blY_entry
	.quad	4294967297
	.quad	4294967315
	.quad	S3bQP_srt+1176


==================== Asm code ====================
2018-03-16 15:57:55.323798422 UTC

.section .text
.align 8
sat_s3bm9_entry:
_c3hbx:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3hby
_c3hbz:
	leaq block_c3hbu_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 16(%rbx),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3hbu
_c3hbv:
	movq (%rbx),%rax
	jmp *(%rax)
_c3hby:
	jmp *-16(%r13)
	.size sat_s3bm9_entry, .-sat_s3bm9_entry


==================== Asm code ====================
2018-03-16 15:57:55.324424092 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bm9_info:
	.quad	sat_s3bm9_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:55.325098351 UTC

.section .text
.align 8
_c3hbu:
_c3hbu:
	cmpq $0,7(%rbx)
	jg _c3hbG
_c3hbH:
	leaq GHC.Float.minExpt_closure+1(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3hbG:
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3hbu, .-_c3hbu


==================== Asm code ====================
2018-03-16 15:57:55.325950627 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hbu_info:
	.quad	_c3hbu
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.326660337 UTC

.section .text
.align 8
sat_s3bmi_entry:
_c3hbY:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3hbZ
_c3hc0:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	leaq -1(%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp $wxs4_s3bme_entry
_c3hbZ:
	jmp *-16(%r13)
	.size sat_s3bmi_entry, .-sat_s3bmi_entry


==================== Asm code ====================
2018-03-16 15:57:55.327271863 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bmi_info:
	.quad	sat_s3bmi_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 15:57:55.328045363 UTC

.section .text
.align 8
$wxs4_s3bme_entry:
_c3hc4:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c3hc8
_c3hc7:
	cmpq $1,%r14
	je _c3hc3
_c3hc2:
	leaq sat_s3bmi_info(%rip),%rax
	movq %rax,-48(%r12)
	movq %rbx,-32(%r12)
	movq %r14,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq GHC.Float.minExpt_closure+1(%rip),%rax
	movq %rax,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c3hc8:
	movq $56,904(%r13)
	jmp *-8(%r13)
_c3hc3:
	movq 7(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size $wxs4_s3bme_entry, .-$wxs4_s3bme_entry


==================== Asm code ====================
2018-03-16 15:57:55.328783341 UTC

.section .data.rel.ro
.align 8
.align 1
$wxs4_s3bme_info:
	.quad	$wxs4_s3bme_entry
	.quad	1
	.quad	9
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:57:55.329541388 UTC

.section .text
.align 8
sat_s3bmm_entry:
_c3hcl:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3hcm
_c3hcn:
	leaq block_c3hci_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 16(%rbx),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3hci
_c3hcj:
	movq (%rbx),%rax
	jmp *(%rax)
_c3hcm:
	jmp *-16(%r13)
	.size sat_s3bmm_entry, .-sat_s3bmm_entry


==================== Asm code ====================
2018-03-16 15:57:55.330142423 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bmm_info:
	.quad	sat_s3bmm_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:55.330825674 UTC

.section .text
.align 8
_c3hci:
_c3hci:
	cmpq $0,7(%rbx)
	jg _c3hcu
_c3hcv:
	leaq GHC.Float.minExpt_closure+1(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3hcu:
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3hci, .-_c3hci


==================== Asm code ====================
2018-03-16 15:57:55.331393389 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hci_info:
	.quad	_c3hci
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.332314105 UTC

.section .text
.align 8
ds4_s3bm3_entry:
_c3hcx:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3hcy
_c3hcz:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c3hcB
_c3hcA:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	negq %rbx
	cmpq $0,%rbx
	jle _c3hcE
_c3hcI:
	movq :_con_info@gotpcrel(%rip),%rdx
	movq %rdx,-32(%r12)
	leaq GHC.Float.minExpt_closure+1(%rip),%rdx
	movq %rdx,-24(%r12)
	movq %rax,-16(%r12)
	leaq $wxs4_s3bme_info(%rip),%rax
	movq %rax,-8(%r12)
	leaq -30(%r12),%rax
	movq %rax,(%r12)
	leaq block_c3hca_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %rbx,%r14
	leaq -7(%r12),%rbx
	movq %rcx,-24(%rbp)
	addq $-32,%rbp
	jmp $wxs4_s3bme_entry
_c3hcE:
	leaq sat_s3bm9_info(%rip),%rbx
	movq %rbx,-32(%r12)
	movq %rcx,-16(%r12)
	leaq -32(%r12),%rbx
	addq $-16,%r12
	leaq block_c3hcC_info(%rip),%rcx
	movq %rcx,-24(%rbp)
	movq %rax,%rdi
	movq %rbx,%rsi
	leaq base_r2UqK_closure+1(%rip),%r14
	addq $-24,%rbp
	jmp GHC.Float.$wroundTo_entry
_c3hcB:
	movq $40,904(%r13)
_c3hcy:
	jmp *-16(%r13)
	.size ds4_s3bm3_entry, .-ds4_s3bm3_entry


==================== Asm code ====================
2018-03-16 15:57:55.333155148 UTC

.section .data.rel.ro
.align 8
.align 1
ds4_s3bm3_info:
	.quad	ds4_s3bm3_entry
	.quad	4294967298
	.quad	12884901903
	.quad	S3bQP_srt+1192


==================== Asm code ====================
2018-03-16 15:57:55.333816392 UTC

.section .text
.align 8
_c3hcC:
_c3hcC:
	movq %r14,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp $j_r2Urc_entry
	.size _c3hcC, .-_c3hcC


==================== Asm code ====================
2018-03-16 15:57:55.334348581 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hcC_info:
	.quad	_c3hcC
	.quad	0
	.quad	4294967326
	.quad	S3bQP_srt+1192


==================== Asm code ====================
2018-03-16 15:57:55.335599406 UTC

.section .text
.align 8
_c3hca:
_c3hca:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3hcL
_c3hcK:
	leaq sat_s3bmm_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq block_c3hcH_info(%rip),%rax
	movq %rax,8(%rbp)
	movq %rbx,%rdi
	leaq -16(%r12),%rsi
	leaq base_r2UqK_closure+1(%rip),%r14
	addq $8,%rbp
	jmp GHC.Float.$wroundTo_entry
_c3hcL:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3hca, .-_c3hca


==================== Asm code ====================
2018-03-16 15:57:55.336333578 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hca_info:
	.quad	_c3hca
	.quad	1
	.quad	12884901918
	.quad	S3bQP_srt+1192


==================== Asm code ====================
2018-03-16 15:57:55.336978392 UTC

.section .text
.align 8
_c3hcH:
_c3hcH:
	movq %r14,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp $j_r2Urc_entry
	.size _c3hcH, .-_c3hcH


==================== Asm code ====================
2018-03-16 15:57:55.33761255 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hcH_info:
	.quad	_c3hcH
	.quad	0
	.quad	4294967326
	.quad	S3bQP_srt+1192


==================== Asm code ====================
2018-03-16 15:57:55.338385969 UTC

.section .text
.align 8
sat_s3bmC_entry:
_c3hcV:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3hcW
_c3hcX:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3hcS_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c3hcS
_c3hcT:
	movq (%rbx),%rax
	jmp *(%rax)
_c3hcW:
	jmp *-16(%r13)
	.size sat_s3bmC_entry, .-sat_s3bmC_entry


==================== Asm code ====================
2018-03-16 15:57:55.339043903 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bmC_info:
	.quad	sat_s3bmC_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:55.339743036 UTC

.section .text
.align 8
_c3hcS:
_c3hcS:
	leaq block_c3hd0_info(%rip),%rax
	movq %rax,(%rbp)
	movq 15(%rbx),%rbx
	testb $7,%bl
	jne _c3hd0
_c3hd2:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3hcS, .-_c3hcS


==================== Asm code ====================
2018-03-16 15:57:55.340304793 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hcS_info:
	.quad	_c3hcS
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.341124097 UTC

.section .text
.align 8
_c3hd0:
_c3hd0:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c3hd9
_c3hdo:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3hdr
_c3hdq:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq lvl14_r2UqN_closure+1(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -14(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3hdr:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c3hd9:
	movq 8(%rbp),%rax
	leaq block_c3hd6_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c3hd6
_c3hda:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3hd0, .-_c3hd0


==================== Asm code ====================
2018-03-16 15:57:55.341848479 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hd0_info:
	.quad	_c3hd0
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.342640546 UTC

.section .text
.align 8
_c3hd6:
_c3hd6:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c3hdg
_c3hdk:
	leaq lvl37_r2Urd_closure+2(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3hdg:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3hd6, .-_c3hd6


==================== Asm code ====================
2018-03-16 15:57:55.343260607 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hd6_info:
	.quad	_c3hd6
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.344016015 UTC

.section .text
.align 8
sat_s3bmH_entry:
_c3hdF:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3hdG
_c3hdH:
	leaq block_c3hdC_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 24(%rbx),%rax
	movq 32(%rbx),%rcx
	movq 16(%rbx),%rbx
	movq %rax,-16(%rbp)
	movq %rcx,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c3hdC
_c3hdD:
	movq (%rbx),%rax
	jmp *(%rax)
_c3hdG:
	jmp *-16(%r13)
	.size sat_s3bmH_entry, .-sat_s3bmH_entry


==================== Asm code ====================
2018-03-16 15:57:55.344650915 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bmH_info:
	.quad	sat_s3bmH_entry
	.quad	4294967298
	.quad	15


==================== Asm code ====================
2018-03-16 15:57:55.345453547 UTC

.section .text
.align 8
_c3hdC:
_c3hdC:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3hdM
_c3hdL:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jg _c3hdV
_c3hdW:
	addq $-16,%r12
	movq 8(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c3hdV:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	addq 16(%rbp),%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3hdM:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3hdC, .-_c3hdC


==================== Asm code ====================
2018-03-16 15:57:55.34613065 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hdC_info:
	.quad	_c3hdC
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.346835352 UTC

.section .text
.align 8
sat_s3bmZ_entry:
_c3hey:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3hez
_c3heA:
	leaq block_c3her_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3her
_c3hes:
	movq (%rbx),%rax
	jmp *(%rax)
_c3hez:
	jmp *-16(%r13)
	.size sat_s3bmZ_entry, .-sat_s3bmZ_entry


==================== Asm code ====================
2018-03-16 15:57:55.347438006 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bmZ_info:
	.quad	sat_s3bmZ_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:55.348259015 UTC

.section .text
.align 8
_c3her:
_c3her:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c3hev
_c3hew:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3heV
_c3heU:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq lvl14_r2UqN_closure+1(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -14(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3heV:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c3hev:
	movq 8(%rbp),%rax
	leaq block_c3heD_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c3heD
_c3heF:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3her, .-_c3her


==================== Asm code ====================
2018-03-16 15:57:55.348950921 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3her_info:
	.quad	_c3her
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.349700546 UTC

.section .text
.align 8
_c3heD:
_c3heD:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c3heL
_c3heP:
	leaq lvl37_r2Urd_closure+2(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3heL:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3heD, .-_c3heD


==================== Asm code ====================
2018-03-16 15:57:55.350311453 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3heD_info:
	.quad	_c3heD
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.351027494 UTC

.section .text
.align 8
sat_s3bn6_entry:
_c3hfc:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3hfd
_c3hfe:
	leaq block_c3hf5_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3hf5
_c3hf6:
	movq (%rbx),%rax
	jmp *(%rax)
_c3hfd:
	jmp *-16(%r13)
	.size sat_s3bn6_entry, .-sat_s3bn6_entry


==================== Asm code ====================
2018-03-16 15:57:55.351652879 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bn6_info:
	.quad	sat_s3bn6_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:55.352487888 UTC

.section .text
.align 8
_c3hf5:
_c3hf5:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c3hf9
_c3hfa:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3hfz
_c3hfy:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq lvl14_r2UqN_closure+1(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -14(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3hfz:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c3hf9:
	movq 8(%rbp),%rax
	leaq block_c3hfh_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c3hfh
_c3hfj:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3hf5, .-_c3hf5


==================== Asm code ====================
2018-03-16 15:57:55.353165473 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hf5_info:
	.quad	_c3hf5
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.353940413 UTC

.section .text
.align 8
_c3hfh:
_c3hfh:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c3hfp
_c3hft:
	leaq lvl37_r2Urd_closure+2(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3hfp:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3hfh, .-_c3hfh


==================== Asm code ====================
2018-03-16 15:57:55.354611249 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hfh_info:
	.quad	_c3hfh
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.355324862 UTC

.section .text
.align 8
sat_s3bnb_entry:
_c3hfO:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3hfP
_c3hfQ:
	leaq block_c3hfI_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 24(%rbx),%rsi
	movq GHC.Show.intToDigit_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r14
	movq 16(%rbx),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.Base.map_entry@gotpcrel(%rip)
_c3hfP:
	jmp *-16(%r13)
	.size sat_s3bnb_entry, .-sat_s3bnb_entry


==================== Asm code ====================
2018-03-16 15:57:55.355963102 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bnb_info:
	.quad	sat_s3bnb_entry
	.quad	2
	.quad	4294967314
	.quad	S3bQP_srt+1176


==================== Asm code ====================
2018-03-16 15:57:55.356799739 UTC

.section .text
.align 8
_c3hfI:
_c3hfI:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c3hfL
_c3hfM:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3hgb
_c3hga:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq lvl14_r2UqN_closure+1(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -14(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3hgb:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c3hfL:
	movq 8(%rbp),%rax
	leaq block_c3hfT_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c3hfT
_c3hfV:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3hfI, .-_c3hfI


==================== Asm code ====================
2018-03-16 15:57:55.357585318 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hfI_info:
	.quad	_c3hfI
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.358278662 UTC

.section .text
.align 8
_c3hfT:
_c3hfT:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c3hg1
_c3hg5:
	leaq lvl37_r2Urd_closure+2(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3hg1:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3hfT, .-_c3hfT


==================== Asm code ====================
2018-03-16 15:57:55.35889511 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hfT_info:
	.quad	_c3hfT
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.359560744 UTC

.section .text
.align 8
$wdoFmt_s3bk7_entry:
_c3hgj:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c3hgk
_u3hiG:
	movq %rbx,-32(%rbp)
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-32,%rbp
	jmp _c3h4P
_c3hgk:
	jmp *-8(%r13)
	.size $wdoFmt_s3bk7_entry, .-$wdoFmt_s3bk7_entry


==================== Asm code ====================
2018-03-16 15:57:55.360168345 UTC

.section .data.rel.ro
.align 8
.align 1
$wdoFmt_s3bk7_info:
	.quad	$wdoFmt_s3bk7_entry
	.quad	2
	.quad	35008278429707
	.quad	12884901911
	.quad	S3bQP_srt+1144


==================== Asm code ====================
2018-03-16 15:57:55.360844343 UTC

.section .text
.align 8
_c3h4P:
_c3h4P:
	leaq block_c3h4S_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 8(%rbp),%rbx
	movq (%rbp),%rax
	movq 13(%rax),%rcx
	movq %rcx,-8(%rbp)
	movq 5(%rax),%rax
	movq %rax,8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3h4S
_c3h4T:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3h4P, .-_c3h4P


==================== Asm code ====================
2018-03-16 15:57:55.361828913 UTC

.section .text
.align 8
_c3h4S:
_c3h4S:
	andl $7,%ebx
	cmpq $3,%rbx
	jb _u3hiF
_c3hgh:
	leaq block_c3hif_info(%rip),%rax
	movq %rax,8(%rbp)
	movq 40(%rbp),%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c3hif
_c3hih:
	movq (%rbx),%rax
	jmp *(%rax)
_u3hiF:
	movq 24(%rbp),%rax
	cmpq $2,%rbx
	jb _c3hgf
_c3hgg:
	leaq block_c3h9V_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c3h9V
_c3h9W:
	movq (%rbx),%rax
	jmp *(%rax)
_c3hgf:
	leaq block_c3h4X_info(%rip),%rbx
	movq %rbx,24(%rbp)
	movq %rax,%rbx
	addq $24,%rbp
	testb $7,%bl
	jne _c3h4X
_c3h4Y:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3h4S, .-_c3h4S


==================== Asm code ====================
2018-03-16 15:57:55.362598745 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3h4S_info:
	.quad	_c3h4S
	.quad	5
	.quad	35008278429726
	.quad	S3bQP_srt+1144


==================== Asm code ====================
2018-03-16 15:57:55.363477111 UTC

.section .text
.align 8
_c3h4X:
_c3h4X:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c3hgp
_c3hh4:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3hh7
_c3hh6:
	movq 6(%rbx),%rbx
	leaq dec'_s3bkD_info(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rbx,(%r12)
	leaq block_c3h9j_info(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,%rbx
	leaq -16(%r12),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c3h9j
_c3h9k:
	movq (%rbx),%rax
	jmp *(%rax)
_c3hh7:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c3hgp:
	leaq block_c3h52_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq GHC.Show.intToDigit_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r14
	addq $8,%rbp
	jmp *GHC.Base.map_entry@gotpcrel(%rip)
	.size _c3h4X, .-_c3h4X


==================== Asm code ====================
2018-03-16 15:57:55.364268044 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3h4X_info:
	.quad	_c3h4X
	.quad	2
	.quad	8680128905246
	.quad	S3bQP_srt+1160


==================== Asm code ====================
2018-03-16 15:57:55.364999319 UTC

.section .text
.align 8
_c3h52:
_c3h52:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c3hgt
_c3hgv:
	leaq block_c3h57_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c3h57
_c3h58:
	movq (%rbx),%rax
	jmp *(%rax)
_c3hgt:
	leaq lvl13_r2UqM_closure(%rip),%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3h52, .-_c3h52


==================== Asm code ====================
2018-03-16 15:57:55.365647082 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3h52_info:
	.quad	_c3h52
	.quad	1
	.quad	12884901918
	.quad	S3bQP_srt+1232


==================== Asm code ====================
2018-03-16 15:57:55.366966378 UTC

.section .text
.align 8
_c3h57:
_c3h57:
	cmpq $48,7(%rbx)
	je _c3hgS
_u3hiI:
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp _c3h5f
_c3hgS:
	leaq block_c3hgR_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq 8(%rbp),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c3hgR
_c3hgT:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3h57, .-_c3h57


==================== Asm code ====================
2018-03-16 15:57:55.367677619 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3h57_info:
	.quad	_c3h57
	.quad	2
	.quad	4294967326
	.quad	S3bQP_srt+1240


==================== Asm code ====================
2018-03-16 15:57:55.368412137 UTC

.section .text
.align 8
_c3hgR:
_c3hgR:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c3hgZ
	jmp _c3h5f
_c3hgZ:
	leaq lvl16_r2UqP_closure(%rip),%rbx
	addq $32,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3hgR, .-_c3hgR


==================== Asm code ====================
2018-03-16 15:57:55.368991379 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hgR_info:
	.quad	_c3hgR
	.quad	3
	.quad	4294967326
	.quad	S3bQP_srt+1240


==================== Asm code ====================
2018-03-16 15:57:55.369805371 UTC

.section .text
.align 8
_c3h5f:
_c3h5f:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3hgz
_c3hgy:
	leaq show_e'_s3bkk_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 24(%rbp),%rax
	movq %rax,(%r12)
	leaq block_c3h5E_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%rbx
	leaq -16(%r12),%rax
	movq %rax,24(%rbp)
	testb $7,%bl
	jne _c3h5E
_c3h5F:
	movq (%rbx),%rax
	jmp *(%rax)
_c3hgz:
	movq $24,904(%r13)
	leaq block_c3h5f_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c3h5f, .-_c3h5f


==================== Asm code ====================
2018-03-16 15:57:55.370482726 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3h5f_info:
	.quad	_c3h5f
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.371352826 UTC

.section .text
.align 8
_c3h5E:
_c3h5E:
	movq 24(%rbp),%rax
	movq 8(%rbp),%rcx
	movq %rbx,%rdx
	andl $7,%edx
	cmpq $1,%rdx
	je _c3hgC
_c3hgI:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _c3hgL
_c3hgK:
	leaq sat_s3bkw_info(%rip),%rdx
	movq %rdx,-72(%r12)
	movq %rax,-56(%r12)
	movq %rbx,-48(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-40(%r12)
	leaq lvl14_r2UqN_closure+1(%rip),%rax
	movq %rax,-32(%r12)
	leaq -72(%r12),%rax
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rcx,-8(%r12)
	leaq -38(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3hgL:
	movq $80,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c3hgF:
	movq $48,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c3hgC:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c3hgF
_c3hgE:
	leaq sat_s3bks_info(%rip),%rbx
	movq %rbx,-40(%r12)
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rcx,-8(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3h5E, .-_c3h5E


==================== Asm code ====================
2018-03-16 15:57:55.372206531 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3h5E_info:
	.quad	_c3h5E
	.quad	131
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.372962244 UTC

.section .text
.align 8
_c3h9j:
_c3h9j:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c3h6w
_c3hhj:
	leaq block_c3h9p_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c3h9p
_c3h9q:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3h9j, .-_c3h9j


==================== Asm code ====================
2018-03-16 15:57:55.373605407 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3h9j_info:
	.quad	_c3h9j
	.quad	3
	.quad	2083059138590
	.quad	S3bQP_srt+1160


==================== Asm code ====================
2018-03-16 15:57:55.374318603 UTC

.section .text
.align 8
_c3h9p:
_c3h9p:
	cmpq $0,7(%rbx)
	je _c3hhn
_u3hiH:
	addq $8,%rbp
	jmp _c3h6w
_c3hhn:
	movq 8(%rbp),%rax
	leaq block_c3h9x_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c3h9x
_c3h9y:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3h9p, .-_c3h9p


==================== Asm code ====================
2018-03-16 15:57:55.374971129 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3h9p_info:
	.quad	_c3h9p
	.quad	4
	.quad	2083059138590
	.quad	S3bQP_srt+1160


==================== Asm code ====================
2018-03-16 15:57:55.375790518 UTC

.section .text
.align 8
_c3h9x:
_c3h9x:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c3hhr
	jmp _c3h6w
_c3hhu:
	movq $72,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c3hhr:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c3hhu
_c3hht:
	leaq sat_s3blG_info(%rip),%rax
	movq %rax,-64(%r12)
	movq 8(%rbp),%rax
	movq %rax,-48(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-40(%r12)
	leaq lvl14_r2UqN_closure+1(%rip),%rax
	movq %rax,-32(%r12)
	leaq -64(%r12),%rax
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq lvl20_r2UqT_closure+1(%rip),%rax
	movq %rax,-8(%r12)
	leaq -38(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3h9x, .-_c3h9x


==================== Asm code ====================
2018-03-16 15:57:55.376523189 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3h9x_info:
	.quad	_c3h9x
	.quad	3
	.quad	2083059138590
	.quad	S3bQP_srt+1160


==================== Asm code ====================
2018-03-16 15:57:55.377418898 UTC

.section .text
.align 8
_c3h6w:
_c3h6w:
	addq $168,%r12
	cmpq 856(%r13),%r12
	ja _c3hhd
_c3hhc:
	leaq ds5_s3bkJ_info(%rip),%rax
	movq %rax,-160(%r12)
	movq 16(%rbp),%rax
	movq %rax,-144(%r12)
	movq 8(%rbp),%rax
	movq %rax,-136(%r12)
	leaq ds6_s3bkR_info(%rip),%rax
	movq %rax,-128(%r12)
	leaq -160(%r12),%rax
	movq %rax,-112(%r12)
	leaq sat_s3blu_info(%rip),%rbx
	movq %rbx,-104(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-88(%r12)
	movq %rax,-80(%r12)
	leaq -128(%r12),%rax
	movq %rax,-72(%r12)
	movq :_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-64(%r12)
	leaq lvl14_r2UqN_closure+1(%rip),%rbx
	movq %rbx,-56(%r12)
	leaq -104(%r12),%rbx
	movq %rbx,-48(%r12)
	movq stg_sel_0_upd_info@gotpcrel(%rip),%rbx
	movq %rbx,-40(%r12)
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -62(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3hhd:
	movq $168,904(%r13)
	leaq block_c3h6w_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c3h6w, .-_c3h6w


==================== Asm code ====================
2018-03-16 15:57:55.378303379 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3h6w_info:
	.quad	_c3h6w
	.quad	3
	.quad	244813135902
	.quad	S3bQP_srt+1176


==================== Asm code ====================
2018-03-16 15:57:55.379090259 UTC

.section .text
.align 8
_c3h9V:
_c3h9V:
	movq 40(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c3hhC
_c3hhK:
	leaq block_c3hb8_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq 6(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,40(%rbp)
	testb $7,%bl
	jne _c3hb8
_c3hb9:
	movq (%rbx),%rax
	jmp *(%rax)
_c3hhC:
	leaq block_c3ha0_info(%rip),%rcx
	movq %rcx,24(%rbp)
	movq %rax,%rbx
	addq $24,%rbp
	testb $7,%bl
	jne _c3ha0
_c3ha1:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3h9V, .-_c3h9V


==================== Asm code ====================
2018-03-16 15:57:55.379780587 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3h9V_info:
	.quad	_c3h9V
	.quad	389
	.quad	906238099486
	.quad	S3bQP_srt+1144


==================== Asm code ====================
2018-03-16 15:57:55.380626557 UTC

.section .text
.align 8
_c3ha0:
_c3ha0:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c3hhF
_c3hhE:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	testq %rbx,%rbx
	jg _c3hhH
_c3hhI:
	leaq sat_s3blY_info(%rip),%rcx
	movq %rcx,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rsi
	leaq lvl36_r2Urb_bytes(%rip),%r14
	addq $24,%rbp
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_c3hhH:
	leaq sat_s3blO_info(%rip),%rcx
	movq %rcx,-24(%r12)
	movq %rax,-8(%r12)
	leaq -24(%r12),%rax
	addq $-8,%r12
	movq %rax,%rdi
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rsi
	movq %rbx,%r14
	addq $24,%rbp
	jmp $wf_r2UqX_entry
_c3hhF:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3ha0, .-_c3ha0


==================== Asm code ====================
2018-03-16 15:57:55.381772142 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3ha0_info:
	.quad	_c3ha0
	.quad	130
	.quad	38654705694
	.quad	S3bQP_srt+1152


==================== Asm code ====================
2018-03-16 15:57:55.38279219 UTC

.section .text
.align 8
_c3hb8:
_c3hb8:
	addq $120,%r12
	cmpq 856(%r13),%r12
	ja _c3hhN
_c3hhM:
	movq 32(%rbp),%rax
	movq 40(%rbp),%rcx
	movq 7(%rbx),%rdx
	testq %rdx,%rdx
	jl _c3hhR
_c3hhS:
	leaq sat_s3bmH_info(%rip),%rsi
	movq %rsi,-112(%r12)
	movq %rcx,-96(%r12)
	movq %rbx,-88(%r12)
	movq %rdx,-80(%r12)
	leaq -112(%r12),%rbx
	addq $-80,%r12
	leaq block_c3hdY_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq %rax,%rdi
	movq %rbx,%rsi
	leaq base_r2UqK_closure+1(%rip),%r14
	movq %rdx,40(%rbp)
	jmp GHC.Float.$wroundTo_entry
_c3hhR:
	leaq ds4_s3bm3_info(%rip),%rsi
	movq %rsi,-112(%r12)
	movq %rax,-96(%r12)
	movq %rcx,-88(%r12)
	movq %rdx,-80(%r12)
	leaq sat_s3bmC_info(%rip),%rax
	movq %rax,-72(%r12)
	movq 8(%rbp),%rax
	movq %rax,-56(%r12)
	leaq -112(%r12),%rax
	movq %rax,-48(%r12)
	movq stg_sel_0_upd_info@gotpcrel(%rip),%rcx
	movq %rcx,-40(%r12)
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -72(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3hhN:
	movq $120,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3hb8, .-_c3hb8


==================== Asm code ====================
2018-03-16 15:57:55.383650523 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hb8_info:
	.quad	_c3hb8
	.quad	389
	.quad	897648164894
	.quad	S3bQP_srt+1144


==================== Asm code ====================
2018-03-16 15:57:55.384342646 UTC

.section .text
.align 8
_c3hdY:
_c3hdY:
	leaq block_c3he0_info(%rip),%rax
	movq %rax,(%rbp)
	movq %r14,32(%rbp)
	testb $7,%bl
	jne _c3he0
_c3he1:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3hdY, .-_c3hdY


==================== Asm code ====================
2018-03-16 15:57:55.384919356 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hdY_info:
	.quad	_c3hdY
	.quad	1925
	.quad	73014444062
	.quad	S3bQP_srt+1144


==================== Asm code ====================
2018-03-16 15:57:55.385792436 UTC

.section .text
.align 8
_c3he0:
_c3he0:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c3hhW
_c3hhV:
	movq 32(%rbp),%rax
	addq $7,%rbx
	movq 40(%rbp),%rcx
	addq (%rbx),%rcx
	testq %rcx,%rcx
	jg _c3hhY
_c3hic:
	leaq sat_s3bnb_info(%rip),%rbx
	movq %rbx,-24(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -24(%r12),%rsi
	leaq lvl23_r2UqW_closure(%rip),%r14
	addq $48,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_c3hhY:
	addq $-32,%r12
	leaq block_c3heb_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rsi
	movq GHC.Show.intToDigit_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r14
	movq %rcx,40(%rbp)
	jmp *GHC.Base.map_entry@gotpcrel(%rip)
_c3hhW:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3he0, .-_c3he0


==================== Asm code ====================
2018-03-16 15:57:55.386517944 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3he0_info:
	.quad	_c3he0
	.quad	1413
	.quad	73014444062
	.quad	S3bQP_srt+1144


==================== Asm code ====================
2018-03-16 15:57:55.387218069 UTC

.section .text
.align 8
_c3heb:
_c3heb:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3hi1
_c3hi0:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq 40(%rbp),%rax
	movq %rax,(%r12)
	leaq block_c3heg_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rsi
	leaq -7(%r12),%r14
	jmp *GHC.List.$wsplitAt'_entry@gotpcrel(%rip)
_c3hi1:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3heb, .-_c3heb


==================== Asm code ====================
2018-03-16 15:57:55.387913176 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3heb_info:
	.quad	_c3heb
	.quad	1925
	.quad	4294967326
	.quad	S3bQP_srt+1144


==================== Asm code ====================
2018-03-16 15:57:55.388605821 UTC

.section .text
.align 8
_c3heg:
_c3heg:
	leaq block_c3hei_info(%rip),%rax
	movq %rax,(%rbp)
	movq %r14,40(%rbp)
	testb $7,%bl
	jne _c3hei
_c3hej:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3heg, .-_c3heg


==================== Asm code ====================
2018-03-16 15:57:55.389194809 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3heg_info:
	.quad	_c3heg
	.quad	1925
	.quad	4294967326
	.quad	S3bQP_srt+1144


==================== Asm code ====================
2018-03-16 15:57:55.390430503 UTC

.section .text
.align 8
_c3hei:
_c3hei:
	movq 8(%rbp),%rax
	movq 40(%rbp),%rcx
	movq %rbx,%rdx
	andl $7,%edx
	cmpq $1,%rdx
	je _c3hi4
_c3hi8:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c3hib
_c3hia:
	leaq sat_s3bn6_info(%rip),%rdx
	movq %rdx,-24(%r12)
	movq %rax,-8(%r12)
	movq %rcx,(%r12)
	leaq -24(%r12),%rsi
	movq %rbx,%r14
	addq $48,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_c3hib:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c3hi4:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c3hib
_c3hi6:
	leaq sat_s3bmZ_info(%rip),%rbx
	movq %rbx,-24(%r12)
	movq %rax,-8(%r12)
	movq %rcx,(%r12)
	leaq -24(%r12),%rsi
	leaq lvl23_r2UqW_closure(%rip),%r14
	addq $48,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
	.size _c3hei, .-_c3hei


==================== Asm code ====================
2018-03-16 15:57:55.39122997 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hei_info:
	.quad	_c3hei
	.quad	901
	.quad	4294967326
	.quad	S3bQP_srt+1144


==================== Asm code ====================
2018-03-16 15:57:55.391998211 UTC

.section .text
.align 8
_c3hif:
_c3hif:
	movq 24(%rbp),%rax
	movq %rbx,%rcx
	movq 7(%rbx),%rbx
	testq %rbx,%rbx
	jl _c3hiw
_c3hiv:
	cmpq $7,%rbx
	jg _c3hiw
_c3his:
	leaq GHC.Float.FFFixed_closure+2(%rip),%rbx
	movq %rbx,16(%rbp)
	movq %rax,24(%rbp)
	movq %rcx,32(%rbp)
	addq $8,%rbp
	jmp _c3h4P
_c3hiw:
	leaq GHC.Float.FFExponent_closure+1(%rip),%rbx
	movq %rbx,16(%rbp)
	movq %rax,24(%rbp)
	movq %rcx,32(%rbp)
	addq $8,%rbp
	jmp _c3h4P
	.size _c3hif, .-_c3hif


==================== Asm code ====================
2018-03-16 15:57:55.392664313 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hif_info:
	.quad	_c3hif
	.quad	644
	.quad	35008278429726
	.quad	S3bQP_srt+1144


==================== Asm code ====================
2018-03-16 15:57:55.393200139 UTC

.section .data.rel.ro
.align 8
.align 1
u3hk4_srtd:
	.quad	S3bQP_srt+752
	.quad	62
	.quad	4588606169848741889


==================== Asm code ====================
2018-03-16 15:57:55.394129558 UTC

.section .text
.align 8
sat_s3bnl_entry:
_c3hji:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c3hjl
_c3hjm:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3hjk_info(%rip),%rax
	movq %rax,-40(%rbp)
	movss 32(%rbx),%xmm1
	movss _n3htu(%rip),%xmm0
	xorps %xmm0,%xmm1
	leaq GHC.Float.expts4_closure(%rip),%r14
	movq 16(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Float.$w$sfloatToDigits1_entry
_c3hjl:
	jmp *-16(%r13)
	.size sat_s3bnl_entry, .-sat_s3bnl_entry
.section .rodata
.align 8
.align 4
_n3htu:
	.long	-2147483648


==================== Asm code ====================
2018-03-16 15:57:55.39478785 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bnl_info:
	.quad	sat_s3bnl_entry
	.quad	4294967298
	.quad	-4294967281
	.quad	u3hk4_srtd


==================== Asm code ====================
2018-03-16 15:57:55.395406836 UTC

.section .text
.align 8
_c3hjk:
_c3hjk:
	movq %r14,%rdi
	movq %rbx,%rsi
	movq 8(%rbp),%r14
	movq 16(%rbp),%rbx
	addq $24,%rbp
	jmp $wdoFmt_s3bk7_entry
	.size _c3hjk, .-_c3hjk


==================== Asm code ====================
2018-03-16 15:57:55.395978693 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hjk_info:
	.quad	_c3hjk
	.quad	2
	.quad	35008278429726
	.quad	S3bQP_srt+1144


==================== Asm code ====================
2018-03-16 15:57:55.396510937 UTC

.section .data.rel.ro
.align 8
.align 1
u3hk5_srtd:
	.quad	S3bQP_srt+752
	.quad	66
	.quad	-23079848578646015
	.quad	3


==================== Asm code ====================
2018-03-16 15:57:55.398207701 UTC

.section .text
.align 8
.globl GHC.Float.$w$sformatRealFloatAlt1_entry
.type GHC.Float.$w$sformatRealFloatAlt1_entry, @object
GHC.Float.$w$sformatRealFloatAlt1_entry:
_c3hjs:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3hjt
_c3hju:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3hjw
_c3hjv:
	subq $8,%rsp
	movss %xmm1,%xmm0
	movl $1,%eax
	movq %rsi,%rbx
	movq %rdi,72(%rsp)
	movsd %xmm1,80(%rsp)
	call isFloatNaN@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c3hjr
_c3hjq:
	addq $-24,%r12
	leaq lvl31_r2Ur5_closure(%rip),%rbx
	movq (%rbx),%rax
	jmp *(%rax)
_c3hjZ:
	leaq $wdoFmt_s3bk7_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq 64(%rsp),%rax
	movq %rax,(%r12)
	leaq -13(%r12),%rax
	xorps %xmm0,%xmm0
	movsd 72(%rsp),%xmm1
	ucomiss %xmm0,%xmm1
	jp _c3hjX
	jb _u3hk0
_c3hjX:
	subq $8,%rsp
	movss %xmm1,%xmm0
	movq %rax,%rbx
	movl $1,%eax
	call isFloatNegativeZero@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c3hjT
_u3hk1:
	movq %rbx,-24(%rbp)
	movq %r14,-16(%rbp)
	movsd 72(%rsp),%xmm0
	movss %xmm0,-8(%rbp)
	addq $-32,%rbp
	jmp _c3hja
_u3hk0:
	movq %rax,-24(%rbp)
	movq %r14,-16(%rbp)
	movss %xmm1,-8(%rbp)
	addq $-32,%rbp
	jmp _c3hja
_c3hjT:
	leaq block_c3hjS_info(%rip),%rax
	movq %rax,-24(%rbp)
	movsd 72(%rsp),%xmm0
	movss %xmm0,%xmm1
	movq %r14,%rax
	leaq GHC.Float.expts4_closure(%rip),%r14
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Float.$w$sfloatToDigits1_entry
_c3hjB:
	addq $-24,%r12
	leaq lvl29_r2Ur3_closure(%rip),%rbx
	movq (%rbx),%rax
	jmp *(%rax)
_c3hjr:
	subq $8,%rsp
	movsd 80(%rsp),%xmm0
	movl $1,%eax
	call isFloatInfinite@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c3hjZ
_c3hjD:
	xorps %xmm0,%xmm0
	movsd 72(%rsp),%xmm1
	ucomiss %xmm0,%xmm1
	jp _c3hjA
	jb _c3hjB
_c3hjA:
	addq $-24,%r12
	leaq lvl27_r2Ur1_closure(%rip),%rbx
	movq (%rbx),%rax
	jmp *(%rax)
_c3hjw:
	movq $24,904(%r13)
_c3hjt:
	leaq GHC.Float.$w$sformatRealFloatAlt1_closure(%rip),%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movss %xmm1,-8(%rbp)
	addq $-32,%rbp
	jmp *-8(%r13)
	.size GHC.Float.$w$sformatRealFloatAlt1_entry, .-GHC.Float.$w$sformatRealFloatAlt1_entry


==================== Asm code ====================
2018-03-16 15:57:55.399979268 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$w$sformatRealFloatAlt1_info
.type GHC.Float.$w$sformatRealFloatAlt1_info, @object
GHC.Float.$w$sformatRealFloatAlt1_info:
	.quad	GHC.Float.$w$sformatRealFloatAlt1_entry
	.quad	0
	.quad	-4294967282
	.quad	17179869184
	.quad	u3hk5_srtd
	.quad	516
	.quad	GHC.Float.$w$sformatRealFloatAlt1_slow


==================== Asm code ====================
2018-03-16 15:57:55.401491552 UTC

.section .text
.align 8
_c3hjS:
_c3hjS:
	movq %r14,%rdi
	movq %rbx,%rsi
	movq 16(%rbp),%r14
	movq 8(%rbp),%rbx
	addq $24,%rbp
	jmp $wdoFmt_s3bk7_entry
	.size _c3hjS, .-_c3hjS


==================== Asm code ====================
2018-03-16 15:57:55.402125579 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hjS_info:
	.quad	_c3hjS
	.quad	2
	.quad	35008278429726
	.quad	S3bQP_srt+1144


==================== Asm code ====================
2018-03-16 15:57:55.402704234 UTC

.section .data.rel.ro
.align 8
.align 1
u3hk6_srtd:
	.quad	S3bQP_srt+752
	.quad	62
	.quad	4588606169848741889


==================== Asm code ====================
2018-03-16 15:57:55.403573515 UTC

.section .text
.align 8
_c3hja:
_c3hja:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c3hjH
_c3hjG:
	leaq sat_s3bnl_info(%rip),%rax
	movq %rax,-56(%r12)
	movq 16(%rbp),%rax
	movq %rax,-40(%r12)
	movq 8(%rbp),%rax
	movq %rax,-32(%r12)
	movss 24(%rbp),%xmm0
	movss %xmm0,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq GHC.Float.$fShowDouble3_closure+1(%rip),%rax
	movq %rax,-8(%r12)
	leaq -56(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3hjH:
	movq $64,904(%r13)
	leaq block_c3hja_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c3hja, .-_c3hja


==================== Asm code ====================
2018-03-16 15:57:55.404263316 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hja_info:
	.quad	_c3hja
	.quad	259
	.quad	-4294967266
	.quad	u3hk6_srtd


==================== Asm code ====================
2018-03-16 15:57:55.407737147 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fShowFloat_$sformatRealFloatAlt_closure
.type GHC.Float.$fShowFloat_$sformatRealFloatAlt_closure, @object
GHC.Float.$fShowFloat_$sformatRealFloatAlt_closure:
	.quad	GHC.Float.$fShowFloat_$sformatRealFloatAlt_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:55.408600937 UTC

.section .text
.align 8
.globl GHC.Float.$fShowFloat_$sformatRealFloatAlt_entry
.type GHC.Float.$fShowFloat_$sformatRealFloatAlt_entry, @object
GHC.Float.$fShowFloat_$sformatRealFloatAlt_entry:
_c3hue:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3huf
_c3hug:
	leaq block_c3hub_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %r8,%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c3hub
_c3huc:
	movq (%rbx),%rax
	jmp *(%rax)
_c3huf:
	leaq GHC.Float.$fShowFloat_$sformatRealFloatAlt_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fShowFloat_$sformatRealFloatAlt_entry, .-GHC.Float.$fShowFloat_$sformatRealFloatAlt_entry


==================== Asm code ====================
2018-03-16 15:57:55.409341231 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fShowFloat_$sformatRealFloatAlt_info
.type GHC.Float.$fShowFloat_$sformatRealFloatAlt_info, @object
GHC.Float.$fShowFloat_$sformatRealFloatAlt_info:
	.quad	GHC.Float.$fShowFloat_$sformatRealFloatAlt_entry
	.quad	0
	.quad	73014444046
	.quad	17179869208
	.quad	S3bQP_srt+1248


==================== Asm code ====================
2018-03-16 15:57:55.4100548 UTC

.section .text
.align 8
_c3hub:
_c3hub:
	movss 7(%rbx),%xmm1
	movq 24(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $32,%rbp
	jmp GHC.Float.$w$sformatRealFloatAlt1_entry
	.size _c3hub, .-_c3hub


==================== Asm code ====================
2018-03-16 15:57:55.410608777 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hub_info:
	.quad	_c3hub
	.quad	3
	.quad	4294967326
	.quad	S3bQP_srt+1248


==================== Asm code ====================
2018-03-16 15:57:55.415403075 UTC

.section .data
.align 8
.align 1
$wxs2_r2Ure_closure:
	.quad	$wxs2_r2Ure_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:55.416190453 UTC

.section .text
.align 8
sat_s3bnE_entry:
_c3huH:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3huI
_c3huJ:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	leaq -1(%rax),%r14
	addq $-16,%rbp
	jmp $wxs2_r2Ure_entry
_c3huI:
	jmp *-16(%r13)
	.size sat_s3bnE_entry, .-sat_s3bnE_entry


==================== Asm code ====================
2018-03-16 15:57:55.416752146 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bnE_info:
	.quad	sat_s3bnE_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S3bQP_srt+1288


==================== Asm code ====================
2018-03-16 15:57:55.417591617 UTC

.section .text
.align 8
$wxs2_r2Ure_entry:
_c3huN:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c3huR
_c3huQ:
	cmpq $1,%r14
	je _c3huM
_c3huL:
	leaq sat_s3bnE_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq lvl20_r2UqT_closure+1(%rip),%rax
	movq %rax,-8(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c3huR:
	movq $48,904(%r13)
	leaq $wxs2_r2Ure_closure(%rip),%rbx
	jmp *-8(%r13)
_c3huM:
	addq $-48,%r12
	leaq lvl35_r2Ur9_closure+2(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size $wxs2_r2Ure_entry, .-$wxs2_r2Ure_entry


==================== Asm code ====================
2018-03-16 15:57:55.41831861 UTC

.section .data.rel.ro
.align 8
.align 1
$wxs2_r2Ure_info:
	.quad	$wxs2_r2Ure_entry
	.quad	0
	.quad	140741783322638
	.quad	4294967300
	.quad	S3bQP_srt+1168


==================== Asm code ====================
2018-03-16 15:57:55.483905512 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$w$sformatRealFloatAlt_closure
.type GHC.Float.$w$sformatRealFloatAlt_closure, @object
GHC.Float.$w$sformatRealFloatAlt_closure:
	.quad	GHC.Float.$w$sformatRealFloatAlt_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:55.484643105 UTC

.section .text
.align 8
.globl GHC.Float.$w$sformatRealFloatAlt_slow
.type GHC.Float.$w$sformatRealFloatAlt_slow, @object
GHC.Float.$w$sformatRealFloatAlt_slow:
_c3hva:
	movsd 24(%rbp),%xmm1
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $32,%rbp
	jmp GHC.Float.$w$sformatRealFloatAlt_entry
	.size GHC.Float.$w$sformatRealFloatAlt_slow, .-GHC.Float.$w$sformatRealFloatAlt_slow


==================== Asm code ====================
2018-03-16 15:57:55.48552297 UTC

.section .text
.align 8
show_e'_s3bo7_entry:
_c3hvZ:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3hw8
_c3hw9:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3hvW_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _c3hvW
_c3hvX:
	movq (%rbx),%rax
	jmp *(%rax)
_c3hw8:
	jmp *-16(%r13)
	.size show_e'_s3bo7_entry, .-show_e'_s3bo7_entry


==================== Asm code ====================
2018-03-16 15:57:55.486151434 UTC

.section .data.rel.ro
.align 8
.align 1
show_e'_s3bo7_info:
	.quad	show_e'_s3bo7_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:55.486847343 UTC

.section .text
.align 8
_c3hvW:
_c3hvW:
	leaq block_c3hw5_info(%rip),%rax
	movq %rax,(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rdi
	movq 7(%rbx),%rax
	leaq -1(%rax),%rsi
	xorl %r14d,%r14d
	jmp *GHC.Show.$wshowSignedInt_entry@gotpcrel(%rip)
	.size _c3hvW, .-_c3hvW


==================== Asm code ====================
2018-03-16 15:57:55.487473858 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hvW_info:
	.quad	_c3hvW
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.488207859 UTC

.section .text
.align 8
_c3hw5:
_c3hw5:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3hwd
_c3hwc:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3hwd:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c3hw5, .-_c3hw5


==================== Asm code ====================
2018-03-16 15:57:55.488845115 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hw5_info:
	.quad	_c3hw5
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.489574922 UTC

.section .text
.align 8
sat_s3bof_entry:
_c3hwo:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3hwp
_c3hwq:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rsi
	leaq lvl32_r2Ur6_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_c3hwp:
	jmp *-16(%r13)
	.size sat_s3bof_entry, .-sat_s3bof_entry


==================== Asm code ====================
2018-03-16 15:57:55.490184909 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bof_info:
	.quad	sat_s3bof_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:55.490794489 UTC

.section .text
.align 8
sat_s3boi_entry:
_c3hwB:
	movq 16(%rbx),%rsi
	leaq lvl33_r2Ur7_bytes(%rip),%r14
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
	.size sat_s3boi_entry, .-sat_s3boi_entry


==================== Asm code ====================
2018-03-16 15:57:55.491398138 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3boi_info:
	.quad	sat_s3boi_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:55.492147265 UTC

.section .text
.align 8
sat_s3boj_entry:
_c3hwE:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3hwF
_c3hwG:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3hwI
_c3hwH:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	leaq sat_s3boi_info(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rax,(%r12)
	leaq -16(%r12),%rsi
	movq %rbx,%r14
	addq $-16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_c3hwI:
	movq $24,904(%r13)
_c3hwF:
	jmp *-16(%r13)
	.size sat_s3boj_entry, .-sat_s3boj_entry


==================== Asm code ====================
2018-03-16 15:57:55.492829343 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3boj_info:
	.quad	sat_s3boj_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:55.493601835 UTC

.section .text
.align 8
dec'_s3boq_entry:
_c3hwS:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3hwT
_c3hwU:
	leaq block_c3hwP_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 16(%rbx),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3hwP
_c3hwQ:
	movq (%rbx),%rax
	jmp *(%rax)
_c3hwT:
	jmp *-16(%r13)
	.size dec'_s3boq_entry, .-dec'_s3boq_entry


==================== Asm code ====================
2018-03-16 15:57:55.494243814 UTC

.section .data.rel.ro
.align 8
.align 1
dec'_s3boq_info:
	.quad	dec'_s3boq_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:55.49493426 UTC

.section .text
.align 8
_c3hwP:
_c3hwP:
	cmpq $1,7(%rbx)
	jg _c3hx1
_c3hx2:
	leaq GHC.Float.$fRealFracFloat2_closure+1(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3hx1:
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3hwP, .-_c3hwP


==================== Asm code ====================
2018-03-16 15:57:55.495496948 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hwP_info:
	.quad	_c3hwP
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.496148906 UTC

.section .text
.align 8
sat_s3boA_entry:
_c3hxj:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3hxq
_c3hxr:
	leaq block_c3hxh_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 16(%rbx),%rbx
	addq $-8,%rbp
	jmp dec'_s3boq_entry
_c3hxq:
	jmp *-16(%r13)
	.size sat_s3boA_entry, .-sat_s3boA_entry


==================== Asm code ====================
2018-03-16 15:57:55.496782541 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3boA_info:
	.quad	sat_s3boA_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:55.4975274 UTC

.section .text
.align 8
_c3hxh:
_c3hxh:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3hxu
_c3hxt:
	movq 7(%rbx),%rax
	incq %rax
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3hxu:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3hxh, .-_c3hxh


==================== Asm code ====================
2018-03-16 15:57:55.498160907 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hxh_info:
	.quad	_c3hxh
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.498939574 UTC

.section .text
.align 8
ds5_s3bow_entry:
_c3hxy:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3hxz
_c3hxA:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3hxC
_c3hxB:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	leaq sat_s3boA_info(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rbx,(%r12)
	leaq block_c3hxv_info(%rip),%rbx
	movq %rbx,-24(%rbp)
	movq %rax,%rdi
	leaq -16(%r12),%rsi
	leaq base_r2UqK_closure+1(%rip),%r14
	addq $-24,%rbp
	jmp GHC.Float.$wroundTo_entry
_c3hxC:
	movq $24,904(%r13)
_c3hxz:
	jmp *-16(%r13)
	.size ds5_s3bow_entry, .-ds5_s3bow_entry


==================== Asm code ====================
2018-03-16 15:57:55.499608968 UTC

.section .data.rel.ro
.align 8
.align 1
ds5_s3bow_info:
	.quad	ds5_s3bow_entry
	.quad	2
	.quad	4294967314
	.quad	S3bQP_srt+1200


==================== Asm code ====================
2018-03-16 15:57:55.50025189 UTC

.section .text
.align 8
_c3hxv:
_c3hxv:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3hxF
_c3hxE:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3hxF:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c3hxv, .-_c3hxv


==================== Asm code ====================
2018-03-16 15:57:55.500860962 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hxv_info:
	.quad	_c3hxv
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.501608458 UTC

.section .text
.align 8
ds6_s3boE_entry:
_c3hxN:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3hxR
_c3hxS:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3hxK_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _c3hxK
_c3hxL:
	movq (%rbx),%rax
	jmp *(%rax)
_c3hxR:
	jmp *-16(%r13)
	.size ds6_s3boE_entry, .-ds6_s3boE_entry


==================== Asm code ====================
2018-03-16 15:57:55.502243787 UTC

.section .data.rel.ro
.align 8
.align 1
ds6_s3boE_info:
	.quad	ds6_s3boE_entry
	.quad	1
	.quad	210453397520
	.quad	S3bQP_srt+1176


==================== Asm code ====================
2018-03-16 15:57:55.503007205 UTC

.section .text
.align 8
_c3hxK:
_c3hxK:
	leaq block_c3hxQ_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c3hxQ
_c3hxU:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3hxK, .-_c3hxK


==================== Asm code ====================
2018-03-16 15:57:55.503636355 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hxK_info:
	.quad	_c3hxK
	.quad	0
	.quad	210453397534
	.quad	S3bQP_srt+1176


==================== Asm code ====================
2018-03-16 15:57:55.504384143 UTC

.section .text
.align 8
_c3hxQ:
_c3hxQ:
	movq 8(%rbp),%rax
	cmpq $0,7(%rbx)
	jle _c3hy4
_c3hyk:
	leaq block_c3hyj_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c3hyj
_c3hyl:
	movq (%rbx),%rax
	jmp *(%rax)
_c3hy4:
	leaq block_c3hy2_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rsi
	movq GHC.Show.intToDigit_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r14
	addq $8,%rbp
	jmp *GHC.Base.map_entry@gotpcrel(%rip)
	.size _c3hxQ, .-_c3hxQ


==================== Asm code ====================
2018-03-16 15:57:55.505035413 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hxQ_info:
	.quad	_c3hxQ
	.quad	1
	.quad	210453397534
	.quad	S3bQP_srt+1176


==================== Asm code ====================
2018-03-16 15:57:55.505910752 UTC

.section .text
.align 8
_c3hy2:
_c3hy2:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _u3hyS
_c3hye:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3hyh
_c3hyg:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq (,)_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u3hyS:
	addq $8,%rbp
	jmp _c3hyH
_c3hyh:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3hy2, .-_c3hy2


==================== Asm code ====================
2018-03-16 15:57:55.506631683 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hy2_info:
	.quad	_c3hy2
	.quad	0
	.quad	4294967326
	.quad	S3bQP_srt+1216


==================== Asm code ====================
2018-03-16 15:57:55.507335042 UTC

.section .text
.align 8
_c3hyj:
_c3hyj:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c3hyr
_c3hyw:
	leaq block_c3hyu_info(%rip),%rax
	movq %rax,(%rbp)
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp *GHC.List.init1_entry@gotpcrel(%rip)
_c3hyr:
	movq GHC.List.init2_closure@gotpcrel(%rip),%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3hyj, .-_c3hyj


==================== Asm code ====================
2018-03-16 15:57:55.507975421 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hyj_info:
	.quad	_c3hyj
	.quad	0
	.quad	210453397534
	.quad	S3bQP_srt+1176


==================== Asm code ====================
2018-03-16 15:57:55.50860955 UTC

.section .text
.align 8
_c3hyu:
_c3hyu:
	leaq block_c3hyA_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rsi
	movq GHC.Show.intToDigit_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r14
	jmp *GHC.Base.map_entry@gotpcrel(%rip)
	.size _c3hyu, .-_c3hyu


==================== Asm code ====================
2018-03-16 15:57:55.509177382 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hyu_info:
	.quad	_c3hyu
	.quad	0
	.quad	141733920798
	.quad	S3bQP_srt+1176


==================== Asm code ====================
2018-03-16 15:57:55.510011294 UTC

.section .text
.align 8
_c3hyA:
_c3hyA:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _u3hyT
_c3hyL:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3hyO
_c3hyN:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq (,)_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u3hyT:
	addq $8,%rbp
	jmp _c3hyH
_c3hyO:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3hyA, .-_c3hyA


==================== Asm code ====================
2018-03-16 15:57:55.510685368 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hyA_info:
	.quad	_c3hyA
	.quad	0
	.quad	4294967326
	.quad	S3bQP_srt+1216


==================== Asm code ====================
2018-03-16 15:57:55.511283387 UTC

.section .text
.align 8
_c3hyH:
_c3hyH:
	leaq lvl18_r2UqR_closure(%rip),%rbx
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3hyH, .-_c3hyH


==================== Asm code ====================
2018-03-16 15:57:55.512079726 UTC

.section .text
.align 8
sat_s3bpf_entry:
_c3hzf:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3hzB
_c3hzC:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3hzc_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c3hzc
_c3hzd:
	movq (%rbx),%rax
	jmp *(%rax)
_c3hzB:
	jmp *-16(%r13)
	.size sat_s3bpf_entry, .-sat_s3bpf_entry


==================== Asm code ====================
2018-03-16 15:57:55.513747737 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bpf_info:
	.quad	sat_s3bpf_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:55.514532084 UTC

.section .text
.align 8
_c3hzc:
_c3hzc:
	leaq block_c3hzi_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c3hzi
_c3hzj:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3hzc, .-_c3hzc


==================== Asm code ====================
2018-03-16 15:57:55.51522874 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hzc_info:
	.quad	_c3hzc
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.515869481 UTC

.section .text
.align 8
_c3hzi:
_c3hzi:
	leaq block_c3hzn_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rbx
	testb $7,%bl
	jne _c3hzn
_c3hzo:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3hzi, .-_c3hzi


==================== Asm code ====================
2018-03-16 15:57:55.516445517 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hzi_info:
	.quad	_c3hzi
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.517162221 UTC

.section .text
.align 8
_c3hzn:
_c3hzn:
	movq 7(%rbx),%rax
	decq %rax
	movq 8(%rbp),%rbx
	addq %rax,%rbx
	leaq block_c3hzy_info(%rip),%rax
	movq %rax,8(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rdi
	movq %rbx,%rsi
	xorl %r14d,%r14d
	addq $8,%rbp
	jmp *GHC.Show.$wshowSignedInt_entry@gotpcrel(%rip)
	.size _c3hzn, .-_c3hzn


==================== Asm code ====================
2018-03-16 15:57:55.517879955 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hzn_info:
	.quad	_c3hzn
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.518599087 UTC

.section .text
.align 8
_c3hzy:
_c3hzy:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3hzI
_c3hzH:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3hzI:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c3hzy, .-_c3hzy


==================== Asm code ====================
2018-03-16 15:57:55.519213571 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hzy_info:
	.quad	_c3hzy
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.519988439 UTC

.section .text
.align 8
sat_s3bph_entry:
_c3hzM:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c3hzO
_c3hzP:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3hz3_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _c3hz3
_c3hz4:
	movq (%rbx),%rax
	jmp *(%rax)
_c3hzO:
	jmp *-16(%r13)
	.size sat_s3bph_entry, .-sat_s3bph_entry


==================== Asm code ====================
2018-03-16 15:57:55.520686222 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bph_info:
	.quad	sat_s3bph_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:57:55.521540796 UTC

.section .text
.align 8
_c3hz3:
_c3hz3:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c3hzS
_c3hzR:
	movq 15(%rbx),%rax
	leaq sat_s3bpf_info(%rip),%rbx
	movq %rbx,-48(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	leaq lvl19_r2UqS_closure+1(%rip),%rbx
	movq %rbx,-8(%r12)
	leaq -48(%r12),%rbx
	movq %rbx,(%r12)
	leaq -14(%r12),%rsi
	movq %rax,%r14
	addq $24,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_c3hzS:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3hz3, .-_c3hz3


==================== Asm code ====================
2018-03-16 15:57:55.522338898 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hz3_info:
	.quad	_c3hz3
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.523039482 UTC

.section .text
.align 8
sat_s3bpt_entry:
_c3hAj:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3hAk
_c3hAl:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3hAh_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	jmp dec'_s3boq_entry
_c3hAk:
	jmp *-16(%r13)
	.size sat_s3bpt_entry, .-sat_s3bpt_entry


==================== Asm code ====================
2018-03-16 15:57:55.523747363 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bpt_info:
	.quad	sat_s3bpt_entry
	.quad	1
	.quad	1103806595088
	.quad	S3bQP_srt+1224


==================== Asm code ====================
2018-03-16 15:57:55.524449632 UTC

.section .text
.align 8
_c3hAh:
_c3hAh:
	movq 7(%rbx),%rax
	cmpq $0,%rax
	jle _c3hAs
_c3hAt:
	movq %rax,%r14
	addq $8,%rbp
	jmp $wxs2_r2Ure_entry
_c3hAs:
	leaq lvl34_r2Ur8_closure(%rip),%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3hAh, .-_c3hAh


==================== Asm code ====================
2018-03-16 15:57:55.525051502 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hAh_info:
	.quad	_c3hAh
	.quad	0
	.quad	1103806595102
	.quad	S3bQP_srt+1224


==================== Asm code ====================
2018-03-16 15:57:55.525923278 UTC

.section .text
.align 8
sat_s3bpB_entry:
_c3hAN:
	movq 16(%rbx),%rsi
	movq GHC.Show.intToDigit_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r14
	jmp *GHC.Base.map_entry@gotpcrel(%rip)
	.size sat_s3bpB_entry, .-sat_s3bpB_entry


==================== Asm code ====================
2018-03-16 15:57:55.526490889 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bpB_info:
	.quad	sat_s3bpB_entry
	.quad	1
	.quad	4294967312
	.quad	S3bQP_srt+1176


==================== Asm code ====================
2018-03-16 15:57:55.527209102 UTC

.section .text
.align 8
n1_s3bpE_entry:
_c3hB6:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3hB7
_c3hB8:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rsi
	movq GHC.Show.intToDigit_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r14
	addq $-16,%rbp
	jmp *GHC.Base.map_entry@gotpcrel(%rip)
_c3hB7:
	jmp *-16(%r13)
	.size n1_s3bpE_entry, .-n1_s3bpE_entry


==================== Asm code ====================
2018-03-16 15:57:55.527859906 UTC

.section .data.rel.ro
.align 8
.align 1
n1_s3bpE_info:
	.quad	n1_s3bpE_entry
	.quad	1
	.quad	4294967312
	.quad	S3bQP_srt+1176


==================== Asm code ====================
2018-03-16 15:57:55.528588009 UTC

.section .text
.align 8
sat_s3bpK_entry:
_c3hBn:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3hBo
_c3hBp:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	leaq -1(%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp $wxs4_s3bpG_entry
_c3hBo:
	jmp *-16(%r13)
	.size sat_s3bpK_entry, .-sat_s3bpK_entry


==================== Asm code ====================
2018-03-16 15:57:55.529193142 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bpK_info:
	.quad	sat_s3bpK_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 15:57:55.530069702 UTC

.section .text
.align 8
$wxs4_s3bpG_entry:
_c3hBt:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c3hBx
_c3hBw:
	cmpq $1,%r14
	je _c3hBs
_c3hBr:
	leaq sat_s3bpK_info(%rip),%rax
	movq %rax,-48(%r12)
	movq %rbx,-32(%r12)
	movq %r14,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq lvl20_r2UqT_closure+1(%rip),%rax
	movq %rax,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c3hBx:
	movq $56,904(%r13)
	jmp *-8(%r13)
_c3hBs:
	movq 7(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size $wxs4_s3bpG_entry, .-$wxs4_s3bpG_entry


==================== Asm code ====================
2018-03-16 15:57:55.530784217 UTC

.section .data.rel.ro
.align 8
.align 1
$wxs4_s3bpG_info:
	.quad	$wxs4_s3bpG_entry
	.quad	1
	.quad	9
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:57:55.531883817 UTC

.section .text
.align 8
sat_s3bpL_entry:
_c3hBz:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3hBA
_c3hBB:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c3hBD
_c3hBC:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	negq %rbx
	cmpq $0,%rbx
	jle _c3hBF
_c3hBG:
	leaq n1_s3bpE_info(%rip),%rcx
	movq %rcx,-56(%r12)
	movq %rax,-40(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-32(%r12)
	leaq lvl20_r2UqT_closure+1(%rip),%rax
	movq %rax,-24(%r12)
	leaq -56(%r12),%rax
	movq %rax,-16(%r12)
	leaq $wxs4_s3bpG_info(%rip),%rax
	movq %rax,-8(%r12)
	leaq -30(%r12),%rax
	movq %rax,(%r12)
	movq %rbx,%r14
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	jmp $wxs4_s3bpG_entry
_c3hBF:
	addq $-64,%r12
	movq %rax,%rsi
	movq GHC.Show.intToDigit_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r14
	addq $-16,%rbp
	jmp *GHC.Base.map_entry@gotpcrel(%rip)
_c3hBD:
	movq $64,904(%r13)
_c3hBA:
	jmp *-16(%r13)
	.size sat_s3bpL_entry, .-sat_s3bpL_entry


==================== Asm code ====================
2018-03-16 15:57:55.53270981 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bpL_info:
	.quad	sat_s3bpL_entry
	.quad	4294967297
	.quad	4294967315
	.quad	S3bQP_srt+1176


==================== Asm code ====================
2018-03-16 15:57:55.533455748 UTC

.section .text
.align 8
sat_s3bpW_entry:
_c3hC8:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3hC9
_c3hCa:
	leaq block_c3hC5_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 16(%rbx),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3hC5
_c3hC6:
	movq (%rbx),%rax
	jmp *(%rax)
_c3hC9:
	jmp *-16(%r13)
	.size sat_s3bpW_entry, .-sat_s3bpW_entry


==================== Asm code ====================
2018-03-16 15:57:55.534068652 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bpW_info:
	.quad	sat_s3bpW_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:55.534822968 UTC

.section .text
.align 8
_c3hC5:
_c3hC5:
	cmpq $0,7(%rbx)
	jg _c3hCh
_c3hCi:
	leaq GHC.Float.minExpt_closure+1(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3hCh:
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3hC5, .-_c3hC5


==================== Asm code ====================
2018-03-16 15:57:55.535455583 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hC5_info:
	.quad	_c3hC5
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.536224231 UTC

.section .text
.align 8
sat_s3bq5_entry:
_c3hCz:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3hCA
_c3hCB:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	leaq -1(%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp $wxs4_s3bq1_entry
_c3hCA:
	jmp *-16(%r13)
	.size sat_s3bq5_entry, .-sat_s3bq5_entry


==================== Asm code ====================
2018-03-16 15:57:55.536846475 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bq5_info:
	.quad	sat_s3bq5_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 15:57:55.538265536 UTC

.section .text
.align 8
$wxs4_s3bq1_entry:
_c3hCF:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c3hCJ
_c3hCI:
	cmpq $1,%r14
	je _c3hCE
_c3hCD:
	leaq sat_s3bq5_info(%rip),%rax
	movq %rax,-48(%r12)
	movq %rbx,-32(%r12)
	movq %r14,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq GHC.Float.minExpt_closure+1(%rip),%rax
	movq %rax,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c3hCJ:
	movq $56,904(%r13)
	jmp *-8(%r13)
_c3hCE:
	movq 7(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size $wxs4_s3bq1_entry, .-$wxs4_s3bq1_entry


==================== Asm code ====================
2018-03-16 15:57:55.538958541 UTC

.section .data.rel.ro
.align 8
.align 1
$wxs4_s3bq1_info:
	.quad	$wxs4_s3bq1_entry
	.quad	1
	.quad	9
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:57:55.539968778 UTC

.section .text
.align 8
sat_s3bq9_entry:
_c3hCW:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3hCX
_c3hCY:
	leaq block_c3hCT_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 16(%rbx),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3hCT
_c3hCU:
	movq (%rbx),%rax
	jmp *(%rax)
_c3hCX:
	jmp *-16(%r13)
	.size sat_s3bq9_entry, .-sat_s3bq9_entry


==================== Asm code ====================
2018-03-16 15:57:55.540705559 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bq9_info:
	.quad	sat_s3bq9_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:55.541489006 UTC

.section .text
.align 8
_c3hCT:
_c3hCT:
	cmpq $0,7(%rbx)
	jg _c3hD5
_c3hD6:
	leaq GHC.Float.minExpt_closure+1(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3hD5:
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3hCT, .-_c3hCT


==================== Asm code ====================
2018-03-16 15:57:55.542155511 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hCT_info:
	.quad	_c3hCT
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.543207429 UTC

.section .text
.align 8
ds4_s3bpQ_entry:
_c3hD8:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3hD9
_c3hDa:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c3hDc
_c3hDb:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	negq %rbx
	cmpq $0,%rbx
	jle _c3hDf
_c3hDj:
	movq :_con_info@gotpcrel(%rip),%rdx
	movq %rdx,-32(%r12)
	leaq GHC.Float.minExpt_closure+1(%rip),%rdx
	movq %rdx,-24(%r12)
	movq %rax,-16(%r12)
	leaq $wxs4_s3bq1_info(%rip),%rax
	movq %rax,-8(%r12)
	leaq -30(%r12),%rax
	movq %rax,(%r12)
	leaq block_c3hCL_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %rbx,%r14
	leaq -7(%r12),%rbx
	movq %rcx,-24(%rbp)
	addq $-32,%rbp
	jmp $wxs4_s3bq1_entry
_c3hDf:
	leaq sat_s3bpW_info(%rip),%rbx
	movq %rbx,-32(%r12)
	movq %rcx,-16(%r12)
	leaq -32(%r12),%rbx
	addq $-16,%r12
	leaq block_c3hDd_info(%rip),%rcx
	movq %rcx,-24(%rbp)
	movq %rax,%rdi
	movq %rbx,%rsi
	leaq base_r2UqK_closure+1(%rip),%r14
	addq $-24,%rbp
	jmp GHC.Float.$wroundTo_entry
_c3hDc:
	movq $40,904(%r13)
_c3hD9:
	jmp *-16(%r13)
	.size ds4_s3bpQ_entry, .-ds4_s3bpQ_entry


==================== Asm code ====================
2018-03-16 15:57:55.544079081 UTC

.section .data.rel.ro
.align 8
.align 1
ds4_s3bpQ_info:
	.quad	ds4_s3bpQ_entry
	.quad	4294967298
	.quad	12884901903
	.quad	S3bQP_srt+1192


==================== Asm code ====================
2018-03-16 15:57:55.544750719 UTC

.section .text
.align 8
_c3hDd:
_c3hDd:
	movq %r14,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp $j_r2Urc_entry
	.size _c3hDd, .-_c3hDd


==================== Asm code ====================
2018-03-16 15:57:55.545377153 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hDd_info:
	.quad	_c3hDd
	.quad	0
	.quad	4294967326
	.quad	S3bQP_srt+1192


==================== Asm code ====================
2018-03-16 15:57:55.546672619 UTC

.section .text
.align 8
_c3hCL:
_c3hCL:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3hDm
_c3hDl:
	leaq sat_s3bq9_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq block_c3hDi_info(%rip),%rax
	movq %rax,8(%rbp)
	movq %rbx,%rdi
	leaq -16(%r12),%rsi
	leaq base_r2UqK_closure+1(%rip),%r14
	addq $8,%rbp
	jmp GHC.Float.$wroundTo_entry
_c3hDm:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3hCL, .-_c3hCL


==================== Asm code ====================
2018-03-16 15:57:55.547414557 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hCL_info:
	.quad	_c3hCL
	.quad	1
	.quad	12884901918
	.quad	S3bQP_srt+1192


==================== Asm code ====================
2018-03-16 15:57:55.548137625 UTC

.section .text
.align 8
_c3hDi:
_c3hDi:
	movq %r14,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp $j_r2Urc_entry
	.size _c3hDi, .-_c3hDi


==================== Asm code ====================
2018-03-16 15:57:55.548677228 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hDi_info:
	.quad	_c3hDi
	.quad	0
	.quad	4294967326
	.quad	S3bQP_srt+1192


==================== Asm code ====================
2018-03-16 15:57:55.550399468 UTC

.section .text
.align 8
sat_s3bqp_entry:
_c3hDw:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3hDx
_c3hDy:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3hDt_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c3hDt
_c3hDu:
	movq (%rbx),%rax
	jmp *(%rax)
_c3hDx:
	jmp *-16(%r13)
	.size sat_s3bqp_entry, .-sat_s3bqp_entry


==================== Asm code ====================
2018-03-16 15:57:55.551405192 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bqp_info:
	.quad	sat_s3bqp_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:55.552213278 UTC

.section .text
.align 8
_c3hDt:
_c3hDt:
	leaq block_c3hDB_info(%rip),%rax
	movq %rax,(%rbp)
	movq 15(%rbx),%rbx
	testb $7,%bl
	jne _c3hDB
_c3hDD:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3hDt, .-_c3hDt


==================== Asm code ====================
2018-03-16 15:57:55.552804059 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hDt_info:
	.quad	_c3hDt
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.553715893 UTC

.section .text
.align 8
_c3hDB:
_c3hDB:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c3hDK
_c3hDZ:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3hE2
_c3hE1:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq lvl14_r2UqN_closure+1(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -14(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3hE2:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c3hDK:
	movq 8(%rbp),%rax
	leaq block_c3hDH_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c3hDH
_c3hDL:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3hDB, .-_c3hDB


==================== Asm code ====================
2018-03-16 15:57:55.554450921 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hDB_info:
	.quad	_c3hDB
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.555141608 UTC

.section .text
.align 8
_c3hDH:
_c3hDH:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c3hDR
_c3hDV:
	leaq lvl37_r2Urd_closure+2(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3hDR:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3hDH, .-_c3hDH


==================== Asm code ====================
2018-03-16 15:57:55.555708852 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hDH_info:
	.quad	_c3hDH
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.556440055 UTC

.section .text
.align 8
sat_s3bqu_entry:
_c3hEg:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3hEh
_c3hEi:
	leaq block_c3hEd_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 24(%rbx),%rax
	movq 32(%rbx),%rcx
	movq 16(%rbx),%rbx
	movq %rax,-16(%rbp)
	movq %rcx,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c3hEd
_c3hEe:
	movq (%rbx),%rax
	jmp *(%rax)
_c3hEh:
	jmp *-16(%r13)
	.size sat_s3bqu_entry, .-sat_s3bqu_entry


==================== Asm code ====================
2018-03-16 15:57:55.557152929 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bqu_info:
	.quad	sat_s3bqu_entry
	.quad	4294967298
	.quad	15


==================== Asm code ====================
2018-03-16 15:57:55.558013271 UTC

.section .text
.align 8
_c3hEd:
_c3hEd:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3hEn
_c3hEm:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jg _c3hEw
_c3hEx:
	addq $-16,%r12
	movq 8(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c3hEw:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	addq 16(%rbp),%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3hEn:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3hEd, .-_c3hEd


==================== Asm code ====================
2018-03-16 15:57:55.558663664 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hEd_info:
	.quad	_c3hEd
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.559418331 UTC

.section .text
.align 8
sat_s3bqM_entry:
_c3hF9:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3hFa
_c3hFb:
	leaq block_c3hF2_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3hF2
_c3hF3:
	movq (%rbx),%rax
	jmp *(%rax)
_c3hFa:
	jmp *-16(%r13)
	.size sat_s3bqM_entry, .-sat_s3bqM_entry


==================== Asm code ====================
2018-03-16 15:57:55.560105437 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bqM_info:
	.quad	sat_s3bqM_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:55.560987098 UTC

.section .text
.align 8
_c3hF2:
_c3hF2:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c3hF6
_c3hF7:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3hFw
_c3hFv:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq lvl14_r2UqN_closure+1(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -14(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3hFw:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c3hF6:
	movq 8(%rbp),%rax
	leaq block_c3hFe_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c3hFe
_c3hFg:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3hF2, .-_c3hF2


==================== Asm code ====================
2018-03-16 15:57:55.562152448 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hF2_info:
	.quad	_c3hF2
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.562835391 UTC

.section .text
.align 8
_c3hFe:
_c3hFe:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c3hFm
_c3hFq:
	leaq lvl37_r2Urd_closure+2(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3hFm:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3hFe, .-_c3hFe


==================== Asm code ====================
2018-03-16 15:57:55.563455863 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hFe_info:
	.quad	_c3hFe
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.564198087 UTC

.section .text
.align 8
sat_s3bqT_entry:
_c3hFN:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3hFO
_c3hFP:
	leaq block_c3hFG_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3hFG
_c3hFH:
	movq (%rbx),%rax
	jmp *(%rax)
_c3hFO:
	jmp *-16(%r13)
	.size sat_s3bqT_entry, .-sat_s3bqT_entry


==================== Asm code ====================
2018-03-16 15:57:55.564822899 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bqT_info:
	.quad	sat_s3bqT_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:55.565721767 UTC

.section .text
.align 8
_c3hFG:
_c3hFG:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c3hFK
_c3hFL:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3hGa
_c3hG9:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq lvl14_r2UqN_closure+1(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -14(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3hGa:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c3hFK:
	movq 8(%rbp),%rax
	leaq block_c3hFS_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c3hFS
_c3hFU:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3hFG, .-_c3hFG


==================== Asm code ====================
2018-03-16 15:57:55.566471672 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hFG_info:
	.quad	_c3hFG
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.567201719 UTC

.section .text
.align 8
_c3hFS:
_c3hFS:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c3hG0
_c3hG4:
	leaq lvl37_r2Urd_closure+2(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3hG0:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3hFS, .-_c3hFS


==================== Asm code ====================
2018-03-16 15:57:55.567842041 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hFS_info:
	.quad	_c3hFS
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.568575294 UTC

.section .text
.align 8
sat_s3bqY_entry:
_c3hGp:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3hGq
_c3hGr:
	leaq block_c3hGj_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 24(%rbx),%rsi
	movq GHC.Show.intToDigit_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r14
	movq 16(%rbx),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.Base.map_entry@gotpcrel(%rip)
_c3hGq:
	jmp *-16(%r13)
	.size sat_s3bqY_entry, .-sat_s3bqY_entry


==================== Asm code ====================
2018-03-16 15:57:55.569314899 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bqY_info:
	.quad	sat_s3bqY_entry
	.quad	2
	.quad	4294967314
	.quad	S3bQP_srt+1176


==================== Asm code ====================
2018-03-16 15:57:55.570144221 UTC

.section .text
.align 8
_c3hGj:
_c3hGj:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c3hGm
_c3hGn:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3hGM
_c3hGL:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq lvl14_r2UqN_closure+1(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -14(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3hGM:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c3hGm:
	movq 8(%rbp),%rax
	leaq block_c3hGu_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c3hGu
_c3hGw:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3hGj, .-_c3hGj


==================== Asm code ====================
2018-03-16 15:57:55.570848077 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hGj_info:
	.quad	_c3hGj
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.571728276 UTC

.section .text
.align 8
_c3hGu:
_c3hGu:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c3hGC
_c3hGG:
	leaq lvl37_r2Urd_closure+2(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3hGC:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3hGu, .-_c3hGu


==================== Asm code ====================
2018-03-16 15:57:55.572383763 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hGu_info:
	.quad	_c3hGu
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.573093844 UTC

.section .text
.align 8
$wdoFmt_s3bnU_entry:
_c3hGU:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c3hGV
_u3hJh:
	movq %rbx,-32(%rbp)
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-32,%rbp
	jmp _c3hvq
_c3hGV:
	jmp *-8(%r13)
	.size $wdoFmt_s3bnU_entry, .-$wdoFmt_s3bnU_entry


==================== Asm code ====================
2018-03-16 15:57:55.573824961 UTC

.section .data.rel.ro
.align 8
.align 1
$wdoFmt_s3bnU_info:
	.quad	$wdoFmt_s3bnU_entry
	.quad	2
	.quad	1160891005403147
	.quad	12884901911
	.quad	S3bQP_srt+1144


==================== Asm code ====================
2018-03-16 15:57:55.5745906 UTC

.section .text
.align 8
_c3hvq:
_c3hvq:
	leaq block_c3hvt_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 8(%rbp),%rbx
	movq (%rbp),%rax
	movq 13(%rax),%rcx
	movq %rcx,-8(%rbp)
	movq 5(%rax),%rax
	movq %rax,8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3hvt
_c3hvu:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3hvq, .-_c3hvq


==================== Asm code ====================
2018-03-16 15:57:55.575499493 UTC

.section .text
.align 8
_c3hvt:
_c3hvt:
	andl $7,%ebx
	cmpq $3,%rbx
	jb _u3hJg
_c3hGS:
	leaq block_c3hIQ_info(%rip),%rax
	movq %rax,8(%rbp)
	movq 40(%rbp),%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c3hIQ
_c3hIS:
	movq (%rbx),%rax
	jmp *(%rax)
_u3hJg:
	movq 24(%rbp),%rax
	cmpq $2,%rbx
	jb _c3hGQ
_c3hGR:
	leaq block_c3hAw_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c3hAw
_c3hAx:
	movq (%rbx),%rax
	jmp *(%rax)
_c3hGQ:
	leaq block_c3hvy_info(%rip),%rbx
	movq %rbx,24(%rbp)
	movq %rax,%rbx
	addq $24,%rbp
	testb $7,%bl
	jne _c3hvy
_c3hvz:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3hvt, .-_c3hvt


==================== Asm code ====================
2018-03-16 15:57:55.576234978 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hvt_info:
	.quad	_c3hvt
	.quad	5
	.quad	1160891005403166
	.quad	S3bQP_srt+1144


==================== Asm code ====================
2018-03-16 15:57:55.577085938 UTC

.section .text
.align 8
_c3hvy:
_c3hvy:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c3hH0
_c3hHF:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3hHI
_c3hHH:
	movq 6(%rbx),%rbx
	leaq dec'_s3boq_info(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rbx,(%r12)
	leaq block_c3hzU_info(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,%rbx
	leaq -16(%r12),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c3hzU
_c3hzV:
	movq (%rbx),%rax
	jmp *(%rax)
_c3hHI:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c3hH0:
	leaq block_c3hvD_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq GHC.Show.intToDigit_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r14
	addq $8,%rbp
	jmp *GHC.Base.map_entry@gotpcrel(%rip)
	.size _c3hvy, .-_c3hvy


==================== Asm code ====================
2018-03-16 15:57:55.578266464 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hvy_info:
	.quad	_c3hvy
	.quad	2
	.quad	72537702662174
	.quad	S3bQP_srt+1176


==================== Asm code ====================
2018-03-16 15:57:55.579046163 UTC

.section .text
.align 8
_c3hvD:
_c3hvD:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c3hH4
_c3hH6:
	leaq block_c3hvI_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c3hvI
_c3hvJ:
	movq (%rbx),%rax
	jmp *(%rax)
_c3hH4:
	leaq lvl13_r2UqM_closure(%rip),%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3hvD, .-_c3hvD


==================== Asm code ====================
2018-03-16 15:57:55.579807431 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hvD_info:
	.quad	_c3hvD
	.quad	1
	.quad	12884901918
	.quad	S3bQP_srt+1232


==================== Asm code ====================
2018-03-16 15:57:55.581145786 UTC

.section .text
.align 8
_c3hvI:
_c3hvI:
	cmpq $48,7(%rbx)
	je _c3hHt
_u3hJj:
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp _c3hvQ
_c3hHt:
	leaq block_c3hHs_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq 8(%rbp),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c3hHs
_c3hHu:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3hvI, .-_c3hvI


==================== Asm code ====================
2018-03-16 15:57:55.581962417 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hvI_info:
	.quad	_c3hvI
	.quad	2
	.quad	4294967326
	.quad	S3bQP_srt+1240


==================== Asm code ====================
2018-03-16 15:57:55.58275601 UTC

.section .text
.align 8
_c3hHs:
_c3hHs:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c3hHA
	jmp _c3hvQ
_c3hHA:
	leaq lvl16_r2UqP_closure(%rip),%rbx
	addq $32,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3hHs, .-_c3hHs


==================== Asm code ====================
2018-03-16 15:57:55.583369218 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hHs_info:
	.quad	_c3hHs
	.quad	3
	.quad	4294967326
	.quad	S3bQP_srt+1240


==================== Asm code ====================
2018-03-16 15:57:55.584163205 UTC

.section .text
.align 8
_c3hvQ:
_c3hvQ:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3hHa
_c3hH9:
	leaq show_e'_s3bo7_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 24(%rbp),%rax
	movq %rax,(%r12)
	leaq block_c3hwf_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%rbx
	leaq -16(%r12),%rax
	movq %rax,24(%rbp)
	testb $7,%bl
	jne _c3hwf
_c3hwg:
	movq (%rbx),%rax
	jmp *(%rax)
_c3hHa:
	movq $24,904(%r13)
	leaq block_c3hvQ_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c3hvQ, .-_c3hvQ


==================== Asm code ====================
2018-03-16 15:57:55.584850288 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hvQ_info:
	.quad	_c3hvQ
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.585881853 UTC

.section .text
.align 8
_c3hwf:
_c3hwf:
	movq 24(%rbp),%rax
	movq 8(%rbp),%rcx
	movq %rbx,%rdx
	andl $7,%edx
	cmpq $1,%rdx
	je _c3hHd
_c3hHj:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _c3hHm
_c3hHl:
	leaq sat_s3boj_info(%rip),%rdx
	movq %rdx,-72(%r12)
	movq %rax,-56(%r12)
	movq %rbx,-48(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-40(%r12)
	leaq lvl14_r2UqN_closure+1(%rip),%rax
	movq %rax,-32(%r12)
	leaq -72(%r12),%rax
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rcx,-8(%r12)
	leaq -38(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3hHm:
	movq $80,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c3hHg:
	movq $48,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c3hHd:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c3hHg
_c3hHf:
	leaq sat_s3bof_info(%rip),%rbx
	movq %rbx,-40(%r12)
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rcx,-8(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3hwf, .-_c3hwf


==================== Asm code ====================
2018-03-16 15:57:55.586779426 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hwf_info:
	.quad	_c3hwf
	.quad	131
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.587609826 UTC

.section .text
.align 8
_c3hzU:
_c3hzU:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c3hx7
_c3hHU:
	leaq block_c3hA0_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c3hA0
_c3hA1:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3hzU, .-_c3hzU


==================== Asm code ====================
2018-03-16 15:57:55.588282556 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hzU_info:
	.quad	_c3hzU
	.quad	3
	.quad	70888435220510
	.quad	S3bQP_srt+1176


==================== Asm code ====================
2018-03-16 15:57:55.588987812 UTC

.section .text
.align 8
_c3hA0:
_c3hA0:
	cmpq $0,7(%rbx)
	je _c3hHY
_u3hJi:
	addq $8,%rbp
	jmp _c3hx7
_c3hHY:
	movq 8(%rbp),%rax
	leaq block_c3hA8_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c3hA8
_c3hA9:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3hA0, .-_c3hA0


==================== Asm code ====================
2018-03-16 15:57:55.589658707 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hA0_info:
	.quad	_c3hA0
	.quad	4
	.quad	70888435220510
	.quad	S3bQP_srt+1176


==================== Asm code ====================
2018-03-16 15:57:55.590505604 UTC

.section .text
.align 8
_c3hA8:
_c3hA8:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c3hI2
	jmp _c3hx7
_c3hI5:
	movq $72,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c3hI2:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c3hI5
_c3hI4:
	leaq sat_s3bpt_info(%rip),%rax
	movq %rax,-64(%r12)
	movq 8(%rbp),%rax
	movq %rax,-48(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-40(%r12)
	leaq lvl14_r2UqN_closure+1(%rip),%rax
	movq %rax,-32(%r12)
	leaq -64(%r12),%rax
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq lvl20_r2UqT_closure+1(%rip),%rax
	movq %rax,-8(%r12)
	leaq -38(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3hA8, .-_c3hA8


==================== Asm code ====================
2018-03-16 15:57:55.591245963 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hA8_info:
	.quad	_c3hA8
	.quad	3
	.quad	70888435220510
	.quad	S3bQP_srt+1176


==================== Asm code ====================
2018-03-16 15:57:55.592144935 UTC

.section .text
.align 8
_c3hx7:
_c3hx7:
	addq $168,%r12
	cmpq 856(%r13),%r12
	ja _c3hHO
_c3hHN:
	leaq ds5_s3bow_info(%rip),%rax
	movq %rax,-160(%r12)
	movq 16(%rbp),%rax
	movq %rax,-144(%r12)
	movq 8(%rbp),%rax
	movq %rax,-136(%r12)
	leaq ds6_s3boE_info(%rip),%rax
	movq %rax,-128(%r12)
	leaq -160(%r12),%rax
	movq %rax,-112(%r12)
	leaq sat_s3bph_info(%rip),%rbx
	movq %rbx,-104(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-88(%r12)
	movq %rax,-80(%r12)
	leaq -128(%r12),%rax
	movq %rax,-72(%r12)
	movq :_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-64(%r12)
	leaq lvl14_r2UqN_closure+1(%rip),%rbx
	movq %rbx,-56(%r12)
	leaq -104(%r12),%rbx
	movq %rbx,-48(%r12)
	movq stg_sel_0_upd_info@gotpcrel(%rip),%rbx
	movq %rbx,-40(%r12)
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -62(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3hHO:
	movq $168,904(%r13)
	leaq block_c3hx7_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c3hx7, .-_c3hx7


==================== Asm code ====================
2018-03-16 15:57:55.593357473 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hx7_info:
	.quad	_c3hx7
	.quad	3
	.quad	244813135902
	.quad	S3bQP_srt+1176


==================== Asm code ====================
2018-03-16 15:57:55.594354125 UTC

.section .text
.align 8
_c3hAw:
_c3hAw:
	movq 40(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c3hId
_c3hIl:
	leaq block_c3hBJ_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq 6(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,40(%rbp)
	testb $7,%bl
	jne _c3hBJ
_c3hBK:
	movq (%rbx),%rax
	jmp *(%rax)
_c3hId:
	leaq block_c3hAB_info(%rip),%rcx
	movq %rcx,24(%rbp)
	movq %rax,%rbx
	addq $24,%rbp
	testb $7,%bl
	jne _c3hAB
_c3hAC:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3hAw, .-_c3hAw


==================== Asm code ====================
2018-03-16 15:57:55.595187533 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hAw_info:
	.quad	_c3hAw
	.quad	389
	.quad	906238099486
	.quad	S3bQP_srt+1144


==================== Asm code ====================
2018-03-16 15:57:55.596086908 UTC

.section .text
.align 8
_c3hAB:
_c3hAB:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c3hIg
_c3hIf:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	testq %rbx,%rbx
	jg _c3hIi
_c3hIj:
	leaq sat_s3bpL_info(%rip),%rcx
	movq %rcx,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rsi
	leaq lvl36_r2Urb_bytes(%rip),%r14
	addq $24,%rbp
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_c3hIi:
	leaq sat_s3bpB_info(%rip),%rcx
	movq %rcx,-24(%r12)
	movq %rax,-8(%r12)
	leaq -24(%r12),%rax
	addq $-8,%r12
	movq %rax,%rdi
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rsi
	movq %rbx,%r14
	addq $24,%rbp
	jmp $wf_r2UqX_entry
_c3hIg:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3hAB, .-_c3hAB


==================== Asm code ====================
2018-03-16 15:57:55.596849108 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hAB_info:
	.quad	_c3hAB
	.quad	130
	.quad	38654705694
	.quad	S3bQP_srt+1152


==================== Asm code ====================
2018-03-16 15:57:55.597837124 UTC

.section .text
.align 8
_c3hBJ:
_c3hBJ:
	addq $120,%r12
	cmpq 856(%r13),%r12
	ja _c3hIo
_c3hIn:
	movq 32(%rbp),%rax
	movq 40(%rbp),%rcx
	movq 7(%rbx),%rdx
	testq %rdx,%rdx
	jl _c3hIs
_c3hIt:
	leaq sat_s3bqu_info(%rip),%rsi
	movq %rsi,-112(%r12)
	movq %rcx,-96(%r12)
	movq %rbx,-88(%r12)
	movq %rdx,-80(%r12)
	leaq -112(%r12),%rbx
	addq $-80,%r12
	leaq block_c3hEz_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq %rax,%rdi
	movq %rbx,%rsi
	leaq base_r2UqK_closure+1(%rip),%r14
	movq %rdx,40(%rbp)
	jmp GHC.Float.$wroundTo_entry
_c3hIs:
	leaq ds4_s3bpQ_info(%rip),%rsi
	movq %rsi,-112(%r12)
	movq %rax,-96(%r12)
	movq %rcx,-88(%r12)
	movq %rdx,-80(%r12)
	leaq sat_s3bqp_info(%rip),%rax
	movq %rax,-72(%r12)
	movq 8(%rbp),%rax
	movq %rax,-56(%r12)
	leaq -112(%r12),%rax
	movq %rax,-48(%r12)
	movq stg_sel_0_upd_info@gotpcrel(%rip),%rcx
	movq %rcx,-40(%r12)
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -72(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3hIo:
	movq $120,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3hBJ, .-_c3hBJ


==================== Asm code ====================
2018-03-16 15:57:55.598695954 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hBJ_info:
	.quad	_c3hBJ
	.quad	389
	.quad	897648164894
	.quad	S3bQP_srt+1144


==================== Asm code ====================
2018-03-16 15:57:55.59935647 UTC

.section .text
.align 8
_c3hEz:
_c3hEz:
	leaq block_c3hEB_info(%rip),%rax
	movq %rax,(%rbp)
	movq %r14,32(%rbp)
	testb $7,%bl
	jne _c3hEB
_c3hEC:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3hEz, .-_c3hEz


==================== Asm code ====================
2018-03-16 15:57:55.599930072 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hEz_info:
	.quad	_c3hEz
	.quad	1925
	.quad	73014444062
	.quad	S3bQP_srt+1144


==================== Asm code ====================
2018-03-16 15:57:55.600780719 UTC

.section .text
.align 8
_c3hEB:
_c3hEB:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c3hIx
_c3hIw:
	movq 32(%rbp),%rax
	addq $7,%rbx
	movq 40(%rbp),%rcx
	addq (%rbx),%rcx
	testq %rcx,%rcx
	jg _c3hIz
_c3hIN:
	leaq sat_s3bqY_info(%rip),%rbx
	movq %rbx,-24(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -24(%r12),%rsi
	leaq lvl23_r2UqW_closure(%rip),%r14
	addq $48,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_c3hIz:
	addq $-32,%r12
	leaq block_c3hEM_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rsi
	movq GHC.Show.intToDigit_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r14
	movq %rcx,40(%rbp)
	jmp *GHC.Base.map_entry@gotpcrel(%rip)
_c3hIx:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3hEB, .-_c3hEB


==================== Asm code ====================
2018-03-16 15:57:55.601599647 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hEB_info:
	.quad	_c3hEB
	.quad	1413
	.quad	73014444062
	.quad	S3bQP_srt+1144


==================== Asm code ====================
2018-03-16 15:57:55.602337361 UTC

.section .text
.align 8
_c3hEM:
_c3hEM:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3hIC
_c3hIB:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq 40(%rbp),%rax
	movq %rax,(%r12)
	leaq block_c3hER_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rsi
	leaq -7(%r12),%r14
	jmp *GHC.List.$wsplitAt'_entry@gotpcrel(%rip)
_c3hIC:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3hEM, .-_c3hEM


==================== Asm code ====================
2018-03-16 15:57:55.603007196 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hEM_info:
	.quad	_c3hEM
	.quad	1925
	.quad	4294967326
	.quad	S3bQP_srt+1144


==================== Asm code ====================
2018-03-16 15:57:55.603710708 UTC

.section .text
.align 8
_c3hER:
_c3hER:
	leaq block_c3hET_info(%rip),%rax
	movq %rax,(%rbp)
	movq %r14,40(%rbp)
	testb $7,%bl
	jne _c3hET
_c3hEU:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3hER, .-_c3hER


==================== Asm code ====================
2018-03-16 15:57:55.604298104 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hER_info:
	.quad	_c3hER
	.quad	1925
	.quad	4294967326
	.quad	S3bQP_srt+1144


==================== Asm code ====================
2018-03-16 15:57:55.605176026 UTC

.section .text
.align 8
_c3hET:
_c3hET:
	movq 8(%rbp),%rax
	movq 40(%rbp),%rcx
	movq %rbx,%rdx
	andl $7,%edx
	cmpq $1,%rdx
	je _c3hIF
_c3hIJ:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c3hIM
_c3hIL:
	leaq sat_s3bqT_info(%rip),%rdx
	movq %rdx,-24(%r12)
	movq %rax,-8(%r12)
	movq %rcx,(%r12)
	leaq -24(%r12),%rsi
	movq %rbx,%r14
	addq $48,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_c3hIM:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c3hIF:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c3hIM
_c3hIH:
	leaq sat_s3bqM_info(%rip),%rbx
	movq %rbx,-24(%r12)
	movq %rax,-8(%r12)
	movq %rcx,(%r12)
	leaq -24(%r12),%rsi
	leaq lvl23_r2UqW_closure(%rip),%r14
	addq $48,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
	.size _c3hET, .-_c3hET


==================== Asm code ====================
2018-03-16 15:57:55.606871023 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hET_info:
	.quad	_c3hET
	.quad	901
	.quad	4294967326
	.quad	S3bQP_srt+1144


==================== Asm code ====================
2018-03-16 15:57:55.608110901 UTC

.section .text
.align 8
_c3hIQ:
_c3hIQ:
	movq 24(%rbp),%rax
	movq %rbx,%rcx
	movq 7(%rbx),%rbx
	testq %rbx,%rbx
	jl _c3hJ7
_c3hJ6:
	cmpq $7,%rbx
	jg _c3hJ7
_c3hJ3:
	leaq GHC.Float.FFFixed_closure+2(%rip),%rbx
	movq %rbx,16(%rbp)
	movq %rax,24(%rbp)
	movq %rcx,32(%rbp)
	addq $8,%rbp
	jmp _c3hvq
_c3hJ7:
	leaq GHC.Float.FFExponent_closure+1(%rip),%rbx
	movq %rbx,16(%rbp)
	movq %rax,24(%rbp)
	movq %rcx,32(%rbp)
	addq $8,%rbp
	jmp _c3hvq
	.size _c3hIQ, .-_c3hIQ


==================== Asm code ====================
2018-03-16 15:57:55.60909048 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hIQ_info:
	.quad	_c3hIQ
	.quad	644
	.quad	1160891005403166
	.quad	S3bQP_srt+1144


==================== Asm code ====================
2018-03-16 15:57:55.609815599 UTC

.section .data.rel.ro
.align 8
.align 1
u3hKF_srtd:
	.quad	S3bQP_srt+752
	.quad	68
	.quad	4586362066616451073
	.quad	8


==================== Asm code ====================
2018-03-16 15:57:55.610691952 UTC

.section .text
.align 8
sat_s3br8_entry:
_c3hJT:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c3hJW
_c3hJX:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3hJV_info(%rip),%rax
	movq %rax,-40(%rbp)
	movsd 32(%rbx),%xmm1
	movsd _n3hU5(%rip),%xmm0
	xorpd %xmm0,%xmm1
	leaq GHC.Float.expts4_closure(%rip),%r14
	movq 16(%rbx),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Float.$w$sfloatToDigits_entry
_c3hJW:
	jmp *-16(%r13)
	.size sat_s3br8_entry, .-sat_s3br8_entry
.section .rodata
.align 8
.align 8
_n3hU5:
	.quad	-9223372036854775808


==================== Asm code ====================
2018-03-16 15:57:55.611719611 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3br8_info:
	.quad	sat_s3br8_entry
	.quad	4294967298
	.quad	-4294967281
	.quad	u3hKF_srtd


==================== Asm code ====================
2018-03-16 15:57:55.612718147 UTC

.section .text
.align 8
_c3hJV:
_c3hJV:
	movq %r14,%rdi
	movq %rbx,%rsi
	movq 8(%rbp),%r14
	movq 16(%rbp),%rbx
	addq $24,%rbp
	jmp $wdoFmt_s3bnU_entry
	.size _c3hJV, .-_c3hJV


==================== Asm code ====================
2018-03-16 15:57:55.613634196 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hJV_info:
	.quad	_c3hJV
	.quad	2
	.quad	1160891005403166
	.quad	S3bQP_srt+1144


==================== Asm code ====================
2018-03-16 15:57:55.614362008 UTC

.section .data.rel.ro
.align 8
.align 1
u3hKG_srtd:
	.quad	S3bQP_srt+752
	.quad	69
	.quad	-4637009970238324735
	.quad	27


==================== Asm code ====================
2018-03-16 15:57:55.615757127 UTC

.section .text
.align 8
.globl GHC.Float.$w$sformatRealFloatAlt_entry
.type GHC.Float.$w$sformatRealFloatAlt_entry, @object
GHC.Float.$w$sformatRealFloatAlt_entry:
_c3hK3:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3hK4
_c3hK5:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3hK7
_c3hK6:
	subq $8,%rsp
	movsd %xmm1,%xmm0
	movl $1,%eax
	movq %rsi,%rbx
	movq %rdi,72(%rsp)
	movsd %xmm1,80(%rsp)
	call isDoubleNaN@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c3hK2
_c3hK1:
	addq $-24,%r12
	leaq lvl31_r2Ur5_closure(%rip),%rbx
	movq (%rbx),%rax
	jmp *(%rax)
_c3hKA:
	leaq $wdoFmt_s3bnU_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq 64(%rsp),%rax
	movq %rax,(%r12)
	leaq -13(%r12),%rax
	xorpd %xmm0,%xmm0
	movsd 72(%rsp),%xmm1
	ucomisd %xmm0,%xmm1
	jp _c3hKy
	jb _u3hKB
_c3hKy:
	subq $8,%rsp
	movsd %xmm1,%xmm0
	movq %rax,%rbx
	movl $1,%eax
	call isDoubleNegativeZero@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c3hKu
_u3hKC:
	movq %rbx,-24(%rbp)
	movq %r14,-16(%rbp)
	movsd 72(%rsp),%xmm0
	movsd %xmm0,-8(%rbp)
	addq $-32,%rbp
	jmp _c3hJL
_u3hKB:
	movq %rax,-24(%rbp)
	movq %r14,-16(%rbp)
	movsd %xmm1,-8(%rbp)
	addq $-32,%rbp
	jmp _c3hJL
_c3hKu:
	leaq block_c3hKt_info(%rip),%rax
	movq %rax,-24(%rbp)
	movsd 72(%rsp),%xmm0
	movsd %xmm0,%xmm1
	movq %r14,%rax
	leaq GHC.Float.expts4_closure(%rip),%r14
	movq %rbx,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp GHC.Float.$w$sfloatToDigits_entry
_c3hKc:
	addq $-24,%r12
	leaq lvl29_r2Ur3_closure(%rip),%rbx
	movq (%rbx),%rax
	jmp *(%rax)
_c3hK2:
	subq $8,%rsp
	movsd 80(%rsp),%xmm0
	movl $1,%eax
	call isDoubleInfinite@plt
	addq $8,%rsp
	testq %rax,%rax
	je _c3hKA
_c3hKe:
	xorpd %xmm0,%xmm0
	movsd 72(%rsp),%xmm1
	ucomisd %xmm0,%xmm1
	jp _c3hKb
	jb _c3hKc
_c3hKb:
	addq $-24,%r12
	leaq lvl27_r2Ur1_closure(%rip),%rbx
	movq (%rbx),%rax
	jmp *(%rax)
_c3hK7:
	movq $24,904(%r13)
_c3hK4:
	leaq GHC.Float.$w$sformatRealFloatAlt_closure(%rip),%rbx
	movq %r14,-32(%rbp)
	movq %rsi,-24(%rbp)
	movq %rdi,-16(%rbp)
	movsd %xmm1,-8(%rbp)
	addq $-32,%rbp
	jmp *-8(%r13)
	.size GHC.Float.$w$sformatRealFloatAlt_entry, .-GHC.Float.$w$sformatRealFloatAlt_entry


==================== Asm code ====================
2018-03-16 15:57:55.616855523 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$w$sformatRealFloatAlt_info
.type GHC.Float.$w$sformatRealFloatAlt_info, @object
GHC.Float.$w$sformatRealFloatAlt_info:
	.quad	GHC.Float.$w$sformatRealFloatAlt_entry
	.quad	0
	.quad	-4294967282
	.quad	17179869184
	.quad	u3hKG_srtd
	.quad	516
	.quad	GHC.Float.$w$sformatRealFloatAlt_slow


==================== Asm code ====================
2018-03-16 15:57:55.618132242 UTC

.section .text
.align 8
_c3hKt:
_c3hKt:
	movq %r14,%rdi
	movq %rbx,%rsi
	movq 16(%rbp),%r14
	movq 8(%rbp),%rbx
	addq $24,%rbp
	jmp $wdoFmt_s3bnU_entry
	.size _c3hKt, .-_c3hKt


==================== Asm code ====================
2018-03-16 15:57:55.618897399 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hKt_info:
	.quad	_c3hKt
	.quad	2
	.quad	1160891005403166
	.quad	S3bQP_srt+1144


==================== Asm code ====================
2018-03-16 15:57:55.619604137 UTC

.section .data.rel.ro
.align 8
.align 1
u3hKH_srtd:
	.quad	S3bQP_srt+752
	.quad	68
	.quad	4586362066616451073
	.quad	8


==================== Asm code ====================
2018-03-16 15:57:55.620537436 UTC

.section .text
.align 8
_c3hJL:
_c3hJL:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c3hKi
_c3hKh:
	leaq sat_s3br8_info(%rip),%rax
	movq %rax,-56(%r12)
	movq 16(%rbp),%rax
	movq %rax,-40(%r12)
	movq 8(%rbp),%rax
	movq %rax,-32(%r12)
	movsd 24(%rbp),%xmm0
	movsd %xmm0,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq GHC.Float.$fShowDouble3_closure+1(%rip),%rax
	movq %rax,-8(%r12)
	leaq -56(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3hKi:
	movq $64,904(%r13)
	leaq block_c3hJL_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c3hJL, .-_c3hJL


==================== Asm code ====================
2018-03-16 15:57:55.62177519 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hJL_info:
	.quad	_c3hJL
	.quad	259
	.quad	-4294967266
	.quad	u3hKH_srtd


==================== Asm code ====================
2018-03-16 15:57:55.625035355 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fShowDouble_$sformatRealFloatAlt_closure
.type GHC.Float.$fShowDouble_$sformatRealFloatAlt_closure, @object
GHC.Float.$fShowDouble_$sformatRealFloatAlt_closure:
	.quad	GHC.Float.$fShowDouble_$sformatRealFloatAlt_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:55.625924092 UTC

.section .text
.align 8
.globl GHC.Float.$fShowDouble_$sformatRealFloatAlt_entry
.type GHC.Float.$fShowDouble_$sformatRealFloatAlt_entry, @object
GHC.Float.$fShowDouble_$sformatRealFloatAlt_entry:
_c3hUP:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3hUQ
_c3hUR:
	leaq block_c3hUM_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %r8,%rbx
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c3hUM
_c3hUN:
	movq (%rbx),%rax
	jmp *(%rax)
_c3hUQ:
	leaq GHC.Float.$fShowDouble_$sformatRealFloatAlt_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fShowDouble_$sformatRealFloatAlt_entry, .-GHC.Float.$fShowDouble_$sformatRealFloatAlt_entry


==================== Asm code ====================
2018-03-16 15:57:55.626615792 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fShowDouble_$sformatRealFloatAlt_info
.type GHC.Float.$fShowDouble_$sformatRealFloatAlt_info, @object
GHC.Float.$fShowDouble_$sformatRealFloatAlt_info:
	.quad	GHC.Float.$fShowDouble_$sformatRealFloatAlt_entry
	.quad	0
	.quad	12884901902
	.quad	17179869208
	.quad	S3bQP_srt+1296


==================== Asm code ====================
2018-03-16 15:57:55.627263063 UTC

.section .text
.align 8
_c3hUM:
_c3hUM:
	movsd 7(%rbx),%xmm1
	movq 24(%rbp),%rdi
	movq 16(%rbp),%rsi
	movq 8(%rbp),%r14
	addq $32,%rbp
	jmp GHC.Float.$w$sformatRealFloatAlt_entry
	.size _c3hUM, .-_c3hUM


==================== Asm code ====================
2018-03-16 15:57:55.627891421 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hUM_info:
	.quad	_c3hUM
	.quad	3
	.quad	4294967326
	.quad	S3bQP_srt+1296


==================== Asm code ====================
2018-03-16 15:57:55.63279614 UTC

.section .data
.align 8
.align 1
$wxs3_r2Urf_closure:
	.quad	$wxs3_r2Urf_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:55.634096796 UTC

.section .text
.align 8
sat_s3brr_entry:
_c3hVi:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3hVj
_c3hVk:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	leaq -1(%rax),%r14
	addq $-16,%rbp
	jmp $wxs3_r2Urf_entry
_c3hVj:
	jmp *-16(%r13)
	.size sat_s3brr_entry, .-sat_s3brr_entry


==================== Asm code ====================
2018-03-16 15:57:55.635012933 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3brr_info:
	.quad	sat_s3brr_entry
	.quad	4294967296
	.quad	4294967313
	.quad	S3bQP_srt+1312


==================== Asm code ====================
2018-03-16 15:57:55.636256235 UTC

.section .text
.align 8
$wxs3_r2Urf_entry:
_c3hVo:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c3hVs
_c3hVr:
	cmpq $1,%r14
	je _c3hVn
_c3hVm:
	leaq sat_s3brr_info(%rip),%rax
	movq %rax,-40(%r12)
	movq %r14,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq lvl20_r2UqT_closure+1(%rip),%rax
	movq %rax,-8(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c3hVs:
	movq $48,904(%r13)
	leaq $wxs3_r2Urf_closure(%rip),%rbx
	jmp *-8(%r13)
_c3hVn:
	addq $-48,%r12
	leaq lvl35_r2Ur9_closure+2(%rip),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size $wxs3_r2Urf_entry, .-$wxs3_r2Urf_entry


==================== Asm code ====================
2018-03-16 15:57:55.637371713 UTC

.section .data.rel.ro
.align 8
.align 1
$wxs3_r2Urf_info:
	.quad	$wxs3_r2Urf_entry
	.quad	0
	.quad	1125904201809934
	.quad	4294967300
	.quad	S3bQP_srt+1168


==================== Asm code ====================
2018-03-16 15:57:55.727524228 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.formatRealFloatAlt_closure
.type GHC.Float.formatRealFloatAlt_closure, @object
GHC.Float.formatRealFloatAlt_closure:
	.quad	GHC.Float.formatRealFloatAlt_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:55.728387626 UTC

.section .text
.align 8
$dNum_s3brA_entry:
_c3hW4:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3hW5
_c3hW6:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp *GHC.Real.$p1Real_entry@gotpcrel(%rip)
_c3hW5:
	jmp *-16(%r13)
	.size $dNum_s3brA_entry, .-$dNum_s3brA_entry


==================== Asm code ====================
2018-03-16 15:57:55.729014243 UTC

.section .data.rel.ro
.align 8
.align 1
$dNum_s3brA_info:
	.quad	$dNum_s3brA_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:55.729907946 UTC

.section .text
.align 8
show_e'_s3brP_entry:
_c3hWM:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3hWV
_c3hWW:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3hWJ_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _c3hWJ
_c3hWK:
	movq (%rbx),%rax
	jmp *(%rax)
_c3hWV:
	jmp *-16(%r13)
	.size show_e'_s3brP_entry, .-show_e'_s3brP_entry


==================== Asm code ====================
2018-03-16 15:57:55.73054948 UTC

.section .data.rel.ro
.align 8
.align 1
show_e'_s3brP_info:
	.quad	show_e'_s3brP_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:55.731166027 UTC

.section .text
.align 8
_c3hWJ:
_c3hWJ:
	leaq block_c3hWS_info(%rip),%rax
	movq %rax,(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rdi
	movq 7(%rbx),%rax
	leaq -1(%rax),%rsi
	xorl %r14d,%r14d
	jmp *GHC.Show.$wshowSignedInt_entry@gotpcrel(%rip)
	.size _c3hWJ, .-_c3hWJ


==================== Asm code ====================
2018-03-16 15:57:55.731793389 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hWJ_info:
	.quad	_c3hWJ
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.732509384 UTC

.section .text
.align 8
_c3hWS:
_c3hWS:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3hX0
_c3hWZ:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3hX0:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c3hWS, .-_c3hWS


==================== Asm code ====================
2018-03-16 15:57:55.733169959 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hWS_info:
	.quad	_c3hWS
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.733972902 UTC

.section .text
.align 8
sat_s3brX_entry:
_c3hXb:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3hXc
_c3hXd:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rsi
	leaq lvl32_r2Ur6_bytes(%rip),%r14
	addq $-16,%rbp
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_c3hXc:
	jmp *-16(%r13)
	.size sat_s3brX_entry, .-sat_s3brX_entry


==================== Asm code ====================
2018-03-16 15:57:55.734601331 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3brX_info:
	.quad	sat_s3brX_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:55.735193782 UTC

.section .text
.align 8
sat_s3bs0_entry:
_c3hXo:
	movq 16(%rbx),%rsi
	leaq lvl33_r2Ur7_bytes(%rip),%r14
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
	.size sat_s3bs0_entry, .-sat_s3bs0_entry


==================== Asm code ====================
2018-03-16 15:57:55.735781043 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bs0_info:
	.quad	sat_s3bs0_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:55.736570892 UTC

.section .text
.align 8
sat_s3bs1_entry:
_c3hXr:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3hXs
_c3hXt:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3hXv
_c3hXu:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	leaq sat_s3bs0_info(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rax,(%r12)
	leaq -16(%r12),%rsi
	movq %rbx,%r14
	addq $-16,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_c3hXv:
	movq $24,904(%r13)
_c3hXs:
	jmp *-16(%r13)
	.size sat_s3bs1_entry, .-sat_s3bs1_entry


==================== Asm code ====================
2018-03-16 15:57:55.737331825 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bs1_info:
	.quad	sat_s3bs1_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:55.738050647 UTC

.section .text
.align 8
dec'_s3bs8_entry:
_c3hXF:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3hXG
_c3hXH:
	leaq block_c3hXC_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 16(%rbx),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3hXC
_c3hXD:
	movq (%rbx),%rax
	jmp *(%rax)
_c3hXG:
	jmp *-16(%r13)
	.size dec'_s3bs8_entry, .-dec'_s3bs8_entry


==================== Asm code ====================
2018-03-16 15:57:55.738657908 UTC

.section .data.rel.ro
.align 8
.align 1
dec'_s3bs8_info:
	.quad	dec'_s3bs8_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:55.739345425 UTC

.section .text
.align 8
_c3hXC:
_c3hXC:
	cmpq $1,7(%rbx)
	jg _c3hXO
_c3hXP:
	leaq GHC.Float.$fRealFracFloat2_closure+1(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3hXO:
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3hXC, .-_c3hXC


==================== Asm code ====================
2018-03-16 15:57:55.739952744 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hXC_info:
	.quad	_c3hXC
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.740602486 UTC

.section .text
.align 8
sat_s3bsi_entry:
_c3hY6:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3hYd
_c3hYe:
	leaq block_c3hY4_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 16(%rbx),%rbx
	addq $-8,%rbp
	jmp dec'_s3bs8_entry
_c3hYd:
	jmp *-16(%r13)
	.size sat_s3bsi_entry, .-sat_s3bsi_entry


==================== Asm code ====================
2018-03-16 15:57:55.741226472 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bsi_info:
	.quad	sat_s3bsi_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:55.742035156 UTC

.section .text
.align 8
_c3hY4:
_c3hY4:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3hYh
_c3hYg:
	movq 7(%rbx),%rax
	incq %rax
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3hYh:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3hY4, .-_c3hY4


==================== Asm code ====================
2018-03-16 15:57:55.742664549 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hY4_info:
	.quad	_c3hY4
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.743449466 UTC

.section .text
.align 8
ds1_s3bse_entry:
_c3hYl:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3hYm
_c3hYn:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3hYp
_c3hYo:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	leaq sat_s3bsi_info(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rbx,(%r12)
	leaq block_c3hYi_info(%rip),%rbx
	movq %rbx,-24(%rbp)
	movq %rax,%rdi
	leaq -16(%r12),%rsi
	leaq base_r2UqK_closure+1(%rip),%r14
	addq $-24,%rbp
	jmp GHC.Float.$wroundTo_entry
_c3hYp:
	movq $24,904(%r13)
_c3hYm:
	jmp *-16(%r13)
	.size ds1_s3bse_entry, .-ds1_s3bse_entry


==================== Asm code ====================
2018-03-16 15:57:55.744153059 UTC

.section .data.rel.ro
.align 8
.align 1
ds1_s3bse_info:
	.quad	ds1_s3bse_entry
	.quad	2
	.quad	4294967314
	.quad	S3bQP_srt+1200


==================== Asm code ====================
2018-03-16 15:57:55.744868019 UTC

.section .text
.align 8
_c3hYi:
_c3hYi:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3hYs
_c3hYr:
	movq (,)_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3hYs:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c3hYi, .-_c3hYi


==================== Asm code ====================
2018-03-16 15:57:55.745602303 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hYi_info:
	.quad	_c3hYi
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.746335083 UTC

.section .text
.align 8
ds2_s3bsm_entry:
_c3hYA:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3hYE
_c3hYF:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3hYx_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _c3hYx
_c3hYy:
	movq (%rbx),%rax
	jmp *(%rax)
_c3hYE:
	jmp *-16(%r13)
	.size ds2_s3bsm_entry, .-ds2_s3bsm_entry


==================== Asm code ====================
2018-03-16 15:57:55.746973691 UTC

.section .data.rel.ro
.align 8
.align 1
ds2_s3bsm_info:
	.quad	ds2_s3bsm_entry
	.quad	1
	.quad	210453397520
	.quad	S3bQP_srt+1176


==================== Asm code ====================
2018-03-16 15:57:55.747677926 UTC

.section .text
.align 8
_c3hYx:
_c3hYx:
	leaq block_c3hYD_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 15(%rbx),%rax
	movq 7(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c3hYD
_c3hYH:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3hYx, .-_c3hYx


==================== Asm code ====================
2018-03-16 15:57:55.748265907 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hYx_info:
	.quad	_c3hYx
	.quad	0
	.quad	210453397534
	.quad	S3bQP_srt+1176


==================== Asm code ====================
2018-03-16 15:57:55.74903572 UTC

.section .text
.align 8
_c3hYD:
_c3hYD:
	movq 8(%rbp),%rax
	cmpq $0,7(%rbx)
	jle _c3hYR
_c3hZ7:
	leaq block_c3hZ6_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c3hZ6
_c3hZ8:
	movq (%rbx),%rax
	jmp *(%rax)
_c3hYR:
	leaq block_c3hYP_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rsi
	movq GHC.Show.intToDigit_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r14
	addq $8,%rbp
	jmp *GHC.Base.map_entry@gotpcrel(%rip)
	.size _c3hYD, .-_c3hYD


==================== Asm code ====================
2018-03-16 15:57:55.749836321 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hYD_info:
	.quad	_c3hYD
	.quad	1
	.quad	210453397534
	.quad	S3bQP_srt+1176


==================== Asm code ====================
2018-03-16 15:57:55.750635986 UTC

.section .text
.align 8
_c3hYP:
_c3hYP:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _u3hZF
_c3hZ1:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3hZ4
_c3hZ3:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq (,)_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u3hZF:
	addq $8,%rbp
	jmp _c3hZu
_c3hZ4:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3hYP, .-_c3hYP


==================== Asm code ====================
2018-03-16 15:57:55.75127173 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hYP_info:
	.quad	_c3hYP
	.quad	0
	.quad	4294967326
	.quad	S3bQP_srt+1216


==================== Asm code ====================
2018-03-16 15:57:55.751959553 UTC

.section .text
.align 8
_c3hZ6:
_c3hZ6:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c3hZe
_c3hZj:
	leaq block_c3hZh_info(%rip),%rax
	movq %rax,(%rbp)
	movq 14(%rbx),%rsi
	movq 6(%rbx),%r14
	jmp *GHC.List.init1_entry@gotpcrel(%rip)
_c3hZe:
	movq GHC.List.init2_closure@gotpcrel(%rip),%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3hZ6, .-_c3hZ6


==================== Asm code ====================
2018-03-16 15:57:55.752610453 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hZ6_info:
	.quad	_c3hZ6
	.quad	0
	.quad	210453397534
	.quad	S3bQP_srt+1176


==================== Asm code ====================
2018-03-16 15:57:55.753348348 UTC

.section .text
.align 8
_c3hZh:
_c3hZh:
	leaq block_c3hZn_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rsi
	movq GHC.Show.intToDigit_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r14
	jmp *GHC.Base.map_entry@gotpcrel(%rip)
	.size _c3hZh, .-_c3hZh


==================== Asm code ====================
2018-03-16 15:57:55.75404301 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hZh_info:
	.quad	_c3hZh
	.quad	0
	.quad	141733920798
	.quad	S3bQP_srt+1176


==================== Asm code ====================
2018-03-16 15:57:55.754808717 UTC

.section .text
.align 8
_c3hZn:
_c3hZn:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _u3hZG
_c3hZy:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3hZB
_c3hZA:
	movq 6(%rbx),%rax
	movq 14(%rbx),%rbx
	movq (,)_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -15(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_u3hZG:
	addq $8,%rbp
	jmp _c3hZu
_c3hZB:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3hZn, .-_c3hZn


==================== Asm code ====================
2018-03-16 15:57:55.75552566 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hZn_info:
	.quad	_c3hZn
	.quad	0
	.quad	4294967326
	.quad	S3bQP_srt+1216


==================== Asm code ====================
2018-03-16 15:57:55.756127546 UTC

.section .text
.align 8
_c3hZu:
_c3hZu:
	leaq lvl18_r2UqR_closure(%rip),%rbx
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3hZu, .-_c3hZu


==================== Asm code ====================
2018-03-16 15:57:55.758169504 UTC

.section .text
.align 8
sat_s3bsX_entry:
_c3i02:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3i0o
_c3i0p:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3hZZ_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 24(%rbx),%rax
	movq 16(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c3hZZ
_c3i00:
	movq (%rbx),%rax
	jmp *(%rax)
_c3i0o:
	jmp *-16(%r13)
	.size sat_s3bsX_entry, .-sat_s3bsX_entry


==================== Asm code ====================
2018-03-16 15:57:55.759020976 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bsX_info:
	.quad	sat_s3bsX_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:55.759924117 UTC

.section .text
.align 8
_c3hZZ:
_c3hZZ:
	leaq block_c3i05_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rax
	movq 8(%rbp),%rbx
	movq %rax,8(%rbp)
	testb $7,%bl
	jne _c3i05
_c3i06:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3hZZ, .-_c3hZZ


==================== Asm code ====================
2018-03-16 15:57:55.760502388 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hZZ_info:
	.quad	_c3hZZ
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.761145415 UTC

.section .text
.align 8
_c3i05:
_c3i05:
	leaq block_c3i0a_info(%rip),%rax
	movq %rax,(%rbp)
	movq 7(%rbx),%rbx
	testb $7,%bl
	jne _c3i0a
_c3i0b:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3i05, .-_c3i05


==================== Asm code ====================
2018-03-16 15:57:55.7625329 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3i05_info:
	.quad	_c3i05
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.763268625 UTC

.section .text
.align 8
_c3i0a:
_c3i0a:
	movq 7(%rbx),%rax
	decq %rax
	movq 8(%rbp),%rbx
	addq %rax,%rbx
	leaq block_c3i0l_info(%rip),%rax
	movq %rax,8(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rdi
	movq %rbx,%rsi
	xorl %r14d,%r14d
	addq $8,%rbp
	jmp *GHC.Show.$wshowSignedInt_entry@gotpcrel(%rip)
	.size _c3i0a, .-_c3i0a


==================== Asm code ====================
2018-03-16 15:57:55.763924842 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3i0a_info:
	.quad	_c3i0a
	.quad	65
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.764631254 UTC

.section .text
.align 8
_c3i0l:
_c3i0l:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3i0v
_c3i0u:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,-8(%r12)
	movq %r14,(%r12)
	leaq -14(%r12),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3i0v:
	movq $24,904(%r13)
	jmp *stg_gc_pp@gotpcrel(%rip)
	.size _c3i0l, .-_c3i0l


==================== Asm code ====================
2018-03-16 15:57:55.765233721 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3i0l_info:
	.quad	_c3i0l
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.76613448 UTC

.section .text
.align 8
sat_s3bsZ_entry:
_c3i0z:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c3i0B
_c3i0C:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3hZQ_info(%rip),%rax
	movq %rax,-40(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	movq %rax,-32(%rbp)
	movq %rcx,-24(%rbp)
	addq $-40,%rbp
	testb $7,%bl
	jne _c3hZQ
_c3hZR:
	movq (%rbx),%rax
	jmp *(%rax)
_c3i0B:
	jmp *-16(%r13)
	.size sat_s3bsZ_entry, .-sat_s3bsZ_entry


==================== Asm code ====================
2018-03-16 15:57:55.766812676 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bsZ_info:
	.quad	sat_s3bsZ_entry
	.quad	3
	.quad	15


==================== Asm code ====================
2018-03-16 15:57:55.767560475 UTC

.section .text
.align 8
_c3hZQ:
_c3hZQ:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c3i0F
_c3i0E:
	movq 15(%rbx),%rax
	leaq sat_s3bsX_info(%rip),%rbx
	movq %rbx,-48(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-16(%r12)
	leaq lvl19_r2UqS_closure+1(%rip),%rbx
	movq %rbx,-8(%r12)
	leaq -48(%r12),%rbx
	movq %rbx,(%r12)
	leaq -14(%r12),%rsi
	movq %rax,%r14
	addq $24,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_c3i0F:
	movq $56,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3hZQ, .-_c3hZQ


==================== Asm code ====================
2018-03-16 15:57:55.768244051 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hZQ_info:
	.quad	_c3hZQ
	.quad	2
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.768978836 UTC

.section .text
.align 8
sat_s3btb_entry:
_c3i16:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3i17
_c3i18:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3i14_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	jmp dec'_s3bs8_entry
_c3i17:
	jmp *-16(%r13)
	.size sat_s3btb_entry, .-sat_s3btb_entry


==================== Asm code ====================
2018-03-16 15:57:55.769661191 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3btb_info:
	.quad	sat_s3btb_entry
	.quad	1
	.quad	8800387989520
	.quad	S3bQP_srt+1224


==================== Asm code ====================
2018-03-16 15:57:55.770354308 UTC

.section .text
.align 8
_c3i14:
_c3i14:
	movq 7(%rbx),%rax
	cmpq $0,%rax
	jle _c3i1f
_c3i1g:
	movq %rax,%r14
	addq $8,%rbp
	jmp $wxs3_r2Urf_entry
_c3i1f:
	leaq lvl34_r2Ur8_closure(%rip),%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3i14, .-_c3i14


==================== Asm code ====================
2018-03-16 15:57:55.77098636 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3i14_info:
	.quad	_c3i14
	.quad	0
	.quad	8800387989534
	.quad	S3bQP_srt+1224


==================== Asm code ====================
2018-03-16 15:57:55.771584948 UTC

.section .text
.align 8
sat_s3btj_entry:
_c3i1A:
	movq 16(%rbx),%rsi
	movq GHC.Show.intToDigit_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r14
	jmp *GHC.Base.map_entry@gotpcrel(%rip)
	.size sat_s3btj_entry, .-sat_s3btj_entry


==================== Asm code ====================
2018-03-16 15:57:55.772210124 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3btj_info:
	.quad	sat_s3btj_entry
	.quad	1
	.quad	4294967312
	.quad	S3bQP_srt+1176


==================== Asm code ====================
2018-03-16 15:57:55.772940908 UTC

.section .text
.align 8
n1_s3btm_entry:
_c3i1T:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3i1U
_c3i1V:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rsi
	movq GHC.Show.intToDigit_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r14
	addq $-16,%rbp
	jmp *GHC.Base.map_entry@gotpcrel(%rip)
_c3i1U:
	jmp *-16(%r13)
	.size n1_s3btm_entry, .-n1_s3btm_entry


==================== Asm code ====================
2018-03-16 15:57:55.773664282 UTC

.section .data.rel.ro
.align 8
.align 1
n1_s3btm_info:
	.quad	n1_s3btm_entry
	.quad	1
	.quad	4294967312
	.quad	S3bQP_srt+1176


==================== Asm code ====================
2018-03-16 15:57:55.774437731 UTC

.section .text
.align 8
sat_s3bts_entry:
_c3i2a:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3i2b
_c3i2c:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	leaq -1(%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp $wxs4_s3bto_entry
_c3i2b:
	jmp *-16(%r13)
	.size sat_s3bts_entry, .-sat_s3bts_entry


==================== Asm code ====================
2018-03-16 15:57:55.775047328 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bts_info:
	.quad	sat_s3bts_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 15:57:55.775823704 UTC

.section .text
.align 8
$wxs4_s3bto_entry:
_c3i2g:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c3i2k
_c3i2j:
	cmpq $1,%r14
	je _c3i2f
_c3i2e:
	leaq sat_s3bts_info(%rip),%rax
	movq %rax,-48(%r12)
	movq %rbx,-32(%r12)
	movq %r14,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq lvl20_r2UqT_closure+1(%rip),%rax
	movq %rax,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c3i2k:
	movq $56,904(%r13)
	jmp *-8(%r13)
_c3i2f:
	movq 7(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size $wxs4_s3bto_entry, .-$wxs4_s3bto_entry


==================== Asm code ====================
2018-03-16 15:57:55.776549679 UTC

.section .data.rel.ro
.align 8
.align 1
$wxs4_s3bto_info:
	.quad	$wxs4_s3bto_entry
	.quad	1
	.quad	9
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:57:55.777588776 UTC

.section .text
.align 8
sat_s3btt_entry:
_c3i2m:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3i2n
_c3i2o:
	addq $64,%r12
	cmpq 856(%r13),%r12
	ja _c3i2q
_c3i2p:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	negq %rbx
	cmpq $0,%rbx
	jle _c3i2s
_c3i2t:
	leaq n1_s3btm_info(%rip),%rcx
	movq %rcx,-56(%r12)
	movq %rax,-40(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-32(%r12)
	leaq lvl20_r2UqT_closure+1(%rip),%rax
	movq %rax,-24(%r12)
	leaq -56(%r12),%rax
	movq %rax,-16(%r12)
	leaq $wxs4_s3bto_info(%rip),%rax
	movq %rax,-8(%r12)
	leaq -30(%r12),%rax
	movq %rax,(%r12)
	movq %rbx,%r14
	leaq -7(%r12),%rbx
	addq $-16,%rbp
	jmp $wxs4_s3bto_entry
_c3i2s:
	addq $-64,%r12
	movq %rax,%rsi
	movq GHC.Show.intToDigit_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r14
	addq $-16,%rbp
	jmp *GHC.Base.map_entry@gotpcrel(%rip)
_c3i2q:
	movq $64,904(%r13)
_c3i2n:
	jmp *-16(%r13)
	.size sat_s3btt_entry, .-sat_s3btt_entry


==================== Asm code ====================
2018-03-16 15:57:55.778412754 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3btt_info:
	.quad	sat_s3btt_entry
	.quad	4294967297
	.quad	4294967315
	.quad	S3bQP_srt+1176


==================== Asm code ====================
2018-03-16 15:57:55.779158426 UTC

.section .text
.align 8
sat_s3btE_entry:
_c3i2V:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3i2W
_c3i2X:
	leaq block_c3i2S_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 16(%rbx),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3i2S
_c3i2T:
	movq (%rbx),%rax
	jmp *(%rax)
_c3i2W:
	jmp *-16(%r13)
	.size sat_s3btE_entry, .-sat_s3btE_entry


==================== Asm code ====================
2018-03-16 15:57:55.779803683 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3btE_info:
	.quad	sat_s3btE_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:55.780497556 UTC

.section .text
.align 8
_c3i2S:
_c3i2S:
	cmpq $0,7(%rbx)
	jg _c3i34
_c3i35:
	leaq GHC.Float.minExpt_closure+1(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3i34:
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3i2S, .-_c3i2S


==================== Asm code ====================
2018-03-16 15:57:55.781152095 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3i2S_info:
	.quad	_c3i2S
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.781913803 UTC

.section .text
.align 8
sat_s3btN_entry:
_c3i3m:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3i3n
_c3i3o:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	leaq -1(%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp $wxs4_s3btJ_entry
_c3i3n:
	jmp *-16(%r13)
	.size sat_s3btN_entry, .-sat_s3btN_entry


==================== Asm code ====================
2018-03-16 15:57:55.782552741 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3btN_info:
	.quad	sat_s3btN_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 15:57:55.783419687 UTC

.section .text
.align 8
$wxs4_s3btJ_entry:
_c3i3s:
	addq $56,%r12
	cmpq 856(%r13),%r12
	ja _c3i3w
_c3i3v:
	cmpq $1,%r14
	je _c3i3r
_c3i3q:
	leaq sat_s3btN_info(%rip),%rax
	movq %rax,-48(%r12)
	movq %rbx,-32(%r12)
	movq %r14,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq GHC.Float.minExpt_closure+1(%rip),%rax
	movq %rax,-8(%r12)
	leaq -48(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
_c3i3w:
	movq $56,904(%r13)
	jmp *-8(%r13)
_c3i3r:
	movq 7(%rbx),%rax
	addq $-56,%r12
	movq %rax,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size $wxs4_s3btJ_entry, .-$wxs4_s3btJ_entry


==================== Asm code ====================
2018-03-16 15:57:55.784214744 UTC

.section .data.rel.ro
.align 8
.align 1
$wxs4_s3btJ_info:
	.quad	$wxs4_s3btJ_entry
	.quad	1
	.quad	9
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:57:55.785017329 UTC

.section .text
.align 8
sat_s3btR_entry:
_c3i3J:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3i3K
_c3i3L:
	leaq block_c3i3G_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 16(%rbx),%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3i3G
_c3i3H:
	movq (%rbx),%rax
	jmp *(%rax)
_c3i3K:
	jmp *-16(%r13)
	.size sat_s3btR_entry, .-sat_s3btR_entry


==================== Asm code ====================
2018-03-16 15:57:55.785733355 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3btR_info:
	.quad	sat_s3btR_entry
	.quad	1
	.quad	16


==================== Asm code ====================
2018-03-16 15:57:55.786385967 UTC

.section .text
.align 8
_c3i3G:
_c3i3G:
	cmpq $0,7(%rbx)
	jg _c3i3S
_c3i3T:
	leaq GHC.Float.minExpt_closure+1(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3i3S:
	andq $-8,%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3i3G, .-_c3i3G


==================== Asm code ====================
2018-03-16 15:57:55.787014493 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3i3G_info:
	.quad	_c3i3G
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.787978776 UTC

.section .text
.align 8
ds_s3bty_entry:
_c3i3V:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3i3W
_c3i3X:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _c3i3Z
_c3i3Y:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rbx
	negq %rbx
	cmpq $0,%rbx
	jle _c3i42
_c3i46:
	movq :_con_info@gotpcrel(%rip),%rdx
	movq %rdx,-32(%r12)
	leaq GHC.Float.minExpt_closure+1(%rip),%rdx
	movq %rdx,-24(%r12)
	movq %rax,-16(%r12)
	leaq $wxs4_s3btJ_info(%rip),%rax
	movq %rax,-8(%r12)
	leaq -30(%r12),%rax
	movq %rax,(%r12)
	leaq block_c3i3y_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq %rbx,%r14
	leaq -7(%r12),%rbx
	movq %rcx,-24(%rbp)
	addq $-32,%rbp
	jmp $wxs4_s3btJ_entry
_c3i42:
	leaq sat_s3btE_info(%rip),%rbx
	movq %rbx,-32(%r12)
	movq %rcx,-16(%r12)
	leaq -32(%r12),%rbx
	addq $-16,%r12
	leaq block_c3i40_info(%rip),%rcx
	movq %rcx,-24(%rbp)
	movq %rax,%rdi
	movq %rbx,%rsi
	leaq base_r2UqK_closure+1(%rip),%r14
	addq $-24,%rbp
	jmp GHC.Float.$wroundTo_entry
_c3i3Z:
	movq $40,904(%r13)
_c3i3W:
	jmp *-16(%r13)
	.size ds_s3bty_entry, .-ds_s3bty_entry


==================== Asm code ====================
2018-03-16 15:57:55.788906758 UTC

.section .data.rel.ro
.align 8
.align 1
ds_s3bty_info:
	.quad	ds_s3bty_entry
	.quad	4294967298
	.quad	12884901903
	.quad	S3bQP_srt+1192


==================== Asm code ====================
2018-03-16 15:57:55.789879305 UTC

.section .text
.align 8
_c3i40:
_c3i40:
	movq %r14,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp $j_r2Urc_entry
	.size _c3i40, .-_c3i40


==================== Asm code ====================
2018-03-16 15:57:55.790995925 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3i40_info:
	.quad	_c3i40
	.quad	0
	.quad	4294967326
	.quad	S3bQP_srt+1192


==================== Asm code ====================
2018-03-16 15:57:55.791943002 UTC

.section .text
.align 8
_c3i3y:
_c3i3y:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3i49
_c3i48:
	leaq sat_s3btR_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 8(%rbp),%rax
	movq %rax,(%r12)
	leaq block_c3i45_info(%rip),%rax
	movq %rax,8(%rbp)
	movq %rbx,%rdi
	leaq -16(%r12),%rsi
	leaq base_r2UqK_closure+1(%rip),%r14
	addq $8,%rbp
	jmp GHC.Float.$wroundTo_entry
_c3i49:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3i3y, .-_c3i3y


==================== Asm code ====================
2018-03-16 15:57:55.792692426 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3i3y_info:
	.quad	_c3i3y
	.quad	1
	.quad	12884901918
	.quad	S3bQP_srt+1192


==================== Asm code ====================
2018-03-16 15:57:55.79339919 UTC

.section .text
.align 8
_c3i45:
_c3i45:
	movq %r14,%rsi
	movq %rbx,%r14
	addq $8,%rbp
	jmp $j_r2Urc_entry
	.size _c3i45, .-_c3i45


==================== Asm code ====================
2018-03-16 15:57:55.793988447 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3i45_info:
	.quad	_c3i45
	.quad	0
	.quad	4294967326
	.quad	S3bQP_srt+1192


==================== Asm code ====================
2018-03-16 15:57:55.79481004 UTC

.section .text
.align 8
sat_s3bu7_entry:
_c3i4j:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3i4k
_c3i4l:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3i4g_info(%rip),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	testb $7,%bl
	jne _c3i4g
_c3i4h:
	movq (%rbx),%rax
	jmp *(%rax)
_c3i4k:
	jmp *-16(%r13)
	.size sat_s3bu7_entry, .-sat_s3bu7_entry


==================== Asm code ====================
2018-03-16 15:57:55.795506696 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bu7_info:
	.quad	sat_s3bu7_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:55.796191366 UTC

.section .text
.align 8
_c3i4g:
_c3i4g:
	leaq block_c3i4o_info(%rip),%rax
	movq %rax,(%rbp)
	movq 15(%rbx),%rbx
	testb $7,%bl
	jne _c3i4o
_c3i4q:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3i4g, .-_c3i4g


==================== Asm code ====================
2018-03-16 15:57:55.796789349 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3i4g_info:
	.quad	_c3i4g
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.797641562 UTC

.section .text
.align 8
_c3i4o:
_c3i4o:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c3i4x
_c3i4M:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3i4P
_c3i4O:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq lvl14_r2UqN_closure+1(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -14(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3i4P:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c3i4x:
	movq 8(%rbp),%rax
	leaq block_c3i4u_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c3i4u
_c3i4y:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3i4o, .-_c3i4o


==================== Asm code ====================
2018-03-16 15:57:55.798348664 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3i4o_info:
	.quad	_c3i4o
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.799042231 UTC

.section .text
.align 8
_c3i4u:
_c3i4u:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c3i4E
_c3i4I:
	leaq lvl37_r2Urd_closure+2(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3i4E:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3i4u, .-_c3i4u


==================== Asm code ====================
2018-03-16 15:57:55.799705612 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3i4u_info:
	.quad	_c3i4u
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.800447416 UTC

.section .text
.align 8
sat_s3buc_entry:
_c3i53:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3i54
_c3i55:
	leaq block_c3i50_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 24(%rbx),%rax
	movq 32(%rbx),%rcx
	movq 16(%rbx),%rbx
	movq %rax,-16(%rbp)
	movq %rcx,-8(%rbp)
	addq $-24,%rbp
	testb $7,%bl
	jne _c3i50
_c3i51:
	movq (%rbx),%rax
	jmp *(%rax)
_c3i54:
	jmp *-16(%r13)
	.size sat_s3buc_entry, .-sat_s3buc_entry


==================== Asm code ====================
2018-03-16 15:57:55.801074329 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3buc_info:
	.quad	sat_s3buc_entry
	.quad	4294967298
	.quad	15


==================== Asm code ====================
2018-03-16 15:57:55.802349518 UTC

.section .text
.align 8
_c3i50:
_c3i50:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3i5a
_c3i59:
	movq 7(%rbx),%rax
	testq %rax,%rax
	jg _c3i5j
_c3i5k:
	addq $-16,%r12
	movq 8(%rbp),%rbx
	andq $-8,%rbx
	addq $24,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c3i5j:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	addq 16(%rbp),%rax
	movq %rax,(%r12)
	leaq -7(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3i5a:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3i50, .-_c3i50


==================== Asm code ====================
2018-03-16 15:57:55.803037707 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3i50_info:
	.quad	_c3i50
	.quad	130
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.803771362 UTC

.section .text
.align 8
sat_s3buu_entry:
_c3i5W:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3i5X
_c3i5Y:
	leaq block_c3i5P_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3i5P
_c3i5Q:
	movq (%rbx),%rax
	jmp *(%rax)
_c3i5X:
	jmp *-16(%r13)
	.size sat_s3buu_entry, .-sat_s3buu_entry


==================== Asm code ====================
2018-03-16 15:57:55.804389025 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3buu_info:
	.quad	sat_s3buu_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:55.805181612 UTC

.section .text
.align 8
_c3i5P:
_c3i5P:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c3i5T
_c3i5U:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3i6j
_c3i6i:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq lvl14_r2UqN_closure+1(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -14(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3i6j:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c3i5T:
	movq 8(%rbp),%rax
	leaq block_c3i61_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c3i61
_c3i63:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3i5P, .-_c3i5P


==================== Asm code ====================
2018-03-16 15:57:55.806006653 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3i5P_info:
	.quad	_c3i5P
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.806755946 UTC

.section .text
.align 8
_c3i61:
_c3i61:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c3i69
_c3i6d:
	leaq lvl37_r2Urd_closure+2(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3i69:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3i61, .-_c3i61


==================== Asm code ====================
2018-03-16 15:57:55.807371218 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3i61_info:
	.quad	_c3i61
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.808116943 UTC

.section .text
.align 8
sat_s3buB_entry:
_c3i6A:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3i6B
_c3i6C:
	leaq block_c3i6t_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rbx
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3i6t
_c3i6u:
	movq (%rbx),%rax
	jmp *(%rax)
_c3i6B:
	jmp *-16(%r13)
	.size sat_s3buB_entry, .-sat_s3buB_entry


==================== Asm code ====================
2018-03-16 15:57:55.808784035 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3buB_info:
	.quad	sat_s3buB_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:55.809675188 UTC

.section .text
.align 8
_c3i6t:
_c3i6t:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c3i6x
_c3i6y:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3i6X
_c3i6W:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq lvl14_r2UqN_closure+1(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -14(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3i6X:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c3i6x:
	movq 8(%rbp),%rax
	leaq block_c3i6F_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c3i6F
_c3i6H:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3i6t, .-_c3i6t


==================== Asm code ====================
2018-03-16 15:57:55.810384966 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3i6t_info:
	.quad	_c3i6t
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.811099069 UTC

.section .text
.align 8
_c3i6F:
_c3i6F:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c3i6N
_c3i6R:
	leaq lvl37_r2Urd_closure+2(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3i6N:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3i6F, .-_c3i6F


==================== Asm code ====================
2018-03-16 15:57:55.811730908 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3i6F_info:
	.quad	_c3i6F
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.812444427 UTC

.section .text
.align 8
sat_s3buG_entry:
_c3i7c:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3i7d
_c3i7e:
	leaq block_c3i76_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 24(%rbx),%rsi
	movq GHC.Show.intToDigit_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r14
	movq 16(%rbx),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp *GHC.Base.map_entry@gotpcrel(%rip)
_c3i7d:
	jmp *-16(%r13)
	.size sat_s3buG_entry, .-sat_s3buG_entry


==================== Asm code ====================
2018-03-16 15:57:55.813078412 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3buG_info:
	.quad	sat_s3buG_entry
	.quad	2
	.quad	4294967314
	.quad	S3bQP_srt+1176


==================== Asm code ====================
2018-03-16 15:57:55.814040733 UTC

.section .text
.align 8
_c3i76:
_c3i76:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c3i79
_c3i7a:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3i7z
_c3i7y:
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq lvl14_r2UqN_closure+1(%rip),%rax
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -14(%r12),%rbx
	addq $16,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3i7z:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c3i79:
	movq 8(%rbp),%rax
	leaq block_c3i7h_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c3i7h
_c3i7j:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3i76, .-_c3i76


==================== Asm code ====================
2018-03-16 15:57:55.814797933 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3i76_info:
	.quad	_c3i76
	.quad	1
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.81553468 UTC

.section .text
.align 8
_c3i7h:
_c3i7h:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c3i7p
_c3i7t:
	leaq lvl37_r2Urd_closure+2(%rip),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3i7p:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	addq $8,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3i7h, .-_c3i7h


==================== Asm code ====================
2018-03-16 15:57:55.816147003 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3i7h_info:
	.quad	_c3i7h
	.quad	0
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.816842121 UTC

.section .text
.align 8
$wdoFmt_s3brC_entry:
_c3i7H:
	leaq -48(%rbp),%rax
	cmpq %r15,%rax
	jb _c3i7I
_u3ia4:
	movq %rbx,-32(%rbp)
	movq %r14,-24(%rbp)
	movq %rsi,-16(%rbp)
	movq %rdi,-8(%rbp)
	addq $-32,%rbp
	jmp _c3hWd
_c3i7I:
	jmp *-8(%r13)
	.size $wdoFmt_s3brC_entry, .-$wdoFmt_s3brC_entry


==================== Asm code ====================
2018-03-16 15:57:55.81752553 UTC

.section .data.rel.ro
.align 8
.align 1
$wdoFmt_s3brC_info:
	.quad	$wdoFmt_s3brC_entry
	.quad	2
	.quad	9042190353301515
	.quad	12884901911
	.quad	S3bQP_srt+1144


==================== Asm code ====================
2018-03-16 15:57:55.818243504 UTC

.section .text
.align 8
_c3hWd:
_c3hWd:
	leaq block_c3hWg_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 8(%rbp),%rbx
	movq (%rbp),%rax
	movq 13(%rax),%rcx
	movq %rcx,-8(%rbp)
	movq 5(%rax),%rax
	movq %rax,8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3hWg
_c3hWh:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3hWd, .-_c3hWd


==================== Asm code ====================
2018-03-16 15:57:55.819118146 UTC

.section .text
.align 8
_c3hWg:
_c3hWg:
	andl $7,%ebx
	cmpq $3,%rbx
	jb _u3ia3
_c3i7F:
	leaq block_c3i9D_info(%rip),%rax
	movq %rax,8(%rbp)
	movq 40(%rbp),%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c3i9D
_c3i9F:
	movq (%rbx),%rax
	jmp *(%rax)
_u3ia3:
	movq 24(%rbp),%rax
	cmpq $2,%rbx
	jb _c3i7D
_c3i7E:
	leaq block_c3i1j_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rbx
	testb $7,%bl
	jne _c3i1j
_c3i1k:
	movq (%rbx),%rax
	jmp *(%rax)
_c3i7D:
	leaq block_c3hWl_info(%rip),%rbx
	movq %rbx,24(%rbp)
	movq %rax,%rbx
	addq $24,%rbp
	testb $7,%bl
	jne _c3hWl
_c3hWm:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3hWg, .-_c3hWg


==================== Asm code ====================
2018-03-16 15:57:55.819876549 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hWg_info:
	.quad	_c3hWg
	.quad	5
	.quad	9042190353301534
	.quad	S3bQP_srt+1144


==================== Asm code ====================
2018-03-16 15:57:55.82075164 UTC

.section .text
.align 8
_c3hWl:
_c3hWl:
	movq 8(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c3i7N
_c3i8s:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3i8v
_c3i8u:
	movq 6(%rbx),%rbx
	leaq dec'_s3bs8_info(%rip),%rcx
	movq %rcx,-16(%r12)
	movq %rbx,(%r12)
	leaq block_c3i0H_info(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,%rbx
	leaq -16(%r12),%rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c3i0H
_c3i0I:
	movq (%rbx),%rax
	jmp *(%rax)
_c3i8v:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c3i7N:
	leaq block_c3hWq_info(%rip),%rcx
	movq %rcx,8(%rbp)
	movq %rax,%rsi
	movq GHC.Show.intToDigit_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r14
	addq $8,%rbp
	jmp *GHC.Base.map_entry@gotpcrel(%rip)
	.size _c3hWl, .-_c3hWl


==================== Asm code ====================
2018-03-16 15:57:55.821615502 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hWl_info:
	.quad	_c3hWl
	.quad	2
	.quad	565118911905822
	.quad	S3bQP_srt+1176


==================== Asm code ====================
2018-03-16 15:57:55.822403862 UTC

.section .text
.align 8
_c3hWq:
_c3hWq:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c3i7R
_c3i7T:
	leaq block_c3hWv_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c3hWv
_c3hWw:
	movq (%rbx),%rax
	jmp *(%rax)
_c3i7R:
	leaq lvl13_r2UqM_closure(%rip),%rbx
	addq $16,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3hWq, .-_c3hWq


==================== Asm code ====================
2018-03-16 15:57:55.82354645 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hWq_info:
	.quad	_c3hWq
	.quad	1
	.quad	12884901918
	.quad	S3bQP_srt+1232


==================== Asm code ====================
2018-03-16 15:57:55.824337362 UTC

.section .text
.align 8
_c3hWv:
_c3hWv:
	cmpq $48,7(%rbx)
	je _c3i8g
_u3ia6:
	movq %rbx,(%rbp)
	addq $-8,%rbp
	jmp _c3hWD
_c3i8g:
	leaq block_c3i8f_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %rbx,%rax
	movq 8(%rbp),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c3i8f
_c3i8h:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3hWv, .-_c3hWv


==================== Asm code ====================
2018-03-16 15:57:55.82502208 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hWv_info:
	.quad	_c3hWv
	.quad	2
	.quad	4294967326
	.quad	S3bQP_srt+1240


==================== Asm code ====================
2018-03-16 15:57:55.828601307 UTC

.section .text
.align 8
_c3i8f:
_c3i8f:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c3i8n
	jmp _c3hWD
_c3i8n:
	leaq lvl16_r2UqP_closure(%rip),%rbx
	addq $32,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3i8f, .-_c3i8f


==================== Asm code ====================
2018-03-16 15:57:55.829624615 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3i8f_info:
	.quad	_c3i8f
	.quad	3
	.quad	4294967326
	.quad	S3bQP_srt+1240


==================== Asm code ====================
2018-03-16 15:57:55.830755835 UTC

.section .text
.align 8
_c3hWD:
_c3hWD:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3i7X
_c3i7W:
	leaq show_e'_s3brP_info(%rip),%rax
	movq %rax,-16(%r12)
	movq 24(%rbp),%rax
	movq %rax,(%r12)
	leaq block_c3hX2_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%rbx
	leaq -16(%r12),%rax
	movq %rax,24(%rbp)
	testb $7,%bl
	jne _c3hX2
_c3hX3:
	movq (%rbx),%rax
	jmp *(%rax)
_c3i7X:
	movq $24,904(%r13)
	leaq block_c3hWD_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c3hWD, .-_c3hWD


==================== Asm code ====================
2018-03-16 15:57:55.831749543 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hWD_info:
	.quad	_c3hWD
	.quad	3
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.833163114 UTC

.section .text
.align 8
_c3hX2:
_c3hX2:
	movq 24(%rbp),%rax
	movq 8(%rbp),%rcx
	movq %rbx,%rdx
	andl $7,%edx
	cmpq $1,%rdx
	je _c3i80
_c3i86:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _c3i89
_c3i88:
	leaq sat_s3bs1_info(%rip),%rdx
	movq %rdx,-72(%r12)
	movq %rax,-56(%r12)
	movq %rbx,-48(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-40(%r12)
	leaq lvl14_r2UqN_closure+1(%rip),%rax
	movq %rax,-32(%r12)
	leaq -72(%r12),%rax
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rcx,-8(%r12)
	leaq -38(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3i89:
	movq $80,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c3i83:
	movq $48,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c3i80:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c3i83
_c3i82:
	leaq sat_s3brX_info(%rip),%rbx
	movq %rbx,-40(%r12)
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	movq %rcx,-8(%r12)
	leaq -40(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3hX2, .-_c3hX2


==================== Asm code ====================
2018-03-16 15:57:55.834590128 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hX2_info:
	.quad	_c3hX2
	.quad	131
	.quad	30


==================== Asm code ====================
2018-03-16 15:57:55.835504583 UTC

.section .text
.align 8
_c3i0H:
_c3i0H:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c3hXU
_c3i8H:
	leaq block_c3i0N_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq 14(%rbx),%rax
	movq 6(%rbx),%rbx
	movq %rax,(%rbp)
	addq $-8,%rbp
	testb $7,%bl
	jne _c3i0N
_c3i0O:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3i0H, .-_c3i0H


==================== Asm code ====================
2018-03-16 15:57:55.836485423 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3i0H_info:
	.quad	_c3i0H
	.quad	3
	.quad	563469644464158
	.quad	S3bQP_srt+1176


==================== Asm code ====================
2018-03-16 15:57:55.837369599 UTC

.section .text
.align 8
_c3i0N:
_c3i0N:
	cmpq $0,7(%rbx)
	je _c3i8L
_u3ia5:
	addq $8,%rbp
	jmp _c3hXU
_c3i8L:
	movq 8(%rbp),%rax
	leaq block_c3i0V_info(%rip),%rbx
	movq %rbx,8(%rbp)
	movq %rax,%rbx
	addq $8,%rbp
	testb $7,%bl
	jne _c3i0V
_c3i0W:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3i0N, .-_c3i0N


==================== Asm code ====================
2018-03-16 15:57:55.83800737 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3i0N_info:
	.quad	_c3i0N
	.quad	4
	.quad	563469644464158
	.quad	S3bQP_srt+1176


==================== Asm code ====================
2018-03-16 15:57:55.838813425 UTC

.section .text
.align 8
_c3i0V:
_c3i0V:
	movq %rbx,%rax
	andl $7,%eax
	cmpq $1,%rax
	je _c3i8P
	jmp _c3hXU
_c3i8S:
	movq $72,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c3i8P:
	addq $72,%r12
	cmpq 856(%r13),%r12
	ja _c3i8S
_c3i8R:
	leaq sat_s3btb_info(%rip),%rax
	movq %rax,-64(%r12)
	movq 8(%rbp),%rax
	movq %rax,-48(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-40(%r12)
	leaq lvl14_r2UqN_closure+1(%rip),%rax
	movq %rax,-32(%r12)
	leaq -64(%r12),%rax
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq lvl20_r2UqT_closure+1(%rip),%rax
	movq %rax,-8(%r12)
	leaq -38(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
	.size _c3i0V, .-_c3i0V


==================== Asm code ====================
2018-03-16 15:57:55.839558376 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3i0V_info:
	.quad	_c3i0V
	.quad	3
	.quad	563469644464158
	.quad	S3bQP_srt+1176


==================== Asm code ====================
2018-03-16 15:57:55.840654185 UTC

.section .text
.align 8
_c3hXU:
_c3hXU:
	addq $168,%r12
	cmpq 856(%r13),%r12
	ja _c3i8B
_c3i8A:
	leaq ds1_s3bse_info(%rip),%rax
	movq %rax,-160(%r12)
	movq 16(%rbp),%rax
	movq %rax,-144(%r12)
	movq 8(%rbp),%rax
	movq %rax,-136(%r12)
	leaq ds2_s3bsm_info(%rip),%rax
	movq %rax,-128(%r12)
	leaq -160(%r12),%rax
	movq %rax,-112(%r12)
	leaq sat_s3bsZ_info(%rip),%rbx
	movq %rbx,-104(%r12)
	movq 24(%rbp),%rbx
	movq %rbx,-88(%r12)
	movq %rax,-80(%r12)
	leaq -128(%r12),%rax
	movq %rax,-72(%r12)
	movq :_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-64(%r12)
	leaq lvl14_r2UqN_closure+1(%rip),%rbx
	movq %rbx,-56(%r12)
	leaq -104(%r12),%rbx
	movq %rbx,-48(%r12)
	movq stg_sel_0_upd_info@gotpcrel(%rip),%rbx
	movq %rbx,-40(%r12)
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -62(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3i8B:
	movq $168,904(%r13)
	leaq block_c3hXU_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c3hXU, .-_c3hXU


==================== Asm code ====================
2018-03-16 15:57:55.842177282 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hXU_info:
	.quad	_c3hXU
	.quad	3
	.quad	244813135902
	.quad	S3bQP_srt+1176


==================== Asm code ====================
2018-03-16 15:57:55.843204655 UTC

.section .text
.align 8
_c3i1j:
_c3i1j:
	movq 40(%rbp),%rax
	movq %rbx,%rcx
	andl $7,%ecx
	cmpq $1,%rcx
	je _c3i90
_c3i98:
	leaq block_c3i2w_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq 6(%rbx),%rbx
	movq %rbx,%rcx
	movq %rax,%rbx
	movq %rcx,40(%rbp)
	testb $7,%bl
	jne _c3i2w
_c3i2x:
	movq (%rbx),%rax
	jmp *(%rax)
_c3i90:
	leaq block_c3i1o_info(%rip),%rcx
	movq %rcx,24(%rbp)
	movq %rax,%rbx
	addq $24,%rbp
	testb $7,%bl
	jne _c3i1o
_c3i1p:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3i1j, .-_c3i1j


==================== Asm code ====================
2018-03-16 15:57:55.843977949 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3i1j_info:
	.quad	_c3i1j
	.quad	389
	.quad	906238099486
	.quad	S3bQP_srt+1144


==================== Asm code ====================
2018-03-16 15:57:55.844980665 UTC

.section .text
.align 8
_c3i1o:
_c3i1o:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c3i93
_c3i92:
	movq 8(%rbp),%rax
	movq 7(%rbx),%rbx
	testq %rbx,%rbx
	jg _c3i95
_c3i96:
	leaq sat_s3btt_info(%rip),%rcx
	movq %rcx,-24(%r12)
	movq %rax,-8(%r12)
	movq %rbx,(%r12)
	leaq -24(%r12),%rsi
	leaq lvl36_r2Urb_bytes(%rip),%r14
	addq $24,%rbp
	jmp *GHC.CString.unpackAppendCString#_entry@gotpcrel(%rip)
_c3i95:
	leaq sat_s3btj_info(%rip),%rcx
	movq %rcx,-24(%r12)
	movq %rax,-8(%r12)
	leaq -24(%r12),%rax
	addq $-8,%r12
	movq %rax,%rdi
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rsi
	movq %rbx,%r14
	addq $24,%rbp
	jmp $wf_r2UqX_entry
_c3i93:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3i1o, .-_c3i1o


==================== Asm code ====================
2018-03-16 15:57:55.845900619 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3i1o_info:
	.quad	_c3i1o
	.quad	130
	.quad	38654705694
	.quad	S3bQP_srt+1152


==================== Asm code ====================
2018-03-16 15:57:55.846908479 UTC

.section .text
.align 8
_c3i2w:
_c3i2w:
	addq $120,%r12
	cmpq 856(%r13),%r12
	ja _c3i9b
_c3i9a:
	movq 32(%rbp),%rax
	movq 40(%rbp),%rcx
	movq 7(%rbx),%rdx
	testq %rdx,%rdx
	jl _c3i9f
_c3i9g:
	leaq sat_s3buc_info(%rip),%rsi
	movq %rsi,-112(%r12)
	movq %rcx,-96(%r12)
	movq %rbx,-88(%r12)
	movq %rdx,-80(%r12)
	leaq -112(%r12),%rbx
	addq $-80,%r12
	leaq block_c3i5m_info(%rip),%rcx
	movq %rcx,(%rbp)
	movq %rax,%rdi
	movq %rbx,%rsi
	leaq base_r2UqK_closure+1(%rip),%r14
	movq %rdx,40(%rbp)
	jmp GHC.Float.$wroundTo_entry
_c3i9f:
	leaq ds_s3bty_info(%rip),%rsi
	movq %rsi,-112(%r12)
	movq %rax,-96(%r12)
	movq %rcx,-88(%r12)
	movq %rdx,-80(%r12)
	leaq sat_s3bu7_info(%rip),%rax
	movq %rax,-72(%r12)
	movq 8(%rbp),%rax
	movq %rax,-56(%r12)
	leaq -112(%r12),%rax
	movq %rax,-48(%r12)
	movq stg_sel_0_upd_info@gotpcrel(%rip),%rcx
	movq %rcx,-40(%r12)
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -40(%r12),%rax
	movq %rax,-8(%r12)
	leaq -72(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $48,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3i9b:
	movq $120,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3i2w, .-_c3i2w


==================== Asm code ====================
2018-03-16 15:57:55.848012876 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3i2w_info:
	.quad	_c3i2w
	.quad	389
	.quad	897648164894
	.quad	S3bQP_srt+1144


==================== Asm code ====================
2018-03-16 15:57:55.848681956 UTC

.section .text
.align 8
_c3i5m:
_c3i5m:
	leaq block_c3i5o_info(%rip),%rax
	movq %rax,(%rbp)
	movq %r14,32(%rbp)
	testb $7,%bl
	jne _c3i5o
_c3i5p:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3i5m, .-_c3i5m


==================== Asm code ====================
2018-03-16 15:57:55.849310369 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3i5m_info:
	.quad	_c3i5m
	.quad	1925
	.quad	73014444062
	.quad	S3bQP_srt+1144


==================== Asm code ====================
2018-03-16 15:57:55.850382357 UTC

.section .text
.align 8
_c3i5o:
_c3i5o:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c3i9k
_c3i9j:
	movq 32(%rbp),%rax
	addq $7,%rbx
	movq 40(%rbp),%rcx
	addq (%rbx),%rcx
	testq %rcx,%rcx
	jg _c3i9m
_c3i9A:
	leaq sat_s3buG_info(%rip),%rbx
	movq %rbx,-24(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -24(%r12),%rsi
	leaq lvl23_r2UqW_closure(%rip),%r14
	addq $48,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_c3i9m:
	addq $-32,%r12
	leaq block_c3i5z_info(%rip),%rbx
	movq %rbx,(%rbp)
	movq %rax,%rsi
	movq GHC.Show.intToDigit_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r14
	movq %rcx,40(%rbp)
	jmp *GHC.Base.map_entry@gotpcrel(%rip)
_c3i9k:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3i5o, .-_c3i5o


==================== Asm code ====================
2018-03-16 15:57:55.85124274 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3i5o_info:
	.quad	_c3i5o
	.quad	1413
	.quad	73014444062
	.quad	S3bQP_srt+1144


==================== Asm code ====================
2018-03-16 15:57:55.85232898 UTC

.section .text
.align 8
_c3i5z:
_c3i5z:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _c3i9p
_c3i9o:
	movq GHC.Types.I#_con_info@gotpcrel(%rip),%rax
	movq %rax,-8(%r12)
	movq 40(%rbp),%rax
	movq %rax,(%r12)
	leaq block_c3i5E_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%rsi
	leaq -7(%r12),%r14
	jmp *GHC.List.$wsplitAt'_entry@gotpcrel(%rip)
_c3i9p:
	movq $16,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3i5z, .-_c3i5z


==================== Asm code ====================
2018-03-16 15:57:55.853664217 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3i5z_info:
	.quad	_c3i5z
	.quad	1925
	.quad	4294967326
	.quad	S3bQP_srt+1144


==================== Asm code ====================
2018-03-16 15:57:55.85433418 UTC

.section .text
.align 8
_c3i5E:
_c3i5E:
	leaq block_c3i5G_info(%rip),%rax
	movq %rax,(%rbp)
	movq %r14,40(%rbp)
	testb $7,%bl
	jne _c3i5G
_c3i5H:
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3i5E, .-_c3i5E


==================== Asm code ====================
2018-03-16 15:57:55.854919738 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3i5E_info:
	.quad	_c3i5E
	.quad	1925
	.quad	4294967326
	.quad	S3bQP_srt+1144


==================== Asm code ====================
2018-03-16 15:57:55.855781113 UTC

.section .text
.align 8
_c3i5G:
_c3i5G:
	movq 8(%rbp),%rax
	movq 40(%rbp),%rcx
	movq %rbx,%rdx
	andl $7,%edx
	cmpq $1,%rdx
	je _c3i9s
_c3i9w:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c3i9z
_c3i9y:
	leaq sat_s3buB_info(%rip),%rdx
	movq %rdx,-24(%r12)
	movq %rax,-8(%r12)
	movq %rcx,(%r12)
	leaq -24(%r12),%rsi
	movq %rbx,%r14
	addq $48,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
_c3i9z:
	movq $32,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c3i9s:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c3i9z
_c3i9u:
	leaq sat_s3buu_info(%rip),%rbx
	movq %rbx,-24(%r12)
	movq %rax,-8(%r12)
	movq %rcx,(%r12)
	leaq -24(%r12),%rsi
	leaq lvl23_r2UqW_closure(%rip),%r14
	addq $48,%rbp
	jmp *GHC.Base.++_entry@gotpcrel(%rip)
	.size _c3i5G, .-_c3i5G


==================== Asm code ====================
2018-03-16 15:57:55.856639496 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3i5G_info:
	.quad	_c3i5G
	.quad	901
	.quad	4294967326
	.quad	S3bQP_srt+1144


==================== Asm code ====================
2018-03-16 15:57:55.857514074 UTC

.section .text
.align 8
_c3i9D:
_c3i9D:
	movq 24(%rbp),%rax
	movq %rbx,%rcx
	movq 7(%rbx),%rbx
	testq %rbx,%rbx
	jl _c3i9U
_c3i9T:
	cmpq $7,%rbx
	jg _c3i9U
_c3i9Q:
	leaq GHC.Float.FFFixed_closure+2(%rip),%rbx
	movq %rbx,16(%rbp)
	movq %rax,24(%rbp)
	movq %rcx,32(%rbp)
	addq $8,%rbp
	jmp _c3hWd
_c3i9U:
	leaq GHC.Float.FFExponent_closure+1(%rip),%rbx
	movq %rbx,16(%rbp)
	movq %rax,24(%rbp)
	movq %rcx,32(%rbp)
	addq $8,%rbp
	jmp _c3hWd
	.size _c3i9D, .-_c3i9D


==================== Asm code ====================
2018-03-16 15:57:55.858153016 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3i9D_info:
	.quad	_c3i9D
	.quad	644
	.quad	9042190353301534
	.quad	S3bQP_srt+1144


==================== Asm code ====================
2018-03-16 15:57:55.858967304 UTC

.section .text
.align 8
sat_s3buS_entry:
_c3iaz:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3iaA
_c3iaB:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Float.rationalToDouble5_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c3iaA:
	jmp *-16(%r13)
	.size sat_s3buS_entry, .-sat_s3buS_entry


==================== Asm code ====================
2018-03-16 15:57:55.859712381 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3buS_info:
	.quad	sat_s3buS_entry
	.quad	1
	.quad	4294967312
	.quad	S3bQP_srt+1104


==================== Asm code ====================
2018-03-16 15:57:55.860390755 UTC

.section .text
.align 8
sat_s3buM_entry:
_c3iaT:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3iaU
_c3iaV:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 16(%rbx),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.negate_entry@gotpcrel(%rip)
_c3iaU:
	jmp *-16(%r13)
	.size sat_s3buM_entry, .-sat_s3buM_entry


==================== Asm code ====================
2018-03-16 15:57:55.861035119 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3buM_info:
	.quad	sat_s3buM_entry
	.quad	2
	.quad	18


==================== Asm code ====================
2018-03-16 15:57:55.861757424 UTC

.section .data.rel.ro
.align 8
.align 1
u3icr_srtd:
	.quad	S3bQP_srt+752
	.quad	71
	.quad	4586388454895517697
	.quad	64


==================== Asm code ====================
2018-03-16 15:57:55.862697111 UTC

.section .text
.align 8
sat_s3buQ_entry:
_c3iaY:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _c3iaZ
_c3ib0:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c3ib2
_c3ib1:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%rax
	movq 24(%rbx),%rcx
	movq 32(%rbx),%rdx
	movq 40(%rbx),%rsi
	movq 48(%rbx),%rbx
	leaq sat_s3buM_info(%rip),%rdi
	movq %rdi,-24(%r12)
	movq %rdx,-8(%r12)
	movq %rsi,(%r12)
	leaq block_c3iaW_info(%rip),%rdx
	movq %rdx,-40(%rbp)
	leaq -24(%r12),%rdi
	leaq GHC.Float.expts4_closure(%rip),%rsi
	movq %rax,%r14
	movq %rcx,-32(%rbp)
	movq %rbx,-24(%rbp)
	addq $-40,%rbp
	jmp GHC.Float.$wfloatToDigits_entry
_c3ib2:
	movq $32,904(%r13)
_c3iaZ:
	jmp *-16(%r13)
	.size sat_s3buQ_entry, .-sat_s3buQ_entry


==================== Asm code ====================
2018-03-16 15:57:55.863436611 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3buQ_info:
	.quad	sat_s3buQ_entry
	.quad	5
	.quad	-4294967281
	.quad	u3icr_srtd


==================== Asm code ====================
2018-03-16 15:57:55.864702419 UTC

.section .text
.align 8
_c3iaW:
_c3iaW:
	movq %r14,%rdi
	movq %rbx,%rsi
	movq 8(%rbp),%r14
	movq 16(%rbp),%rbx
	addq $24,%rbp
	jmp $wdoFmt_s3brC_entry
	.size _c3iaW, .-_c3iaW


==================== Asm code ====================
2018-03-16 15:57:55.865600396 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3iaW_info:
	.quad	_c3iaW
	.quad	2
	.quad	9042190353301534
	.quad	S3bQP_srt+1144


==================== Asm code ====================
2018-03-16 15:57:55.866552388 UTC

.section .text
.align 8
sat_s3buZ_entry:
_c3iba:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _c3ibb
_c3ibc:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 16(%rbx),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	leaq GHC.Float.rationalToDouble5_closure(%rip),%rax
	movq %rax,-24(%rbp)
	addq $-32,%rbp
	jmp *GHC.Num.fromInteger_entry@gotpcrel(%rip)
_c3ibb:
	jmp *-16(%r13)
	.size sat_s3buZ_entry, .-sat_s3buZ_entry


==================== Asm code ====================
2018-03-16 15:57:55.867314276 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3buZ_info:
	.quad	sat_s3buZ_entry
	.quad	1
	.quad	4294967312
	.quad	S3bQP_srt+1104


==================== Asm code ====================
2018-03-16 15:57:55.867880802 UTC

.section .data.rel.ro
.align 8
.align 1
u3ics_srtd:
	.quad	S3bQP_srt+752
	.quad	72
	.quad	-4636965989773213695
	.quad	195


==================== Asm code ====================
2018-03-16 15:57:55.868654349 UTC

.section .text
.align 8
.globl GHC.Float.formatRealFloatAlt_entry
.type GHC.Float.formatRealFloatAlt_entry, @object
GHC.Float.formatRealFloatAlt_entry:
_c3ibh:
	leaq -80(%rbp),%rax
	cmpq %r15,%rax
	jb _c3ibi
_c3ibj:
	leaq block_c3hVO_info(%rip),%rax
	movq %rax,-48(%rbp)
	movq %r14,%rax
	movq stg_ap_p_info@gotpcrel(%rip),%rbx
	movq %rbx,-64(%rbp)
	movq %r9,-56(%rbp)
	movq %rax,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-64,%rbp
	jmp GHC.Float.isNaN_entry
_c3ibi:
	leaq GHC.Float.formatRealFloatAlt_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.formatRealFloatAlt_entry, .-GHC.Float.formatRealFloatAlt_entry


==================== Asm code ====================
2018-03-16 15:57:55.869674965 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.formatRealFloatAlt_info
.type GHC.Float.formatRealFloatAlt_info, @object
GHC.Float.formatRealFloatAlt_info:
	.quad	GHC.Float.formatRealFloatAlt_entry
	.quad	0
	.quad	-4294967282
	.quad	21474836505
	.quad	u3ics_srtd


==================== Asm code ====================
2018-03-16 15:57:55.870252415 UTC

.section .data.rel.ro
.align 8
.align 1
u3ict_srtd:
	.quad	S3bQP_srt+752
	.quad	71
	.quad	-4636965989773213695
	.quad	67


==================== Asm code ====================
2018-03-16 15:57:55.870939237 UTC

.section .text
.align 8
_c3hVO:
_c3hVO:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c3ibe
_c3ibf:
	leaq lvl31_r2Ur5_closure(%rip),%rbx
	addq $48,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c3ibe:
	leaq block_c3hVS_info(%rip),%rax
	movq %rax,(%rbp)
	movq 8(%rbp),%r14
	jmp GHC.Float.$p1RealFloat_entry
	.size _c3hVO, .-_c3hVO


==================== Asm code ====================
2018-03-16 15:57:55.871592692 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hVO_info:
	.quad	_c3hVO
	.quad	5
	.quad	-4294967266
	.quad	u3ict_srtd


==================== Asm code ====================
2018-03-16 15:57:55.872165621 UTC

.section .data.rel.ro
.align 8
.align 1
u3icu_srtd:
	.quad	S3bQP_srt+752
	.quad	71
	.quad	-4636965989773213695
	.quad	65


==================== Asm code ====================
2018-03-16 15:57:55.872814724 UTC

.section .text
.align 8
_c3hVS:
_c3hVS:
	leaq block_c3hVW_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	jmp *GHC.Real.$p1RealFrac_entry@gotpcrel(%rip)
	.size _c3hVS, .-_c3hVS


==================== Asm code ====================
2018-03-16 15:57:55.873443901 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hVS_info:
	.quad	_c3hVS
	.quad	5
	.quad	-4294967266
	.quad	u3icu_srtd


==================== Asm code ====================
2018-03-16 15:57:55.873983993 UTC

.section .data.rel.ro
.align 8
.align 1
u3icv_srtd:
	.quad	S3bQP_srt+752
	.quad	71
	.quad	-4636965989773213695
	.quad	65


==================== Asm code ====================
2018-03-16 15:57:55.874733478 UTC

.section .text
.align 8
_c3hVW:
_c3hVW:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3ibo
_c3ibn:
	leaq $dNum_s3brA_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rbx,(%r12)
	leaq block_c3hW7_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq 8(%rbp),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-32(%rbp)
	movq 40(%rbp),%rax
	movq %rax,-24(%rbp)
	movq %rbx,-8(%rbp)
	leaq -16(%r12),%rax
	movq %rax,(%rbp)
	addq $-32,%rbp
	jmp GHC.Float.isInfinite_entry
_c3ibo:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
	.size _c3hVW, .-_c3hVW


==================== Asm code ====================
2018-03-16 15:57:55.875416641 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hVW_info:
	.quad	_c3hVW
	.quad	5
	.quad	-4294967266
	.quad	u3icv_srtd


==================== Asm code ====================
2018-03-16 15:57:55.87599933 UTC

.section .data.rel.ro
.align 8
.align 1
u3icw_srtd:
	.quad	S3bQP_srt+752
	.quad	71
	.quad	-4636965989773213695
	.quad	65


==================== Asm code ====================
2018-03-16 15:57:55.876925554 UTC

.section .text
.align 8
_c3hW7:
_c3hW7:
	movq 16(%rbp),%rax
	movq 8(%rbp),%rcx
	movq %rbx,%rdx
	andl $7,%edx
	cmpq $1,%rdx
	je _c3ibq
_c3ibZ:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3ic2
_c3ic1:
	leaq sat_s3buZ_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,(%r12)
	leaq block_c3ibY_info(%rip),%rax
	movq %rax,40(%rbp)
	movq %rcx,%r14
	leaq -16(%r12),%rax
	movq %rax,48(%rbp)
	addq $40,%rbp
	jmp *GHC.Real.$p2Real_entry@gotpcrel(%rip)
_c3ic2:
	movq $24,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c3ibt:
	movq $48,904(%r13)
	jmp *stg_gc_unpt_r1@gotpcrel(%rip)
_c3ibq:
	addq $48,%r12
	cmpq 856(%r13),%r12
	ja _c3ibt
_c3ibs:
	leaq $wdoFmt_s3brC_info(%rip),%rbx
	movq %rbx,-40(%r12)
	movq 40(%rbp),%rbx
	movq %rbx,-32(%r12)
	movq 48(%rbp),%rbx
	movq %rbx,-24(%r12)
	leaq sat_s3buS_info(%rip),%rbx
	movq %rbx,-16(%r12)
	movq %rax,(%r12)
	leaq block_c3iaC_info(%rip),%rax
	movq %rax,8(%rbp)
	movq %rcx,%r14
	leaq -16(%r12),%rax
	movq %rax,40(%rbp)
	leaq -37(%r12),%rax
	movq %rax,48(%rbp)
	addq $8,%rbp
	jmp *GHC.Real.$p2Real_entry@gotpcrel(%rip)
	.size _c3hW7, .-_c3hW7


==================== Asm code ====================
2018-03-16 15:57:55.877980804 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3hW7_info:
	.quad	_c3hW7
	.quad	7
	.quad	-4294967266
	.quad	u3icw_srtd


==================== Asm code ====================
2018-03-16 15:57:55.87852211 UTC

.section .data.rel.ro
.align 8
.align 1
u3icx_srtd:
	.quad	S3bQP_srt+752
	.quad	71
	.quad	4586388454895517697
	.quad	64


==================== Asm code ====================
2018-03-16 15:57:55.879200721 UTC

.section .text
.align 8
_c3iaC:
_c3iaC:
	leaq block_c3ibu_info(%rip),%rax
	movq %rax,(%rbp)
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rax
	movq %rax,-24(%rbp)
	movq 48(%rbp),%rax
	movq %rax,-16(%rbp)
	movq 32(%rbp),%rax
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp *GHC.Classes.<_entry@gotpcrel(%rip)
	.size _c3iaC, .-_c3iaC


==================== Asm code ====================
2018-03-16 15:57:55.879830955 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3iaC_info:
	.quad	_c3iaC
	.quad	6
	.quad	-4294967266
	.quad	u3icx_srtd


==================== Asm code ====================
2018-03-16 15:57:55.880353655 UTC

.section .data.rel.ro
.align 8
.align 1
u3icy_srtd:
	.quad	S3bQP_srt+752
	.quad	71
	.quad	4586388454895517697
	.quad	64


==================== Asm code ====================
2018-03-16 15:57:55.881096571 UTC

.section .text
.align 8
_c3ibu:
_c3ibu:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c3ibG
	jmp _c3iaJ
_c3ibG:
	leaq block_c3ibD_info(%rip),%rax
	movq %rax,(%rbp)
	movq 16(%rbp),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq 48(%rbp),%rax
	movq %rax,-8(%rbp)
	addq $-16,%rbp
	jmp GHC.Float.isNegativeZero_entry
	.size _c3ibu, .-_c3ibu


==================== Asm code ====================
2018-03-16 15:57:55.881824358 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3ibu_info:
	.quad	_c3ibu
	.quad	518
	.quad	-4294967266
	.quad	u3icy_srtd


==================== Asm code ====================
2018-03-16 15:57:55.882383793 UTC

.section .data.rel.ro
.align 8
.align 1
u3icz_srtd:
	.quad	S3bQP_srt+752
	.quad	71
	.quad	4586388454895517697
	.quad	64


==================== Asm code ====================
2018-03-16 15:57:55.883088194 UTC

.section .text
.align 8
_c3ibD:
_c3ibD:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c3ibN
	jmp _c3iaJ
_c3ibN:
	movq 16(%rbp),%rax
	leaq block_c3ibK_info(%rip),%rbx
	movq %rbx,16(%rbp)
	movq 48(%rbp),%rdi
	leaq GHC.Float.expts4_closure(%rip),%rsi
	movq %rax,%r14
	addq $16,%rbp
	jmp GHC.Float.$wfloatToDigits_entry
	.size _c3ibD, .-_c3ibD


==================== Asm code ====================
2018-03-16 15:57:55.883717535 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3ibD_info:
	.quad	_c3ibD
	.quad	518
	.quad	-4294967266
	.quad	u3icz_srtd


==================== Asm code ====================
2018-03-16 15:57:55.88432653 UTC

.section .text
.align 8
_c3ibK:
_c3ibK:
	movq %r14,%rdi
	movq %rbx,%rsi
	movq 8(%rbp),%r14
	movq 24(%rbp),%rbx
	addq $40,%rbp
	jmp $wdoFmt_s3brC_entry
	.size _c3ibK, .-_c3ibK


==================== Asm code ====================
2018-03-16 15:57:55.884921002 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3ibK_info:
	.quad	_c3ibK
	.quad	644
	.quad	9042190353301534
	.quad	S3bQP_srt+1144


==================== Asm code ====================
2018-03-16 15:57:55.885544463 UTC

.section .data.rel.ro
.align 8
.align 1
u3icA_srtd:
	.quad	S3bQP_srt+752
	.quad	71
	.quad	4586388454895517697
	.quad	64


==================== Asm code ====================
2018-03-16 15:57:55.886392827 UTC

.section .text
.align 8
_c3iaJ:
_c3iaJ:
	addq $80,%r12
	cmpq 856(%r13),%r12
	ja _c3ibz
_c3iby:
	leaq sat_s3buQ_info(%rip),%rax
	movq %rax,-72(%r12)
	movq 16(%rbp),%rax
	movq %rax,-56(%r12)
	movq 24(%rbp),%rax
	movq %rax,-48(%r12)
	movq 48(%rbp),%rax
	movq %rax,-40(%r12)
	movq 8(%rbp),%rax
	movq %rax,-32(%r12)
	movq 40(%rbp),%rax
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq GHC.Float.$fShowDouble3_closure+1(%rip),%rax
	movq %rax,-8(%r12)
	leaq -72(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $56,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3ibz:
	movq $80,904(%r13)
	leaq block_c3iaJ_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _c3iaJ, .-_c3iaJ


==================== Asm code ====================
2018-03-16 15:57:55.887114239 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3iaJ_info:
	.quad	_c3iaJ
	.quad	518
	.quad	-4294967266
	.quad	u3icA_srtd


==================== Asm code ====================
2018-03-16 15:57:55.887767261 UTC

.section .text
.align 8
_c3ibY:
_c3ibY:
	movq 16(%rbp),%rax
	leaq block_c3ic6_info(%rip),%rcx
	movq %rcx,16(%rbp)
	movq %rbx,%r14
	movq stg_ap_pp_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp *GHC.Classes.<_entry@gotpcrel(%rip)
	.size _c3ibY, .-_c3ibY


==================== Asm code ====================
2018-03-16 15:57:55.888419958 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3ibY_info:
	.quad	_c3ibY
	.quad	2
	.quad	12884901918
	.quad	S3bQP_srt+1256


==================== Asm code ====================
2018-03-16 15:57:55.889105493 UTC

.section .text
.align 8
_c3ic6:
_c3ic6:
	andl $7,%ebx
	cmpq $1,%rbx
	je _c3icd
_c3ich:
	leaq lvl29_r2Ur3_closure(%rip),%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_c3icd:
	leaq lvl27_r2Ur1_closure(%rip),%rbx
	addq $8,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
	.size _c3ic6, .-_c3ic6


==================== Asm code ====================
2018-03-16 15:57:55.889766 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3ic6_info:
	.quad	_c3ic6
	.quad	0
	.quad	12884901918
	.quad	S3bQP_srt+1256


==================== Asm code ====================
2018-03-16 15:57:55.892146413 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.formatRealFloat_closure
.type GHC.Float.formatRealFloat_closure, @object
GHC.Float.formatRealFloat_closure:
	.quad	GHC.Float.formatRealFloat_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:55.892833258 UTC

.section .text
.align 8
.globl GHC.Float.formatRealFloat_entry
.type GHC.Float.formatRealFloat_entry, @object
GHC.Float.formatRealFloat_entry:
_c3io7:
	movq %r8,%r9
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r8
	jmp GHC.Float.formatRealFloatAlt_entry
	.size GHC.Float.formatRealFloat_entry, .-GHC.Float.formatRealFloat_entry


==================== Asm code ====================
2018-03-16 15:57:55.893479215 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.formatRealFloat_info
.type GHC.Float.formatRealFloat_info, @object
GHC.Float.formatRealFloat_info:
	.quad	GHC.Float.formatRealFloat_entry
	.quad	0
	.quad	4294967310
	.quad	17179869208
	.quad	S3bQP_srt+1320


==================== Asm code ====================
2018-03-16 15:57:55.897362464 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.showFloat_closure
.type GHC.Float.showFloat_closure, @object
GHC.Float.showFloat_closure:
	.quad	GHC.Float.showFloat_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:55.898324143 UTC

.section .text
.align 8
sat_s3bv7_entry:
_c3ion:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3ioo
_c3iop:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%r9
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%r8
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rdi
	leaq GHC.Float.FFGeneric_closure+3(%rip),%rsi
	movq 16(%rbx),%r14
	addq $-16,%rbp
	jmp GHC.Float.formatRealFloatAlt_entry
_c3ioo:
	jmp *-16(%r13)
	.size sat_s3bv7_entry, .-sat_s3bv7_entry


==================== Asm code ====================
2018-03-16 15:57:55.899025714 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bv7_info:
	.quad	sat_s3bv7_entry
	.quad	2
	.quad	4294967314
	.quad	S3bQP_srt+1320


==================== Asm code ====================
2018-03-16 15:57:55.899798814 UTC

.section .text
.align 8
.globl GHC.Float.showFloat_entry
.type GHC.Float.showFloat_entry, @object
GHC.Float.showFloat_entry:
_c3ioq:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _c3iou
_c3iot:
	leaq sat_s3bv7_info(%rip),%rax
	movq %rax,-24(%r12)
	movq %r14,-8(%r12)
	movq %rsi,(%r12)
	leaq -24(%r12),%r14
	movq GHC.Base.++_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_c3iou:
	movq $32,904(%r13)
	leaq GHC.Float.showFloat_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.showFloat_entry, .-GHC.Float.showFloat_entry


==================== Asm code ====================
2018-03-16 15:57:55.900469513 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.showFloat_info
.type GHC.Float.showFloat_info, @object
GHC.Float.showFloat_info:
	.quad	GHC.Float.showFloat_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S3bQP_srt+1320


==================== Asm code ====================
2018-03-16 15:57:55.904100524 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fShowDouble2_closure
.type GHC.Float.$fShowDouble2_closure, @object
GHC.Float.$fShowDouble2_closure:
	.quad	GHC.Float.$fShowDouble2_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:55.904898697 UTC

.section .text
.align 8
sat_s3bvb_entry:
_c3ioT:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3ioU
_c3ioV:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3ioQ_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _c3ioQ
_c3ioR:
	movq (%rbx),%rax
	jmp *(%rax)
_c3ioU:
	jmp *-16(%r13)
	.size sat_s3bvb_entry, .-sat_s3bvb_entry


==================== Asm code ====================
2018-03-16 15:57:55.905582841 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bvb_info:
	.quad	sat_s3bvb_entry
	.quad	1
	.quad	4294967312
	.quad	S3bQP_srt+1296


==================== Asm code ====================
2018-03-16 15:57:55.906226408 UTC

.section .text
.align 8
_c3ioQ:
_c3ioQ:
	movsd 7(%rbx),%xmm1
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rdi
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rsi
	leaq GHC.Float.FFGeneric_closure+3(%rip),%r14
	addq $8,%rbp
	jmp GHC.Float.$w$sformatRealFloatAlt_entry
	.size _c3ioQ, .-_c3ioQ


==================== Asm code ====================
2018-03-16 15:57:55.906847314 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3ioQ_info:
	.quad	_c3ioQ
	.quad	0
	.quad	4294967326
	.quad	S3bQP_srt+1296


==================== Asm code ====================
2018-03-16 15:57:55.90760972 UTC

.section .text
.align 8
.globl GHC.Float.$fShowDouble2_entry
.type GHC.Float.$fShowDouble2_entry, @object
GHC.Float.$fShowDouble2_entry:
_c3ip0:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3ip4
_c3ip3:
	leaq sat_s3bvb_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	movq GHC.Base.++_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_c3ip4:
	movq $24,904(%r13)
	leaq GHC.Float.$fShowDouble2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fShowDouble2_entry, .-GHC.Float.$fShowDouble2_entry


==================== Asm code ====================
2018-03-16 15:57:55.90825885 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fShowDouble2_info
.type GHC.Float.$fShowDouble2_info, @object
GHC.Float.$fShowDouble2_info:
	.quad	GHC.Float.$fShowDouble2_entry
	.quad	0
	.quad	141733920782
	.quad	4294967301
	.quad	S3bQP_srt+1296


==================== Asm code ====================
2018-03-16 15:57:55.911222583 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fShowDouble_$cshowsPrec_closure
.type GHC.Float.$fShowDouble_$cshowsPrec_closure, @object
GHC.Float.$fShowDouble_$cshowsPrec_closure:
	.quad	GHC.Float.$fShowDouble_$cshowsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:55.912008061 UTC

.section .text
.align 8
.globl GHC.Float.$fShowDouble_$cshowsPrec_entry
.type GHC.Float.$fShowDouble_$cshowsPrec_entry, @object
GHC.Float.$fShowDouble_$cshowsPrec_entry:
_c3ipu:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3ipv
_c3ipw:
	leaq block_c3ipr_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3ipr
_c3ips:
	movq (%rbx),%rax
	jmp *(%rax)
_c3ipv:
	leaq GHC.Float.$fShowDouble_$cshowsPrec_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fShowDouble_$cshowsPrec_entry, .-GHC.Float.$fShowDouble_$cshowsPrec_entry


==================== Asm code ====================
2018-03-16 15:57:55.912687408 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fShowDouble_$cshowsPrec_info
.type GHC.Float.$fShowDouble_$cshowsPrec_info, @object
GHC.Float.$fShowDouble_$cshowsPrec_info:
	.quad	GHC.Float.$fShowDouble_$cshowsPrec_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S3bQP_srt+1336


==================== Asm code ====================
2018-03-16 15:57:55.913408006 UTC

.section .text
.align 8
_c3ipr:
_c3ipr:
	movsd 7(%rbx),%xmm1
	movq 8(%rbp),%rsi
	leaq GHC.Float.$fShowDouble2_closure+1(%rip),%r14
	addq $16,%rbp
	jmp GHC.Float.$w$sshowSignedFloat_entry
	.size _c3ipr, .-_c3ipr


==================== Asm code ====================
2018-03-16 15:57:55.91402012 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3ipr_info:
	.quad	_c3ipr
	.quad	1
	.quad	4294967326
	.quad	S3bQP_srt+1336


==================== Asm code ====================
2018-03-16 15:57:55.916898556 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fShowDouble_$cshow_closure
.type GHC.Float.$fShowDouble_$cshow_closure, @object
GHC.Float.$fShowDouble_$cshow_closure:
	.quad	GHC.Float.$fShowDouble_$cshow_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:55.917708088 UTC

.section .text
.align 8
.globl GHC.Float.$fShowDouble_$cshow_entry
.type GHC.Float.$fShowDouble_$cshow_entry, @object
GHC.Float.$fShowDouble_$cshow_entry:
_c3ipS:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3ipT
_c3ipU:
	leaq block_c3ipP_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3ipP
_c3ipQ:
	movq (%rbx),%rax
	jmp *(%rax)
_c3ipT:
	leaq GHC.Float.$fShowDouble_$cshow_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fShowDouble_$cshow_entry, .-GHC.Float.$fShowDouble_$cshow_entry


==================== Asm code ====================
2018-03-16 15:57:55.918347163 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fShowDouble_$cshow_info
.type GHC.Float.$fShowDouble_$cshow_info, @object
GHC.Float.$fShowDouble_$cshow_info:
	.quad	GHC.Float.$fShowDouble_$cshow_entry
	.quad	0
	.quad	21474836494
	.quad	4294967301
	.quad	S3bQP_srt+1336


==================== Asm code ====================
2018-03-16 15:57:55.919028113 UTC

.section .text
.align 8
_c3ipP:
_c3ipP:
	movsd 7(%rbx),%xmm1
	leaq GHC.Float.minExpt_closure+1(%rip),%rsi
	leaq GHC.Float.$fShowDouble2_closure+1(%rip),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-8(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp GHC.Float.$w$sshowSignedFloat_entry
	.size _c3ipP, .-_c3ipP


==================== Asm code ====================
2018-03-16 15:57:55.919666494 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3ipP_info:
	.quad	_c3ipP
	.quad	0
	.quad	4294967326
	.quad	S3bQP_srt+1336


==================== Asm code ====================
2018-03-16 15:57:55.923169742 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fShowDouble1_closure
.type GHC.Float.$fShowDouble1_closure, @object
GHC.Float.$fShowDouble1_closure:
	.quad	GHC.Float.$fShowDouble1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:55.923960127 UTC

.section .text
.align 8
.globl GHC.Float.$fShowDouble1_entry
.type GHC.Float.$fShowDouble1_entry, @object
GHC.Float.$fShowDouble1_entry:
_c3iqj:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3iqk
_c3iql:
	leaq block_c3iqg_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3iqg
_c3iqh:
	movq (%rbx),%rax
	jmp *(%rax)
_c3iqk:
	leaq GHC.Float.$fShowDouble1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fShowDouble1_entry, .-GHC.Float.$fShowDouble1_entry


==================== Asm code ====================
2018-03-16 15:57:55.924633408 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fShowDouble1_info
.type GHC.Float.$fShowDouble1_info, @object
GHC.Float.$fShowDouble1_info:
	.quad	GHC.Float.$fShowDouble1_entry
	.quad	0
	.quad	38654705678
	.quad	4294967301
	.quad	S3bQP_srt+1336


==================== Asm code ====================
2018-03-16 15:57:55.92538528 UTC

.section .text
.align 8
_c3iqg:
_c3iqg:
	movsd 7(%rbx),%xmm1
	leaq GHC.Float.minExpt_closure+1(%rip),%rsi
	leaq GHC.Float.$fShowDouble2_closure+1(%rip),%r14
	addq $8,%rbp
	jmp GHC.Float.$w$sshowSignedFloat_entry
	.size _c3iqg, .-_c3iqg


==================== Asm code ====================
2018-03-16 15:57:55.92593773 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3iqg_info:
	.quad	_c3iqg
	.quad	0
	.quad	4294967326
	.quad	S3bQP_srt+1336


==================== Asm code ====================
2018-03-16 15:57:55.928216388 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fShowDouble_$cshowList_closure
.type GHC.Float.$fShowDouble_$cshowList_closure, @object
GHC.Float.$fShowDouble_$cshowList_closure:
	.quad	GHC.Float.$fShowDouble_$cshowList_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:55.928900306 UTC

.section .text
.align 8
.globl GHC.Float.$fShowDouble_$cshowList_entry
.type GHC.Float.$fShowDouble_$cshowList_entry, @object
GHC.Float.$fShowDouble_$cshowList_entry:
_c3iqE:
	movq %rsi,%rdi
	movq %r14,%rsi
	leaq GHC.Float.$fShowDouble1_closure+1(%rip),%r14
	jmp *GHC.Show.showList___entry@gotpcrel(%rip)
	.size GHC.Float.$fShowDouble_$cshowList_entry, .-GHC.Float.$fShowDouble_$cshowList_entry


==================== Asm code ====================
2018-03-16 15:57:55.929616303 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fShowDouble_$cshowList_info
.type GHC.Float.$fShowDouble_$cshowList_info, @object
GHC.Float.$fShowDouble_$cshowList_info:
	.quad	GHC.Float.$fShowDouble_$cshowList_entry
	.quad	0
	.quad	4294967310
	.quad	8589934607
	.quad	S3bQP_srt+1360


==================== Asm code ====================
2018-03-16 15:57:55.932182597 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fShowDouble_closure
.type GHC.Float.$fShowDouble_closure, @object
GHC.Float.$fShowDouble_closure:
	.quad	GHC.Show.C:Show_con_info
	.quad	GHC.Float.$fShowDouble_$cshowsPrec_closure+2
	.quad	GHC.Float.$fShowDouble_$cshow_closure+1
	.quad	GHC.Float.$fShowDouble_$cshowList_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:55.935894099 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fShowFloat2_closure
.type GHC.Float.$fShowFloat2_closure, @object
GHC.Float.$fShowFloat2_closure:
	.quad	GHC.Float.$fShowFloat2_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:55.936730362 UTC

.section .text
.align 8
sat_s3bvp_entry:
_c3iqX:
	leaq -24(%rbp),%rax
	cmpq %r15,%rax
	jb _c3iqY
_c3iqZ:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	leaq block_c3iqU_info(%rip),%rax
	movq %rax,-24(%rbp)
	movq 16(%rbx),%rbx
	addq $-24,%rbp
	testb $7,%bl
	jne _c3iqU
_c3iqV:
	movq (%rbx),%rax
	jmp *(%rax)
_c3iqY:
	jmp *-16(%r13)
	.size sat_s3bvp_entry, .-sat_s3bvp_entry


==================== Asm code ====================
2018-03-16 15:57:55.938021613 UTC

.section .data.rel.ro
.align 8
.align 1
sat_s3bvp_info:
	.quad	sat_s3bvp_entry
	.quad	1
	.quad	4294967312
	.quad	S3bQP_srt+1248


==================== Asm code ====================
2018-03-16 15:57:55.938732665 UTC

.section .text
.align 8
_c3iqU:
_c3iqU:
	movss 7(%rbx),%xmm1
	movq GHC.Types.False_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rdi
	movq GHC.Base.Nothing_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rsi
	leaq GHC.Float.FFGeneric_closure+3(%rip),%r14
	addq $8,%rbp
	jmp GHC.Float.$w$sformatRealFloatAlt1_entry
	.size _c3iqU, .-_c3iqU


==================== Asm code ====================
2018-03-16 15:57:55.939353919 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3iqU_info:
	.quad	_c3iqU
	.quad	0
	.quad	4294967326
	.quad	S3bQP_srt+1248


==================== Asm code ====================
2018-03-16 15:57:55.940134852 UTC

.section .text
.align 8
.globl GHC.Float.$fShowFloat2_entry
.type GHC.Float.$fShowFloat2_entry, @object
GHC.Float.$fShowFloat2_entry:
_c3ir4:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _c3ir8
_c3ir7:
	leaq sat_s3bvp_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %r14,(%r12)
	leaq -16(%r12),%r14
	movq GHC.Base.++_closure@gotpcrel(%rip),%rax
	leaq 2(%rax),%rbx
	jmp *stg_ap_p_fast@gotpcrel(%rip)
_c3ir8:
	movq $24,904(%r13)
	leaq GHC.Float.$fShowFloat2_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fShowFloat2_entry, .-GHC.Float.$fShowFloat2_entry


==================== Asm code ====================
2018-03-16 15:57:55.940820915 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fShowFloat2_info
.type GHC.Float.$fShowFloat2_info, @object
GHC.Float.$fShowFloat2_info:
	.quad	GHC.Float.$fShowFloat2_entry
	.quad	0
	.quad	140741783322638
	.quad	4294967301
	.quad	S3bQP_srt+1248


==================== Asm code ====================
2018-03-16 15:57:55.944002532 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fShowFloat_$cshowsPrec_closure
.type GHC.Float.$fShowFloat_$cshowsPrec_closure, @object
GHC.Float.$fShowFloat_$cshowsPrec_closure:
	.quad	GHC.Float.$fShowFloat_$cshowsPrec_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:55.944832173 UTC

.section .text
.align 8
.globl GHC.Float.$fShowFloat_$cshowsPrec_entry
.type GHC.Float.$fShowFloat_$cshowsPrec_entry, @object
GHC.Float.$fShowFloat_$cshowsPrec_entry:
_c3iry:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3irz
_c3irA:
	leaq block_c3irv_info(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rsi,%rbx
	movq %r14,-8(%rbp)
	addq $-16,%rbp
	testb $7,%bl
	jne _c3irv
_c3irw:
	movq (%rbx),%rax
	jmp *(%rax)
_c3irz:
	leaq GHC.Float.$fShowFloat_$cshowsPrec_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fShowFloat_$cshowsPrec_entry, .-GHC.Float.$fShowFloat_$cshowsPrec_entry


==================== Asm code ====================
2018-03-16 15:57:55.945551833 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fShowFloat_$cshowsPrec_info
.type GHC.Float.$fShowFloat_$cshowsPrec_info, @object
GHC.Float.$fShowFloat_$cshowsPrec_info:
	.quad	GHC.Float.$fShowFloat_$cshowsPrec_entry
	.quad	0
	.quad	12884901902
	.quad	8589934607
	.quad	S3bQP_srt+1368


==================== Asm code ====================
2018-03-16 15:57:55.946198912 UTC

.section .text
.align 8
_c3irv:
_c3irv:
	movss 7(%rbx),%xmm1
	movq 8(%rbp),%rsi
	leaq GHC.Float.$fShowFloat2_closure+1(%rip),%r14
	addq $16,%rbp
	jmp GHC.Float.$w$sshowSignedFloat1_entry
	.size _c3irv, .-_c3irv


==================== Asm code ====================
2018-03-16 15:57:55.94673546 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3irv_info:
	.quad	_c3irv
	.quad	1
	.quad	4294967326
	.quad	S3bQP_srt+1368


==================== Asm code ====================
2018-03-16 15:57:55.949614733 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fShowFloat_$cshow_closure
.type GHC.Float.$fShowFloat_$cshow_closure, @object
GHC.Float.$fShowFloat_$cshow_closure:
	.quad	GHC.Float.$fShowFloat_$cshow_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:55.950389294 UTC

.section .text
.align 8
.globl GHC.Float.$fShowFloat_$cshow_entry
.type GHC.Float.$fShowFloat_$cshow_entry, @object
GHC.Float.$fShowFloat_$cshow_entry:
_c3irW:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _c3irX
_c3irY:
	leaq block_c3irT_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3irT
_c3irU:
	movq (%rbx),%rax
	jmp *(%rax)
_c3irX:
	leaq GHC.Float.$fShowFloat_$cshow_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fShowFloat_$cshow_entry, .-GHC.Float.$fShowFloat_$cshow_entry


==================== Asm code ====================
2018-03-16 15:57:55.951048267 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fShowFloat_$cshow_info
.type GHC.Float.$fShowFloat_$cshow_info, @object
GHC.Float.$fShowFloat_$cshow_info:
	.quad	GHC.Float.$fShowFloat_$cshow_entry
	.quad	0
	.quad	21474836494
	.quad	4294967301
	.quad	S3bQP_srt+1368


==================== Asm code ====================
2018-03-16 15:57:55.951741989 UTC

.section .text
.align 8
_c3irT:
_c3irT:
	movss 7(%rbx),%xmm1
	leaq GHC.Float.minExpt_closure+1(%rip),%rsi
	leaq GHC.Float.$fShowFloat2_closure+1(%rip),%r14
	movq stg_ap_p_info@gotpcrel(%rip),%rax
	movq %rax,-8(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,(%rbp)
	addq $-8,%rbp
	jmp GHC.Float.$w$sshowSignedFloat1_entry
	.size _c3irT, .-_c3irT


==================== Asm code ====================
2018-03-16 15:57:55.952381739 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3irT_info:
	.quad	_c3irT
	.quad	0
	.quad	4294967326
	.quad	S3bQP_srt+1368


==================== Asm code ====================
2018-03-16 15:57:55.955170117 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fShowFloat1_closure
.type GHC.Float.$fShowFloat1_closure, @object
GHC.Float.$fShowFloat1_closure:
	.quad	GHC.Float.$fShowFloat1_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:55.955928252 UTC

.section .text
.align 8
.globl GHC.Float.$fShowFloat1_entry
.type GHC.Float.$fShowFloat1_entry, @object
GHC.Float.$fShowFloat1_entry:
_c3isn:
	leaq -8(%rbp),%rax
	cmpq %r15,%rax
	jb _c3iso
_c3isp:
	leaq block_c3isk_info(%rip),%rax
	movq %rax,-8(%rbp)
	movq %r14,%rbx
	addq $-8,%rbp
	testb $7,%bl
	jne _c3isk
_c3isl:
	movq (%rbx),%rax
	jmp *(%rax)
_c3iso:
	leaq GHC.Float.$fShowFloat1_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.Float.$fShowFloat1_entry, .-GHC.Float.$fShowFloat1_entry


==================== Asm code ====================
2018-03-16 15:57:55.956561528 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fShowFloat1_info
.type GHC.Float.$fShowFloat1_info, @object
GHC.Float.$fShowFloat1_info:
	.quad	GHC.Float.$fShowFloat1_entry
	.quad	0
	.quad	38654705678
	.quad	4294967301
	.quad	S3bQP_srt+1368


==================== Asm code ====================
2018-03-16 15:57:55.957155943 UTC

.section .text
.align 8
_c3isk:
_c3isk:
	movss 7(%rbx),%xmm1
	leaq GHC.Float.minExpt_closure+1(%rip),%rsi
	leaq GHC.Float.$fShowFloat2_closure+1(%rip),%r14
	addq $8,%rbp
	jmp GHC.Float.$w$sshowSignedFloat1_entry
	.size _c3isk, .-_c3isk


==================== Asm code ====================
2018-03-16 15:57:55.957791125 UTC

.section .data.rel.ro
.align 8
.align 1
block_c3isk_info:
	.quad	_c3isk
	.quad	0
	.quad	4294967326
	.quad	S3bQP_srt+1368


==================== Asm code ====================
2018-03-16 15:57:55.959973518 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fShowFloat_$cshowList_closure
.type GHC.Float.$fShowFloat_$cshowList_closure, @object
GHC.Float.$fShowFloat_$cshowList_closure:
	.quad	GHC.Float.$fShowFloat_$cshowList_info
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:55.96064546 UTC

.section .text
.align 8
.globl GHC.Float.$fShowFloat_$cshowList_entry
.type GHC.Float.$fShowFloat_$cshowList_entry, @object
GHC.Float.$fShowFloat_$cshowList_entry:
_c3isI:
	movq %rsi,%rdi
	movq %r14,%rsi
	leaq GHC.Float.$fShowFloat1_closure+1(%rip),%r14
	jmp *GHC.Show.showList___entry@gotpcrel(%rip)
	.size GHC.Float.$fShowFloat_$cshowList_entry, .-GHC.Float.$fShowFloat_$cshowList_entry


==================== Asm code ====================
2018-03-16 15:57:55.961224538 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.$fShowFloat_$cshowList_info
.type GHC.Float.$fShowFloat_$cshowList_info, @object
GHC.Float.$fShowFloat_$cshowList_info:
	.quad	GHC.Float.$fShowFloat_$cshowList_entry
	.quad	0
	.quad	4294967310
	.quad	8589934607
	.quad	S3bQP_srt+1392


==================== Asm code ====================
2018-03-16 15:57:55.963005608 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.$fShowFloat_closure
.type GHC.Float.$fShowFloat_closure, @object
GHC.Float.$fShowFloat_closure:
	.quad	GHC.Show.C:Show_con_info
	.quad	GHC.Float.$fShowFloat_$cshowsPrec_closure+2
	.quad	GHC.Float.$fShowFloat_$cshow_closure+1
	.quad	GHC.Float.$fShowFloat_$cshowList_closure+2
	.quad	0


==================== Asm code ====================
2018-03-16 15:57:55.96690603 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.C:Floating_closure
.type GHC.Float.C:Floating_closure, @object
GHC.Float.C:Floating_closure:
	.quad	GHC.Float.C:Floating_info


==================== Asm code ====================
2018-03-16 15:57:55.968169094 UTC

.section .text
.align 8
.globl GHC.Float.C:Floating_slow
.type GHC.Float.C:Floating_slow, @object
GHC.Float.C:Floating_slow:
_c3isR:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.Float.C:Floating_entry
	.size GHC.Float.C:Floating_slow, .-GHC.Float.C:Floating_slow


==================== Asm code ====================
2018-03-16 15:57:55.969224576 UTC

.section .text
.align 8
GHC.Float.C:Floating_entry:
_c3isW:
	addq $192,%r12
	cmpq 856(%r13),%r12
	ja _c3it0
_c3isZ:
	leaq GHC.Float.C:Floating_con_info(%rip),%rax
	movq %rax,-184(%r12)
	movq %r14,-176(%r12)
	movq %rsi,-168(%r12)
	movq %rdi,-160(%r12)
	movq %r8,-152(%r12)
	movq %r9,-144(%r12)
	movq (%rbp),%rax
	movq %rax,-136(%r12)
	movq 8(%rbp),%rax
	movq %rax,-128(%r12)
	movq 16(%rbp),%rax
	movq %rax,-120(%r12)
	movq 24(%rbp),%rax
	movq %rax,-112(%r12)
	movq 32(%rbp),%rax
	movq %rax,-104(%r12)
	movq 40(%rbp),%rax
	movq %rax,-96(%r12)
	movq 48(%rbp),%rax
	movq %rax,-88(%r12)
	movq 56(%rbp),%rax
	movq %rax,-80(%r12)
	movq 64(%rbp),%rax
	movq %rax,-72(%r12)
	movq 72(%rbp),%rax
	movq %rax,-64(%r12)
	movq 80(%rbp),%rax
	movq %rax,-56(%r12)
	movq 88(%rbp),%rax
	movq %rax,-48(%r12)
	movq 96(%rbp),%rax
	movq %rax,-40(%r12)
	movq 104(%rbp),%rax
	movq %rax,-32(%r12)
	movq 112(%rbp),%rax
	movq %rax,-24(%r12)
	movq 120(%rbp),%rax
	movq %rax,-16(%r12)
	movq 128(%rbp),%rax
	movq %rax,-8(%r12)
	movq 136(%rbp),%rax
	movq %rax,(%r12)
	leaq -183(%r12),%rbx
	addq $144,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3it0:
	movq $192,904(%r13)
	leaq GHC.Float.C:Floating_closure(%rip),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.Float.C:Floating_entry, .-GHC.Float.C:Floating_entry


==================== Asm code ====================
2018-03-16 15:57:55.970562792 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.Float.C:Floating_info:
	.quad	GHC.Float.C:Floating_entry
	.quad	0
	.quad	14
	.quad	98784247808
	.quad	0
	.quad	23
	.quad	GHC.Float.C:Floating_slow


==================== Asm code ====================
2018-03-16 15:57:55.974097797 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.C:RealFloat_closure
.type GHC.Float.C:RealFloat_closure, @object
GHC.Float.C:RealFloat_closure:
	.quad	GHC.Float.C:RealFloat_info


==================== Asm code ====================
2018-03-16 15:57:55.97483151 UTC

.section .text
.align 8
.globl GHC.Float.C:RealFloat_slow
.type GHC.Float.C:RealFloat_slow, @object
GHC.Float.C:RealFloat_slow:
_c3its:
	movq 32(%rbp),%r9
	movq 24(%rbp),%r8
	movq 16(%rbp),%rdi
	movq 8(%rbp),%rsi
	movq (%rbp),%r14
	addq $40,%rbp
	jmp GHC.Float.C:RealFloat_entry
	.size GHC.Float.C:RealFloat_slow, .-GHC.Float.C:RealFloat_slow


==================== Asm code ====================
2018-03-16 15:57:55.975784961 UTC

.section .text
.align 8
GHC.Float.C:RealFloat_entry:
_c3itx:
	addq $136,%r12
	cmpq 856(%r13),%r12
	ja _c3itB
_c3itA:
	leaq GHC.Float.C:RealFloat_con_info(%rip),%rax
	movq %rax,-128(%r12)
	movq %r14,-120(%r12)
	movq %rsi,-112(%r12)
	movq %rdi,-104(%r12)
	movq %r8,-96(%r12)
	movq %r9,-88(%r12)
	movq (%rbp),%rax
	movq %rax,-80(%r12)
	movq 8(%rbp),%rax
	movq %rax,-72(%r12)
	movq 16(%rbp),%rax
	movq %rax,-64(%r12)
	movq 24(%rbp),%rax
	movq %rax,-56(%r12)
	movq 32(%rbp),%rax
	movq %rax,-48(%r12)
	movq 40(%rbp),%rax
	movq %rax,-40(%r12)
	movq 48(%rbp),%rax
	movq %rax,-32(%r12)
	movq 56(%rbp),%rax
	movq %rax,-24(%r12)
	movq 64(%rbp),%rax
	movq %rax,-16(%r12)
	movq 72(%rbp),%rax
	movq %rax,-8(%r12)
	movq 80(%rbp),%rax
	movq %rax,(%r12)
	leaq -127(%r12),%rbx
	addq $88,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_c3itB:
	movq $136,904(%r13)
	leaq GHC.Float.C:RealFloat_closure(%rip),%rbx
	movq %r14,-40(%rbp)
	movq %rsi,-32(%rbp)
	movq %rdi,-24(%rbp)
	movq %r8,-16(%rbp)
	movq %r9,-8(%rbp)
	addq $-40,%rbp
	jmp *-8(%r13)
	.size GHC.Float.C:RealFloat_entry, .-GHC.Float.C:RealFloat_entry


==================== Asm code ====================
2018-03-16 15:57:55.976606233 UTC

.section .data.rel.ro
.align 8
.align 1
GHC.Float.C:RealFloat_info:
	.quad	GHC.Float.C:RealFloat_entry
	.quad	0
	.quad	14
	.quad	68719476736
	.quad	0
	.quad	16
	.quad	GHC.Float.C:RealFloat_slow


==================== Asm code ====================
2018-03-16 15:57:55.97826694 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.FFExponent_closure
.type GHC.Float.FFExponent_closure, @object
GHC.Float.FFExponent_closure:
	.quad	GHC.Float.FFExponent_con_info


==================== Asm code ====================
2018-03-16 15:57:55.979889375 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.FFFixed_closure
.type GHC.Float.FFFixed_closure, @object
GHC.Float.FFFixed_closure:
	.quad	GHC.Float.FFFixed_con_info


==================== Asm code ====================
2018-03-16 15:57:55.981597791 UTC

.section .data
.align 8
.align 1
.globl GHC.Float.FFGeneric_closure
.type GHC.Float.FFGeneric_closure, @object
GHC.Float.FFGeneric_closure:
	.quad	GHC.Float.FFGeneric_con_info


==================== Asm code ====================
2018-03-16 15:57:55.983874334 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i3itZ_str:
	.asciz "base:GHC.Float.C:Floating"


==================== Asm code ====================
2018-03-16 15:57:55.984594553 UTC

.section .text
.align 8
.globl GHC.Float.C:Floating_con_entry
.type GHC.Float.C:Floating_con_entry, @object
GHC.Float.C:Floating_con_entry:
_c3itY:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Float.C:Floating_con_entry, .-GHC.Float.C:Floating_con_entry


==================== Asm code ====================
2018-03-16 15:57:55.9851952 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.C:Floating_con_info
.type GHC.Float.C:Floating_con_info, @object
GHC.Float.C:Floating_con_info:
	.quad	GHC.Float.C:Floating_con_entry
	.quad	23
	.quad	1
	.quad	i3itZ_str


==================== Asm code ====================
2018-03-16 15:57:55.987792179 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i3iu6_str:
	.asciz "base:GHC.Float.C:RealFloat"


==================== Asm code ====================
2018-03-16 15:57:55.988419487 UTC

.section .text
.align 8
.globl GHC.Float.C:RealFloat_con_entry
.type GHC.Float.C:RealFloat_con_entry, @object
GHC.Float.C:RealFloat_con_entry:
_c3iu5:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Float.C:RealFloat_con_entry, .-GHC.Float.C:RealFloat_con_entry


==================== Asm code ====================
2018-03-16 15:57:55.988998545 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.C:RealFloat_con_info
.type GHC.Float.C:RealFloat_con_info, @object
GHC.Float.C:RealFloat_con_info:
	.quad	GHC.Float.C:RealFloat_con_entry
	.quad	16
	.quad	1
	.quad	i3iu6_str


==================== Asm code ====================
2018-03-16 15:57:55.990743402 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.FFFormat_closure_tbl
.type GHC.Float.FFFormat_closure_tbl, @object
GHC.Float.FFFormat_closure_tbl:
	.quad	GHC.Float.FFExponent_closure+1
	.quad	GHC.Float.FFFixed_closure+2
	.quad	GHC.Float.FFGeneric_closure+3


==================== Asm code ====================
2018-03-16 15:57:55.992712555 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i3iue_str:
	.asciz "base:GHC.Float.FFExponent"


==================== Asm code ====================
2018-03-16 15:57:55.993405425 UTC

.section .text
.align 8
.globl GHC.Float.FFExponent_con_entry
.type GHC.Float.FFExponent_con_entry, @object
GHC.Float.FFExponent_con_entry:
_c3iud:
	incq %rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Float.FFExponent_con_entry, .-GHC.Float.FFExponent_con_entry


==================== Asm code ====================
2018-03-16 15:57:55.993954564 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.FFExponent_con_info
.type GHC.Float.FFExponent_con_info, @object
GHC.Float.FFExponent_con_info:
	.quad	GHC.Float.FFExponent_con_entry
	.quad	4294967296
	.quad	3
	.quad	i3iue_str


==================== Asm code ====================
2018-03-16 15:57:55.995885984 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i3iul_str:
	.asciz "base:GHC.Float.FFFixed"


==================== Asm code ====================
2018-03-16 15:57:55.996435082 UTC

.section .text
.align 8
.globl GHC.Float.FFFixed_con_entry
.type GHC.Float.FFFixed_con_entry, @object
GHC.Float.FFFixed_con_entry:
_c3iuk:
	addq $2,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Float.FFFixed_con_entry, .-GHC.Float.FFFixed_con_entry


==================== Asm code ====================
2018-03-16 15:57:55.996985149 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.FFFixed_con_info
.type GHC.Float.FFFixed_con_info, @object
GHC.Float.FFFixed_con_info:
	.quad	GHC.Float.FFFixed_con_entry
	.quad	4294967296
	.quad	4294967299
	.quad	i3iul_str


==================== Asm code ====================
2018-03-16 15:57:55.99937844 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
i3ius_str:
	.asciz "base:GHC.Float.FFGeneric"


==================== Asm code ====================
2018-03-16 15:57:56.000022993 UTC

.section .text
.align 8
.globl GHC.Float.FFGeneric_con_entry
.type GHC.Float.FFGeneric_con_entry, @object
GHC.Float.FFGeneric_con_entry:
_c3iur:
	addq $3,%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.Float.FFGeneric_con_entry, .-GHC.Float.FFGeneric_con_entry


==================== Asm code ====================
2018-03-16 15:57:56.000576375 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.Float.FFGeneric_con_info
.type GHC.Float.FFGeneric_con_info, @object
GHC.Float.FFGeneric_con_info:
	.quad	GHC.Float.FFGeneric_con_entry
	.quad	4294967296
	.quad	8589934595
	.quad	i3ius_str


==================== Asm code ====================
2018-03-16 15:57:56.004590525 UTC

.section .data.rel.ro
.align 8
.align 1
S3bQP_srt:
	.quad	sat_s3aC6_closure
	.quad	GHC.Integer.Type.plusInteger_closure
	.quad	GHC.Real.divZeroError_closure
	.quad	GHC.Float.rationalToDouble5_closure
	.quad	GHC.Float.$fRealDouble1_closure
	.quad	$w$j_r2Upx_closure
	.quad	GHC.Integer.Type.shiftRInteger_closure
	.quad	GHC.Integer.Logarithms.Internals.roundingMode#_closure
	.quad	GHC.Integer.Logarithms.Internals.integerLog2#_step_closure
	.quad	GHC.Integer.Logarithms.Internals.integerLog2IsPowerOf2#_couldBe_closure
	.quad	GHC.Float.$w$sfromRat''_closure
	.quad	GHC.Float.fromRat''_$sfromRat''1_closure
	.quad	GHC.Float.rationalToDouble_closure
	.quad	GHC.Float.rationalToDouble1_closure
	.quad	GHC.Float.rationalToDouble2_closure
	.quad	GHC.Float.rationalToDouble3_closure
	.quad	GHC.Float.$fFractionalDouble_$cfromRational_closure
	.quad	GHC.Float.$fFractionalDouble_closure
	.quad	GHC.Float.$fEnumDouble_$snumericEnumFromThen_closure
	.quad	GHC.Real.$wnumericEnumFrom_closure
	.quad	GHC.Float.$fEnumDouble_$snumericEnumFrom_closure
	.quad	$w$j1_r2Upy_closure
	.quad	GHC.Float.$w$sfromRat''1_closure
	.quad	GHC.Float.fromRat''_$sfromRat''_closure
	.quad	GHC.Float.rationalToFloat_closure
	.quad	GHC.Float.rationalToFloat1_closure
	.quad	GHC.Float.rationalToFloat2_closure
	.quad	GHC.Float.rationalToFloat3_closure
	.quad	GHC.Float.$fFractionalFloat_$cfromRational_closure
	.quad	GHC.Float.$fFractionalFloat_closure
	.quad	GHC.Float.$fEnumFloat_$snumericEnumFromThen_closure
	.quad	GHC.Float.$fEnumFloat_$snumericEnumFrom_closure
	.quad	sat_s3aJb_closure
	.quad	GHC.Float.$fRealFloatDouble5_closure
	.quad	GHC.Real.^_closure
	.quad	GHC.Real.$fIntegralInt_closure
	.quad	GHC.Float.$w$cproperFraction1_closure
	.quad	GHC.Float.$fRealFracFloat_$cproperFraction_closure
	.quad	GHC.Float.$fRealFracFloat_$ctruncate_closure
	.quad	GHC.Float.$fRealDouble1_closure
	.quad	GHC.Float.$fRealFracFloat_$cceiling_closure
	.quad	GHC.Float.$fRealFracFloat_$cfloor_closure
	.quad	GHC.Real.even_closure
	.quad	GHC.Float.$w$cround1_closure
	.quad	GHC.Float.$fRealFracFloat_$cround_closure
	.quad	GHC.Float.ConversionUtils.elimZerosInt#_closure
	.quad	GHC.Float.$w$ctoRational1_closure
	.quad	GHC.Float.$fRealFloat_$ctoRational_closure
	.quad	GHC.Integer.Type.decodeDoubleInteger_closure
	.quad	GHC.Float.$w$ctoRational_closure
	.quad	GHC.Float.$fRealDouble_$ctoRational_closure
	.quad	GHC.Float.$w$cexponent1_closure
	.quad	GHC.Float.rationalToDouble5_closure
	.quad	GHC.Float.$fRealFloatFloat_$cexponent_closure
	.quad	GHC.Float.$fRealFloatDouble_$cdecodeFloat_closure
	.quad	GHC.Real.$fEnumRatio1_closure
	.quad	GHC.Real.^1_closure
	.quad	GHC.Real.$wf_closure
	.quad	GHC.Float.$w$cproperFraction_closure
	.quad	GHC.Real.divZeroError_closure
	.quad	GHC.Float.$fRealFracDouble_$cproperFraction_closure
	.quad	GHC.Float.$fRealFracDouble_$ctruncate_closure
	.quad	GHC.Float.$fRealFracDouble_$cceiling_closure
	.quad	GHC.Float.$fRealFracDouble_$cfloor_closure
	.quad	GHC.Float.$w$cexponent_closure
	.quad	GHC.Float.$fRealFloatDouble_$cexponent_closure
	.quad	GHC.Float.$fRealFloatDouble_$csignificand_closure
	.quad	GHC.Float.$w$cround_closure
	.quad	GHC.Float.$fRealFracDouble_$cround_closure
	.quad	GHC.Float.$fRealFloatDouble5_closure
	.quad	GHC.Float.$dmatan2_closure
	.quad	GHC.Float.$dmexpm1_closure
	.quad	GHC.Float.$fRealDouble1_closure
	.quad	GHC.Float.$dmlog1p_closure
	.quad	lvl1_r2Upz_closure
	.quad	GHC.Float.$dmsqrt_closure
	.quad	GHC.Err.errorWithoutStackTrace_closure
	.quad	GHC.Float.$wroundTo_closure
	.quad	GHC.Float.roundTo1_closure
	.quad	GHC.Float.roundTo_closure
	.quad	GHC.Float.$w$cscaleFloat_closure
	.quad	GHC.Integer.Type.decodeDoubleInteger_closure
	.quad	GHC.Float.$fRealFloatDouble_$cscaleFloat_closure
	.quad	GHC.Float.$fFloatingDouble_$clog1mexp_closure
	.quad	lvl4_r2UqC_closure
	.quad	GHC.Float.$fFloatingFloat_$clog1mexp_closure
	.quad	lvl5_r2UqD_closure
	.quad	GHC.Arr.$windexError_closure
	.quad	GHC.Float.expts2_closure
	.quad	lvl7_r2UqF_closure
	.quad	GHC.Arr.arrEleBottom_closure
	.quad	GHC.Float.expts1_closure
	.quad	sat_s3b00_closure
	.quad	GHC.Float.expts5_closure
	.quad	GHC.Float.expts4_closure
	.quad	GHC.Real.$wf_closure
	.quad	GHC.Real.^1_closure
	.quad	GHC.Real.$fEnumRatio1_closure
	.quad	GHC.Float.expts3_closure
	.quad	GHC.Integer.Logarithms.integerLogBase#_closure
	.quad	GHC.Float.$wintegerLogBase_closure
	.quad	GHC.Integer.Logarithms.Internals.integerLog2#_step_closure
	.quad	GHC.Float.integerLogBase_closure
	.quad	GHC.Float.$dmexponent_closure
	.quad	GHC.Float.rationalToDouble5_closure
	.quad	GHC.Float.showSignedFloat_closure
	.quad	GHC.Float.$dmscaleFloat_closure
	.quad	GHC.Integer.Type.shiftRInteger_closure
	.quad	GHC.Float.$fRealDouble1_closure
	.quad	GHC.Real.divZeroError_closure
	.quad	GHC.Integer.Type.plusInteger_closure
	.quad	GHC.Float.$wfromRat''_closure
	.quad	GHC.Float.fromRat''_closure
	.quad	GHC.Float.$w$cfromEnum_closure
	.quad	GHC.Float.$fEnumDouble_$cfromEnum_closure
	.quad	GHC.Real.numericEnumFromTo_closure
	.quad	GHC.Float.$fFractionalDouble_closure
	.quad	GHC.Real.numericEnumFromThenTo_closure
	.quad	GHC.Float.expts_closure
	.quad	GHC.Float.expts10_closure
	.quad	GHC.Float.$wexpt_closure
	.quad	GHC.Float.expt1_closure
	.quad	GHC.Float.expt_closure
	.quad	GHC.Real.$fIntegralInteger_closure
	.quad	GHC.Real.$w$s$cround_closure
	.quad	GHC.Real.$w$s$c/_closure
	.quad	GHC.Real.$w$s$ccompare_closure
	.quad	GHC.Float.fromRat'_closure
	.quad	GHC.Float.$wfromRat_closure
	.quad	GHC.Float.fromRat_closure
	.quad	sat_s3bat_closure
	.quad	GHC.Integer.Type.timesInteger_closure
	.quad	lvl9_r2UqH_closure
	.quad	lvl10_r2UqI_closure
	.quad	GHC.Float.$w$sfloatToDigits1_closure
	.quad	GHC.Integer.Type.decodeDoubleInteger_closure
	.quad	lvl11_r2UqJ_closure
	.quad	GHC.Float.$w$sfloatToDigits_closure
	.quad	GHC.Float.rationalToDouble5_closure
	.quad	GHC.Float.$wfloatToDigits_closure
	.quad	GHC.Float.floatToDigits_closure
	.quad	GHC.Err.errorWithoutStackTrace_closure
	.quad	Control.Exception.Base.patError_closure
	.quad	lvl23_r2UqW_closure
	.quad	$wf_r2UqX_closure
	.quad	$wxs1_r2Ura_closure
	.quad	lvl35_r2Ur9_closure
	.quad	GHC.Show.intToDigit_closure
	.quad	lvl25_r2UqZ_closure
	.quad	$j_r2Urc_closure
	.quad	GHC.Float.$wroundTo_closure
	.quad	GHC.List.init2_closure
	.quad	lvl18_r2UqR_closure
	.quad	lvl34_r2Ur8_closure
	.quad	lvl13_r2UqM_closure
	.quad	lvl16_r2UqP_closure
	.quad	GHC.Float.$w$sformatRealFloatAlt1_closure
	.quad	lvl27_r2Ur1_closure
	.quad	lvl29_r2Ur3_closure
	.quad	lvl31_r2Ur5_closure
	.quad	GHC.Float.$fShowFloat_$sformatRealFloatAlt_closure
	.quad	$wxs2_r2Ure_closure
	.quad	GHC.Float.$w$sformatRealFloatAlt_closure
	.quad	GHC.Float.$fShowDouble_$sformatRealFloatAlt_closure
	.quad	$wxs3_r2Urf_closure
	.quad	GHC.Float.formatRealFloatAlt_closure
	.quad	GHC.Float.showFloat_closure
	.quad	GHC.Float.$fShowDouble2_closure
	.quad	GHC.Float.$fShowDouble_$cshowsPrec_closure
	.quad	GHC.Float.$fShowDouble_$cshow_closure
	.quad	GHC.Float.$fShowDouble1_closure
	.quad	GHC.Float.$fShowFloat2_closure
	.quad	GHC.Float.$fShowFloat_$cshowsPrec_closure
	.quad	GHC.Float.$fShowFloat_$cshow_closure
	.quad	GHC.Float.$fShowFloat1_closure

