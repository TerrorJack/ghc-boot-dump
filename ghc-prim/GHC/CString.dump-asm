
==================== Asm code ====================
2018-03-16 15:49:39.741696617 UTC

.section .data
.align 8
.align 1
.globl GHC.CString.unpackCString#_closure
.type GHC.CString.unpackCString#_closure, @object
GHC.CString.unpackCString#_closure:
	.quad	GHC.CString.unpackCString#_info


==================== Asm code ====================
2018-03-16 15:49:39.742648318 UTC

.section .text
.align 8
sat_sjMu_entry:
_ck24:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ck25
_ck26:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	leaq 1(%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp unpack_sjMp_entry
_ck25:
	jmp *-16(%r13)
	.size sat_sjMu_entry, .-sat_sjMu_entry


==================== Asm code ====================
2018-03-16 15:49:39.743268541 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sjMu_info:
	.quad	sat_sjMu_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 15:49:39.744092114 UTC

.section .text
.align 8
unpack_sjMp_entry:
_ck2a:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _ck2b
_ck2c:
	movq 7(%rbx),%rax
	movzbl (%rax,%r14,1),%eax
	testq %rax,%rax
	je _ck29
_uk2n:
	movq %rbx,-24(%rbp)
	movq %r14,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp _ck1W
_ck2b:
	jmp *-8(%r13)
_ck29:
	movl $[]_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size unpack_sjMp_entry, .-unpack_sjMp_entry


==================== Asm code ====================
2018-03-16 15:49:39.744800253 UTC

.section .data.rel.ro
.align 8
.align 1
unpack_sjMp_info:
	.quad	unpack_sjMp_entry
	.quad	4294967296
	.quad	10
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:49:39.74582463 UTC

.section .text
.align 8
_ck1W:
_ck1W:
	addq $72,%r12
	movq 16(%rbp),%rax
	cmpq 856(%r13),%r12
	ja _ck2h
_ck2g:
	movq $sat_sjMu_info,-64(%r12)
	movq (%rbp),%rbx
	movq %rbx,-48(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq $GHC.Types.C#_con_info,-32(%r12)
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -64(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ck2h:
	movq $72,904(%r13)
	movq $block_ck1V_info,-8(%rbp)
	movq %rax,%rbx
	addq $-8,%rbp
	jmp stg_gc_unbx_r1
	.size _ck1W, .-_ck1W


==================== Asm code ====================
2018-03-16 15:49:39.746658974 UTC

.section .text
.align 8
_ck1V:
_ck1V:
	movq %rbx,24(%rbp)
	addq $8,%rbp
	jmp _ck1W
	.size _ck1V, .-_ck1V


==================== Asm code ====================
2018-03-16 15:49:39.748304858 UTC

.section .data.rel.ro
.align 8
.align 1
block_ck1V_info:
	.quad	_ck1V
	.quad	387
	.quad	30


==================== Asm code ====================
2018-03-16 15:49:39.74912193 UTC

.section .text
.align 8
.globl GHC.CString.unpackCString#_entry
.type GHC.CString.unpackCString#_entry, @object
GHC.CString.unpackCString#_entry:
_ck2r:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ck2v
_ck2u:
	movq $unpack_sjMp_info,-8(%r12)
	movq %r14,(%r12)
	xorl %r14d,%r14d
	leaq -7(%r12),%rbx
	jmp unpack_sjMp_entry
_ck2v:
	movq $16,904(%r13)
	movl $GHC.CString.unpackCString#_closure,%ebx
	jmp *-8(%r13)
	.size GHC.CString.unpackCString#_entry, .-GHC.CString.unpackCString#_entry


==================== Asm code ====================
2018-03-16 15:49:39.749854745 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.CString.unpackCString#_info
.type GHC.CString.unpackCString#_info, @object
GHC.CString.unpackCString#_info:
	.quad	GHC.CString.unpackCString#_entry
	.quad	0
	.quad	14
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:49:39.755569922 UTC

.section .data
.align 8
.align 1
.globl GHC.CString.unpackAppendCString#_closure
.type GHC.CString.unpackAppendCString#_closure, @object
GHC.CString.unpackAppendCString#_closure:
	.quad	GHC.CString.unpackAppendCString#_info


==================== Asm code ====================
2018-03-16 15:49:39.756522872 UTC

.section .text
.align 8
sat_sjMC_entry:
_ck3g:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ck3h
_ck3i:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	leaq 1(%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp unpack_sjMx_entry
_ck3h:
	jmp *-16(%r13)
	.size sat_sjMC_entry, .-sat_sjMC_entry


==================== Asm code ====================
2018-03-16 15:49:39.757292033 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sjMC_info:
	.quad	sat_sjMC_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 15:49:39.758184441 UTC

.section .text
.align 8
unpack_sjMx_entry:
_ck3m:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _ck3n
_ck3o:
	movq 15(%rbx),%rax
	movzbl (%rax,%r14,1),%eax
	testq %rax,%rax
	je _ck3l
_uk3z:
	movq %rbx,-24(%rbp)
	movq %r14,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp _ck38
_ck3n:
	jmp *-8(%r13)
_ck3l:
	movq 7(%rbx),%rbx
	andq $-8,%rbx
	movq (%rbx),%rax
	jmp *(%rax)
	.size unpack_sjMx_entry, .-unpack_sjMx_entry


==================== Asm code ====================
2018-03-16 15:49:39.758978864 UTC

.section .data.rel.ro
.align 8
.align 1
unpack_sjMx_info:
	.quad	unpack_sjMx_entry
	.quad	4294967297
	.quad	12
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:49:39.759817709 UTC

.section .text
.align 8
_ck38:
_ck38:
	addq $72,%r12
	movq 16(%rbp),%rax
	cmpq 856(%r13),%r12
	ja _ck3t
_ck3s:
	movq $sat_sjMC_info,-64(%r12)
	movq (%rbp),%rbx
	movq %rbx,-48(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq $GHC.Types.C#_con_info,-32(%r12)
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -64(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ck3t:
	movq $72,904(%r13)
	movq $block_ck37_info,-8(%rbp)
	movq %rax,%rbx
	addq $-8,%rbp
	jmp stg_gc_unbx_r1
	.size _ck38, .-_ck38


==================== Asm code ====================
2018-03-16 15:49:39.760653601 UTC

.section .text
.align 8
_ck37:
_ck37:
	movq %rbx,24(%rbp)
	addq $8,%rbp
	jmp _ck38
	.size _ck37, .-_ck37


==================== Asm code ====================
2018-03-16 15:49:39.761365341 UTC

.section .data.rel.ro
.align 8
.align 1
block_ck37_info:
	.quad	_ck37
	.quad	387
	.quad	30


==================== Asm code ====================
2018-03-16 15:49:39.762125104 UTC

.section .text
.align 8
.globl GHC.CString.unpackAppendCString#_entry
.type GHC.CString.unpackAppendCString#_entry, @object
GHC.CString.unpackAppendCString#_entry:
_ck3D:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ck3H
_ck3G:
	movq $unpack_sjMx_info,-16(%r12)
	movq %rsi,-8(%r12)
	movq %r14,(%r12)
	xorl %r14d,%r14d
	leaq -15(%r12),%rbx
	jmp unpack_sjMx_entry
_ck3H:
	movq $24,904(%r13)
	movl $GHC.CString.unpackAppendCString#_closure,%ebx
	jmp *-8(%r13)
	.size GHC.CString.unpackAppendCString#_entry, .-GHC.CString.unpackAppendCString#_entry


==================== Asm code ====================
2018-03-16 15:49:39.76279616 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.CString.unpackAppendCString#_info
.type GHC.CString.unpackAppendCString#_info, @object
GHC.CString.unpackAppendCString#_info:
	.quad	GHC.CString.unpackAppendCString#_entry
	.quad	0
	.quad	14
	.quad	8589934605


==================== Asm code ====================
2018-03-16 15:49:39.768236009 UTC

.section .data
.align 8
.align 1
.globl GHC.CString.unpackFoldrCString#_closure
.type GHC.CString.unpackFoldrCString#_closure, @object
GHC.CString.unpackFoldrCString#_closure:
	.quad	GHC.CString.unpackFoldrCString#_info


==================== Asm code ====================
2018-03-16 15:49:39.769130115 UTC

.section .text
.align 8
sat_sjML_entry:
_ck4t:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ck4u
_ck4v:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	leaq 1(%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp unpack_sjMG_entry
_ck4u:
	jmp *-16(%r13)
	.size sat_sjML_entry, .-sat_sjML_entry


==================== Asm code ====================
2018-03-16 15:49:39.76984683 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sjML_info:
	.quad	sat_sjML_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 15:49:39.770596793 UTC

.section .text
.align 8
unpack_sjMG_entry:
_ck4z:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ck4A
_ck4B:
	movq 23(%rbx),%rax
	movzbl (%rax,%r14,1),%eax
	testq %rax,%rax
	je _ck4y
_uk4L:
	movq 7(%rbx),%rcx
	movq %rcx,-32(%rbp)
	movq %rbx,-24(%rbp)
	movq %r14,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-32,%rbp
	jmp _ck4l
_ck4A:
	jmp *-8(%r13)
_ck4y:
	movq 15(%rbx),%rbx
	jmp stg_ap_0_fast
	.size unpack_sjMG_entry, .-unpack_sjMG_entry


==================== Asm code ====================
2018-03-16 15:49:39.771326818 UTC

.section .data.rel.ro
.align 8
.align 1
unpack_sjMG_info:
	.quad	unpack_sjMG_entry
	.quad	4294967298
	.quad	8
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:49:39.772136381 UTC

.section .text
.align 8
_ck4l:
_ck4l:
	addq $48,%r12
	movq 24(%rbp),%rax
	cmpq 856(%r13),%r12
	ja _ck4F
_ck4E:
	movq $sat_sjML_info,-40(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-16(%r12)
	movq $GHC.Types.C#_con_info,-8(%r12)
	movq %rax,(%r12)
	leaq -40(%r12),%rsi
	leaq -7(%r12),%r14
	movq (%rbp),%rbx
	addq $32,%rbp
	jmp stg_ap_pp_fast
_ck4F:
	movq $48,904(%r13)
	movq $block_ck4k_info,-8(%rbp)
	movq %rax,%rbx
	addq $-8,%rbp
	jmp stg_gc_unbx_r1
	.size _ck4l, .-_ck4l


==================== Asm code ====================
2018-03-16 15:49:39.772909696 UTC

.section .text
.align 8
_ck4k:
_ck4k:
	movq %rbx,32(%rbp)
	addq $8,%rbp
	jmp _ck4l
	.size _ck4k, .-_ck4k


==================== Asm code ====================
2018-03-16 15:49:39.773529668 UTC

.section .data.rel.ro
.align 8
.align 1
block_ck4k_info:
	.quad	_ck4k
	.quad	772
	.quad	30


==================== Asm code ====================
2018-03-16 15:49:39.774290717 UTC

.section .text
.align 8
.globl GHC.CString.unpackFoldrCString#_entry
.type GHC.CString.unpackFoldrCString#_entry, @object
GHC.CString.unpackFoldrCString#_entry:
_ck4P:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _ck4T
_ck4S:
	movq $unpack_sjMG_info,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rdi,-8(%r12)
	movq %r14,(%r12)
	xorl %r14d,%r14d
	leaq -23(%r12),%rbx
	jmp unpack_sjMG_entry
_ck4T:
	movq $32,904(%r13)
	movl $GHC.CString.unpackFoldrCString#_closure,%ebx
	jmp *-8(%r13)
	.size GHC.CString.unpackFoldrCString#_entry, .-GHC.CString.unpackFoldrCString#_entry


==================== Asm code ====================
2018-03-16 15:49:39.774999461 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.CString.unpackFoldrCString#_info
.type GHC.CString.unpackFoldrCString#_info, @object
GHC.CString.unpackFoldrCString#_info:
	.quad	GHC.CString.unpackFoldrCString#_entry
	.quad	0
	.quad	14
	.quad	12884901907


==================== Asm code ====================
2018-03-16 15:49:39.785093663 UTC

.section .data
.align 8
.align 1
.globl GHC.CString.unpackCStringUtf8#_closure
.type GHC.CString.unpackCStringUtf8#_closure, @object
GHC.CString.unpackCStringUtf8#_closure:
	.quad	GHC.CString.unpackCStringUtf8#_info


==================== Asm code ====================
2018-03-16 15:49:39.786079315 UTC

.section .text
.align 8
sat_sjNg_entry:
_ck62:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ck63
_ck64:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	leaq 4(%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp unpack_sjMN_entry
_ck63:
	jmp *-16(%r13)
	.size sat_sjNg_entry, .-sat_sjNg_entry


==================== Asm code ====================
2018-03-16 15:49:39.786757997 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sjNg_info:
	.quad	sat_sjNg_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 15:49:39.787529766 UTC

.section .text
.align 8
sat_sjNy_entry:
_ck6o:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ck6p
_ck6q:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	leaq 3(%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp unpack_sjMN_entry
_ck6p:
	jmp *-16(%r13)
	.size sat_sjNy_entry, .-sat_sjNy_entry


==================== Asm code ====================
2018-03-16 15:49:39.788249625 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sjNy_info:
	.quad	sat_sjNy_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 15:49:39.788984248 UTC

.section .text
.align 8
sat_sjNK_entry:
_ck6E:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ck6F
_ck6G:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	leaq 2(%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp unpack_sjMN_entry
_ck6F:
	jmp *-16(%r13)
	.size sat_sjNK_entry, .-sat_sjNK_entry


==================== Asm code ====================
2018-03-16 15:49:39.789740333 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sjNK_info:
	.quad	sat_sjNK_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 15:49:39.790492321 UTC

.section .text
.align 8
sat_sjNN_entry:
_ck6O:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ck6P
_ck6Q:
	movq $stg_upd_frame_info,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	leaq 1(%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp unpack_sjMN_entry
_ck6P:
	jmp *-16(%r13)
	.size sat_sjNN_entry, .-sat_sjNN_entry


==================== Asm code ====================
2018-03-16 15:49:39.791179314 UTC

.section .data.rel.ro
.align 8
.align 1
sat_sjNN_info:
	.quad	sat_sjNN_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 15:49:39.792020541 UTC

.section .text
.align 8
unpack_sjMN_entry:
_ck6U:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ck6V
_ck6W:
	movq 7(%rbx),%rax
	movzbl (%rax,%r14,1),%ecx
	testq %rcx,%rcx
	je _ck6T
_uk8X:
	movq %rax,-32(%rbp)
	movq %rbx,-24(%rbp)
	movq %r14,-16(%rbp)
	movq %rcx,-8(%rbp)
	addq $-32,%rbp
	jmp _ck5t
_ck6V:
	jmp *-8(%r13)
_ck6T:
	movl $[]_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size unpack_sjMN_entry, .-unpack_sjMN_entry


==================== Asm code ====================
2018-03-16 15:49:39.792736281 UTC

.section .data.rel.ro
.align 8
.align 1
unpack_sjMN_info:
	.quad	unpack_sjMN_entry
	.quad	4294967296
	.quad	10
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:49:39.794119154 UTC

.section .text
.align 8
_ck5t:
_ck5t:
	addq $72,%r12
	movq 24(%rbp),%rax
	cmpq 856(%r13),%r12
	ja _ck6Z
_ck6Y:
	movq 8(%rbp),%rbx
	movq 16(%rbp),%rcx
	cmpq $127,%rax
	ja _ck8O
_ck8R:
	movq $sat_sjNN_info,-64(%r12)
	movq %rbx,-48(%r12)
	movq %rcx,-40(%r12)
	movq $GHC.Types.C#_con_info,-32(%r12)
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -64(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ck8O:
	movq (%rbp),%rdx
	cmpq $223,%rax
	ja _ck8o
_ck8M:
	leaq 1(%rcx),%rsi
	movzbl (%rdx,%rsi,1),%edx
	movq $sat_sjNK_info,-64(%r12)
	movq %rbx,-48(%r12)
	movq %rcx,-40(%r12)
	movq $GHC.Types.C#_con_info,-32(%r12)
	leaq -128(%rdx),%rbx
	addq $-192,%rax
	shlq $6,%rax
	addq %rbx,%rax
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -64(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ck8o:
	cmpq $239,%rax
	ja _ck7M
_ck8m:
	leaq 2(%rcx),%rsi
	movzbl (%rdx,%rsi,1),%esi
	leaq 1(%rcx),%rdi
	movzbl (%rdx,%rdi,1),%edx
	movq $sat_sjNy_info,-64(%r12)
	movq %rbx,-48(%r12)
	movq %rcx,-40(%r12)
	movq $GHC.Types.C#_con_info,-32(%r12)
	leaq -128(%rsi),%rbx
	leaq -128(%rdx),%rcx
	shlq $6,%rcx
	addq %rbx,%rcx
	addq $-224,%rax
	shlq $12,%rax
	addq %rcx,%rax
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -64(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ck7M:
	leaq 3(%rcx),%rsi
	movzbl (%rdx,%rsi,1),%esi
	leaq 2(%rcx),%rdi
	movzbl (%rdx,%rdi,1),%edi
	leaq 1(%rcx),%r8
	movzbl (%rdx,%r8,1),%edx
	movq $sat_sjNg_info,-64(%r12)
	movq %rbx,-48(%r12)
	movq %rcx,-40(%r12)
	movq $GHC.Types.C#_con_info,-32(%r12)
	leaq -128(%rsi),%rbx
	leaq -128(%rdi),%rcx
	shlq $6,%rcx
	addq %rbx,%rcx
	leaq -128(%rdx),%rbx
	shlq $12,%rbx
	addq %rcx,%rbx
	addq $-240,%rax
	shlq $18,%rax
	addq %rbx,%rax
	movq %rax,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -64(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ck6Z:
	movq $72,904(%r13)
	movq $block_ck5s_info,-8(%rbp)
	movq %rax,%rbx
	addq $-8,%rbp
	jmp stg_gc_unbx_r1
	.size _ck5t, .-_ck5t


==================== Asm code ====================
2018-03-16 15:49:39.795419516 UTC

.section .text
.align 8
_ck5s:
_ck5s:
	movq %rbx,32(%rbp)
	addq $8,%rbp
	jmp _ck5t
	.size _ck5s, .-_ck5s


==================== Asm code ====================
2018-03-16 15:49:39.796010382 UTC

.section .data.rel.ro
.align 8
.align 1
block_ck5s_info:
	.quad	_ck5s
	.quad	836
	.quad	30


==================== Asm code ====================
2018-03-16 15:49:39.796731162 UTC

.section .text
.align 8
.globl GHC.CString.unpackCStringUtf8#_entry
.type GHC.CString.unpackCStringUtf8#_entry, @object
GHC.CString.unpackCStringUtf8#_entry:
_ck91:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ck95
_ck94:
	movq $unpack_sjMN_info,-8(%r12)
	movq %r14,(%r12)
	xorl %r14d,%r14d
	leaq -7(%r12),%rbx
	jmp unpack_sjMN_entry
_ck95:
	movq $16,904(%r13)
	movl $GHC.CString.unpackCStringUtf8#_closure,%ebx
	jmp *-8(%r13)
	.size GHC.CString.unpackCStringUtf8#_entry, .-GHC.CString.unpackCStringUtf8#_entry


==================== Asm code ====================
2018-03-16 15:49:39.797480058 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.CString.unpackCStringUtf8#_info
.type GHC.CString.unpackCStringUtf8#_info, @object
GHC.CString.unpackCStringUtf8#_info:
	.quad	GHC.CString.unpackCStringUtf8#_entry
	.quad	0
	.quad	14
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:49:39.801454786 UTC

.section .data
.align 8
.align 1
.globl GHC.CString.unpackNBytes#_closure
.type GHC.CString.unpackNBytes#_closure, @object
GHC.CString.unpackNBytes#_closure:
	.quad	GHC.CString.unpackNBytes#_info


==================== Asm code ====================
2018-03-16 15:49:39.802267504 UTC

.section .text
.align 8
.globl GHC.CString.unpackNBytes#_entry
.type GHC.CString.unpackNBytes#_entry, @object
GHC.CString.unpackNBytes#_entry:
_ckaD:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _ckaE
_ckaF:
	testq %rsi,%rsi
	je _ckaC
_ckaB:
	movq %r14,-24(%rbp)
	movq $GHC.Types.[]_closure+1,-16(%rbp)
	leaq -1(%rsi),%rax
	movq %rax,-8(%rbp)
	addq $-32,%rbp
	jmp _ckam
_ckaE:
	movl $GHC.CString.unpackNBytes#_closure,%ebx
	jmp *-8(%r13)
_ckaC:
	movl $[]_closure+1,%ebx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.CString.unpackNBytes#_entry, .-GHC.CString.unpackNBytes#_entry


==================== Asm code ====================
2018-03-16 15:49:39.802948408 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.CString.unpackNBytes#_info
.type GHC.CString.unpackNBytes#_info, @object
GHC.CString.unpackNBytes#_info:
	.quad	GHC.CString.unpackNBytes#_entry
	.quad	0
	.quad	14
	.quad	8589934604


==================== Asm code ====================
2018-03-16 15:49:39.803788902 UTC

.section .text
.align 8
_ckam:
_ckam:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _ckaI
_ckaH:
	movq 16(%rbp),%rax
	movq 24(%rbp),%rbx
	testq %rbx,%rbx
	jge _ckaK
_ckaL:
	addq $-40,%r12
	movq %rax,%rbx
	andq $-8,%rbx
	addq $32,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_ckaK:
	movq $GHC.Types.C#_con_info,-32(%r12)
	movq 8(%rbp),%rcx
	movzbl (%rcx,%rbx,1),%ecx
	movq %rcx,-24(%r12)
	movq $:_con_info,-16(%r12)
	leaq -31(%r12),%rcx
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%rax
	movq %rax,16(%rbp)
	leaq -1(%rbx),%rax
	movq %rax,24(%rbp)
	jmp _ckam
_ckaI:
	movq $40,904(%r13)
	movq $block_ckam_info,(%rbp)
	jmp stg_gc_noregs
	.size _ckam, .-_ckam


==================== Asm code ====================
2018-03-16 15:49:39.804536581 UTC

.section .data.rel.ro
.align 8
.align 1
block_ckam_info:
	.quad	_ckam
	.quad	323
	.quad	30


==================== Asm code ====================
2018-03-16 15:49:39.806378444 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.CString.$trModule4_bytes
.type GHC.CString.$trModule4_bytes, @object
GHC.CString.$trModule4_bytes:
	.asciz "ghc-prim"


==================== Asm code ====================
2018-03-16 15:49:39.808065257 UTC

.section .data
.align 8
.align 1
.globl GHC.CString.$trModule3_closure
.type GHC.CString.$trModule3_closure, @object
GHC.CString.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.CString.$trModule4_bytes


==================== Asm code ====================
2018-03-16 15:49:39.809912006 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.CString.$trModule2_bytes
.type GHC.CString.$trModule2_bytes, @object
GHC.CString.$trModule2_bytes:
	.asciz "GHC.CString"


==================== Asm code ====================
2018-03-16 15:49:39.811680889 UTC

.section .data
.align 8
.align 1
.globl GHC.CString.$trModule1_closure
.type GHC.CString.$trModule1_closure, @object
GHC.CString.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.CString.$trModule2_bytes


==================== Asm code ====================
2018-03-16 15:49:39.814056644 UTC

.section .data
.align 8
.align 1
.globl GHC.CString.$trModule_closure
.type GHC.CString.$trModule_closure, @object
GHC.CString.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	GHC.CString.$trModule3_closure+1
	.quad	GHC.CString.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:49:39.815898141 UTC

.section .data.rel.ro
.align 8
.align 1
SjUR_srt:


==================== Asm code ====================
2018-03-16 15:49:40.023150119 UTC

.section .data
.align 8
.align 1
.globl GHC.CString.unpackCString#_closure
.type GHC.CString.unpackCString#_closure, @object
GHC.CString.unpackCString#_closure:
	.quad	GHC.CString.unpackCString#_info


==================== Asm code ====================
2018-03-16 15:49:40.023978668 UTC

.section .text
.align 8
sat_skbj_entry:
_ckda:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckdb
_ckdc:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	leaq 1(%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp unpack_skbe_entry
_ckdb:
	jmp *-16(%r13)
	.size sat_skbj_entry, .-sat_skbj_entry


==================== Asm code ====================
2018-03-16 15:49:40.024623421 UTC

.section .data.rel.ro
.align 8
.align 1
sat_skbj_info:
	.quad	sat_skbj_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 15:49:40.025464345 UTC

.section .text
.align 8
unpack_skbe_entry:
_ckdg:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _ckdh
_ckdi:
	movq 7(%rbx),%rax
	movzbl (%rax,%r14,1),%eax
	testq %rax,%rax
	je _ckdf
_ukdt:
	movq %rbx,-24(%rbp)
	movq %r14,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp _ckd2
_ckdh:
	jmp *-8(%r13)
_ckdf:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size unpack_skbe_entry, .-unpack_skbe_entry


==================== Asm code ====================
2018-03-16 15:49:40.026124464 UTC

.section .data.rel.ro
.align 8
.align 1
unpack_skbe_info:
	.quad	unpack_skbe_entry
	.quad	4294967296
	.quad	10
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:49:40.026929169 UTC

.section .text
.align 8
_ckd2:
_ckd2:
	addq $72,%r12
	movq 16(%rbp),%rax
	cmpq 856(%r13),%r12
	ja _ckdn
_ckdm:
	leaq sat_skbj_info(%rip),%rbx
	movq %rbx,-64(%r12)
	movq (%rbp),%rbx
	movq %rbx,-48(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq GHC.Types.C#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -64(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ckdn:
	movq $72,904(%r13)
	leaq block_ckd1_info(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,%rbx
	addq $-8,%rbp
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _ckd2, .-_ckd2


==================== Asm code ====================
2018-03-16 15:49:40.027718385 UTC

.section .text
.align 8
_ckd1:
_ckd1:
	movq %rbx,24(%rbp)
	addq $8,%rbp
	jmp _ckd2
	.size _ckd1, .-_ckd1


==================== Asm code ====================
2018-03-16 15:49:40.028273316 UTC

.section .data.rel.ro
.align 8
.align 1
block_ckd1_info:
	.quad	_ckd1
	.quad	387
	.quad	30


==================== Asm code ====================
2018-03-16 15:49:40.029107428 UTC

.section .text
.align 8
.globl GHC.CString.unpackCString#_entry
.type GHC.CString.unpackCString#_entry, @object
GHC.CString.unpackCString#_entry:
_ckdx:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ckdB
_ckdA:
	leaq unpack_skbe_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	xorl %r14d,%r14d
	leaq -7(%r12),%rbx
	jmp unpack_skbe_entry
_ckdB:
	movq $16,904(%r13)
	leaq GHC.CString.unpackCString#_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.CString.unpackCString#_entry, .-GHC.CString.unpackCString#_entry


==================== Asm code ====================
2018-03-16 15:49:40.029841564 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.CString.unpackCString#_info
.type GHC.CString.unpackCString#_info, @object
GHC.CString.unpackCString#_info:
	.quad	GHC.CString.unpackCString#_entry
	.quad	0
	.quad	14
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:49:40.03529436 UTC

.section .data
.align 8
.align 1
.globl GHC.CString.unpackAppendCString#_closure
.type GHC.CString.unpackAppendCString#_closure, @object
GHC.CString.unpackAppendCString#_closure:
	.quad	GHC.CString.unpackAppendCString#_info


==================== Asm code ====================
2018-03-16 15:49:40.036117885 UTC

.section .text
.align 8
sat_skbr_entry:
_cket:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckeu
_ckev:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	leaq 1(%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp unpack_skbm_entry
_ckeu:
	jmp *-16(%r13)
	.size sat_skbr_entry, .-sat_skbr_entry


==================== Asm code ====================
2018-03-16 15:49:40.037419589 UTC

.section .data.rel.ro
.align 8
.align 1
sat_skbr_info:
	.quad	sat_skbr_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 15:49:40.038213476 UTC

.section .text
.align 8
unpack_skbm_entry:
_ckez:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _ckeA
_ckeB:
	movq 15(%rbx),%rax
	movzbl (%rax,%r14,1),%eax
	testq %rax,%rax
	je _ckey
_ukeM:
	movq %rbx,-24(%rbp)
	movq %r14,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-24,%rbp
	jmp _ckel
_ckeA:
	jmp *-8(%r13)
_ckey:
	movq 7(%rbx),%rbx
	andq $-8,%rbx
	movq (%rbx),%rax
	jmp *(%rax)
	.size unpack_skbm_entry, .-unpack_skbm_entry


==================== Asm code ====================
2018-03-16 15:49:40.038862668 UTC

.section .data.rel.ro
.align 8
.align 1
unpack_skbm_info:
	.quad	unpack_skbm_entry
	.quad	4294967297
	.quad	12
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:49:40.039863574 UTC

.section .text
.align 8
_ckel:
_ckel:
	addq $72,%r12
	movq 16(%rbp),%rax
	cmpq 856(%r13),%r12
	ja _ckeG
_ckeF:
	leaq sat_skbr_info(%rip),%rbx
	movq %rbx,-64(%r12)
	movq (%rbp),%rbx
	movq %rbx,-48(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-40(%r12)
	movq GHC.Types.C#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -64(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $24,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ckeG:
	movq $72,904(%r13)
	leaq block_ckek_info(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,%rbx
	addq $-8,%rbp
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _ckel, .-_ckel


==================== Asm code ====================
2018-03-16 15:49:40.041105084 UTC

.section .text
.align 8
_ckek:
_ckek:
	movq %rbx,24(%rbp)
	addq $8,%rbp
	jmp _ckel
	.size _ckek, .-_ckek


==================== Asm code ====================
2018-03-16 15:49:40.04185241 UTC

.section .data.rel.ro
.align 8
.align 1
block_ckek_info:
	.quad	_ckek
	.quad	387
	.quad	30


==================== Asm code ====================
2018-03-16 15:49:40.042704926 UTC

.section .text
.align 8
.globl GHC.CString.unpackAppendCString#_entry
.type GHC.CString.unpackAppendCString#_entry, @object
GHC.CString.unpackAppendCString#_entry:
_ckeQ:
	addq $24,%r12
	cmpq 856(%r13),%r12
	ja _ckeU
_ckeT:
	leaq unpack_skbm_info(%rip),%rax
	movq %rax,-16(%r12)
	movq %rsi,-8(%r12)
	movq %r14,(%r12)
	xorl %r14d,%r14d
	leaq -15(%r12),%rbx
	jmp unpack_skbm_entry
_ckeU:
	movq $24,904(%r13)
	leaq GHC.CString.unpackAppendCString#_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.CString.unpackAppendCString#_entry, .-GHC.CString.unpackAppendCString#_entry


==================== Asm code ====================
2018-03-16 15:49:40.043421388 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.CString.unpackAppendCString#_info
.type GHC.CString.unpackAppendCString#_info, @object
GHC.CString.unpackAppendCString#_info:
	.quad	GHC.CString.unpackAppendCString#_entry
	.quad	0
	.quad	14
	.quad	8589934605


==================== Asm code ====================
2018-03-16 15:49:40.04933618 UTC

.section .data
.align 8
.align 1
.globl GHC.CString.unpackFoldrCString#_closure
.type GHC.CString.unpackFoldrCString#_closure, @object
GHC.CString.unpackFoldrCString#_closure:
	.quad	GHC.CString.unpackFoldrCString#_info


==================== Asm code ====================
2018-03-16 15:49:40.050150839 UTC

.section .text
.align 8
sat_skbA_entry:
_ckfM:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckfN
_ckfO:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	leaq 1(%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp unpack_skbv_entry
_ckfN:
	jmp *-16(%r13)
	.size sat_skbA_entry, .-sat_skbA_entry


==================== Asm code ====================
2018-03-16 15:49:40.050813881 UTC

.section .data.rel.ro
.align 8
.align 1
sat_skbA_info:
	.quad	sat_skbA_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 15:49:40.051662579 UTC

.section .text
.align 8
unpack_skbv_entry:
_ckfS:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ckfT
_ckfU:
	movq 23(%rbx),%rax
	movzbl (%rax,%r14,1),%eax
	testq %rax,%rax
	je _ckfR
_ukg4:
	movq 7(%rbx),%rcx
	movq %rcx,-32(%rbp)
	movq %rbx,-24(%rbp)
	movq %r14,-16(%rbp)
	movq %rax,-8(%rbp)
	addq $-32,%rbp
	jmp _ckfE
_ckfT:
	jmp *-8(%r13)
_ckfR:
	movq 15(%rbx),%rbx
	jmp *stg_ap_0_fast@gotpcrel(%rip)
	.size unpack_skbv_entry, .-unpack_skbv_entry


==================== Asm code ====================
2018-03-16 15:49:40.05237428 UTC

.section .data.rel.ro
.align 8
.align 1
unpack_skbv_info:
	.quad	unpack_skbv_entry
	.quad	4294967298
	.quad	8
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:49:40.053125132 UTC

.section .text
.align 8
_ckfE:
_ckfE:
	addq $48,%r12
	movq 24(%rbp),%rax
	cmpq 856(%r13),%r12
	ja _ckfY
_ckfX:
	leaq sat_skbA_info(%rip),%rbx
	movq %rbx,-40(%r12)
	movq 8(%rbp),%rbx
	movq %rbx,-24(%r12)
	movq 16(%rbp),%rbx
	movq %rbx,-16(%r12)
	movq GHC.Types.C#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-8(%r12)
	movq %rax,(%r12)
	leaq -40(%r12),%rsi
	leaq -7(%r12),%r14
	movq (%rbp),%rbx
	addq $32,%rbp
	jmp *stg_ap_pp_fast@gotpcrel(%rip)
_ckfY:
	movq $48,904(%r13)
	leaq block_ckfD_info(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,%rbx
	addq $-8,%rbp
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _ckfE, .-_ckfE


==================== Asm code ====================
2018-03-16 15:49:40.054064526 UTC

.section .text
.align 8
_ckfD:
_ckfD:
	movq %rbx,32(%rbp)
	addq $8,%rbp
	jmp _ckfE
	.size _ckfD, .-_ckfD


==================== Asm code ====================
2018-03-16 15:49:40.054621213 UTC

.section .data.rel.ro
.align 8
.align 1
block_ckfD_info:
	.quad	_ckfD
	.quad	772
	.quad	30


==================== Asm code ====================
2018-03-16 15:49:40.055468802 UTC

.section .text
.align 8
.globl GHC.CString.unpackFoldrCString#_entry
.type GHC.CString.unpackFoldrCString#_entry, @object
GHC.CString.unpackFoldrCString#_entry:
_ckg8:
	addq $32,%r12
	cmpq 856(%r13),%r12
	ja _ckgc
_ckgb:
	leaq unpack_skbv_info(%rip),%rax
	movq %rax,-24(%r12)
	movq %rsi,-16(%r12)
	movq %rdi,-8(%r12)
	movq %r14,(%r12)
	xorl %r14d,%r14d
	leaq -23(%r12),%rbx
	jmp unpack_skbv_entry
_ckgc:
	movq $32,904(%r13)
	leaq GHC.CString.unpackFoldrCString#_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.CString.unpackFoldrCString#_entry, .-GHC.CString.unpackFoldrCString#_entry


==================== Asm code ====================
2018-03-16 15:49:40.056181294 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.CString.unpackFoldrCString#_info
.type GHC.CString.unpackFoldrCString#_info, @object
GHC.CString.unpackFoldrCString#_info:
	.quad	GHC.CString.unpackFoldrCString#_entry
	.quad	0
	.quad	14
	.quad	12884901907


==================== Asm code ====================
2018-03-16 15:49:40.066492851 UTC

.section .data
.align 8
.align 1
.globl GHC.CString.unpackCStringUtf8#_closure
.type GHC.CString.unpackCStringUtf8#_closure, @object
GHC.CString.unpackCStringUtf8#_closure:
	.quad	GHC.CString.unpackCStringUtf8#_info


==================== Asm code ====================
2018-03-16 15:49:40.067348452 UTC

.section .text
.align 8
sat_skc5_entry:
_ckhq:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckhr
_ckhs:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	leaq 4(%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp unpack_skbC_entry
_ckhr:
	jmp *-16(%r13)
	.size sat_skc5_entry, .-sat_skc5_entry


==================== Asm code ====================
2018-03-16 15:49:40.068017358 UTC

.section .data.rel.ro
.align 8
.align 1
sat_skc5_info:
	.quad	sat_skc5_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 15:49:40.068806928 UTC

.section .text
.align 8
sat_skcn_entry:
_ckhM:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckhN
_ckhO:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	leaq 3(%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp unpack_skbC_entry
_ckhN:
	jmp *-16(%r13)
	.size sat_skcn_entry, .-sat_skcn_entry


==================== Asm code ====================
2018-03-16 15:49:40.069737084 UTC

.section .data.rel.ro
.align 8
.align 1
sat_skcn_info:
	.quad	sat_skcn_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 15:49:40.070554309 UTC

.section .text
.align 8
sat_skcz_entry:
_cki2:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _cki3
_cki4:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	leaq 2(%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp unpack_skbC_entry
_cki3:
	jmp *-16(%r13)
	.size sat_skcz_entry, .-sat_skcz_entry


==================== Asm code ====================
2018-03-16 15:49:40.071227627 UTC

.section .data.rel.ro
.align 8
.align 1
sat_skcz_info:
	.quad	sat_skcz_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 15:49:40.072528421 UTC

.section .text
.align 8
sat_skcC_entry:
_ckic:
	leaq -16(%rbp),%rax
	cmpq %r15,%rax
	jb _ckid
_ckie:
	movq stg_upd_frame_info@gotpcrel(%rip),%rax
	movq %rax,-16(%rbp)
	movq %rbx,-8(%rbp)
	movq 24(%rbx),%rax
	leaq 1(%rax),%r14
	movq 16(%rbx),%rbx
	addq $-16,%rbp
	jmp unpack_skbC_entry
_ckid:
	jmp *-16(%r13)
	.size sat_skcC_entry, .-sat_skcC_entry


==================== Asm code ====================
2018-03-16 15:49:40.073581567 UTC

.section .data.rel.ro
.align 8
.align 1
sat_skcC_info:
	.quad	sat_skcC_entry
	.quad	4294967297
	.quad	19


==================== Asm code ====================
2018-03-16 15:49:40.074498179 UTC

.section .text
.align 8
unpack_skbC_entry:
_ckii:
	leaq -40(%rbp),%rax
	cmpq %r15,%rax
	jb _ckij
_ckik:
	movq 7(%rbx),%rax
	movzbl (%rax,%r14,1),%ecx
	testq %rcx,%rcx
	je _ckih
_ukkl:
	movq %rax,-32(%rbp)
	movq %rbx,-24(%rbp)
	movq %r14,-16(%rbp)
	movq %rcx,-8(%rbp)
	addq $-32,%rbp
	jmp _ckgR
_ckij:
	jmp *-8(%r13)
_ckih:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size unpack_skbC_entry, .-unpack_skbC_entry


==================== Asm code ====================
2018-03-16 15:49:40.075204953 UTC

.section .data.rel.ro
.align 8
.align 1
unpack_skbC_info:
	.quad	unpack_skbC_entry
	.quad	4294967296
	.quad	10
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:49:40.07667601 UTC

.section .text
.align 8
_ckgR:
_ckgR:
	addq $72,%r12
	movq 24(%rbp),%rax
	cmpq 856(%r13),%r12
	ja _ckin
_ckim:
	movq 8(%rbp),%rbx
	movq 16(%rbp),%rcx
	cmpq $127,%rax
	ja _ckkc
_ckkf:
	leaq sat_skcC_info(%rip),%rdx
	movq %rdx,-64(%r12)
	movq %rbx,-48(%r12)
	movq %rcx,-40(%r12)
	movq GHC.Types.C#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-32(%r12)
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -64(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ckkc:
	movq (%rbp),%rdx
	cmpq $223,%rax
	ja _ckjM
_ckka:
	leaq 1(%rcx),%rsi
	movzbl (%rdx,%rsi,1),%edx
	leaq sat_skcz_info(%rip),%rsi
	movq %rsi,-64(%r12)
	movq %rbx,-48(%r12)
	movq %rcx,-40(%r12)
	movq GHC.Types.C#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-32(%r12)
	leaq -128(%rdx),%rbx
	addq $-192,%rax
	shlq $6,%rax
	addq %rbx,%rax
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -64(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ckjM:
	cmpq $239,%rax
	ja _ckja
_ckjK:
	leaq 2(%rcx),%rsi
	movzbl (%rdx,%rsi,1),%esi
	leaq 1(%rcx),%rdi
	movzbl (%rdx,%rdi,1),%edx
	leaq sat_skcn_info(%rip),%rdi
	movq %rdi,-64(%r12)
	movq %rbx,-48(%r12)
	movq %rcx,-40(%r12)
	movq GHC.Types.C#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-32(%r12)
	leaq -128(%rsi),%rbx
	leaq -128(%rdx),%rcx
	shlq $6,%rcx
	addq %rbx,%rcx
	addq $-224,%rax
	shlq $12,%rax
	addq %rcx,%rax
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -64(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ckja:
	leaq 3(%rcx),%rsi
	movzbl (%rdx,%rsi,1),%esi
	leaq 2(%rcx),%rdi
	movzbl (%rdx,%rdi,1),%edi
	leaq 1(%rcx),%r8
	movzbl (%rdx,%r8,1),%edx
	leaq sat_skc5_info(%rip),%r8
	movq %r8,-64(%r12)
	movq %rbx,-48(%r12)
	movq %rcx,-40(%r12)
	movq GHC.Types.C#_con_info@gotpcrel(%rip),%rbx
	movq %rbx,-32(%r12)
	leaq -128(%rsi),%rbx
	leaq -128(%rdi),%rcx
	shlq $6,%rcx
	addq %rbx,%rcx
	leaq -128(%rdx),%rbx
	shlq $12,%rbx
	addq %rcx,%rbx
	addq $-240,%rax
	shlq $18,%rax
	addq %rbx,%rax
	movq %rax,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rax
	movq %rax,-16(%r12)
	leaq -31(%r12),%rax
	movq %rax,-8(%r12)
	leaq -64(%r12),%rax
	movq %rax,(%r12)
	leaq -14(%r12),%rbx
	addq $32,%rbp
	movq (%rbp),%rax
	jmp *(%rax)
_ckin:
	movq $72,904(%r13)
	leaq block_ckgQ_info(%rip),%rbx
	movq %rbx,-8(%rbp)
	movq %rax,%rbx
	addq $-8,%rbp
	jmp *stg_gc_unbx_r1@gotpcrel(%rip)
	.size _ckgR, .-_ckgR


==================== Asm code ====================
2018-03-16 15:49:40.078214105 UTC

.section .text
.align 8
_ckgQ:
_ckgQ:
	movq %rbx,32(%rbp)
	addq $8,%rbp
	jmp _ckgR
	.size _ckgQ, .-_ckgQ


==================== Asm code ====================
2018-03-16 15:49:40.078866121 UTC

.section .data.rel.ro
.align 8
.align 1
block_ckgQ_info:
	.quad	_ckgQ
	.quad	836
	.quad	30


==================== Asm code ====================
2018-03-16 15:49:40.079605733 UTC

.section .text
.align 8
.globl GHC.CString.unpackCStringUtf8#_entry
.type GHC.CString.unpackCStringUtf8#_entry, @object
GHC.CString.unpackCStringUtf8#_entry:
_ckkp:
	addq $16,%r12
	cmpq 856(%r13),%r12
	ja _ckkt
_ckks:
	leaq unpack_skbC_info(%rip),%rax
	movq %rax,-8(%r12)
	movq %r14,(%r12)
	xorl %r14d,%r14d
	leaq -7(%r12),%rbx
	jmp unpack_skbC_entry
_ckkt:
	movq $16,904(%r13)
	leaq GHC.CString.unpackCStringUtf8#_closure(%rip),%rbx
	jmp *-8(%r13)
	.size GHC.CString.unpackCStringUtf8#_entry, .-GHC.CString.unpackCStringUtf8#_entry


==================== Asm code ====================
2018-03-16 15:49:40.080457948 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.CString.unpackCStringUtf8#_info
.type GHC.CString.unpackCStringUtf8#_info, @object
GHC.CString.unpackCStringUtf8#_info:
	.quad	GHC.CString.unpackCStringUtf8#_entry
	.quad	0
	.quad	14
	.quad	4294967300


==================== Asm code ====================
2018-03-16 15:49:40.084828233 UTC

.section .data
.align 8
.align 1
.globl GHC.CString.unpackNBytes#_closure
.type GHC.CString.unpackNBytes#_closure, @object
GHC.CString.unpackNBytes#_closure:
	.quad	GHC.CString.unpackNBytes#_info


==================== Asm code ====================
2018-03-16 15:49:40.085933781 UTC

.section .text
.align 8
.globl GHC.CString.unpackNBytes#_entry
.type GHC.CString.unpackNBytes#_entry, @object
GHC.CString.unpackNBytes#_entry:
_ckmk:
	leaq -32(%rbp),%rax
	cmpq %r15,%rax
	jb _ckml
_ckmm:
	testq %rsi,%rsi
	je _ckmj
_ckmi:
	movq %r14,-24(%rbp)
	movq GHC.Types.[]_closure@gotpcrel(%rip),%rax
	incq %rax
	movq %rax,-16(%rbp)
	leaq -1(%rsi),%rax
	movq %rax,-8(%rbp)
	addq $-32,%rbp
	jmp _ckm3
_ckml:
	leaq GHC.CString.unpackNBytes#_closure(%rip),%rbx
	jmp *-8(%r13)
_ckmj:
	movq []_closure@gotpcrel(%rip),%rax
	leaq 1(%rax),%rbx
	movq (%rbp),%rax
	jmp *(%rax)
	.size GHC.CString.unpackNBytes#_entry, .-GHC.CString.unpackNBytes#_entry


==================== Asm code ====================
2018-03-16 15:49:40.086619748 UTC

.section .data.rel.ro
.align 8
.align 1
.globl GHC.CString.unpackNBytes#_info
.type GHC.CString.unpackNBytes#_info, @object
GHC.CString.unpackNBytes#_info:
	.quad	GHC.CString.unpackNBytes#_entry
	.quad	0
	.quad	14
	.quad	8589934604


==================== Asm code ====================
2018-03-16 15:49:40.087586581 UTC

.section .text
.align 8
_ckm3:
_ckm3:
	addq $40,%r12
	cmpq 856(%r13),%r12
	ja _ckmp
_ckmo:
	movq 16(%rbp),%rax
	movq 24(%rbp),%rbx
	testq %rbx,%rbx
	jge _ckmr
_ckms:
	addq $-40,%r12
	movq %rax,%rbx
	andq $-8,%rbx
	addq $32,%rbp
	movq (%rbx),%rax
	jmp *(%rax)
_ckmr:
	movq GHC.Types.C#_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-32(%r12)
	movq 8(%rbp),%rcx
	movzbl (%rcx,%rbx,1),%ecx
	movq %rcx,-24(%r12)
	movq :_con_info@gotpcrel(%rip),%rcx
	movq %rcx,-16(%r12)
	leaq -31(%r12),%rcx
	movq %rcx,-8(%r12)
	movq %rax,(%r12)
	leaq -14(%r12),%rax
	movq %rax,16(%rbp)
	leaq -1(%rbx),%rax
	movq %rax,24(%rbp)
	jmp _ckm3
_ckmp:
	movq $40,904(%r13)
	leaq block_ckm3_info(%rip),%rax
	movq %rax,(%rbp)
	jmp *stg_gc_noregs@gotpcrel(%rip)
	.size _ckm3, .-_ckm3


==================== Asm code ====================
2018-03-16 15:49:40.088505012 UTC

.section .data.rel.ro
.align 8
.align 1
block_ckm3_info:
	.quad	_ckm3
	.quad	323
	.quad	30


==================== Asm code ====================
2018-03-16 15:49:40.090287928 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.CString.$trModule4_bytes
.type GHC.CString.$trModule4_bytes, @object
GHC.CString.$trModule4_bytes:
	.asciz "ghc-prim"


==================== Asm code ====================
2018-03-16 15:49:40.092113765 UTC

.section .data
.align 8
.align 1
.globl GHC.CString.$trModule3_closure
.type GHC.CString.$trModule3_closure, @object
GHC.CString.$trModule3_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.CString.$trModule4_bytes


==================== Asm code ====================
2018-03-16 15:49:40.093932811 UTC

.section .rodata.str,"aMS",@progbits,1
.align 1
.align 1
.globl GHC.CString.$trModule2_bytes
.type GHC.CString.$trModule2_bytes, @object
GHC.CString.$trModule2_bytes:
	.asciz "GHC.CString"


==================== Asm code ====================
2018-03-16 15:49:40.095925008 UTC

.section .data
.align 8
.align 1
.globl GHC.CString.$trModule1_closure
.type GHC.CString.$trModule1_closure, @object
GHC.CString.$trModule1_closure:
	.quad	GHC.Types.TrNameS_con_info
	.quad	GHC.CString.$trModule2_bytes


==================== Asm code ====================
2018-03-16 15:49:40.097786948 UTC

.section .data
.align 8
.align 1
.globl GHC.CString.$trModule_closure
.type GHC.CString.$trModule_closure, @object
GHC.CString.$trModule_closure:
	.quad	GHC.Types.Module_con_info
	.quad	GHC.CString.$trModule3_closure+1
	.quad	GHC.CString.$trModule1_closure+1
	.quad	3


==================== Asm code ====================
2018-03-16 15:49:40.099538827 UTC

.section .data.rel.ro
.align 8
.align 1
SkmZ_srt:

