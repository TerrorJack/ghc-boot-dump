
==================== Tidy Core ====================
2018-03-16 15:50:22.668453034 UTC

Result size of Tidy Core
  = {terms: 39, types: 57, coercions: 0, joins: 0/0}

-- RHS size: {terms: 3, types: 3, coercions: 0, joins: 0/0}
inline [InlPrag=NOINLINE[0]] :: forall a. a -> a
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S,1*U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=True)
         Tmpl= \ (@ a_aBi7) (x_aBgL [Occ=Once] :: a_aBi7) -> x_aBgL}]
inline = \ (@ a_aBi7) (x_aBgL :: a_aBi7) -> x_aBgL

-- RHS size: {terms: 3, types: 3, coercions: 0, joins: 0/0}
noinline [InlPrag=NOINLINE] :: forall a. a -> a
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S,1*U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=True)
         Tmpl= \ (@ a_aBi5) (x_aBgM [Occ=Once] :: a_aBi5) -> x_aBgM}]
noinline = \ (@ a_aBi5) (x_aBgM :: a_aBi5) -> x_aBgM

-- RHS size: {terms: 3, types: 3, coercions: 0, joins: 0/0}
lazy :: forall a. a -> a
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S,1*U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=True)
         Tmpl= \ (@ a_aBi3) (x_aBgN [Occ=Once] :: a_aBi3) -> x_aBgN}]
lazy = \ (@ a_aBi3) (x_aBgN :: a_aBi3) -> x_aBgN

-- RHS size: {terms: 6, types: 8, coercions: 0, joins: 0/0}
oneShot :: forall (a :: TYPE q) (b :: TYPE r). (a -> b) -> a -> b
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<S,1*U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=True)
         Tmpl= \ (@ (q_aBhY :: RuntimeRep))
                 (@ (r_aBhZ :: RuntimeRep))
                 (@ (a_aBi0 :: TYPE q_aBhY))
                 (@ (b_aBi1 :: TYPE r_aBhZ))
                 (f_aBgO [Occ=Once] :: a_aBi0 -> b_aBi1) ->
                 f_aBgO}]
oneShot
  = \ (@ (q_aBhY :: RuntimeRep))
      (@ (r_aBhZ :: RuntimeRep))
      (@ (a_aBi0 :: TYPE q_aBhY))
      (@ (b_aBi1 :: TYPE r_aBhZ))
      (f_aBgO :: a_aBi0 -> b_aBi1) ->
      f_aBgO

-- RHS size: {terms: 5, types: 6, coercions: 0, joins: 0/0}
runRW# [InlPrag=NOINLINE]
  :: forall (o :: TYPE r). (State# RealWorld -> o) -> o
[GblId,
 Arity=1,
 Caf=NoCafRefs,
 Str=<C(S),1*C1(U)>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=1,unsat_ok=True,boring_ok=True)
         Tmpl= \ (@ (r_aBhV :: RuntimeRep))
                 (@ (o_aBhW :: TYPE r_aBhV))
                 (m_aBgP [Occ=Once!] :: State# RealWorld -> o_aBhW) ->
                 m_aBgP realWorld#}]
runRW#
  = \ (@ (r_aBhV :: RuntimeRep))
      (@ (o_aBhW :: TYPE r_aBhV))
      (m_aBgP :: State# RealWorld -> o_aBhW) ->
      m_aBgP realWorld#

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Magic.$trModule4 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 30 0}]
GHC.Magic.$trModule4 = "ghc-prim"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Magic.$trModule3 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Magic.$trModule3 = GHC.Types.TrNameS GHC.Magic.$trModule4

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
GHC.Magic.$trModule2 :: Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 40 0}]
GHC.Magic.$trModule2 = "GHC.Magic"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
GHC.Magic.$trModule1 :: GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
GHC.Magic.$trModule1 = GHC.Types.TrNameS GHC.Magic.$trModule2

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
GHC.Magic.$trModule :: GHC.Types.Module
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
GHC.Magic.$trModule
  = GHC.Types.Module GHC.Magic.$trModule3 GHC.Magic.$trModule1


