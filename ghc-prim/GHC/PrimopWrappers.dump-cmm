
==================== Output Cmm ====================
2018-03-16 15:50:16.14110366 UTC

[]


==================== Output Cmm ====================
2018-03-16 15:50:16.144186457 UTC

[section ""data" . GHC.PrimopWrappers.gtChar#_closure" {
     GHC.PrimopWrappers.gtChar#_closure:
         const GHC.PrimopWrappers.gtChar#_info;
 },
 GHC.PrimopWrappers.gtChar#_entry() //  [R2, R3]
         { info_tbl: [(cw0d,
                       label: GHC.PrimopWrappers.gtChar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw0d: // global
           R1 = R2 > R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.145058078 UTC

[section ""data" . GHC.PrimopWrappers.geChar#_closure" {
     GHC.PrimopWrappers.geChar#_closure:
         const GHC.PrimopWrappers.geChar#_info;
 },
 GHC.PrimopWrappers.geChar#_entry() //  [R2, R3]
         { info_tbl: [(cw0l,
                       label: GHC.PrimopWrappers.geChar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw0l: // global
           R1 = R2 >= R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.145988788 UTC

[section ""data" . GHC.PrimopWrappers.eqChar#_closure" {
     GHC.PrimopWrappers.eqChar#_closure:
         const GHC.PrimopWrappers.eqChar#_info;
 },
 GHC.PrimopWrappers.eqChar#_entry() //  [R2, R3]
         { info_tbl: [(cw0t,
                       label: GHC.PrimopWrappers.eqChar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw0t: // global
           R1 = R2 == R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.146822929 UTC

[section ""data" . GHC.PrimopWrappers.neChar#_closure" {
     GHC.PrimopWrappers.neChar#_closure:
         const GHC.PrimopWrappers.neChar#_info;
 },
 GHC.PrimopWrappers.neChar#_entry() //  [R2, R3]
         { info_tbl: [(cw0B,
                       label: GHC.PrimopWrappers.neChar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw0B: // global
           R1 = R2 != R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.147653159 UTC

[section ""data" . GHC.PrimopWrappers.ltChar#_closure" {
     GHC.PrimopWrappers.ltChar#_closure:
         const GHC.PrimopWrappers.ltChar#_info;
 },
 GHC.PrimopWrappers.ltChar#_entry() //  [R2, R3]
         { info_tbl: [(cw0J,
                       label: GHC.PrimopWrappers.ltChar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw0J: // global
           R1 = R2 < R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.14845945 UTC

[section ""data" . GHC.PrimopWrappers.leChar#_closure" {
     GHC.PrimopWrappers.leChar#_closure:
         const GHC.PrimopWrappers.leChar#_info;
 },
 GHC.PrimopWrappers.leChar#_entry() //  [R2, R3]
         { info_tbl: [(cw0R,
                       label: GHC.PrimopWrappers.leChar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw0R: // global
           R1 = R2 <= R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.149229936 UTC

[section ""data" . GHC.PrimopWrappers.ord#_closure" {
     GHC.PrimopWrappers.ord#_closure:
         const GHC.PrimopWrappers.ord#_info;
 },
 GHC.PrimopWrappers.ord#_entry() //  [R2]
         { info_tbl: [(cw0Z,
                       label: GHC.PrimopWrappers.ord#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw0Z: // global
           R1 = R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.150099978 UTC

[section ""data" . GHC.PrimopWrappers.+#_closure" {
     GHC.PrimopWrappers.+#_closure:
         const GHC.PrimopWrappers.+#_info;
 },
 GHC.PrimopWrappers.+#_entry() //  [R2, R3]
         { info_tbl: [(cw17,
                       label: GHC.PrimopWrappers.+#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw17: // global
           R1 = R2 + R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.150950005 UTC

[section ""data" . GHC.PrimopWrappers.-#_closure" {
     GHC.PrimopWrappers.-#_closure:
         const GHC.PrimopWrappers.-#_info;
 },
 GHC.PrimopWrappers.-#_entry() //  [R2, R3]
         { info_tbl: [(cw1f,
                       label: GHC.PrimopWrappers.-#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw1f: // global
           R1 = R2 - R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.151746152 UTC

[section ""data" . GHC.PrimopWrappers.*#_closure" {
     GHC.PrimopWrappers.*#_closure:
         const GHC.PrimopWrappers.*#_info;
 },
 GHC.PrimopWrappers.*#_entry() //  [R2, R3]
         { info_tbl: [(cw1n,
                       label: GHC.PrimopWrappers.*#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw1n: // global
           R1 = R2 * R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.152596404 UTC

[section ""data" . GHC.PrimopWrappers.mulIntMayOflo#_closure" {
     GHC.PrimopWrappers.mulIntMayOflo#_closure:
         const GHC.PrimopWrappers.mulIntMayOflo#_info;
 },
 GHC.PrimopWrappers.mulIntMayOflo#_entry() //  [R2, R3]
         { info_tbl: [(cw1v,
                       label: GHC.PrimopWrappers.mulIntMayOflo#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw1v: // global
           R1 = %MO_S_MulMayOflo_W64(R2, R3);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.153494236 UTC

[section ""data" . GHC.PrimopWrappers.quotInt#_closure" {
     GHC.PrimopWrappers.quotInt#_closure:
         const GHC.PrimopWrappers.quotInt#_info;
 },
 GHC.PrimopWrappers.quotInt#_entry() //  [R2, R3]
         { info_tbl: [(cw1D,
                       label: GHC.PrimopWrappers.quotInt#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw1D: // global
           R1 = %MO_S_Quot_W64(R2, R3);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.154351921 UTC

[section ""data" . GHC.PrimopWrappers.remInt#_closure" {
     GHC.PrimopWrappers.remInt#_closure:
         const GHC.PrimopWrappers.remInt#_info;
 },
 GHC.PrimopWrappers.remInt#_entry() //  [R2, R3]
         { info_tbl: [(cw1L,
                       label: GHC.PrimopWrappers.remInt#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw1L: // global
           R1 = %MO_S_Rem_W64(R2, R3);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.15524064 UTC

[section ""data" . GHC.PrimopWrappers.quotRemInt#_closure" {
     GHC.PrimopWrappers.quotRemInt#_closure:
         const GHC.PrimopWrappers.quotRemInt#_info;
 },
 GHC.PrimopWrappers.quotRemInt#_entry() //  [R2, R3]
         { info_tbl: [(cw1U,
                       label: GHC.PrimopWrappers.quotRemInt#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw1U: // global
           _B1::I64 = R3;
           (_cw1S::I64, _cw1T::I64) = call MO_S_QuotRem W64(R2, _B1::I64);
           R2 = _cw1T::I64;
           R1 = _cw1S::I64;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.165355111 UTC

[section ""data" . GHC.PrimopWrappers.andI#_closure" {
     GHC.PrimopWrappers.andI#_closure:
         const GHC.PrimopWrappers.andI#_info;
 },
 GHC.PrimopWrappers.andI#_entry() //  [R2, R3]
         { info_tbl: [(cw22,
                       label: GHC.PrimopWrappers.andI#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw22: // global
           R1 = R2 & R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.166322137 UTC

[section ""data" . GHC.PrimopWrappers.orI#_closure" {
     GHC.PrimopWrappers.orI#_closure:
         const GHC.PrimopWrappers.orI#_info;
 },
 GHC.PrimopWrappers.orI#_entry() //  [R2, R3]
         { info_tbl: [(cw2a,
                       label: GHC.PrimopWrappers.orI#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw2a: // global
           R1 = R2 | R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.167148024 UTC

[section ""data" . GHC.PrimopWrappers.xorI#_closure" {
     GHC.PrimopWrappers.xorI#_closure:
         const GHC.PrimopWrappers.xorI#_info;
 },
 GHC.PrimopWrappers.xorI#_entry() //  [R2, R3]
         { info_tbl: [(cw2i,
                       label: GHC.PrimopWrappers.xorI#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw2i: // global
           R1 = R2 ^ R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.167926962 UTC

[section ""data" . GHC.PrimopWrappers.notI#_closure" {
     GHC.PrimopWrappers.notI#_closure:
         const GHC.PrimopWrappers.notI#_info;
 },
 GHC.PrimopWrappers.notI#_entry() //  [R2]
         { info_tbl: [(cw2q,
                       label: GHC.PrimopWrappers.notI#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw2q: // global
           R1 = ~R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.168763684 UTC

[section ""data" . GHC.PrimopWrappers.negateInt#_closure" {
     GHC.PrimopWrappers.negateInt#_closure:
         const GHC.PrimopWrappers.negateInt#_info;
 },
 GHC.PrimopWrappers.negateInt#_entry() //  [R2]
         { info_tbl: [(cw2y,
                       label: GHC.PrimopWrappers.negateInt#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw2y: // global
           R1 = -R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.169666042 UTC

[section ""data" . GHC.PrimopWrappers.addIntC#_closure" {
     GHC.PrimopWrappers.addIntC#_closure:
         const GHC.PrimopWrappers.addIntC#_info;
 },
 GHC.PrimopWrappers.addIntC#_entry() //  [R2, R3]
         { info_tbl: [(cw2H,
                       label: GHC.PrimopWrappers.addIntC#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw2H: // global
           _B1::I64 = R3;
           (_cw2F::I64, _cw2G::I64) = call MO_AddIntC W64(R2, _B1::I64);
           R2 = _cw2G::I64;
           R1 = _cw2F::I64;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.170555722 UTC

[section ""data" . GHC.PrimopWrappers.subIntC#_closure" {
     GHC.PrimopWrappers.subIntC#_closure:
         const GHC.PrimopWrappers.subIntC#_info;
 },
 GHC.PrimopWrappers.subIntC#_entry() //  [R2, R3]
         { info_tbl: [(cw2Q,
                       label: GHC.PrimopWrappers.subIntC#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw2Q: // global
           _B1::I64 = R3;
           (_cw2O::I64, _cw2P::I64) = call MO_SubIntC W64(R2, _B1::I64);
           R2 = _cw2P::I64;
           R1 = _cw2O::I64;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.171418554 UTC

[section ""data" . GHC.PrimopWrappers.>#_closure" {
     GHC.PrimopWrappers.>#_closure:
         const GHC.PrimopWrappers.>#_info;
 },
 GHC.PrimopWrappers.>#_entry() //  [R2, R3]
         { info_tbl: [(cw2Y,
                       label: GHC.PrimopWrappers.>#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw2Y: // global
           R1 = %MO_S_Gt_W64(R2, R3);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.17224422 UTC

[section ""data" . GHC.PrimopWrappers.>=#_closure" {
     GHC.PrimopWrappers.>=#_closure:
         const GHC.PrimopWrappers.>=#_info;
 },
 GHC.PrimopWrappers.>=#_entry() //  [R2, R3]
         { info_tbl: [(cw36,
                       label: GHC.PrimopWrappers.>=#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw36: // global
           R1 = %MO_S_Ge_W64(R2, R3);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.173051816 UTC

[section ""data" . GHC.PrimopWrappers.==#_closure" {
     GHC.PrimopWrappers.==#_closure:
         const GHC.PrimopWrappers.==#_info;
 },
 GHC.PrimopWrappers.==#_entry() //  [R2, R3]
         { info_tbl: [(cw3e,
                       label: GHC.PrimopWrappers.==#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw3e: // global
           R1 = R2 == R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.173914294 UTC

[section ""data" . GHC.PrimopWrappers./=#_closure" {
     GHC.PrimopWrappers./=#_closure:
         const GHC.PrimopWrappers./=#_info;
 },
 GHC.PrimopWrappers./=#_entry() //  [R2, R3]
         { info_tbl: [(cw3m,
                       label: GHC.PrimopWrappers./=#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw3m: // global
           R1 = R2 != R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.17469824 UTC

[section ""data" . GHC.PrimopWrappers.<#_closure" {
     GHC.PrimopWrappers.<#_closure:
         const GHC.PrimopWrappers.<#_info;
 },
 GHC.PrimopWrappers.<#_entry() //  [R2, R3]
         { info_tbl: [(cw3u,
                       label: GHC.PrimopWrappers.<#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw3u: // global
           R1 = %MO_S_Lt_W64(R2, R3);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.175452666 UTC

[section ""data" . GHC.PrimopWrappers.<=#_closure" {
     GHC.PrimopWrappers.<=#_closure:
         const GHC.PrimopWrappers.<=#_info;
 },
 GHC.PrimopWrappers.<=#_entry() //  [R2, R3]
         { info_tbl: [(cw3C,
                       label: GHC.PrimopWrappers.<=#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw3C: // global
           R1 = %MO_S_Le_W64(R2, R3);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.176310596 UTC

[section ""data" . GHC.PrimopWrappers.chr#_closure" {
     GHC.PrimopWrappers.chr#_closure:
         const GHC.PrimopWrappers.chr#_info;
 },
 GHC.PrimopWrappers.chr#_entry() //  [R2]
         { info_tbl: [(cw3K,
                       label: GHC.PrimopWrappers.chr#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw3K: // global
           R1 = R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.17711433 UTC

[section ""data" . GHC.PrimopWrappers.int2Word#_closure" {
     GHC.PrimopWrappers.int2Word#_closure:
         const GHC.PrimopWrappers.int2Word#_info;
 },
 GHC.PrimopWrappers.int2Word#_entry() //  [R2]
         { info_tbl: [(cw3S,
                       label: GHC.PrimopWrappers.int2Word#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw3S: // global
           R1 = R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.177967081 UTC

[section ""data" . GHC.PrimopWrappers.int2Float#_closure" {
     GHC.PrimopWrappers.int2Float#_closure:
         const GHC.PrimopWrappers.int2Float#_info;
 },
 GHC.PrimopWrappers.int2Float#_entry() //  [R2]
         { info_tbl: [(cw40,
                       label: GHC.PrimopWrappers.int2Float#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw40: // global
           F1 = %MO_SF_Conv_W64_W32(R2);
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.178815068 UTC

[section ""data" . GHC.PrimopWrappers.int2Double#_closure" {
     GHC.PrimopWrappers.int2Double#_closure:
         const GHC.PrimopWrappers.int2Double#_info;
 },
 GHC.PrimopWrappers.int2Double#_entry() //  [R2]
         { info_tbl: [(cw48,
                       label: GHC.PrimopWrappers.int2Double#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw48: // global
           D1 = %MO_SF_Conv_W64_W64(R2);
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.179656555 UTC

[section ""data" . GHC.PrimopWrappers.word2Float#_closure" {
     GHC.PrimopWrappers.word2Float#_closure:
         const GHC.PrimopWrappers.word2Float#_info;
 },
 GHC.PrimopWrappers.word2Float#_entry() //  [R2]
         { info_tbl: [(cw4h,
                       label: GHC.PrimopWrappers.word2Float#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw4h: // global
           (_cw4f::F32) = call MO_UF_Conv W32(R2);
           F1 = _cw4f::F32;
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.18048915 UTC

[section ""data" . GHC.PrimopWrappers.word2Double#_closure" {
     GHC.PrimopWrappers.word2Double#_closure:
         const GHC.PrimopWrappers.word2Double#_info;
 },
 GHC.PrimopWrappers.word2Double#_entry() //  [R2]
         { info_tbl: [(cw4q,
                       label: GHC.PrimopWrappers.word2Double#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw4q: // global
           (_cw4o::F64) = call MO_UF_Conv W64(R2);
           D1 = _cw4o::F64;
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.18135215 UTC

[section ""data" . GHC.PrimopWrappers.uncheckedIShiftL#_closure" {
     GHC.PrimopWrappers.uncheckedIShiftL#_closure:
         const GHC.PrimopWrappers.uncheckedIShiftL#_info;
 },
 GHC.PrimopWrappers.uncheckedIShiftL#_entry() //  [R2, R3]
         { info_tbl: [(cw4y,
                       label: GHC.PrimopWrappers.uncheckedIShiftL#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw4y: // global
           R1 = R2 << R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.182144161 UTC

[section ""data" . GHC.PrimopWrappers.uncheckedIShiftRA#_closure" {
     GHC.PrimopWrappers.uncheckedIShiftRA#_closure:
         const GHC.PrimopWrappers.uncheckedIShiftRA#_info;
 },
 GHC.PrimopWrappers.uncheckedIShiftRA#_entry() //  [R2, R3]
         { info_tbl: [(cw4G,
                       label: GHC.PrimopWrappers.uncheckedIShiftRA#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw4G: // global
           R1 = %MO_S_Shr_W64(R2, R3);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.182993466 UTC

[section ""data" . GHC.PrimopWrappers.uncheckedIShiftRL#_closure" {
     GHC.PrimopWrappers.uncheckedIShiftRL#_closure:
         const GHC.PrimopWrappers.uncheckedIShiftRL#_info;
 },
 GHC.PrimopWrappers.uncheckedIShiftRL#_entry() //  [R2, R3]
         { info_tbl: [(cw4O,
                       label: GHC.PrimopWrappers.uncheckedIShiftRL#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw4O: // global
           R1 = R2 >> R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.183898252 UTC

[section ""data" . GHC.PrimopWrappers.plusWord#_closure" {
     GHC.PrimopWrappers.plusWord#_closure:
         const GHC.PrimopWrappers.plusWord#_info;
 },
 GHC.PrimopWrappers.plusWord#_entry() //  [R2, R3]
         { info_tbl: [(cw4W,
                       label: GHC.PrimopWrappers.plusWord#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw4W: // global
           R1 = R2 + R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.184744148 UTC

[section ""data" . GHC.PrimopWrappers.subWordC#_closure" {
     GHC.PrimopWrappers.subWordC#_closure:
         const GHC.PrimopWrappers.subWordC#_info;
 },
 GHC.PrimopWrappers.subWordC#_entry() //  [R2, R3]
         { info_tbl: [(cw55,
                       label: GHC.PrimopWrappers.subWordC#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw55: // global
           _B1::I64 = R3;
           (_cw53::I64, _cw54::I64) = call MO_SubWordC W64(R2, _B1::I64);
           R2 = _cw54::I64;
           R1 = _cw53::I64;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.185703939 UTC

[section ""data" . GHC.PrimopWrappers.plusWord2#_closure" {
     GHC.PrimopWrappers.plusWord2#_closure:
         const GHC.PrimopWrappers.plusWord2#_info;
 },
 GHC.PrimopWrappers.plusWord2#_entry() //  [R2, R3]
         { info_tbl: [(cw5e,
                       label: GHC.PrimopWrappers.plusWord2#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw5e: // global
           _B1::I64 = R3;
           (_cw5c::I64, _cw5d::I64) = call MO_Add2 W64(R2, _B1::I64);
           R2 = _cw5d::I64;
           R1 = _cw5c::I64;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.186594102 UTC

[section ""data" . GHC.PrimopWrappers.minusWord#_closure" {
     GHC.PrimopWrappers.minusWord#_closure:
         const GHC.PrimopWrappers.minusWord#_info;
 },
 GHC.PrimopWrappers.minusWord#_entry() //  [R2, R3]
         { info_tbl: [(cw5m,
                       label: GHC.PrimopWrappers.minusWord#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw5m: // global
           R1 = R2 - R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.187432532 UTC

[section ""data" . GHC.PrimopWrappers.timesWord#_closure" {
     GHC.PrimopWrappers.timesWord#_closure:
         const GHC.PrimopWrappers.timesWord#_info;
 },
 GHC.PrimopWrappers.timesWord#_entry() //  [R2, R3]
         { info_tbl: [(cw5u,
                       label: GHC.PrimopWrappers.timesWord#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw5u: // global
           R1 = R2 * R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.188231857 UTC

[section ""data" . GHC.PrimopWrappers.timesWord2#_closure" {
     GHC.PrimopWrappers.timesWord2#_closure:
         const GHC.PrimopWrappers.timesWord2#_info;
 },
 GHC.PrimopWrappers.timesWord2#_entry() //  [R2, R3]
         { info_tbl: [(cw5D,
                       label: GHC.PrimopWrappers.timesWord2#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw5D: // global
           _B1::I64 = R3;
           (_cw5B::I64, _cw5C::I64) = call MO_U_Mul2 W64(R2, _B1::I64);
           R2 = _cw5C::I64;
           R1 = _cw5B::I64;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.189125433 UTC

[section ""data" . GHC.PrimopWrappers.quotWord#_closure" {
     GHC.PrimopWrappers.quotWord#_closure:
         const GHC.PrimopWrappers.quotWord#_info;
 },
 GHC.PrimopWrappers.quotWord#_entry() //  [R2, R3]
         { info_tbl: [(cw5L,
                       label: GHC.PrimopWrappers.quotWord#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw5L: // global
           R1 = R2 / R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.190193498 UTC

[section ""data" . GHC.PrimopWrappers.remWord#_closure" {
     GHC.PrimopWrappers.remWord#_closure:
         const GHC.PrimopWrappers.remWord#_info;
 },
 GHC.PrimopWrappers.remWord#_entry() //  [R2, R3]
         { info_tbl: [(cw5T,
                       label: GHC.PrimopWrappers.remWord#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw5T: // global
           R1 = R2 % R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.191034335 UTC

[section ""data" . GHC.PrimopWrappers.quotRemWord#_closure" {
     GHC.PrimopWrappers.quotRemWord#_closure:
         const GHC.PrimopWrappers.quotRemWord#_info;
 },
 GHC.PrimopWrappers.quotRemWord#_entry() //  [R2, R3]
         { info_tbl: [(cw62,
                       label: GHC.PrimopWrappers.quotRemWord#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw62: // global
           _B1::I64 = R3;
           (_cw60::I64, _cw61::I64) = call MO_U_QuotRem W64(R2, _B1::I64);
           R2 = _cw61::I64;
           R1 = _cw60::I64;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.191976742 UTC

[section ""data" . GHC.PrimopWrappers.quotRemWord2#_closure" {
     GHC.PrimopWrappers.quotRemWord2#_closure:
         const GHC.PrimopWrappers.quotRemWord2#_info;
 },
 GHC.PrimopWrappers.quotRemWord2#_entry() //  [R2, R3, R4]
         { info_tbl: [(cw6b,
                       label: GHC.PrimopWrappers.quotRemWord2#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 16} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw6b: // global
           _B1::I64 = R4;
           _B2::I64 = R3;
           (_cw69::I64, _cw6a::I64) = call MO_U_QuotRem2 W64(R2, _B2::I64, _B1::I64);
           R2 = _cw6a::I64;
           R1 = _cw69::I64;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.193615405 UTC

[section ""data" . GHC.PrimopWrappers.and#_closure" {
     GHC.PrimopWrappers.and#_closure:
         const GHC.PrimopWrappers.and#_info;
 },
 GHC.PrimopWrappers.and#_entry() //  [R2, R3]
         { info_tbl: [(cw6j,
                       label: GHC.PrimopWrappers.and#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw6j: // global
           R1 = R2 & R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.194476874 UTC

[section ""data" . GHC.PrimopWrappers.or#_closure" {
     GHC.PrimopWrappers.or#_closure:
         const GHC.PrimopWrappers.or#_info;
 },
 GHC.PrimopWrappers.or#_entry() //  [R2, R3]
         { info_tbl: [(cw6r,
                       label: GHC.PrimopWrappers.or#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw6r: // global
           R1 = R2 | R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.195293923 UTC

[section ""data" . GHC.PrimopWrappers.xor#_closure" {
     GHC.PrimopWrappers.xor#_closure:
         const GHC.PrimopWrappers.xor#_info;
 },
 GHC.PrimopWrappers.xor#_entry() //  [R2, R3]
         { info_tbl: [(cw6z,
                       label: GHC.PrimopWrappers.xor#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw6z: // global
           R1 = R2 ^ R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.196125208 UTC

[section ""data" . GHC.PrimopWrappers.not#_closure" {
     GHC.PrimopWrappers.not#_closure:
         const GHC.PrimopWrappers.not#_info;
 },
 GHC.PrimopWrappers.not#_entry() //  [R2]
         { info_tbl: [(cw6H,
                       label: GHC.PrimopWrappers.not#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw6H: // global
           R1 = ~R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.196914599 UTC

[section ""data" . GHC.PrimopWrappers.uncheckedShiftL#_closure" {
     GHC.PrimopWrappers.uncheckedShiftL#_closure:
         const GHC.PrimopWrappers.uncheckedShiftL#_info;
 },
 GHC.PrimopWrappers.uncheckedShiftL#_entry() //  [R2, R3]
         { info_tbl: [(cw6P,
                       label: GHC.PrimopWrappers.uncheckedShiftL#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw6P: // global
           R1 = R2 << R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.197769136 UTC

[section ""data" . GHC.PrimopWrappers.uncheckedShiftRL#_closure" {
     GHC.PrimopWrappers.uncheckedShiftRL#_closure:
         const GHC.PrimopWrappers.uncheckedShiftRL#_info;
 },
 GHC.PrimopWrappers.uncheckedShiftRL#_entry() //  [R2, R3]
         { info_tbl: [(cw6X,
                       label: GHC.PrimopWrappers.uncheckedShiftRL#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw6X: // global
           R1 = R2 >> R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.19857422 UTC

[section ""data" . GHC.PrimopWrappers.word2Int#_closure" {
     GHC.PrimopWrappers.word2Int#_closure:
         const GHC.PrimopWrappers.word2Int#_info;
 },
 GHC.PrimopWrappers.word2Int#_entry() //  [R2]
         { info_tbl: [(cw75,
                       label: GHC.PrimopWrappers.word2Int#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw75: // global
           R1 = R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.199376991 UTC

[section ""data" . GHC.PrimopWrappers.gtWord#_closure" {
     GHC.PrimopWrappers.gtWord#_closure:
         const GHC.PrimopWrappers.gtWord#_info;
 },
 GHC.PrimopWrappers.gtWord#_entry() //  [R2, R3]
         { info_tbl: [(cw7d,
                       label: GHC.PrimopWrappers.gtWord#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw7d: // global
           R1 = R2 > R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.200141468 UTC

[section ""data" . GHC.PrimopWrappers.geWord#_closure" {
     GHC.PrimopWrappers.geWord#_closure:
         const GHC.PrimopWrappers.geWord#_info;
 },
 GHC.PrimopWrappers.geWord#_entry() //  [R2, R3]
         { info_tbl: [(cw7l,
                       label: GHC.PrimopWrappers.geWord#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw7l: // global
           R1 = R2 >= R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.200933965 UTC

[section ""data" . GHC.PrimopWrappers.eqWord#_closure" {
     GHC.PrimopWrappers.eqWord#_closure:
         const GHC.PrimopWrappers.eqWord#_info;
 },
 GHC.PrimopWrappers.eqWord#_entry() //  [R2, R3]
         { info_tbl: [(cw7t,
                       label: GHC.PrimopWrappers.eqWord#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw7t: // global
           R1 = R2 == R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.201788377 UTC

[section ""data" . GHC.PrimopWrappers.neWord#_closure" {
     GHC.PrimopWrappers.neWord#_closure:
         const GHC.PrimopWrappers.neWord#_info;
 },
 GHC.PrimopWrappers.neWord#_entry() //  [R2, R3]
         { info_tbl: [(cw7B,
                       label: GHC.PrimopWrappers.neWord#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw7B: // global
           R1 = R2 != R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.202635781 UTC

[section ""data" . GHC.PrimopWrappers.ltWord#_closure" {
     GHC.PrimopWrappers.ltWord#_closure:
         const GHC.PrimopWrappers.ltWord#_info;
 },
 GHC.PrimopWrappers.ltWord#_entry() //  [R2, R3]
         { info_tbl: [(cw7J,
                       label: GHC.PrimopWrappers.ltWord#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw7J: // global
           R1 = R2 < R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.203481886 UTC

[section ""data" . GHC.PrimopWrappers.leWord#_closure" {
     GHC.PrimopWrappers.leWord#_closure:
         const GHC.PrimopWrappers.leWord#_info;
 },
 GHC.PrimopWrappers.leWord#_entry() //  [R2, R3]
         { info_tbl: [(cw7R,
                       label: GHC.PrimopWrappers.leWord#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw7R: // global
           R1 = R2 <= R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.204329147 UTC

[section ""data" . GHC.PrimopWrappers.popCnt8#_closure" {
     GHC.PrimopWrappers.popCnt8#_closure:
         const GHC.PrimopWrappers.popCnt8#_info;
 },
 GHC.PrimopWrappers.popCnt8#_entry() //  [R2]
         { info_tbl: [(cw80,
                       label: GHC.PrimopWrappers.popCnt8#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw80: // global
           (_cw7Y::I64) = call MO_PopCnt W8(R2);
           R1 = _cw7Y::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.205216586 UTC

[section ""data" . GHC.PrimopWrappers.popCnt16#_closure" {
     GHC.PrimopWrappers.popCnt16#_closure:
         const GHC.PrimopWrappers.popCnt16#_info;
 },
 GHC.PrimopWrappers.popCnt16#_entry() //  [R2]
         { info_tbl: [(cw89,
                       label: GHC.PrimopWrappers.popCnt16#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw89: // global
           (_cw87::I64) = call MO_PopCnt W16(R2);
           R1 = _cw87::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.206282459 UTC

[section ""data" . GHC.PrimopWrappers.popCnt32#_closure" {
     GHC.PrimopWrappers.popCnt32#_closure:
         const GHC.PrimopWrappers.popCnt32#_info;
 },
 GHC.PrimopWrappers.popCnt32#_entry() //  [R2]
         { info_tbl: [(cw8i,
                       label: GHC.PrimopWrappers.popCnt32#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw8i: // global
           (_cw8g::I64) = call MO_PopCnt W32(R2);
           R1 = _cw8g::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.207139353 UTC

[section ""data" . GHC.PrimopWrappers.popCnt64#_closure" {
     GHC.PrimopWrappers.popCnt64#_closure:
         const GHC.PrimopWrappers.popCnt64#_info;
 },
 GHC.PrimopWrappers.popCnt64#_entry() //  [R2]
         { info_tbl: [(cw8r,
                       label: GHC.PrimopWrappers.popCnt64#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw8r: // global
           (_cw8p::I64) = call MO_PopCnt W64(R2);
           R1 = _cw8p::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.208014084 UTC

[section ""data" . GHC.PrimopWrappers.popCnt#_closure" {
     GHC.PrimopWrappers.popCnt#_closure:
         const GHC.PrimopWrappers.popCnt#_info;
 },
 GHC.PrimopWrappers.popCnt#_entry() //  [R2]
         { info_tbl: [(cw8A,
                       label: GHC.PrimopWrappers.popCnt#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw8A: // global
           (_cw8y::I64) = call MO_PopCnt W64(R2);
           R1 = _cw8y::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.208938585 UTC

[section ""data" . GHC.PrimopWrappers.pdep8#_closure" {
     GHC.PrimopWrappers.pdep8#_closure:
         const GHC.PrimopWrappers.pdep8#_info;
 },
 GHC.PrimopWrappers.pdep8#_entry() //  [R2, R3]
         { info_tbl: [(cw8K,
                       label: GHC.PrimopWrappers.pdep8#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw8K: // global
           _cw8J::I64 = R3;
           (_cw8H::I64) = call MO_Pdep W8(R2, _cw8J::I64);
           R1 = _cw8H::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.209861063 UTC

[section ""data" . GHC.PrimopWrappers.pdep16#_closure" {
     GHC.PrimopWrappers.pdep16#_closure:
         const GHC.PrimopWrappers.pdep16#_info;
 },
 GHC.PrimopWrappers.pdep16#_entry() //  [R2, R3]
         { info_tbl: [(cw8U,
                       label: GHC.PrimopWrappers.pdep16#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw8U: // global
           _cw8T::I64 = R3;
           (_cw8R::I64) = call MO_Pdep W16(R2, _cw8T::I64);
           R1 = _cw8R::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.210726689 UTC

[section ""data" . GHC.PrimopWrappers.pdep32#_closure" {
     GHC.PrimopWrappers.pdep32#_closure:
         const GHC.PrimopWrappers.pdep32#_info;
 },
 GHC.PrimopWrappers.pdep32#_entry() //  [R2, R3]
         { info_tbl: [(cw94,
                       label: GHC.PrimopWrappers.pdep32#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw94: // global
           _cw93::I64 = R3;
           (_cw91::I64) = call MO_Pdep W32(R2, _cw93::I64);
           R1 = _cw91::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.211569551 UTC

[section ""data" . GHC.PrimopWrappers.pdep64#_closure" {
     GHC.PrimopWrappers.pdep64#_closure:
         const GHC.PrimopWrappers.pdep64#_info;
 },
 GHC.PrimopWrappers.pdep64#_entry() //  [R2, R3]
         { info_tbl: [(cw9e,
                       label: GHC.PrimopWrappers.pdep64#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw9e: // global
           _cw9d::I64 = R3;
           (_cw9b::I64) = call MO_Pdep W64(R2, _cw9d::I64);
           R1 = _cw9b::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.212465291 UTC

[section ""data" . GHC.PrimopWrappers.pdep#_closure" {
     GHC.PrimopWrappers.pdep#_closure:
         const GHC.PrimopWrappers.pdep#_info;
 },
 GHC.PrimopWrappers.pdep#_entry() //  [R2, R3]
         { info_tbl: [(cw9o,
                       label: GHC.PrimopWrappers.pdep#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw9o: // global
           _cw9n::I64 = R3;
           (_cw9l::I64) = call MO_Pdep W64(R2, _cw9n::I64);
           R1 = _cw9l::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.213364538 UTC

[section ""data" . GHC.PrimopWrappers.pext8#_closure" {
     GHC.PrimopWrappers.pext8#_closure:
         const GHC.PrimopWrappers.pext8#_info;
 },
 GHC.PrimopWrappers.pext8#_entry() //  [R2, R3]
         { info_tbl: [(cw9y,
                       label: GHC.PrimopWrappers.pext8#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw9y: // global
           _cw9x::I64 = R3;
           (_cw9v::I64) = call MO_Pext W8(R2, _cw9x::I64);
           R1 = _cw9v::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.214247901 UTC

[section ""data" . GHC.PrimopWrappers.pext16#_closure" {
     GHC.PrimopWrappers.pext16#_closure:
         const GHC.PrimopWrappers.pext16#_info;
 },
 GHC.PrimopWrappers.pext16#_entry() //  [R2, R3]
         { info_tbl: [(cw9I,
                       label: GHC.PrimopWrappers.pext16#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw9I: // global
           _cw9H::I64 = R3;
           (_cw9F::I64) = call MO_Pext W16(R2, _cw9H::I64);
           R1 = _cw9F::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.215143965 UTC

[section ""data" . GHC.PrimopWrappers.pext32#_closure" {
     GHC.PrimopWrappers.pext32#_closure:
         const GHC.PrimopWrappers.pext32#_info;
 },
 GHC.PrimopWrappers.pext32#_entry() //  [R2, R3]
         { info_tbl: [(cw9S,
                       label: GHC.PrimopWrappers.pext32#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cw9S: // global
           _cw9R::I64 = R3;
           (_cw9P::I64) = call MO_Pext W32(R2, _cw9R::I64);
           R1 = _cw9P::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.216010361 UTC

[section ""data" . GHC.PrimopWrappers.pext64#_closure" {
     GHC.PrimopWrappers.pext64#_closure:
         const GHC.PrimopWrappers.pext64#_info;
 },
 GHC.PrimopWrappers.pext64#_entry() //  [R2, R3]
         { info_tbl: [(cwa2,
                       label: GHC.PrimopWrappers.pext64#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwa2: // global
           _cwa1::I64 = R3;
           (_cw9Z::I64) = call MO_Pext W64(R2, _cwa1::I64);
           R1 = _cw9Z::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.216847698 UTC

[section ""data" . GHC.PrimopWrappers.pext#_closure" {
     GHC.PrimopWrappers.pext#_closure:
         const GHC.PrimopWrappers.pext#_info;
 },
 GHC.PrimopWrappers.pext#_entry() //  [R2, R3]
         { info_tbl: [(cwac,
                       label: GHC.PrimopWrappers.pext#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwac: // global
           _cwab::I64 = R3;
           (_cwa9::I64) = call MO_Pext W64(R2, _cwab::I64);
           R1 = _cwa9::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.21776056 UTC

[section ""data" . GHC.PrimopWrappers.clz8#_closure" {
     GHC.PrimopWrappers.clz8#_closure:
         const GHC.PrimopWrappers.clz8#_info;
 },
 GHC.PrimopWrappers.clz8#_entry() //  [R2]
         { info_tbl: [(cwal,
                       label: GHC.PrimopWrappers.clz8#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwal: // global
           (_cwaj::I64) = call MO_Clz W8(R2);
           R1 = _cwaj::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.218582137 UTC

[section ""data" . GHC.PrimopWrappers.clz16#_closure" {
     GHC.PrimopWrappers.clz16#_closure:
         const GHC.PrimopWrappers.clz16#_info;
 },
 GHC.PrimopWrappers.clz16#_entry() //  [R2]
         { info_tbl: [(cwau,
                       label: GHC.PrimopWrappers.clz16#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwau: // global
           (_cwas::I64) = call MO_Clz W16(R2);
           R1 = _cwas::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.219447094 UTC

[section ""data" . GHC.PrimopWrappers.clz32#_closure" {
     GHC.PrimopWrappers.clz32#_closure:
         const GHC.PrimopWrappers.clz32#_info;
 },
 GHC.PrimopWrappers.clz32#_entry() //  [R2]
         { info_tbl: [(cwaD,
                       label: GHC.PrimopWrappers.clz32#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwaD: // global
           (_cwaB::I64) = call MO_Clz W32(R2);
           R1 = _cwaB::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.22033335 UTC

[section ""data" . GHC.PrimopWrappers.clz64#_closure" {
     GHC.PrimopWrappers.clz64#_closure:
         const GHC.PrimopWrappers.clz64#_info;
 },
 GHC.PrimopWrappers.clz64#_entry() //  [R2]
         { info_tbl: [(cwaM,
                       label: GHC.PrimopWrappers.clz64#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwaM: // global
           (_cwaK::I64) = call MO_Clz W64(R2);
           R1 = _cwaK::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.221920783 UTC

[section ""data" . GHC.PrimopWrappers.clz#_closure" {
     GHC.PrimopWrappers.clz#_closure:
         const GHC.PrimopWrappers.clz#_info;
 },
 GHC.PrimopWrappers.clz#_entry() //  [R2]
         { info_tbl: [(cwaV,
                       label: GHC.PrimopWrappers.clz#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwaV: // global
           (_cwaT::I64) = call MO_Clz W64(R2);
           R1 = _cwaT::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.222742277 UTC

[section ""data" . GHC.PrimopWrappers.ctz8#_closure" {
     GHC.PrimopWrappers.ctz8#_closure:
         const GHC.PrimopWrappers.ctz8#_info;
 },
 GHC.PrimopWrappers.ctz8#_entry() //  [R2]
         { info_tbl: [(cwb4,
                       label: GHC.PrimopWrappers.ctz8#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwb4: // global
           (_cwb2::I64) = call MO_Ctz W8(R2);
           R1 = _cwb2::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.223603367 UTC

[section ""data" . GHC.PrimopWrappers.ctz16#_closure" {
     GHC.PrimopWrappers.ctz16#_closure:
         const GHC.PrimopWrappers.ctz16#_info;
 },
 GHC.PrimopWrappers.ctz16#_entry() //  [R2]
         { info_tbl: [(cwbd,
                       label: GHC.PrimopWrappers.ctz16#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwbd: // global
           (_cwbb::I64) = call MO_Ctz W16(R2);
           R1 = _cwbb::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.224442208 UTC

[section ""data" . GHC.PrimopWrappers.ctz32#_closure" {
     GHC.PrimopWrappers.ctz32#_closure:
         const GHC.PrimopWrappers.ctz32#_info;
 },
 GHC.PrimopWrappers.ctz32#_entry() //  [R2]
         { info_tbl: [(cwbm,
                       label: GHC.PrimopWrappers.ctz32#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwbm: // global
           (_cwbk::I64) = call MO_Ctz W32(R2);
           R1 = _cwbk::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.225286907 UTC

[section ""data" . GHC.PrimopWrappers.ctz64#_closure" {
     GHC.PrimopWrappers.ctz64#_closure:
         const GHC.PrimopWrappers.ctz64#_info;
 },
 GHC.PrimopWrappers.ctz64#_entry() //  [R2]
         { info_tbl: [(cwbv,
                       label: GHC.PrimopWrappers.ctz64#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwbv: // global
           (_cwbt::I64) = call MO_Ctz W64(R2);
           R1 = _cwbt::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.226134517 UTC

[section ""data" . GHC.PrimopWrappers.ctz#_closure" {
     GHC.PrimopWrappers.ctz#_closure:
         const GHC.PrimopWrappers.ctz#_info;
 },
 GHC.PrimopWrappers.ctz#_entry() //  [R2]
         { info_tbl: [(cwbE,
                       label: GHC.PrimopWrappers.ctz#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwbE: // global
           (_cwbC::I64) = call MO_Ctz W64(R2);
           R1 = _cwbC::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.226988735 UTC

[section ""data" . GHC.PrimopWrappers.byteSwap16#_closure" {
     GHC.PrimopWrappers.byteSwap16#_closure:
         const GHC.PrimopWrappers.byteSwap16#_info;
 },
 GHC.PrimopWrappers.byteSwap16#_entry() //  [R2]
         { info_tbl: [(cwbN,
                       label: GHC.PrimopWrappers.byteSwap16#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwbN: // global
           (_cwbL::I64) = call MO_BSwap W16(R2);
           R1 = _cwbL::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.227860961 UTC

[section ""data" . GHC.PrimopWrappers.byteSwap32#_closure" {
     GHC.PrimopWrappers.byteSwap32#_closure:
         const GHC.PrimopWrappers.byteSwap32#_info;
 },
 GHC.PrimopWrappers.byteSwap32#_entry() //  [R2]
         { info_tbl: [(cwbW,
                       label: GHC.PrimopWrappers.byteSwap32#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwbW: // global
           (_cwbU::I64) = call MO_BSwap W32(R2);
           R1 = _cwbU::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.228742521 UTC

[section ""data" . GHC.PrimopWrappers.byteSwap64#_closure" {
     GHC.PrimopWrappers.byteSwap64#_closure:
         const GHC.PrimopWrappers.byteSwap64#_info;
 },
 GHC.PrimopWrappers.byteSwap64#_entry() //  [R2]
         { info_tbl: [(cwc5,
                       label: GHC.PrimopWrappers.byteSwap64#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwc5: // global
           (_cwc3::I64) = call MO_BSwap W64(R2);
           R1 = _cwc3::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.229627009 UTC

[section ""data" . GHC.PrimopWrappers.byteSwap#_closure" {
     GHC.PrimopWrappers.byteSwap#_closure:
         const GHC.PrimopWrappers.byteSwap#_info;
 },
 GHC.PrimopWrappers.byteSwap#_entry() //  [R2]
         { info_tbl: [(cwce,
                       label: GHC.PrimopWrappers.byteSwap#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwce: // global
           (_cwcc::I64) = call MO_BSwap W64(R2);
           R1 = _cwcc::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.230464513 UTC

[section ""data" . GHC.PrimopWrappers.narrow8Int#_closure" {
     GHC.PrimopWrappers.narrow8Int#_closure:
         const GHC.PrimopWrappers.narrow8Int#_info;
 },
 GHC.PrimopWrappers.narrow8Int#_entry() //  [R2]
         { info_tbl: [(cwcm,
                       label: GHC.PrimopWrappers.narrow8Int#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwcm: // global
           R1 = %MO_SS_Conv_W8_W64(%MO_SS_Conv_W64_W8(R2));
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.2312839 UTC

[section ""data" . GHC.PrimopWrappers.narrow16Int#_closure" {
     GHC.PrimopWrappers.narrow16Int#_closure:
         const GHC.PrimopWrappers.narrow16Int#_info;
 },
 GHC.PrimopWrappers.narrow16Int#_entry() //  [R2]
         { info_tbl: [(cwcu,
                       label: GHC.PrimopWrappers.narrow16Int#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwcu: // global
           R1 = %MO_SS_Conv_W16_W64(%MO_SS_Conv_W64_W16(R2));
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.232118071 UTC

[section ""data" . GHC.PrimopWrappers.narrow32Int#_closure" {
     GHC.PrimopWrappers.narrow32Int#_closure:
         const GHC.PrimopWrappers.narrow32Int#_info;
 },
 GHC.PrimopWrappers.narrow32Int#_entry() //  [R2]
         { info_tbl: [(cwcC,
                       label: GHC.PrimopWrappers.narrow32Int#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwcC: // global
           R1 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(R2));
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.232958422 UTC

[section ""data" . GHC.PrimopWrappers.narrow8Word#_closure" {
     GHC.PrimopWrappers.narrow8Word#_closure:
         const GHC.PrimopWrappers.narrow8Word#_info;
 },
 GHC.PrimopWrappers.narrow8Word#_entry() //  [R2]
         { info_tbl: [(cwcK,
                       label: GHC.PrimopWrappers.narrow8Word#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwcK: // global
           R1 = %MO_UU_Conv_W8_W64(%MO_UU_Conv_W64_W8(R2));
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.234365124 UTC

[section ""data" . GHC.PrimopWrappers.narrow16Word#_closure" {
     GHC.PrimopWrappers.narrow16Word#_closure:
         const GHC.PrimopWrappers.narrow16Word#_info;
 },
 GHC.PrimopWrappers.narrow16Word#_entry() //  [R2]
         { info_tbl: [(cwcS,
                       label: GHC.PrimopWrappers.narrow16Word#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwcS: // global
           R1 = %MO_UU_Conv_W16_W64(%MO_UU_Conv_W64_W16(R2));
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.235159508 UTC

[section ""data" . GHC.PrimopWrappers.narrow32Word#_closure" {
     GHC.PrimopWrappers.narrow32Word#_closure:
         const GHC.PrimopWrappers.narrow32Word#_info;
 },
 GHC.PrimopWrappers.narrow32Word#_entry() //  [R2]
         { info_tbl: [(cwd0,
                       label: GHC.PrimopWrappers.narrow32Word#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwd0: // global
           R1 = %MO_UU_Conv_W32_W64(%MO_UU_Conv_W64_W32(R2));
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.236009958 UTC

[section ""data" . GHC.PrimopWrappers.>##_closure" {
     GHC.PrimopWrappers.>##_closure:
         const GHC.PrimopWrappers.>##_info;
 },
 GHC.PrimopWrappers.>##_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwd4: // global
           D2 = F64[Sp + 8];
           D1 = F64[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.>##_entry(D2,
                                             D1,
                                             R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.>##_entry() //  [D1, D2]
         { info_tbl: [(cwd9,
                       label: GHC.PrimopWrappers.>##_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwd9: // global
           R1 = %MO_F_Gt_W64(D1, D2);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.23702199 UTC

[section ""data" . GHC.PrimopWrappers.>=##_closure" {
     GHC.PrimopWrappers.>=##_closure:
         const GHC.PrimopWrappers.>=##_info;
 },
 GHC.PrimopWrappers.>=##_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwdd: // global
           D2 = F64[Sp + 8];
           D1 = F64[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.>=##_entry(D2,
                                              D1,
                                              R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.>=##_entry() //  [D1, D2]
         { info_tbl: [(cwdi,
                       label: GHC.PrimopWrappers.>=##_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwdi: // global
           R1 = %MO_F_Ge_W64(D1, D2);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.238049434 UTC

[section ""data" . GHC.PrimopWrappers.==##_closure" {
     GHC.PrimopWrappers.==##_closure:
         const GHC.PrimopWrappers.==##_info;
 },
 GHC.PrimopWrappers.==##_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwdm: // global
           D2 = F64[Sp + 8];
           D1 = F64[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.==##_entry(D2,
                                              D1,
                                              R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.==##_entry() //  [D1, D2]
         { info_tbl: [(cwdr,
                       label: GHC.PrimopWrappers.==##_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwdr: // global
           R1 = %MO_F_Eq_W64(D1, D2);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.239083634 UTC

[section ""data" . GHC.PrimopWrappers./=##_closure" {
     GHC.PrimopWrappers./=##_closure:
         const GHC.PrimopWrappers./=##_info;
 },
 GHC.PrimopWrappers./=##_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwdv: // global
           D2 = F64[Sp + 8];
           D1 = F64[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers./=##_entry(D2,
                                              D1,
                                              R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers./=##_entry() //  [D1, D2]
         { info_tbl: [(cwdA,
                       label: GHC.PrimopWrappers./=##_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwdA: // global
           R1 = %MO_F_Ne_W64(D1, D2);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.240126406 UTC

[section ""data" . GHC.PrimopWrappers.<##_closure" {
     GHC.PrimopWrappers.<##_closure:
         const GHC.PrimopWrappers.<##_info;
 },
 GHC.PrimopWrappers.<##_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwdE: // global
           D2 = F64[Sp + 8];
           D1 = F64[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.<##_entry(D2,
                                             D1,
                                             R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.<##_entry() //  [D1, D2]
         { info_tbl: [(cwdJ,
                       label: GHC.PrimopWrappers.<##_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwdJ: // global
           R1 = %MO_F_Lt_W64(D1, D2);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.241103715 UTC

[section ""data" . GHC.PrimopWrappers.<=##_closure" {
     GHC.PrimopWrappers.<=##_closure:
         const GHC.PrimopWrappers.<=##_info;
 },
 GHC.PrimopWrappers.<=##_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwdN: // global
           D2 = F64[Sp + 8];
           D1 = F64[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.<=##_entry(D2,
                                              D1,
                                              R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.<=##_entry() //  [D1, D2]
         { info_tbl: [(cwdS,
                       label: GHC.PrimopWrappers.<=##_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwdS: // global
           R1 = %MO_F_Le_W64(D1, D2);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.242188227 UTC

[section ""data" . GHC.PrimopWrappers.+##_closure" {
     GHC.PrimopWrappers.+##_closure:
         const GHC.PrimopWrappers.+##_info;
 },
 GHC.PrimopWrappers.+##_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwdW: // global
           D2 = F64[Sp + 8];
           D1 = F64[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.+##_entry(D2,
                                             D1,
                                             R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.+##_entry() //  [D1, D2]
         { info_tbl: [(cwe1,
                       label: GHC.PrimopWrappers.+##_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwe1: // global
           D1 = %MO_F_Add_W64(D1, D2);
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.243208082 UTC

[section ""data" . GHC.PrimopWrappers.-##_closure" {
     GHC.PrimopWrappers.-##_closure:
         const GHC.PrimopWrappers.-##_info;
 },
 GHC.PrimopWrappers.-##_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwe5: // global
           D2 = F64[Sp + 8];
           D1 = F64[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.-##_entry(D2,
                                             D1,
                                             R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.-##_entry() //  [D1, D2]
         { info_tbl: [(cwea,
                       label: GHC.PrimopWrappers.-##_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwea: // global
           D1 = %MO_F_Sub_W64(D1, D2);
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.244259257 UTC

[section ""data" . GHC.PrimopWrappers.*##_closure" {
     GHC.PrimopWrappers.*##_closure:
         const GHC.PrimopWrappers.*##_info;
 },
 GHC.PrimopWrappers.*##_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwee: // global
           D2 = F64[Sp + 8];
           D1 = F64[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.*##_entry(D2,
                                             D1,
                                             R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.*##_entry() //  [D1, D2]
         { info_tbl: [(cwej,
                       label: GHC.PrimopWrappers.*##_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwej: // global
           D1 = %MO_F_Mul_W64(D1, D2);
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.245299563 UTC

[section ""data" . GHC.PrimopWrappers./##_closure" {
     GHC.PrimopWrappers./##_closure:
         const GHC.PrimopWrappers./##_info;
 },
 GHC.PrimopWrappers./##_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwen: // global
           D2 = F64[Sp + 8];
           D1 = F64[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers./##_entry(D2,
                                             D1,
                                             R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers./##_entry() //  [D1, D2]
         { info_tbl: [(cwes,
                       label: GHC.PrimopWrappers./##_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwes: // global
           D1 = %MO_F_Quot_W64(D1, D2);
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.246273866 UTC

[section ""data" . GHC.PrimopWrappers.negateDouble#_closure" {
     GHC.PrimopWrappers.negateDouble#_closure:
         const GHC.PrimopWrappers.negateDouble#_info;
 },
 GHC.PrimopWrappers.negateDouble#_entry() //  [D1]
         { info_tbl: [(cweA,
                       label: GHC.PrimopWrappers.negateDouble#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cweA: // global
           D1 = %MO_F_Neg_W64(D1);
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.247067066 UTC

[section ""data" . GHC.PrimopWrappers.fabsDouble#_closure" {
     GHC.PrimopWrappers.fabsDouble#_closure:
         const GHC.PrimopWrappers.fabsDouble#_info;
 },
 GHC.PrimopWrappers.fabsDouble#_entry() //  [D1]
         { info_tbl: [(cweI,
                       label: GHC.PrimopWrappers.fabsDouble#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cweI: // global
           _B1::F64 = D1;
           (_cweH::F64) = call MO_F64_Fabs(_B1::F64);
           D1 = _cweH::F64;
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.247931902 UTC

[section ""data" . GHC.PrimopWrappers.double2Int#_closure" {
     GHC.PrimopWrappers.double2Int#_closure:
         const GHC.PrimopWrappers.double2Int#_info;
 },
 GHC.PrimopWrappers.double2Int#_entry() //  [D1]
         { info_tbl: [(cweQ,
                       label: GHC.PrimopWrappers.double2Int#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cweQ: // global
           R1 = %MO_FS_Conv_W64_W64(D1);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.24875728 UTC

[section ""data" . GHC.PrimopWrappers.double2Float#_closure" {
     GHC.PrimopWrappers.double2Float#_closure:
         const GHC.PrimopWrappers.double2Float#_info;
 },
 GHC.PrimopWrappers.double2Float#_entry() //  [D1]
         { info_tbl: [(cweY,
                       label: GHC.PrimopWrappers.double2Float#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cweY: // global
           F1 = %MO_FF_Conv_W64_W32(D1);
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.249620475 UTC

[section ""data" . GHC.PrimopWrappers.expDouble#_closure" {
     GHC.PrimopWrappers.expDouble#_closure:
         const GHC.PrimopWrappers.expDouble#_info;
 },
 GHC.PrimopWrappers.expDouble#_entry() //  [D1]
         { info_tbl: [(cwf7,
                       label: GHC.PrimopWrappers.expDouble#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwf7: // global
           _cwf6::F64 = D1;
           (_cwf5::F64) = call MO_F64_Exp(_cwf6::F64);
           D1 = _cwf5::F64;
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.250443521 UTC

[section ""data" . GHC.PrimopWrappers.logDouble#_closure" {
     GHC.PrimopWrappers.logDouble#_closure:
         const GHC.PrimopWrappers.logDouble#_info;
 },
 GHC.PrimopWrappers.logDouble#_entry() //  [D1]
         { info_tbl: [(cwfg,
                       label: GHC.PrimopWrappers.logDouble#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwfg: // global
           _cwff::F64 = D1;
           (_cwfe::F64) = call MO_F64_Log(_cwff::F64);
           D1 = _cwfe::F64;
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.252046323 UTC

[section ""data" . GHC.PrimopWrappers.sqrtDouble#_closure" {
     GHC.PrimopWrappers.sqrtDouble#_closure:
         const GHC.PrimopWrappers.sqrtDouble#_info;
 },
 GHC.PrimopWrappers.sqrtDouble#_entry() //  [D1]
         { info_tbl: [(cwfp,
                       label: GHC.PrimopWrappers.sqrtDouble#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwfp: // global
           _cwfo::F64 = D1;
           (_cwfn::F64) = call MO_F64_Sqrt(_cwfo::F64);
           D1 = _cwfn::F64;
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.252890789 UTC

[section ""data" . GHC.PrimopWrappers.sinDouble#_closure" {
     GHC.PrimopWrappers.sinDouble#_closure:
         const GHC.PrimopWrappers.sinDouble#_info;
 },
 GHC.PrimopWrappers.sinDouble#_entry() //  [D1]
         { info_tbl: [(cwfy,
                       label: GHC.PrimopWrappers.sinDouble#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwfy: // global
           _cwfx::F64 = D1;
           (_cwfw::F64) = call MO_F64_Sin(_cwfx::F64);
           D1 = _cwfw::F64;
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.253793985 UTC

[section ""data" . GHC.PrimopWrappers.cosDouble#_closure" {
     GHC.PrimopWrappers.cosDouble#_closure:
         const GHC.PrimopWrappers.cosDouble#_info;
 },
 GHC.PrimopWrappers.cosDouble#_entry() //  [D1]
         { info_tbl: [(cwfH,
                       label: GHC.PrimopWrappers.cosDouble#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwfH: // global
           _cwfG::F64 = D1;
           (_cwfF::F64) = call MO_F64_Cos(_cwfG::F64);
           D1 = _cwfF::F64;
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.254680276 UTC

[section ""data" . GHC.PrimopWrappers.tanDouble#_closure" {
     GHC.PrimopWrappers.tanDouble#_closure:
         const GHC.PrimopWrappers.tanDouble#_info;
 },
 GHC.PrimopWrappers.tanDouble#_entry() //  [D1]
         { info_tbl: [(cwfQ,
                       label: GHC.PrimopWrappers.tanDouble#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwfQ: // global
           _cwfP::F64 = D1;
           (_cwfO::F64) = call MO_F64_Tan(_cwfP::F64);
           D1 = _cwfO::F64;
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.255527631 UTC

[section ""data" . GHC.PrimopWrappers.asinDouble#_closure" {
     GHC.PrimopWrappers.asinDouble#_closure:
         const GHC.PrimopWrappers.asinDouble#_info;
 },
 GHC.PrimopWrappers.asinDouble#_entry() //  [D1]
         { info_tbl: [(cwfZ,
                       label: GHC.PrimopWrappers.asinDouble#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwfZ: // global
           _cwfY::F64 = D1;
           (_cwfX::F64) = call MO_F64_Asin(_cwfY::F64);
           D1 = _cwfX::F64;
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.25638043 UTC

[section ""data" . GHC.PrimopWrappers.acosDouble#_closure" {
     GHC.PrimopWrappers.acosDouble#_closure:
         const GHC.PrimopWrappers.acosDouble#_info;
 },
 GHC.PrimopWrappers.acosDouble#_entry() //  [D1]
         { info_tbl: [(cwg8,
                       label: GHC.PrimopWrappers.acosDouble#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwg8: // global
           _cwg7::F64 = D1;
           (_cwg6::F64) = call MO_F64_Acos(_cwg7::F64);
           D1 = _cwg6::F64;
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.257236018 UTC

[section ""data" . GHC.PrimopWrappers.atanDouble#_closure" {
     GHC.PrimopWrappers.atanDouble#_closure:
         const GHC.PrimopWrappers.atanDouble#_info;
 },
 GHC.PrimopWrappers.atanDouble#_entry() //  [D1]
         { info_tbl: [(cwgh,
                       label: GHC.PrimopWrappers.atanDouble#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwgh: // global
           _cwgg::F64 = D1;
           (_cwgf::F64) = call MO_F64_Atan(_cwgg::F64);
           D1 = _cwgf::F64;
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.258463035 UTC

[section ""data" . GHC.PrimopWrappers.sinhDouble#_closure" {
     GHC.PrimopWrappers.sinhDouble#_closure:
         const GHC.PrimopWrappers.sinhDouble#_info;
 },
 GHC.PrimopWrappers.sinhDouble#_entry() //  [D1]
         { info_tbl: [(cwgq,
                       label: GHC.PrimopWrappers.sinhDouble#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwgq: // global
           _cwgp::F64 = D1;
           (_cwgo::F64) = call MO_F64_Sinh(_cwgp::F64);
           D1 = _cwgo::F64;
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.259309073 UTC

[section ""data" . GHC.PrimopWrappers.coshDouble#_closure" {
     GHC.PrimopWrappers.coshDouble#_closure:
         const GHC.PrimopWrappers.coshDouble#_info;
 },
 GHC.PrimopWrappers.coshDouble#_entry() //  [D1]
         { info_tbl: [(cwgz,
                       label: GHC.PrimopWrappers.coshDouble#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwgz: // global
           _cwgy::F64 = D1;
           (_cwgx::F64) = call MO_F64_Cosh(_cwgy::F64);
           D1 = _cwgx::F64;
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.260157617 UTC

[section ""data" . GHC.PrimopWrappers.tanhDouble#_closure" {
     GHC.PrimopWrappers.tanhDouble#_closure:
         const GHC.PrimopWrappers.tanhDouble#_info;
 },
 GHC.PrimopWrappers.tanhDouble#_entry() //  [D1]
         { info_tbl: [(cwgI,
                       label: GHC.PrimopWrappers.tanhDouble#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwgI: // global
           _cwgH::F64 = D1;
           (_cwgG::F64) = call MO_F64_Tanh(_cwgH::F64);
           D1 = _cwgG::F64;
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.261067805 UTC

[section ""data" . GHC.PrimopWrappers.**##_closure" {
     GHC.PrimopWrappers.**##_closure:
         const GHC.PrimopWrappers.**##_info;
 },
 GHC.PrimopWrappers.**##_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwgM: // global
           D2 = F64[Sp + 8];
           D1 = F64[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.**##_entry(D2,
                                              D1,
                                              R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.**##_entry() //  [D1, D2]
         { info_tbl: [(cwgT,
                       label: GHC.PrimopWrappers.**##_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwgT: // global
           _cwgR::F64 = D1;
           _cwgS::F64 = D2;
           (_cwgQ::F64) = call MO_F64_Pwr(_cwgR::F64, _cwgS::F64);
           D1 = _cwgQ::F64;
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.262064994 UTC

[section ""data" . GHC.PrimopWrappers.decodeDouble_2Int#_closure" {
     GHC.PrimopWrappers.decodeDouble_2Int#_closure:
         const GHC.PrimopWrappers.decodeDouble_2Int#_info;
 },
 GHC.PrimopWrappers.decodeDouble_2Int#_entry() //  [D1]
         { info_tbl: [(cwh0,
                       label: GHC.PrimopWrappers.decodeDouble_2Int#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwh0: // global
           D1 = D1;
           call stg_decodeDouble_2Int#(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.262862754 UTC

[section ""data" . GHC.PrimopWrappers.decodeDouble_Int64#_closure" {
     GHC.PrimopWrappers.decodeDouble_Int64#_closure:
         const GHC.PrimopWrappers.decodeDouble_Int64#_info;
 },
 GHC.PrimopWrappers.decodeDouble_Int64#_entry() //  [D1]
         { info_tbl: [(cwh7,
                       label: GHC.PrimopWrappers.decodeDouble_Int64#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwh7: // global
           D1 = D1;
           call stg_decodeDouble_Int64#(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.263731517 UTC

[section ""data" . GHC.PrimopWrappers.gtFloat#_closure" {
     GHC.PrimopWrappers.gtFloat#_closure:
         const GHC.PrimopWrappers.gtFloat#_info;
 },
 GHC.PrimopWrappers.gtFloat#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwhb: // global
           F2 = F32[Sp + 8];
           F1 = F32[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.gtFloat#_entry(F2,
                                                  F1,
                                                  R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.gtFloat#_entry() //  [F1, F2]
         { info_tbl: [(cwhg,
                       label: GHC.PrimopWrappers.gtFloat#_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwhg: // global
           R1 = %MO_F_Gt_W32(F1, F2);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.264720147 UTC

[section ""data" . GHC.PrimopWrappers.geFloat#_closure" {
     GHC.PrimopWrappers.geFloat#_closure:
         const GHC.PrimopWrappers.geFloat#_info;
 },
 GHC.PrimopWrappers.geFloat#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwhk: // global
           F2 = F32[Sp + 8];
           F1 = F32[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.geFloat#_entry(F2,
                                                  F1,
                                                  R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.geFloat#_entry() //  [F1, F2]
         { info_tbl: [(cwhp,
                       label: GHC.PrimopWrappers.geFloat#_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwhp: // global
           R1 = %MO_F_Ge_W32(F1, F2);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.265785505 UTC

[section ""data" . GHC.PrimopWrappers.eqFloat#_closure" {
     GHC.PrimopWrappers.eqFloat#_closure:
         const GHC.PrimopWrappers.eqFloat#_info;
 },
 GHC.PrimopWrappers.eqFloat#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwht: // global
           F2 = F32[Sp + 8];
           F1 = F32[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.eqFloat#_entry(F2,
                                                  F1,
                                                  R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.eqFloat#_entry() //  [F1, F2]
         { info_tbl: [(cwhy,
                       label: GHC.PrimopWrappers.eqFloat#_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwhy: // global
           R1 = %MO_F_Eq_W32(F1, F2);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.266818346 UTC

[section ""data" . GHC.PrimopWrappers.neFloat#_closure" {
     GHC.PrimopWrappers.neFloat#_closure:
         const GHC.PrimopWrappers.neFloat#_info;
 },
 GHC.PrimopWrappers.neFloat#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwhC: // global
           F2 = F32[Sp + 8];
           F1 = F32[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.neFloat#_entry(F2,
                                                  F1,
                                                  R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.neFloat#_entry() //  [F1, F2]
         { info_tbl: [(cwhH,
                       label: GHC.PrimopWrappers.neFloat#_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwhH: // global
           R1 = %MO_F_Ne_W32(F1, F2);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.267871692 UTC

[section ""data" . GHC.PrimopWrappers.ltFloat#_closure" {
     GHC.PrimopWrappers.ltFloat#_closure:
         const GHC.PrimopWrappers.ltFloat#_info;
 },
 GHC.PrimopWrappers.ltFloat#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwhL: // global
           F2 = F32[Sp + 8];
           F1 = F32[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.ltFloat#_entry(F2,
                                                  F1,
                                                  R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.ltFloat#_entry() //  [F1, F2]
         { info_tbl: [(cwhQ,
                       label: GHC.PrimopWrappers.ltFloat#_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwhQ: // global
           R1 = %MO_F_Lt_W32(F1, F2);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.268857709 UTC

[section ""data" . GHC.PrimopWrappers.leFloat#_closure" {
     GHC.PrimopWrappers.leFloat#_closure:
         const GHC.PrimopWrappers.leFloat#_info;
 },
 GHC.PrimopWrappers.leFloat#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwhU: // global
           F2 = F32[Sp + 8];
           F1 = F32[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.leFloat#_entry(F2,
                                                  F1,
                                                  R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.leFloat#_entry() //  [F1, F2]
         { info_tbl: [(cwhZ,
                       label: GHC.PrimopWrappers.leFloat#_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwhZ: // global
           R1 = %MO_F_Le_W32(F1, F2);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.269921092 UTC

[section ""data" . GHC.PrimopWrappers.plusFloat#_closure" {
     GHC.PrimopWrappers.plusFloat#_closure:
         const GHC.PrimopWrappers.plusFloat#_info;
 },
 GHC.PrimopWrappers.plusFloat#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwi3: // global
           F2 = F32[Sp + 8];
           F1 = F32[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.plusFloat#_entry(F2,
                                                    F1,
                                                    R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.plusFloat#_entry() //  [F1, F2]
         { info_tbl: [(cwi8,
                       label: GHC.PrimopWrappers.plusFloat#_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwi8: // global
           F1 = %MO_F_Add_W32(F1, F2);
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.270968539 UTC

[section ""data" . GHC.PrimopWrappers.minusFloat#_closure" {
     GHC.PrimopWrappers.minusFloat#_closure:
         const GHC.PrimopWrappers.minusFloat#_info;
 },
 GHC.PrimopWrappers.minusFloat#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwic: // global
           F2 = F32[Sp + 8];
           F1 = F32[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.minusFloat#_entry(F2,
                                                     F1,
                                                     R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.minusFloat#_entry() //  [F1, F2]
         { info_tbl: [(cwih,
                       label: GHC.PrimopWrappers.minusFloat#_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwih: // global
           F1 = %MO_F_Sub_W32(F1, F2);
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.271984299 UTC

[section ""data" . GHC.PrimopWrappers.timesFloat#_closure" {
     GHC.PrimopWrappers.timesFloat#_closure:
         const GHC.PrimopWrappers.timesFloat#_info;
 },
 GHC.PrimopWrappers.timesFloat#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwil: // global
           F2 = F32[Sp + 8];
           F1 = F32[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.timesFloat#_entry(F2,
                                                     F1,
                                                     R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.timesFloat#_entry() //  [F1, F2]
         { info_tbl: [(cwiq,
                       label: GHC.PrimopWrappers.timesFloat#_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwiq: // global
           F1 = %MO_F_Mul_W32(F1, F2);
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.272997502 UTC

[section ""data" . GHC.PrimopWrappers.divideFloat#_closure" {
     GHC.PrimopWrappers.divideFloat#_closure:
         const GHC.PrimopWrappers.divideFloat#_info;
 },
 GHC.PrimopWrappers.divideFloat#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwiu: // global
           F2 = F32[Sp + 8];
           F1 = F32[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.divideFloat#_entry(F2,
                                                      F1,
                                                      R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.divideFloat#_entry() //  [F1, F2]
         { info_tbl: [(cwiz,
                       label: GHC.PrimopWrappers.divideFloat#_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwiz: // global
           F1 = %MO_F_Quot_W32(F1, F2);
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.274592309 UTC

[section ""data" . GHC.PrimopWrappers.negateFloat#_closure" {
     GHC.PrimopWrappers.negateFloat#_closure:
         const GHC.PrimopWrappers.negateFloat#_info;
 },
 GHC.PrimopWrappers.negateFloat#_entry() //  [F1]
         { info_tbl: [(cwiH,
                       label: GHC.PrimopWrappers.negateFloat#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwiH: // global
           F1 = %MO_F_Neg_W32(F1);
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.275441805 UTC

[section ""data" . GHC.PrimopWrappers.fabsFloat#_closure" {
     GHC.PrimopWrappers.fabsFloat#_closure:
         const GHC.PrimopWrappers.fabsFloat#_info;
 },
 GHC.PrimopWrappers.fabsFloat#_entry() //  [F1]
         { info_tbl: [(cwiP,
                       label: GHC.PrimopWrappers.fabsFloat#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwiP: // global
           _B1::F32 = F1;
           (_cwiO::F32) = call MO_F32_Fabs(_B1::F32);
           F1 = _cwiO::F32;
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.276271664 UTC

[section ""data" . GHC.PrimopWrappers.float2Int#_closure" {
     GHC.PrimopWrappers.float2Int#_closure:
         const GHC.PrimopWrappers.float2Int#_info;
 },
 GHC.PrimopWrappers.float2Int#_entry() //  [F1]
         { info_tbl: [(cwiX,
                       label: GHC.PrimopWrappers.float2Int#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwiX: // global
           R1 = %MO_FS_Conv_W32_W64(F1);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.277099622 UTC

[section ""data" . GHC.PrimopWrappers.expFloat#_closure" {
     GHC.PrimopWrappers.expFloat#_closure:
         const GHC.PrimopWrappers.expFloat#_info;
 },
 GHC.PrimopWrappers.expFloat#_entry() //  [F1]
         { info_tbl: [(cwj6,
                       label: GHC.PrimopWrappers.expFloat#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwj6: // global
           _cwj5::F32 = F1;
           (_cwj4::F32) = call MO_F32_Exp(_cwj5::F32);
           F1 = _cwj4::F32;
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.278006732 UTC

[section ""data" . GHC.PrimopWrappers.logFloat#_closure" {
     GHC.PrimopWrappers.logFloat#_closure:
         const GHC.PrimopWrappers.logFloat#_info;
 },
 GHC.PrimopWrappers.logFloat#_entry() //  [F1]
         { info_tbl: [(cwjf,
                       label: GHC.PrimopWrappers.logFloat#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwjf: // global
           _cwje::F32 = F1;
           (_cwjd::F32) = call MO_F32_Log(_cwje::F32);
           F1 = _cwjd::F32;
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.278885773 UTC

[section ""data" . GHC.PrimopWrappers.sqrtFloat#_closure" {
     GHC.PrimopWrappers.sqrtFloat#_closure:
         const GHC.PrimopWrappers.sqrtFloat#_info;
 },
 GHC.PrimopWrappers.sqrtFloat#_entry() //  [F1]
         { info_tbl: [(cwjo,
                       label: GHC.PrimopWrappers.sqrtFloat#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwjo: // global
           _cwjn::F32 = F1;
           (_cwjm::F32) = call MO_F32_Sqrt(_cwjn::F32);
           F1 = _cwjm::F32;
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.279781397 UTC

[section ""data" . GHC.PrimopWrappers.sinFloat#_closure" {
     GHC.PrimopWrappers.sinFloat#_closure:
         const GHC.PrimopWrappers.sinFloat#_info;
 },
 GHC.PrimopWrappers.sinFloat#_entry() //  [F1]
         { info_tbl: [(cwjx,
                       label: GHC.PrimopWrappers.sinFloat#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwjx: // global
           _cwjw::F32 = F1;
           (_cwjv::F32) = call MO_F32_Sin(_cwjw::F32);
           F1 = _cwjv::F32;
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.281446452 UTC

[section ""data" . GHC.PrimopWrappers.cosFloat#_closure" {
     GHC.PrimopWrappers.cosFloat#_closure:
         const GHC.PrimopWrappers.cosFloat#_info;
 },
 GHC.PrimopWrappers.cosFloat#_entry() //  [F1]
         { info_tbl: [(cwjG,
                       label: GHC.PrimopWrappers.cosFloat#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwjG: // global
           _cwjF::F32 = F1;
           (_cwjE::F32) = call MO_F32_Cos(_cwjF::F32);
           F1 = _cwjE::F32;
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.28231117 UTC

[section ""data" . GHC.PrimopWrappers.tanFloat#_closure" {
     GHC.PrimopWrappers.tanFloat#_closure:
         const GHC.PrimopWrappers.tanFloat#_info;
 },
 GHC.PrimopWrappers.tanFloat#_entry() //  [F1]
         { info_tbl: [(cwjP,
                       label: GHC.PrimopWrappers.tanFloat#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwjP: // global
           _cwjO::F32 = F1;
           (_cwjN::F32) = call MO_F32_Tan(_cwjO::F32);
           F1 = _cwjN::F32;
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.283183879 UTC

[section ""data" . GHC.PrimopWrappers.asinFloat#_closure" {
     GHC.PrimopWrappers.asinFloat#_closure:
         const GHC.PrimopWrappers.asinFloat#_info;
 },
 GHC.PrimopWrappers.asinFloat#_entry() //  [F1]
         { info_tbl: [(cwjY,
                       label: GHC.PrimopWrappers.asinFloat#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwjY: // global
           _cwjX::F32 = F1;
           (_cwjW::F32) = call MO_F32_Asin(_cwjX::F32);
           F1 = _cwjW::F32;
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.284060622 UTC

[section ""data" . GHC.PrimopWrappers.acosFloat#_closure" {
     GHC.PrimopWrappers.acosFloat#_closure:
         const GHC.PrimopWrappers.acosFloat#_info;
 },
 GHC.PrimopWrappers.acosFloat#_entry() //  [F1]
         { info_tbl: [(cwk7,
                       label: GHC.PrimopWrappers.acosFloat#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwk7: // global
           _cwk6::F32 = F1;
           (_cwk5::F32) = call MO_F32_Acos(_cwk6::F32);
           F1 = _cwk5::F32;
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.284914229 UTC

[section ""data" . GHC.PrimopWrappers.atanFloat#_closure" {
     GHC.PrimopWrappers.atanFloat#_closure:
         const GHC.PrimopWrappers.atanFloat#_info;
 },
 GHC.PrimopWrappers.atanFloat#_entry() //  [F1]
         { info_tbl: [(cwkg,
                       label: GHC.PrimopWrappers.atanFloat#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwkg: // global
           _cwkf::F32 = F1;
           (_cwke::F32) = call MO_F32_Atan(_cwkf::F32);
           F1 = _cwke::F32;
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.285795358 UTC

[section ""data" . GHC.PrimopWrappers.sinhFloat#_closure" {
     GHC.PrimopWrappers.sinhFloat#_closure:
         const GHC.PrimopWrappers.sinhFloat#_info;
 },
 GHC.PrimopWrappers.sinhFloat#_entry() //  [F1]
         { info_tbl: [(cwkp,
                       label: GHC.PrimopWrappers.sinhFloat#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwkp: // global
           _cwko::F32 = F1;
           (_cwkn::F32) = call MO_F32_Sinh(_cwko::F32);
           F1 = _cwkn::F32;
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.28659812 UTC

[section ""data" . GHC.PrimopWrappers.coshFloat#_closure" {
     GHC.PrimopWrappers.coshFloat#_closure:
         const GHC.PrimopWrappers.coshFloat#_info;
 },
 GHC.PrimopWrappers.coshFloat#_entry() //  [F1]
         { info_tbl: [(cwky,
                       label: GHC.PrimopWrappers.coshFloat#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwky: // global
           _cwkx::F32 = F1;
           (_cwkw::F32) = call MO_F32_Cosh(_cwkx::F32);
           F1 = _cwkw::F32;
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.287418647 UTC

[section ""data" . GHC.PrimopWrappers.tanhFloat#_closure" {
     GHC.PrimopWrappers.tanhFloat#_closure:
         const GHC.PrimopWrappers.tanhFloat#_info;
 },
 GHC.PrimopWrappers.tanhFloat#_entry() //  [F1]
         { info_tbl: [(cwkH,
                       label: GHC.PrimopWrappers.tanhFloat#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwkH: // global
           _cwkG::F32 = F1;
           (_cwkF::F32) = call MO_F32_Tanh(_cwkG::F32);
           F1 = _cwkF::F32;
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.28830633 UTC

[section ""data" . GHC.PrimopWrappers.powerFloat#_closure" {
     GHC.PrimopWrappers.powerFloat#_closure:
         const GHC.PrimopWrappers.powerFloat#_info;
 },
 GHC.PrimopWrappers.powerFloat#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwkL: // global
           F2 = F32[Sp + 8];
           F1 = F32[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.powerFloat#_entry(F2,
                                                     F1,
                                                     R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.powerFloat#_entry() //  [F1, F2]
         { info_tbl: [(cwkS,
                       label: GHC.PrimopWrappers.powerFloat#_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwkS: // global
           _cwkQ::F32 = F1;
           _cwkR::F32 = F2;
           (_cwkP::F32) = call MO_F32_Pwr(_cwkQ::F32, _cwkR::F32);
           F1 = _cwkP::F32;
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.28974515 UTC

[section ""data" . GHC.PrimopWrappers.float2Double#_closure" {
     GHC.PrimopWrappers.float2Double#_closure:
         const GHC.PrimopWrappers.float2Double#_info;
 },
 GHC.PrimopWrappers.float2Double#_entry() //  [F1]
         { info_tbl: [(cwl0,
                       label: GHC.PrimopWrappers.float2Double#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwl0: // global
           D1 = %MO_FF_Conv_W32_W64(F1);
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.290537574 UTC

[section ""data" . GHC.PrimopWrappers.decodeFloat_Int#_closure" {
     GHC.PrimopWrappers.decodeFloat_Int#_closure:
         const GHC.PrimopWrappers.decodeFloat_Int#_info;
 },
 GHC.PrimopWrappers.decodeFloat_Int#_entry() //  [F1]
         { info_tbl: [(cwl7,
                       label: GHC.PrimopWrappers.decodeFloat_Int#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwl7: // global
           F1 = F1;
           call stg_decodeFloat_Int#(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.291360116 UTC

[section ""data" . GHC.PrimopWrappers.newArray#_closure" {
     GHC.PrimopWrappers.newArray#_closure:
         const GHC.PrimopWrappers.newArray#_info;
 },
 GHC.PrimopWrappers.newArray#_entry() //  [R2, R3]
         { info_tbl: [(cwle,
                       label: GHC.PrimopWrappers.newArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 13} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwle: // global
           _B3::I64 = R2;
           R2 = R3;
           R1 = _B3::I64;
           call stg_newArray#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.292209958 UTC

[section ""data" . GHC.PrimopWrappers.sameMutableArray#_closure" {
     GHC.PrimopWrappers.sameMutableArray#_closure:
         const GHC.PrimopWrappers.sameMutableArray#_info;
 },
 GHC.PrimopWrappers.sameMutableArray#_entry() //  [R2, R3]
         { info_tbl: [(cwlm,
                       label: GHC.PrimopWrappers.sameMutableArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwlm: // global
           R1 = R2 == R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.293044157 UTC

[section ""data" . GHC.PrimopWrappers.readArray#_closure" {
     GHC.PrimopWrappers.readArray#_closure:
         const GHC.PrimopWrappers.readArray#_info;
 },
 GHC.PrimopWrappers.readArray#_entry() //  [R2, R3]
         { info_tbl: [(cwlu,
                       label: GHC.PrimopWrappers.readArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwlu: // global
           R1 = P64[(R2 + 24) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.293975892 UTC

[section ""data" . GHC.PrimopWrappers.writeArray#_closure" {
     GHC.PrimopWrappers.writeArray#_closure:
         const GHC.PrimopWrappers.writeArray#_info;
 },
 GHC.PrimopWrappers.writeArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cwlB,
                       label: GHC.PrimopWrappers.writeArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 21} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwlB: // global
           _B2::P64 = R4;
           _B3::I64 = R3;
           call MO_WriteBarrier();
           P64[(R2 + 24) + (_B3::I64 << 3)] = _B2::P64;
           I64[R2] = stg_MUT_ARR_PTRS_DIRTY_info;
           I8[(R2 + 24) + ((I64[R2 + 8] << 3) + (_B3::I64 >> 7))] = 1 :: W8;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.2948568 UTC

[section ""data" . GHC.PrimopWrappers.sizeofArray#_closure" {
     GHC.PrimopWrappers.sizeofArray#_closure:
         const GHC.PrimopWrappers.sizeofArray#_info;
 },
 GHC.PrimopWrappers.sizeofArray#_entry() //  [R2]
         { info_tbl: [(cwlJ,
                       label: GHC.PrimopWrappers.sizeofArray#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwlJ: // global
           R1 = I64[R2 + 8];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.295651952 UTC

[section ""data" . GHC.PrimopWrappers.sizeofMutableArray#_closure" {
     GHC.PrimopWrappers.sizeofMutableArray#_closure:
         const GHC.PrimopWrappers.sizeofMutableArray#_info;
 },
 GHC.PrimopWrappers.sizeofMutableArray#_entry() //  [R2]
         { info_tbl: [(cwlR,
                       label: GHC.PrimopWrappers.sizeofMutableArray#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwlR: // global
           R1 = I64[R2 + 8];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.296466788 UTC

[section ""data" . GHC.PrimopWrappers.indexArray#_closure" {
     GHC.PrimopWrappers.indexArray#_closure:
         const GHC.PrimopWrappers.indexArray#_info;
 },
 GHC.PrimopWrappers.indexArray#_entry() //  [R2, R3]
         { info_tbl: [(cwlZ,
                       label: GHC.PrimopWrappers.indexArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwlZ: // global
           R1 = P64[(R2 + 24) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.297321823 UTC

[section ""data" . GHC.PrimopWrappers.unsafeFreezeArray#_closure" {
     GHC.PrimopWrappers.unsafeFreezeArray#_closure:
         const GHC.PrimopWrappers.unsafeFreezeArray#_info;
 },
 GHC.PrimopWrappers.unsafeFreezeArray#_entry() //  [R2]
         { info_tbl: [(cwm7,
                       label: GHC.PrimopWrappers.unsafeFreezeArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwm7: // global
           I64[R2] = stg_MUT_ARR_PTRS_FROZEN0_info;
           R1 = R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.298179271 UTC

[section ""data" . GHC.PrimopWrappers.unsafeThawArray#_closure" {
     GHC.PrimopWrappers.unsafeThawArray#_closure:
         const GHC.PrimopWrappers.unsafeThawArray#_info;
 },
 GHC.PrimopWrappers.unsafeThawArray#_entry() //  [R2]
         { info_tbl: [(cwme,
                       label: GHC.PrimopWrappers.unsafeThawArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwme: // global
           R1 = R2;
           call stg_unsafeThawArray#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.299093568 UTC

[section ""data" . GHC.PrimopWrappers.copyArray#_closure" {
     GHC.PrimopWrappers.copyArray#_closure:
         const GHC.PrimopWrappers.copyArray#_info;
 },
 GHC.PrimopWrappers.copyArray#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwmi: // global
           R6 = I64[Sp + 32];
           R5 = I64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 40;
           call GHC.PrimopWrappers.copyArray#_entry(R6,
                                                    R5,
                                                    R4,
                                                    R3,
                                                    R2,
                                                    R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.copyArray#_entry() //  [R2, R3, R4, R5, R6]
         { info_tbl: [(cwmm,
                       label: GHC.PrimopWrappers.copyArray#_info
                       rep:HeapRep static {
                             Fun {arity: 6
                                  fun_type: ArgGen [False, True, False, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwmm: // global
           _B3::I64 = R5;
           R5 = R6;
           _B4::P64 = R4;
           R4 = _B3::I64;
           _B5::I64 = R3;
           R3 = _B4::P64;
           _B6::P64 = R2;
           R2 = _B5::I64;
           R1 = _B6::P64;
           call stg_copyArray#(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.300225681 UTC

[section ""data" . GHC.PrimopWrappers.copyMutableArray#_closure" {
     GHC.PrimopWrappers.copyMutableArray#_closure:
         const GHC.PrimopWrappers.copyMutableArray#_info;
 },
 GHC.PrimopWrappers.copyMutableArray#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwmq: // global
           R6 = I64[Sp + 32];
           R5 = I64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 40;
           call GHC.PrimopWrappers.copyMutableArray#_entry(R6,
                                                           R5,
                                                           R4,
                                                           R3,
                                                           R2,
                                                           R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.copyMutableArray#_entry() //  [R2, R3, R4, R5,
                                                   R6]
         { info_tbl: [(cwmu,
                       label: GHC.PrimopWrappers.copyMutableArray#_info
                       rep:HeapRep static {
                             Fun {arity: 6
                                  fun_type: ArgGen [False, True, False, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwmu: // global
           _B3::I64 = R5;
           R5 = R6;
           _B4::P64 = R4;
           R4 = _B3::I64;
           _B5::I64 = R3;
           R3 = _B4::P64;
           _B6::P64 = R2;
           R2 = _B5::I64;
           R1 = _B6::P64;
           call stg_copyMutableArray#(R5,
                                      R4,
                                      R3,
                                      R2,
                                      R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.301380749 UTC

[section ""data" . GHC.PrimopWrappers.cloneArray#_closure" {
     GHC.PrimopWrappers.cloneArray#_closure:
         const GHC.PrimopWrappers.cloneArray#_info;
 },
 GHC.PrimopWrappers.cloneArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cwmB,
                       label: GHC.PrimopWrappers.cloneArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwmB: // global
           _B2::I64 = R3;
           R3 = R4;
           _B3::P64 = R2;
           R2 = _B2::I64;
           R1 = _B3::P64;
           call stg_cloneArray#(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.302213686 UTC

[section ""data" . GHC.PrimopWrappers.cloneMutableArray#_closure" {
     GHC.PrimopWrappers.cloneMutableArray#_closure:
         const GHC.PrimopWrappers.cloneMutableArray#_info;
 },
 GHC.PrimopWrappers.cloneMutableArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cwmI,
                       label: GHC.PrimopWrappers.cloneMutableArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwmI: // global
           _B3::I64 = R3;
           R3 = R4;
           _B4::P64 = R2;
           R2 = _B3::I64;
           R1 = _B4::P64;
           call stg_cloneMutableArray#(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.30307211 UTC

[section ""data" . GHC.PrimopWrappers.freezeArray#_closure" {
     GHC.PrimopWrappers.freezeArray#_closure:
         const GHC.PrimopWrappers.freezeArray#_info;
 },
 GHC.PrimopWrappers.freezeArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cwmP,
                       label: GHC.PrimopWrappers.freezeArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwmP: // global
           _B3::I64 = R3;
           R3 = R4;
           _B4::P64 = R2;
           R2 = _B3::I64;
           R1 = _B4::P64;
           call stg_freezeArray#(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.303962384 UTC

[section ""data" . GHC.PrimopWrappers.thawArray#_closure" {
     GHC.PrimopWrappers.thawArray#_closure:
         const GHC.PrimopWrappers.thawArray#_info;
 },
 GHC.PrimopWrappers.thawArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cwmW,
                       label: GHC.PrimopWrappers.thawArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwmW: // global
           _B3::I64 = R3;
           R3 = R4;
           _B4::P64 = R2;
           R2 = _B3::I64;
           R1 = _B4::P64;
           call stg_thawArray#(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.304915449 UTC

[section ""data" . GHC.PrimopWrappers.casArray#_closure" {
     GHC.PrimopWrappers.casArray#_closure:
         const GHC.PrimopWrappers.casArray#_info;
 },
 GHC.PrimopWrappers.casArray#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwn0: // global
           R5 = P64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 32;
           call GHC.PrimopWrappers.casArray#_entry(R5,
                                                   R4,
                                                   R3,
                                                   R2,
                                                   R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.casArray#_entry() //  [R2, R3, R4, R5]
         { info_tbl: [(cwn4,
                       label: GHC.PrimopWrappers.casArray#_info
                       rep:HeapRep static {
                             Fun {arity: 5 fun_type: ArgGen [False, True, False, False]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwn4: // global
           _B3::P64 = R4;
           R4 = R5;
           _B4::I64 = R3;
           R3 = _B3::P64;
           _B5::P64 = R2;
           R2 = _B4::I64;
           R1 = _B5::P64;
           call stg_casArray#(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.306041812 UTC

[section ""data" . GHC.PrimopWrappers.newSmallArray#_closure" {
     GHC.PrimopWrappers.newSmallArray#_closure:
         const GHC.PrimopWrappers.newSmallArray#_info;
 },
 GHC.PrimopWrappers.newSmallArray#_entry() //  [R2, R3]
         { info_tbl: [(cwnb,
                       label: GHC.PrimopWrappers.newSmallArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 13} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwnb: // global
           _B3::I64 = R2;
           R2 = R3;
           R1 = _B3::I64;
           call stg_newSmallArray#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.306905557 UTC

[section ""data" . GHC.PrimopWrappers.sameSmallMutableArray#_closure" {
     GHC.PrimopWrappers.sameSmallMutableArray#_closure:
         const GHC.PrimopWrappers.sameSmallMutableArray#_info;
 },
 GHC.PrimopWrappers.sameSmallMutableArray#_entry() //  [R2, R3]
         { info_tbl: [(cwnj,
                       label: GHC.PrimopWrappers.sameSmallMutableArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwnj: // global
           R1 = R2 == R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.307772505 UTC

[section ""data" . GHC.PrimopWrappers.readSmallArray#_closure" {
     GHC.PrimopWrappers.readSmallArray#_closure:
         const GHC.PrimopWrappers.readSmallArray#_info;
 },
 GHC.PrimopWrappers.readSmallArray#_entry() //  [R2, R3]
         { info_tbl: [(cwnr,
                       label: GHC.PrimopWrappers.readSmallArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwnr: // global
           R1 = P64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.308671183 UTC

[section ""data" . GHC.PrimopWrappers.writeSmallArray#_closure" {
     GHC.PrimopWrappers.writeSmallArray#_closure:
         const GHC.PrimopWrappers.writeSmallArray#_info;
 },
 GHC.PrimopWrappers.writeSmallArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cwny,
                       label: GHC.PrimopWrappers.writeSmallArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 21} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwny: // global
           P64[(R2 + 16) + (R3 << 3)] = R4;
           I64[R2] = stg_SMALL_MUT_ARR_PTRS_DIRTY_info;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.310388669 UTC

[section ""data" . GHC.PrimopWrappers.sizeofSmallArray#_closure" {
     GHC.PrimopWrappers.sizeofSmallArray#_closure:
         const GHC.PrimopWrappers.sizeofSmallArray#_info;
 },
 GHC.PrimopWrappers.sizeofSmallArray#_entry() //  [R2]
         { info_tbl: [(cwnG,
                       label: GHC.PrimopWrappers.sizeofSmallArray#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwnG: // global
           R1 = I64[R2 + 8];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.311154177 UTC

[section ""data" . GHC.PrimopWrappers.sizeofSmallMutableArray#_closure" {
     GHC.PrimopWrappers.sizeofSmallMutableArray#_closure:
         const GHC.PrimopWrappers.sizeofSmallMutableArray#_info;
 },
 GHC.PrimopWrappers.sizeofSmallMutableArray#_entry() //  [R2]
         { info_tbl: [(cwnO,
                       label: GHC.PrimopWrappers.sizeofSmallMutableArray#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwnO: // global
           R1 = I64[R2 + 8];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.311993916 UTC

[section ""data" . GHC.PrimopWrappers.indexSmallArray#_closure" {
     GHC.PrimopWrappers.indexSmallArray#_closure:
         const GHC.PrimopWrappers.indexSmallArray#_info;
 },
 GHC.PrimopWrappers.indexSmallArray#_entry() //  [R2, R3]
         { info_tbl: [(cwnW,
                       label: GHC.PrimopWrappers.indexSmallArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwnW: // global
           R1 = P64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.312810128 UTC

[section ""data" . GHC.PrimopWrappers.unsafeFreezeSmallArray#_closure" {
     GHC.PrimopWrappers.unsafeFreezeSmallArray#_closure:
         const GHC.PrimopWrappers.unsafeFreezeSmallArray#_info;
 },
 GHC.PrimopWrappers.unsafeFreezeSmallArray#_entry() //  [R2]
         { info_tbl: [(cwo4,
                       label: GHC.PrimopWrappers.unsafeFreezeSmallArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwo4: // global
           I64[R2] = stg_SMALL_MUT_ARR_PTRS_FROZEN0_info;
           R1 = R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.313686387 UTC

[section ""data" . GHC.PrimopWrappers.unsafeThawSmallArray#_closure" {
     GHC.PrimopWrappers.unsafeThawSmallArray#_closure:
         const GHC.PrimopWrappers.unsafeThawSmallArray#_info;
 },
 GHC.PrimopWrappers.unsafeThawSmallArray#_entry() //  [R2]
         { info_tbl: [(cwob,
                       label: GHC.PrimopWrappers.unsafeThawSmallArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwob: // global
           R1 = R2;
           call stg_unsafeThawSmallArray#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.314554424 UTC

[section ""data" . GHC.PrimopWrappers.copySmallArray#_closure" {
     GHC.PrimopWrappers.copySmallArray#_closure:
         const GHC.PrimopWrappers.copySmallArray#_info;
 },
 GHC.PrimopWrappers.copySmallArray#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwof: // global
           R6 = I64[Sp + 32];
           R5 = I64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 40;
           call GHC.PrimopWrappers.copySmallArray#_entry(R6,
                                                         R5,
                                                         R4,
                                                         R3,
                                                         R2,
                                                         R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.copySmallArray#_entry() //  [R2, R3, R4, R5, R6]
         { info_tbl: [(cwoj,
                       label: GHC.PrimopWrappers.copySmallArray#_info
                       rep:HeapRep static {
                             Fun {arity: 6
                                  fun_type: ArgGen [False, True, False, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwoj: // global
           _B3::I64 = R5;
           R5 = R6;
           _B4::P64 = R4;
           R4 = _B3::I64;
           _B5::I64 = R3;
           R3 = _B4::P64;
           _B6::P64 = R2;
           R2 = _B5::I64;
           R1 = _B6::P64;
           call stg_copySmallArray#(R5,
                                    R4,
                                    R3,
                                    R2,
                                    R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.315691877 UTC

[section ""data" . GHC.PrimopWrappers.copySmallMutableArray#_closure" {
     GHC.PrimopWrappers.copySmallMutableArray#_closure:
         const GHC.PrimopWrappers.copySmallMutableArray#_info;
 },
 GHC.PrimopWrappers.copySmallMutableArray#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwon: // global
           R6 = I64[Sp + 32];
           R5 = I64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 40;
           call GHC.PrimopWrappers.copySmallMutableArray#_entry(R6,
                                                                R5,
                                                                R4,
                                                                R3,
                                                                R2,
                                                                R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.copySmallMutableArray#_entry() //  [R2, R3, R4,
                                                        R5, R6]
         { info_tbl: [(cwor,
                       label: GHC.PrimopWrappers.copySmallMutableArray#_info
                       rep:HeapRep static {
                             Fun {arity: 6
                                  fun_type: ArgGen [False, True, False, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwor: // global
           _B3::I64 = R5;
           R5 = R6;
           _B4::P64 = R4;
           R4 = _B3::I64;
           _B5::I64 = R3;
           R3 = _B4::P64;
           _B6::P64 = R2;
           R2 = _B5::I64;
           R1 = _B6::P64;
           call stg_copySmallMutableArray#(R5,
                                           R4,
                                           R3,
                                           R2,
                                           R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.316807868 UTC

[section ""data" . GHC.PrimopWrappers.cloneSmallArray#_closure" {
     GHC.PrimopWrappers.cloneSmallArray#_closure:
         const GHC.PrimopWrappers.cloneSmallArray#_info;
 },
 GHC.PrimopWrappers.cloneSmallArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cwoy,
                       label: GHC.PrimopWrappers.cloneSmallArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwoy: // global
           _B2::I64 = R3;
           R3 = R4;
           _B3::P64 = R2;
           R2 = _B2::I64;
           R1 = _B3::P64;
           call stg_cloneSmallArray#(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.317740063 UTC

[section ""data" . GHC.PrimopWrappers.cloneSmallMutableArray#_closure" {
     GHC.PrimopWrappers.cloneSmallMutableArray#_closure:
         const GHC.PrimopWrappers.cloneSmallMutableArray#_info;
 },
 GHC.PrimopWrappers.cloneSmallMutableArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cwoF,
                       label: GHC.PrimopWrappers.cloneSmallMutableArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwoF: // global
           _B3::I64 = R3;
           R3 = R4;
           _B4::P64 = R2;
           R2 = _B3::I64;
           R1 = _B4::P64;
           call stg_cloneSmallMutableArray#(R3,
                                            R2,
                                            R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.318628749 UTC

[section ""data" . GHC.PrimopWrappers.freezeSmallArray#_closure" {
     GHC.PrimopWrappers.freezeSmallArray#_closure:
         const GHC.PrimopWrappers.freezeSmallArray#_info;
 },
 GHC.PrimopWrappers.freezeSmallArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cwoM,
                       label: GHC.PrimopWrappers.freezeSmallArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwoM: // global
           _B3::I64 = R3;
           R3 = R4;
           _B4::P64 = R2;
           R2 = _B3::I64;
           R1 = _B4::P64;
           call stg_freezeSmallArray#(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.319460693 UTC

[section ""data" . GHC.PrimopWrappers.thawSmallArray#_closure" {
     GHC.PrimopWrappers.thawSmallArray#_closure:
         const GHC.PrimopWrappers.thawSmallArray#_info;
 },
 GHC.PrimopWrappers.thawSmallArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cwoT,
                       label: GHC.PrimopWrappers.thawSmallArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwoT: // global
           _B3::I64 = R3;
           R3 = R4;
           _B4::P64 = R2;
           R2 = _B3::I64;
           R1 = _B4::P64;
           call stg_thawSmallArray#(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.320375235 UTC

[section ""data" . GHC.PrimopWrappers.casSmallArray#_closure" {
     GHC.PrimopWrappers.casSmallArray#_closure:
         const GHC.PrimopWrappers.casSmallArray#_info;
 },
 GHC.PrimopWrappers.casSmallArray#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwoX: // global
           R5 = P64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 32;
           call GHC.PrimopWrappers.casSmallArray#_entry(R5,
                                                        R4,
                                                        R3,
                                                        R2,
                                                        R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.casSmallArray#_entry() //  [R2, R3, R4, R5]
         { info_tbl: [(cwp1,
                       label: GHC.PrimopWrappers.casSmallArray#_info
                       rep:HeapRep static {
                             Fun {arity: 5 fun_type: ArgGen [False, True, False, False]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwp1: // global
           _B3::P64 = R4;
           R4 = R5;
           _B4::I64 = R3;
           R3 = _B3::P64;
           _B5::P64 = R2;
           R2 = _B4::I64;
           R1 = _B5::P64;
           call stg_casSmallArray#(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.321719741 UTC

[section ""data" . GHC.PrimopWrappers.newByteArray#_closure" {
     GHC.PrimopWrappers.newByteArray#_closure:
         const GHC.PrimopWrappers.newByteArray#_info;
 },
 GHC.PrimopWrappers.newByteArray#_entry() //  [R2]
         { info_tbl: [(cwp8,
                       label: GHC.PrimopWrappers.newByteArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwp8: // global
           R1 = R2;
           call stg_newByteArray#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.322477228 UTC

[section ""data" . GHC.PrimopWrappers.newPinnedByteArray#_closure" {
     GHC.PrimopWrappers.newPinnedByteArray#_closure:
         const GHC.PrimopWrappers.newPinnedByteArray#_info;
 },
 GHC.PrimopWrappers.newPinnedByteArray#_entry() //  [R2]
         { info_tbl: [(cwpf,
                       label: GHC.PrimopWrappers.newPinnedByteArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwpf: // global
           R1 = R2;
           call stg_newPinnedByteArray#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.32327415 UTC

[section ""data" . GHC.PrimopWrappers.newAlignedPinnedByteArray#_closure" {
     GHC.PrimopWrappers.newAlignedPinnedByteArray#_closure:
         const GHC.PrimopWrappers.newAlignedPinnedByteArray#_info;
 },
 GHC.PrimopWrappers.newAlignedPinnedByteArray#_entry() //  [R2, R3]
         { info_tbl: [(cwpm,
                       label: GHC.PrimopWrappers.newAlignedPinnedByteArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwpm: // global
           _B3::I64 = R2;
           R2 = R3;
           R1 = _B3::I64;
           call stg_newAlignedPinnedByteArray#(R2,
                                               R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.324073527 UTC

[section ""data" . GHC.PrimopWrappers.isMutableByteArrayPinned#_closure" {
     GHC.PrimopWrappers.isMutableByteArrayPinned#_closure:
         const GHC.PrimopWrappers.isMutableByteArrayPinned#_info;
 },
 GHC.PrimopWrappers.isMutableByteArrayPinned#_entry() //  [R2]
         { info_tbl: [(cwpt,
                       label: GHC.PrimopWrappers.isMutableByteArrayPinned#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwpt: // global
           R1 = R2;
           call stg_isMutableByteArrayPinned#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.324854874 UTC

[section ""data" . GHC.PrimopWrappers.isByteArrayPinned#_closure" {
     GHC.PrimopWrappers.isByteArrayPinned#_closure:
         const GHC.PrimopWrappers.isByteArrayPinned#_info;
 },
 GHC.PrimopWrappers.isByteArrayPinned#_entry() //  [R2]
         { info_tbl: [(cwpA,
                       label: GHC.PrimopWrappers.isByteArrayPinned#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwpA: // global
           R1 = R2;
           call stg_isByteArrayPinned#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.325738416 UTC

[section ""data" . GHC.PrimopWrappers.byteArrayContents#_closure" {
     GHC.PrimopWrappers.byteArrayContents#_closure:
         const GHC.PrimopWrappers.byteArrayContents#_info;
 },
 GHC.PrimopWrappers.byteArrayContents#_entry() //  [R2]
         { info_tbl: [(cwpI,
                       label: GHC.PrimopWrappers.byteArrayContents#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwpI: // global
           R1 = R2 + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.326589908 UTC

[section ""data" . GHC.PrimopWrappers.sameMutableByteArray#_closure" {
     GHC.PrimopWrappers.sameMutableByteArray#_closure:
         const GHC.PrimopWrappers.sameMutableByteArray#_info;
 },
 GHC.PrimopWrappers.sameMutableByteArray#_entry() //  [R2, R3]
         { info_tbl: [(cwpQ,
                       label: GHC.PrimopWrappers.sameMutableByteArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwpQ: // global
           R1 = R2 == R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.327410329 UTC

[section ""data" . GHC.PrimopWrappers.shrinkMutableByteArray#_closure" {
     GHC.PrimopWrappers.shrinkMutableByteArray#_closure:
         const GHC.PrimopWrappers.shrinkMutableByteArray#_info;
 },
 GHC.PrimopWrappers.shrinkMutableByteArray#_entry() //  [R2, R3]
         { info_tbl: [(cwpX,
                       label: GHC.PrimopWrappers.shrinkMutableByteArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwpX: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_shrinkMutableByteArray#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.328213495 UTC

[section ""data" . GHC.PrimopWrappers.resizeMutableByteArray#_closure" {
     GHC.PrimopWrappers.resizeMutableByteArray#_closure:
         const GHC.PrimopWrappers.resizeMutableByteArray#_info;
 },
 GHC.PrimopWrappers.resizeMutableByteArray#_entry() //  [R2, R3]
         { info_tbl: [(cwq4,
                       label: GHC.PrimopWrappers.resizeMutableByteArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwq4: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_resizeMutableByteArray#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.329055196 UTC

[section ""data" . GHC.PrimopWrappers.unsafeFreezeByteArray#_closure" {
     GHC.PrimopWrappers.unsafeFreezeByteArray#_closure:
         const GHC.PrimopWrappers.unsafeFreezeByteArray#_info;
 },
 GHC.PrimopWrappers.unsafeFreezeByteArray#_entry() //  [R2]
         { info_tbl: [(cwqc,
                       label: GHC.PrimopWrappers.unsafeFreezeByteArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwqc: // global
           R1 = R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.329911887 UTC

[section ""data" . GHC.PrimopWrappers.sizeofByteArray#_closure" {
     GHC.PrimopWrappers.sizeofByteArray#_closure:
         const GHC.PrimopWrappers.sizeofByteArray#_info;
 },
 GHC.PrimopWrappers.sizeofByteArray#_entry() //  [R2]
         { info_tbl: [(cwqk,
                       label: GHC.PrimopWrappers.sizeofByteArray#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwqk: // global
           R1 = I64[R2 + 8];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.330725036 UTC

[section ""data" . GHC.PrimopWrappers.sizeofMutableByteArray#_closure" {
     GHC.PrimopWrappers.sizeofMutableByteArray#_closure:
         const GHC.PrimopWrappers.sizeofMutableByteArray#_info;
 },
 GHC.PrimopWrappers.sizeofMutableByteArray#_entry() //  [R2]
         { info_tbl: [(cwqs,
                       label: GHC.PrimopWrappers.sizeofMutableByteArray#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwqs: // global
           R1 = I64[R2 + 8];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.331534473 UTC

[section ""data" . GHC.PrimopWrappers.getSizeofMutableByteArray#_closure" {
     GHC.PrimopWrappers.getSizeofMutableByteArray#_closure:
         const GHC.PrimopWrappers.getSizeofMutableByteArray#_info;
 },
 GHC.PrimopWrappers.getSizeofMutableByteArray#_entry() //  [R2]
         { info_tbl: [(cwqA,
                       label: GHC.PrimopWrappers.getSizeofMutableByteArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwqA: // global
           R1 = I64[R2 + 8];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.332341152 UTC

[section ""data" . GHC.PrimopWrappers.indexCharArray#_closure" {
     GHC.PrimopWrappers.indexCharArray#_closure:
         const GHC.PrimopWrappers.indexCharArray#_info;
 },
 GHC.PrimopWrappers.indexCharArray#_entry() //  [R2, R3]
         { info_tbl: [(cwqI,
                       label: GHC.PrimopWrappers.indexCharArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwqI: // global
           R1 = %MO_UU_Conv_W8_W64(I8[(R2 + 16) + R3]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.333168332 UTC

[section ""data" . GHC.PrimopWrappers.indexWideCharArray#_closure" {
     GHC.PrimopWrappers.indexWideCharArray#_closure:
         const GHC.PrimopWrappers.indexWideCharArray#_info;
 },
 GHC.PrimopWrappers.indexWideCharArray#_entry() //  [R2, R3]
         { info_tbl: [(cwqQ,
                       label: GHC.PrimopWrappers.indexWideCharArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwqQ: // global
           R1 = %MO_UU_Conv_W32_W64(I32[(R2 + 16) + (R3 << 2)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.334026822 UTC

[section ""data" . GHC.PrimopWrappers.indexIntArray#_closure" {
     GHC.PrimopWrappers.indexIntArray#_closure:
         const GHC.PrimopWrappers.indexIntArray#_info;
 },
 GHC.PrimopWrappers.indexIntArray#_entry() //  [R2, R3]
         { info_tbl: [(cwqY,
                       label: GHC.PrimopWrappers.indexIntArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwqY: // global
           R1 = I64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.33484798 UTC

[section ""data" . GHC.PrimopWrappers.indexWordArray#_closure" {
     GHC.PrimopWrappers.indexWordArray#_closure:
         const GHC.PrimopWrappers.indexWordArray#_info;
 },
 GHC.PrimopWrappers.indexWordArray#_entry() //  [R2, R3]
         { info_tbl: [(cwr6,
                       label: GHC.PrimopWrappers.indexWordArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwr6: // global
           R1 = I64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.335703951 UTC

[section ""data" . GHC.PrimopWrappers.indexAddrArray#_closure" {
     GHC.PrimopWrappers.indexAddrArray#_closure:
         const GHC.PrimopWrappers.indexAddrArray#_info;
 },
 GHC.PrimopWrappers.indexAddrArray#_entry() //  [R2, R3]
         { info_tbl: [(cwre,
                       label: GHC.PrimopWrappers.indexAddrArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwre: // global
           R1 = I64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.336535152 UTC

[section ""data" . GHC.PrimopWrappers.indexFloatArray#_closure" {
     GHC.PrimopWrappers.indexFloatArray#_closure:
         const GHC.PrimopWrappers.indexFloatArray#_info;
 },
 GHC.PrimopWrappers.indexFloatArray#_entry() //  [R2, R3]
         { info_tbl: [(cwrm,
                       label: GHC.PrimopWrappers.indexFloatArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwrm: // global
           F1 = F32[(R2 + 16) + (R3 << 2)];
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.33742967 UTC

[section ""data" . GHC.PrimopWrappers.indexDoubleArray#_closure" {
     GHC.PrimopWrappers.indexDoubleArray#_closure:
         const GHC.PrimopWrappers.indexDoubleArray#_info;
 },
 GHC.PrimopWrappers.indexDoubleArray#_entry() //  [R2, R3]
         { info_tbl: [(cwru,
                       label: GHC.PrimopWrappers.indexDoubleArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwru: // global
           D1 = F64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.339046547 UTC

[section ""data" . GHC.PrimopWrappers.indexStablePtrArray#_closure" {
     GHC.PrimopWrappers.indexStablePtrArray#_closure:
         const GHC.PrimopWrappers.indexStablePtrArray#_info;
 },
 GHC.PrimopWrappers.indexStablePtrArray#_entry() //  [R2, R3]
         { info_tbl: [(cwrC,
                       label: GHC.PrimopWrappers.indexStablePtrArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwrC: // global
           R1 = I64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.339907938 UTC

[section ""data" . GHC.PrimopWrappers.indexInt8Array#_closure" {
     GHC.PrimopWrappers.indexInt8Array#_closure:
         const GHC.PrimopWrappers.indexInt8Array#_info;
 },
 GHC.PrimopWrappers.indexInt8Array#_entry() //  [R2, R3]
         { info_tbl: [(cwrK,
                       label: GHC.PrimopWrappers.indexInt8Array#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwrK: // global
           R1 = %MO_SS_Conv_W8_W64(I8[(R2 + 16) + R3]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.34075579 UTC

[section ""data" . GHC.PrimopWrappers.indexInt16Array#_closure" {
     GHC.PrimopWrappers.indexInt16Array#_closure:
         const GHC.PrimopWrappers.indexInt16Array#_info;
 },
 GHC.PrimopWrappers.indexInt16Array#_entry() //  [R2, R3]
         { info_tbl: [(cwrS,
                       label: GHC.PrimopWrappers.indexInt16Array#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwrS: // global
           R1 = %MO_SS_Conv_W16_W64(I16[(R2 + 16) + (R3 << 1)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.341618421 UTC

[section ""data" . GHC.PrimopWrappers.indexInt32Array#_closure" {
     GHC.PrimopWrappers.indexInt32Array#_closure:
         const GHC.PrimopWrappers.indexInt32Array#_info;
 },
 GHC.PrimopWrappers.indexInt32Array#_entry() //  [R2, R3]
         { info_tbl: [(cws0,
                       label: GHC.PrimopWrappers.indexInt32Array#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cws0: // global
           R1 = %MO_SS_Conv_W32_W64(I32[(R2 + 16) + (R3 << 2)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.342482869 UTC

[section ""data" . GHC.PrimopWrappers.indexInt64Array#_closure" {
     GHC.PrimopWrappers.indexInt64Array#_closure:
         const GHC.PrimopWrappers.indexInt64Array#_info;
 },
 GHC.PrimopWrappers.indexInt64Array#_entry() //  [R2, R3]
         { info_tbl: [(cws8,
                       label: GHC.PrimopWrappers.indexInt64Array#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cws8: // global
           R1 = I64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.34331515 UTC

[section ""data" . GHC.PrimopWrappers.indexWord8Array#_closure" {
     GHC.PrimopWrappers.indexWord8Array#_closure:
         const GHC.PrimopWrappers.indexWord8Array#_info;
 },
 GHC.PrimopWrappers.indexWord8Array#_entry() //  [R2, R3]
         { info_tbl: [(cwsg,
                       label: GHC.PrimopWrappers.indexWord8Array#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwsg: // global
           R1 = %MO_UU_Conv_W8_W64(I8[(R2 + 16) + R3]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.344156111 UTC

[section ""data" . GHC.PrimopWrappers.indexWord16Array#_closure" {
     GHC.PrimopWrappers.indexWord16Array#_closure:
         const GHC.PrimopWrappers.indexWord16Array#_info;
 },
 GHC.PrimopWrappers.indexWord16Array#_entry() //  [R2, R3]
         { info_tbl: [(cwso,
                       label: GHC.PrimopWrappers.indexWord16Array#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwso: // global
           R1 = %MO_UU_Conv_W16_W64(I16[(R2 + 16) + (R3 << 1)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.344994022 UTC

[section ""data" . GHC.PrimopWrappers.indexWord32Array#_closure" {
     GHC.PrimopWrappers.indexWord32Array#_closure:
         const GHC.PrimopWrappers.indexWord32Array#_info;
 },
 GHC.PrimopWrappers.indexWord32Array#_entry() //  [R2, R3]
         { info_tbl: [(cwsw,
                       label: GHC.PrimopWrappers.indexWord32Array#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwsw: // global
           R1 = %MO_UU_Conv_W32_W64(I32[(R2 + 16) + (R3 << 2)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.345835499 UTC

[section ""data" . GHC.PrimopWrappers.indexWord64Array#_closure" {
     GHC.PrimopWrappers.indexWord64Array#_closure:
         const GHC.PrimopWrappers.indexWord64Array#_info;
 },
 GHC.PrimopWrappers.indexWord64Array#_entry() //  [R2, R3]
         { info_tbl: [(cwsE,
                       label: GHC.PrimopWrappers.indexWord64Array#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwsE: // global
           R1 = I64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.346689475 UTC

[section ""data" . GHC.PrimopWrappers.readCharArray#_closure" {
     GHC.PrimopWrappers.readCharArray#_closure:
         const GHC.PrimopWrappers.readCharArray#_info;
 },
 GHC.PrimopWrappers.readCharArray#_entry() //  [R2, R3]
         { info_tbl: [(cwsM,
                       label: GHC.PrimopWrappers.readCharArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwsM: // global
           R1 = %MO_UU_Conv_W8_W64(I8[(R2 + 16) + R3]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.347513058 UTC

[section ""data" . GHC.PrimopWrappers.readWideCharArray#_closure" {
     GHC.PrimopWrappers.readWideCharArray#_closure:
         const GHC.PrimopWrappers.readWideCharArray#_info;
 },
 GHC.PrimopWrappers.readWideCharArray#_entry() //  [R2, R3]
         { info_tbl: [(cwsU,
                       label: GHC.PrimopWrappers.readWideCharArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwsU: // global
           R1 = %MO_UU_Conv_W32_W64(I32[(R2 + 16) + (R3 << 2)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.348387764 UTC

[section ""data" . GHC.PrimopWrappers.readIntArray#_closure" {
     GHC.PrimopWrappers.readIntArray#_closure:
         const GHC.PrimopWrappers.readIntArray#_info;
 },
 GHC.PrimopWrappers.readIntArray#_entry() //  [R2, R3]
         { info_tbl: [(cwt2,
                       label: GHC.PrimopWrappers.readIntArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwt2: // global
           R1 = I64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.349203286 UTC

[section ""data" . GHC.PrimopWrappers.readWordArray#_closure" {
     GHC.PrimopWrappers.readWordArray#_closure:
         const GHC.PrimopWrappers.readWordArray#_info;
 },
 GHC.PrimopWrappers.readWordArray#_entry() //  [R2, R3]
         { info_tbl: [(cwta,
                       label: GHC.PrimopWrappers.readWordArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwta: // global
           R1 = I64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.350080001 UTC

[section ""data" . GHC.PrimopWrappers.readAddrArray#_closure" {
     GHC.PrimopWrappers.readAddrArray#_closure:
         const GHC.PrimopWrappers.readAddrArray#_info;
 },
 GHC.PrimopWrappers.readAddrArray#_entry() //  [R2, R3]
         { info_tbl: [(cwti,
                       label: GHC.PrimopWrappers.readAddrArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwti: // global
           R1 = I64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.35090144 UTC

[section ""data" . GHC.PrimopWrappers.readFloatArray#_closure" {
     GHC.PrimopWrappers.readFloatArray#_closure:
         const GHC.PrimopWrappers.readFloatArray#_info;
 },
 GHC.PrimopWrappers.readFloatArray#_entry() //  [R2, R3]
         { info_tbl: [(cwtq,
                       label: GHC.PrimopWrappers.readFloatArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwtq: // global
           F1 = F32[(R2 + 16) + (R3 << 2)];
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.351718899 UTC

[section ""data" . GHC.PrimopWrappers.readDoubleArray#_closure" {
     GHC.PrimopWrappers.readDoubleArray#_closure:
         const GHC.PrimopWrappers.readDoubleArray#_info;
 },
 GHC.PrimopWrappers.readDoubleArray#_entry() //  [R2, R3]
         { info_tbl: [(cwty,
                       label: GHC.PrimopWrappers.readDoubleArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwty: // global
           D1 = F64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.352580732 UTC

[section ""data" . GHC.PrimopWrappers.readStablePtrArray#_closure" {
     GHC.PrimopWrappers.readStablePtrArray#_closure:
         const GHC.PrimopWrappers.readStablePtrArray#_info;
 },
 GHC.PrimopWrappers.readStablePtrArray#_entry() //  [R2, R3]
         { info_tbl: [(cwtG,
                       label: GHC.PrimopWrappers.readStablePtrArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwtG: // global
           R1 = I64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.353477758 UTC

[section ""data" . GHC.PrimopWrappers.readInt8Array#_closure" {
     GHC.PrimopWrappers.readInt8Array#_closure:
         const GHC.PrimopWrappers.readInt8Array#_info;
 },
 GHC.PrimopWrappers.readInt8Array#_entry() //  [R2, R3]
         { info_tbl: [(cwtO,
                       label: GHC.PrimopWrappers.readInt8Array#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwtO: // global
           R1 = %MO_SS_Conv_W8_W64(I8[(R2 + 16) + R3]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.354347743 UTC

[section ""data" . GHC.PrimopWrappers.readInt16Array#_closure" {
     GHC.PrimopWrappers.readInt16Array#_closure:
         const GHC.PrimopWrappers.readInt16Array#_info;
 },
 GHC.PrimopWrappers.readInt16Array#_entry() //  [R2, R3]
         { info_tbl: [(cwtW,
                       label: GHC.PrimopWrappers.readInt16Array#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwtW: // global
           R1 = %MO_SS_Conv_W16_W64(I16[(R2 + 16) + (R3 << 1)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.355206864 UTC

[section ""data" . GHC.PrimopWrappers.readInt32Array#_closure" {
     GHC.PrimopWrappers.readInt32Array#_closure:
         const GHC.PrimopWrappers.readInt32Array#_info;
 },
 GHC.PrimopWrappers.readInt32Array#_entry() //  [R2, R3]
         { info_tbl: [(cwu4,
                       label: GHC.PrimopWrappers.readInt32Array#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwu4: // global
           R1 = %MO_SS_Conv_W32_W64(I32[(R2 + 16) + (R3 << 2)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.356017813 UTC

[section ""data" . GHC.PrimopWrappers.readInt64Array#_closure" {
     GHC.PrimopWrappers.readInt64Array#_closure:
         const GHC.PrimopWrappers.readInt64Array#_info;
 },
 GHC.PrimopWrappers.readInt64Array#_entry() //  [R2, R3]
         { info_tbl: [(cwuc,
                       label: GHC.PrimopWrappers.readInt64Array#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwuc: // global
           R1 = I64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.356888716 UTC

[section ""data" . GHC.PrimopWrappers.readWord8Array#_closure" {
     GHC.PrimopWrappers.readWord8Array#_closure:
         const GHC.PrimopWrappers.readWord8Array#_info;
 },
 GHC.PrimopWrappers.readWord8Array#_entry() //  [R2, R3]
         { info_tbl: [(cwuk,
                       label: GHC.PrimopWrappers.readWord8Array#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwuk: // global
           R1 = %MO_UU_Conv_W8_W64(I8[(R2 + 16) + R3]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.3577564 UTC

[section ""data" . GHC.PrimopWrappers.readWord16Array#_closure" {
     GHC.PrimopWrappers.readWord16Array#_closure:
         const GHC.PrimopWrappers.readWord16Array#_info;
 },
 GHC.PrimopWrappers.readWord16Array#_entry() //  [R2, R3]
         { info_tbl: [(cwus,
                       label: GHC.PrimopWrappers.readWord16Array#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwus: // global
           R1 = %MO_UU_Conv_W16_W64(I16[(R2 + 16) + (R3 << 1)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.358580166 UTC

[section ""data" . GHC.PrimopWrappers.readWord32Array#_closure" {
     GHC.PrimopWrappers.readWord32Array#_closure:
         const GHC.PrimopWrappers.readWord32Array#_info;
 },
 GHC.PrimopWrappers.readWord32Array#_entry() //  [R2, R3]
         { info_tbl: [(cwuA,
                       label: GHC.PrimopWrappers.readWord32Array#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwuA: // global
           R1 = %MO_UU_Conv_W32_W64(I32[(R2 + 16) + (R3 << 2)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.35943792 UTC

[section ""data" . GHC.PrimopWrappers.readWord64Array#_closure" {
     GHC.PrimopWrappers.readWord64Array#_closure:
         const GHC.PrimopWrappers.readWord64Array#_info;
 },
 GHC.PrimopWrappers.readWord64Array#_entry() //  [R2, R3]
         { info_tbl: [(cwuI,
                       label: GHC.PrimopWrappers.readWord64Array#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwuI: // global
           R1 = I64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.360280079 UTC

[section ""data" . GHC.PrimopWrappers.writeCharArray#_closure" {
     GHC.PrimopWrappers.writeCharArray#_closure:
         const GHC.PrimopWrappers.writeCharArray#_info;
 },
 GHC.PrimopWrappers.writeCharArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cwuP,
                       label: GHC.PrimopWrappers.writeCharArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwuP: // global
           I8[(R2 + 16) + R3] = %MO_UU_Conv_W64_W8(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.361122284 UTC

[section ""data" . GHC.PrimopWrappers.writeWideCharArray#_closure" {
     GHC.PrimopWrappers.writeWideCharArray#_closure:
         const GHC.PrimopWrappers.writeWideCharArray#_info;
 },
 GHC.PrimopWrappers.writeWideCharArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cwuW,
                       label: GHC.PrimopWrappers.writeWideCharArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwuW: // global
           I32[(R2 + 16) + (R3 << 2)] = %MO_UU_Conv_W64_W32(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.361987822 UTC

[section ""data" . GHC.PrimopWrappers.writeIntArray#_closure" {
     GHC.PrimopWrappers.writeIntArray#_closure:
         const GHC.PrimopWrappers.writeIntArray#_info;
 },
 GHC.PrimopWrappers.writeIntArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cwv3,
                       label: GHC.PrimopWrappers.writeIntArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwv3: // global
           I64[(R2 + 16) + (R3 << 3)] = R4;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.362970853 UTC

[section ""data" . GHC.PrimopWrappers.writeWordArray#_closure" {
     GHC.PrimopWrappers.writeWordArray#_closure:
         const GHC.PrimopWrappers.writeWordArray#_info;
 },
 GHC.PrimopWrappers.writeWordArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cwva,
                       label: GHC.PrimopWrappers.writeWordArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwva: // global
           I64[(R2 + 16) + (R3 << 3)] = R4;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.36385678 UTC

[section ""data" . GHC.PrimopWrappers.writeAddrArray#_closure" {
     GHC.PrimopWrappers.writeAddrArray#_closure:
         const GHC.PrimopWrappers.writeAddrArray#_info;
 },
 GHC.PrimopWrappers.writeAddrArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cwvh,
                       label: GHC.PrimopWrappers.writeAddrArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwvh: // global
           I64[(R2 + 16) + (R3 << 3)] = R4;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.364734305 UTC

[section ""data" . GHC.PrimopWrappers.writeFloatArray#_closure" {
     GHC.PrimopWrappers.writeFloatArray#_closure:
         const GHC.PrimopWrappers.writeFloatArray#_info;
 },
 GHC.PrimopWrappers.writeFloatArray#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwvl: // global
           F1 = F32[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 24;
           call GHC.PrimopWrappers.writeFloatArray#_entry(F1,
                                                          R3,
                                                          R2,
                                                          R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.writeFloatArray#_entry() //  [R2, R3, F1]
         { info_tbl: [(cwvp,
                       label: GHC.PrimopWrappers.writeFloatArray#_info
                       rep:HeapRep static {
                             Fun {arity: 4 fun_type: ArgGen [False, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwvp: // global
           F32[(R2 + 16) + (R3 << 2)] = F1;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.365824357 UTC

[section ""data" . GHC.PrimopWrappers.writeDoubleArray#_closure" {
     GHC.PrimopWrappers.writeDoubleArray#_closure:
         const GHC.PrimopWrappers.writeDoubleArray#_info;
 },
 GHC.PrimopWrappers.writeDoubleArray#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwvt: // global
           D1 = F64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 24;
           call GHC.PrimopWrappers.writeDoubleArray#_entry(D1,
                                                           R3,
                                                           R2,
                                                           R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.writeDoubleArray#_entry() //  [R2, R3, D1]
         { info_tbl: [(cwvx,
                       label: GHC.PrimopWrappers.writeDoubleArray#_info
                       rep:HeapRep static {
                             Fun {arity: 4 fun_type: ArgGen [False, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwvx: // global
           F64[(R2 + 16) + (R3 << 3)] = D1;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.366874708 UTC

[section ""data" . GHC.PrimopWrappers.writeStablePtrArray#_closure" {
     GHC.PrimopWrappers.writeStablePtrArray#_closure:
         const GHC.PrimopWrappers.writeStablePtrArray#_info;
 },
 GHC.PrimopWrappers.writeStablePtrArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cwvE,
                       label: GHC.PrimopWrappers.writeStablePtrArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwvE: // global
           I64[(R2 + 16) + (R3 << 3)] = R4;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.368487495 UTC

[section ""data" . GHC.PrimopWrappers.writeInt8Array#_closure" {
     GHC.PrimopWrappers.writeInt8Array#_closure:
         const GHC.PrimopWrappers.writeInt8Array#_info;
 },
 GHC.PrimopWrappers.writeInt8Array#_entry() //  [R2, R3, R4]
         { info_tbl: [(cwvL,
                       label: GHC.PrimopWrappers.writeInt8Array#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwvL: // global
           I8[(R2 + 16) + R3] = %MO_UU_Conv_W64_W8(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.369394123 UTC

[section ""data" . GHC.PrimopWrappers.writeInt16Array#_closure" {
     GHC.PrimopWrappers.writeInt16Array#_closure:
         const GHC.PrimopWrappers.writeInt16Array#_info;
 },
 GHC.PrimopWrappers.writeInt16Array#_entry() //  [R2, R3, R4]
         { info_tbl: [(cwvS,
                       label: GHC.PrimopWrappers.writeInt16Array#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwvS: // global
           I16[(R2 + 16) + (R3 << 1)] = %MO_UU_Conv_W64_W16(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.370263025 UTC

[section ""data" . GHC.PrimopWrappers.writeInt32Array#_closure" {
     GHC.PrimopWrappers.writeInt32Array#_closure:
         const GHC.PrimopWrappers.writeInt32Array#_info;
 },
 GHC.PrimopWrappers.writeInt32Array#_entry() //  [R2, R3, R4]
         { info_tbl: [(cwvZ,
                       label: GHC.PrimopWrappers.writeInt32Array#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwvZ: // global
           I32[(R2 + 16) + (R3 << 2)] = %MO_UU_Conv_W64_W32(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.371095856 UTC

[section ""data" . GHC.PrimopWrappers.writeInt64Array#_closure" {
     GHC.PrimopWrappers.writeInt64Array#_closure:
         const GHC.PrimopWrappers.writeInt64Array#_info;
 },
 GHC.PrimopWrappers.writeInt64Array#_entry() //  [R2, R3, R4]
         { info_tbl: [(cww6,
                       label: GHC.PrimopWrappers.writeInt64Array#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cww6: // global
           I64[(R2 + 16) + (R3 << 3)] = R4;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.371938307 UTC

[section ""data" . GHC.PrimopWrappers.writeWord8Array#_closure" {
     GHC.PrimopWrappers.writeWord8Array#_closure:
         const GHC.PrimopWrappers.writeWord8Array#_info;
 },
 GHC.PrimopWrappers.writeWord8Array#_entry() //  [R2, R3, R4]
         { info_tbl: [(cwwd,
                       label: GHC.PrimopWrappers.writeWord8Array#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwwd: // global
           I8[(R2 + 16) + R3] = %MO_UU_Conv_W64_W8(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.372789159 UTC

[section ""data" . GHC.PrimopWrappers.writeWord16Array#_closure" {
     GHC.PrimopWrappers.writeWord16Array#_closure:
         const GHC.PrimopWrappers.writeWord16Array#_info;
 },
 GHC.PrimopWrappers.writeWord16Array#_entry() //  [R2, R3, R4]
         { info_tbl: [(cwwk,
                       label: GHC.PrimopWrappers.writeWord16Array#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwwk: // global
           I16[(R2 + 16) + (R3 << 1)] = %MO_UU_Conv_W64_W16(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.373981698 UTC

[section ""data" . GHC.PrimopWrappers.writeWord32Array#_closure" {
     GHC.PrimopWrappers.writeWord32Array#_closure:
         const GHC.PrimopWrappers.writeWord32Array#_info;
 },
 GHC.PrimopWrappers.writeWord32Array#_entry() //  [R2, R3, R4]
         { info_tbl: [(cwwr,
                       label: GHC.PrimopWrappers.writeWord32Array#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwwr: // global
           I32[(R2 + 16) + (R3 << 2)] = %MO_UU_Conv_W64_W32(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.374829408 UTC

[section ""data" . GHC.PrimopWrappers.writeWord64Array#_closure" {
     GHC.PrimopWrappers.writeWord64Array#_closure:
         const GHC.PrimopWrappers.writeWord64Array#_info;
 },
 GHC.PrimopWrappers.writeWord64Array#_entry() //  [R2, R3, R4]
         { info_tbl: [(cwwy,
                       label: GHC.PrimopWrappers.writeWord64Array#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwwy: // global
           I64[(R2 + 16) + (R3 << 3)] = R4;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.375813066 UTC

[section ""data" . GHC.PrimopWrappers.compareByteArrays#_closure" {
     GHC.PrimopWrappers.compareByteArrays#_closure:
         const GHC.PrimopWrappers.compareByteArrays#_info;
 },
 GHC.PrimopWrappers.compareByteArrays#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwwC: // global
           R6 = I64[Sp + 32];
           R5 = I64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 40;
           call GHC.PrimopWrappers.compareByteArrays#_entry(R6,
                                                            R5,
                                                            R4,
                                                            R3,
                                                            R2,
                                                            R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.compareByteArrays#_entry() //  [R2, R3, R4, R5,
                                                    R6]
         { info_tbl: [(cwwP,
                       label: GHC.PrimopWrappers.compareByteArrays#_info
                       rep:HeapRep static {
                             Fun {arity: 5
                                  fun_type: ArgGen [False, True, False, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwwP: // global
           _cwwH::P64 = (R2 + 16) + R3;
           _cwwI::P64 = (R4 + 16) + R5;
           _cwwG::I64 = 0;
           if (_cwwH::P64 == _cwwI::P64) (likely: False) goto cwwJ; else goto cwwK;
       cwwK: // global
           _cwwO::I64 = R6;
           (_cwwL::I32) = call MO_Memcmp 1(_cwwH::P64, _cwwI::P64, _cwwO::I64);
           _cwwG::I64 = %MO_SS_Conv_W32_W64(_cwwL::I32);
           goto cwwJ;
       cwwJ: // global
           R1 = _cwwG::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.377187067 UTC

[section ""data" . GHC.PrimopWrappers.copyByteArray#_closure" {
     GHC.PrimopWrappers.copyByteArray#_closure:
         const GHC.PrimopWrappers.copyByteArray#_info;
 },
 GHC.PrimopWrappers.copyByteArray#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwwT: // global
           R6 = I64[Sp + 32];
           R5 = I64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 40;
           call GHC.PrimopWrappers.copyByteArray#_entry(R6,
                                                        R5,
                                                        R4,
                                                        R3,
                                                        R2,
                                                        R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.copyByteArray#_entry() //  [R2, R3, R4, R5, R6]
         { info_tbl: [(cwx2,
                       label: GHC.PrimopWrappers.copyByteArray#_info
                       rep:HeapRep static {
                             Fun {arity: 6
                                  fun_type: ArgGen [False, True, False, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwx2: // global
           _cwwZ::P64 = (R4 + 16) + R5;
           _cwx0::P64 = (R2 + 16) + R3;
           _cwx1::I64 = R6;
           call MO_Memcpy 1(_cwwZ::P64, _cwx0::P64, _cwx1::I64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.378517734 UTC

[section ""data" . GHC.PrimopWrappers.copyMutableByteArray#_closure" {
     GHC.PrimopWrappers.copyMutableByteArray#_closure:
         const GHC.PrimopWrappers.copyMutableByteArray#_info;
 },
 GHC.PrimopWrappers.copyMutableByteArray#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwx6: // global
           R6 = I64[Sp + 32];
           R5 = I64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 40;
           call GHC.PrimopWrappers.copyMutableByteArray#_entry(R6,
                                                               R5,
                                                               R4,
                                                               R3,
                                                               R2,
                                                               R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.copyMutableByteArray#_entry() //  [R2, R3, R4,
                                                       R5, R6]
         { info_tbl: [(cwxg,
                       label: GHC.PrimopWrappers.copyMutableByteArray#_info
                       rep:HeapRep static {
                             Fun {arity: 6
                                  fun_type: ArgGen [False, True, False, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwxg: // global
           _cwxa::P64 = (R4 + 16) + R5;
           _cwxb::P64 = (R2 + 16) + R3;
           if (R2 == R4) goto cwxe; else goto cwxf;
       cwxe: // global
           _cwxo::I64 = R6;
           call MO_Memmove 1(_cwxa::P64, _cwxb::P64, _cwxo::I64);
           goto cwxd;
       cwxf: // global
           _cwxq::I64 = R6;
           call MO_Memcpy 1(_cwxa::P64, _cwxb::P64, _cwxq::I64);
           goto cwxd;
       cwxd: // global
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.379824237 UTC

[section ""data" . GHC.PrimopWrappers.copyByteArrayToAddr#_closure" {
     GHC.PrimopWrappers.copyByteArrayToAddr#_closure:
         const GHC.PrimopWrappers.copyByteArrayToAddr#_info;
 },
 GHC.PrimopWrappers.copyByteArrayToAddr#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwxs: // global
           R5 = I64[Sp + 24];
           R4 = I64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 32;
           call GHC.PrimopWrappers.copyByteArrayToAddr#_entry(R5,
                                                              R4,
                                                              R3,
                                                              R2,
                                                              R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.copyByteArrayToAddr#_entry() //  [R2, R3, R4,
                                                      R5]
         { info_tbl: [(cwxA,
                       label: GHC.PrimopWrappers.copyByteArrayToAddr#_info
                       rep:HeapRep static {
                             Fun {arity: 5 fun_type: ArgGen [False, True, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwxA: // global
           _cwxx::I64 = R4;
           _cwxy::P64 = (R2 + 16) + R3;
           _cwxz::I64 = R5;
           call MO_Memcpy 1(_cwxx::I64, _cwxy::P64, _cwxz::I64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.380973954 UTC

[section ""data" . GHC.PrimopWrappers.copyMutableByteArrayToAddr#_closure" {
     GHC.PrimopWrappers.copyMutableByteArrayToAddr#_closure:
         const GHC.PrimopWrappers.copyMutableByteArrayToAddr#_info;
 },
 GHC.PrimopWrappers.copyMutableByteArrayToAddr#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwxE: // global
           R5 = I64[Sp + 24];
           R4 = I64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 32;
           call GHC.PrimopWrappers.copyMutableByteArrayToAddr#_entry(R5,
                                                                     R4,
                                                                     R3,
                                                                     R2,
                                                                     R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.copyMutableByteArrayToAddr#_entry() //  [R2, R3,
                                                             R4, R5]
         { info_tbl: [(cwxM,
                       label: GHC.PrimopWrappers.copyMutableByteArrayToAddr#_info
                       rep:HeapRep static {
                             Fun {arity: 5 fun_type: ArgGen [False, True, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwxM: // global
           _cwxJ::I64 = R4;
           _cwxK::P64 = (R2 + 16) + R3;
           _cwxL::I64 = R5;
           call MO_Memcpy 1(_cwxJ::I64, _cwxK::P64, _cwxL::I64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.382210272 UTC

[section ""data" . GHC.PrimopWrappers.copyAddrToByteArray#_closure" {
     GHC.PrimopWrappers.copyAddrToByteArray#_closure:
         const GHC.PrimopWrappers.copyAddrToByteArray#_info;
 },
 GHC.PrimopWrappers.copyAddrToByteArray#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwxQ: // global
           R5 = I64[Sp + 24];
           R4 = I64[Sp + 16];
           R3 = P64[Sp + 8];
           R2 = I64[Sp];
           R1 = R1;
           Sp = Sp + 32;
           call GHC.PrimopWrappers.copyAddrToByteArray#_entry(R5,
                                                              R4,
                                                              R3,
                                                              R2,
                                                              R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.copyAddrToByteArray#_entry() //  [R2, R3, R4,
                                                      R5]
         { info_tbl: [(cwxY,
                       label: GHC.PrimopWrappers.copyAddrToByteArray#_info
                       rep:HeapRep static {
                             Fun {arity: 5 fun_type: ArgGen [True, False, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwxY: // global
           _cwxV::P64 = (R3 + 16) + R4;
           _cwxX::I64 = R5;
           call MO_Memcpy 1(_cwxV::P64, R2, _cwxX::I64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.383363747 UTC

[section ""data" . GHC.PrimopWrappers.setByteArray#_closure" {
     GHC.PrimopWrappers.setByteArray#_closure:
         const GHC.PrimopWrappers.setByteArray#_info;
 },
 GHC.PrimopWrappers.setByteArray#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwy2: // global
           R5 = I64[Sp + 24];
           R4 = I64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 32;
           call GHC.PrimopWrappers.setByteArray#_entry(R5,
                                                       R4,
                                                       R3,
                                                       R2,
                                                       R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.setByteArray#_entry() //  [R2, R3, R4, R5]
         { info_tbl: [(cwya,
                       label: GHC.PrimopWrappers.setByteArray#_info
                       rep:HeapRep static {
                             Fun {arity: 5 fun_type: ArgGen [False, True, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwya: // global
           _cwy7::P64 = (R2 + 16) + R3;
           _cwy8::I64 = R5;
           _cwy9::I64 = R4;
           call MO_Memset 1(_cwy7::P64, _cwy8::I64, _cwy9::I64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.384420132 UTC

[section ""data" . GHC.PrimopWrappers.atomicReadIntArray#_closure" {
     GHC.PrimopWrappers.atomicReadIntArray#_closure:
         const GHC.PrimopWrappers.atomicReadIntArray#_info;
 },
 GHC.PrimopWrappers.atomicReadIntArray#_entry() //  [R2, R3]
         { info_tbl: [(cwyj,
                       label: GHC.PrimopWrappers.atomicReadIntArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwyj: // global
           _cwyi::P64 = (R2 + 16) + (R3 << 3);
           (_cwyh::I64) = call MO_AtomicRead W64(_cwyi::P64);
           R1 = _cwyh::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.385373089 UTC

[section ""data" . GHC.PrimopWrappers.atomicWriteIntArray#_closure" {
     GHC.PrimopWrappers.atomicWriteIntArray#_closure:
         const GHC.PrimopWrappers.atomicWriteIntArray#_info;
 },
 GHC.PrimopWrappers.atomicWriteIntArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cwys,
                       label: GHC.PrimopWrappers.atomicWriteIntArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwys: // global
           _cwyq::P64 = (R2 + 16) + (R3 << 3);
           _cwyr::I64 = R4;
           call MO_AtomicWrite W64(_cwyq::P64, _cwyr::I64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.386389419 UTC

[section ""data" . GHC.PrimopWrappers.casIntArray#_closure" {
     GHC.PrimopWrappers.casIntArray#_closure:
         const GHC.PrimopWrappers.casIntArray#_info;
 },
 GHC.PrimopWrappers.casIntArray#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwyw: // global
           R5 = I64[Sp + 24];
           R4 = I64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 32;
           call GHC.PrimopWrappers.casIntArray#_entry(R5,
                                                      R4,
                                                      R3,
                                                      R2,
                                                      R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.casIntArray#_entry() //  [R2, R3, R4, R5]
         { info_tbl: [(cwyE,
                       label: GHC.PrimopWrappers.casIntArray#_info
                       rep:HeapRep static {
                             Fun {arity: 5 fun_type: ArgGen [False, True, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwyE: // global
           _cwyB::P64 = (R2 + 16) + (R3 << 3);
           _cwyC::I64 = R4;
           _cwyD::I64 = R5;
           (_cwyA::I64) = call MO_Cmpxchg W64(_cwyB::P64, _cwyC::I64, _cwyD::I64);
           R1 = _cwyA::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.387566408 UTC

[section ""data" . GHC.PrimopWrappers.fetchAddIntArray#_closure" {
     GHC.PrimopWrappers.fetchAddIntArray#_closure:
         const GHC.PrimopWrappers.fetchAddIntArray#_info;
 },
 GHC.PrimopWrappers.fetchAddIntArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cwyO,
                       label: GHC.PrimopWrappers.fetchAddIntArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwyO: // global
           _cwyM::P64 = (R2 + 16) + (R3 << 3);
           _cwyN::I64 = R4;
           (_cwyL::I64) = call MO_AtomicRMW W64 AMO_Add(_cwyM::P64, _cwyN::I64);
           R1 = _cwyL::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.388510089 UTC

[section ""data" . GHC.PrimopWrappers.fetchSubIntArray#_closure" {
     GHC.PrimopWrappers.fetchSubIntArray#_closure:
         const GHC.PrimopWrappers.fetchSubIntArray#_info;
 },
 GHC.PrimopWrappers.fetchSubIntArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cwyY,
                       label: GHC.PrimopWrappers.fetchSubIntArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwyY: // global
           _cwyW::P64 = (R2 + 16) + (R3 << 3);
           _cwyX::I64 = R4;
           (_cwyV::I64) = call MO_AtomicRMW W64 AMO_Sub(_cwyW::P64, _cwyX::I64);
           R1 = _cwyV::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.390131625 UTC

[section ""data" . GHC.PrimopWrappers.fetchAndIntArray#_closure" {
     GHC.PrimopWrappers.fetchAndIntArray#_closure:
         const GHC.PrimopWrappers.fetchAndIntArray#_info;
 },
 GHC.PrimopWrappers.fetchAndIntArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cwz8,
                       label: GHC.PrimopWrappers.fetchAndIntArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwz8: // global
           _cwz6::P64 = (R2 + 16) + (R3 << 3);
           _cwz7::I64 = R4;
           (_cwz5::I64) = call MO_AtomicRMW W64 AMO_And(_cwz6::P64, _cwz7::I64);
           R1 = _cwz5::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.391012101 UTC

[section ""data" . GHC.PrimopWrappers.fetchNandIntArray#_closure" {
     GHC.PrimopWrappers.fetchNandIntArray#_closure:
         const GHC.PrimopWrappers.fetchNandIntArray#_info;
 },
 GHC.PrimopWrappers.fetchNandIntArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cwzi,
                       label: GHC.PrimopWrappers.fetchNandIntArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwzi: // global
           _cwzg::P64 = (R2 + 16) + (R3 << 3);
           _cwzh::I64 = R4;
           (_cwzf::I64) = call MO_AtomicRMW W64 AMO_Nand(_cwzg::P64, _cwzh::I64);
           R1 = _cwzf::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.391971027 UTC

[section ""data" . GHC.PrimopWrappers.fetchOrIntArray#_closure" {
     GHC.PrimopWrappers.fetchOrIntArray#_closure:
         const GHC.PrimopWrappers.fetchOrIntArray#_info;
 },
 GHC.PrimopWrappers.fetchOrIntArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cwzs,
                       label: GHC.PrimopWrappers.fetchOrIntArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwzs: // global
           _cwzq::P64 = (R2 + 16) + (R3 << 3);
           _cwzr::I64 = R4;
           (_cwzp::I64) = call MO_AtomicRMW W64 AMO_Or(_cwzq::P64, _cwzr::I64);
           R1 = _cwzp::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.392959969 UTC

[section ""data" . GHC.PrimopWrappers.fetchXorIntArray#_closure" {
     GHC.PrimopWrappers.fetchXorIntArray#_closure:
         const GHC.PrimopWrappers.fetchXorIntArray#_info;
 },
 GHC.PrimopWrappers.fetchXorIntArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cwzC,
                       label: GHC.PrimopWrappers.fetchXorIntArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwzC: // global
           _cwzA::P64 = (R2 + 16) + (R3 << 3);
           _cwzB::I64 = R4;
           (_cwzz::I64) = call MO_AtomicRMW W64 AMO_Xor(_cwzA::P64, _cwzB::I64);
           R1 = _cwzz::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.39388961 UTC

[section ""data" . GHC.PrimopWrappers.newArrayArray#_closure" {
     GHC.PrimopWrappers.newArrayArray#_closure:
         const GHC.PrimopWrappers.newArrayArray#_info;
 },
 GHC.PrimopWrappers.newArrayArray#_entry() //  [R2]
         { info_tbl: [(cwzJ,
                       label: GHC.PrimopWrappers.newArrayArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwzJ: // global
           R1 = R2;
           call stg_newArrayArray#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.394743828 UTC

[section ""data" . GHC.PrimopWrappers.sameMutableArrayArray#_closure" {
     GHC.PrimopWrappers.sameMutableArrayArray#_closure:
         const GHC.PrimopWrappers.sameMutableArrayArray#_info;
 },
 GHC.PrimopWrappers.sameMutableArrayArray#_entry() //  [R2, R3]
         { info_tbl: [(cwzR,
                       label: GHC.PrimopWrappers.sameMutableArrayArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwzR: // global
           R1 = R2 == R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.395537952 UTC

[section ""data" . GHC.PrimopWrappers.unsafeFreezeArrayArray#_closure" {
     GHC.PrimopWrappers.unsafeFreezeArrayArray#_closure:
         const GHC.PrimopWrappers.unsafeFreezeArrayArray#_info;
 },
 GHC.PrimopWrappers.unsafeFreezeArrayArray#_entry() //  [R2]
         { info_tbl: [(cwzZ,
                       label: GHC.PrimopWrappers.unsafeFreezeArrayArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwzZ: // global
           I64[R2] = stg_MUT_ARR_PTRS_FROZEN0_info;
           R1 = R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.396425893 UTC

[section ""data" . GHC.PrimopWrappers.sizeofArrayArray#_closure" {
     GHC.PrimopWrappers.sizeofArrayArray#_closure:
         const GHC.PrimopWrappers.sizeofArrayArray#_info;
 },
 GHC.PrimopWrappers.sizeofArrayArray#_entry() //  [R2]
         { info_tbl: [(cwA7,
                       label: GHC.PrimopWrappers.sizeofArrayArray#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwA7: // global
           R1 = I64[R2 + 8];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.399141033 UTC

[section ""data" . GHC.PrimopWrappers.sizeofMutableArrayArray#_closure" {
     GHC.PrimopWrappers.sizeofMutableArrayArray#_closure:
         const GHC.PrimopWrappers.sizeofMutableArrayArray#_info;
 },
 GHC.PrimopWrappers.sizeofMutableArrayArray#_entry() //  [R2]
         { info_tbl: [(cwAf,
                       label: GHC.PrimopWrappers.sizeofMutableArrayArray#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwAf: // global
           R1 = I64[R2 + 8];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.399967677 UTC

[section ""data" . GHC.PrimopWrappers.indexByteArrayArray#_closure" {
     GHC.PrimopWrappers.indexByteArrayArray#_closure:
         const GHC.PrimopWrappers.indexByteArrayArray#_info;
 },
 GHC.PrimopWrappers.indexByteArrayArray#_entry() //  [R2, R3]
         { info_tbl: [(cwAn,
                       label: GHC.PrimopWrappers.indexByteArrayArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwAn: // global
           R1 = P64[(R2 + 24) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.400775452 UTC

[section ""data" . GHC.PrimopWrappers.indexArrayArrayArray#_closure" {
     GHC.PrimopWrappers.indexArrayArrayArray#_closure:
         const GHC.PrimopWrappers.indexArrayArrayArray#_info;
 },
 GHC.PrimopWrappers.indexArrayArrayArray#_entry() //  [R2, R3]
         { info_tbl: [(cwAv,
                       label: GHC.PrimopWrappers.indexArrayArrayArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwAv: // global
           R1 = P64[(R2 + 24) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.401636161 UTC

[section ""data" . GHC.PrimopWrappers.readByteArrayArray#_closure" {
     GHC.PrimopWrappers.readByteArrayArray#_closure:
         const GHC.PrimopWrappers.readByteArrayArray#_info;
 },
 GHC.PrimopWrappers.readByteArrayArray#_entry() //  [R2, R3]
         { info_tbl: [(cwAD,
                       label: GHC.PrimopWrappers.readByteArrayArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwAD: // global
           R1 = P64[(R2 + 24) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.402484995 UTC

[section ""data" . GHC.PrimopWrappers.readMutableByteArrayArray#_closure" {
     GHC.PrimopWrappers.readMutableByteArrayArray#_closure:
         const GHC.PrimopWrappers.readMutableByteArrayArray#_info;
 },
 GHC.PrimopWrappers.readMutableByteArrayArray#_entry() //  [R2, R3]
         { info_tbl: [(cwAL,
                       label: GHC.PrimopWrappers.readMutableByteArrayArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwAL: // global
           R1 = P64[(R2 + 24) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.403353157 UTC

[section ""data" . GHC.PrimopWrappers.readArrayArrayArray#_closure" {
     GHC.PrimopWrappers.readArrayArrayArray#_closure:
         const GHC.PrimopWrappers.readArrayArrayArray#_info;
 },
 GHC.PrimopWrappers.readArrayArrayArray#_entry() //  [R2, R3]
         { info_tbl: [(cwAT,
                       label: GHC.PrimopWrappers.readArrayArrayArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwAT: // global
           R1 = P64[(R2 + 24) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.404210064 UTC

[section ""data" . GHC.PrimopWrappers.readMutableArrayArrayArray#_closure" {
     GHC.PrimopWrappers.readMutableArrayArrayArray#_closure:
         const GHC.PrimopWrappers.readMutableArrayArrayArray#_info;
 },
 GHC.PrimopWrappers.readMutableArrayArrayArray#_entry() //  [R2, R3]
         { info_tbl: [(cwB1,
                       label: GHC.PrimopWrappers.readMutableArrayArrayArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwB1: // global
           R1 = P64[(R2 + 24) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.405104782 UTC

[section ""data" . GHC.PrimopWrappers.writeByteArrayArray#_closure" {
     GHC.PrimopWrappers.writeByteArrayArray#_closure:
         const GHC.PrimopWrappers.writeByteArrayArray#_info;
 },
 GHC.PrimopWrappers.writeByteArrayArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cwB8,
                       label: GHC.PrimopWrappers.writeByteArrayArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 21} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwB8: // global
           _B2::P64 = R4;
           _B3::I64 = R3;
           call MO_WriteBarrier();
           P64[(R2 + 24) + (_B3::I64 << 3)] = _B2::P64;
           I64[R2] = stg_MUT_ARR_PTRS_DIRTY_info;
           I8[(R2 + 24) + ((I64[R2 + 8] << 3) + (_B3::I64 >> 7))] = 1 :: W8;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.40609381 UTC

[section ""data" . GHC.PrimopWrappers.writeMutableByteArrayArray#_closure" {
     GHC.PrimopWrappers.writeMutableByteArrayArray#_closure:
         const GHC.PrimopWrappers.writeMutableByteArrayArray#_info;
 },
 GHC.PrimopWrappers.writeMutableByteArrayArray#_entry() //  [R2, R3,
                                                             R4]
         { info_tbl: [(cwBf,
                       label: GHC.PrimopWrappers.writeMutableByteArrayArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 21} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwBf: // global
           _B2::P64 = R4;
           _B3::I64 = R3;
           call MO_WriteBarrier();
           P64[(R2 + 24) + (_B3::I64 << 3)] = _B2::P64;
           I64[R2] = stg_MUT_ARR_PTRS_DIRTY_info;
           I8[(R2 + 24) + ((I64[R2 + 8] << 3) + (_B3::I64 >> 7))] = 1 :: W8;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.407011612 UTC

[section ""data" . GHC.PrimopWrappers.writeArrayArrayArray#_closure" {
     GHC.PrimopWrappers.writeArrayArrayArray#_closure:
         const GHC.PrimopWrappers.writeArrayArrayArray#_info;
 },
 GHC.PrimopWrappers.writeArrayArrayArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cwBm,
                       label: GHC.PrimopWrappers.writeArrayArrayArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 21} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwBm: // global
           _B2::P64 = R4;
           _B3::I64 = R3;
           call MO_WriteBarrier();
           P64[(R2 + 24) + (_B3::I64 << 3)] = _B2::P64;
           I64[R2] = stg_MUT_ARR_PTRS_DIRTY_info;
           I8[(R2 + 24) + ((I64[R2 + 8] << 3) + (_B3::I64 >> 7))] = 1 :: W8;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.408006617 UTC

[section ""data" . GHC.PrimopWrappers.writeMutableArrayArrayArray#_closure" {
     GHC.PrimopWrappers.writeMutableArrayArrayArray#_closure:
         const GHC.PrimopWrappers.writeMutableArrayArrayArray#_info;
 },
 GHC.PrimopWrappers.writeMutableArrayArrayArray#_entry() //  [R2,
                                                              R3, R4]
         { info_tbl: [(cwBt,
                       label: GHC.PrimopWrappers.writeMutableArrayArrayArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 21} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwBt: // global
           _B2::P64 = R4;
           _B3::I64 = R3;
           call MO_WriteBarrier();
           P64[(R2 + 24) + (_B3::I64 << 3)] = _B2::P64;
           I64[R2] = stg_MUT_ARR_PTRS_DIRTY_info;
           I8[(R2 + 24) + ((I64[R2 + 8] << 3) + (_B3::I64 >> 7))] = 1 :: W8;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.409020418 UTC

[section ""data" . GHC.PrimopWrappers.copyArrayArray#_closure" {
     GHC.PrimopWrappers.copyArrayArray#_closure:
         const GHC.PrimopWrappers.copyArrayArray#_info;
 },
 GHC.PrimopWrappers.copyArrayArray#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwBx: // global
           R6 = I64[Sp + 32];
           R5 = I64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 40;
           call GHC.PrimopWrappers.copyArrayArray#_entry(R6,
                                                         R5,
                                                         R4,
                                                         R3,
                                                         R2,
                                                         R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.copyArrayArray#_entry() //  [R2, R3, R4, R5, R6]
         { info_tbl: [(cwBB,
                       label: GHC.PrimopWrappers.copyArrayArray#_info
                       rep:HeapRep static {
                             Fun {arity: 6
                                  fun_type: ArgGen [False, True, False, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwBB: // global
           _B3::I64 = R5;
           R5 = R6;
           _B4::P64 = R4;
           R4 = _B3::I64;
           _B5::I64 = R3;
           R3 = _B4::P64;
           _B6::P64 = R2;
           R2 = _B5::I64;
           R1 = _B6::P64;
           call stg_copyArrayArray#(R5,
                                    R4,
                                    R3,
                                    R2,
                                    R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.410548654 UTC

[section ""data" . GHC.PrimopWrappers.copyMutableArrayArray#_closure" {
     GHC.PrimopWrappers.copyMutableArrayArray#_closure:
         const GHC.PrimopWrappers.copyMutableArrayArray#_info;
 },
 GHC.PrimopWrappers.copyMutableArrayArray#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwBF: // global
           R6 = I64[Sp + 32];
           R5 = I64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 40;
           call GHC.PrimopWrappers.copyMutableArrayArray#_entry(R6,
                                                                R5,
                                                                R4,
                                                                R3,
                                                                R2,
                                                                R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.copyMutableArrayArray#_entry() //  [R2, R3, R4,
                                                        R5, R6]
         { info_tbl: [(cwBJ,
                       label: GHC.PrimopWrappers.copyMutableArrayArray#_info
                       rep:HeapRep static {
                             Fun {arity: 6
                                  fun_type: ArgGen [False, True, False, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwBJ: // global
           _B3::I64 = R5;
           R5 = R6;
           _B4::P64 = R4;
           R4 = _B3::I64;
           _B5::I64 = R3;
           R3 = _B4::P64;
           _B6::P64 = R2;
           R2 = _B5::I64;
           R1 = _B6::P64;
           call stg_copyMutableArrayArray#(R5,
                                           R4,
                                           R3,
                                           R2,
                                           R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.411672276 UTC

[section ""data" . GHC.PrimopWrappers.plusAddr#_closure" {
     GHC.PrimopWrappers.plusAddr#_closure:
         const GHC.PrimopWrappers.plusAddr#_info;
 },
 GHC.PrimopWrappers.plusAddr#_entry() //  [R2, R3]
         { info_tbl: [(cwBR,
                       label: GHC.PrimopWrappers.plusAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwBR: // global
           R1 = R2 + R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.412498461 UTC

[section ""data" . GHC.PrimopWrappers.minusAddr#_closure" {
     GHC.PrimopWrappers.minusAddr#_closure:
         const GHC.PrimopWrappers.minusAddr#_info;
 },
 GHC.PrimopWrappers.minusAddr#_entry() //  [R2, R3]
         { info_tbl: [(cwBZ,
                       label: GHC.PrimopWrappers.minusAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwBZ: // global
           R1 = R2 - R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.413369246 UTC

[section ""data" . GHC.PrimopWrappers.remAddr#_closure" {
     GHC.PrimopWrappers.remAddr#_closure:
         const GHC.PrimopWrappers.remAddr#_info;
 },
 GHC.PrimopWrappers.remAddr#_entry() //  [R2, R3]
         { info_tbl: [(cwC7,
                       label: GHC.PrimopWrappers.remAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwC7: // global
           R1 = R2 % R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.414184717 UTC

[section ""data" . GHC.PrimopWrappers.addr2Int#_closure" {
     GHC.PrimopWrappers.addr2Int#_closure:
         const GHC.PrimopWrappers.addr2Int#_info;
 },
 GHC.PrimopWrappers.addr2Int#_entry() //  [R2]
         { info_tbl: [(cwCf,
                       label: GHC.PrimopWrappers.addr2Int#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwCf: // global
           R1 = R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.414996848 UTC

[section ""data" . GHC.PrimopWrappers.int2Addr#_closure" {
     GHC.PrimopWrappers.int2Addr#_closure:
         const GHC.PrimopWrappers.int2Addr#_info;
 },
 GHC.PrimopWrappers.int2Addr#_entry() //  [R2]
         { info_tbl: [(cwCn,
                       label: GHC.PrimopWrappers.int2Addr#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwCn: // global
           R1 = R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.415768583 UTC

[section ""data" . GHC.PrimopWrappers.gtAddr#_closure" {
     GHC.PrimopWrappers.gtAddr#_closure:
         const GHC.PrimopWrappers.gtAddr#_info;
 },
 GHC.PrimopWrappers.gtAddr#_entry() //  [R2, R3]
         { info_tbl: [(cwCv,
                       label: GHC.PrimopWrappers.gtAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwCv: // global
           R1 = R2 > R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.416587431 UTC

[section ""data" . GHC.PrimopWrappers.geAddr#_closure" {
     GHC.PrimopWrappers.geAddr#_closure:
         const GHC.PrimopWrappers.geAddr#_info;
 },
 GHC.PrimopWrappers.geAddr#_entry() //  [R2, R3]
         { info_tbl: [(cwCD,
                       label: GHC.PrimopWrappers.geAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwCD: // global
           R1 = R2 >= R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.417497571 UTC

[section ""data" . GHC.PrimopWrappers.eqAddr#_closure" {
     GHC.PrimopWrappers.eqAddr#_closure:
         const GHC.PrimopWrappers.eqAddr#_info;
 },
 GHC.PrimopWrappers.eqAddr#_entry() //  [R2, R3]
         { info_tbl: [(cwCL,
                       label: GHC.PrimopWrappers.eqAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwCL: // global
           R1 = R2 == R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.418337368 UTC

[section ""data" . GHC.PrimopWrappers.neAddr#_closure" {
     GHC.PrimopWrappers.neAddr#_closure:
         const GHC.PrimopWrappers.neAddr#_info;
 },
 GHC.PrimopWrappers.neAddr#_entry() //  [R2, R3]
         { info_tbl: [(cwCT,
                       label: GHC.PrimopWrappers.neAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwCT: // global
           R1 = R2 != R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.419175737 UTC

[section ""data" . GHC.PrimopWrappers.ltAddr#_closure" {
     GHC.PrimopWrappers.ltAddr#_closure:
         const GHC.PrimopWrappers.ltAddr#_info;
 },
 GHC.PrimopWrappers.ltAddr#_entry() //  [R2, R3]
         { info_tbl: [(cwD1,
                       label: GHC.PrimopWrappers.ltAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwD1: // global
           R1 = R2 < R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.420040271 UTC

[section ""data" . GHC.PrimopWrappers.leAddr#_closure" {
     GHC.PrimopWrappers.leAddr#_closure:
         const GHC.PrimopWrappers.leAddr#_info;
 },
 GHC.PrimopWrappers.leAddr#_entry() //  [R2, R3]
         { info_tbl: [(cwD9,
                       label: GHC.PrimopWrappers.leAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwD9: // global
           R1 = R2 <= R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.42088315 UTC

[section ""data" . GHC.PrimopWrappers.indexCharOffAddr#_closure" {
     GHC.PrimopWrappers.indexCharOffAddr#_closure:
         const GHC.PrimopWrappers.indexCharOffAddr#_info;
 },
 GHC.PrimopWrappers.indexCharOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cwDh,
                       label: GHC.PrimopWrappers.indexCharOffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwDh: // global
           R1 = %MO_UU_Conv_W8_W64(I8[R2 + R3]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.421857952 UTC

[section ""data" . GHC.PrimopWrappers.indexWideCharOffAddr#_closure" {
     GHC.PrimopWrappers.indexWideCharOffAddr#_closure:
         const GHC.PrimopWrappers.indexWideCharOffAddr#_info;
 },
 GHC.PrimopWrappers.indexWideCharOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cwDp,
                       label: GHC.PrimopWrappers.indexWideCharOffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwDp: // global
           R1 = %MO_UU_Conv_W32_W64(I32[R2 + (R3 << 2)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.4226869 UTC

[section ""data" . GHC.PrimopWrappers.indexIntOffAddr#_closure" {
     GHC.PrimopWrappers.indexIntOffAddr#_closure:
         const GHC.PrimopWrappers.indexIntOffAddr#_info;
 },
 GHC.PrimopWrappers.indexIntOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cwDx,
                       label: GHC.PrimopWrappers.indexIntOffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwDx: // global
           R1 = I64[R2 + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.423483556 UTC

[section ""data" . GHC.PrimopWrappers.indexWordOffAddr#_closure" {
     GHC.PrimopWrappers.indexWordOffAddr#_closure:
         const GHC.PrimopWrappers.indexWordOffAddr#_info;
 },
 GHC.PrimopWrappers.indexWordOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cwDF,
                       label: GHC.PrimopWrappers.indexWordOffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwDF: // global
           R1 = I64[R2 + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.424366716 UTC

[section ""data" . GHC.PrimopWrappers.indexAddrOffAddr#_closure" {
     GHC.PrimopWrappers.indexAddrOffAddr#_closure:
         const GHC.PrimopWrappers.indexAddrOffAddr#_info;
 },
 GHC.PrimopWrappers.indexAddrOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cwDN,
                       label: GHC.PrimopWrappers.indexAddrOffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwDN: // global
           R1 = I64[R2 + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.425196815 UTC

[section ""data" . GHC.PrimopWrappers.indexFloatOffAddr#_closure" {
     GHC.PrimopWrappers.indexFloatOffAddr#_closure:
         const GHC.PrimopWrappers.indexFloatOffAddr#_info;
 },
 GHC.PrimopWrappers.indexFloatOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cwDV,
                       label: GHC.PrimopWrappers.indexFloatOffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwDV: // global
           F1 = F32[R2 + (R3 << 2)];
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.426107033 UTC

[section ""data" . GHC.PrimopWrappers.indexDoubleOffAddr#_closure" {
     GHC.PrimopWrappers.indexDoubleOffAddr#_closure:
         const GHC.PrimopWrappers.indexDoubleOffAddr#_info;
 },
 GHC.PrimopWrappers.indexDoubleOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cwE3,
                       label: GHC.PrimopWrappers.indexDoubleOffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwE3: // global
           D1 = F64[R2 + (R3 << 3)];
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.427826211 UTC

[section ""data" . GHC.PrimopWrappers.indexStablePtrOffAddr#_closure" {
     GHC.PrimopWrappers.indexStablePtrOffAddr#_closure:
         const GHC.PrimopWrappers.indexStablePtrOffAddr#_info;
 },
 GHC.PrimopWrappers.indexStablePtrOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cwEb,
                       label: GHC.PrimopWrappers.indexStablePtrOffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwEb: // global
           R1 = I64[R2 + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.428654629 UTC

[section ""data" . GHC.PrimopWrappers.indexInt8OffAddr#_closure" {
     GHC.PrimopWrappers.indexInt8OffAddr#_closure:
         const GHC.PrimopWrappers.indexInt8OffAddr#_info;
 },
 GHC.PrimopWrappers.indexInt8OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cwEj,
                       label: GHC.PrimopWrappers.indexInt8OffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwEj: // global
           R1 = %MO_SS_Conv_W8_W64(I8[R2 + R3]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.429507776 UTC

[section ""data" . GHC.PrimopWrappers.indexInt16OffAddr#_closure" {
     GHC.PrimopWrappers.indexInt16OffAddr#_closure:
         const GHC.PrimopWrappers.indexInt16OffAddr#_info;
 },
 GHC.PrimopWrappers.indexInt16OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cwEr,
                       label: GHC.PrimopWrappers.indexInt16OffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwEr: // global
           R1 = %MO_SS_Conv_W16_W64(I16[R2 + (R3 << 1)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.430315836 UTC

[section ""data" . GHC.PrimopWrappers.indexInt32OffAddr#_closure" {
     GHC.PrimopWrappers.indexInt32OffAddr#_closure:
         const GHC.PrimopWrappers.indexInt32OffAddr#_info;
 },
 GHC.PrimopWrappers.indexInt32OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cwEz,
                       label: GHC.PrimopWrappers.indexInt32OffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwEz: // global
           R1 = %MO_SS_Conv_W32_W64(I32[R2 + (R3 << 2)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.431138072 UTC

[section ""data" . GHC.PrimopWrappers.indexInt64OffAddr#_closure" {
     GHC.PrimopWrappers.indexInt64OffAddr#_closure:
         const GHC.PrimopWrappers.indexInt64OffAddr#_info;
 },
 GHC.PrimopWrappers.indexInt64OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cwEH,
                       label: GHC.PrimopWrappers.indexInt64OffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwEH: // global
           R1 = I64[R2 + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.431959008 UTC

[section ""data" . GHC.PrimopWrappers.indexWord8OffAddr#_closure" {
     GHC.PrimopWrappers.indexWord8OffAddr#_closure:
         const GHC.PrimopWrappers.indexWord8OffAddr#_info;
 },
 GHC.PrimopWrappers.indexWord8OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cwEP,
                       label: GHC.PrimopWrappers.indexWord8OffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwEP: // global
           R1 = %MO_UU_Conv_W8_W64(I8[R2 + R3]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.432794802 UTC

[section ""data" . GHC.PrimopWrappers.indexWord16OffAddr#_closure" {
     GHC.PrimopWrappers.indexWord16OffAddr#_closure:
         const GHC.PrimopWrappers.indexWord16OffAddr#_info;
 },
 GHC.PrimopWrappers.indexWord16OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cwEX,
                       label: GHC.PrimopWrappers.indexWord16OffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwEX: // global
           R1 = %MO_UU_Conv_W16_W64(I16[R2 + (R3 << 1)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.433695749 UTC

[section ""data" . GHC.PrimopWrappers.indexWord32OffAddr#_closure" {
     GHC.PrimopWrappers.indexWord32OffAddr#_closure:
         const GHC.PrimopWrappers.indexWord32OffAddr#_info;
 },
 GHC.PrimopWrappers.indexWord32OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cwF5,
                       label: GHC.PrimopWrappers.indexWord32OffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwF5: // global
           R1 = %MO_UU_Conv_W32_W64(I32[R2 + (R3 << 2)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.434529923 UTC

[section ""data" . GHC.PrimopWrappers.indexWord64OffAddr#_closure" {
     GHC.PrimopWrappers.indexWord64OffAddr#_closure:
         const GHC.PrimopWrappers.indexWord64OffAddr#_info;
 },
 GHC.PrimopWrappers.indexWord64OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cwFd,
                       label: GHC.PrimopWrappers.indexWord64OffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwFd: // global
           R1 = I64[R2 + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.435379985 UTC

[section ""data" . GHC.PrimopWrappers.readCharOffAddr#_closure" {
     GHC.PrimopWrappers.readCharOffAddr#_closure:
         const GHC.PrimopWrappers.readCharOffAddr#_info;
 },
 GHC.PrimopWrappers.readCharOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cwFl,
                       label: GHC.PrimopWrappers.readCharOffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwFl: // global
           R1 = %MO_UU_Conv_W8_W64(I8[R2 + R3]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.436233658 UTC

[section ""data" . GHC.PrimopWrappers.readWideCharOffAddr#_closure" {
     GHC.PrimopWrappers.readWideCharOffAddr#_closure:
         const GHC.PrimopWrappers.readWideCharOffAddr#_info;
 },
 GHC.PrimopWrappers.readWideCharOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cwFt,
                       label: GHC.PrimopWrappers.readWideCharOffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwFt: // global
           R1 = %MO_UU_Conv_W32_W64(I32[R2 + (R3 << 2)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.437089506 UTC

[section ""data" . GHC.PrimopWrappers.readIntOffAddr#_closure" {
     GHC.PrimopWrappers.readIntOffAddr#_closure:
         const GHC.PrimopWrappers.readIntOffAddr#_info;
 },
 GHC.PrimopWrappers.readIntOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cwFB,
                       label: GHC.PrimopWrappers.readIntOffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwFB: // global
           R1 = I64[R2 + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.437992468 UTC

[section ""data" . GHC.PrimopWrappers.readWordOffAddr#_closure" {
     GHC.PrimopWrappers.readWordOffAddr#_closure:
         const GHC.PrimopWrappers.readWordOffAddr#_info;
 },
 GHC.PrimopWrappers.readWordOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cwFJ,
                       label: GHC.PrimopWrappers.readWordOffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwFJ: // global
           R1 = I64[R2 + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.438842297 UTC

[section ""data" . GHC.PrimopWrappers.readAddrOffAddr#_closure" {
     GHC.PrimopWrappers.readAddrOffAddr#_closure:
         const GHC.PrimopWrappers.readAddrOffAddr#_info;
 },
 GHC.PrimopWrappers.readAddrOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cwFR,
                       label: GHC.PrimopWrappers.readAddrOffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwFR: // global
           R1 = I64[R2 + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.439678166 UTC

[section ""data" . GHC.PrimopWrappers.readFloatOffAddr#_closure" {
     GHC.PrimopWrappers.readFloatOffAddr#_closure:
         const GHC.PrimopWrappers.readFloatOffAddr#_info;
 },
 GHC.PrimopWrappers.readFloatOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cwFZ,
                       label: GHC.PrimopWrappers.readFloatOffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwFZ: // global
           F1 = F32[R2 + (R3 << 2)];
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.440503233 UTC

[section ""data" . GHC.PrimopWrappers.readDoubleOffAddr#_closure" {
     GHC.PrimopWrappers.readDoubleOffAddr#_closure:
         const GHC.PrimopWrappers.readDoubleOffAddr#_info;
 },
 GHC.PrimopWrappers.readDoubleOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cwG7,
                       label: GHC.PrimopWrappers.readDoubleOffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwG7: // global
           D1 = F64[R2 + (R3 << 3)];
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.441426193 UTC

[section ""data" . GHC.PrimopWrappers.readStablePtrOffAddr#_closure" {
     GHC.PrimopWrappers.readStablePtrOffAddr#_closure:
         const GHC.PrimopWrappers.readStablePtrOffAddr#_info;
 },
 GHC.PrimopWrappers.readStablePtrOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cwGf,
                       label: GHC.PrimopWrappers.readStablePtrOffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwGf: // global
           R1 = I64[R2 + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.442264037 UTC

[section ""data" . GHC.PrimopWrappers.readInt8OffAddr#_closure" {
     GHC.PrimopWrappers.readInt8OffAddr#_closure:
         const GHC.PrimopWrappers.readInt8OffAddr#_info;
 },
 GHC.PrimopWrappers.readInt8OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cwGn,
                       label: GHC.PrimopWrappers.readInt8OffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwGn: // global
           R1 = %MO_SS_Conv_W8_W64(I8[R2 + R3]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.443146418 UTC

[section ""data" . GHC.PrimopWrappers.readInt16OffAddr#_closure" {
     GHC.PrimopWrappers.readInt16OffAddr#_closure:
         const GHC.PrimopWrappers.readInt16OffAddr#_info;
 },
 GHC.PrimopWrappers.readInt16OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cwGv,
                       label: GHC.PrimopWrappers.readInt16OffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwGv: // global
           R1 = %MO_SS_Conv_W16_W64(I16[R2 + (R3 << 1)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.444019515 UTC

[section ""data" . GHC.PrimopWrappers.readInt32OffAddr#_closure" {
     GHC.PrimopWrappers.readInt32OffAddr#_closure:
         const GHC.PrimopWrappers.readInt32OffAddr#_info;
 },
 GHC.PrimopWrappers.readInt32OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cwGD,
                       label: GHC.PrimopWrappers.readInt32OffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwGD: // global
           R1 = %MO_SS_Conv_W32_W64(I32[R2 + (R3 << 2)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.444879589 UTC

[section ""data" . GHC.PrimopWrappers.readInt64OffAddr#_closure" {
     GHC.PrimopWrappers.readInt64OffAddr#_closure:
         const GHC.PrimopWrappers.readInt64OffAddr#_info;
 },
 GHC.PrimopWrappers.readInt64OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cwGL,
                       label: GHC.PrimopWrappers.readInt64OffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwGL: // global
           R1 = I64[R2 + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.445806748 UTC

[section ""data" . GHC.PrimopWrappers.readWord8OffAddr#_closure" {
     GHC.PrimopWrappers.readWord8OffAddr#_closure:
         const GHC.PrimopWrappers.readWord8OffAddr#_info;
 },
 GHC.PrimopWrappers.readWord8OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cwGT,
                       label: GHC.PrimopWrappers.readWord8OffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwGT: // global
           R1 = %MO_UU_Conv_W8_W64(I8[R2 + R3]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.446670105 UTC

[section ""data" . GHC.PrimopWrappers.readWord16OffAddr#_closure" {
     GHC.PrimopWrappers.readWord16OffAddr#_closure:
         const GHC.PrimopWrappers.readWord16OffAddr#_info;
 },
 GHC.PrimopWrappers.readWord16OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cwH1,
                       label: GHC.PrimopWrappers.readWord16OffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwH1: // global
           R1 = %MO_UU_Conv_W16_W64(I16[R2 + (R3 << 1)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.447521189 UTC

[section ""data" . GHC.PrimopWrappers.readWord32OffAddr#_closure" {
     GHC.PrimopWrappers.readWord32OffAddr#_closure:
         const GHC.PrimopWrappers.readWord32OffAddr#_info;
 },
 GHC.PrimopWrappers.readWord32OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cwH9,
                       label: GHC.PrimopWrappers.readWord32OffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwH9: // global
           R1 = %MO_UU_Conv_W32_W64(I32[R2 + (R3 << 2)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.44837729 UTC

[section ""data" . GHC.PrimopWrappers.readWord64OffAddr#_closure" {
     GHC.PrimopWrappers.readWord64OffAddr#_closure:
         const GHC.PrimopWrappers.readWord64OffAddr#_info;
 },
 GHC.PrimopWrappers.readWord64OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cwHh,
                       label: GHC.PrimopWrappers.readWord64OffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwHh: // global
           R1 = I64[R2 + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.449233667 UTC

[section ""data" . GHC.PrimopWrappers.writeCharOffAddr#_closure" {
     GHC.PrimopWrappers.writeCharOffAddr#_closure:
         const GHC.PrimopWrappers.writeCharOffAddr#_info;
 },
 GHC.PrimopWrappers.writeCharOffAddr#_entry() //  [R2, R3, R4]
         { info_tbl: [(cwHo,
                       label: GHC.PrimopWrappers.writeCharOffAddr#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 16} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwHo: // global
           I8[R2 + R3] = %MO_UU_Conv_W64_W8(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.450138751 UTC

[section ""data" . GHC.PrimopWrappers.writeWideCharOffAddr#_closure" {
     GHC.PrimopWrappers.writeWideCharOffAddr#_closure:
         const GHC.PrimopWrappers.writeWideCharOffAddr#_info;
 },
 GHC.PrimopWrappers.writeWideCharOffAddr#_entry() //  [R2, R3, R4]
         { info_tbl: [(cwHv,
                       label: GHC.PrimopWrappers.writeWideCharOffAddr#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 16} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwHv: // global
           I32[R2 + (R3 << 2)] = %MO_UU_Conv_W64_W32(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.451007743 UTC

[section ""data" . GHC.PrimopWrappers.writeIntOffAddr#_closure" {
     GHC.PrimopWrappers.writeIntOffAddr#_closure:
         const GHC.PrimopWrappers.writeIntOffAddr#_info;
 },
 GHC.PrimopWrappers.writeIntOffAddr#_entry() //  [R2, R3, R4]
         { info_tbl: [(cwHC,
                       label: GHC.PrimopWrappers.writeIntOffAddr#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 16} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwHC: // global
           I64[R2 + (R3 << 3)] = R4;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.451887515 UTC

[section ""data" . GHC.PrimopWrappers.writeWordOffAddr#_closure" {
     GHC.PrimopWrappers.writeWordOffAddr#_closure:
         const GHC.PrimopWrappers.writeWordOffAddr#_info;
 },
 GHC.PrimopWrappers.writeWordOffAddr#_entry() //  [R2, R3, R4]
         { info_tbl: [(cwHJ,
                       label: GHC.PrimopWrappers.writeWordOffAddr#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 16} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwHJ: // global
           I64[R2 + (R3 << 3)] = R4;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.452720726 UTC

[section ""data" . GHC.PrimopWrappers.writeAddrOffAddr#_closure" {
     GHC.PrimopWrappers.writeAddrOffAddr#_closure:
         const GHC.PrimopWrappers.writeAddrOffAddr#_info;
 },
 GHC.PrimopWrappers.writeAddrOffAddr#_entry() //  [R2, R3, R4]
         { info_tbl: [(cwHQ,
                       label: GHC.PrimopWrappers.writeAddrOffAddr#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 16} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwHQ: // global
           I64[R2 + (R3 << 3)] = R4;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.454039635 UTC

[section ""data" . GHC.PrimopWrappers.writeFloatOffAddr#_closure" {
     GHC.PrimopWrappers.writeFloatOffAddr#_closure:
         const GHC.PrimopWrappers.writeFloatOffAddr#_info;
 },
 GHC.PrimopWrappers.writeFloatOffAddr#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwHU: // global
           F1 = F32[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = I64[Sp];
           R1 = R1;
           Sp = Sp + 24;
           call GHC.PrimopWrappers.writeFloatOffAddr#_entry(F1,
                                                            R3,
                                                            R2,
                                                            R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.writeFloatOffAddr#_entry() //  [R2, R3, F1]
         { info_tbl: [(cwHY,
                       label: GHC.PrimopWrappers.writeFloatOffAddr#_info
                       rep:HeapRep static {
                             Fun {arity: 4 fun_type: ArgGen [True, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwHY: // global
           F32[R2 + (R3 << 2)] = F1;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.455162299 UTC

[section ""data" . GHC.PrimopWrappers.writeDoubleOffAddr#_closure" {
     GHC.PrimopWrappers.writeDoubleOffAddr#_closure:
         const GHC.PrimopWrappers.writeDoubleOffAddr#_info;
 },
 GHC.PrimopWrappers.writeDoubleOffAddr#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwI2: // global
           D1 = F64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = I64[Sp];
           R1 = R1;
           Sp = Sp + 24;
           call GHC.PrimopWrappers.writeDoubleOffAddr#_entry(D1,
                                                             R3,
                                                             R2,
                                                             R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.writeDoubleOffAddr#_entry() //  [R2, R3, D1]
         { info_tbl: [(cwI6,
                       label: GHC.PrimopWrappers.writeDoubleOffAddr#_info
                       rep:HeapRep static {
                             Fun {arity: 4 fun_type: ArgGen [True, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwI6: // global
           F64[R2 + (R3 << 3)] = D1;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.45693573 UTC

[section ""data" . GHC.PrimopWrappers.writeStablePtrOffAddr#_closure" {
     GHC.PrimopWrappers.writeStablePtrOffAddr#_closure:
         const GHC.PrimopWrappers.writeStablePtrOffAddr#_info;
 },
 GHC.PrimopWrappers.writeStablePtrOffAddr#_entry() //  [R2, R3, R4]
         { info_tbl: [(cwId,
                       label: GHC.PrimopWrappers.writeStablePtrOffAddr#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 16} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwId: // global
           I64[R2 + (R3 << 3)] = R4;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.45785819 UTC

[section ""data" . GHC.PrimopWrappers.writeInt8OffAddr#_closure" {
     GHC.PrimopWrappers.writeInt8OffAddr#_closure:
         const GHC.PrimopWrappers.writeInt8OffAddr#_info;
 },
 GHC.PrimopWrappers.writeInt8OffAddr#_entry() //  [R2, R3, R4]
         { info_tbl: [(cwIk,
                       label: GHC.PrimopWrappers.writeInt8OffAddr#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 16} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwIk: // global
           I8[R2 + R3] = %MO_UU_Conv_W64_W8(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.458672125 UTC

[section ""data" . GHC.PrimopWrappers.writeInt16OffAddr#_closure" {
     GHC.PrimopWrappers.writeInt16OffAddr#_closure:
         const GHC.PrimopWrappers.writeInt16OffAddr#_info;
 },
 GHC.PrimopWrappers.writeInt16OffAddr#_entry() //  [R2, R3, R4]
         { info_tbl: [(cwIr,
                       label: GHC.PrimopWrappers.writeInt16OffAddr#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 16} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwIr: // global
           I16[R2 + (R3 << 1)] = %MO_UU_Conv_W64_W16(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.459512472 UTC

[section ""data" . GHC.PrimopWrappers.writeInt32OffAddr#_closure" {
     GHC.PrimopWrappers.writeInt32OffAddr#_closure:
         const GHC.PrimopWrappers.writeInt32OffAddr#_info;
 },
 GHC.PrimopWrappers.writeInt32OffAddr#_entry() //  [R2, R3, R4]
         { info_tbl: [(cwIy,
                       label: GHC.PrimopWrappers.writeInt32OffAddr#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 16} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwIy: // global
           I32[R2 + (R3 << 2)] = %MO_UU_Conv_W64_W32(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.460372168 UTC

[section ""data" . GHC.PrimopWrappers.writeInt64OffAddr#_closure" {
     GHC.PrimopWrappers.writeInt64OffAddr#_closure:
         const GHC.PrimopWrappers.writeInt64OffAddr#_info;
 },
 GHC.PrimopWrappers.writeInt64OffAddr#_entry() //  [R2, R3, R4]
         { info_tbl: [(cwIF,
                       label: GHC.PrimopWrappers.writeInt64OffAddr#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 16} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwIF: // global
           I64[R2 + (R3 << 3)] = R4;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.461213072 UTC

[section ""data" . GHC.PrimopWrappers.writeWord8OffAddr#_closure" {
     GHC.PrimopWrappers.writeWord8OffAddr#_closure:
         const GHC.PrimopWrappers.writeWord8OffAddr#_info;
 },
 GHC.PrimopWrappers.writeWord8OffAddr#_entry() //  [R2, R3, R4]
         { info_tbl: [(cwIM,
                       label: GHC.PrimopWrappers.writeWord8OffAddr#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 16} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwIM: // global
           I8[R2 + R3] = %MO_UU_Conv_W64_W8(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.462070339 UTC

[section ""data" . GHC.PrimopWrappers.writeWord16OffAddr#_closure" {
     GHC.PrimopWrappers.writeWord16OffAddr#_closure:
         const GHC.PrimopWrappers.writeWord16OffAddr#_info;
 },
 GHC.PrimopWrappers.writeWord16OffAddr#_entry() //  [R2, R3, R4]
         { info_tbl: [(cwIT,
                       label: GHC.PrimopWrappers.writeWord16OffAddr#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 16} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwIT: // global
           I16[R2 + (R3 << 1)] = %MO_UU_Conv_W64_W16(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.462887248 UTC

[section ""data" . GHC.PrimopWrappers.writeWord32OffAddr#_closure" {
     GHC.PrimopWrappers.writeWord32OffAddr#_closure:
         const GHC.PrimopWrappers.writeWord32OffAddr#_info;
 },
 GHC.PrimopWrappers.writeWord32OffAddr#_entry() //  [R2, R3, R4]
         { info_tbl: [(cwJ0,
                       label: GHC.PrimopWrappers.writeWord32OffAddr#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 16} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwJ0: // global
           I32[R2 + (R3 << 2)] = %MO_UU_Conv_W64_W32(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.463731927 UTC

[section ""data" . GHC.PrimopWrappers.writeWord64OffAddr#_closure" {
     GHC.PrimopWrappers.writeWord64OffAddr#_closure:
         const GHC.PrimopWrappers.writeWord64OffAddr#_info;
 },
 GHC.PrimopWrappers.writeWord64OffAddr#_entry() //  [R2, R3, R4]
         { info_tbl: [(cwJ7,
                       label: GHC.PrimopWrappers.writeWord64OffAddr#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 16} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwJ7: // global
           I64[R2 + (R3 << 3)] = R4;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.46458957 UTC

[section ""data" . GHC.PrimopWrappers.newMutVar#_closure" {
     GHC.PrimopWrappers.newMutVar#_closure:
         const GHC.PrimopWrappers.newMutVar#_info;
 },
 GHC.PrimopWrappers.newMutVar#_entry() //  [R2]
         { info_tbl: [(cwJe,
                       label: GHC.PrimopWrappers.newMutVar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwJe: // global
           R1 = R2;
           call stg_newMutVar#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.465474454 UTC

[section ""data" . GHC.PrimopWrappers.readMutVar#_closure" {
     GHC.PrimopWrappers.readMutVar#_closure:
         const GHC.PrimopWrappers.readMutVar#_info;
 },
 GHC.PrimopWrappers.readMutVar#_entry() //  [R2]
         { info_tbl: [(cwJm,
                       label: GHC.PrimopWrappers.readMutVar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwJm: // global
           R1 = P64[R2 + 8];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.466358465 UTC

[section ""data" . GHC.PrimopWrappers.writeMutVar#_closure" {
     GHC.PrimopWrappers.writeMutVar#_closure:
         const GHC.PrimopWrappers.writeMutVar#_info;
 },
 GHC.PrimopWrappers.writeMutVar#_entry() //  [R2, R3]
         { info_tbl: [(cwJw,
                       label: GHC.PrimopWrappers.writeMutVar#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwJw: // global
           _B2::P64 = R3;
           call MO_WriteBarrier();
           P64[R2 + 8] = _B2::P64;
           call "ccall" arg hints:  [PtrHint,
                                     PtrHint]  result hints:  [] dirty_MUT_VAR(BaseReg, R2);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.467244269 UTC

[section ""data" . GHC.PrimopWrappers.sameMutVar#_closure" {
     GHC.PrimopWrappers.sameMutVar#_closure:
         const GHC.PrimopWrappers.sameMutVar#_info;
 },
 GHC.PrimopWrappers.sameMutVar#_entry() //  [R2, R3]
         { info_tbl: [(cwJE,
                       label: GHC.PrimopWrappers.sameMutVar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwJE: // global
           R1 = R2 == R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.468119703 UTC

[section ""data" . GHC.PrimopWrappers.atomicModifyMutVar#_closure" {
     GHC.PrimopWrappers.atomicModifyMutVar#_closure:
         const GHC.PrimopWrappers.atomicModifyMutVar#_info;
 },
 GHC.PrimopWrappers.atomicModifyMutVar#_entry() //  [R2, R3]
         { info_tbl: [(cwJL,
                       label: GHC.PrimopWrappers.atomicModifyMutVar#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwJL: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_atomicModifyMutVar#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.468967106 UTC

[section ""data" . GHC.PrimopWrappers.casMutVar#_closure" {
     GHC.PrimopWrappers.casMutVar#_closure:
         const GHC.PrimopWrappers.casMutVar#_info;
 },
 GHC.PrimopWrappers.casMutVar#_entry() //  [R2, R3, R4]
         { info_tbl: [(cwJS,
                       label: GHC.PrimopWrappers.casMutVar#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwJS: // global
           _B3::P64 = R3;
           R3 = R4;
           _B4::P64 = R2;
           R2 = _B3::P64;
           R1 = _B4::P64;
           call stg_casMutVar#(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.470023997 UTC

[section ""data" . GHC.PrimopWrappers.catch#_closure" {
     GHC.PrimopWrappers.catch#_closure:
         const GHC.PrimopWrappers.catch#_info;
 },
 GHC.PrimopWrappers.catch#_entry() //  [R2, R3]
         { info_tbl: [(cwJZ,
                       label: GHC.PrimopWrappers.catch#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwJZ: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_catch#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.470837665 UTC

[section ""data" . GHC.PrimopWrappers.raise#_closure" {
     GHC.PrimopWrappers.raise#_closure:
         const GHC.PrimopWrappers.raise#_info;
 },
 GHC.PrimopWrappers.raise#_entry() //  [R2]
         { info_tbl: [(cwK6,
                       label: GHC.PrimopWrappers.raise#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwK6: // global
           R1 = R2;
           call stg_raise#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.471597653 UTC

[section ""data" . GHC.PrimopWrappers.raiseIO#_closure" {
     GHC.PrimopWrappers.raiseIO#_closure:
         const GHC.PrimopWrappers.raiseIO#_info;
 },
 GHC.PrimopWrappers.raiseIO#_entry() //  [R2]
         { info_tbl: [(cwKd,
                       label: GHC.PrimopWrappers.raiseIO#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwKd: // global
           R1 = R2;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.472367559 UTC

[section ""data" . GHC.PrimopWrappers.maskAsyncExceptions#_closure" {
     GHC.PrimopWrappers.maskAsyncExceptions#_closure:
         const GHC.PrimopWrappers.maskAsyncExceptions#_info;
 },
 GHC.PrimopWrappers.maskAsyncExceptions#_entry() //  [R2]
         { info_tbl: [(cwKk,
                       label: GHC.PrimopWrappers.maskAsyncExceptions#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwKk: // global
           R1 = R2;
           call stg_maskAsyncExceptions#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.473184925 UTC

[section ""data" . GHC.PrimopWrappers.maskUninterruptible#_closure" {
     GHC.PrimopWrappers.maskUninterruptible#_closure:
         const GHC.PrimopWrappers.maskUninterruptible#_info;
 },
 GHC.PrimopWrappers.maskUninterruptible#_entry() //  [R2]
         { info_tbl: [(cwKr,
                       label: GHC.PrimopWrappers.maskUninterruptible#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwKr: // global
           R1 = R2;
           call stg_maskUninterruptible#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.474001774 UTC

[section ""data" . GHC.PrimopWrappers.unmaskAsyncExceptions#_closure" {
     GHC.PrimopWrappers.unmaskAsyncExceptions#_closure:
         const GHC.PrimopWrappers.unmaskAsyncExceptions#_info;
 },
 GHC.PrimopWrappers.unmaskAsyncExceptions#_entry() //  [R2]
         { info_tbl: [(cwKy,
                       label: GHC.PrimopWrappers.unmaskAsyncExceptions#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwKy: // global
           R1 = R2;
           call stg_unmaskAsyncExceptions#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.474806495 UTC

[section ""data" . GHC.PrimopWrappers.getMaskingState#_closure" {
     GHC.PrimopWrappers.getMaskingState#_closure:
         const GHC.PrimopWrappers.getMaskingState#_info;
 },
 GHC.PrimopWrappers.getMaskingState#_entry() //  []
         { info_tbl: [(cwKF,
                       label: GHC.PrimopWrappers.getMaskingState#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwKF: // global
           call stg_getMaskingState#() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.475595497 UTC

[section ""data" . GHC.PrimopWrappers.atomically#_closure" {
     GHC.PrimopWrappers.atomically#_closure:
         const GHC.PrimopWrappers.atomically#_info;
 },
 GHC.PrimopWrappers.atomically#_entry() //  [R2]
         { info_tbl: [(cwKM,
                       label: GHC.PrimopWrappers.atomically#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwKM: // global
           R1 = R2;
           call stg_atomically#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.47642146 UTC

[section ""data" . GHC.PrimopWrappers.retry#_closure" {
     GHC.PrimopWrappers.retry#_closure:
         const GHC.PrimopWrappers.retry#_info;
 },
 GHC.PrimopWrappers.retry#_entry() //  []
         { info_tbl: [(cwKT,
                       label: GHC.PrimopWrappers.retry#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwKT: // global
           call stg_retry#() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.477222719 UTC

[section ""data" . GHC.PrimopWrappers.catchRetry#_closure" {
     GHC.PrimopWrappers.catchRetry#_closure:
         const GHC.PrimopWrappers.catchRetry#_info;
 },
 GHC.PrimopWrappers.catchRetry#_entry() //  [R2, R3]
         { info_tbl: [(cwL0,
                       label: GHC.PrimopWrappers.catchRetry#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwL0: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_catchRetry#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.478118564 UTC

[section ""data" . GHC.PrimopWrappers.catchSTM#_closure" {
     GHC.PrimopWrappers.catchSTM#_closure:
         const GHC.PrimopWrappers.catchSTM#_info;
 },
 GHC.PrimopWrappers.catchSTM#_entry() //  [R2, R3]
         { info_tbl: [(cwL7,
                       label: GHC.PrimopWrappers.catchSTM#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwL7: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_catchSTM#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.478959679 UTC

[section ""data" . GHC.PrimopWrappers.check#_closure" {
     GHC.PrimopWrappers.check#_closure:
         const GHC.PrimopWrappers.check#_info;
 },
 GHC.PrimopWrappers.check#_entry() //  [R2]
         { info_tbl: [(cwLe,
                       label: GHC.PrimopWrappers.check#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwLe: // global
           R1 = R2;
           call stg_check#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.479847325 UTC

[section ""data" . GHC.PrimopWrappers.newTVar#_closure" {
     GHC.PrimopWrappers.newTVar#_closure:
         const GHC.PrimopWrappers.newTVar#_info;
 },
 GHC.PrimopWrappers.newTVar#_entry() //  [R2]
         { info_tbl: [(cwLl,
                       label: GHC.PrimopWrappers.newTVar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwLl: // global
           R1 = R2;
           call stg_newTVar#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.480689827 UTC

[section ""data" . GHC.PrimopWrappers.readTVar#_closure" {
     GHC.PrimopWrappers.readTVar#_closure:
         const GHC.PrimopWrappers.readTVar#_info;
 },
 GHC.PrimopWrappers.readTVar#_entry() //  [R2]
         { info_tbl: [(cwLs,
                       label: GHC.PrimopWrappers.readTVar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwLs: // global
           R1 = R2;
           call stg_readTVar#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.482147698 UTC

[section ""data" . GHC.PrimopWrappers.readTVarIO#_closure" {
     GHC.PrimopWrappers.readTVarIO#_closure:
         const GHC.PrimopWrappers.readTVarIO#_info;
 },
 GHC.PrimopWrappers.readTVarIO#_entry() //  [R2]
         { info_tbl: [(cwLz,
                       label: GHC.PrimopWrappers.readTVarIO#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwLz: // global
           R1 = R2;
           call stg_readTVarIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.483027091 UTC

[section ""data" . GHC.PrimopWrappers.writeTVar#_closure" {
     GHC.PrimopWrappers.writeTVar#_closure:
         const GHC.PrimopWrappers.writeTVar#_info;
 },
 GHC.PrimopWrappers.writeTVar#_entry() //  [R2, R3]
         { info_tbl: [(cwLG,
                       label: GHC.PrimopWrappers.writeTVar#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwLG: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_writeTVar#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.484627058 UTC

[section ""data" . GHC.PrimopWrappers.sameTVar#_closure" {
     GHC.PrimopWrappers.sameTVar#_closure:
         const GHC.PrimopWrappers.sameTVar#_info;
 },
 GHC.PrimopWrappers.sameTVar#_entry() //  [R2, R3]
         { info_tbl: [(cwLO,
                       label: GHC.PrimopWrappers.sameTVar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwLO: // global
           R1 = R2 == R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.485458991 UTC

[section ""data" . GHC.PrimopWrappers.newMVar#_closure" {
     GHC.PrimopWrappers.newMVar#_closure:
         const GHC.PrimopWrappers.newMVar#_info;
 },
 GHC.PrimopWrappers.newMVar#_entry() //  []
         { info_tbl: [(cwLV,
                       label: GHC.PrimopWrappers.newMVar#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwLV: // global
           call stg_newMVar#() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.486235803 UTC

[section ""data" . GHC.PrimopWrappers.takeMVar#_closure" {
     GHC.PrimopWrappers.takeMVar#_closure:
         const GHC.PrimopWrappers.takeMVar#_info;
 },
 GHC.PrimopWrappers.takeMVar#_entry() //  [R2]
         { info_tbl: [(cwM2,
                       label: GHC.PrimopWrappers.takeMVar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwM2: // global
           R1 = R2;
           call stg_takeMVar#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.487056341 UTC

[section ""data" . GHC.PrimopWrappers.tryTakeMVar#_closure" {
     GHC.PrimopWrappers.tryTakeMVar#_closure:
         const GHC.PrimopWrappers.tryTakeMVar#_info;
 },
 GHC.PrimopWrappers.tryTakeMVar#_entry() //  [R2]
         { info_tbl: [(cwM9,
                       label: GHC.PrimopWrappers.tryTakeMVar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwM9: // global
           R1 = R2;
           call stg_tryTakeMVar#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.487850489 UTC

[section ""data" . GHC.PrimopWrappers.putMVar#_closure" {
     GHC.PrimopWrappers.putMVar#_closure:
         const GHC.PrimopWrappers.putMVar#_info;
 },
 GHC.PrimopWrappers.putMVar#_entry() //  [R2, R3]
         { info_tbl: [(cwMg,
                       label: GHC.PrimopWrappers.putMVar#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwMg: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_putMVar#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.488656078 UTC

[section ""data" . GHC.PrimopWrappers.tryPutMVar#_closure" {
     GHC.PrimopWrappers.tryPutMVar#_closure:
         const GHC.PrimopWrappers.tryPutMVar#_info;
 },
 GHC.PrimopWrappers.tryPutMVar#_entry() //  [R2, R3]
         { info_tbl: [(cwMn,
                       label: GHC.PrimopWrappers.tryPutMVar#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwMn: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_tryPutMVar#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.48953045 UTC

[section ""data" . GHC.PrimopWrappers.readMVar#_closure" {
     GHC.PrimopWrappers.readMVar#_closure:
         const GHC.PrimopWrappers.readMVar#_info;
 },
 GHC.PrimopWrappers.readMVar#_entry() //  [R2]
         { info_tbl: [(cwMu,
                       label: GHC.PrimopWrappers.readMVar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwMu: // global
           R1 = R2;
           call stg_readMVar#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.4902983 UTC

[section ""data" . GHC.PrimopWrappers.tryReadMVar#_closure" {
     GHC.PrimopWrappers.tryReadMVar#_closure:
         const GHC.PrimopWrappers.tryReadMVar#_info;
 },
 GHC.PrimopWrappers.tryReadMVar#_entry() //  [R2]
         { info_tbl: [(cwMB,
                       label: GHC.PrimopWrappers.tryReadMVar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwMB: // global
           R1 = R2;
           call stg_tryReadMVar#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.49112486 UTC

[section ""data" . GHC.PrimopWrappers.sameMVar#_closure" {
     GHC.PrimopWrappers.sameMVar#_closure:
         const GHC.PrimopWrappers.sameMVar#_info;
 },
 GHC.PrimopWrappers.sameMVar#_entry() //  [R2, R3]
         { info_tbl: [(cwMJ,
                       label: GHC.PrimopWrappers.sameMVar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwMJ: // global
           R1 = R2 == R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.4918996 UTC

[section ""data" . GHC.PrimopWrappers.isEmptyMVar#_closure" {
     GHC.PrimopWrappers.isEmptyMVar#_closure:
         const GHC.PrimopWrappers.isEmptyMVar#_info;
 },
 GHC.PrimopWrappers.isEmptyMVar#_entry() //  [R2]
         { info_tbl: [(cwMQ,
                       label: GHC.PrimopWrappers.isEmptyMVar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwMQ: // global
           R1 = R2;
           call stg_isEmptyMVar#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.492679217 UTC

[section ""data" . GHC.PrimopWrappers.delay#_closure" {
     GHC.PrimopWrappers.delay#_closure:
         const GHC.PrimopWrappers.delay#_info;
 },
 GHC.PrimopWrappers.delay#_entry() //  [R2]
         { info_tbl: [(cwMX,
                       label: GHC.PrimopWrappers.delay#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwMX: // global
           R1 = R2;
           call stg_delay#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.493504512 UTC

[section ""data" . GHC.PrimopWrappers.waitRead#_closure" {
     GHC.PrimopWrappers.waitRead#_closure:
         const GHC.PrimopWrappers.waitRead#_info;
 },
 GHC.PrimopWrappers.waitRead#_entry() //  [R2]
         { info_tbl: [(cwN4,
                       label: GHC.PrimopWrappers.waitRead#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwN4: // global
           R1 = R2;
           call stg_waitRead#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.494212544 UTC

[section ""data" . GHC.PrimopWrappers.waitWrite#_closure" {
     GHC.PrimopWrappers.waitWrite#_closure:
         const GHC.PrimopWrappers.waitWrite#_info;
 },
 GHC.PrimopWrappers.waitWrite#_entry() //  [R2]
         { info_tbl: [(cwNb,
                       label: GHC.PrimopWrappers.waitWrite#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwNb: // global
           R1 = R2;
           call stg_waitWrite#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.494979057 UTC

[section ""data" . GHC.PrimopWrappers.fork#_closure" {
     GHC.PrimopWrappers.fork#_closure:
         const GHC.PrimopWrappers.fork#_info;
 },
 GHC.PrimopWrappers.fork#_entry() //  [R2]
         { info_tbl: [(cwNi,
                       label: GHC.PrimopWrappers.fork#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwNi: // global
           R1 = R2;
           call stg_fork#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.49576081 UTC

[section ""data" . GHC.PrimopWrappers.forkOn#_closure" {
     GHC.PrimopWrappers.forkOn#_closure:
         const GHC.PrimopWrappers.forkOn#_info;
 },
 GHC.PrimopWrappers.forkOn#_entry() //  [R2, R3]
         { info_tbl: [(cwNp,
                       label: GHC.PrimopWrappers.forkOn#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 13} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwNp: // global
           _B3::I64 = R2;
           R2 = R3;
           R1 = _B3::I64;
           call stg_forkOn#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.496556711 UTC

[section ""data" . GHC.PrimopWrappers.killThread#_closure" {
     GHC.PrimopWrappers.killThread#_closure:
         const GHC.PrimopWrappers.killThread#_info;
 },
 GHC.PrimopWrappers.killThread#_entry() //  [R2, R3]
         { info_tbl: [(cwNw,
                       label: GHC.PrimopWrappers.killThread#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwNw: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_killThread#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.497406888 UTC

[section ""data" . GHC.PrimopWrappers.yield#_closure" {
     GHC.PrimopWrappers.yield#_closure:
         const GHC.PrimopWrappers.yield#_info;
 },
 GHC.PrimopWrappers.yield#_entry() //  []
         { info_tbl: [(cwND,
                       label: GHC.PrimopWrappers.yield#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwND: // global
           call stg_yield#() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.498193189 UTC

[section ""data" . GHC.PrimopWrappers.myThreadId#_closure" {
     GHC.PrimopWrappers.myThreadId#_closure:
         const GHC.PrimopWrappers.myThreadId#_info;
 },
 GHC.PrimopWrappers.myThreadId#_entry() //  []
         { info_tbl: [(cwNL,
                       label: GHC.PrimopWrappers.myThreadId#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwNL: // global
           R1 = CurrentTSO;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.498970436 UTC

[section ""data" . GHC.PrimopWrappers.labelThread#_closure" {
     GHC.PrimopWrappers.labelThread#_closure:
         const GHC.PrimopWrappers.labelThread#_info;
 },
 GHC.PrimopWrappers.labelThread#_entry() //  [R2, R3]
         { info_tbl: [(cwNS,
                       label: GHC.PrimopWrappers.labelThread#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwNS: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_labelThread#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.499737751 UTC

[section ""data" . GHC.PrimopWrappers.isCurrentThreadBound#_closure" {
     GHC.PrimopWrappers.isCurrentThreadBound#_closure:
         const GHC.PrimopWrappers.isCurrentThreadBound#_info;
 },
 GHC.PrimopWrappers.isCurrentThreadBound#_entry() //  []
         { info_tbl: [(cwNZ,
                       label: GHC.PrimopWrappers.isCurrentThreadBound#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwNZ: // global
           call stg_isCurrentThreadBound#() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.500486158 UTC

[section ""data" . GHC.PrimopWrappers.noDuplicate#_closure" {
     GHC.PrimopWrappers.noDuplicate#_closure:
         const GHC.PrimopWrappers.noDuplicate#_info;
 },
 GHC.PrimopWrappers.noDuplicate#_entry() //  []
         { info_tbl: [(cwO6,
                       label: GHC.PrimopWrappers.noDuplicate#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwO6: // global
           call stg_noDuplicate#() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.501340537 UTC

[section ""data" . GHC.PrimopWrappers.threadStatus#_closure" {
     GHC.PrimopWrappers.threadStatus#_closure:
         const GHC.PrimopWrappers.threadStatus#_info;
 },
 GHC.PrimopWrappers.threadStatus#_entry() //  [R2]
         { info_tbl: [(cwOd,
                       label: GHC.PrimopWrappers.threadStatus#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwOd: // global
           R1 = R2;
           call stg_threadStatus#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.502122451 UTC

[section ""data" . GHC.PrimopWrappers.mkWeak#_closure" {
     GHC.PrimopWrappers.mkWeak#_closure:
         const GHC.PrimopWrappers.mkWeak#_info;
 },
 GHC.PrimopWrappers.mkWeak#_entry() //  [R2, R3, R4]
         { info_tbl: [(cwOk,
                       label: GHC.PrimopWrappers.mkWeak#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwOk: // global
           _B3::P64 = R3;
           R3 = R4;
           _B4::P64 = R2;
           R2 = _B3::P64;
           R1 = _B4::P64;
           call stg_mkWeak#(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.502972186 UTC

[section ""data" . GHC.PrimopWrappers.mkWeakNoFinalizer#_closure" {
     GHC.PrimopWrappers.mkWeakNoFinalizer#_closure:
         const GHC.PrimopWrappers.mkWeakNoFinalizer#_info;
 },
 GHC.PrimopWrappers.mkWeakNoFinalizer#_entry() //  [R2, R3]
         { info_tbl: [(cwOr,
                       label: GHC.PrimopWrappers.mkWeakNoFinalizer#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwOr: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_mkWeakNoFinalizer#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.503917809 UTC

[section ""data" . GHC.PrimopWrappers.addCFinalizerToWeak#_closure" {
     GHC.PrimopWrappers.addCFinalizerToWeak#_closure:
         const GHC.PrimopWrappers.addCFinalizerToWeak#_info;
 },
 GHC.PrimopWrappers.addCFinalizerToWeak#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwOv: // global
           R6 = P64[Sp + 32];
           R5 = I64[Sp + 24];
           R4 = I64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = I64[Sp];
           R1 = R1;
           Sp = Sp + 40;
           call GHC.PrimopWrappers.addCFinalizerToWeak#_entry(R6,
                                                              R5,
                                                              R4,
                                                              R3,
                                                              R2,
                                                              R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.addCFinalizerToWeak#_entry() //  [R2, R3, R4,
                                                      R5, R6]
         { info_tbl: [(cwOz,
                       label: GHC.PrimopWrappers.addCFinalizerToWeak#_info
                       rep:HeapRep static {
                             Fun {arity: 6 fun_type: ArgGen [True, True, True, True, False]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwOz: // global
           _B3::I64 = R5;
           R5 = R6;
           _B4::I64 = R4;
           R4 = _B3::I64;
           _B5::I64 = R3;
           R3 = _B4::I64;
           _B6::I64 = R2;
           R2 = _B5::I64;
           R1 = _B6::I64;
           call stg_addCFinalizerToWeak#(R5,
                                         R4,
                                         R3,
                                         R2,
                                         R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.505041887 UTC

[section ""data" . GHC.PrimopWrappers.deRefWeak#_closure" {
     GHC.PrimopWrappers.deRefWeak#_closure:
         const GHC.PrimopWrappers.deRefWeak#_info;
 },
 GHC.PrimopWrappers.deRefWeak#_entry() //  [R2]
         { info_tbl: [(cwOG,
                       label: GHC.PrimopWrappers.deRefWeak#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwOG: // global
           R1 = R2;
           call stg_deRefWeak#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.505938679 UTC

[section ""data" . GHC.PrimopWrappers.finalizeWeak#_closure" {
     GHC.PrimopWrappers.finalizeWeak#_closure:
         const GHC.PrimopWrappers.finalizeWeak#_info;
 },
 GHC.PrimopWrappers.finalizeWeak#_entry() //  [R2]
         { info_tbl: [(cwON,
                       label: GHC.PrimopWrappers.finalizeWeak#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwON: // global
           R1 = R2;
           call stg_finalizeWeak#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.506775972 UTC

[section ""data" . GHC.PrimopWrappers.touch#_closure" {
     GHC.PrimopWrappers.touch#_closure:
         const GHC.PrimopWrappers.touch#_info;
 },
 GHC.PrimopWrappers.touch#_entry() //  [R2]
         { info_tbl: [(cwOV,
                       label: GHC.PrimopWrappers.touch#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwOV: // global
           call MO_Touch(R2);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.507611026 UTC

[section ""data" . GHC.PrimopWrappers.makeStablePtr#_closure" {
     GHC.PrimopWrappers.makeStablePtr#_closure:
         const GHC.PrimopWrappers.makeStablePtr#_info;
 },
 GHC.PrimopWrappers.makeStablePtr#_entry() //  [R2]
         { info_tbl: [(cwP2,
                       label: GHC.PrimopWrappers.makeStablePtr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwP2: // global
           R1 = R2;
           call stg_makeStablePtr#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.508424183 UTC

[section ""data" . GHC.PrimopWrappers.deRefStablePtr#_closure" {
     GHC.PrimopWrappers.deRefStablePtr#_closure:
         const GHC.PrimopWrappers.deRefStablePtr#_info;
 },
 GHC.PrimopWrappers.deRefStablePtr#_entry() //  [R2]
         { info_tbl: [(cwP9,
                       label: GHC.PrimopWrappers.deRefStablePtr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwP9: // global
           R1 = R2;
           call stg_deRefStablePtr#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.509330948 UTC

[section ""data" . GHC.PrimopWrappers.eqStablePtr#_closure" {
     GHC.PrimopWrappers.eqStablePtr#_closure:
         const GHC.PrimopWrappers.eqStablePtr#_info;
 },
 GHC.PrimopWrappers.eqStablePtr#_entry() //  [R2, R3]
         { info_tbl: [(cwPh,
                       label: GHC.PrimopWrappers.eqStablePtr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwPh: // global
           R1 = R2 == R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.510174223 UTC

[section ""data" . GHC.PrimopWrappers.makeStableName#_closure" {
     GHC.PrimopWrappers.makeStableName#_closure:
         const GHC.PrimopWrappers.makeStableName#_info;
 },
 GHC.PrimopWrappers.makeStableName#_entry() //  [R2]
         { info_tbl: [(cwPo,
                       label: GHC.PrimopWrappers.makeStableName#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwPo: // global
           R1 = R2;
           call stg_makeStableName#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.511064465 UTC

[section ""data" . GHC.PrimopWrappers.eqStableName#_closure" {
     GHC.PrimopWrappers.eqStableName#_closure:
         const GHC.PrimopWrappers.eqStableName#_info;
 },
 GHC.PrimopWrappers.eqStableName#_entry() //  [R2, R3]
         { info_tbl: [(cwPw,
                       label: GHC.PrimopWrappers.eqStableName#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwPw: // global
           R1 = I64[R2 + 8] == I64[R3 + 8];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.512644697 UTC

[section ""data" . GHC.PrimopWrappers.stableNameToInt#_closure" {
     GHC.PrimopWrappers.stableNameToInt#_closure:
         const GHC.PrimopWrappers.stableNameToInt#_info;
 },
 GHC.PrimopWrappers.stableNameToInt#_entry() //  [R2]
         { info_tbl: [(cwPE,
                       label: GHC.PrimopWrappers.stableNameToInt#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwPE: // global
           R1 = I64[R2 + 8];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.513552883 UTC

[section ""data" . GHC.PrimopWrappers.compactNew#_closure" {
     GHC.PrimopWrappers.compactNew#_closure:
         const GHC.PrimopWrappers.compactNew#_info;
 },
 GHC.PrimopWrappers.compactNew#_entry() //  [R2]
         { info_tbl: [(cwPL,
                       label: GHC.PrimopWrappers.compactNew#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwPL: // global
           R1 = R2;
           call stg_compactNew#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.514396437 UTC

[section ""data" . GHC.PrimopWrappers.compactResize#_closure" {
     GHC.PrimopWrappers.compactResize#_closure:
         const GHC.PrimopWrappers.compactResize#_info;
 },
 GHC.PrimopWrappers.compactResize#_entry() //  [R2, R3]
         { info_tbl: [(cwPS,
                       label: GHC.PrimopWrappers.compactResize#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwPS: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_compactResize#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.515251542 UTC

[section ""data" . GHC.PrimopWrappers.compactContains#_closure" {
     GHC.PrimopWrappers.compactContains#_closure:
         const GHC.PrimopWrappers.compactContains#_info;
 },
 GHC.PrimopWrappers.compactContains#_entry() //  [R2, R3]
         { info_tbl: [(cwPZ,
                       label: GHC.PrimopWrappers.compactContains#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwPZ: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_compactContains#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.516095434 UTC

[section ""data" . GHC.PrimopWrappers.compactContainsAny#_closure" {
     GHC.PrimopWrappers.compactContainsAny#_closure:
         const GHC.PrimopWrappers.compactContainsAny#_info;
 },
 GHC.PrimopWrappers.compactContainsAny#_entry() //  [R2]
         { info_tbl: [(cwQ6,
                       label: GHC.PrimopWrappers.compactContainsAny#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwQ6: // global
           R1 = R2;
           call stg_compactContainsAny#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.516938057 UTC

[section ""data" . GHC.PrimopWrappers.compactGetFirstBlock#_closure" {
     GHC.PrimopWrappers.compactGetFirstBlock#_closure:
         const GHC.PrimopWrappers.compactGetFirstBlock#_info;
 },
 GHC.PrimopWrappers.compactGetFirstBlock#_entry() //  [R2]
         { info_tbl: [(cwQd,
                       label: GHC.PrimopWrappers.compactGetFirstBlock#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwQd: // global
           R1 = R2;
           call stg_compactGetFirstBlock#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.518137313 UTC

[section ""data" . GHC.PrimopWrappers.compactGetNextBlock#_closure" {
     GHC.PrimopWrappers.compactGetNextBlock#_closure:
         const GHC.PrimopWrappers.compactGetNextBlock#_info;
 },
 GHC.PrimopWrappers.compactGetNextBlock#_entry() //  [R2, R3]
         { info_tbl: [(cwQk,
                       label: GHC.PrimopWrappers.compactGetNextBlock#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwQk: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_compactGetNextBlock#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.518962288 UTC

[section ""data" . GHC.PrimopWrappers.compactAllocateBlock#_closure" {
     GHC.PrimopWrappers.compactAllocateBlock#_closure:
         const GHC.PrimopWrappers.compactAllocateBlock#_info;
 },
 GHC.PrimopWrappers.compactAllocateBlock#_entry() //  [R2, R3]
         { info_tbl: [(cwQr,
                       label: GHC.PrimopWrappers.compactAllocateBlock#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwQr: // global
           _B3::I64 = R2;
           R2 = R3;
           R1 = _B3::I64;
           call stg_compactAllocateBlock#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.519767729 UTC

[section ""data" . GHC.PrimopWrappers.compactFixupPointers#_closure" {
     GHC.PrimopWrappers.compactFixupPointers#_closure:
         const GHC.PrimopWrappers.compactFixupPointers#_info;
 },
 GHC.PrimopWrappers.compactFixupPointers#_entry() //  [R2, R3]
         { info_tbl: [(cwQy,
                       label: GHC.PrimopWrappers.compactFixupPointers#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwQy: // global
           _B3::I64 = R2;
           R2 = R3;
           R1 = _B3::I64;
           call stg_compactFixupPointers#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.520603246 UTC

[section ""data" . GHC.PrimopWrappers.compactAdd#_closure" {
     GHC.PrimopWrappers.compactAdd#_closure:
         const GHC.PrimopWrappers.compactAdd#_info;
 },
 GHC.PrimopWrappers.compactAdd#_entry() //  [R2, R3]
         { info_tbl: [(cwQF,
                       label: GHC.PrimopWrappers.compactAdd#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwQF: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_compactAdd#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.521513086 UTC

[section ""data" . GHC.PrimopWrappers.compactAddWithSharing#_closure" {
     GHC.PrimopWrappers.compactAddWithSharing#_closure:
         const GHC.PrimopWrappers.compactAddWithSharing#_info;
 },
 GHC.PrimopWrappers.compactAddWithSharing#_entry() //  [R2, R3]
         { info_tbl: [(cwQM,
                       label: GHC.PrimopWrappers.compactAddWithSharing#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwQM: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_compactAddWithSharing#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.522328026 UTC

[section ""data" . GHC.PrimopWrappers.compactSize#_closure" {
     GHC.PrimopWrappers.compactSize#_closure:
         const GHC.PrimopWrappers.compactSize#_info;
 },
 GHC.PrimopWrappers.compactSize#_entry() //  [R2]
         { info_tbl: [(cwQT,
                       label: GHC.PrimopWrappers.compactSize#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwQT: // global
           R1 = R2;
           call stg_compactSize#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.523134208 UTC

[section ""data" . GHC.PrimopWrappers.reallyUnsafePtrEquality#_closure" {
     GHC.PrimopWrappers.reallyUnsafePtrEquality#_closure:
         const GHC.PrimopWrappers.reallyUnsafePtrEquality#_info;
 },
 GHC.PrimopWrappers.reallyUnsafePtrEquality#_entry() //  [R2, R3]
         { info_tbl: [(cwR1,
                       label: GHC.PrimopWrappers.reallyUnsafePtrEquality#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwR1: // global
           R1 = R2 == R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.523951357 UTC

[section ""data" . GHC.PrimopWrappers.par#_closure" {
     GHC.PrimopWrappers.par#_closure:
         const GHC.PrimopWrappers.par#_info;
 },
 GHC.PrimopWrappers.par#_entry() //  [R2]
         { info_tbl: [(cwRc,
                       label: GHC.PrimopWrappers.par#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwRc: // global
           (_cwR8::I64) = call "ccall" arg hints:  [PtrHint,
                                                    PtrHint]  result hints:  [] newSpark(BaseReg, R2);
           R1 = _cwR8::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.524896076 UTC

[section ""data" . GHC.PrimopWrappers.spark#_closure" {
     GHC.PrimopWrappers.spark#_closure:
         const GHC.PrimopWrappers.spark#_info;
 },
 GHC.PrimopWrappers.spark#_entry() //  [R2]
         { info_tbl: [(cwRo,
                       label: GHC.PrimopWrappers.spark#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwRo: // global
           (_cwRk::I64) = call "ccall" arg hints:  [PtrHint,
                                                    PtrHint]  result hints:  [] newSpark(BaseReg, R2);
           R1 = R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.525791749 UTC

[section ""data" . GHC.PrimopWrappers.seq#_closure" {
     GHC.PrimopWrappers.seq#_closure:
         const GHC.PrimopWrappers.seq#_info;
 },
 GHC.PrimopWrappers.seq#_entry() //  [R2]
         { info_tbl: [(cwRv,
                       label: GHC.PrimopWrappers.seq#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwRv: // global
           R1 = R2;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.52655742 UTC

[section ""data" . GHC.PrimopWrappers.getSpark#_closure" {
     GHC.PrimopWrappers.getSpark#_closure:
         const GHC.PrimopWrappers.getSpark#_info;
 },
 GHC.PrimopWrappers.getSpark#_entry() //  []
         { info_tbl: [(cwRC,
                       label: GHC.PrimopWrappers.getSpark#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwRC: // global
           call stg_getSpark#() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.527355247 UTC

[section ""data" . GHC.PrimopWrappers.numSparks#_closure" {
     GHC.PrimopWrappers.numSparks#_closure:
         const GHC.PrimopWrappers.numSparks#_info;
 },
 GHC.PrimopWrappers.numSparks#_entry() //  []
         { info_tbl: [(cwRJ,
                       label: GHC.PrimopWrappers.numSparks#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwRJ: // global
           call stg_numSparks#() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.528285423 UTC

[section ""data" . GHC.PrimopWrappers.dataToTag#_closure" {
     GHC.PrimopWrappers.dataToTag#_closure:
         const GHC.PrimopWrappers.dataToTag#_info;
 },
 GHC.PrimopWrappers.dataToTag#_entry() //  [R2]
         { info_tbl: [(cwRT,
                       label: GHC.PrimopWrappers.dataToTag#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwRT: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cwRU; else goto cwRV;
       cwRU: // global
           R2 = R2;
           R1 = GHC.PrimopWrappers.dataToTag#_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cwRV: // global
           I64[Sp - 8] = block_cwRQ_info;
           R1 = R2;
           Sp = Sp - 8;
           call stg_ap_0_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cwRQ() //  [R1]
         { info_tbl: [(cwRQ,
                       label: block_cwRQ_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwRQ: // global
           R1 = %MO_UU_Conv_W32_W64(I32[I64[R1 & (-8)] + 20]);
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.529414205 UTC

[section ""data" . GHC.PrimopWrappers.addrToAny#_closure" {
     GHC.PrimopWrappers.addrToAny#_closure:
         const GHC.PrimopWrappers.addrToAny#_info;
 },
 GHC.PrimopWrappers.addrToAny#_entry() //  [R2]
         { info_tbl: [(cwS2,
                       label: GHC.PrimopWrappers.addrToAny#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwS2: // global
           R1 = R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.530197807 UTC

[section ""data" . GHC.PrimopWrappers.anyToAddr#_closure" {
     GHC.PrimopWrappers.anyToAddr#_closure:
         const GHC.PrimopWrappers.anyToAddr#_info;
 },
 GHC.PrimopWrappers.anyToAddr#_entry() //  [R2]
         { info_tbl: [(cwSa,
                       label: GHC.PrimopWrappers.anyToAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwSa: // global
           R1 = R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.531028991 UTC

[section ""data" . GHC.PrimopWrappers.mkApUpd0#_closure" {
     GHC.PrimopWrappers.mkApUpd0#_closure:
         const GHC.PrimopWrappers.mkApUpd0#_info;
 },
 GHC.PrimopWrappers.mkApUpd0#_entry() //  [R2]
         { info_tbl: [(cwSh,
                       label: GHC.PrimopWrappers.mkApUpd0#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwSh: // global
           R1 = R2;
           call stg_mkApUpd0#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.531957089 UTC

[section ""data" . GHC.PrimopWrappers.newBCO#_closure" {
     GHC.PrimopWrappers.newBCO#_closure:
         const GHC.PrimopWrappers.newBCO#_info;
 },
 GHC.PrimopWrappers.newBCO#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwSl: // global
           R6 = P64[Sp + 32];
           R5 = I64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = P64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 40;
           call GHC.PrimopWrappers.newBCO#_entry(R6,
                                                 R5,
                                                 R4,
                                                 R3,
                                                 R2,
                                                 R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.newBCO#_entry() //  [R2, R3, R4, R5, R6]
         { info_tbl: [(cwSp,
                       label: GHC.PrimopWrappers.newBCO#_info
                       rep:HeapRep static {
                             Fun {arity: 6
                                  fun_type: ArgGen [False, False, False, True, False]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwSp: // global
           _B3::I64 = R5;
           R5 = R6;
           _B4::P64 = R4;
           R4 = _B3::I64;
           _B5::P64 = R3;
           R3 = _B4::P64;
           _B6::P64 = R2;
           R2 = _B5::P64;
           R1 = _B6::P64;
           call stg_newBCO#(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.53306583 UTC

[section ""data" . GHC.PrimopWrappers.unpackClosure#_closure" {
     GHC.PrimopWrappers.unpackClosure#_closure:
         const GHC.PrimopWrappers.unpackClosure#_info;
 },
 GHC.PrimopWrappers.unpackClosure#_entry() //  [R2]
         { info_tbl: [(cwSw,
                       label: GHC.PrimopWrappers.unpackClosure#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwSw: // global
           R1 = R2;
           call stg_unpackClosure#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.533929316 UTC

[section ""data" . GHC.PrimopWrappers.getApStackVal#_closure" {
     GHC.PrimopWrappers.getApStackVal#_closure:
         const GHC.PrimopWrappers.getApStackVal#_info;
 },
 GHC.PrimopWrappers.getApStackVal#_entry() //  [R2, R3]
         { info_tbl: [(cwSD,
                       label: GHC.PrimopWrappers.getApStackVal#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwSD: // global
           _B2::P64 = R2;
           R2 = R3;
           R1 = _B2::P64;
           call stg_getApStackVal#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.534793236 UTC

[section ""data" . GHC.PrimopWrappers.getCCSOf#_closure" {
     GHC.PrimopWrappers.getCCSOf#_closure:
         const GHC.PrimopWrappers.getCCSOf#_info;
 },
 GHC.PrimopWrappers.getCCSOf#_entry() //  []
         { info_tbl: [(cwSL,
                       label: GHC.PrimopWrappers.getCCSOf#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwSL: // global
           R1 = 0;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.535626024 UTC

[section ""data" . GHC.PrimopWrappers.getCurrentCCS#_closure" {
     GHC.PrimopWrappers.getCurrentCCS#_closure:
         const GHC.PrimopWrappers.getCurrentCCS#_info;
 },
 GHC.PrimopWrappers.getCurrentCCS#_entry() //  []
         { info_tbl: [(cwST,
                       label: GHC.PrimopWrappers.getCurrentCCS#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwST: // global
           R1 = CCCS;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.536438835 UTC

[section ""data" . GHC.PrimopWrappers.clearCCS#_closure" {
     GHC.PrimopWrappers.clearCCS#_closure:
         const GHC.PrimopWrappers.clearCCS#_info;
 },
 GHC.PrimopWrappers.clearCCS#_entry() //  [R2]
         { info_tbl: [(cwT0,
                       label: GHC.PrimopWrappers.clearCCS#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwT0: // global
           R1 = R2;
           call stg_clearCCS#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.537541429 UTC

[section ""data" . GHC.PrimopWrappers.traceEvent#_closure" {
     GHC.PrimopWrappers.traceEvent#_closure:
         const GHC.PrimopWrappers.traceEvent#_info;
 },
 GHC.PrimopWrappers.traceEvent#_entry() //  [R2]
         { info_tbl: [(cwT7,
                       label: GHC.PrimopWrappers.traceEvent#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwT7: // global
           R1 = R2;
           call stg_traceEvent#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.538375092 UTC

[section ""data" . GHC.PrimopWrappers.traceMarker#_closure" {
     GHC.PrimopWrappers.traceMarker#_closure:
         const GHC.PrimopWrappers.traceMarker#_info;
 },
 GHC.PrimopWrappers.traceMarker#_entry() //  [R2]
         { info_tbl: [(cwTe,
                       label: GHC.PrimopWrappers.traceMarker#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwTe: // global
           R1 = R2;
           call stg_traceMarker#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.539343767 UTC

[section ""data" . GHC.PrimopWrappers.prefetchByteArray3#_closure" {
     GHC.PrimopWrappers.prefetchByteArray3#_closure:
         const GHC.PrimopWrappers.prefetchByteArray3#_info;
 },
 GHC.PrimopWrappers.prefetchByteArray3#_entry() //  [R2, R3]
         { info_tbl: [(cwTm,
                       label: GHC.PrimopWrappers.prefetchByteArray3#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwTm: // global
           _cwTl::P64 = (R2 + 16) + R3;
           call MO_Prefetch_Data 3(_cwTl::P64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.540906235 UTC

[section ""data" . GHC.PrimopWrappers.prefetchMutableByteArray3#_closure" {
     GHC.PrimopWrappers.prefetchMutableByteArray3#_closure:
         const GHC.PrimopWrappers.prefetchMutableByteArray3#_info;
 },
 GHC.PrimopWrappers.prefetchMutableByteArray3#_entry() //  [R2, R3]
         { info_tbl: [(cwTu,
                       label: GHC.PrimopWrappers.prefetchMutableByteArray3#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwTu: // global
           _cwTt::P64 = (R2 + 16) + R3;
           call MO_Prefetch_Data 3(_cwTt::P64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.541837001 UTC

[section ""data" . GHC.PrimopWrappers.prefetchAddr3#_closure" {
     GHC.PrimopWrappers.prefetchAddr3#_closure:
         const GHC.PrimopWrappers.prefetchAddr3#_info;
 },
 GHC.PrimopWrappers.prefetchAddr3#_entry() //  [R2, R3]
         { info_tbl: [(cwTC,
                       label: GHC.PrimopWrappers.prefetchAddr3#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwTC: // global
           _cwTB::I64 = R2 + R3;
           call MO_Prefetch_Data 3(_cwTB::I64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.542704477 UTC

[section ""data" . GHC.PrimopWrappers.prefetchValue3#_closure" {
     GHC.PrimopWrappers.prefetchValue3#_closure:
         const GHC.PrimopWrappers.prefetchValue3#_info;
 },
 GHC.PrimopWrappers.prefetchValue3#_entry() //  [R2]
         { info_tbl: [(cwTK,
                       label: GHC.PrimopWrappers.prefetchValue3#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwTK: // global
           call MO_Prefetch_Data 3(R2);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.543542606 UTC

[section ""data" . GHC.PrimopWrappers.prefetchByteArray2#_closure" {
     GHC.PrimopWrappers.prefetchByteArray2#_closure:
         const GHC.PrimopWrappers.prefetchByteArray2#_info;
 },
 GHC.PrimopWrappers.prefetchByteArray2#_entry() //  [R2, R3]
         { info_tbl: [(cwTS,
                       label: GHC.PrimopWrappers.prefetchByteArray2#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwTS: // global
           _cwTR::P64 = (R2 + 16) + R3;
           call MO_Prefetch_Data 2(_cwTR::P64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.544418423 UTC

[section ""data" . GHC.PrimopWrappers.prefetchMutableByteArray2#_closure" {
     GHC.PrimopWrappers.prefetchMutableByteArray2#_closure:
         const GHC.PrimopWrappers.prefetchMutableByteArray2#_info;
 },
 GHC.PrimopWrappers.prefetchMutableByteArray2#_entry() //  [R2, R3]
         { info_tbl: [(cwU0,
                       label: GHC.PrimopWrappers.prefetchMutableByteArray2#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwU0: // global
           _cwTZ::P64 = (R2 + 16) + R3;
           call MO_Prefetch_Data 2(_cwTZ::P64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.54532019 UTC

[section ""data" . GHC.PrimopWrappers.prefetchAddr2#_closure" {
     GHC.PrimopWrappers.prefetchAddr2#_closure:
         const GHC.PrimopWrappers.prefetchAddr2#_info;
 },
 GHC.PrimopWrappers.prefetchAddr2#_entry() //  [R2, R3]
         { info_tbl: [(cwU8,
                       label: GHC.PrimopWrappers.prefetchAddr2#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwU8: // global
           _cwU7::I64 = R2 + R3;
           call MO_Prefetch_Data 2(_cwU7::I64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.546111435 UTC

[section ""data" . GHC.PrimopWrappers.prefetchValue2#_closure" {
     GHC.PrimopWrappers.prefetchValue2#_closure:
         const GHC.PrimopWrappers.prefetchValue2#_info;
 },
 GHC.PrimopWrappers.prefetchValue2#_entry() //  [R2]
         { info_tbl: [(cwUg,
                       label: GHC.PrimopWrappers.prefetchValue2#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwUg: // global
           call MO_Prefetch_Data 2(R2);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.54694744 UTC

[section ""data" . GHC.PrimopWrappers.prefetchByteArray1#_closure" {
     GHC.PrimopWrappers.prefetchByteArray1#_closure:
         const GHC.PrimopWrappers.prefetchByteArray1#_info;
 },
 GHC.PrimopWrappers.prefetchByteArray1#_entry() //  [R2, R3]
         { info_tbl: [(cwUo,
                       label: GHC.PrimopWrappers.prefetchByteArray1#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwUo: // global
           _cwUn::P64 = (R2 + 16) + R3;
           call MO_Prefetch_Data 1(_cwUn::P64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.547788074 UTC

[section ""data" . GHC.PrimopWrappers.prefetchMutableByteArray1#_closure" {
     GHC.PrimopWrappers.prefetchMutableByteArray1#_closure:
         const GHC.PrimopWrappers.prefetchMutableByteArray1#_info;
 },
 GHC.PrimopWrappers.prefetchMutableByteArray1#_entry() //  [R2, R3]
         { info_tbl: [(cwUw,
                       label: GHC.PrimopWrappers.prefetchMutableByteArray1#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwUw: // global
           _cwUv::P64 = (R2 + 16) + R3;
           call MO_Prefetch_Data 1(_cwUv::P64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.548647903 UTC

[section ""data" . GHC.PrimopWrappers.prefetchAddr1#_closure" {
     GHC.PrimopWrappers.prefetchAddr1#_closure:
         const GHC.PrimopWrappers.prefetchAddr1#_info;
 },
 GHC.PrimopWrappers.prefetchAddr1#_entry() //  [R2, R3]
         { info_tbl: [(cwUE,
                       label: GHC.PrimopWrappers.prefetchAddr1#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwUE: // global
           _cwUD::I64 = R2 + R3;
           call MO_Prefetch_Data 1(_cwUD::I64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.550265211 UTC

[section ""data" . GHC.PrimopWrappers.prefetchValue1#_closure" {
     GHC.PrimopWrappers.prefetchValue1#_closure:
         const GHC.PrimopWrappers.prefetchValue1#_info;
 },
 GHC.PrimopWrappers.prefetchValue1#_entry() //  [R2]
         { info_tbl: [(cwUM,
                       label: GHC.PrimopWrappers.prefetchValue1#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwUM: // global
           call MO_Prefetch_Data 1(R2);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.551116084 UTC

[section ""data" . GHC.PrimopWrappers.prefetchByteArray0#_closure" {
     GHC.PrimopWrappers.prefetchByteArray0#_closure:
         const GHC.PrimopWrappers.prefetchByteArray0#_info;
 },
 GHC.PrimopWrappers.prefetchByteArray0#_entry() //  [R2, R3]
         { info_tbl: [(cwUU,
                       label: GHC.PrimopWrappers.prefetchByteArray0#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwUU: // global
           _cwUT::P64 = (R2 + 16) + R3;
           call MO_Prefetch_Data 0(_cwUT::P64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.551991682 UTC

[section ""data" . GHC.PrimopWrappers.prefetchMutableByteArray0#_closure" {
     GHC.PrimopWrappers.prefetchMutableByteArray0#_closure:
         const GHC.PrimopWrappers.prefetchMutableByteArray0#_info;
 },
 GHC.PrimopWrappers.prefetchMutableByteArray0#_entry() //  [R2, R3]
         { info_tbl: [(cwV2,
                       label: GHC.PrimopWrappers.prefetchMutableByteArray0#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwV2: // global
           _cwV1::P64 = (R2 + 16) + R3;
           call MO_Prefetch_Data 0(_cwV1::P64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.55284232 UTC

[section ""data" . GHC.PrimopWrappers.prefetchAddr0#_closure" {
     GHC.PrimopWrappers.prefetchAddr0#_closure:
         const GHC.PrimopWrappers.prefetchAddr0#_info;
 },
 GHC.PrimopWrappers.prefetchAddr0#_entry() //  [R2, R3]
         { info_tbl: [(cwVa,
                       label: GHC.PrimopWrappers.prefetchAddr0#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwVa: // global
           _cwV9::I64 = R2 + R3;
           call MO_Prefetch_Data 0(_cwV9::I64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.553709625 UTC

[section ""data" . GHC.PrimopWrappers.prefetchValue0#_closure" {
     GHC.PrimopWrappers.prefetchValue0#_closure:
         const GHC.PrimopWrappers.prefetchValue0#_info;
 },
 GHC.PrimopWrappers.prefetchValue0#_entry() //  [R2]
         { info_tbl: [(cwVi,
                       label: GHC.PrimopWrappers.prefetchValue0#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwVi: // global
           call MO_Prefetch_Data 0(R2);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.554399627 UTC

[section ""cstring" . GHC.PrimopWrappers.$trModule4_bytes" {
     GHC.PrimopWrappers.$trModule4_bytes:
         I8[] [103,104,99,45,112,114,105,109]
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.554972161 UTC

[section ""data" . GHC.PrimopWrappers.$trModule3_closure" {
     GHC.PrimopWrappers.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.PrimopWrappers.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.555527718 UTC

[section ""cstring" . GHC.PrimopWrappers.$trModule2_bytes" {
     GHC.PrimopWrappers.$trModule2_bytes:
         I8[] [71,72,67,46,80,114,105,109,111,112,87,114,97,112,112,101,114,115]
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.55607076 UTC

[section ""data" . GHC.PrimopWrappers.$trModule1_closure" {
     GHC.PrimopWrappers.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.PrimopWrappers.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.556628685 UTC

[section ""data" . GHC.PrimopWrappers.$trModule_closure" {
     GHC.PrimopWrappers.$trModule_closure:
         const GHC.Types.Module_con_info;
         const GHC.PrimopWrappers.$trModule3_closure+1;
         const GHC.PrimopWrappers.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.557209402 UTC

[section ""relreadonly" . SwVl_srt" { SwVl_srt:
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.557844121 UTC

[]


==================== Output Cmm ====================
2018-03-16 15:50:16.558523832 UTC

[section ""data" . GHC.PrimopWrappers.gtChar#_closure" {
     GHC.PrimopWrappers.gtChar#_closure:
         const GHC.PrimopWrappers.gtChar#_info;
 },
 GHC.PrimopWrappers.gtChar#_entry() //  [R2, R3]
         { info_tbl: [(cwVr,
                       label: GHC.PrimopWrappers.gtChar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwVr: // global
           R1 = R2 > R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.559390073 UTC

[section ""data" . GHC.PrimopWrappers.geChar#_closure" {
     GHC.PrimopWrappers.geChar#_closure:
         const GHC.PrimopWrappers.geChar#_info;
 },
 GHC.PrimopWrappers.geChar#_entry() //  [R2, R3]
         { info_tbl: [(cwVz,
                       label: GHC.PrimopWrappers.geChar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwVz: // global
           R1 = R2 >= R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.560219088 UTC

[section ""data" . GHC.PrimopWrappers.eqChar#_closure" {
     GHC.PrimopWrappers.eqChar#_closure:
         const GHC.PrimopWrappers.eqChar#_info;
 },
 GHC.PrimopWrappers.eqChar#_entry() //  [R2, R3]
         { info_tbl: [(cwVH,
                       label: GHC.PrimopWrappers.eqChar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwVH: // global
           R1 = R2 == R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.561047565 UTC

[section ""data" . GHC.PrimopWrappers.neChar#_closure" {
     GHC.PrimopWrappers.neChar#_closure:
         const GHC.PrimopWrappers.neChar#_info;
 },
 GHC.PrimopWrappers.neChar#_entry() //  [R2, R3]
         { info_tbl: [(cwVP,
                       label: GHC.PrimopWrappers.neChar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwVP: // global
           R1 = R2 != R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.561909717 UTC

[section ""data" . GHC.PrimopWrappers.ltChar#_closure" {
     GHC.PrimopWrappers.ltChar#_closure:
         const GHC.PrimopWrappers.ltChar#_info;
 },
 GHC.PrimopWrappers.ltChar#_entry() //  [R2, R3]
         { info_tbl: [(cwVX,
                       label: GHC.PrimopWrappers.ltChar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwVX: // global
           R1 = R2 < R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.562774465 UTC

[section ""data" . GHC.PrimopWrappers.leChar#_closure" {
     GHC.PrimopWrappers.leChar#_closure:
         const GHC.PrimopWrappers.leChar#_info;
 },
 GHC.PrimopWrappers.leChar#_entry() //  [R2, R3]
         { info_tbl: [(cwW5,
                       label: GHC.PrimopWrappers.leChar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwW5: // global
           R1 = R2 <= R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.563583686 UTC

[section ""data" . GHC.PrimopWrappers.ord#_closure" {
     GHC.PrimopWrappers.ord#_closure:
         const GHC.PrimopWrappers.ord#_info;
 },
 GHC.PrimopWrappers.ord#_entry() //  [R2]
         { info_tbl: [(cwWd,
                       label: GHC.PrimopWrappers.ord#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwWd: // global
           R1 = R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.564421104 UTC

[section ""data" . GHC.PrimopWrappers.+#_closure" {
     GHC.PrimopWrappers.+#_closure:
         const GHC.PrimopWrappers.+#_info;
 },
 GHC.PrimopWrappers.+#_entry() //  [R2, R3]
         { info_tbl: [(cwWl,
                       label: GHC.PrimopWrappers.+#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwWl: // global
           R1 = R2 + R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.565282118 UTC

[section ""data" . GHC.PrimopWrappers.-#_closure" {
     GHC.PrimopWrappers.-#_closure:
         const GHC.PrimopWrappers.-#_info;
 },
 GHC.PrimopWrappers.-#_entry() //  [R2, R3]
         { info_tbl: [(cwWt,
                       label: GHC.PrimopWrappers.-#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwWt: // global
           R1 = R2 - R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.566117435 UTC

[section ""data" . GHC.PrimopWrappers.*#_closure" {
     GHC.PrimopWrappers.*#_closure:
         const GHC.PrimopWrappers.*#_info;
 },
 GHC.PrimopWrappers.*#_entry() //  [R2, R3]
         { info_tbl: [(cwWB,
                       label: GHC.PrimopWrappers.*#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwWB: // global
           R1 = R2 * R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.566976117 UTC

[section ""data" . GHC.PrimopWrappers.mulIntMayOflo#_closure" {
     GHC.PrimopWrappers.mulIntMayOflo#_closure:
         const GHC.PrimopWrappers.mulIntMayOflo#_info;
 },
 GHC.PrimopWrappers.mulIntMayOflo#_entry() //  [R2, R3]
         { info_tbl: [(cwWJ,
                       label: GHC.PrimopWrappers.mulIntMayOflo#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwWJ: // global
           R1 = %MO_S_MulMayOflo_W64(R2, R3);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.5685806 UTC

[section ""data" . GHC.PrimopWrappers.quotInt#_closure" {
     GHC.PrimopWrappers.quotInt#_closure:
         const GHC.PrimopWrappers.quotInt#_info;
 },
 GHC.PrimopWrappers.quotInt#_entry() //  [R2, R3]
         { info_tbl: [(cwWR,
                       label: GHC.PrimopWrappers.quotInt#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwWR: // global
           R1 = %MO_S_Quot_W64(R2, R3);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.569833782 UTC

[section ""data" . GHC.PrimopWrappers.remInt#_closure" {
     GHC.PrimopWrappers.remInt#_closure:
         const GHC.PrimopWrappers.remInt#_info;
 },
 GHC.PrimopWrappers.remInt#_entry() //  [R2, R3]
         { info_tbl: [(cwWZ,
                       label: GHC.PrimopWrappers.remInt#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwWZ: // global
           R1 = %MO_S_Rem_W64(R2, R3);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.570657044 UTC

[section ""data" . GHC.PrimopWrappers.quotRemInt#_closure" {
     GHC.PrimopWrappers.quotRemInt#_closure:
         const GHC.PrimopWrappers.quotRemInt#_info;
 },
 GHC.PrimopWrappers.quotRemInt#_entry() //  [R2, R3]
         { info_tbl: [(cwX8,
                       label: GHC.PrimopWrappers.quotRemInt#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwX8: // global
           _B1::I64 = R3;
           (_cwX6::I64, _cwX7::I64) = call MO_S_QuotRem W64(R2, _B1::I64);
           R2 = _cwX7::I64;
           R1 = _cwX6::I64;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.571507931 UTC

[section ""data" . GHC.PrimopWrappers.andI#_closure" {
     GHC.PrimopWrappers.andI#_closure:
         const GHC.PrimopWrappers.andI#_info;
 },
 GHC.PrimopWrappers.andI#_entry() //  [R2, R3]
         { info_tbl: [(cwXg,
                       label: GHC.PrimopWrappers.andI#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwXg: // global
           R1 = R2 & R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.572342064 UTC

[section ""data" . GHC.PrimopWrappers.orI#_closure" {
     GHC.PrimopWrappers.orI#_closure:
         const GHC.PrimopWrappers.orI#_info;
 },
 GHC.PrimopWrappers.orI#_entry() //  [R2, R3]
         { info_tbl: [(cwXo,
                       label: GHC.PrimopWrappers.orI#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwXo: // global
           R1 = R2 | R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.57319861 UTC

[section ""data" . GHC.PrimopWrappers.xorI#_closure" {
     GHC.PrimopWrappers.xorI#_closure:
         const GHC.PrimopWrappers.xorI#_info;
 },
 GHC.PrimopWrappers.xorI#_entry() //  [R2, R3]
         { info_tbl: [(cwXw,
                       label: GHC.PrimopWrappers.xorI#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwXw: // global
           R1 = R2 ^ R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.574105105 UTC

[section ""data" . GHC.PrimopWrappers.notI#_closure" {
     GHC.PrimopWrappers.notI#_closure:
         const GHC.PrimopWrappers.notI#_info;
 },
 GHC.PrimopWrappers.notI#_entry() //  [R2]
         { info_tbl: [(cwXE,
                       label: GHC.PrimopWrappers.notI#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwXE: // global
           R1 = ~R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.574934411 UTC

[section ""data" . GHC.PrimopWrappers.negateInt#_closure" {
     GHC.PrimopWrappers.negateInt#_closure:
         const GHC.PrimopWrappers.negateInt#_info;
 },
 GHC.PrimopWrappers.negateInt#_entry() //  [R2]
         { info_tbl: [(cwXM,
                       label: GHC.PrimopWrappers.negateInt#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwXM: // global
           R1 = -R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.575779371 UTC

[section ""data" . GHC.PrimopWrappers.addIntC#_closure" {
     GHC.PrimopWrappers.addIntC#_closure:
         const GHC.PrimopWrappers.addIntC#_info;
 },
 GHC.PrimopWrappers.addIntC#_entry() //  [R2, R3]
         { info_tbl: [(cwXV,
                       label: GHC.PrimopWrappers.addIntC#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwXV: // global
           _B1::I64 = R3;
           (_cwXT::I64, _cwXU::I64) = call MO_AddIntC W64(R2, _B1::I64);
           R2 = _cwXU::I64;
           R1 = _cwXT::I64;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.576706631 UTC

[section ""data" . GHC.PrimopWrappers.subIntC#_closure" {
     GHC.PrimopWrappers.subIntC#_closure:
         const GHC.PrimopWrappers.subIntC#_info;
 },
 GHC.PrimopWrappers.subIntC#_entry() //  [R2, R3]
         { info_tbl: [(cwY4,
                       label: GHC.PrimopWrappers.subIntC#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwY4: // global
           _B1::I64 = R3;
           (_cwY2::I64, _cwY3::I64) = call MO_SubIntC W64(R2, _B1::I64);
           R2 = _cwY3::I64;
           R1 = _cwY2::I64;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.57764353 UTC

[section ""data" . GHC.PrimopWrappers.>#_closure" {
     GHC.PrimopWrappers.>#_closure:
         const GHC.PrimopWrappers.>#_info;
 },
 GHC.PrimopWrappers.>#_entry() //  [R2, R3]
         { info_tbl: [(cwYc,
                       label: GHC.PrimopWrappers.>#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwYc: // global
           R1 = %MO_S_Gt_W64(R2, R3);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.578500913 UTC

[section ""data" . GHC.PrimopWrappers.>=#_closure" {
     GHC.PrimopWrappers.>=#_closure:
         const GHC.PrimopWrappers.>=#_info;
 },
 GHC.PrimopWrappers.>=#_entry() //  [R2, R3]
         { info_tbl: [(cwYk,
                       label: GHC.PrimopWrappers.>=#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwYk: // global
           R1 = %MO_S_Ge_W64(R2, R3);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.57935513 UTC

[section ""data" . GHC.PrimopWrappers.==#_closure" {
     GHC.PrimopWrappers.==#_closure:
         const GHC.PrimopWrappers.==#_info;
 },
 GHC.PrimopWrappers.==#_entry() //  [R2, R3]
         { info_tbl: [(cwYs,
                       label: GHC.PrimopWrappers.==#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwYs: // global
           R1 = R2 == R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.580214429 UTC

[section ""data" . GHC.PrimopWrappers./=#_closure" {
     GHC.PrimopWrappers./=#_closure:
         const GHC.PrimopWrappers./=#_info;
 },
 GHC.PrimopWrappers./=#_entry() //  [R2, R3]
         { info_tbl: [(cwYA,
                       label: GHC.PrimopWrappers./=#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwYA: // global
           R1 = R2 != R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.581104755 UTC

[section ""data" . GHC.PrimopWrappers.<#_closure" {
     GHC.PrimopWrappers.<#_closure:
         const GHC.PrimopWrappers.<#_info;
 },
 GHC.PrimopWrappers.<#_entry() //  [R2, R3]
         { info_tbl: [(cwYI,
                       label: GHC.PrimopWrappers.<#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwYI: // global
           R1 = %MO_S_Lt_W64(R2, R3);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.582213738 UTC

[section ""data" . GHC.PrimopWrappers.<=#_closure" {
     GHC.PrimopWrappers.<=#_closure:
         const GHC.PrimopWrappers.<=#_info;
 },
 GHC.PrimopWrappers.<=#_entry() //  [R2, R3]
         { info_tbl: [(cwYQ,
                       label: GHC.PrimopWrappers.<=#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwYQ: // global
           R1 = %MO_S_Le_W64(R2, R3);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.583057607 UTC

[section ""data" . GHC.PrimopWrappers.chr#_closure" {
     GHC.PrimopWrappers.chr#_closure:
         const GHC.PrimopWrappers.chr#_info;
 },
 GHC.PrimopWrappers.chr#_entry() //  [R2]
         { info_tbl: [(cwYY,
                       label: GHC.PrimopWrappers.chr#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwYY: // global
           R1 = R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.583879417 UTC

[section ""data" . GHC.PrimopWrappers.int2Word#_closure" {
     GHC.PrimopWrappers.int2Word#_closure:
         const GHC.PrimopWrappers.int2Word#_info;
 },
 GHC.PrimopWrappers.int2Word#_entry() //  [R2]
         { info_tbl: [(cwZ6,
                       label: GHC.PrimopWrappers.int2Word#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwZ6: // global
           R1 = R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.584697839 UTC

[section ""data" . GHC.PrimopWrappers.int2Float#_closure" {
     GHC.PrimopWrappers.int2Float#_closure:
         const GHC.PrimopWrappers.int2Float#_info;
 },
 GHC.PrimopWrappers.int2Float#_entry() //  [R2]
         { info_tbl: [(cwZe,
                       label: GHC.PrimopWrappers.int2Float#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwZe: // global
           F1 = %MO_SF_Conv_W64_W32(R2);
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.585580811 UTC

[section ""data" . GHC.PrimopWrappers.int2Double#_closure" {
     GHC.PrimopWrappers.int2Double#_closure:
         const GHC.PrimopWrappers.int2Double#_info;
 },
 GHC.PrimopWrappers.int2Double#_entry() //  [R2]
         { info_tbl: [(cwZm,
                       label: GHC.PrimopWrappers.int2Double#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwZm: // global
           D1 = %MO_SF_Conv_W64_W64(R2);
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.586421545 UTC

[section ""data" . GHC.PrimopWrappers.word2Float#_closure" {
     GHC.PrimopWrappers.word2Float#_closure:
         const GHC.PrimopWrappers.word2Float#_info;
 },
 GHC.PrimopWrappers.word2Float#_entry() //  [R2]
         { info_tbl: [(cwZv,
                       label: GHC.PrimopWrappers.word2Float#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwZv: // global
           (_cwZt::F32) = call MO_UF_Conv W32(R2);
           F1 = _cwZt::F32;
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.587295996 UTC

[section ""data" . GHC.PrimopWrappers.word2Double#_closure" {
     GHC.PrimopWrappers.word2Double#_closure:
         const GHC.PrimopWrappers.word2Double#_info;
 },
 GHC.PrimopWrappers.word2Double#_entry() //  [R2]
         { info_tbl: [(cwZE,
                       label: GHC.PrimopWrappers.word2Double#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwZE: // global
           (_cwZC::F64) = call MO_UF_Conv W64(R2);
           D1 = _cwZC::F64;
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.5881386 UTC

[section ""data" . GHC.PrimopWrappers.uncheckedIShiftL#_closure" {
     GHC.PrimopWrappers.uncheckedIShiftL#_closure:
         const GHC.PrimopWrappers.uncheckedIShiftL#_info;
 },
 GHC.PrimopWrappers.uncheckedIShiftL#_entry() //  [R2, R3]
         { info_tbl: [(cwZM,
                       label: GHC.PrimopWrappers.uncheckedIShiftL#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwZM: // global
           R1 = R2 << R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.588957823 UTC

[section ""data" . GHC.PrimopWrappers.uncheckedIShiftRA#_closure" {
     GHC.PrimopWrappers.uncheckedIShiftRA#_closure:
         const GHC.PrimopWrappers.uncheckedIShiftRA#_info;
 },
 GHC.PrimopWrappers.uncheckedIShiftRA#_entry() //  [R2, R3]
         { info_tbl: [(cwZU,
                       label: GHC.PrimopWrappers.uncheckedIShiftRA#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cwZU: // global
           R1 = %MO_S_Shr_W64(R2, R3);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.589884346 UTC

[section ""data" . GHC.PrimopWrappers.uncheckedIShiftRL#_closure" {
     GHC.PrimopWrappers.uncheckedIShiftRL#_closure:
         const GHC.PrimopWrappers.uncheckedIShiftRL#_info;
 },
 GHC.PrimopWrappers.uncheckedIShiftRL#_entry() //  [R2, R3]
         { info_tbl: [(cx02,
                       label: GHC.PrimopWrappers.uncheckedIShiftRL#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx02: // global
           R1 = R2 >> R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.590718451 UTC

[section ""data" . GHC.PrimopWrappers.plusWord#_closure" {
     GHC.PrimopWrappers.plusWord#_closure:
         const GHC.PrimopWrappers.plusWord#_info;
 },
 GHC.PrimopWrappers.plusWord#_entry() //  [R2, R3]
         { info_tbl: [(cx0a,
                       label: GHC.PrimopWrappers.plusWord#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx0a: // global
           R1 = R2 + R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.591620568 UTC

[section ""data" . GHC.PrimopWrappers.subWordC#_closure" {
     GHC.PrimopWrappers.subWordC#_closure:
         const GHC.PrimopWrappers.subWordC#_info;
 },
 GHC.PrimopWrappers.subWordC#_entry() //  [R2, R3]
         { info_tbl: [(cx0j,
                       label: GHC.PrimopWrappers.subWordC#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx0j: // global
           _B1::I64 = R3;
           (_cx0h::I64, _cx0i::I64) = call MO_SubWordC W64(R2, _B1::I64);
           R2 = _cx0i::I64;
           R1 = _cx0h::I64;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.592534648 UTC

[section ""data" . GHC.PrimopWrappers.plusWord2#_closure" {
     GHC.PrimopWrappers.plusWord2#_closure:
         const GHC.PrimopWrappers.plusWord2#_info;
 },
 GHC.PrimopWrappers.plusWord2#_entry() //  [R2, R3]
         { info_tbl: [(cx0s,
                       label: GHC.PrimopWrappers.plusWord2#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx0s: // global
           _B1::I64 = R3;
           (_cx0q::I64, _cx0r::I64) = call MO_Add2 W64(R2, _B1::I64);
           R2 = _cx0r::I64;
           R1 = _cx0q::I64;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.593891312 UTC

[section ""data" . GHC.PrimopWrappers.minusWord#_closure" {
     GHC.PrimopWrappers.minusWord#_closure:
         const GHC.PrimopWrappers.minusWord#_info;
 },
 GHC.PrimopWrappers.minusWord#_entry() //  [R2, R3]
         { info_tbl: [(cx0A,
                       label: GHC.PrimopWrappers.minusWord#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx0A: // global
           R1 = R2 - R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.594707182 UTC

[section ""data" . GHC.PrimopWrappers.timesWord#_closure" {
     GHC.PrimopWrappers.timesWord#_closure:
         const GHC.PrimopWrappers.timesWord#_info;
 },
 GHC.PrimopWrappers.timesWord#_entry() //  [R2, R3]
         { info_tbl: [(cx0I,
                       label: GHC.PrimopWrappers.timesWord#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx0I: // global
           R1 = R2 * R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.595556504 UTC

[section ""data" . GHC.PrimopWrappers.timesWord2#_closure" {
     GHC.PrimopWrappers.timesWord2#_closure:
         const GHC.PrimopWrappers.timesWord2#_info;
 },
 GHC.PrimopWrappers.timesWord2#_entry() //  [R2, R3]
         { info_tbl: [(cx0R,
                       label: GHC.PrimopWrappers.timesWord2#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx0R: // global
           _B1::I64 = R3;
           (_cx0P::I64, _cx0Q::I64) = call MO_U_Mul2 W64(R2, _B1::I64);
           R2 = _cx0Q::I64;
           R1 = _cx0P::I64;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.597181202 UTC

[section ""data" . GHC.PrimopWrappers.quotWord#_closure" {
     GHC.PrimopWrappers.quotWord#_closure:
         const GHC.PrimopWrappers.quotWord#_info;
 },
 GHC.PrimopWrappers.quotWord#_entry() //  [R2, R3]
         { info_tbl: [(cx0Z,
                       label: GHC.PrimopWrappers.quotWord#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx0Z: // global
           R1 = R2 / R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.598089623 UTC

[section ""data" . GHC.PrimopWrappers.remWord#_closure" {
     GHC.PrimopWrappers.remWord#_closure:
         const GHC.PrimopWrappers.remWord#_info;
 },
 GHC.PrimopWrappers.remWord#_entry() //  [R2, R3]
         { info_tbl: [(cx17,
                       label: GHC.PrimopWrappers.remWord#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx17: // global
           R1 = R2 % R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.598907211 UTC

[section ""data" . GHC.PrimopWrappers.quotRemWord#_closure" {
     GHC.PrimopWrappers.quotRemWord#_closure:
         const GHC.PrimopWrappers.quotRemWord#_info;
 },
 GHC.PrimopWrappers.quotRemWord#_entry() //  [R2, R3]
         { info_tbl: [(cx1g,
                       label: GHC.PrimopWrappers.quotRemWord#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx1g: // global
           _B1::I64 = R3;
           (_cx1e::I64, _cx1f::I64) = call MO_U_QuotRem W64(R2, _B1::I64);
           R2 = _cx1f::I64;
           R1 = _cx1e::I64;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.599797221 UTC

[section ""data" . GHC.PrimopWrappers.quotRemWord2#_closure" {
     GHC.PrimopWrappers.quotRemWord2#_closure:
         const GHC.PrimopWrappers.quotRemWord2#_info;
 },
 GHC.PrimopWrappers.quotRemWord2#_entry() //  [R2, R3, R4]
         { info_tbl: [(cx1p,
                       label: GHC.PrimopWrappers.quotRemWord2#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 16} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx1p: // global
           _B1::I64 = R4;
           _B2::I64 = R3;
           (_cx1n::I64, _cx1o::I64) = call MO_U_QuotRem2 W64(R2, _B2::I64, _B1::I64);
           R2 = _cx1o::I64;
           R1 = _cx1n::I64;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.600694553 UTC

[section ""data" . GHC.PrimopWrappers.and#_closure" {
     GHC.PrimopWrappers.and#_closure:
         const GHC.PrimopWrappers.and#_info;
 },
 GHC.PrimopWrappers.and#_entry() //  [R2, R3]
         { info_tbl: [(cx1x,
                       label: GHC.PrimopWrappers.and#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx1x: // global
           R1 = R2 & R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.601565923 UTC

[section ""data" . GHC.PrimopWrappers.or#_closure" {
     GHC.PrimopWrappers.or#_closure:
         const GHC.PrimopWrappers.or#_info;
 },
 GHC.PrimopWrappers.or#_entry() //  [R2, R3]
         { info_tbl: [(cx1F,
                       label: GHC.PrimopWrappers.or#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx1F: // global
           R1 = R2 | R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.602390875 UTC

[section ""data" . GHC.PrimopWrappers.xor#_closure" {
     GHC.PrimopWrappers.xor#_closure:
         const GHC.PrimopWrappers.xor#_info;
 },
 GHC.PrimopWrappers.xor#_entry() //  [R2, R3]
         { info_tbl: [(cx1N,
                       label: GHC.PrimopWrappers.xor#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx1N: // global
           R1 = R2 ^ R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.603195355 UTC

[section ""data" . GHC.PrimopWrappers.not#_closure" {
     GHC.PrimopWrappers.not#_closure:
         const GHC.PrimopWrappers.not#_info;
 },
 GHC.PrimopWrappers.not#_entry() //  [R2]
         { info_tbl: [(cx1V,
                       label: GHC.PrimopWrappers.not#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx1V: // global
           R1 = ~R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.604013848 UTC

[section ""data" . GHC.PrimopWrappers.uncheckedShiftL#_closure" {
     GHC.PrimopWrappers.uncheckedShiftL#_closure:
         const GHC.PrimopWrappers.uncheckedShiftL#_info;
 },
 GHC.PrimopWrappers.uncheckedShiftL#_entry() //  [R2, R3]
         { info_tbl: [(cx23,
                       label: GHC.PrimopWrappers.uncheckedShiftL#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx23: // global
           R1 = R2 << R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.604860513 UTC

[section ""data" . GHC.PrimopWrappers.uncheckedShiftRL#_closure" {
     GHC.PrimopWrappers.uncheckedShiftRL#_closure:
         const GHC.PrimopWrappers.uncheckedShiftRL#_info;
 },
 GHC.PrimopWrappers.uncheckedShiftRL#_entry() //  [R2, R3]
         { info_tbl: [(cx2b,
                       label: GHC.PrimopWrappers.uncheckedShiftRL#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx2b: // global
           R1 = R2 >> R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.605738076 UTC

[section ""data" . GHC.PrimopWrappers.word2Int#_closure" {
     GHC.PrimopWrappers.word2Int#_closure:
         const GHC.PrimopWrappers.word2Int#_info;
 },
 GHC.PrimopWrappers.word2Int#_entry() //  [R2]
         { info_tbl: [(cx2j,
                       label: GHC.PrimopWrappers.word2Int#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx2j: // global
           R1 = R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.606558439 UTC

[section ""data" . GHC.PrimopWrappers.gtWord#_closure" {
     GHC.PrimopWrappers.gtWord#_closure:
         const GHC.PrimopWrappers.gtWord#_info;
 },
 GHC.PrimopWrappers.gtWord#_entry() //  [R2, R3]
         { info_tbl: [(cx2r,
                       label: GHC.PrimopWrappers.gtWord#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx2r: // global
           R1 = R2 > R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.607402354 UTC

[section ""data" . GHC.PrimopWrappers.geWord#_closure" {
     GHC.PrimopWrappers.geWord#_closure:
         const GHC.PrimopWrappers.geWord#_info;
 },
 GHC.PrimopWrappers.geWord#_entry() //  [R2, R3]
         { info_tbl: [(cx2z,
                       label: GHC.PrimopWrappers.geWord#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx2z: // global
           R1 = R2 >= R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.608254626 UTC

[section ""data" . GHC.PrimopWrappers.eqWord#_closure" {
     GHC.PrimopWrappers.eqWord#_closure:
         const GHC.PrimopWrappers.eqWord#_info;
 },
 GHC.PrimopWrappers.eqWord#_entry() //  [R2, R3]
         { info_tbl: [(cx2H,
                       label: GHC.PrimopWrappers.eqWord#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx2H: // global
           R1 = R2 == R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.609096319 UTC

[section ""data" . GHC.PrimopWrappers.neWord#_closure" {
     GHC.PrimopWrappers.neWord#_closure:
         const GHC.PrimopWrappers.neWord#_info;
 },
 GHC.PrimopWrappers.neWord#_entry() //  [R2, R3]
         { info_tbl: [(cx2P,
                       label: GHC.PrimopWrappers.neWord#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx2P: // global
           R1 = R2 != R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.610025448 UTC

[section ""data" . GHC.PrimopWrappers.ltWord#_closure" {
     GHC.PrimopWrappers.ltWord#_closure:
         const GHC.PrimopWrappers.ltWord#_info;
 },
 GHC.PrimopWrappers.ltWord#_entry() //  [R2, R3]
         { info_tbl: [(cx2X,
                       label: GHC.PrimopWrappers.ltWord#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx2X: // global
           R1 = R2 < R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.610855848 UTC

[section ""data" . GHC.PrimopWrappers.leWord#_closure" {
     GHC.PrimopWrappers.leWord#_closure:
         const GHC.PrimopWrappers.leWord#_info;
 },
 GHC.PrimopWrappers.leWord#_entry() //  [R2, R3]
         { info_tbl: [(cx35,
                       label: GHC.PrimopWrappers.leWord#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx35: // global
           R1 = R2 <= R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.611683451 UTC

[section ""data" . GHC.PrimopWrappers.popCnt8#_closure" {
     GHC.PrimopWrappers.popCnt8#_closure:
         const GHC.PrimopWrappers.popCnt8#_info;
 },
 GHC.PrimopWrappers.popCnt8#_entry() //  [R2]
         { info_tbl: [(cx3e,
                       label: GHC.PrimopWrappers.popCnt8#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx3e: // global
           (_cx3c::I64) = call MO_PopCnt W8(R2);
           R1 = _cx3c::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.612557131 UTC

[section ""data" . GHC.PrimopWrappers.popCnt16#_closure" {
     GHC.PrimopWrappers.popCnt16#_closure:
         const GHC.PrimopWrappers.popCnt16#_info;
 },
 GHC.PrimopWrappers.popCnt16#_entry() //  [R2]
         { info_tbl: [(cx3n,
                       label: GHC.PrimopWrappers.popCnt16#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx3n: // global
           (_cx3l::I64) = call MO_PopCnt W16(R2);
           R1 = _cx3l::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.613472622 UTC

[section ""data" . GHC.PrimopWrappers.popCnt32#_closure" {
     GHC.PrimopWrappers.popCnt32#_closure:
         const GHC.PrimopWrappers.popCnt32#_info;
 },
 GHC.PrimopWrappers.popCnt32#_entry() //  [R2]
         { info_tbl: [(cx3w,
                       label: GHC.PrimopWrappers.popCnt32#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx3w: // global
           (_cx3u::I64) = call MO_PopCnt W32(R2);
           R1 = _cx3u::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.614319874 UTC

[section ""data" . GHC.PrimopWrappers.popCnt64#_closure" {
     GHC.PrimopWrappers.popCnt64#_closure:
         const GHC.PrimopWrappers.popCnt64#_info;
 },
 GHC.PrimopWrappers.popCnt64#_entry() //  [R2]
         { info_tbl: [(cx3F,
                       label: GHC.PrimopWrappers.popCnt64#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx3F: // global
           (_cx3D::I64) = call MO_PopCnt W64(R2);
           R1 = _cx3D::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.615223383 UTC

[section ""data" . GHC.PrimopWrappers.popCnt#_closure" {
     GHC.PrimopWrappers.popCnt#_closure:
         const GHC.PrimopWrappers.popCnt#_info;
 },
 GHC.PrimopWrappers.popCnt#_entry() //  [R2]
         { info_tbl: [(cx3O,
                       label: GHC.PrimopWrappers.popCnt#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx3O: // global
           (_cx3M::I64) = call MO_PopCnt W64(R2);
           R1 = _cx3M::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.616079334 UTC

[section ""data" . GHC.PrimopWrappers.pdep8#_closure" {
     GHC.PrimopWrappers.pdep8#_closure:
         const GHC.PrimopWrappers.pdep8#_info;
 },
 GHC.PrimopWrappers.pdep8#_entry() //  [R2, R3]
         { info_tbl: [(cx3Y,
                       label: GHC.PrimopWrappers.pdep8#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx3Y: // global
           _cx3X::I64 = R3;
           (_cx3V::I64) = call MO_Pdep W8(R2, _cx3X::I64);
           R1 = _cx3V::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.616949186 UTC

[section ""data" . GHC.PrimopWrappers.pdep16#_closure" {
     GHC.PrimopWrappers.pdep16#_closure:
         const GHC.PrimopWrappers.pdep16#_info;
 },
 GHC.PrimopWrappers.pdep16#_entry() //  [R2, R3]
         { info_tbl: [(cx48,
                       label: GHC.PrimopWrappers.pdep16#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx48: // global
           _cx47::I64 = R3;
           (_cx45::I64) = call MO_Pdep W16(R2, _cx47::I64);
           R1 = _cx45::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.618090698 UTC

[section ""data" . GHC.PrimopWrappers.pdep32#_closure" {
     GHC.PrimopWrappers.pdep32#_closure:
         const GHC.PrimopWrappers.pdep32#_info;
 },
 GHC.PrimopWrappers.pdep32#_entry() //  [R2, R3]
         { info_tbl: [(cx4i,
                       label: GHC.PrimopWrappers.pdep32#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx4i: // global
           _cx4h::I64 = R3;
           (_cx4f::I64) = call MO_Pdep W32(R2, _cx4h::I64);
           R1 = _cx4f::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.61893495 UTC

[section ""data" . GHC.PrimopWrappers.pdep64#_closure" {
     GHC.PrimopWrappers.pdep64#_closure:
         const GHC.PrimopWrappers.pdep64#_info;
 },
 GHC.PrimopWrappers.pdep64#_entry() //  [R2, R3]
         { info_tbl: [(cx4s,
                       label: GHC.PrimopWrappers.pdep64#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx4s: // global
           _cx4r::I64 = R3;
           (_cx4p::I64) = call MO_Pdep W64(R2, _cx4r::I64);
           R1 = _cx4p::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.619832637 UTC

[section ""data" . GHC.PrimopWrappers.pdep#_closure" {
     GHC.PrimopWrappers.pdep#_closure:
         const GHC.PrimopWrappers.pdep#_info;
 },
 GHC.PrimopWrappers.pdep#_entry() //  [R2, R3]
         { info_tbl: [(cx4C,
                       label: GHC.PrimopWrappers.pdep#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx4C: // global
           _cx4B::I64 = R3;
           (_cx4z::I64) = call MO_Pdep W64(R2, _cx4B::I64);
           R1 = _cx4z::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.620763208 UTC

[section ""data" . GHC.PrimopWrappers.pext8#_closure" {
     GHC.PrimopWrappers.pext8#_closure:
         const GHC.PrimopWrappers.pext8#_info;
 },
 GHC.PrimopWrappers.pext8#_entry() //  [R2, R3]
         { info_tbl: [(cx4M,
                       label: GHC.PrimopWrappers.pext8#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx4M: // global
           _cx4L::I64 = R3;
           (_cx4J::I64) = call MO_Pext W8(R2, _cx4L::I64);
           R1 = _cx4J::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.621693716 UTC

[section ""data" . GHC.PrimopWrappers.pext16#_closure" {
     GHC.PrimopWrappers.pext16#_closure:
         const GHC.PrimopWrappers.pext16#_info;
 },
 GHC.PrimopWrappers.pext16#_entry() //  [R2, R3]
         { info_tbl: [(cx4W,
                       label: GHC.PrimopWrappers.pext16#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx4W: // global
           _cx4V::I64 = R3;
           (_cx4T::I64) = call MO_Pext W16(R2, _cx4V::I64);
           R1 = _cx4T::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.62258948 UTC

[section ""data" . GHC.PrimopWrappers.pext32#_closure" {
     GHC.PrimopWrappers.pext32#_closure:
         const GHC.PrimopWrappers.pext32#_info;
 },
 GHC.PrimopWrappers.pext32#_entry() //  [R2, R3]
         { info_tbl: [(cx56,
                       label: GHC.PrimopWrappers.pext32#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx56: // global
           _cx55::I64 = R3;
           (_cx53::I64) = call MO_Pext W32(R2, _cx55::I64);
           R1 = _cx53::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.623521687 UTC

[section ""data" . GHC.PrimopWrappers.pext64#_closure" {
     GHC.PrimopWrappers.pext64#_closure:
         const GHC.PrimopWrappers.pext64#_info;
 },
 GHC.PrimopWrappers.pext64#_entry() //  [R2, R3]
         { info_tbl: [(cx5g,
                       label: GHC.PrimopWrappers.pext64#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx5g: // global
           _cx5f::I64 = R3;
           (_cx5d::I64) = call MO_Pext W64(R2, _cx5f::I64);
           R1 = _cx5d::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.625182666 UTC

[section ""data" . GHC.PrimopWrappers.pext#_closure" {
     GHC.PrimopWrappers.pext#_closure:
         const GHC.PrimopWrappers.pext#_info;
 },
 GHC.PrimopWrappers.pext#_entry() //  [R2, R3]
         { info_tbl: [(cx5q,
                       label: GHC.PrimopWrappers.pext#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx5q: // global
           _cx5p::I64 = R3;
           (_cx5n::I64) = call MO_Pext W64(R2, _cx5p::I64);
           R1 = _cx5n::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.626087122 UTC

[section ""data" . GHC.PrimopWrappers.clz8#_closure" {
     GHC.PrimopWrappers.clz8#_closure:
         const GHC.PrimopWrappers.clz8#_info;
 },
 GHC.PrimopWrappers.clz8#_entry() //  [R2]
         { info_tbl: [(cx5z,
                       label: GHC.PrimopWrappers.clz8#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx5z: // global
           (_cx5x::I64) = call MO_Clz W8(R2);
           R1 = _cx5x::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.62689596 UTC

[section ""data" . GHC.PrimopWrappers.clz16#_closure" {
     GHC.PrimopWrappers.clz16#_closure:
         const GHC.PrimopWrappers.clz16#_info;
 },
 GHC.PrimopWrappers.clz16#_entry() //  [R2]
         { info_tbl: [(cx5I,
                       label: GHC.PrimopWrappers.clz16#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx5I: // global
           (_cx5G::I64) = call MO_Clz W16(R2);
           R1 = _cx5G::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.627777555 UTC

[section ""data" . GHC.PrimopWrappers.clz32#_closure" {
     GHC.PrimopWrappers.clz32#_closure:
         const GHC.PrimopWrappers.clz32#_info;
 },
 GHC.PrimopWrappers.clz32#_entry() //  [R2]
         { info_tbl: [(cx5R,
                       label: GHC.PrimopWrappers.clz32#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx5R: // global
           (_cx5P::I64) = call MO_Clz W32(R2);
           R1 = _cx5P::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.628620794 UTC

[section ""data" . GHC.PrimopWrappers.clz64#_closure" {
     GHC.PrimopWrappers.clz64#_closure:
         const GHC.PrimopWrappers.clz64#_info;
 },
 GHC.PrimopWrappers.clz64#_entry() //  [R2]
         { info_tbl: [(cx60,
                       label: GHC.PrimopWrappers.clz64#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx60: // global
           (_cx5Y::I64) = call MO_Clz W64(R2);
           R1 = _cx5Y::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.629529105 UTC

[section ""data" . GHC.PrimopWrappers.clz#_closure" {
     GHC.PrimopWrappers.clz#_closure:
         const GHC.PrimopWrappers.clz#_info;
 },
 GHC.PrimopWrappers.clz#_entry() //  [R2]
         { info_tbl: [(cx69,
                       label: GHC.PrimopWrappers.clz#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx69: // global
           (_cx67::I64) = call MO_Clz W64(R2);
           R1 = _cx67::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.630382753 UTC

[section ""data" . GHC.PrimopWrappers.ctz8#_closure" {
     GHC.PrimopWrappers.ctz8#_closure:
         const GHC.PrimopWrappers.ctz8#_info;
 },
 GHC.PrimopWrappers.ctz8#_entry() //  [R2]
         { info_tbl: [(cx6i,
                       label: GHC.PrimopWrappers.ctz8#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx6i: // global
           (_cx6g::I64) = call MO_Ctz W8(R2);
           R1 = _cx6g::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.631261628 UTC

[section ""data" . GHC.PrimopWrappers.ctz16#_closure" {
     GHC.PrimopWrappers.ctz16#_closure:
         const GHC.PrimopWrappers.ctz16#_info;
 },
 GHC.PrimopWrappers.ctz16#_entry() //  [R2]
         { info_tbl: [(cx6r,
                       label: GHC.PrimopWrappers.ctz16#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx6r: // global
           (_cx6p::I64) = call MO_Ctz W16(R2);
           R1 = _cx6p::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.632120055 UTC

[section ""data" . GHC.PrimopWrappers.ctz32#_closure" {
     GHC.PrimopWrappers.ctz32#_closure:
         const GHC.PrimopWrappers.ctz32#_info;
 },
 GHC.PrimopWrappers.ctz32#_entry() //  [R2]
         { info_tbl: [(cx6A,
                       label: GHC.PrimopWrappers.ctz32#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx6A: // global
           (_cx6y::I64) = call MO_Ctz W32(R2);
           R1 = _cx6y::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.632997522 UTC

[section ""data" . GHC.PrimopWrappers.ctz64#_closure" {
     GHC.PrimopWrappers.ctz64#_closure:
         const GHC.PrimopWrappers.ctz64#_info;
 },
 GHC.PrimopWrappers.ctz64#_entry() //  [R2]
         { info_tbl: [(cx6J,
                       label: GHC.PrimopWrappers.ctz64#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx6J: // global
           (_cx6H::I64) = call MO_Ctz W64(R2);
           R1 = _cx6H::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.633912541 UTC

[section ""data" . GHC.PrimopWrappers.ctz#_closure" {
     GHC.PrimopWrappers.ctz#_closure:
         const GHC.PrimopWrappers.ctz#_info;
 },
 GHC.PrimopWrappers.ctz#_entry() //  [R2]
         { info_tbl: [(cx6S,
                       label: GHC.PrimopWrappers.ctz#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx6S: // global
           (_cx6Q::I64) = call MO_Ctz W64(R2);
           R1 = _cx6Q::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.63478682 UTC

[section ""data" . GHC.PrimopWrappers.byteSwap16#_closure" {
     GHC.PrimopWrappers.byteSwap16#_closure:
         const GHC.PrimopWrappers.byteSwap16#_info;
 },
 GHC.PrimopWrappers.byteSwap16#_entry() //  [R2]
         { info_tbl: [(cx71,
                       label: GHC.PrimopWrappers.byteSwap16#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx71: // global
           (_cx6Z::I64) = call MO_BSwap W16(R2);
           R1 = _cx6Z::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.635608203 UTC

[section ""data" . GHC.PrimopWrappers.byteSwap32#_closure" {
     GHC.PrimopWrappers.byteSwap32#_closure:
         const GHC.PrimopWrappers.byteSwap32#_info;
 },
 GHC.PrimopWrappers.byteSwap32#_entry() //  [R2]
         { info_tbl: [(cx7a,
                       label: GHC.PrimopWrappers.byteSwap32#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx7a: // global
           (_cx78::I64) = call MO_BSwap W32(R2);
           R1 = _cx78::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.636452627 UTC

[section ""data" . GHC.PrimopWrappers.byteSwap64#_closure" {
     GHC.PrimopWrappers.byteSwap64#_closure:
         const GHC.PrimopWrappers.byteSwap64#_info;
 },
 GHC.PrimopWrappers.byteSwap64#_entry() //  [R2]
         { info_tbl: [(cx7j,
                       label: GHC.PrimopWrappers.byteSwap64#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx7j: // global
           (_cx7h::I64) = call MO_BSwap W64(R2);
           R1 = _cx7h::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.637570218 UTC

[section ""data" . GHC.PrimopWrappers.byteSwap#_closure" {
     GHC.PrimopWrappers.byteSwap#_closure:
         const GHC.PrimopWrappers.byteSwap#_info;
 },
 GHC.PrimopWrappers.byteSwap#_entry() //  [R2]
         { info_tbl: [(cx7s,
                       label: GHC.PrimopWrappers.byteSwap#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx7s: // global
           (_cx7q::I64) = call MO_BSwap W64(R2);
           R1 = _cx7q::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.638409877 UTC

[section ""data" . GHC.PrimopWrappers.narrow8Int#_closure" {
     GHC.PrimopWrappers.narrow8Int#_closure:
         const GHC.PrimopWrappers.narrow8Int#_info;
 },
 GHC.PrimopWrappers.narrow8Int#_entry() //  [R2]
         { info_tbl: [(cx7A,
                       label: GHC.PrimopWrappers.narrow8Int#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx7A: // global
           R1 = %MO_SS_Conv_W8_W64(%MO_SS_Conv_W64_W8(R2));
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.639254729 UTC

[section ""data" . GHC.PrimopWrappers.narrow16Int#_closure" {
     GHC.PrimopWrappers.narrow16Int#_closure:
         const GHC.PrimopWrappers.narrow16Int#_info;
 },
 GHC.PrimopWrappers.narrow16Int#_entry() //  [R2]
         { info_tbl: [(cx7I,
                       label: GHC.PrimopWrappers.narrow16Int#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx7I: // global
           R1 = %MO_SS_Conv_W16_W64(%MO_SS_Conv_W64_W16(R2));
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.640074311 UTC

[section ""data" . GHC.PrimopWrappers.narrow32Int#_closure" {
     GHC.PrimopWrappers.narrow32Int#_closure:
         const GHC.PrimopWrappers.narrow32Int#_info;
 },
 GHC.PrimopWrappers.narrow32Int#_entry() //  [R2]
         { info_tbl: [(cx7Q,
                       label: GHC.PrimopWrappers.narrow32Int#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx7Q: // global
           R1 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(R2));
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.640936567 UTC

[section ""data" . GHC.PrimopWrappers.narrow8Word#_closure" {
     GHC.PrimopWrappers.narrow8Word#_closure:
         const GHC.PrimopWrappers.narrow8Word#_info;
 },
 GHC.PrimopWrappers.narrow8Word#_entry() //  [R2]
         { info_tbl: [(cx7Y,
                       label: GHC.PrimopWrappers.narrow8Word#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx7Y: // global
           R1 = %MO_UU_Conv_W8_W64(%MO_UU_Conv_W64_W8(R2));
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.641866459 UTC

[section ""data" . GHC.PrimopWrappers.narrow16Word#_closure" {
     GHC.PrimopWrappers.narrow16Word#_closure:
         const GHC.PrimopWrappers.narrow16Word#_info;
 },
 GHC.PrimopWrappers.narrow16Word#_entry() //  [R2]
         { info_tbl: [(cx86,
                       label: GHC.PrimopWrappers.narrow16Word#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx86: // global
           R1 = %MO_UU_Conv_W16_W64(%MO_UU_Conv_W64_W16(R2));
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.642727116 UTC

[section ""data" . GHC.PrimopWrappers.narrow32Word#_closure" {
     GHC.PrimopWrappers.narrow32Word#_closure:
         const GHC.PrimopWrappers.narrow32Word#_info;
 },
 GHC.PrimopWrappers.narrow32Word#_entry() //  [R2]
         { info_tbl: [(cx8e,
                       label: GHC.PrimopWrappers.narrow32Word#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx8e: // global
           R1 = %MO_UU_Conv_W32_W64(%MO_UU_Conv_W64_W32(R2));
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.643660292 UTC

[section ""data" . GHC.PrimopWrappers.>##_closure" {
     GHC.PrimopWrappers.>##_closure:
         const GHC.PrimopWrappers.>##_info;
 },
 GHC.PrimopWrappers.>##_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx8i: // global
           D2 = F64[Sp + 8];
           D1 = F64[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.>##_entry(D2,
                                             D1,
                                             R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.>##_entry() //  [D1, D2]
         { info_tbl: [(cx8n,
                       label: GHC.PrimopWrappers.>##_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx8n: // global
           R1 = %MO_F_Gt_W64(D1, D2);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.644719248 UTC

[section ""data" . GHC.PrimopWrappers.>=##_closure" {
     GHC.PrimopWrappers.>=##_closure:
         const GHC.PrimopWrappers.>=##_info;
 },
 GHC.PrimopWrappers.>=##_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx8r: // global
           D2 = F64[Sp + 8];
           D1 = F64[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.>=##_entry(D2,
                                              D1,
                                              R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.>=##_entry() //  [D1, D2]
         { info_tbl: [(cx8w,
                       label: GHC.PrimopWrappers.>=##_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx8w: // global
           R1 = %MO_F_Ge_W64(D1, D2);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.64580762 UTC

[section ""data" . GHC.PrimopWrappers.==##_closure" {
     GHC.PrimopWrappers.==##_closure:
         const GHC.PrimopWrappers.==##_info;
 },
 GHC.PrimopWrappers.==##_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx8A: // global
           D2 = F64[Sp + 8];
           D1 = F64[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.==##_entry(D2,
                                              D1,
                                              R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.==##_entry() //  [D1, D2]
         { info_tbl: [(cx8F,
                       label: GHC.PrimopWrappers.==##_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx8F: // global
           R1 = %MO_F_Eq_W64(D1, D2);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.646819584 UTC

[section ""data" . GHC.PrimopWrappers./=##_closure" {
     GHC.PrimopWrappers./=##_closure:
         const GHC.PrimopWrappers./=##_info;
 },
 GHC.PrimopWrappers./=##_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx8J: // global
           D2 = F64[Sp + 8];
           D1 = F64[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers./=##_entry(D2,
                                              D1,
                                              R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers./=##_entry() //  [D1, D2]
         { info_tbl: [(cx8O,
                       label: GHC.PrimopWrappers./=##_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx8O: // global
           R1 = %MO_F_Ne_W64(D1, D2);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.647817859 UTC

[section ""data" . GHC.PrimopWrappers.<##_closure" {
     GHC.PrimopWrappers.<##_closure:
         const GHC.PrimopWrappers.<##_info;
 },
 GHC.PrimopWrappers.<##_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx8S: // global
           D2 = F64[Sp + 8];
           D1 = F64[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.<##_entry(D2,
                                             D1,
                                             R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.<##_entry() //  [D1, D2]
         { info_tbl: [(cx8X,
                       label: GHC.PrimopWrappers.<##_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx8X: // global
           R1 = %MO_F_Lt_W64(D1, D2);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.648878545 UTC

[section ""data" . GHC.PrimopWrappers.<=##_closure" {
     GHC.PrimopWrappers.<=##_closure:
         const GHC.PrimopWrappers.<=##_info;
 },
 GHC.PrimopWrappers.<=##_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx91: // global
           D2 = F64[Sp + 8];
           D1 = F64[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.<=##_entry(D2,
                                              D1,
                                              R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.<=##_entry() //  [D1, D2]
         { info_tbl: [(cx96,
                       label: GHC.PrimopWrappers.<=##_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx96: // global
           R1 = %MO_F_Le_W64(D1, D2);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.649986064 UTC

[section ""data" . GHC.PrimopWrappers.+##_closure" {
     GHC.PrimopWrappers.+##_closure:
         const GHC.PrimopWrappers.+##_info;
 },
 GHC.PrimopWrappers.+##_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx9a: // global
           D2 = F64[Sp + 8];
           D1 = F64[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.+##_entry(D2,
                                             D1,
                                             R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.+##_entry() //  [D1, D2]
         { info_tbl: [(cx9f,
                       label: GHC.PrimopWrappers.+##_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx9f: // global
           D1 = %MO_F_Add_W64(D1, D2);
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.651007751 UTC

[section ""data" . GHC.PrimopWrappers.-##_closure" {
     GHC.PrimopWrappers.-##_closure:
         const GHC.PrimopWrappers.-##_info;
 },
 GHC.PrimopWrappers.-##_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx9j: // global
           D2 = F64[Sp + 8];
           D1 = F64[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.-##_entry(D2,
                                             D1,
                                             R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.-##_entry() //  [D1, D2]
         { info_tbl: [(cx9o,
                       label: GHC.PrimopWrappers.-##_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx9o: // global
           D1 = %MO_F_Sub_W64(D1, D2);
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.652834032 UTC

[section ""data" . GHC.PrimopWrappers.*##_closure" {
     GHC.PrimopWrappers.*##_closure:
         const GHC.PrimopWrappers.*##_info;
 },
 GHC.PrimopWrappers.*##_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx9s: // global
           D2 = F64[Sp + 8];
           D1 = F64[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.*##_entry(D2,
                                             D1,
                                             R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.*##_entry() //  [D1, D2]
         { info_tbl: [(cx9x,
                       label: GHC.PrimopWrappers.*##_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx9x: // global
           D1 = %MO_F_Mul_W64(D1, D2);
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.654366682 UTC

[section ""data" . GHC.PrimopWrappers./##_closure" {
     GHC.PrimopWrappers./##_closure:
         const GHC.PrimopWrappers./##_info;
 },
 GHC.PrimopWrappers./##_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx9B: // global
           D2 = F64[Sp + 8];
           D1 = F64[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers./##_entry(D2,
                                             D1,
                                             R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers./##_entry() //  [D1, D2]
         { info_tbl: [(cx9G,
                       label: GHC.PrimopWrappers./##_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx9G: // global
           D1 = %MO_F_Quot_W64(D1, D2);
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.655354259 UTC

[section ""data" . GHC.PrimopWrappers.negateDouble#_closure" {
     GHC.PrimopWrappers.negateDouble#_closure:
         const GHC.PrimopWrappers.negateDouble#_info;
 },
 GHC.PrimopWrappers.negateDouble#_entry() //  [D1]
         { info_tbl: [(cx9O,
                       label: GHC.PrimopWrappers.negateDouble#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx9O: // global
           D1 = %MO_F_Neg_W64(D1);
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.656195801 UTC

[section ""data" . GHC.PrimopWrappers.fabsDouble#_closure" {
     GHC.PrimopWrappers.fabsDouble#_closure:
         const GHC.PrimopWrappers.fabsDouble#_info;
 },
 GHC.PrimopWrappers.fabsDouble#_entry() //  [D1]
         { info_tbl: [(cx9W,
                       label: GHC.PrimopWrappers.fabsDouble#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cx9W: // global
           _B1::F64 = D1;
           (_cx9V::F64) = call MO_F64_Fabs(_B1::F64);
           D1 = _cx9V::F64;
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.657041422 UTC

[section ""data" . GHC.PrimopWrappers.double2Int#_closure" {
     GHC.PrimopWrappers.double2Int#_closure:
         const GHC.PrimopWrappers.double2Int#_info;
 },
 GHC.PrimopWrappers.double2Int#_entry() //  [D1]
         { info_tbl: [(cxa4,
                       label: GHC.PrimopWrappers.double2Int#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxa4: // global
           R1 = %MO_FS_Conv_W64_W64(D1);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.657922912 UTC

[section ""data" . GHC.PrimopWrappers.double2Float#_closure" {
     GHC.PrimopWrappers.double2Float#_closure:
         const GHC.PrimopWrappers.double2Float#_info;
 },
 GHC.PrimopWrappers.double2Float#_entry() //  [D1]
         { info_tbl: [(cxac,
                       label: GHC.PrimopWrappers.double2Float#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxac: // global
           F1 = %MO_FF_Conv_W64_W32(D1);
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.658719152 UTC

[section ""data" . GHC.PrimopWrappers.expDouble#_closure" {
     GHC.PrimopWrappers.expDouble#_closure:
         const GHC.PrimopWrappers.expDouble#_info;
 },
 GHC.PrimopWrappers.expDouble#_entry() //  [D1]
         { info_tbl: [(cxal,
                       label: GHC.PrimopWrappers.expDouble#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxal: // global
           _cxak::F64 = D1;
           (_cxaj::F64) = call MO_F64_Exp(_cxak::F64);
           D1 = _cxaj::F64;
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.659555994 UTC

[section ""data" . GHC.PrimopWrappers.logDouble#_closure" {
     GHC.PrimopWrappers.logDouble#_closure:
         const GHC.PrimopWrappers.logDouble#_info;
 },
 GHC.PrimopWrappers.logDouble#_entry() //  [D1]
         { info_tbl: [(cxau,
                       label: GHC.PrimopWrappers.logDouble#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxau: // global
           _cxat::F64 = D1;
           (_cxas::F64) = call MO_F64_Log(_cxat::F64);
           D1 = _cxas::F64;
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.660416515 UTC

[section ""data" . GHC.PrimopWrappers.sqrtDouble#_closure" {
     GHC.PrimopWrappers.sqrtDouble#_closure:
         const GHC.PrimopWrappers.sqrtDouble#_info;
 },
 GHC.PrimopWrappers.sqrtDouble#_entry() //  [D1]
         { info_tbl: [(cxaD,
                       label: GHC.PrimopWrappers.sqrtDouble#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxaD: // global
           _cxaC::F64 = D1;
           (_cxaB::F64) = call MO_F64_Sqrt(_cxaC::F64);
           D1 = _cxaB::F64;
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.661325289 UTC

[section ""data" . GHC.PrimopWrappers.sinDouble#_closure" {
     GHC.PrimopWrappers.sinDouble#_closure:
         const GHC.PrimopWrappers.sinDouble#_info;
 },
 GHC.PrimopWrappers.sinDouble#_entry() //  [D1]
         { info_tbl: [(cxaM,
                       label: GHC.PrimopWrappers.sinDouble#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxaM: // global
           _cxaL::F64 = D1;
           (_cxaK::F64) = call MO_F64_Sin(_cxaL::F64);
           D1 = _cxaK::F64;
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.662158999 UTC

[section ""data" . GHC.PrimopWrappers.cosDouble#_closure" {
     GHC.PrimopWrappers.cosDouble#_closure:
         const GHC.PrimopWrappers.cosDouble#_info;
 },
 GHC.PrimopWrappers.cosDouble#_entry() //  [D1]
         { info_tbl: [(cxaV,
                       label: GHC.PrimopWrappers.cosDouble#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxaV: // global
           _cxaU::F64 = D1;
           (_cxaT::F64) = call MO_F64_Cos(_cxaU::F64);
           D1 = _cxaT::F64;
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.663022516 UTC

[section ""data" . GHC.PrimopWrappers.tanDouble#_closure" {
     GHC.PrimopWrappers.tanDouble#_closure:
         const GHC.PrimopWrappers.tanDouble#_info;
 },
 GHC.PrimopWrappers.tanDouble#_entry() //  [D1]
         { info_tbl: [(cxb4,
                       label: GHC.PrimopWrappers.tanDouble#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxb4: // global
           _cxb3::F64 = D1;
           (_cxb2::F64) = call MO_F64_Tan(_cxb3::F64);
           D1 = _cxb2::F64;
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.663847986 UTC

[section ""data" . GHC.PrimopWrappers.asinDouble#_closure" {
     GHC.PrimopWrappers.asinDouble#_closure:
         const GHC.PrimopWrappers.asinDouble#_info;
 },
 GHC.PrimopWrappers.asinDouble#_entry() //  [D1]
         { info_tbl: [(cxbd,
                       label: GHC.PrimopWrappers.asinDouble#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxbd: // global
           _cxbc::F64 = D1;
           (_cxbb::F64) = call MO_F64_Asin(_cxbc::F64);
           D1 = _cxbb::F64;
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.664716976 UTC

[section ""data" . GHC.PrimopWrappers.acosDouble#_closure" {
     GHC.PrimopWrappers.acosDouble#_closure:
         const GHC.PrimopWrappers.acosDouble#_info;
 },
 GHC.PrimopWrappers.acosDouble#_entry() //  [D1]
         { info_tbl: [(cxbm,
                       label: GHC.PrimopWrappers.acosDouble#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxbm: // global
           _cxbl::F64 = D1;
           (_cxbk::F64) = call MO_F64_Acos(_cxbl::F64);
           D1 = _cxbk::F64;
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.665603873 UTC

[section ""data" . GHC.PrimopWrappers.atanDouble#_closure" {
     GHC.PrimopWrappers.atanDouble#_closure:
         const GHC.PrimopWrappers.atanDouble#_info;
 },
 GHC.PrimopWrappers.atanDouble#_entry() //  [D1]
         { info_tbl: [(cxbv,
                       label: GHC.PrimopWrappers.atanDouble#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxbv: // global
           _cxbu::F64 = D1;
           (_cxbt::F64) = call MO_F64_Atan(_cxbu::F64);
           D1 = _cxbt::F64;
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.66644795 UTC

[section ""data" . GHC.PrimopWrappers.sinhDouble#_closure" {
     GHC.PrimopWrappers.sinhDouble#_closure:
         const GHC.PrimopWrappers.sinhDouble#_info;
 },
 GHC.PrimopWrappers.sinhDouble#_entry() //  [D1]
         { info_tbl: [(cxbE,
                       label: GHC.PrimopWrappers.sinhDouble#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxbE: // global
           _cxbD::F64 = D1;
           (_cxbC::F64) = call MO_F64_Sinh(_cxbD::F64);
           D1 = _cxbC::F64;
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.667231291 UTC

[section ""data" . GHC.PrimopWrappers.coshDouble#_closure" {
     GHC.PrimopWrappers.coshDouble#_closure:
         const GHC.PrimopWrappers.coshDouble#_info;
 },
 GHC.PrimopWrappers.coshDouble#_entry() //  [D1]
         { info_tbl: [(cxbN,
                       label: GHC.PrimopWrappers.coshDouble#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxbN: // global
           _cxbM::F64 = D1;
           (_cxbL::F64) = call MO_F64_Cosh(_cxbM::F64);
           D1 = _cxbL::F64;
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.668082005 UTC

[section ""data" . GHC.PrimopWrappers.tanhDouble#_closure" {
     GHC.PrimopWrappers.tanhDouble#_closure:
         const GHC.PrimopWrappers.tanhDouble#_info;
 },
 GHC.PrimopWrappers.tanhDouble#_entry() //  [D1]
         { info_tbl: [(cxbW,
                       label: GHC.PrimopWrappers.tanhDouble#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxbW: // global
           _cxbV::F64 = D1;
           (_cxbU::F64) = call MO_F64_Tanh(_cxbV::F64);
           D1 = _cxbU::F64;
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.668975907 UTC

[section ""data" . GHC.PrimopWrappers.**##_closure" {
     GHC.PrimopWrappers.**##_closure:
         const GHC.PrimopWrappers.**##_info;
 },
 GHC.PrimopWrappers.**##_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxc0: // global
           D2 = F64[Sp + 8];
           D1 = F64[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.**##_entry(D2,
                                              D1,
                                              R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.**##_entry() //  [D1, D2]
         { info_tbl: [(cxc7,
                       label: GHC.PrimopWrappers.**##_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxc7: // global
           _cxc5::F64 = D1;
           _cxc6::F64 = D2;
           (_cxc4::F64) = call MO_F64_Pwr(_cxc5::F64, _cxc6::F64);
           D1 = _cxc4::F64;
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.67043253 UTC

[section ""data" . GHC.PrimopWrappers.decodeDouble_2Int#_closure" {
     GHC.PrimopWrappers.decodeDouble_2Int#_closure:
         const GHC.PrimopWrappers.decodeDouble_2Int#_info;
 },
 GHC.PrimopWrappers.decodeDouble_2Int#_entry() //  [D1]
         { info_tbl: [(cxce,
                       label: GHC.PrimopWrappers.decodeDouble_2Int#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxce: // global
           D1 = D1;
           call stg_decodeDouble_2Int#(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.67120613 UTC

[section ""data" . GHC.PrimopWrappers.decodeDouble_Int64#_closure" {
     GHC.PrimopWrappers.decodeDouble_Int64#_closure:
         const GHC.PrimopWrappers.decodeDouble_Int64#_info;
 },
 GHC.PrimopWrappers.decodeDouble_Int64#_entry() //  [D1]
         { info_tbl: [(cxcl,
                       label: GHC.PrimopWrappers.decodeDouble_Int64#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxcl: // global
           D1 = D1;
           call stg_decodeDouble_Int64#(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.672044049 UTC

[section ""data" . GHC.PrimopWrappers.gtFloat#_closure" {
     GHC.PrimopWrappers.gtFloat#_closure:
         const GHC.PrimopWrappers.gtFloat#_info;
 },
 GHC.PrimopWrappers.gtFloat#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxcp: // global
           F2 = F32[Sp + 8];
           F1 = F32[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.gtFloat#_entry(F2,
                                                  F1,
                                                  R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.gtFloat#_entry() //  [F1, F2]
         { info_tbl: [(cxcu,
                       label: GHC.PrimopWrappers.gtFloat#_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxcu: // global
           R1 = %MO_F_Gt_W32(F1, F2);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.673039419 UTC

[section ""data" . GHC.PrimopWrappers.geFloat#_closure" {
     GHC.PrimopWrappers.geFloat#_closure:
         const GHC.PrimopWrappers.geFloat#_info;
 },
 GHC.PrimopWrappers.geFloat#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxcy: // global
           F2 = F32[Sp + 8];
           F1 = F32[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.geFloat#_entry(F2,
                                                  F1,
                                                  R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.geFloat#_entry() //  [F1, F2]
         { info_tbl: [(cxcD,
                       label: GHC.PrimopWrappers.geFloat#_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxcD: // global
           R1 = %MO_F_Ge_W32(F1, F2);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.674121491 UTC

[section ""data" . GHC.PrimopWrappers.eqFloat#_closure" {
     GHC.PrimopWrappers.eqFloat#_closure:
         const GHC.PrimopWrappers.eqFloat#_info;
 },
 GHC.PrimopWrappers.eqFloat#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxcH: // global
           F2 = F32[Sp + 8];
           F1 = F32[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.eqFloat#_entry(F2,
                                                  F1,
                                                  R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.eqFloat#_entry() //  [F1, F2]
         { info_tbl: [(cxcM,
                       label: GHC.PrimopWrappers.eqFloat#_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxcM: // global
           R1 = %MO_F_Eq_W32(F1, F2);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.675134979 UTC

[section ""data" . GHC.PrimopWrappers.neFloat#_closure" {
     GHC.PrimopWrappers.neFloat#_closure:
         const GHC.PrimopWrappers.neFloat#_info;
 },
 GHC.PrimopWrappers.neFloat#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxcQ: // global
           F2 = F32[Sp + 8];
           F1 = F32[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.neFloat#_entry(F2,
                                                  F1,
                                                  R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.neFloat#_entry() //  [F1, F2]
         { info_tbl: [(cxcV,
                       label: GHC.PrimopWrappers.neFloat#_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxcV: // global
           R1 = %MO_F_Ne_W32(F1, F2);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.676193125 UTC

[section ""data" . GHC.PrimopWrappers.ltFloat#_closure" {
     GHC.PrimopWrappers.ltFloat#_closure:
         const GHC.PrimopWrappers.ltFloat#_info;
 },
 GHC.PrimopWrappers.ltFloat#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxcZ: // global
           F2 = F32[Sp + 8];
           F1 = F32[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.ltFloat#_entry(F2,
                                                  F1,
                                                  R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.ltFloat#_entry() //  [F1, F2]
         { info_tbl: [(cxd4,
                       label: GHC.PrimopWrappers.ltFloat#_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxd4: // global
           R1 = %MO_F_Lt_W32(F1, F2);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.677160289 UTC

[section ""data" . GHC.PrimopWrappers.leFloat#_closure" {
     GHC.PrimopWrappers.leFloat#_closure:
         const GHC.PrimopWrappers.leFloat#_info;
 },
 GHC.PrimopWrappers.leFloat#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxd8: // global
           F2 = F32[Sp + 8];
           F1 = F32[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.leFloat#_entry(F2,
                                                  F1,
                                                  R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.leFloat#_entry() //  [F1, F2]
         { info_tbl: [(cxdd,
                       label: GHC.PrimopWrappers.leFloat#_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxdd: // global
           R1 = %MO_F_Le_W32(F1, F2);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.678486718 UTC

[section ""data" . GHC.PrimopWrappers.plusFloat#_closure" {
     GHC.PrimopWrappers.plusFloat#_closure:
         const GHC.PrimopWrappers.plusFloat#_info;
 },
 GHC.PrimopWrappers.plusFloat#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxdh: // global
           F2 = F32[Sp + 8];
           F1 = F32[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.plusFloat#_entry(F2,
                                                    F1,
                                                    R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.plusFloat#_entry() //  [F1, F2]
         { info_tbl: [(cxdm,
                       label: GHC.PrimopWrappers.plusFloat#_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxdm: // global
           F1 = %MO_F_Add_W32(F1, F2);
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.679525323 UTC

[section ""data" . GHC.PrimopWrappers.minusFloat#_closure" {
     GHC.PrimopWrappers.minusFloat#_closure:
         const GHC.PrimopWrappers.minusFloat#_info;
 },
 GHC.PrimopWrappers.minusFloat#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxdq: // global
           F2 = F32[Sp + 8];
           F1 = F32[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.minusFloat#_entry(F2,
                                                     F1,
                                                     R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.minusFloat#_entry() //  [F1, F2]
         { info_tbl: [(cxdv,
                       label: GHC.PrimopWrappers.minusFloat#_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxdv: // global
           F1 = %MO_F_Sub_W32(F1, F2);
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.680541195 UTC

[section ""data" . GHC.PrimopWrappers.timesFloat#_closure" {
     GHC.PrimopWrappers.timesFloat#_closure:
         const GHC.PrimopWrappers.timesFloat#_info;
 },
 GHC.PrimopWrappers.timesFloat#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxdz: // global
           F2 = F32[Sp + 8];
           F1 = F32[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.timesFloat#_entry(F2,
                                                     F1,
                                                     R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.timesFloat#_entry() //  [F1, F2]
         { info_tbl: [(cxdE,
                       label: GHC.PrimopWrappers.timesFloat#_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxdE: // global
           F1 = %MO_F_Mul_W32(F1, F2);
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.681664572 UTC

[section ""data" . GHC.PrimopWrappers.divideFloat#_closure" {
     GHC.PrimopWrappers.divideFloat#_closure:
         const GHC.PrimopWrappers.divideFloat#_info;
 },
 GHC.PrimopWrappers.divideFloat#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxdI: // global
           F2 = F32[Sp + 8];
           F1 = F32[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.divideFloat#_entry(F2,
                                                      F1,
                                                      R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.divideFloat#_entry() //  [F1, F2]
         { info_tbl: [(cxdN,
                       label: GHC.PrimopWrappers.divideFloat#_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxdN: // global
           F1 = %MO_F_Quot_W32(F1, F2);
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.683430317 UTC

[section ""data" . GHC.PrimopWrappers.negateFloat#_closure" {
     GHC.PrimopWrappers.negateFloat#_closure:
         const GHC.PrimopWrappers.negateFloat#_info;
 },
 GHC.PrimopWrappers.negateFloat#_entry() //  [F1]
         { info_tbl: [(cxdV,
                       label: GHC.PrimopWrappers.negateFloat#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxdV: // global
           F1 = %MO_F_Neg_W32(F1);
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.684266725 UTC

[section ""data" . GHC.PrimopWrappers.fabsFloat#_closure" {
     GHC.PrimopWrappers.fabsFloat#_closure:
         const GHC.PrimopWrappers.fabsFloat#_info;
 },
 GHC.PrimopWrappers.fabsFloat#_entry() //  [F1]
         { info_tbl: [(cxe3,
                       label: GHC.PrimopWrappers.fabsFloat#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxe3: // global
           _B1::F32 = F1;
           (_cxe2::F32) = call MO_F32_Fabs(_B1::F32);
           F1 = _cxe2::F32;
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.68510843 UTC

[section ""data" . GHC.PrimopWrappers.float2Int#_closure" {
     GHC.PrimopWrappers.float2Int#_closure:
         const GHC.PrimopWrappers.float2Int#_info;
 },
 GHC.PrimopWrappers.float2Int#_entry() //  [F1]
         { info_tbl: [(cxeb,
                       label: GHC.PrimopWrappers.float2Int#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxeb: // global
           R1 = %MO_FS_Conv_W32_W64(F1);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.685987874 UTC

[section ""data" . GHC.PrimopWrappers.expFloat#_closure" {
     GHC.PrimopWrappers.expFloat#_closure:
         const GHC.PrimopWrappers.expFloat#_info;
 },
 GHC.PrimopWrappers.expFloat#_entry() //  [F1]
         { info_tbl: [(cxek,
                       label: GHC.PrimopWrappers.expFloat#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxek: // global
           _cxej::F32 = F1;
           (_cxei::F32) = call MO_F32_Exp(_cxej::F32);
           F1 = _cxei::F32;
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.686819733 UTC

[section ""data" . GHC.PrimopWrappers.logFloat#_closure" {
     GHC.PrimopWrappers.logFloat#_closure:
         const GHC.PrimopWrappers.logFloat#_info;
 },
 GHC.PrimopWrappers.logFloat#_entry() //  [F1]
         { info_tbl: [(cxet,
                       label: GHC.PrimopWrappers.logFloat#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxet: // global
           _cxes::F32 = F1;
           (_cxer::F32) = call MO_F32_Log(_cxes::F32);
           F1 = _cxer::F32;
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.687680763 UTC

[section ""data" . GHC.PrimopWrappers.sqrtFloat#_closure" {
     GHC.PrimopWrappers.sqrtFloat#_closure:
         const GHC.PrimopWrappers.sqrtFloat#_info;
 },
 GHC.PrimopWrappers.sqrtFloat#_entry() //  [F1]
         { info_tbl: [(cxeC,
                       label: GHC.PrimopWrappers.sqrtFloat#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxeC: // global
           _cxeB::F32 = F1;
           (_cxeA::F32) = call MO_F32_Sqrt(_cxeB::F32);
           F1 = _cxeA::F32;
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.688564847 UTC

[section ""data" . GHC.PrimopWrappers.sinFloat#_closure" {
     GHC.PrimopWrappers.sinFloat#_closure:
         const GHC.PrimopWrappers.sinFloat#_info;
 },
 GHC.PrimopWrappers.sinFloat#_entry() //  [F1]
         { info_tbl: [(cxeL,
                       label: GHC.PrimopWrappers.sinFloat#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxeL: // global
           _cxeK::F32 = F1;
           (_cxeJ::F32) = call MO_F32_Sin(_cxeK::F32);
           F1 = _cxeJ::F32;
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.689458016 UTC

[section ""data" . GHC.PrimopWrappers.cosFloat#_closure" {
     GHC.PrimopWrappers.cosFloat#_closure:
         const GHC.PrimopWrappers.cosFloat#_info;
 },
 GHC.PrimopWrappers.cosFloat#_entry() //  [F1]
         { info_tbl: [(cxeU,
                       label: GHC.PrimopWrappers.cosFloat#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxeU: // global
           _cxeT::F32 = F1;
           (_cxeS::F32) = call MO_F32_Cos(_cxeT::F32);
           F1 = _cxeS::F32;
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.690275336 UTC

[section ""data" . GHC.PrimopWrappers.tanFloat#_closure" {
     GHC.PrimopWrappers.tanFloat#_closure:
         const GHC.PrimopWrappers.tanFloat#_info;
 },
 GHC.PrimopWrappers.tanFloat#_entry() //  [F1]
         { info_tbl: [(cxf3,
                       label: GHC.PrimopWrappers.tanFloat#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxf3: // global
           _cxf2::F32 = F1;
           (_cxf1::F32) = call MO_F32_Tan(_cxf2::F32);
           F1 = _cxf1::F32;
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.691094459 UTC

[section ""data" . GHC.PrimopWrappers.asinFloat#_closure" {
     GHC.PrimopWrappers.asinFloat#_closure:
         const GHC.PrimopWrappers.asinFloat#_info;
 },
 GHC.PrimopWrappers.asinFloat#_entry() //  [F1]
         { info_tbl: [(cxfc,
                       label: GHC.PrimopWrappers.asinFloat#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxfc: // global
           _cxfb::F32 = F1;
           (_cxfa::F32) = call MO_F32_Asin(_cxfb::F32);
           F1 = _cxfa::F32;
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.691969925 UTC

[section ""data" . GHC.PrimopWrappers.acosFloat#_closure" {
     GHC.PrimopWrappers.acosFloat#_closure:
         const GHC.PrimopWrappers.acosFloat#_info;
 },
 GHC.PrimopWrappers.acosFloat#_entry() //  [F1]
         { info_tbl: [(cxfl,
                       label: GHC.PrimopWrappers.acosFloat#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxfl: // global
           _cxfk::F32 = F1;
           (_cxfj::F32) = call MO_F32_Acos(_cxfk::F32);
           F1 = _cxfj::F32;
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.692801938 UTC

[section ""data" . GHC.PrimopWrappers.atanFloat#_closure" {
     GHC.PrimopWrappers.atanFloat#_closure:
         const GHC.PrimopWrappers.atanFloat#_info;
 },
 GHC.PrimopWrappers.atanFloat#_entry() //  [F1]
         { info_tbl: [(cxfu,
                       label: GHC.PrimopWrappers.atanFloat#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxfu: // global
           _cxft::F32 = F1;
           (_cxfs::F32) = call MO_F32_Atan(_cxft::F32);
           F1 = _cxfs::F32;
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.694045583 UTC

[section ""data" . GHC.PrimopWrappers.sinhFloat#_closure" {
     GHC.PrimopWrappers.sinhFloat#_closure:
         const GHC.PrimopWrappers.sinhFloat#_info;
 },
 GHC.PrimopWrappers.sinhFloat#_entry() //  [F1]
         { info_tbl: [(cxfD,
                       label: GHC.PrimopWrappers.sinhFloat#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxfD: // global
           _cxfC::F32 = F1;
           (_cxfB::F32) = call MO_F32_Sinh(_cxfC::F32);
           F1 = _cxfB::F32;
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.694893137 UTC

[section ""data" . GHC.PrimopWrappers.coshFloat#_closure" {
     GHC.PrimopWrappers.coshFloat#_closure:
         const GHC.PrimopWrappers.coshFloat#_info;
 },
 GHC.PrimopWrappers.coshFloat#_entry() //  [F1]
         { info_tbl: [(cxfM,
                       label: GHC.PrimopWrappers.coshFloat#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxfM: // global
           _cxfL::F32 = F1;
           (_cxfK::F32) = call MO_F32_Cosh(_cxfL::F32);
           F1 = _cxfK::F32;
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.69577477 UTC

[section ""data" . GHC.PrimopWrappers.tanhFloat#_closure" {
     GHC.PrimopWrappers.tanhFloat#_closure:
         const GHC.PrimopWrappers.tanhFloat#_info;
 },
 GHC.PrimopWrappers.tanhFloat#_entry() //  [F1]
         { info_tbl: [(cxfV,
                       label: GHC.PrimopWrappers.tanhFloat#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxfV: // global
           _cxfU::F32 = F1;
           (_cxfT::F32) = call MO_F32_Tanh(_cxfU::F32);
           F1 = _cxfT::F32;
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.696664866 UTC

[section ""data" . GHC.PrimopWrappers.powerFloat#_closure" {
     GHC.PrimopWrappers.powerFloat#_closure:
         const GHC.PrimopWrappers.powerFloat#_info;
 },
 GHC.PrimopWrappers.powerFloat#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxfZ: // global
           F2 = F32[Sp + 8];
           F1 = F32[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.powerFloat#_entry(F2,
                                                     F1,
                                                     R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.powerFloat#_entry() //  [F1, F2]
         { info_tbl: [(cxg6,
                       label: GHC.PrimopWrappers.powerFloat#_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxg6: // global
           _cxg4::F32 = F1;
           _cxg5::F32 = F2;
           (_cxg3::F32) = call MO_F32_Pwr(_cxg4::F32, _cxg5::F32);
           F1 = _cxg3::F32;
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.697729198 UTC

[section ""data" . GHC.PrimopWrappers.float2Double#_closure" {
     GHC.PrimopWrappers.float2Double#_closure:
         const GHC.PrimopWrappers.float2Double#_info;
 },
 GHC.PrimopWrappers.float2Double#_entry() //  [F1]
         { info_tbl: [(cxge,
                       label: GHC.PrimopWrappers.float2Double#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxge: // global
           D1 = %MO_FF_Conv_W32_W64(F1);
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.698574949 UTC

[section ""data" . GHC.PrimopWrappers.decodeFloat_Int#_closure" {
     GHC.PrimopWrappers.decodeFloat_Int#_closure:
         const GHC.PrimopWrappers.decodeFloat_Int#_info;
 },
 GHC.PrimopWrappers.decodeFloat_Int#_entry() //  [F1]
         { info_tbl: [(cxgl,
                       label: GHC.PrimopWrappers.decodeFloat_Int#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxgl: // global
           F1 = F1;
           call stg_decodeFloat_Int#(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.699427317 UTC

[section ""data" . GHC.PrimopWrappers.newArray#_closure" {
     GHC.PrimopWrappers.newArray#_closure:
         const GHC.PrimopWrappers.newArray#_info;
 },
 GHC.PrimopWrappers.newArray#_entry() //  [R2, R3]
         { info_tbl: [(cxgs,
                       label: GHC.PrimopWrappers.newArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 13} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxgs: // global
           _B3::I64 = R2;
           R2 = R3;
           R1 = _B3::I64;
           call stg_newArray#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.700295058 UTC

[section ""data" . GHC.PrimopWrappers.sameMutableArray#_closure" {
     GHC.PrimopWrappers.sameMutableArray#_closure:
         const GHC.PrimopWrappers.sameMutableArray#_info;
 },
 GHC.PrimopWrappers.sameMutableArray#_entry() //  [R2, R3]
         { info_tbl: [(cxgA,
                       label: GHC.PrimopWrappers.sameMutableArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxgA: // global
           R1 = R2 == R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.701132908 UTC

[section ""data" . GHC.PrimopWrappers.readArray#_closure" {
     GHC.PrimopWrappers.readArray#_closure:
         const GHC.PrimopWrappers.readArray#_info;
 },
 GHC.PrimopWrappers.readArray#_entry() //  [R2, R3]
         { info_tbl: [(cxgI,
                       label: GHC.PrimopWrappers.readArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxgI: // global
           R1 = P64[(R2 + 24) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.70212279 UTC

[section ""data" . GHC.PrimopWrappers.writeArray#_closure" {
     GHC.PrimopWrappers.writeArray#_closure:
         const GHC.PrimopWrappers.writeArray#_info;
 },
 GHC.PrimopWrappers.writeArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cxgP,
                       label: GHC.PrimopWrappers.writeArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 21} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxgP: // global
           _B2::P64 = R4;
           _B3::I64 = R3;
           call MO_WriteBarrier();
           P64[(R2 + 24) + (_B3::I64 << 3)] = _B2::P64;
           I64[R2] = stg_MUT_ARR_PTRS_DIRTY_info;
           I8[(R2 + 24) + ((I64[R2 + 8] << 3) + (_B3::I64 >> 7))] = 1 :: W8;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.703039848 UTC

[section ""data" . GHC.PrimopWrappers.sizeofArray#_closure" {
     GHC.PrimopWrappers.sizeofArray#_closure:
         const GHC.PrimopWrappers.sizeofArray#_info;
 },
 GHC.PrimopWrappers.sizeofArray#_entry() //  [R2]
         { info_tbl: [(cxgX,
                       label: GHC.PrimopWrappers.sizeofArray#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxgX: // global
           R1 = I64[R2 + 8];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.703861745 UTC

[section ""data" . GHC.PrimopWrappers.sizeofMutableArray#_closure" {
     GHC.PrimopWrappers.sizeofMutableArray#_closure:
         const GHC.PrimopWrappers.sizeofMutableArray#_info;
 },
 GHC.PrimopWrappers.sizeofMutableArray#_entry() //  [R2]
         { info_tbl: [(cxh5,
                       label: GHC.PrimopWrappers.sizeofMutableArray#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxh5: // global
           R1 = I64[R2 + 8];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.704693354 UTC

[section ""data" . GHC.PrimopWrappers.indexArray#_closure" {
     GHC.PrimopWrappers.indexArray#_closure:
         const GHC.PrimopWrappers.indexArray#_info;
 },
 GHC.PrimopWrappers.indexArray#_entry() //  [R2, R3]
         { info_tbl: [(cxhd,
                       label: GHC.PrimopWrappers.indexArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxhd: // global
           R1 = P64[(R2 + 24) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.705613367 UTC

[section ""data" . GHC.PrimopWrappers.unsafeFreezeArray#_closure" {
     GHC.PrimopWrappers.unsafeFreezeArray#_closure:
         const GHC.PrimopWrappers.unsafeFreezeArray#_info;
 },
 GHC.PrimopWrappers.unsafeFreezeArray#_entry() //  [R2]
         { info_tbl: [(cxhl,
                       label: GHC.PrimopWrappers.unsafeFreezeArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxhl: // global
           I64[R2] = stg_MUT_ARR_PTRS_FROZEN0_info;
           R1 = R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.706483484 UTC

[section ""data" . GHC.PrimopWrappers.unsafeThawArray#_closure" {
     GHC.PrimopWrappers.unsafeThawArray#_closure:
         const GHC.PrimopWrappers.unsafeThawArray#_info;
 },
 GHC.PrimopWrappers.unsafeThawArray#_entry() //  [R2]
         { info_tbl: [(cxhs,
                       label: GHC.PrimopWrappers.unsafeThawArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxhs: // global
           R1 = R2;
           call stg_unsafeThawArray#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.70742158 UTC

[section ""data" . GHC.PrimopWrappers.copyArray#_closure" {
     GHC.PrimopWrappers.copyArray#_closure:
         const GHC.PrimopWrappers.copyArray#_info;
 },
 GHC.PrimopWrappers.copyArray#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxhw: // global
           R6 = I64[Sp + 32];
           R5 = I64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 40;
           call GHC.PrimopWrappers.copyArray#_entry(R6,
                                                    R5,
                                                    R4,
                                                    R3,
                                                    R2,
                                                    R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.copyArray#_entry() //  [R2, R3, R4, R5, R6]
         { info_tbl: [(cxhA,
                       label: GHC.PrimopWrappers.copyArray#_info
                       rep:HeapRep static {
                             Fun {arity: 6
                                  fun_type: ArgGen [False, True, False, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxhA: // global
           _B3::I64 = R5;
           R5 = R6;
           _B4::P64 = R4;
           R4 = _B3::I64;
           _B5::I64 = R3;
           R3 = _B4::P64;
           _B6::P64 = R2;
           R2 = _B5::I64;
           R1 = _B6::P64;
           call stg_copyArray#(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.70866098 UTC

[section ""data" . GHC.PrimopWrappers.copyMutableArray#_closure" {
     GHC.PrimopWrappers.copyMutableArray#_closure:
         const GHC.PrimopWrappers.copyMutableArray#_info;
 },
 GHC.PrimopWrappers.copyMutableArray#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxhE: // global
           R6 = I64[Sp + 32];
           R5 = I64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 40;
           call GHC.PrimopWrappers.copyMutableArray#_entry(R6,
                                                           R5,
                                                           R4,
                                                           R3,
                                                           R2,
                                                           R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.copyMutableArray#_entry() //  [R2, R3, R4, R5,
                                                   R6]
         { info_tbl: [(cxhI,
                       label: GHC.PrimopWrappers.copyMutableArray#_info
                       rep:HeapRep static {
                             Fun {arity: 6
                                  fun_type: ArgGen [False, True, False, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxhI: // global
           _B3::I64 = R5;
           R5 = R6;
           _B4::P64 = R4;
           R4 = _B3::I64;
           _B5::I64 = R3;
           R3 = _B4::P64;
           _B6::P64 = R2;
           R2 = _B5::I64;
           R1 = _B6::P64;
           call stg_copyMutableArray#(R5,
                                      R4,
                                      R3,
                                      R2,
                                      R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.709852668 UTC

[section ""data" . GHC.PrimopWrappers.cloneArray#_closure" {
     GHC.PrimopWrappers.cloneArray#_closure:
         const GHC.PrimopWrappers.cloneArray#_info;
 },
 GHC.PrimopWrappers.cloneArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cxhP,
                       label: GHC.PrimopWrappers.cloneArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxhP: // global
           _B2::I64 = R3;
           R3 = R4;
           _B3::P64 = R2;
           R2 = _B2::I64;
           R1 = _B3::P64;
           call stg_cloneArray#(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.711508939 UTC

[section ""data" . GHC.PrimopWrappers.cloneMutableArray#_closure" {
     GHC.PrimopWrappers.cloneMutableArray#_closure:
         const GHC.PrimopWrappers.cloneMutableArray#_info;
 },
 GHC.PrimopWrappers.cloneMutableArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cxhW,
                       label: GHC.PrimopWrappers.cloneMutableArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxhW: // global
           _B3::I64 = R3;
           R3 = R4;
           _B4::P64 = R2;
           R2 = _B3::I64;
           R1 = _B4::P64;
           call stg_cloneMutableArray#(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.712361623 UTC

[section ""data" . GHC.PrimopWrappers.freezeArray#_closure" {
     GHC.PrimopWrappers.freezeArray#_closure:
         const GHC.PrimopWrappers.freezeArray#_info;
 },
 GHC.PrimopWrappers.freezeArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cxi3,
                       label: GHC.PrimopWrappers.freezeArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxi3: // global
           _B3::I64 = R3;
           R3 = R4;
           _B4::P64 = R2;
           R2 = _B3::I64;
           R1 = _B4::P64;
           call stg_freezeArray#(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.713258832 UTC

[section ""data" . GHC.PrimopWrappers.thawArray#_closure" {
     GHC.PrimopWrappers.thawArray#_closure:
         const GHC.PrimopWrappers.thawArray#_info;
 },
 GHC.PrimopWrappers.thawArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cxia,
                       label: GHC.PrimopWrappers.thawArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxia: // global
           _B3::I64 = R3;
           R3 = R4;
           _B4::P64 = R2;
           R2 = _B3::I64;
           R1 = _B4::P64;
           call stg_thawArray#(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.714178442 UTC

[section ""data" . GHC.PrimopWrappers.casArray#_closure" {
     GHC.PrimopWrappers.casArray#_closure:
         const GHC.PrimopWrappers.casArray#_info;
 },
 GHC.PrimopWrappers.casArray#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxie: // global
           R5 = P64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 32;
           call GHC.PrimopWrappers.casArray#_entry(R5,
                                                   R4,
                                                   R3,
                                                   R2,
                                                   R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.casArray#_entry() //  [R2, R3, R4, R5]
         { info_tbl: [(cxii,
                       label: GHC.PrimopWrappers.casArray#_info
                       rep:HeapRep static {
                             Fun {arity: 5 fun_type: ArgGen [False, True, False, False]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxii: // global
           _B3::P64 = R4;
           R4 = R5;
           _B4::I64 = R3;
           R3 = _B3::P64;
           _B5::P64 = R2;
           R2 = _B4::I64;
           R1 = _B5::P64;
           call stg_casArray#(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.715215921 UTC

[section ""data" . GHC.PrimopWrappers.newSmallArray#_closure" {
     GHC.PrimopWrappers.newSmallArray#_closure:
         const GHC.PrimopWrappers.newSmallArray#_info;
 },
 GHC.PrimopWrappers.newSmallArray#_entry() //  [R2, R3]
         { info_tbl: [(cxip,
                       label: GHC.PrimopWrappers.newSmallArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 13} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxip: // global
           _B3::I64 = R2;
           R2 = R3;
           R1 = _B3::I64;
           call stg_newSmallArray#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.71612303 UTC

[section ""data" . GHC.PrimopWrappers.sameSmallMutableArray#_closure" {
     GHC.PrimopWrappers.sameSmallMutableArray#_closure:
         const GHC.PrimopWrappers.sameSmallMutableArray#_info;
 },
 GHC.PrimopWrappers.sameSmallMutableArray#_entry() //  [R2, R3]
         { info_tbl: [(cxix,
                       label: GHC.PrimopWrappers.sameSmallMutableArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxix: // global
           R1 = R2 == R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.716955209 UTC

[section ""data" . GHC.PrimopWrappers.readSmallArray#_closure" {
     GHC.PrimopWrappers.readSmallArray#_closure:
         const GHC.PrimopWrappers.readSmallArray#_info;
 },
 GHC.PrimopWrappers.readSmallArray#_entry() //  [R2, R3]
         { info_tbl: [(cxiF,
                       label: GHC.PrimopWrappers.readSmallArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxiF: // global
           R1 = P64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.71799757 UTC

[section ""data" . GHC.PrimopWrappers.writeSmallArray#_closure" {
     GHC.PrimopWrappers.writeSmallArray#_closure:
         const GHC.PrimopWrappers.writeSmallArray#_info;
 },
 GHC.PrimopWrappers.writeSmallArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cxiM,
                       label: GHC.PrimopWrappers.writeSmallArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 21} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxiM: // global
           P64[(R2 + 16) + (R3 << 3)] = R4;
           I64[R2] = stg_SMALL_MUT_ARR_PTRS_DIRTY_info;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.718835685 UTC

[section ""data" . GHC.PrimopWrappers.sizeofSmallArray#_closure" {
     GHC.PrimopWrappers.sizeofSmallArray#_closure:
         const GHC.PrimopWrappers.sizeofSmallArray#_info;
 },
 GHC.PrimopWrappers.sizeofSmallArray#_entry() //  [R2]
         { info_tbl: [(cxiU,
                       label: GHC.PrimopWrappers.sizeofSmallArray#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxiU: // global
           R1 = I64[R2 + 8];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.719683364 UTC

[section ""data" . GHC.PrimopWrappers.sizeofSmallMutableArray#_closure" {
     GHC.PrimopWrappers.sizeofSmallMutableArray#_closure:
         const GHC.PrimopWrappers.sizeofSmallMutableArray#_info;
 },
 GHC.PrimopWrappers.sizeofSmallMutableArray#_entry() //  [R2]
         { info_tbl: [(cxj2,
                       label: GHC.PrimopWrappers.sizeofSmallMutableArray#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxj2: // global
           R1 = I64[R2 + 8];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.720546433 UTC

[section ""data" . GHC.PrimopWrappers.indexSmallArray#_closure" {
     GHC.PrimopWrappers.indexSmallArray#_closure:
         const GHC.PrimopWrappers.indexSmallArray#_info;
 },
 GHC.PrimopWrappers.indexSmallArray#_entry() //  [R2, R3]
         { info_tbl: [(cxja,
                       label: GHC.PrimopWrappers.indexSmallArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxja: // global
           R1 = P64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.721474597 UTC

[section ""data" . GHC.PrimopWrappers.unsafeFreezeSmallArray#_closure" {
     GHC.PrimopWrappers.unsafeFreezeSmallArray#_closure:
         const GHC.PrimopWrappers.unsafeFreezeSmallArray#_info;
 },
 GHC.PrimopWrappers.unsafeFreezeSmallArray#_entry() //  [R2]
         { info_tbl: [(cxji,
                       label: GHC.PrimopWrappers.unsafeFreezeSmallArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxji: // global
           I64[R2] = stg_SMALL_MUT_ARR_PTRS_FROZEN0_info;
           R1 = R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.722305841 UTC

[section ""data" . GHC.PrimopWrappers.unsafeThawSmallArray#_closure" {
     GHC.PrimopWrappers.unsafeThawSmallArray#_closure:
         const GHC.PrimopWrappers.unsafeThawSmallArray#_info;
 },
 GHC.PrimopWrappers.unsafeThawSmallArray#_entry() //  [R2]
         { info_tbl: [(cxjp,
                       label: GHC.PrimopWrappers.unsafeThawSmallArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxjp: // global
           R1 = R2;
           call stg_unsafeThawSmallArray#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.72323582 UTC

[section ""data" . GHC.PrimopWrappers.copySmallArray#_closure" {
     GHC.PrimopWrappers.copySmallArray#_closure:
         const GHC.PrimopWrappers.copySmallArray#_info;
 },
 GHC.PrimopWrappers.copySmallArray#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxjt: // global
           R6 = I64[Sp + 32];
           R5 = I64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 40;
           call GHC.PrimopWrappers.copySmallArray#_entry(R6,
                                                         R5,
                                                         R4,
                                                         R3,
                                                         R2,
                                                         R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.copySmallArray#_entry() //  [R2, R3, R4, R5, R6]
         { info_tbl: [(cxjx,
                       label: GHC.PrimopWrappers.copySmallArray#_info
                       rep:HeapRep static {
                             Fun {arity: 6
                                  fun_type: ArgGen [False, True, False, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxjx: // global
           _B3::I64 = R5;
           R5 = R6;
           _B4::P64 = R4;
           R4 = _B3::I64;
           _B5::I64 = R3;
           R3 = _B4::P64;
           _B6::P64 = R2;
           R2 = _B5::I64;
           R1 = _B6::P64;
           call stg_copySmallArray#(R5,
                                    R4,
                                    R3,
                                    R2,
                                    R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.724416278 UTC

[section ""data" . GHC.PrimopWrappers.copySmallMutableArray#_closure" {
     GHC.PrimopWrappers.copySmallMutableArray#_closure:
         const GHC.PrimopWrappers.copySmallMutableArray#_info;
 },
 GHC.PrimopWrappers.copySmallMutableArray#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxjB: // global
           R6 = I64[Sp + 32];
           R5 = I64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 40;
           call GHC.PrimopWrappers.copySmallMutableArray#_entry(R6,
                                                                R5,
                                                                R4,
                                                                R3,
                                                                R2,
                                                                R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.copySmallMutableArray#_entry() //  [R2, R3, R4,
                                                        R5, R6]
         { info_tbl: [(cxjF,
                       label: GHC.PrimopWrappers.copySmallMutableArray#_info
                       rep:HeapRep static {
                             Fun {arity: 6
                                  fun_type: ArgGen [False, True, False, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxjF: // global
           _B3::I64 = R5;
           R5 = R6;
           _B4::P64 = R4;
           R4 = _B3::I64;
           _B5::I64 = R3;
           R3 = _B4::P64;
           _B6::P64 = R2;
           R2 = _B5::I64;
           R1 = _B6::P64;
           call stg_copySmallMutableArray#(R5,
                                           R4,
                                           R3,
                                           R2,
                                           R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.725557008 UTC

[section ""data" . GHC.PrimopWrappers.cloneSmallArray#_closure" {
     GHC.PrimopWrappers.cloneSmallArray#_closure:
         const GHC.PrimopWrappers.cloneSmallArray#_info;
 },
 GHC.PrimopWrappers.cloneSmallArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cxjM,
                       label: GHC.PrimopWrappers.cloneSmallArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxjM: // global
           _B2::I64 = R3;
           R3 = R4;
           _B3::P64 = R2;
           R2 = _B2::I64;
           R1 = _B3::P64;
           call stg_cloneSmallArray#(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.726393439 UTC

[section ""data" . GHC.PrimopWrappers.cloneSmallMutableArray#_closure" {
     GHC.PrimopWrappers.cloneSmallMutableArray#_closure:
         const GHC.PrimopWrappers.cloneSmallMutableArray#_info;
 },
 GHC.PrimopWrappers.cloneSmallMutableArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cxjT,
                       label: GHC.PrimopWrappers.cloneSmallMutableArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxjT: // global
           _B3::I64 = R3;
           R3 = R4;
           _B4::P64 = R2;
           R2 = _B3::I64;
           R1 = _B4::P64;
           call stg_cloneSmallMutableArray#(R3,
                                            R2,
                                            R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.727297032 UTC

[section ""data" . GHC.PrimopWrappers.freezeSmallArray#_closure" {
     GHC.PrimopWrappers.freezeSmallArray#_closure:
         const GHC.PrimopWrappers.freezeSmallArray#_info;
 },
 GHC.PrimopWrappers.freezeSmallArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cxk0,
                       label: GHC.PrimopWrappers.freezeSmallArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxk0: // global
           _B3::I64 = R3;
           R3 = R4;
           _B4::P64 = R2;
           R2 = _B3::I64;
           R1 = _B4::P64;
           call stg_freezeSmallArray#(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.728155144 UTC

[section ""data" . GHC.PrimopWrappers.thawSmallArray#_closure" {
     GHC.PrimopWrappers.thawSmallArray#_closure:
         const GHC.PrimopWrappers.thawSmallArray#_info;
 },
 GHC.PrimopWrappers.thawSmallArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cxk7,
                       label: GHC.PrimopWrappers.thawSmallArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxk7: // global
           _B3::I64 = R3;
           R3 = R4;
           _B4::P64 = R2;
           R2 = _B3::I64;
           R1 = _B4::P64;
           call stg_thawSmallArray#(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.72906441 UTC

[section ""data" . GHC.PrimopWrappers.casSmallArray#_closure" {
     GHC.PrimopWrappers.casSmallArray#_closure:
         const GHC.PrimopWrappers.casSmallArray#_info;
 },
 GHC.PrimopWrappers.casSmallArray#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxkb: // global
           R5 = P64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 32;
           call GHC.PrimopWrappers.casSmallArray#_entry(R5,
                                                        R4,
                                                        R3,
                                                        R2,
                                                        R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.casSmallArray#_entry() //  [R2, R3, R4, R5]
         { info_tbl: [(cxkf,
                       label: GHC.PrimopWrappers.casSmallArray#_info
                       rep:HeapRep static {
                             Fun {arity: 5 fun_type: ArgGen [False, True, False, False]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxkf: // global
           _B3::P64 = R4;
           R4 = R5;
           _B4::I64 = R3;
           R3 = _B3::P64;
           _B5::P64 = R2;
           R2 = _B4::I64;
           R1 = _B5::P64;
           call stg_casSmallArray#(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.73014619 UTC

[section ""data" . GHC.PrimopWrappers.newByteArray#_closure" {
     GHC.PrimopWrappers.newByteArray#_closure:
         const GHC.PrimopWrappers.newByteArray#_info;
 },
 GHC.PrimopWrappers.newByteArray#_entry() //  [R2]
         { info_tbl: [(cxkm,
                       label: GHC.PrimopWrappers.newByteArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxkm: // global
           R1 = R2;
           call stg_newByteArray#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.730952027 UTC

[section ""data" . GHC.PrimopWrappers.newPinnedByteArray#_closure" {
     GHC.PrimopWrappers.newPinnedByteArray#_closure:
         const GHC.PrimopWrappers.newPinnedByteArray#_info;
 },
 GHC.PrimopWrappers.newPinnedByteArray#_entry() //  [R2]
         { info_tbl: [(cxkt,
                       label: GHC.PrimopWrappers.newPinnedByteArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxkt: // global
           R1 = R2;
           call stg_newPinnedByteArray#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.731750329 UTC

[section ""data" . GHC.PrimopWrappers.newAlignedPinnedByteArray#_closure" {
     GHC.PrimopWrappers.newAlignedPinnedByteArray#_closure:
         const GHC.PrimopWrappers.newAlignedPinnedByteArray#_info;
 },
 GHC.PrimopWrappers.newAlignedPinnedByteArray#_entry() //  [R2, R3]
         { info_tbl: [(cxkA,
                       label: GHC.PrimopWrappers.newAlignedPinnedByteArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxkA: // global
           _B3::I64 = R2;
           R2 = R3;
           R1 = _B3::I64;
           call stg_newAlignedPinnedByteArray#(R2,
                                               R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.732647122 UTC

[section ""data" . GHC.PrimopWrappers.isMutableByteArrayPinned#_closure" {
     GHC.PrimopWrappers.isMutableByteArrayPinned#_closure:
         const GHC.PrimopWrappers.isMutableByteArrayPinned#_info;
 },
 GHC.PrimopWrappers.isMutableByteArrayPinned#_entry() //  [R2]
         { info_tbl: [(cxkH,
                       label: GHC.PrimopWrappers.isMutableByteArrayPinned#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxkH: // global
           R1 = R2;
           call stg_isMutableByteArrayPinned#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.733519731 UTC

[section ""data" . GHC.PrimopWrappers.isByteArrayPinned#_closure" {
     GHC.PrimopWrappers.isByteArrayPinned#_closure:
         const GHC.PrimopWrappers.isByteArrayPinned#_info;
 },
 GHC.PrimopWrappers.isByteArrayPinned#_entry() //  [R2]
         { info_tbl: [(cxkO,
                       label: GHC.PrimopWrappers.isByteArrayPinned#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxkO: // global
           R1 = R2;
           call stg_isByteArrayPinned#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.734365811 UTC

[section ""data" . GHC.PrimopWrappers.byteArrayContents#_closure" {
     GHC.PrimopWrappers.byteArrayContents#_closure:
         const GHC.PrimopWrappers.byteArrayContents#_info;
 },
 GHC.PrimopWrappers.byteArrayContents#_entry() //  [R2]
         { info_tbl: [(cxkW,
                       label: GHC.PrimopWrappers.byteArrayContents#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxkW: // global
           R1 = R2 + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.7352133 UTC

[section ""data" . GHC.PrimopWrappers.sameMutableByteArray#_closure" {
     GHC.PrimopWrappers.sameMutableByteArray#_closure:
         const GHC.PrimopWrappers.sameMutableByteArray#_info;
 },
 GHC.PrimopWrappers.sameMutableByteArray#_entry() //  [R2, R3]
         { info_tbl: [(cxl4,
                       label: GHC.PrimopWrappers.sameMutableByteArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxl4: // global
           R1 = R2 == R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.736044496 UTC

[section ""data" . GHC.PrimopWrappers.shrinkMutableByteArray#_closure" {
     GHC.PrimopWrappers.shrinkMutableByteArray#_closure:
         const GHC.PrimopWrappers.shrinkMutableByteArray#_info;
 },
 GHC.PrimopWrappers.shrinkMutableByteArray#_entry() //  [R2, R3]
         { info_tbl: [(cxlb,
                       label: GHC.PrimopWrappers.shrinkMutableByteArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxlb: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_shrinkMutableByteArray#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.736928815 UTC

[section ""data" . GHC.PrimopWrappers.resizeMutableByteArray#_closure" {
     GHC.PrimopWrappers.resizeMutableByteArray#_closure:
         const GHC.PrimopWrappers.resizeMutableByteArray#_info;
 },
 GHC.PrimopWrappers.resizeMutableByteArray#_entry() //  [R2, R3]
         { info_tbl: [(cxli,
                       label: GHC.PrimopWrappers.resizeMutableByteArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxli: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_resizeMutableByteArray#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.738884807 UTC

[section ""data" . GHC.PrimopWrappers.unsafeFreezeByteArray#_closure" {
     GHC.PrimopWrappers.unsafeFreezeByteArray#_closure:
         const GHC.PrimopWrappers.unsafeFreezeByteArray#_info;
 },
 GHC.PrimopWrappers.unsafeFreezeByteArray#_entry() //  [R2]
         { info_tbl: [(cxlq,
                       label: GHC.PrimopWrappers.unsafeFreezeByteArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxlq: // global
           R1 = R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.739717048 UTC

[section ""data" . GHC.PrimopWrappers.sizeofByteArray#_closure" {
     GHC.PrimopWrappers.sizeofByteArray#_closure:
         const GHC.PrimopWrappers.sizeofByteArray#_info;
 },
 GHC.PrimopWrappers.sizeofByteArray#_entry() //  [R2]
         { info_tbl: [(cxly,
                       label: GHC.PrimopWrappers.sizeofByteArray#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxly: // global
           R1 = I64[R2 + 8];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.74053419 UTC

[section ""data" . GHC.PrimopWrappers.sizeofMutableByteArray#_closure" {
     GHC.PrimopWrappers.sizeofMutableByteArray#_closure:
         const GHC.PrimopWrappers.sizeofMutableByteArray#_info;
 },
 GHC.PrimopWrappers.sizeofMutableByteArray#_entry() //  [R2]
         { info_tbl: [(cxlG,
                       label: GHC.PrimopWrappers.sizeofMutableByteArray#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxlG: // global
           R1 = I64[R2 + 8];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.741396509 UTC

[section ""data" . GHC.PrimopWrappers.getSizeofMutableByteArray#_closure" {
     GHC.PrimopWrappers.getSizeofMutableByteArray#_closure:
         const GHC.PrimopWrappers.getSizeofMutableByteArray#_info;
 },
 GHC.PrimopWrappers.getSizeofMutableByteArray#_entry() //  [R2]
         { info_tbl: [(cxlO,
                       label: GHC.PrimopWrappers.getSizeofMutableByteArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxlO: // global
           R1 = I64[R2 + 8];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.74223002 UTC

[section ""data" . GHC.PrimopWrappers.indexCharArray#_closure" {
     GHC.PrimopWrappers.indexCharArray#_closure:
         const GHC.PrimopWrappers.indexCharArray#_info;
 },
 GHC.PrimopWrappers.indexCharArray#_entry() //  [R2, R3]
         { info_tbl: [(cxlW,
                       label: GHC.PrimopWrappers.indexCharArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxlW: // global
           R1 = %MO_UU_Conv_W8_W64(I8[(R2 + 16) + R3]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.74306558 UTC

[section ""data" . GHC.PrimopWrappers.indexWideCharArray#_closure" {
     GHC.PrimopWrappers.indexWideCharArray#_closure:
         const GHC.PrimopWrappers.indexWideCharArray#_info;
 },
 GHC.PrimopWrappers.indexWideCharArray#_entry() //  [R2, R3]
         { info_tbl: [(cxm4,
                       label: GHC.PrimopWrappers.indexWideCharArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxm4: // global
           R1 = %MO_UU_Conv_W32_W64(I32[(R2 + 16) + (R3 << 2)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.743936962 UTC

[section ""data" . GHC.PrimopWrappers.indexIntArray#_closure" {
     GHC.PrimopWrappers.indexIntArray#_closure:
         const GHC.PrimopWrappers.indexIntArray#_info;
 },
 GHC.PrimopWrappers.indexIntArray#_entry() //  [R2, R3]
         { info_tbl: [(cxmc,
                       label: GHC.PrimopWrappers.indexIntArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxmc: // global
           R1 = I64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.744794955 UTC

[section ""data" . GHC.PrimopWrappers.indexWordArray#_closure" {
     GHC.PrimopWrappers.indexWordArray#_closure:
         const GHC.PrimopWrappers.indexWordArray#_info;
 },
 GHC.PrimopWrappers.indexWordArray#_entry() //  [R2, R3]
         { info_tbl: [(cxmk,
                       label: GHC.PrimopWrappers.indexWordArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxmk: // global
           R1 = I64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.746132483 UTC

[section ""data" . GHC.PrimopWrappers.indexAddrArray#_closure" {
     GHC.PrimopWrappers.indexAddrArray#_closure:
         const GHC.PrimopWrappers.indexAddrArray#_info;
 },
 GHC.PrimopWrappers.indexAddrArray#_entry() //  [R2, R3]
         { info_tbl: [(cxms,
                       label: GHC.PrimopWrappers.indexAddrArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxms: // global
           R1 = I64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.746981597 UTC

[section ""data" . GHC.PrimopWrappers.indexFloatArray#_closure" {
     GHC.PrimopWrappers.indexFloatArray#_closure:
         const GHC.PrimopWrappers.indexFloatArray#_info;
 },
 GHC.PrimopWrappers.indexFloatArray#_entry() //  [R2, R3]
         { info_tbl: [(cxmA,
                       label: GHC.PrimopWrappers.indexFloatArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxmA: // global
           F1 = F32[(R2 + 16) + (R3 << 2)];
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.747813253 UTC

[section ""data" . GHC.PrimopWrappers.indexDoubleArray#_closure" {
     GHC.PrimopWrappers.indexDoubleArray#_closure:
         const GHC.PrimopWrappers.indexDoubleArray#_info;
 },
 GHC.PrimopWrappers.indexDoubleArray#_entry() //  [R2, R3]
         { info_tbl: [(cxmI,
                       label: GHC.PrimopWrappers.indexDoubleArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxmI: // global
           D1 = F64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.748699301 UTC

[section ""data" . GHC.PrimopWrappers.indexStablePtrArray#_closure" {
     GHC.PrimopWrappers.indexStablePtrArray#_closure:
         const GHC.PrimopWrappers.indexStablePtrArray#_info;
 },
 GHC.PrimopWrappers.indexStablePtrArray#_entry() //  [R2, R3]
         { info_tbl: [(cxmQ,
                       label: GHC.PrimopWrappers.indexStablePtrArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxmQ: // global
           R1 = I64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.749604264 UTC

[section ""data" . GHC.PrimopWrappers.indexInt8Array#_closure" {
     GHC.PrimopWrappers.indexInt8Array#_closure:
         const GHC.PrimopWrappers.indexInt8Array#_info;
 },
 GHC.PrimopWrappers.indexInt8Array#_entry() //  [R2, R3]
         { info_tbl: [(cxmY,
                       label: GHC.PrimopWrappers.indexInt8Array#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxmY: // global
           R1 = %MO_SS_Conv_W8_W64(I8[(R2 + 16) + R3]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.750419487 UTC

[section ""data" . GHC.PrimopWrappers.indexInt16Array#_closure" {
     GHC.PrimopWrappers.indexInt16Array#_closure:
         const GHC.PrimopWrappers.indexInt16Array#_info;
 },
 GHC.PrimopWrappers.indexInt16Array#_entry() //  [R2, R3]
         { info_tbl: [(cxn6,
                       label: GHC.PrimopWrappers.indexInt16Array#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxn6: // global
           R1 = %MO_SS_Conv_W16_W64(I16[(R2 + 16) + (R3 << 1)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.751294313 UTC

[section ""data" . GHC.PrimopWrappers.indexInt32Array#_closure" {
     GHC.PrimopWrappers.indexInt32Array#_closure:
         const GHC.PrimopWrappers.indexInt32Array#_info;
 },
 GHC.PrimopWrappers.indexInt32Array#_entry() //  [R2, R3]
         { info_tbl: [(cxne,
                       label: GHC.PrimopWrappers.indexInt32Array#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxne: // global
           R1 = %MO_SS_Conv_W32_W64(I32[(R2 + 16) + (R3 << 2)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.752141812 UTC

[section ""data" . GHC.PrimopWrappers.indexInt64Array#_closure" {
     GHC.PrimopWrappers.indexInt64Array#_closure:
         const GHC.PrimopWrappers.indexInt64Array#_info;
 },
 GHC.PrimopWrappers.indexInt64Array#_entry() //  [R2, R3]
         { info_tbl: [(cxnm,
                       label: GHC.PrimopWrappers.indexInt64Array#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxnm: // global
           R1 = I64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.752941571 UTC

[section ""data" . GHC.PrimopWrappers.indexWord8Array#_closure" {
     GHC.PrimopWrappers.indexWord8Array#_closure:
         const GHC.PrimopWrappers.indexWord8Array#_info;
 },
 GHC.PrimopWrappers.indexWord8Array#_entry() //  [R2, R3]
         { info_tbl: [(cxnu,
                       label: GHC.PrimopWrappers.indexWord8Array#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxnu: // global
           R1 = %MO_UU_Conv_W8_W64(I8[(R2 + 16) + R3]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.753833461 UTC

[section ""data" . GHC.PrimopWrappers.indexWord16Array#_closure" {
     GHC.PrimopWrappers.indexWord16Array#_closure:
         const GHC.PrimopWrappers.indexWord16Array#_info;
 },
 GHC.PrimopWrappers.indexWord16Array#_entry() //  [R2, R3]
         { info_tbl: [(cxnC,
                       label: GHC.PrimopWrappers.indexWord16Array#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxnC: // global
           R1 = %MO_UU_Conv_W16_W64(I16[(R2 + 16) + (R3 << 1)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.754718231 UTC

[section ""data" . GHC.PrimopWrappers.indexWord32Array#_closure" {
     GHC.PrimopWrappers.indexWord32Array#_closure:
         const GHC.PrimopWrappers.indexWord32Array#_info;
 },
 GHC.PrimopWrappers.indexWord32Array#_entry() //  [R2, R3]
         { info_tbl: [(cxnK,
                       label: GHC.PrimopWrappers.indexWord32Array#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxnK: // global
           R1 = %MO_UU_Conv_W32_W64(I32[(R2 + 16) + (R3 << 2)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.755523986 UTC

[section ""data" . GHC.PrimopWrappers.indexWord64Array#_closure" {
     GHC.PrimopWrappers.indexWord64Array#_closure:
         const GHC.PrimopWrappers.indexWord64Array#_info;
 },
 GHC.PrimopWrappers.indexWord64Array#_entry() //  [R2, R3]
         { info_tbl: [(cxnS,
                       label: GHC.PrimopWrappers.indexWord64Array#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxnS: // global
           R1 = I64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.756378833 UTC

[section ""data" . GHC.PrimopWrappers.readCharArray#_closure" {
     GHC.PrimopWrappers.readCharArray#_closure:
         const GHC.PrimopWrappers.readCharArray#_info;
 },
 GHC.PrimopWrappers.readCharArray#_entry() //  [R2, R3]
         { info_tbl: [(cxo0,
                       label: GHC.PrimopWrappers.readCharArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxo0: // global
           R1 = %MO_UU_Conv_W8_W64(I8[(R2 + 16) + R3]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.757286835 UTC

[section ""data" . GHC.PrimopWrappers.readWideCharArray#_closure" {
     GHC.PrimopWrappers.readWideCharArray#_closure:
         const GHC.PrimopWrappers.readWideCharArray#_info;
 },
 GHC.PrimopWrappers.readWideCharArray#_entry() //  [R2, R3]
         { info_tbl: [(cxo8,
                       label: GHC.PrimopWrappers.readWideCharArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxo8: // global
           R1 = %MO_UU_Conv_W32_W64(I32[(R2 + 16) + (R3 << 2)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.758159028 UTC

[section ""data" . GHC.PrimopWrappers.readIntArray#_closure" {
     GHC.PrimopWrappers.readIntArray#_closure:
         const GHC.PrimopWrappers.readIntArray#_info;
 },
 GHC.PrimopWrappers.readIntArray#_entry() //  [R2, R3]
         { info_tbl: [(cxog,
                       label: GHC.PrimopWrappers.readIntArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxog: // global
           R1 = I64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.759007154 UTC

[section ""data" . GHC.PrimopWrappers.readWordArray#_closure" {
     GHC.PrimopWrappers.readWordArray#_closure:
         const GHC.PrimopWrappers.readWordArray#_info;
 },
 GHC.PrimopWrappers.readWordArray#_entry() //  [R2, R3]
         { info_tbl: [(cxoo,
                       label: GHC.PrimopWrappers.readWordArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxoo: // global
           R1 = I64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.759900381 UTC

[section ""data" . GHC.PrimopWrappers.readAddrArray#_closure" {
     GHC.PrimopWrappers.readAddrArray#_closure:
         const GHC.PrimopWrappers.readAddrArray#_info;
 },
 GHC.PrimopWrappers.readAddrArray#_entry() //  [R2, R3]
         { info_tbl: [(cxow,
                       label: GHC.PrimopWrappers.readAddrArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxow: // global
           R1 = I64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.760785445 UTC

[section ""data" . GHC.PrimopWrappers.readFloatArray#_closure" {
     GHC.PrimopWrappers.readFloatArray#_closure:
         const GHC.PrimopWrappers.readFloatArray#_info;
 },
 GHC.PrimopWrappers.readFloatArray#_entry() //  [R2, R3]
         { info_tbl: [(cxoE,
                       label: GHC.PrimopWrappers.readFloatArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxoE: // global
           F1 = F32[(R2 + 16) + (R3 << 2)];
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.762045988 UTC

[section ""data" . GHC.PrimopWrappers.readDoubleArray#_closure" {
     GHC.PrimopWrappers.readDoubleArray#_closure:
         const GHC.PrimopWrappers.readDoubleArray#_info;
 },
 GHC.PrimopWrappers.readDoubleArray#_entry() //  [R2, R3]
         { info_tbl: [(cxoM,
                       label: GHC.PrimopWrappers.readDoubleArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxoM: // global
           D1 = F64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.762881652 UTC

[section ""data" . GHC.PrimopWrappers.readStablePtrArray#_closure" {
     GHC.PrimopWrappers.readStablePtrArray#_closure:
         const GHC.PrimopWrappers.readStablePtrArray#_info;
 },
 GHC.PrimopWrappers.readStablePtrArray#_entry() //  [R2, R3]
         { info_tbl: [(cxoU,
                       label: GHC.PrimopWrappers.readStablePtrArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxoU: // global
           R1 = I64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.763750792 UTC

[section ""data" . GHC.PrimopWrappers.readInt8Array#_closure" {
     GHC.PrimopWrappers.readInt8Array#_closure:
         const GHC.PrimopWrappers.readInt8Array#_info;
 },
 GHC.PrimopWrappers.readInt8Array#_entry() //  [R2, R3]
         { info_tbl: [(cxp2,
                       label: GHC.PrimopWrappers.readInt8Array#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxp2: // global
           R1 = %MO_SS_Conv_W8_W64(I8[(R2 + 16) + R3]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.764653152 UTC

[section ""data" . GHC.PrimopWrappers.readInt16Array#_closure" {
     GHC.PrimopWrappers.readInt16Array#_closure:
         const GHC.PrimopWrappers.readInt16Array#_info;
 },
 GHC.PrimopWrappers.readInt16Array#_entry() //  [R2, R3]
         { info_tbl: [(cxpa,
                       label: GHC.PrimopWrappers.readInt16Array#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxpa: // global
           R1 = %MO_SS_Conv_W16_W64(I16[(R2 + 16) + (R3 << 1)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.765527925 UTC

[section ""data" . GHC.PrimopWrappers.readInt32Array#_closure" {
     GHC.PrimopWrappers.readInt32Array#_closure:
         const GHC.PrimopWrappers.readInt32Array#_info;
 },
 GHC.PrimopWrappers.readInt32Array#_entry() //  [R2, R3]
         { info_tbl: [(cxpi,
                       label: GHC.PrimopWrappers.readInt32Array#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxpi: // global
           R1 = %MO_SS_Conv_W32_W64(I32[(R2 + 16) + (R3 << 2)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.766408469 UTC

[section ""data" . GHC.PrimopWrappers.readInt64Array#_closure" {
     GHC.PrimopWrappers.readInt64Array#_closure:
         const GHC.PrimopWrappers.readInt64Array#_info;
 },
 GHC.PrimopWrappers.readInt64Array#_entry() //  [R2, R3]
         { info_tbl: [(cxpq,
                       label: GHC.PrimopWrappers.readInt64Array#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxpq: // global
           R1 = I64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.768151144 UTC

[section ""data" . GHC.PrimopWrappers.readWord8Array#_closure" {
     GHC.PrimopWrappers.readWord8Array#_closure:
         const GHC.PrimopWrappers.readWord8Array#_info;
 },
 GHC.PrimopWrappers.readWord8Array#_entry() //  [R2, R3]
         { info_tbl: [(cxpy,
                       label: GHC.PrimopWrappers.readWord8Array#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxpy: // global
           R1 = %MO_UU_Conv_W8_W64(I8[(R2 + 16) + R3]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.768999336 UTC

[section ""data" . GHC.PrimopWrappers.readWord16Array#_closure" {
     GHC.PrimopWrappers.readWord16Array#_closure:
         const GHC.PrimopWrappers.readWord16Array#_info;
 },
 GHC.PrimopWrappers.readWord16Array#_entry() //  [R2, R3]
         { info_tbl: [(cxpG,
                       label: GHC.PrimopWrappers.readWord16Array#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxpG: // global
           R1 = %MO_UU_Conv_W16_W64(I16[(R2 + 16) + (R3 << 1)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.769946278 UTC

[section ""data" . GHC.PrimopWrappers.readWord32Array#_closure" {
     GHC.PrimopWrappers.readWord32Array#_closure:
         const GHC.PrimopWrappers.readWord32Array#_info;
 },
 GHC.PrimopWrappers.readWord32Array#_entry() //  [R2, R3]
         { info_tbl: [(cxpO,
                       label: GHC.PrimopWrappers.readWord32Array#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxpO: // global
           R1 = %MO_UU_Conv_W32_W64(I32[(R2 + 16) + (R3 << 2)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.770828965 UTC

[section ""data" . GHC.PrimopWrappers.readWord64Array#_closure" {
     GHC.PrimopWrappers.readWord64Array#_closure:
         const GHC.PrimopWrappers.readWord64Array#_info;
 },
 GHC.PrimopWrappers.readWord64Array#_entry() //  [R2, R3]
         { info_tbl: [(cxpW,
                       label: GHC.PrimopWrappers.readWord64Array#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxpW: // global
           R1 = I64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.771679328 UTC

[section ""data" . GHC.PrimopWrappers.writeCharArray#_closure" {
     GHC.PrimopWrappers.writeCharArray#_closure:
         const GHC.PrimopWrappers.writeCharArray#_info;
 },
 GHC.PrimopWrappers.writeCharArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cxq3,
                       label: GHC.PrimopWrappers.writeCharArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxq3: // global
           I8[(R2 + 16) + R3] = %MO_UU_Conv_W64_W8(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.772551797 UTC

[section ""data" . GHC.PrimopWrappers.writeWideCharArray#_closure" {
     GHC.PrimopWrappers.writeWideCharArray#_closure:
         const GHC.PrimopWrappers.writeWideCharArray#_info;
 },
 GHC.PrimopWrappers.writeWideCharArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cxqa,
                       label: GHC.PrimopWrappers.writeWideCharArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxqa: // global
           I32[(R2 + 16) + (R3 << 2)] = %MO_UU_Conv_W64_W32(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.773455971 UTC

[section ""data" . GHC.PrimopWrappers.writeIntArray#_closure" {
     GHC.PrimopWrappers.writeIntArray#_closure:
         const GHC.PrimopWrappers.writeIntArray#_info;
 },
 GHC.PrimopWrappers.writeIntArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cxqh,
                       label: GHC.PrimopWrappers.writeIntArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxqh: // global
           I64[(R2 + 16) + (R3 << 3)] = R4;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.774325266 UTC

[section ""data" . GHC.PrimopWrappers.writeWordArray#_closure" {
     GHC.PrimopWrappers.writeWordArray#_closure:
         const GHC.PrimopWrappers.writeWordArray#_info;
 },
 GHC.PrimopWrappers.writeWordArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cxqo,
                       label: GHC.PrimopWrappers.writeWordArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxqo: // global
           I64[(R2 + 16) + (R3 << 3)] = R4;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.775183644 UTC

[section ""data" . GHC.PrimopWrappers.writeAddrArray#_closure" {
     GHC.PrimopWrappers.writeAddrArray#_closure:
         const GHC.PrimopWrappers.writeAddrArray#_info;
 },
 GHC.PrimopWrappers.writeAddrArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cxqv,
                       label: GHC.PrimopWrappers.writeAddrArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxqv: // global
           I64[(R2 + 16) + (R3 << 3)] = R4;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.776132853 UTC

[section ""data" . GHC.PrimopWrappers.writeFloatArray#_closure" {
     GHC.PrimopWrappers.writeFloatArray#_closure:
         const GHC.PrimopWrappers.writeFloatArray#_info;
 },
 GHC.PrimopWrappers.writeFloatArray#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxqz: // global
           F1 = F32[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 24;
           call GHC.PrimopWrappers.writeFloatArray#_entry(F1,
                                                          R3,
                                                          R2,
                                                          R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.writeFloatArray#_entry() //  [R2, R3, F1]
         { info_tbl: [(cxqD,
                       label: GHC.PrimopWrappers.writeFloatArray#_info
                       rep:HeapRep static {
                             Fun {arity: 4 fun_type: ArgGen [False, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxqD: // global
           F32[(R2 + 16) + (R3 << 2)] = F1;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.777203241 UTC

[section ""data" . GHC.PrimopWrappers.writeDoubleArray#_closure" {
     GHC.PrimopWrappers.writeDoubleArray#_closure:
         const GHC.PrimopWrappers.writeDoubleArray#_info;
 },
 GHC.PrimopWrappers.writeDoubleArray#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxqH: // global
           D1 = F64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 24;
           call GHC.PrimopWrappers.writeDoubleArray#_entry(D1,
                                                           R3,
                                                           R2,
                                                           R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.writeDoubleArray#_entry() //  [R2, R3, D1]
         { info_tbl: [(cxqL,
                       label: GHC.PrimopWrappers.writeDoubleArray#_info
                       rep:HeapRep static {
                             Fun {arity: 4 fun_type: ArgGen [False, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxqL: // global
           F64[(R2 + 16) + (R3 << 3)] = D1;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.778223605 UTC

[section ""data" . GHC.PrimopWrappers.writeStablePtrArray#_closure" {
     GHC.PrimopWrappers.writeStablePtrArray#_closure:
         const GHC.PrimopWrappers.writeStablePtrArray#_info;
 },
 GHC.PrimopWrappers.writeStablePtrArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cxqS,
                       label: GHC.PrimopWrappers.writeStablePtrArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxqS: // global
           I64[(R2 + 16) + (R3 << 3)] = R4;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.77909619 UTC

[section ""data" . GHC.PrimopWrappers.writeInt8Array#_closure" {
     GHC.PrimopWrappers.writeInt8Array#_closure:
         const GHC.PrimopWrappers.writeInt8Array#_info;
 },
 GHC.PrimopWrappers.writeInt8Array#_entry() //  [R2, R3, R4]
         { info_tbl: [(cxqZ,
                       label: GHC.PrimopWrappers.writeInt8Array#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxqZ: // global
           I8[(R2 + 16) + R3] = %MO_UU_Conv_W64_W8(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.779957026 UTC

[section ""data" . GHC.PrimopWrappers.writeInt16Array#_closure" {
     GHC.PrimopWrappers.writeInt16Array#_closure:
         const GHC.PrimopWrappers.writeInt16Array#_info;
 },
 GHC.PrimopWrappers.writeInt16Array#_entry() //  [R2, R3, R4]
         { info_tbl: [(cxr6,
                       label: GHC.PrimopWrappers.writeInt16Array#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxr6: // global
           I16[(R2 + 16) + (R3 << 1)] = %MO_UU_Conv_W64_W16(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.780801275 UTC

[section ""data" . GHC.PrimopWrappers.writeInt32Array#_closure" {
     GHC.PrimopWrappers.writeInt32Array#_closure:
         const GHC.PrimopWrappers.writeInt32Array#_info;
 },
 GHC.PrimopWrappers.writeInt32Array#_entry() //  [R2, R3, R4]
         { info_tbl: [(cxrd,
                       label: GHC.PrimopWrappers.writeInt32Array#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxrd: // global
           I32[(R2 + 16) + (R3 << 2)] = %MO_UU_Conv_W64_W32(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.781863905 UTC

[section ""data" . GHC.PrimopWrappers.writeInt64Array#_closure" {
     GHC.PrimopWrappers.writeInt64Array#_closure:
         const GHC.PrimopWrappers.writeInt64Array#_info;
 },
 GHC.PrimopWrappers.writeInt64Array#_entry() //  [R2, R3, R4]
         { info_tbl: [(cxrk,
                       label: GHC.PrimopWrappers.writeInt64Array#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxrk: // global
           I64[(R2 + 16) + (R3 << 3)] = R4;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.782680745 UTC

[section ""data" . GHC.PrimopWrappers.writeWord8Array#_closure" {
     GHC.PrimopWrappers.writeWord8Array#_closure:
         const GHC.PrimopWrappers.writeWord8Array#_info;
 },
 GHC.PrimopWrappers.writeWord8Array#_entry() //  [R2, R3, R4]
         { info_tbl: [(cxrr,
                       label: GHC.PrimopWrappers.writeWord8Array#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxrr: // global
           I8[(R2 + 16) + R3] = %MO_UU_Conv_W64_W8(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.783551709 UTC

[section ""data" . GHC.PrimopWrappers.writeWord16Array#_closure" {
     GHC.PrimopWrappers.writeWord16Array#_closure:
         const GHC.PrimopWrappers.writeWord16Array#_info;
 },
 GHC.PrimopWrappers.writeWord16Array#_entry() //  [R2, R3, R4]
         { info_tbl: [(cxry,
                       label: GHC.PrimopWrappers.writeWord16Array#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxry: // global
           I16[(R2 + 16) + (R3 << 1)] = %MO_UU_Conv_W64_W16(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.784476881 UTC

[section ""data" . GHC.PrimopWrappers.writeWord32Array#_closure" {
     GHC.PrimopWrappers.writeWord32Array#_closure:
         const GHC.PrimopWrappers.writeWord32Array#_info;
 },
 GHC.PrimopWrappers.writeWord32Array#_entry() //  [R2, R3, R4]
         { info_tbl: [(cxrF,
                       label: GHC.PrimopWrappers.writeWord32Array#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxrF: // global
           I32[(R2 + 16) + (R3 << 2)] = %MO_UU_Conv_W64_W32(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.785394524 UTC

[section ""data" . GHC.PrimopWrappers.writeWord64Array#_closure" {
     GHC.PrimopWrappers.writeWord64Array#_closure:
         const GHC.PrimopWrappers.writeWord64Array#_info;
 },
 GHC.PrimopWrappers.writeWord64Array#_entry() //  [R2, R3, R4]
         { info_tbl: [(cxrM,
                       label: GHC.PrimopWrappers.writeWord64Array#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxrM: // global
           I64[(R2 + 16) + (R3 << 3)] = R4;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.786467333 UTC

[section ""data" . GHC.PrimopWrappers.compareByteArrays#_closure" {
     GHC.PrimopWrappers.compareByteArrays#_closure:
         const GHC.PrimopWrappers.compareByteArrays#_info;
 },
 GHC.PrimopWrappers.compareByteArrays#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxrQ: // global
           R6 = I64[Sp + 32];
           R5 = I64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 40;
           call GHC.PrimopWrappers.compareByteArrays#_entry(R6,
                                                            R5,
                                                            R4,
                                                            R3,
                                                            R2,
                                                            R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.compareByteArrays#_entry() //  [R2, R3, R4, R5,
                                                    R6]
         { info_tbl: [(cxs3,
                       label: GHC.PrimopWrappers.compareByteArrays#_info
                       rep:HeapRep static {
                             Fun {arity: 5
                                  fun_type: ArgGen [False, True, False, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxs3: // global
           _cxrV::P64 = (R2 + 16) + R3;
           _cxrW::P64 = (R4 + 16) + R5;
           _cxrU::I64 = 0;
           if (_cxrV::P64 == _cxrW::P64) (likely: False) goto cxrX; else goto cxrY;
       cxrY: // global
           _cxs2::I64 = R6;
           (_cxrZ::I32) = call MO_Memcmp 1(_cxrV::P64, _cxrW::P64, _cxs2::I64);
           _cxrU::I64 = %MO_SS_Conv_W32_W64(_cxrZ::I32);
           goto cxrX;
       cxrX: // global
           R1 = _cxrU::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.787812255 UTC

[section ""data" . GHC.PrimopWrappers.copyByteArray#_closure" {
     GHC.PrimopWrappers.copyByteArray#_closure:
         const GHC.PrimopWrappers.copyByteArray#_info;
 },
 GHC.PrimopWrappers.copyByteArray#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxs7: // global
           R6 = I64[Sp + 32];
           R5 = I64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 40;
           call GHC.PrimopWrappers.copyByteArray#_entry(R6,
                                                        R5,
                                                        R4,
                                                        R3,
                                                        R2,
                                                        R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.copyByteArray#_entry() //  [R2, R3, R4, R5, R6]
         { info_tbl: [(cxsg,
                       label: GHC.PrimopWrappers.copyByteArray#_info
                       rep:HeapRep static {
                             Fun {arity: 6
                                  fun_type: ArgGen [False, True, False, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxsg: // global
           _cxsd::P64 = (R4 + 16) + R5;
           _cxse::P64 = (R2 + 16) + R3;
           _cxsf::I64 = R6;
           call MO_Memcpy 1(_cxsd::P64, _cxse::P64, _cxsf::I64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.789131512 UTC

[section ""data" . GHC.PrimopWrappers.copyMutableByteArray#_closure" {
     GHC.PrimopWrappers.copyMutableByteArray#_closure:
         const GHC.PrimopWrappers.copyMutableByteArray#_info;
 },
 GHC.PrimopWrappers.copyMutableByteArray#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxsk: // global
           R6 = I64[Sp + 32];
           R5 = I64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 40;
           call GHC.PrimopWrappers.copyMutableByteArray#_entry(R6,
                                                               R5,
                                                               R4,
                                                               R3,
                                                               R2,
                                                               R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.copyMutableByteArray#_entry() //  [R2, R3, R4,
                                                       R5, R6]
         { info_tbl: [(cxsu,
                       label: GHC.PrimopWrappers.copyMutableByteArray#_info
                       rep:HeapRep static {
                             Fun {arity: 6
                                  fun_type: ArgGen [False, True, False, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxsu: // global
           _cxso::P64 = (R4 + 16) + R5;
           _cxsp::P64 = (R2 + 16) + R3;
           if (R2 == R4) goto cxss; else goto cxst;
       cxss: // global
           _cxsC::I64 = R6;
           call MO_Memmove 1(_cxso::P64, _cxsp::P64, _cxsC::I64);
           goto cxsr;
       cxst: // global
           _cxsE::I64 = R6;
           call MO_Memcpy 1(_cxso::P64, _cxsp::P64, _cxsE::I64);
           goto cxsr;
       cxsr: // global
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.790484685 UTC

[section ""data" . GHC.PrimopWrappers.copyByteArrayToAddr#_closure" {
     GHC.PrimopWrappers.copyByteArrayToAddr#_closure:
         const GHC.PrimopWrappers.copyByteArrayToAddr#_info;
 },
 GHC.PrimopWrappers.copyByteArrayToAddr#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxsG: // global
           R5 = I64[Sp + 24];
           R4 = I64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 32;
           call GHC.PrimopWrappers.copyByteArrayToAddr#_entry(R5,
                                                              R4,
                                                              R3,
                                                              R2,
                                                              R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.copyByteArrayToAddr#_entry() //  [R2, R3, R4,
                                                      R5]
         { info_tbl: [(cxsO,
                       label: GHC.PrimopWrappers.copyByteArrayToAddr#_info
                       rep:HeapRep static {
                             Fun {arity: 5 fun_type: ArgGen [False, True, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxsO: // global
           _cxsL::I64 = R4;
           _cxsM::P64 = (R2 + 16) + R3;
           _cxsN::I64 = R5;
           call MO_Memcpy 1(_cxsL::I64, _cxsM::P64, _cxsN::I64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.791638195 UTC

[section ""data" . GHC.PrimopWrappers.copyMutableByteArrayToAddr#_closure" {
     GHC.PrimopWrappers.copyMutableByteArrayToAddr#_closure:
         const GHC.PrimopWrappers.copyMutableByteArrayToAddr#_info;
 },
 GHC.PrimopWrappers.copyMutableByteArrayToAddr#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxsS: // global
           R5 = I64[Sp + 24];
           R4 = I64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 32;
           call GHC.PrimopWrappers.copyMutableByteArrayToAddr#_entry(R5,
                                                                     R4,
                                                                     R3,
                                                                     R2,
                                                                     R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.copyMutableByteArrayToAddr#_entry() //  [R2, R3,
                                                             R4, R5]
         { info_tbl: [(cxt0,
                       label: GHC.PrimopWrappers.copyMutableByteArrayToAddr#_info
                       rep:HeapRep static {
                             Fun {arity: 5 fun_type: ArgGen [False, True, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxt0: // global
           _cxsX::I64 = R4;
           _cxsY::P64 = (R2 + 16) + R3;
           _cxsZ::I64 = R5;
           call MO_Memcpy 1(_cxsX::I64, _cxsY::P64, _cxsZ::I64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.79281766 UTC

[section ""data" . GHC.PrimopWrappers.copyAddrToByteArray#_closure" {
     GHC.PrimopWrappers.copyAddrToByteArray#_closure:
         const GHC.PrimopWrappers.copyAddrToByteArray#_info;
 },
 GHC.PrimopWrappers.copyAddrToByteArray#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxt4: // global
           R5 = I64[Sp + 24];
           R4 = I64[Sp + 16];
           R3 = P64[Sp + 8];
           R2 = I64[Sp];
           R1 = R1;
           Sp = Sp + 32;
           call GHC.PrimopWrappers.copyAddrToByteArray#_entry(R5,
                                                              R4,
                                                              R3,
                                                              R2,
                                                              R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.copyAddrToByteArray#_entry() //  [R2, R3, R4,
                                                      R5]
         { info_tbl: [(cxtc,
                       label: GHC.PrimopWrappers.copyAddrToByteArray#_info
                       rep:HeapRep static {
                             Fun {arity: 5 fun_type: ArgGen [True, False, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxtc: // global
           _cxt9::P64 = (R3 + 16) + R4;
           _cxtb::I64 = R5;
           call MO_Memcpy 1(_cxt9::P64, R2, _cxtb::I64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.794048569 UTC

[section ""data" . GHC.PrimopWrappers.setByteArray#_closure" {
     GHC.PrimopWrappers.setByteArray#_closure:
         const GHC.PrimopWrappers.setByteArray#_info;
 },
 GHC.PrimopWrappers.setByteArray#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxtg: // global
           R5 = I64[Sp + 24];
           R4 = I64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 32;
           call GHC.PrimopWrappers.setByteArray#_entry(R5,
                                                       R4,
                                                       R3,
                                                       R2,
                                                       R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.setByteArray#_entry() //  [R2, R3, R4, R5]
         { info_tbl: [(cxto,
                       label: GHC.PrimopWrappers.setByteArray#_info
                       rep:HeapRep static {
                             Fun {arity: 5 fun_type: ArgGen [False, True, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxto: // global
           _cxtl::P64 = (R2 + 16) + R3;
           _cxtm::I64 = R5;
           _cxtn::I64 = R4;
           call MO_Memset 1(_cxtl::P64, _cxtm::I64, _cxtn::I64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.796042708 UTC

[section ""data" . GHC.PrimopWrappers.atomicReadIntArray#_closure" {
     GHC.PrimopWrappers.atomicReadIntArray#_closure:
         const GHC.PrimopWrappers.atomicReadIntArray#_info;
 },
 GHC.PrimopWrappers.atomicReadIntArray#_entry() //  [R2, R3]
         { info_tbl: [(cxtx,
                       label: GHC.PrimopWrappers.atomicReadIntArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxtx: // global
           _cxtw::P64 = (R2 + 16) + (R3 << 3);
           (_cxtv::I64) = call MO_AtomicRead W64(_cxtw::P64);
           R1 = _cxtv::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.79693333 UTC

[section ""data" . GHC.PrimopWrappers.atomicWriteIntArray#_closure" {
     GHC.PrimopWrappers.atomicWriteIntArray#_closure:
         const GHC.PrimopWrappers.atomicWriteIntArray#_info;
 },
 GHC.PrimopWrappers.atomicWriteIntArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cxtG,
                       label: GHC.PrimopWrappers.atomicWriteIntArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxtG: // global
           _cxtE::P64 = (R2 + 16) + (R3 << 3);
           _cxtF::I64 = R4;
           call MO_AtomicWrite W64(_cxtE::P64, _cxtF::I64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.798400908 UTC

[section ""data" . GHC.PrimopWrappers.casIntArray#_closure" {
     GHC.PrimopWrappers.casIntArray#_closure:
         const GHC.PrimopWrappers.casIntArray#_info;
 },
 GHC.PrimopWrappers.casIntArray#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxtK: // global
           R5 = I64[Sp + 24];
           R4 = I64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 32;
           call GHC.PrimopWrappers.casIntArray#_entry(R5,
                                                      R4,
                                                      R3,
                                                      R2,
                                                      R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.casIntArray#_entry() //  [R2, R3, R4, R5]
         { info_tbl: [(cxtS,
                       label: GHC.PrimopWrappers.casIntArray#_info
                       rep:HeapRep static {
                             Fun {arity: 5 fun_type: ArgGen [False, True, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxtS: // global
           _cxtP::P64 = (R2 + 16) + (R3 << 3);
           _cxtQ::I64 = R4;
           _cxtR::I64 = R5;
           (_cxtO::I64) = call MO_Cmpxchg W64(_cxtP::P64, _cxtQ::I64, _cxtR::I64);
           R1 = _cxtO::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.799805205 UTC

[section ""data" . GHC.PrimopWrappers.fetchAddIntArray#_closure" {
     GHC.PrimopWrappers.fetchAddIntArray#_closure:
         const GHC.PrimopWrappers.fetchAddIntArray#_info;
 },
 GHC.PrimopWrappers.fetchAddIntArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cxu2,
                       label: GHC.PrimopWrappers.fetchAddIntArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxu2: // global
           _cxu0::P64 = (R2 + 16) + (R3 << 3);
           _cxu1::I64 = R4;
           (_cxtZ::I64) = call MO_AtomicRMW W64 AMO_Add(_cxu0::P64, _cxu1::I64);
           R1 = _cxtZ::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.800721911 UTC

[section ""data" . GHC.PrimopWrappers.fetchSubIntArray#_closure" {
     GHC.PrimopWrappers.fetchSubIntArray#_closure:
         const GHC.PrimopWrappers.fetchSubIntArray#_info;
 },
 GHC.PrimopWrappers.fetchSubIntArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cxuc,
                       label: GHC.PrimopWrappers.fetchSubIntArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxuc: // global
           _cxua::P64 = (R2 + 16) + (R3 << 3);
           _cxub::I64 = R4;
           (_cxu9::I64) = call MO_AtomicRMW W64 AMO_Sub(_cxua::P64, _cxub::I64);
           R1 = _cxu9::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.801713766 UTC

[section ""data" . GHC.PrimopWrappers.fetchAndIntArray#_closure" {
     GHC.PrimopWrappers.fetchAndIntArray#_closure:
         const GHC.PrimopWrappers.fetchAndIntArray#_info;
 },
 GHC.PrimopWrappers.fetchAndIntArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cxum,
                       label: GHC.PrimopWrappers.fetchAndIntArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxum: // global
           _cxuk::P64 = (R2 + 16) + (R3 << 3);
           _cxul::I64 = R4;
           (_cxuj::I64) = call MO_AtomicRMW W64 AMO_And(_cxuk::P64, _cxul::I64);
           R1 = _cxuj::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.802616914 UTC

[section ""data" . GHC.PrimopWrappers.fetchNandIntArray#_closure" {
     GHC.PrimopWrappers.fetchNandIntArray#_closure:
         const GHC.PrimopWrappers.fetchNandIntArray#_info;
 },
 GHC.PrimopWrappers.fetchNandIntArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cxuw,
                       label: GHC.PrimopWrappers.fetchNandIntArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxuw: // global
           _cxuu::P64 = (R2 + 16) + (R3 << 3);
           _cxuv::I64 = R4;
           (_cxut::I64) = call MO_AtomicRMW W64 AMO_Nand(_cxuu::P64, _cxuv::I64);
           R1 = _cxut::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.803546848 UTC

[section ""data" . GHC.PrimopWrappers.fetchOrIntArray#_closure" {
     GHC.PrimopWrappers.fetchOrIntArray#_closure:
         const GHC.PrimopWrappers.fetchOrIntArray#_info;
 },
 GHC.PrimopWrappers.fetchOrIntArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cxuG,
                       label: GHC.PrimopWrappers.fetchOrIntArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxuG: // global
           _cxuE::P64 = (R2 + 16) + (R3 << 3);
           _cxuF::I64 = R4;
           (_cxuD::I64) = call MO_AtomicRMW W64 AMO_Or(_cxuE::P64, _cxuF::I64);
           R1 = _cxuD::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.804504829 UTC

[section ""data" . GHC.PrimopWrappers.fetchXorIntArray#_closure" {
     GHC.PrimopWrappers.fetchXorIntArray#_closure:
         const GHC.PrimopWrappers.fetchXorIntArray#_info;
 },
 GHC.PrimopWrappers.fetchXorIntArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cxuQ,
                       label: GHC.PrimopWrappers.fetchXorIntArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxuQ: // global
           _cxuO::P64 = (R2 + 16) + (R3 << 3);
           _cxuP::I64 = R4;
           (_cxuN::I64) = call MO_AtomicRMW W64 AMO_Xor(_cxuO::P64, _cxuP::I64);
           R1 = _cxuN::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.805518506 UTC

[section ""data" . GHC.PrimopWrappers.newArrayArray#_closure" {
     GHC.PrimopWrappers.newArrayArray#_closure:
         const GHC.PrimopWrappers.newArrayArray#_info;
 },
 GHC.PrimopWrappers.newArrayArray#_entry() //  [R2]
         { info_tbl: [(cxuX,
                       label: GHC.PrimopWrappers.newArrayArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxuX: // global
           R1 = R2;
           call stg_newArrayArray#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.806307572 UTC

[section ""data" . GHC.PrimopWrappers.sameMutableArrayArray#_closure" {
     GHC.PrimopWrappers.sameMutableArrayArray#_closure:
         const GHC.PrimopWrappers.sameMutableArrayArray#_info;
 },
 GHC.PrimopWrappers.sameMutableArrayArray#_entry() //  [R2, R3]
         { info_tbl: [(cxv5,
                       label: GHC.PrimopWrappers.sameMutableArrayArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxv5: // global
           R1 = R2 == R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.807146133 UTC

[section ""data" . GHC.PrimopWrappers.unsafeFreezeArrayArray#_closure" {
     GHC.PrimopWrappers.unsafeFreezeArrayArray#_closure:
         const GHC.PrimopWrappers.unsafeFreezeArrayArray#_info;
 },
 GHC.PrimopWrappers.unsafeFreezeArrayArray#_entry() //  [R2]
         { info_tbl: [(cxvd,
                       label: GHC.PrimopWrappers.unsafeFreezeArrayArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxvd: // global
           I64[R2] = stg_MUT_ARR_PTRS_FROZEN0_info;
           R1 = R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.807943376 UTC

[section ""data" . GHC.PrimopWrappers.sizeofArrayArray#_closure" {
     GHC.PrimopWrappers.sizeofArrayArray#_closure:
         const GHC.PrimopWrappers.sizeofArrayArray#_info;
 },
 GHC.PrimopWrappers.sizeofArrayArray#_entry() //  [R2]
         { info_tbl: [(cxvl,
                       label: GHC.PrimopWrappers.sizeofArrayArray#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxvl: // global
           R1 = I64[R2 + 8];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.808760743 UTC

[section ""data" . GHC.PrimopWrappers.sizeofMutableArrayArray#_closure" {
     GHC.PrimopWrappers.sizeofMutableArrayArray#_closure:
         const GHC.PrimopWrappers.sizeofMutableArrayArray#_info;
 },
 GHC.PrimopWrappers.sizeofMutableArrayArray#_entry() //  [R2]
         { info_tbl: [(cxvt,
                       label: GHC.PrimopWrappers.sizeofMutableArrayArray#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxvt: // global
           R1 = I64[R2 + 8];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.809974005 UTC

[section ""data" . GHC.PrimopWrappers.indexByteArrayArray#_closure" {
     GHC.PrimopWrappers.indexByteArrayArray#_closure:
         const GHC.PrimopWrappers.indexByteArrayArray#_info;
 },
 GHC.PrimopWrappers.indexByteArrayArray#_entry() //  [R2, R3]
         { info_tbl: [(cxvB,
                       label: GHC.PrimopWrappers.indexByteArrayArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxvB: // global
           R1 = P64[(R2 + 24) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.810828862 UTC

[section ""data" . GHC.PrimopWrappers.indexArrayArrayArray#_closure" {
     GHC.PrimopWrappers.indexArrayArrayArray#_closure:
         const GHC.PrimopWrappers.indexArrayArrayArray#_info;
 },
 GHC.PrimopWrappers.indexArrayArrayArray#_entry() //  [R2, R3]
         { info_tbl: [(cxvJ,
                       label: GHC.PrimopWrappers.indexArrayArrayArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxvJ: // global
           R1 = P64[(R2 + 24) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.811642971 UTC

[section ""data" . GHC.PrimopWrappers.readByteArrayArray#_closure" {
     GHC.PrimopWrappers.readByteArrayArray#_closure:
         const GHC.PrimopWrappers.readByteArrayArray#_info;
 },
 GHC.PrimopWrappers.readByteArrayArray#_entry() //  [R2, R3]
         { info_tbl: [(cxvR,
                       label: GHC.PrimopWrappers.readByteArrayArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxvR: // global
           R1 = P64[(R2 + 24) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.812463493 UTC

[section ""data" . GHC.PrimopWrappers.readMutableByteArrayArray#_closure" {
     GHC.PrimopWrappers.readMutableByteArrayArray#_closure:
         const GHC.PrimopWrappers.readMutableByteArrayArray#_info;
 },
 GHC.PrimopWrappers.readMutableByteArrayArray#_entry() //  [R2, R3]
         { info_tbl: [(cxvZ,
                       label: GHC.PrimopWrappers.readMutableByteArrayArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxvZ: // global
           R1 = P64[(R2 + 24) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.813392515 UTC

[section ""data" . GHC.PrimopWrappers.readArrayArrayArray#_closure" {
     GHC.PrimopWrappers.readArrayArrayArray#_closure:
         const GHC.PrimopWrappers.readArrayArrayArray#_info;
 },
 GHC.PrimopWrappers.readArrayArrayArray#_entry() //  [R2, R3]
         { info_tbl: [(cxw7,
                       label: GHC.PrimopWrappers.readArrayArrayArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxw7: // global
           R1 = P64[(R2 + 24) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.814280266 UTC

[section ""data" . GHC.PrimopWrappers.readMutableArrayArrayArray#_closure" {
     GHC.PrimopWrappers.readMutableArrayArrayArray#_closure:
         const GHC.PrimopWrappers.readMutableArrayArrayArray#_info;
 },
 GHC.PrimopWrappers.readMutableArrayArrayArray#_entry() //  [R2, R3]
         { info_tbl: [(cxwf,
                       label: GHC.PrimopWrappers.readMutableArrayArrayArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxwf: // global
           R1 = P64[(R2 + 24) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.815221183 UTC

[section ""data" . GHC.PrimopWrappers.writeByteArrayArray#_closure" {
     GHC.PrimopWrappers.writeByteArrayArray#_closure:
         const GHC.PrimopWrappers.writeByteArrayArray#_info;
 },
 GHC.PrimopWrappers.writeByteArrayArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cxwm,
                       label: GHC.PrimopWrappers.writeByteArrayArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 21} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxwm: // global
           _B2::P64 = R4;
           _B3::I64 = R3;
           call MO_WriteBarrier();
           P64[(R2 + 24) + (_B3::I64 << 3)] = _B2::P64;
           I64[R2] = stg_MUT_ARR_PTRS_DIRTY_info;
           I8[(R2 + 24) + ((I64[R2 + 8] << 3) + (_B3::I64 >> 7))] = 1 :: W8;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.816185676 UTC

[section ""data" . GHC.PrimopWrappers.writeMutableByteArrayArray#_closure" {
     GHC.PrimopWrappers.writeMutableByteArrayArray#_closure:
         const GHC.PrimopWrappers.writeMutableByteArrayArray#_info;
 },
 GHC.PrimopWrappers.writeMutableByteArrayArray#_entry() //  [R2, R3,
                                                             R4]
         { info_tbl: [(cxwt,
                       label: GHC.PrimopWrappers.writeMutableByteArrayArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 21} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxwt: // global
           _B2::P64 = R4;
           _B3::I64 = R3;
           call MO_WriteBarrier();
           P64[(R2 + 24) + (_B3::I64 << 3)] = _B2::P64;
           I64[R2] = stg_MUT_ARR_PTRS_DIRTY_info;
           I8[(R2 + 24) + ((I64[R2 + 8] << 3) + (_B3::I64 >> 7))] = 1 :: W8;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.817140115 UTC

[section ""data" . GHC.PrimopWrappers.writeArrayArrayArray#_closure" {
     GHC.PrimopWrappers.writeArrayArrayArray#_closure:
         const GHC.PrimopWrappers.writeArrayArrayArray#_info;
 },
 GHC.PrimopWrappers.writeArrayArrayArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cxwA,
                       label: GHC.PrimopWrappers.writeArrayArrayArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 21} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxwA: // global
           _B2::P64 = R4;
           _B3::I64 = R3;
           call MO_WriteBarrier();
           P64[(R2 + 24) + (_B3::I64 << 3)] = _B2::P64;
           I64[R2] = stg_MUT_ARR_PTRS_DIRTY_info;
           I8[(R2 + 24) + ((I64[R2 + 8] << 3) + (_B3::I64 >> 7))] = 1 :: W8;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.818239253 UTC

[section ""data" . GHC.PrimopWrappers.writeMutableArrayArrayArray#_closure" {
     GHC.PrimopWrappers.writeMutableArrayArrayArray#_closure:
         const GHC.PrimopWrappers.writeMutableArrayArrayArray#_info;
 },
 GHC.PrimopWrappers.writeMutableArrayArrayArray#_entry() //  [R2,
                                                              R3, R4]
         { info_tbl: [(cxwH,
                       label: GHC.PrimopWrappers.writeMutableArrayArrayArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 21} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxwH: // global
           _B2::P64 = R4;
           _B3::I64 = R3;
           call MO_WriteBarrier();
           P64[(R2 + 24) + (_B3::I64 << 3)] = _B2::P64;
           I64[R2] = stg_MUT_ARR_PTRS_DIRTY_info;
           I8[(R2 + 24) + ((I64[R2 + 8] << 3) + (_B3::I64 >> 7))] = 1 :: W8;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.819264659 UTC

[section ""data" . GHC.PrimopWrappers.copyArrayArray#_closure" {
     GHC.PrimopWrappers.copyArrayArray#_closure:
         const GHC.PrimopWrappers.copyArrayArray#_info;
 },
 GHC.PrimopWrappers.copyArrayArray#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxwL: // global
           R6 = I64[Sp + 32];
           R5 = I64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 40;
           call GHC.PrimopWrappers.copyArrayArray#_entry(R6,
                                                         R5,
                                                         R4,
                                                         R3,
                                                         R2,
                                                         R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.copyArrayArray#_entry() //  [R2, R3, R4, R5, R6]
         { info_tbl: [(cxwP,
                       label: GHC.PrimopWrappers.copyArrayArray#_info
                       rep:HeapRep static {
                             Fun {arity: 6
                                  fun_type: ArgGen [False, True, False, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxwP: // global
           _B3::I64 = R5;
           R5 = R6;
           _B4::P64 = R4;
           R4 = _B3::I64;
           _B5::I64 = R3;
           R3 = _B4::P64;
           _B6::P64 = R2;
           R2 = _B5::I64;
           R1 = _B6::P64;
           call stg_copyArrayArray#(R5,
                                    R4,
                                    R3,
                                    R2,
                                    R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.820489969 UTC

[section ""data" . GHC.PrimopWrappers.copyMutableArrayArray#_closure" {
     GHC.PrimopWrappers.copyMutableArrayArray#_closure:
         const GHC.PrimopWrappers.copyMutableArrayArray#_info;
 },
 GHC.PrimopWrappers.copyMutableArrayArray#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxwT: // global
           R6 = I64[Sp + 32];
           R5 = I64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 40;
           call GHC.PrimopWrappers.copyMutableArrayArray#_entry(R6,
                                                                R5,
                                                                R4,
                                                                R3,
                                                                R2,
                                                                R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.copyMutableArrayArray#_entry() //  [R2, R3, R4,
                                                        R5, R6]
         { info_tbl: [(cxwX,
                       label: GHC.PrimopWrappers.copyMutableArrayArray#_info
                       rep:HeapRep static {
                             Fun {arity: 6
                                  fun_type: ArgGen [False, True, False, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxwX: // global
           _B3::I64 = R5;
           R5 = R6;
           _B4::P64 = R4;
           R4 = _B3::I64;
           _B5::I64 = R3;
           R3 = _B4::P64;
           _B6::P64 = R2;
           R2 = _B5::I64;
           R1 = _B6::P64;
           call stg_copyMutableArrayArray#(R5,
                                           R4,
                                           R3,
                                           R2,
                                           R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.821707115 UTC

[section ""data" . GHC.PrimopWrappers.plusAddr#_closure" {
     GHC.PrimopWrappers.plusAddr#_closure:
         const GHC.PrimopWrappers.plusAddr#_info;
 },
 GHC.PrimopWrappers.plusAddr#_entry() //  [R2, R3]
         { info_tbl: [(cxx5,
                       label: GHC.PrimopWrappers.plusAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxx5: // global
           R1 = R2 + R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.822546423 UTC

[section ""data" . GHC.PrimopWrappers.minusAddr#_closure" {
     GHC.PrimopWrappers.minusAddr#_closure:
         const GHC.PrimopWrappers.minusAddr#_info;
 },
 GHC.PrimopWrappers.minusAddr#_entry() //  [R2, R3]
         { info_tbl: [(cxxd,
                       label: GHC.PrimopWrappers.minusAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxxd: // global
           R1 = R2 - R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.823408622 UTC

[section ""data" . GHC.PrimopWrappers.remAddr#_closure" {
     GHC.PrimopWrappers.remAddr#_closure:
         const GHC.PrimopWrappers.remAddr#_info;
 },
 GHC.PrimopWrappers.remAddr#_entry() //  [R2, R3]
         { info_tbl: [(cxxl,
                       label: GHC.PrimopWrappers.remAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxxl: // global
           R1 = R2 % R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.82424294 UTC

[section ""data" . GHC.PrimopWrappers.addr2Int#_closure" {
     GHC.PrimopWrappers.addr2Int#_closure:
         const GHC.PrimopWrappers.addr2Int#_info;
 },
 GHC.PrimopWrappers.addr2Int#_entry() //  [R2]
         { info_tbl: [(cxxt,
                       label: GHC.PrimopWrappers.addr2Int#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxxt: // global
           R1 = R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.825995485 UTC

[section ""data" . GHC.PrimopWrappers.int2Addr#_closure" {
     GHC.PrimopWrappers.int2Addr#_closure:
         const GHC.PrimopWrappers.int2Addr#_info;
 },
 GHC.PrimopWrappers.int2Addr#_entry() //  [R2]
         { info_tbl: [(cxxB,
                       label: GHC.PrimopWrappers.int2Addr#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxxB: // global
           R1 = R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.826829429 UTC

[section ""data" . GHC.PrimopWrappers.gtAddr#_closure" {
     GHC.PrimopWrappers.gtAddr#_closure:
         const GHC.PrimopWrappers.gtAddr#_info;
 },
 GHC.PrimopWrappers.gtAddr#_entry() //  [R2, R3]
         { info_tbl: [(cxxJ,
                       label: GHC.PrimopWrappers.gtAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxxJ: // global
           R1 = R2 > R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.827689753 UTC

[section ""data" . GHC.PrimopWrappers.geAddr#_closure" {
     GHC.PrimopWrappers.geAddr#_closure:
         const GHC.PrimopWrappers.geAddr#_info;
 },
 GHC.PrimopWrappers.geAddr#_entry() //  [R2, R3]
         { info_tbl: [(cxxR,
                       label: GHC.PrimopWrappers.geAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxxR: // global
           R1 = R2 >= R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.828540507 UTC

[section ""data" . GHC.PrimopWrappers.eqAddr#_closure" {
     GHC.PrimopWrappers.eqAddr#_closure:
         const GHC.PrimopWrappers.eqAddr#_info;
 },
 GHC.PrimopWrappers.eqAddr#_entry() //  [R2, R3]
         { info_tbl: [(cxxZ,
                       label: GHC.PrimopWrappers.eqAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxxZ: // global
           R1 = R2 == R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.829455036 UTC

[section ""data" . GHC.PrimopWrappers.neAddr#_closure" {
     GHC.PrimopWrappers.neAddr#_closure:
         const GHC.PrimopWrappers.neAddr#_info;
 },
 GHC.PrimopWrappers.neAddr#_entry() //  [R2, R3]
         { info_tbl: [(cxy7,
                       label: GHC.PrimopWrappers.neAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxy7: // global
           R1 = R2 != R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.830219152 UTC

[section ""data" . GHC.PrimopWrappers.ltAddr#_closure" {
     GHC.PrimopWrappers.ltAddr#_closure:
         const GHC.PrimopWrappers.ltAddr#_info;
 },
 GHC.PrimopWrappers.ltAddr#_entry() //  [R2, R3]
         { info_tbl: [(cxyf,
                       label: GHC.PrimopWrappers.ltAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxyf: // global
           R1 = R2 < R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.831041469 UTC

[section ""data" . GHC.PrimopWrappers.leAddr#_closure" {
     GHC.PrimopWrappers.leAddr#_closure:
         const GHC.PrimopWrappers.leAddr#_info;
 },
 GHC.PrimopWrappers.leAddr#_entry() //  [R2, R3]
         { info_tbl: [(cxyn,
                       label: GHC.PrimopWrappers.leAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxyn: // global
           R1 = R2 <= R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.831886018 UTC

[section ""data" . GHC.PrimopWrappers.indexCharOffAddr#_closure" {
     GHC.PrimopWrappers.indexCharOffAddr#_closure:
         const GHC.PrimopWrappers.indexCharOffAddr#_info;
 },
 GHC.PrimopWrappers.indexCharOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cxyv,
                       label: GHC.PrimopWrappers.indexCharOffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxyv: // global
           R1 = %MO_UU_Conv_W8_W64(I8[R2 + R3]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.832750571 UTC

[section ""data" . GHC.PrimopWrappers.indexWideCharOffAddr#_closure" {
     GHC.PrimopWrappers.indexWideCharOffAddr#_closure:
         const GHC.PrimopWrappers.indexWideCharOffAddr#_info;
 },
 GHC.PrimopWrappers.indexWideCharOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cxyD,
                       label: GHC.PrimopWrappers.indexWideCharOffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxyD: // global
           R1 = %MO_UU_Conv_W32_W64(I32[R2 + (R3 << 2)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.83367113 UTC

[section ""data" . GHC.PrimopWrappers.indexIntOffAddr#_closure" {
     GHC.PrimopWrappers.indexIntOffAddr#_closure:
         const GHC.PrimopWrappers.indexIntOffAddr#_info;
 },
 GHC.PrimopWrappers.indexIntOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cxyL,
                       label: GHC.PrimopWrappers.indexIntOffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxyL: // global
           R1 = I64[R2 + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.834475045 UTC

[section ""data" . GHC.PrimopWrappers.indexWordOffAddr#_closure" {
     GHC.PrimopWrappers.indexWordOffAddr#_closure:
         const GHC.PrimopWrappers.indexWordOffAddr#_info;
 },
 GHC.PrimopWrappers.indexWordOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cxyT,
                       label: GHC.PrimopWrappers.indexWordOffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxyT: // global
           R1 = I64[R2 + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.835269179 UTC

[section ""data" . GHC.PrimopWrappers.indexAddrOffAddr#_closure" {
     GHC.PrimopWrappers.indexAddrOffAddr#_closure:
         const GHC.PrimopWrappers.indexAddrOffAddr#_info;
 },
 GHC.PrimopWrappers.indexAddrOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cxz1,
                       label: GHC.PrimopWrappers.indexAddrOffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxz1: // global
           R1 = I64[R2 + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.836137681 UTC

[section ""data" . GHC.PrimopWrappers.indexFloatOffAddr#_closure" {
     GHC.PrimopWrappers.indexFloatOffAddr#_closure:
         const GHC.PrimopWrappers.indexFloatOffAddr#_info;
 },
 GHC.PrimopWrappers.indexFloatOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cxz9,
                       label: GHC.PrimopWrappers.indexFloatOffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxz9: // global
           F1 = F32[R2 + (R3 << 2)];
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.837005763 UTC

[section ""data" . GHC.PrimopWrappers.indexDoubleOffAddr#_closure" {
     GHC.PrimopWrappers.indexDoubleOffAddr#_closure:
         const GHC.PrimopWrappers.indexDoubleOffAddr#_info;
 },
 GHC.PrimopWrappers.indexDoubleOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cxzh,
                       label: GHC.PrimopWrappers.indexDoubleOffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxzh: // global
           D1 = F64[R2 + (R3 << 3)];
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.837965164 UTC

[section ""data" . GHC.PrimopWrappers.indexStablePtrOffAddr#_closure" {
     GHC.PrimopWrappers.indexStablePtrOffAddr#_closure:
         const GHC.PrimopWrappers.indexStablePtrOffAddr#_info;
 },
 GHC.PrimopWrappers.indexStablePtrOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cxzp,
                       label: GHC.PrimopWrappers.indexStablePtrOffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxzp: // global
           R1 = I64[R2 + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.83875224 UTC

[section ""data" . GHC.PrimopWrappers.indexInt8OffAddr#_closure" {
     GHC.PrimopWrappers.indexInt8OffAddr#_closure:
         const GHC.PrimopWrappers.indexInt8OffAddr#_info;
 },
 GHC.PrimopWrappers.indexInt8OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cxzx,
                       label: GHC.PrimopWrappers.indexInt8OffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxzx: // global
           R1 = %MO_SS_Conv_W8_W64(I8[R2 + R3]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.839563809 UTC

[section ""data" . GHC.PrimopWrappers.indexInt16OffAddr#_closure" {
     GHC.PrimopWrappers.indexInt16OffAddr#_closure:
         const GHC.PrimopWrappers.indexInt16OffAddr#_info;
 },
 GHC.PrimopWrappers.indexInt16OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cxzF,
                       label: GHC.PrimopWrappers.indexInt16OffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxzF: // global
           R1 = %MO_SS_Conv_W16_W64(I16[R2 + (R3 << 1)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.84043783 UTC

[section ""data" . GHC.PrimopWrappers.indexInt32OffAddr#_closure" {
     GHC.PrimopWrappers.indexInt32OffAddr#_closure:
         const GHC.PrimopWrappers.indexInt32OffAddr#_info;
 },
 GHC.PrimopWrappers.indexInt32OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cxzN,
                       label: GHC.PrimopWrappers.indexInt32OffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxzN: // global
           R1 = %MO_SS_Conv_W32_W64(I32[R2 + (R3 << 2)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.841385756 UTC

[section ""data" . GHC.PrimopWrappers.indexInt64OffAddr#_closure" {
     GHC.PrimopWrappers.indexInt64OffAddr#_closure:
         const GHC.PrimopWrappers.indexInt64OffAddr#_info;
 },
 GHC.PrimopWrappers.indexInt64OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cxzV,
                       label: GHC.PrimopWrappers.indexInt64OffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxzV: // global
           R1 = I64[R2 + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.842222022 UTC

[section ""data" . GHC.PrimopWrappers.indexWord8OffAddr#_closure" {
     GHC.PrimopWrappers.indexWord8OffAddr#_closure:
         const GHC.PrimopWrappers.indexWord8OffAddr#_info;
 },
 GHC.PrimopWrappers.indexWord8OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cxA3,
                       label: GHC.PrimopWrappers.indexWord8OffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxA3: // global
           R1 = %MO_UU_Conv_W8_W64(I8[R2 + R3]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.843050787 UTC

[section ""data" . GHC.PrimopWrappers.indexWord16OffAddr#_closure" {
     GHC.PrimopWrappers.indexWord16OffAddr#_closure:
         const GHC.PrimopWrappers.indexWord16OffAddr#_info;
 },
 GHC.PrimopWrappers.indexWord16OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cxAb,
                       label: GHC.PrimopWrappers.indexWord16OffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxAb: // global
           R1 = %MO_UU_Conv_W16_W64(I16[R2 + (R3 << 1)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.843939635 UTC

[section ""data" . GHC.PrimopWrappers.indexWord32OffAddr#_closure" {
     GHC.PrimopWrappers.indexWord32OffAddr#_closure:
         const GHC.PrimopWrappers.indexWord32OffAddr#_info;
 },
 GHC.PrimopWrappers.indexWord32OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cxAj,
                       label: GHC.PrimopWrappers.indexWord32OffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxAj: // global
           R1 = %MO_UU_Conv_W32_W64(I32[R2 + (R3 << 2)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.844805379 UTC

[section ""data" . GHC.PrimopWrappers.indexWord64OffAddr#_closure" {
     GHC.PrimopWrappers.indexWord64OffAddr#_closure:
         const GHC.PrimopWrappers.indexWord64OffAddr#_info;
 },
 GHC.PrimopWrappers.indexWord64OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cxAr,
                       label: GHC.PrimopWrappers.indexWord64OffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxAr: // global
           R1 = I64[R2 + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.845825363 UTC

[section ""data" . GHC.PrimopWrappers.readCharOffAddr#_closure" {
     GHC.PrimopWrappers.readCharOffAddr#_closure:
         const GHC.PrimopWrappers.readCharOffAddr#_info;
 },
 GHC.PrimopWrappers.readCharOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cxAz,
                       label: GHC.PrimopWrappers.readCharOffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxAz: // global
           R1 = %MO_UU_Conv_W8_W64(I8[R2 + R3]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.846681727 UTC

[section ""data" . GHC.PrimopWrappers.readWideCharOffAddr#_closure" {
     GHC.PrimopWrappers.readWideCharOffAddr#_closure:
         const GHC.PrimopWrappers.readWideCharOffAddr#_info;
 },
 GHC.PrimopWrappers.readWideCharOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cxAH,
                       label: GHC.PrimopWrappers.readWideCharOffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxAH: // global
           R1 = %MO_UU_Conv_W32_W64(I32[R2 + (R3 << 2)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.847529675 UTC

[section ""data" . GHC.PrimopWrappers.readIntOffAddr#_closure" {
     GHC.PrimopWrappers.readIntOffAddr#_closure:
         const GHC.PrimopWrappers.readIntOffAddr#_info;
 },
 GHC.PrimopWrappers.readIntOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cxAP,
                       label: GHC.PrimopWrappers.readIntOffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxAP: // global
           R1 = I64[R2 + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.848389083 UTC

[section ""data" . GHC.PrimopWrappers.readWordOffAddr#_closure" {
     GHC.PrimopWrappers.readWordOffAddr#_closure:
         const GHC.PrimopWrappers.readWordOffAddr#_info;
 },
 GHC.PrimopWrappers.readWordOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cxAX,
                       label: GHC.PrimopWrappers.readWordOffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxAX: // global
           R1 = I64[R2 + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.849395787 UTC

[section ""data" . GHC.PrimopWrappers.readAddrOffAddr#_closure" {
     GHC.PrimopWrappers.readAddrOffAddr#_closure:
         const GHC.PrimopWrappers.readAddrOffAddr#_info;
 },
 GHC.PrimopWrappers.readAddrOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cxB5,
                       label: GHC.PrimopWrappers.readAddrOffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxB5: // global
           R1 = I64[R2 + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.850267058 UTC

[section ""data" . GHC.PrimopWrappers.readFloatOffAddr#_closure" {
     GHC.PrimopWrappers.readFloatOffAddr#_closure:
         const GHC.PrimopWrappers.readFloatOffAddr#_info;
 },
 GHC.PrimopWrappers.readFloatOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cxBd,
                       label: GHC.PrimopWrappers.readFloatOffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxBd: // global
           F1 = F32[R2 + (R3 << 2)];
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.851136132 UTC

[section ""data" . GHC.PrimopWrappers.readDoubleOffAddr#_closure" {
     GHC.PrimopWrappers.readDoubleOffAddr#_closure:
         const GHC.PrimopWrappers.readDoubleOffAddr#_info;
 },
 GHC.PrimopWrappers.readDoubleOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cxBl,
                       label: GHC.PrimopWrappers.readDoubleOffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxBl: // global
           D1 = F64[R2 + (R3 << 3)];
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.852068108 UTC

[section ""data" . GHC.PrimopWrappers.readStablePtrOffAddr#_closure" {
     GHC.PrimopWrappers.readStablePtrOffAddr#_closure:
         const GHC.PrimopWrappers.readStablePtrOffAddr#_info;
 },
 GHC.PrimopWrappers.readStablePtrOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cxBt,
                       label: GHC.PrimopWrappers.readStablePtrOffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxBt: // global
           R1 = I64[R2 + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.854049442 UTC

[section ""data" . GHC.PrimopWrappers.readInt8OffAddr#_closure" {
     GHC.PrimopWrappers.readInt8OffAddr#_closure:
         const GHC.PrimopWrappers.readInt8OffAddr#_info;
 },
 GHC.PrimopWrappers.readInt8OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cxBB,
                       label: GHC.PrimopWrappers.readInt8OffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxBB: // global
           R1 = %MO_SS_Conv_W8_W64(I8[R2 + R3]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.854890054 UTC

[section ""data" . GHC.PrimopWrappers.readInt16OffAddr#_closure" {
     GHC.PrimopWrappers.readInt16OffAddr#_closure:
         const GHC.PrimopWrappers.readInt16OffAddr#_info;
 },
 GHC.PrimopWrappers.readInt16OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cxBJ,
                       label: GHC.PrimopWrappers.readInt16OffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxBJ: // global
           R1 = %MO_SS_Conv_W16_W64(I16[R2 + (R3 << 1)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.855733197 UTC

[section ""data" . GHC.PrimopWrappers.readInt32OffAddr#_closure" {
     GHC.PrimopWrappers.readInt32OffAddr#_closure:
         const GHC.PrimopWrappers.readInt32OffAddr#_info;
 },
 GHC.PrimopWrappers.readInt32OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cxBR,
                       label: GHC.PrimopWrappers.readInt32OffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxBR: // global
           R1 = %MO_SS_Conv_W32_W64(I32[R2 + (R3 << 2)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.85658877 UTC

[section ""data" . GHC.PrimopWrappers.readInt64OffAddr#_closure" {
     GHC.PrimopWrappers.readInt64OffAddr#_closure:
         const GHC.PrimopWrappers.readInt64OffAddr#_info;
 },
 GHC.PrimopWrappers.readInt64OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cxBZ,
                       label: GHC.PrimopWrappers.readInt64OffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxBZ: // global
           R1 = I64[R2 + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.857505002 UTC

[section ""data" . GHC.PrimopWrappers.readWord8OffAddr#_closure" {
     GHC.PrimopWrappers.readWord8OffAddr#_closure:
         const GHC.PrimopWrappers.readWord8OffAddr#_info;
 },
 GHC.PrimopWrappers.readWord8OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cxC7,
                       label: GHC.PrimopWrappers.readWord8OffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxC7: // global
           R1 = %MO_UU_Conv_W8_W64(I8[R2 + R3]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.858349703 UTC

[section ""data" . GHC.PrimopWrappers.readWord16OffAddr#_closure" {
     GHC.PrimopWrappers.readWord16OffAddr#_closure:
         const GHC.PrimopWrappers.readWord16OffAddr#_info;
 },
 GHC.PrimopWrappers.readWord16OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cxCf,
                       label: GHC.PrimopWrappers.readWord16OffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxCf: // global
           R1 = %MO_UU_Conv_W16_W64(I16[R2 + (R3 << 1)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.859222268 UTC

[section ""data" . GHC.PrimopWrappers.readWord32OffAddr#_closure" {
     GHC.PrimopWrappers.readWord32OffAddr#_closure:
         const GHC.PrimopWrappers.readWord32OffAddr#_info;
 },
 GHC.PrimopWrappers.readWord32OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cxCn,
                       label: GHC.PrimopWrappers.readWord32OffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxCn: // global
           R1 = %MO_UU_Conv_W32_W64(I32[R2 + (R3 << 2)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.86002485 UTC

[section ""data" . GHC.PrimopWrappers.readWord64OffAddr#_closure" {
     GHC.PrimopWrappers.readWord64OffAddr#_closure:
         const GHC.PrimopWrappers.readWord64OffAddr#_info;
 },
 GHC.PrimopWrappers.readWord64OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cxCv,
                       label: GHC.PrimopWrappers.readWord64OffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxCv: // global
           R1 = I64[R2 + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.860860522 UTC

[section ""data" . GHC.PrimopWrappers.writeCharOffAddr#_closure" {
     GHC.PrimopWrappers.writeCharOffAddr#_closure:
         const GHC.PrimopWrappers.writeCharOffAddr#_info;
 },
 GHC.PrimopWrappers.writeCharOffAddr#_entry() //  [R2, R3, R4]
         { info_tbl: [(cxCC,
                       label: GHC.PrimopWrappers.writeCharOffAddr#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 16} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxCC: // global
           I8[R2 + R3] = %MO_UU_Conv_W64_W8(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.862014606 UTC

[section ""data" . GHC.PrimopWrappers.writeWideCharOffAddr#_closure" {
     GHC.PrimopWrappers.writeWideCharOffAddr#_closure:
         const GHC.PrimopWrappers.writeWideCharOffAddr#_info;
 },
 GHC.PrimopWrappers.writeWideCharOffAddr#_entry() //  [R2, R3, R4]
         { info_tbl: [(cxCJ,
                       label: GHC.PrimopWrappers.writeWideCharOffAddr#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 16} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxCJ: // global
           I32[R2 + (R3 << 2)] = %MO_UU_Conv_W64_W32(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.862874706 UTC

[section ""data" . GHC.PrimopWrappers.writeIntOffAddr#_closure" {
     GHC.PrimopWrappers.writeIntOffAddr#_closure:
         const GHC.PrimopWrappers.writeIntOffAddr#_info;
 },
 GHC.PrimopWrappers.writeIntOffAddr#_entry() //  [R2, R3, R4]
         { info_tbl: [(cxCQ,
                       label: GHC.PrimopWrappers.writeIntOffAddr#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 16} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxCQ: // global
           I64[R2 + (R3 << 3)] = R4;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.863739793 UTC

[section ""data" . GHC.PrimopWrappers.writeWordOffAddr#_closure" {
     GHC.PrimopWrappers.writeWordOffAddr#_closure:
         const GHC.PrimopWrappers.writeWordOffAddr#_info;
 },
 GHC.PrimopWrappers.writeWordOffAddr#_entry() //  [R2, R3, R4]
         { info_tbl: [(cxCX,
                       label: GHC.PrimopWrappers.writeWordOffAddr#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 16} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxCX: // global
           I64[R2 + (R3 << 3)] = R4;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.864607373 UTC

[section ""data" . GHC.PrimopWrappers.writeAddrOffAddr#_closure" {
     GHC.PrimopWrappers.writeAddrOffAddr#_closure:
         const GHC.PrimopWrappers.writeAddrOffAddr#_info;
 },
 GHC.PrimopWrappers.writeAddrOffAddr#_entry() //  [R2, R3, R4]
         { info_tbl: [(cxD4,
                       label: GHC.PrimopWrappers.writeAddrOffAddr#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 16} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxD4: // global
           I64[R2 + (R3 << 3)] = R4;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.865627525 UTC

[section ""data" . GHC.PrimopWrappers.writeFloatOffAddr#_closure" {
     GHC.PrimopWrappers.writeFloatOffAddr#_closure:
         const GHC.PrimopWrappers.writeFloatOffAddr#_info;
 },
 GHC.PrimopWrappers.writeFloatOffAddr#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxD8: // global
           F1 = F32[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = I64[Sp];
           R1 = R1;
           Sp = Sp + 24;
           call GHC.PrimopWrappers.writeFloatOffAddr#_entry(F1,
                                                            R3,
                                                            R2,
                                                            R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.writeFloatOffAddr#_entry() //  [R2, R3, F1]
         { info_tbl: [(cxDc,
                       label: GHC.PrimopWrappers.writeFloatOffAddr#_info
                       rep:HeapRep static {
                             Fun {arity: 4 fun_type: ArgGen [True, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxDc: // global
           F32[R2 + (R3 << 2)] = F1;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.866702801 UTC

[section ""data" . GHC.PrimopWrappers.writeDoubleOffAddr#_closure" {
     GHC.PrimopWrappers.writeDoubleOffAddr#_closure:
         const GHC.PrimopWrappers.writeDoubleOffAddr#_info;
 },
 GHC.PrimopWrappers.writeDoubleOffAddr#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxDg: // global
           D1 = F64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = I64[Sp];
           R1 = R1;
           Sp = Sp + 24;
           call GHC.PrimopWrappers.writeDoubleOffAddr#_entry(D1,
                                                             R3,
                                                             R2,
                                                             R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.writeDoubleOffAddr#_entry() //  [R2, R3, D1]
         { info_tbl: [(cxDk,
                       label: GHC.PrimopWrappers.writeDoubleOffAddr#_info
                       rep:HeapRep static {
                             Fun {arity: 4 fun_type: ArgGen [True, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxDk: // global
           F64[R2 + (R3 << 3)] = D1;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.86775871 UTC

[section ""data" . GHC.PrimopWrappers.writeStablePtrOffAddr#_closure" {
     GHC.PrimopWrappers.writeStablePtrOffAddr#_closure:
         const GHC.PrimopWrappers.writeStablePtrOffAddr#_info;
 },
 GHC.PrimopWrappers.writeStablePtrOffAddr#_entry() //  [R2, R3, R4]
         { info_tbl: [(cxDr,
                       label: GHC.PrimopWrappers.writeStablePtrOffAddr#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 16} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxDr: // global
           I64[R2 + (R3 << 3)] = R4;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.868625263 UTC

[section ""data" . GHC.PrimopWrappers.writeInt8OffAddr#_closure" {
     GHC.PrimopWrappers.writeInt8OffAddr#_closure:
         const GHC.PrimopWrappers.writeInt8OffAddr#_info;
 },
 GHC.PrimopWrappers.writeInt8OffAddr#_entry() //  [R2, R3, R4]
         { info_tbl: [(cxDy,
                       label: GHC.PrimopWrappers.writeInt8OffAddr#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 16} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxDy: // global
           I8[R2 + R3] = %MO_UU_Conv_W64_W8(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.869559217 UTC

[section ""data" . GHC.PrimopWrappers.writeInt16OffAddr#_closure" {
     GHC.PrimopWrappers.writeInt16OffAddr#_closure:
         const GHC.PrimopWrappers.writeInt16OffAddr#_info;
 },
 GHC.PrimopWrappers.writeInt16OffAddr#_entry() //  [R2, R3, R4]
         { info_tbl: [(cxDF,
                       label: GHC.PrimopWrappers.writeInt16OffAddr#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 16} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxDF: // global
           I16[R2 + (R3 << 1)] = %MO_UU_Conv_W64_W16(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.870421405 UTC

[section ""data" . GHC.PrimopWrappers.writeInt32OffAddr#_closure" {
     GHC.PrimopWrappers.writeInt32OffAddr#_closure:
         const GHC.PrimopWrappers.writeInt32OffAddr#_info;
 },
 GHC.PrimopWrappers.writeInt32OffAddr#_entry() //  [R2, R3, R4]
         { info_tbl: [(cxDM,
                       label: GHC.PrimopWrappers.writeInt32OffAddr#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 16} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxDM: // global
           I32[R2 + (R3 << 2)] = %MO_UU_Conv_W64_W32(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.87129426 UTC

[section ""data" . GHC.PrimopWrappers.writeInt64OffAddr#_closure" {
     GHC.PrimopWrappers.writeInt64OffAddr#_closure:
         const GHC.PrimopWrappers.writeInt64OffAddr#_info;
 },
 GHC.PrimopWrappers.writeInt64OffAddr#_entry() //  [R2, R3, R4]
         { info_tbl: [(cxDT,
                       label: GHC.PrimopWrappers.writeInt64OffAddr#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 16} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxDT: // global
           I64[R2 + (R3 << 3)] = R4;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.872099005 UTC

[section ""data" . GHC.PrimopWrappers.writeWord8OffAddr#_closure" {
     GHC.PrimopWrappers.writeWord8OffAddr#_closure:
         const GHC.PrimopWrappers.writeWord8OffAddr#_info;
 },
 GHC.PrimopWrappers.writeWord8OffAddr#_entry() //  [R2, R3, R4]
         { info_tbl: [(cxE0,
                       label: GHC.PrimopWrappers.writeWord8OffAddr#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 16} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxE0: // global
           I8[R2 + R3] = %MO_UU_Conv_W64_W8(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.872931755 UTC

[section ""data" . GHC.PrimopWrappers.writeWord16OffAddr#_closure" {
     GHC.PrimopWrappers.writeWord16OffAddr#_closure:
         const GHC.PrimopWrappers.writeWord16OffAddr#_info;
 },
 GHC.PrimopWrappers.writeWord16OffAddr#_entry() //  [R2, R3, R4]
         { info_tbl: [(cxE7,
                       label: GHC.PrimopWrappers.writeWord16OffAddr#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 16} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxE7: // global
           I16[R2 + (R3 << 1)] = %MO_UU_Conv_W64_W16(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.873886724 UTC

[section ""data" . GHC.PrimopWrappers.writeWord32OffAddr#_closure" {
     GHC.PrimopWrappers.writeWord32OffAddr#_closure:
         const GHC.PrimopWrappers.writeWord32OffAddr#_info;
 },
 GHC.PrimopWrappers.writeWord32OffAddr#_entry() //  [R2, R3, R4]
         { info_tbl: [(cxEe,
                       label: GHC.PrimopWrappers.writeWord32OffAddr#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 16} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxEe: // global
           I32[R2 + (R3 << 2)] = %MO_UU_Conv_W64_W32(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.874726092 UTC

[section ""data" . GHC.PrimopWrappers.writeWord64OffAddr#_closure" {
     GHC.PrimopWrappers.writeWord64OffAddr#_closure:
         const GHC.PrimopWrappers.writeWord64OffAddr#_info;
 },
 GHC.PrimopWrappers.writeWord64OffAddr#_entry() //  [R2, R3, R4]
         { info_tbl: [(cxEl,
                       label: GHC.PrimopWrappers.writeWord64OffAddr#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 16} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxEl: // global
           I64[R2 + (R3 << 3)] = R4;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.875523399 UTC

[section ""data" . GHC.PrimopWrappers.newMutVar#_closure" {
     GHC.PrimopWrappers.newMutVar#_closure:
         const GHC.PrimopWrappers.newMutVar#_info;
 },
 GHC.PrimopWrappers.newMutVar#_entry() //  [R2]
         { info_tbl: [(cxEs,
                       label: GHC.PrimopWrappers.newMutVar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxEs: // global
           R1 = R2;
           call stg_newMutVar#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.876329904 UTC

[section ""data" . GHC.PrimopWrappers.readMutVar#_closure" {
     GHC.PrimopWrappers.readMutVar#_closure:
         const GHC.PrimopWrappers.readMutVar#_info;
 },
 GHC.PrimopWrappers.readMutVar#_entry() //  [R2]
         { info_tbl: [(cxEA,
                       label: GHC.PrimopWrappers.readMutVar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxEA: // global
           R1 = P64[R2 + 8];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.877196449 UTC

[section ""data" . GHC.PrimopWrappers.writeMutVar#_closure" {
     GHC.PrimopWrappers.writeMutVar#_closure:
         const GHC.PrimopWrappers.writeMutVar#_info;
 },
 GHC.PrimopWrappers.writeMutVar#_entry() //  [R2, R3]
         { info_tbl: [(cxEK,
                       label: GHC.PrimopWrappers.writeMutVar#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxEK: // global
           _B2::P64 = R3;
           call MO_WriteBarrier();
           P64[R2 + 8] = _B2::P64;
           call "ccall" arg hints:  [PtrHint,
                                     PtrHint]  result hints:  [] dirty_MUT_VAR(BaseReg, R2);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.878957675 UTC

[section ""data" . GHC.PrimopWrappers.sameMutVar#_closure" {
     GHC.PrimopWrappers.sameMutVar#_closure:
         const GHC.PrimopWrappers.sameMutVar#_info;
 },
 GHC.PrimopWrappers.sameMutVar#_entry() //  [R2, R3]
         { info_tbl: [(cxES,
                       label: GHC.PrimopWrappers.sameMutVar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxES: // global
           R1 = R2 == R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.879779482 UTC

[section ""data" . GHC.PrimopWrappers.atomicModifyMutVar#_closure" {
     GHC.PrimopWrappers.atomicModifyMutVar#_closure:
         const GHC.PrimopWrappers.atomicModifyMutVar#_info;
 },
 GHC.PrimopWrappers.atomicModifyMutVar#_entry() //  [R2, R3]
         { info_tbl: [(cxEZ,
                       label: GHC.PrimopWrappers.atomicModifyMutVar#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxEZ: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_atomicModifyMutVar#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.880592764 UTC

[section ""data" . GHC.PrimopWrappers.casMutVar#_closure" {
     GHC.PrimopWrappers.casMutVar#_closure:
         const GHC.PrimopWrappers.casMutVar#_info;
 },
 GHC.PrimopWrappers.casMutVar#_entry() //  [R2, R3, R4]
         { info_tbl: [(cxF6,
                       label: GHC.PrimopWrappers.casMutVar#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxF6: // global
           _B3::P64 = R3;
           R3 = R4;
           _B4::P64 = R2;
           R2 = _B3::P64;
           R1 = _B4::P64;
           call stg_casMutVar#(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.881538924 UTC

[section ""data" . GHC.PrimopWrappers.catch#_closure" {
     GHC.PrimopWrappers.catch#_closure:
         const GHC.PrimopWrappers.catch#_info;
 },
 GHC.PrimopWrappers.catch#_entry() //  [R2, R3]
         { info_tbl: [(cxFd,
                       label: GHC.PrimopWrappers.catch#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxFd: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_catch#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.883229417 UTC

[section ""data" . GHC.PrimopWrappers.raise#_closure" {
     GHC.PrimopWrappers.raise#_closure:
         const GHC.PrimopWrappers.raise#_info;
 },
 GHC.PrimopWrappers.raise#_entry() //  [R2]
         { info_tbl: [(cxFk,
                       label: GHC.PrimopWrappers.raise#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxFk: // global
           R1 = R2;
           call stg_raise#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.884053487 UTC

[section ""data" . GHC.PrimopWrappers.raiseIO#_closure" {
     GHC.PrimopWrappers.raiseIO#_closure:
         const GHC.PrimopWrappers.raiseIO#_info;
 },
 GHC.PrimopWrappers.raiseIO#_entry() //  [R2]
         { info_tbl: [(cxFr,
                       label: GHC.PrimopWrappers.raiseIO#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxFr: // global
           R1 = R2;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.884845656 UTC

[section ""data" . GHC.PrimopWrappers.maskAsyncExceptions#_closure" {
     GHC.PrimopWrappers.maskAsyncExceptions#_closure:
         const GHC.PrimopWrappers.maskAsyncExceptions#_info;
 },
 GHC.PrimopWrappers.maskAsyncExceptions#_entry() //  [R2]
         { info_tbl: [(cxFy,
                       label: GHC.PrimopWrappers.maskAsyncExceptions#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxFy: // global
           R1 = R2;
           call stg_maskAsyncExceptions#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.885684657 UTC

[section ""data" . GHC.PrimopWrappers.maskUninterruptible#_closure" {
     GHC.PrimopWrappers.maskUninterruptible#_closure:
         const GHC.PrimopWrappers.maskUninterruptible#_info;
 },
 GHC.PrimopWrappers.maskUninterruptible#_entry() //  [R2]
         { info_tbl: [(cxFF,
                       label: GHC.PrimopWrappers.maskUninterruptible#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxFF: // global
           R1 = R2;
           call stg_maskUninterruptible#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.886495348 UTC

[section ""data" . GHC.PrimopWrappers.unmaskAsyncExceptions#_closure" {
     GHC.PrimopWrappers.unmaskAsyncExceptions#_closure:
         const GHC.PrimopWrappers.unmaskAsyncExceptions#_info;
 },
 GHC.PrimopWrappers.unmaskAsyncExceptions#_entry() //  [R2]
         { info_tbl: [(cxFM,
                       label: GHC.PrimopWrappers.unmaskAsyncExceptions#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxFM: // global
           R1 = R2;
           call stg_unmaskAsyncExceptions#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.887273487 UTC

[section ""data" . GHC.PrimopWrappers.getMaskingState#_closure" {
     GHC.PrimopWrappers.getMaskingState#_closure:
         const GHC.PrimopWrappers.getMaskingState#_info;
 },
 GHC.PrimopWrappers.getMaskingState#_entry() //  []
         { info_tbl: [(cxFT,
                       label: GHC.PrimopWrappers.getMaskingState#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxFT: // global
           call stg_getMaskingState#() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.888086349 UTC

[section ""data" . GHC.PrimopWrappers.atomically#_closure" {
     GHC.PrimopWrappers.atomically#_closure:
         const GHC.PrimopWrappers.atomically#_info;
 },
 GHC.PrimopWrappers.atomically#_entry() //  [R2]
         { info_tbl: [(cxG0,
                       label: GHC.PrimopWrappers.atomically#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxG0: // global
           R1 = R2;
           call stg_atomically#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.888853797 UTC

[section ""data" . GHC.PrimopWrappers.retry#_closure" {
     GHC.PrimopWrappers.retry#_closure:
         const GHC.PrimopWrappers.retry#_info;
 },
 GHC.PrimopWrappers.retry#_entry() //  []
         { info_tbl: [(cxG7,
                       label: GHC.PrimopWrappers.retry#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxG7: // global
           call stg_retry#() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.889692827 UTC

[section ""data" . GHC.PrimopWrappers.catchRetry#_closure" {
     GHC.PrimopWrappers.catchRetry#_closure:
         const GHC.PrimopWrappers.catchRetry#_info;
 },
 GHC.PrimopWrappers.catchRetry#_entry() //  [R2, R3]
         { info_tbl: [(cxGe,
                       label: GHC.PrimopWrappers.catchRetry#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxGe: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_catchRetry#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.890508636 UTC

[section ""data" . GHC.PrimopWrappers.catchSTM#_closure" {
     GHC.PrimopWrappers.catchSTM#_closure:
         const GHC.PrimopWrappers.catchSTM#_info;
 },
 GHC.PrimopWrappers.catchSTM#_entry() //  [R2, R3]
         { info_tbl: [(cxGl,
                       label: GHC.PrimopWrappers.catchSTM#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxGl: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_catchSTM#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.891314367 UTC

[section ""data" . GHC.PrimopWrappers.check#_closure" {
     GHC.PrimopWrappers.check#_closure:
         const GHC.PrimopWrappers.check#_info;
 },
 GHC.PrimopWrappers.check#_entry() //  [R2]
         { info_tbl: [(cxGs,
                       label: GHC.PrimopWrappers.check#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxGs: // global
           R1 = R2;
           call stg_check#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.892169407 UTC

[section ""data" . GHC.PrimopWrappers.newTVar#_closure" {
     GHC.PrimopWrappers.newTVar#_closure:
         const GHC.PrimopWrappers.newTVar#_info;
 },
 GHC.PrimopWrappers.newTVar#_entry() //  [R2]
         { info_tbl: [(cxGz,
                       label: GHC.PrimopWrappers.newTVar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxGz: // global
           R1 = R2;
           call stg_newTVar#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.89297765 UTC

[section ""data" . GHC.PrimopWrappers.readTVar#_closure" {
     GHC.PrimopWrappers.readTVar#_closure:
         const GHC.PrimopWrappers.readTVar#_info;
 },
 GHC.PrimopWrappers.readTVar#_entry() //  [R2]
         { info_tbl: [(cxGG,
                       label: GHC.PrimopWrappers.readTVar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxGG: // global
           R1 = R2;
           call stg_readTVar#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.893978213 UTC

[section ""data" . GHC.PrimopWrappers.readTVarIO#_closure" {
     GHC.PrimopWrappers.readTVarIO#_closure:
         const GHC.PrimopWrappers.readTVarIO#_info;
 },
 GHC.PrimopWrappers.readTVarIO#_entry() //  [R2]
         { info_tbl: [(cxGN,
                       label: GHC.PrimopWrappers.readTVarIO#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxGN: // global
           R1 = R2;
           call stg_readTVarIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.894819721 UTC

[section ""data" . GHC.PrimopWrappers.writeTVar#_closure" {
     GHC.PrimopWrappers.writeTVar#_closure:
         const GHC.PrimopWrappers.writeTVar#_info;
 },
 GHC.PrimopWrappers.writeTVar#_entry() //  [R2, R3]
         { info_tbl: [(cxGU,
                       label: GHC.PrimopWrappers.writeTVar#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxGU: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_writeTVar#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.89569052 UTC

[section ""data" . GHC.PrimopWrappers.sameTVar#_closure" {
     GHC.PrimopWrappers.sameTVar#_closure:
         const GHC.PrimopWrappers.sameTVar#_info;
 },
 GHC.PrimopWrappers.sameTVar#_entry() //  [R2, R3]
         { info_tbl: [(cxH2,
                       label: GHC.PrimopWrappers.sameTVar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxH2: // global
           R1 = R2 == R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.896478391 UTC

[section ""data" . GHC.PrimopWrappers.newMVar#_closure" {
     GHC.PrimopWrappers.newMVar#_closure:
         const GHC.PrimopWrappers.newMVar#_info;
 },
 GHC.PrimopWrappers.newMVar#_entry() //  []
         { info_tbl: [(cxH9,
                       label: GHC.PrimopWrappers.newMVar#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxH9: // global
           call stg_newMVar#() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.897337658 UTC

[section ""data" . GHC.PrimopWrappers.takeMVar#_closure" {
     GHC.PrimopWrappers.takeMVar#_closure:
         const GHC.PrimopWrappers.takeMVar#_info;
 },
 GHC.PrimopWrappers.takeMVar#_entry() //  [R2]
         { info_tbl: [(cxHg,
                       label: GHC.PrimopWrappers.takeMVar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxHg: // global
           R1 = R2;
           call stg_takeMVar#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.898140067 UTC

[section ""data" . GHC.PrimopWrappers.tryTakeMVar#_closure" {
     GHC.PrimopWrappers.tryTakeMVar#_closure:
         const GHC.PrimopWrappers.tryTakeMVar#_info;
 },
 GHC.PrimopWrappers.tryTakeMVar#_entry() //  [R2]
         { info_tbl: [(cxHn,
                       label: GHC.PrimopWrappers.tryTakeMVar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxHn: // global
           R1 = R2;
           call stg_tryTakeMVar#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.898919233 UTC

[section ""data" . GHC.PrimopWrappers.putMVar#_closure" {
     GHC.PrimopWrappers.putMVar#_closure:
         const GHC.PrimopWrappers.putMVar#_info;
 },
 GHC.PrimopWrappers.putMVar#_entry() //  [R2, R3]
         { info_tbl: [(cxHu,
                       label: GHC.PrimopWrappers.putMVar#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxHu: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_putMVar#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.899695306 UTC

[section ""data" . GHC.PrimopWrappers.tryPutMVar#_closure" {
     GHC.PrimopWrappers.tryPutMVar#_closure:
         const GHC.PrimopWrappers.tryPutMVar#_info;
 },
 GHC.PrimopWrappers.tryPutMVar#_entry() //  [R2, R3]
         { info_tbl: [(cxHB,
                       label: GHC.PrimopWrappers.tryPutMVar#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxHB: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_tryPutMVar#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.900498863 UTC

[section ""data" . GHC.PrimopWrappers.readMVar#_closure" {
     GHC.PrimopWrappers.readMVar#_closure:
         const GHC.PrimopWrappers.readMVar#_info;
 },
 GHC.PrimopWrappers.readMVar#_entry() //  [R2]
         { info_tbl: [(cxHI,
                       label: GHC.PrimopWrappers.readMVar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxHI: // global
           R1 = R2;
           call stg_readMVar#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.901675305 UTC

[section ""data" . GHC.PrimopWrappers.tryReadMVar#_closure" {
     GHC.PrimopWrappers.tryReadMVar#_closure:
         const GHC.PrimopWrappers.tryReadMVar#_info;
 },
 GHC.PrimopWrappers.tryReadMVar#_entry() //  [R2]
         { info_tbl: [(cxHP,
                       label: GHC.PrimopWrappers.tryReadMVar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxHP: // global
           R1 = R2;
           call stg_tryReadMVar#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.902491075 UTC

[section ""data" . GHC.PrimopWrappers.sameMVar#_closure" {
     GHC.PrimopWrappers.sameMVar#_closure:
         const GHC.PrimopWrappers.sameMVar#_info;
 },
 GHC.PrimopWrappers.sameMVar#_entry() //  [R2, R3]
         { info_tbl: [(cxHX,
                       label: GHC.PrimopWrappers.sameMVar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxHX: // global
           R1 = R2 == R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.903374739 UTC

[section ""data" . GHC.PrimopWrappers.isEmptyMVar#_closure" {
     GHC.PrimopWrappers.isEmptyMVar#_closure:
         const GHC.PrimopWrappers.isEmptyMVar#_info;
 },
 GHC.PrimopWrappers.isEmptyMVar#_entry() //  [R2]
         { info_tbl: [(cxI4,
                       label: GHC.PrimopWrappers.isEmptyMVar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxI4: // global
           R1 = R2;
           call stg_isEmptyMVar#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.904316733 UTC

[section ""data" . GHC.PrimopWrappers.delay#_closure" {
     GHC.PrimopWrappers.delay#_closure:
         const GHC.PrimopWrappers.delay#_info;
 },
 GHC.PrimopWrappers.delay#_entry() //  [R2]
         { info_tbl: [(cxIb,
                       label: GHC.PrimopWrappers.delay#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxIb: // global
           R1 = R2;
           call stg_delay#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.905144543 UTC

[section ""data" . GHC.PrimopWrappers.waitRead#_closure" {
     GHC.PrimopWrappers.waitRead#_closure:
         const GHC.PrimopWrappers.waitRead#_info;
 },
 GHC.PrimopWrappers.waitRead#_entry() //  [R2]
         { info_tbl: [(cxIi,
                       label: GHC.PrimopWrappers.waitRead#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxIi: // global
           R1 = R2;
           call stg_waitRead#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.906069546 UTC

[section ""data" . GHC.PrimopWrappers.waitWrite#_closure" {
     GHC.PrimopWrappers.waitWrite#_closure:
         const GHC.PrimopWrappers.waitWrite#_info;
 },
 GHC.PrimopWrappers.waitWrite#_entry() //  [R2]
         { info_tbl: [(cxIp,
                       label: GHC.PrimopWrappers.waitWrite#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxIp: // global
           R1 = R2;
           call stg_waitWrite#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.906883101 UTC

[section ""data" . GHC.PrimopWrappers.fork#_closure" {
     GHC.PrimopWrappers.fork#_closure:
         const GHC.PrimopWrappers.fork#_info;
 },
 GHC.PrimopWrappers.fork#_entry() //  [R2]
         { info_tbl: [(cxIw,
                       label: GHC.PrimopWrappers.fork#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxIw: // global
           R1 = R2;
           call stg_fork#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.907707723 UTC

[section ""data" . GHC.PrimopWrappers.forkOn#_closure" {
     GHC.PrimopWrappers.forkOn#_closure:
         const GHC.PrimopWrappers.forkOn#_info;
 },
 GHC.PrimopWrappers.forkOn#_entry() //  [R2, R3]
         { info_tbl: [(cxID,
                       label: GHC.PrimopWrappers.forkOn#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 13} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxID: // global
           _B3::I64 = R2;
           R2 = R3;
           R1 = _B3::I64;
           call stg_forkOn#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.908585131 UTC

[section ""data" . GHC.PrimopWrappers.killThread#_closure" {
     GHC.PrimopWrappers.killThread#_closure:
         const GHC.PrimopWrappers.killThread#_info;
 },
 GHC.PrimopWrappers.killThread#_entry() //  [R2, R3]
         { info_tbl: [(cxIK,
                       label: GHC.PrimopWrappers.killThread#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxIK: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_killThread#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.909545034 UTC

[section ""data" . GHC.PrimopWrappers.yield#_closure" {
     GHC.PrimopWrappers.yield#_closure:
         const GHC.PrimopWrappers.yield#_info;
 },
 GHC.PrimopWrappers.yield#_entry() //  []
         { info_tbl: [(cxIR,
                       label: GHC.PrimopWrappers.yield#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxIR: // global
           call stg_yield#() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.910528246 UTC

[section ""data" . GHC.PrimopWrappers.myThreadId#_closure" {
     GHC.PrimopWrappers.myThreadId#_closure:
         const GHC.PrimopWrappers.myThreadId#_info;
 },
 GHC.PrimopWrappers.myThreadId#_entry() //  []
         { info_tbl: [(cxIZ,
                       label: GHC.PrimopWrappers.myThreadId#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxIZ: // global
           R1 = CurrentTSO;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.912148669 UTC

[section ""data" . GHC.PrimopWrappers.labelThread#_closure" {
     GHC.PrimopWrappers.labelThread#_closure:
         const GHC.PrimopWrappers.labelThread#_info;
 },
 GHC.PrimopWrappers.labelThread#_entry() //  [R2, R3]
         { info_tbl: [(cxJ6,
                       label: GHC.PrimopWrappers.labelThread#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxJ6: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_labelThread#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.913005775 UTC

[section ""data" . GHC.PrimopWrappers.isCurrentThreadBound#_closure" {
     GHC.PrimopWrappers.isCurrentThreadBound#_closure:
         const GHC.PrimopWrappers.isCurrentThreadBound#_info;
 },
 GHC.PrimopWrappers.isCurrentThreadBound#_entry() //  []
         { info_tbl: [(cxJd,
                       label: GHC.PrimopWrappers.isCurrentThreadBound#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxJd: // global
           call stg_isCurrentThreadBound#() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.913809468 UTC

[section ""data" . GHC.PrimopWrappers.noDuplicate#_closure" {
     GHC.PrimopWrappers.noDuplicate#_closure:
         const GHC.PrimopWrappers.noDuplicate#_info;
 },
 GHC.PrimopWrappers.noDuplicate#_entry() //  []
         { info_tbl: [(cxJk,
                       label: GHC.PrimopWrappers.noDuplicate#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxJk: // global
           call stg_noDuplicate#() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.914612224 UTC

[section ""data" . GHC.PrimopWrappers.threadStatus#_closure" {
     GHC.PrimopWrappers.threadStatus#_closure:
         const GHC.PrimopWrappers.threadStatus#_info;
 },
 GHC.PrimopWrappers.threadStatus#_entry() //  [R2]
         { info_tbl: [(cxJr,
                       label: GHC.PrimopWrappers.threadStatus#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxJr: // global
           R1 = R2;
           call stg_threadStatus#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.915498979 UTC

[section ""data" . GHC.PrimopWrappers.mkWeak#_closure" {
     GHC.PrimopWrappers.mkWeak#_closure:
         const GHC.PrimopWrappers.mkWeak#_info;
 },
 GHC.PrimopWrappers.mkWeak#_entry() //  [R2, R3, R4]
         { info_tbl: [(cxJy,
                       label: GHC.PrimopWrappers.mkWeak#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxJy: // global
           _B3::P64 = R3;
           R3 = R4;
           _B4::P64 = R2;
           R2 = _B3::P64;
           R1 = _B4::P64;
           call stg_mkWeak#(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.916360458 UTC

[section ""data" . GHC.PrimopWrappers.mkWeakNoFinalizer#_closure" {
     GHC.PrimopWrappers.mkWeakNoFinalizer#_closure:
         const GHC.PrimopWrappers.mkWeakNoFinalizer#_info;
 },
 GHC.PrimopWrappers.mkWeakNoFinalizer#_entry() //  [R2, R3]
         { info_tbl: [(cxJF,
                       label: GHC.PrimopWrappers.mkWeakNoFinalizer#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxJF: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_mkWeakNoFinalizer#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.917381898 UTC

[section ""data" . GHC.PrimopWrappers.addCFinalizerToWeak#_closure" {
     GHC.PrimopWrappers.addCFinalizerToWeak#_closure:
         const GHC.PrimopWrappers.addCFinalizerToWeak#_info;
 },
 GHC.PrimopWrappers.addCFinalizerToWeak#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxJJ: // global
           R6 = P64[Sp + 32];
           R5 = I64[Sp + 24];
           R4 = I64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = I64[Sp];
           R1 = R1;
           Sp = Sp + 40;
           call GHC.PrimopWrappers.addCFinalizerToWeak#_entry(R6,
                                                              R5,
                                                              R4,
                                                              R3,
                                                              R2,
                                                              R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.addCFinalizerToWeak#_entry() //  [R2, R3, R4,
                                                      R5, R6]
         { info_tbl: [(cxJN,
                       label: GHC.PrimopWrappers.addCFinalizerToWeak#_info
                       rep:HeapRep static {
                             Fun {arity: 6 fun_type: ArgGen [True, True, True, True, False]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxJN: // global
           _B3::I64 = R5;
           R5 = R6;
           _B4::I64 = R4;
           R4 = _B3::I64;
           _B5::I64 = R3;
           R3 = _B4::I64;
           _B6::I64 = R2;
           R2 = _B5::I64;
           R1 = _B6::I64;
           call stg_addCFinalizerToWeak#(R5,
                                         R4,
                                         R3,
                                         R2,
                                         R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.91847226 UTC

[section ""data" . GHC.PrimopWrappers.deRefWeak#_closure" {
     GHC.PrimopWrappers.deRefWeak#_closure:
         const GHC.PrimopWrappers.deRefWeak#_info;
 },
 GHC.PrimopWrappers.deRefWeak#_entry() //  [R2]
         { info_tbl: [(cxJU,
                       label: GHC.PrimopWrappers.deRefWeak#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxJU: // global
           R1 = R2;
           call stg_deRefWeak#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.919291962 UTC

[section ""data" . GHC.PrimopWrappers.finalizeWeak#_closure" {
     GHC.PrimopWrappers.finalizeWeak#_closure:
         const GHC.PrimopWrappers.finalizeWeak#_info;
 },
 GHC.PrimopWrappers.finalizeWeak#_entry() //  [R2]
         { info_tbl: [(cxK1,
                       label: GHC.PrimopWrappers.finalizeWeak#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxK1: // global
           R1 = R2;
           call stg_finalizeWeak#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.920174256 UTC

[section ""data" . GHC.PrimopWrappers.touch#_closure" {
     GHC.PrimopWrappers.touch#_closure:
         const GHC.PrimopWrappers.touch#_info;
 },
 GHC.PrimopWrappers.touch#_entry() //  [R2]
         { info_tbl: [(cxK9,
                       label: GHC.PrimopWrappers.touch#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxK9: // global
           call MO_Touch(R2);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.92098337 UTC

[section ""data" . GHC.PrimopWrappers.makeStablePtr#_closure" {
     GHC.PrimopWrappers.makeStablePtr#_closure:
         const GHC.PrimopWrappers.makeStablePtr#_info;
 },
 GHC.PrimopWrappers.makeStablePtr#_entry() //  [R2]
         { info_tbl: [(cxKg,
                       label: GHC.PrimopWrappers.makeStablePtr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxKg: // global
           R1 = R2;
           call stg_makeStablePtr#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.921869626 UTC

[section ""data" . GHC.PrimopWrappers.deRefStablePtr#_closure" {
     GHC.PrimopWrappers.deRefStablePtr#_closure:
         const GHC.PrimopWrappers.deRefStablePtr#_info;
 },
 GHC.PrimopWrappers.deRefStablePtr#_entry() //  [R2]
         { info_tbl: [(cxKn,
                       label: GHC.PrimopWrappers.deRefStablePtr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxKn: // global
           R1 = R2;
           call stg_deRefStablePtr#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.922699688 UTC

[section ""data" . GHC.PrimopWrappers.eqStablePtr#_closure" {
     GHC.PrimopWrappers.eqStablePtr#_closure:
         const GHC.PrimopWrappers.eqStablePtr#_info;
 },
 GHC.PrimopWrappers.eqStablePtr#_entry() //  [R2, R3]
         { info_tbl: [(cxKv,
                       label: GHC.PrimopWrappers.eqStablePtr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxKv: // global
           R1 = R2 == R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.923478762 UTC

[section ""data" . GHC.PrimopWrappers.makeStableName#_closure" {
     GHC.PrimopWrappers.makeStableName#_closure:
         const GHC.PrimopWrappers.makeStableName#_info;
 },
 GHC.PrimopWrappers.makeStableName#_entry() //  [R2]
         { info_tbl: [(cxKC,
                       label: GHC.PrimopWrappers.makeStableName#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxKC: // global
           R1 = R2;
           call stg_makeStableName#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.924302328 UTC

[section ""data" . GHC.PrimopWrappers.eqStableName#_closure" {
     GHC.PrimopWrappers.eqStableName#_closure:
         const GHC.PrimopWrappers.eqStableName#_info;
 },
 GHC.PrimopWrappers.eqStableName#_entry() //  [R2, R3]
         { info_tbl: [(cxKK,
                       label: GHC.PrimopWrappers.eqStableName#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxKK: // global
           R1 = I64[R2 + 8] == I64[R3 + 8];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.925103032 UTC

[section ""data" . GHC.PrimopWrappers.stableNameToInt#_closure" {
     GHC.PrimopWrappers.stableNameToInt#_closure:
         const GHC.PrimopWrappers.stableNameToInt#_info;
 },
 GHC.PrimopWrappers.stableNameToInt#_entry() //  [R2]
         { info_tbl: [(cxKS,
                       label: GHC.PrimopWrappers.stableNameToInt#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxKS: // global
           R1 = I64[R2 + 8];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.925981606 UTC

[section ""data" . GHC.PrimopWrappers.compactNew#_closure" {
     GHC.PrimopWrappers.compactNew#_closure:
         const GHC.PrimopWrappers.compactNew#_info;
 },
 GHC.PrimopWrappers.compactNew#_entry() //  [R2]
         { info_tbl: [(cxKZ,
                       label: GHC.PrimopWrappers.compactNew#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxKZ: // global
           R1 = R2;
           call stg_compactNew#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.926748672 UTC

[section ""data" . GHC.PrimopWrappers.compactResize#_closure" {
     GHC.PrimopWrappers.compactResize#_closure:
         const GHC.PrimopWrappers.compactResize#_info;
 },
 GHC.PrimopWrappers.compactResize#_entry() //  [R2, R3]
         { info_tbl: [(cxL6,
                       label: GHC.PrimopWrappers.compactResize#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxL6: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_compactResize#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.927590004 UTC

[section ""data" . GHC.PrimopWrappers.compactContains#_closure" {
     GHC.PrimopWrappers.compactContains#_closure:
         const GHC.PrimopWrappers.compactContains#_info;
 },
 GHC.PrimopWrappers.compactContains#_entry() //  [R2, R3]
         { info_tbl: [(cxLd,
                       label: GHC.PrimopWrappers.compactContains#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxLd: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_compactContains#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.928421615 UTC

[section ""data" . GHC.PrimopWrappers.compactContainsAny#_closure" {
     GHC.PrimopWrappers.compactContainsAny#_closure:
         const GHC.PrimopWrappers.compactContainsAny#_info;
 },
 GHC.PrimopWrappers.compactContainsAny#_entry() //  [R2]
         { info_tbl: [(cxLk,
                       label: GHC.PrimopWrappers.compactContainsAny#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxLk: // global
           R1 = R2;
           call stg_compactContainsAny#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.929221684 UTC

[section ""data" . GHC.PrimopWrappers.compactGetFirstBlock#_closure" {
     GHC.PrimopWrappers.compactGetFirstBlock#_closure:
         const GHC.PrimopWrappers.compactGetFirstBlock#_info;
 },
 GHC.PrimopWrappers.compactGetFirstBlock#_entry() //  [R2]
         { info_tbl: [(cxLr,
                       label: GHC.PrimopWrappers.compactGetFirstBlock#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxLr: // global
           R1 = R2;
           call stg_compactGetFirstBlock#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.930153811 UTC

[section ""data" . GHC.PrimopWrappers.compactGetNextBlock#_closure" {
     GHC.PrimopWrappers.compactGetNextBlock#_closure:
         const GHC.PrimopWrappers.compactGetNextBlock#_info;
 },
 GHC.PrimopWrappers.compactGetNextBlock#_entry() //  [R2, R3]
         { info_tbl: [(cxLy,
                       label: GHC.PrimopWrappers.compactGetNextBlock#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxLy: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_compactGetNextBlock#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.931025871 UTC

[section ""data" . GHC.PrimopWrappers.compactAllocateBlock#_closure" {
     GHC.PrimopWrappers.compactAllocateBlock#_closure:
         const GHC.PrimopWrappers.compactAllocateBlock#_info;
 },
 GHC.PrimopWrappers.compactAllocateBlock#_entry() //  [R2, R3]
         { info_tbl: [(cxLF,
                       label: GHC.PrimopWrappers.compactAllocateBlock#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxLF: // global
           _B3::I64 = R2;
           R2 = R3;
           R1 = _B3::I64;
           call stg_compactAllocateBlock#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.931883883 UTC

[section ""data" . GHC.PrimopWrappers.compactFixupPointers#_closure" {
     GHC.PrimopWrappers.compactFixupPointers#_closure:
         const GHC.PrimopWrappers.compactFixupPointers#_info;
 },
 GHC.PrimopWrappers.compactFixupPointers#_entry() //  [R2, R3]
         { info_tbl: [(cxLM,
                       label: GHC.PrimopWrappers.compactFixupPointers#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxLM: // global
           _B3::I64 = R2;
           R2 = R3;
           R1 = _B3::I64;
           call stg_compactFixupPointers#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.932699356 UTC

[section ""data" . GHC.PrimopWrappers.compactAdd#_closure" {
     GHC.PrimopWrappers.compactAdd#_closure:
         const GHC.PrimopWrappers.compactAdd#_info;
 },
 GHC.PrimopWrappers.compactAdd#_entry() //  [R2, R3]
         { info_tbl: [(cxLT,
                       label: GHC.PrimopWrappers.compactAdd#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxLT: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_compactAdd#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.933916324 UTC

[section ""data" . GHC.PrimopWrappers.compactAddWithSharing#_closure" {
     GHC.PrimopWrappers.compactAddWithSharing#_closure:
         const GHC.PrimopWrappers.compactAddWithSharing#_info;
 },
 GHC.PrimopWrappers.compactAddWithSharing#_entry() //  [R2, R3]
         { info_tbl: [(cxM0,
                       label: GHC.PrimopWrappers.compactAddWithSharing#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxM0: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_compactAddWithSharing#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.934743729 UTC

[section ""data" . GHC.PrimopWrappers.compactSize#_closure" {
     GHC.PrimopWrappers.compactSize#_closure:
         const GHC.PrimopWrappers.compactSize#_info;
 },
 GHC.PrimopWrappers.compactSize#_entry() //  [R2]
         { info_tbl: [(cxM7,
                       label: GHC.PrimopWrappers.compactSize#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxM7: // global
           R1 = R2;
           call stg_compactSize#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.935587566 UTC

[section ""data" . GHC.PrimopWrappers.reallyUnsafePtrEquality#_closure" {
     GHC.PrimopWrappers.reallyUnsafePtrEquality#_closure:
         const GHC.PrimopWrappers.reallyUnsafePtrEquality#_info;
 },
 GHC.PrimopWrappers.reallyUnsafePtrEquality#_entry() //  [R2, R3]
         { info_tbl: [(cxMf,
                       label: GHC.PrimopWrappers.reallyUnsafePtrEquality#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxMf: // global
           R1 = R2 == R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.936442096 UTC

[section ""data" . GHC.PrimopWrappers.par#_closure" {
     GHC.PrimopWrappers.par#_closure:
         const GHC.PrimopWrappers.par#_info;
 },
 GHC.PrimopWrappers.par#_entry() //  [R2]
         { info_tbl: [(cxMq,
                       label: GHC.PrimopWrappers.par#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxMq: // global
           (_cxMm::I64) = call "ccall" arg hints:  [PtrHint,
                                                    PtrHint]  result hints:  [] newSpark(BaseReg, R2);
           R1 = _cxMm::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.937434638 UTC

[section ""data" . GHC.PrimopWrappers.spark#_closure" {
     GHC.PrimopWrappers.spark#_closure:
         const GHC.PrimopWrappers.spark#_info;
 },
 GHC.PrimopWrappers.spark#_entry() //  [R2]
         { info_tbl: [(cxMC,
                       label: GHC.PrimopWrappers.spark#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxMC: // global
           (_cxMy::I64) = call "ccall" arg hints:  [PtrHint,
                                                    PtrHint]  result hints:  [] newSpark(BaseReg, R2);
           R1 = R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.938345112 UTC

[section ""data" . GHC.PrimopWrappers.seq#_closure" {
     GHC.PrimopWrappers.seq#_closure:
         const GHC.PrimopWrappers.seq#_info;
 },
 GHC.PrimopWrappers.seq#_entry() //  [R2]
         { info_tbl: [(cxMJ,
                       label: GHC.PrimopWrappers.seq#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxMJ: // global
           R1 = R2;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.939869812 UTC

[section ""data" . GHC.PrimopWrappers.getSpark#_closure" {
     GHC.PrimopWrappers.getSpark#_closure:
         const GHC.PrimopWrappers.getSpark#_info;
 },
 GHC.PrimopWrappers.getSpark#_entry() //  []
         { info_tbl: [(cxMQ,
                       label: GHC.PrimopWrappers.getSpark#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxMQ: // global
           call stg_getSpark#() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.940649513 UTC

[section ""data" . GHC.PrimopWrappers.numSparks#_closure" {
     GHC.PrimopWrappers.numSparks#_closure:
         const GHC.PrimopWrappers.numSparks#_info;
 },
 GHC.PrimopWrappers.numSparks#_entry() //  []
         { info_tbl: [(cxMX,
                       label: GHC.PrimopWrappers.numSparks#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxMX: // global
           call stg_numSparks#() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.941599283 UTC

[section ""data" . GHC.PrimopWrappers.dataToTag#_closure" {
     GHC.PrimopWrappers.dataToTag#_closure:
         const GHC.PrimopWrappers.dataToTag#_info;
 },
 GHC.PrimopWrappers.dataToTag#_entry() //  [R2]
         { info_tbl: [(cxN7,
                       label: GHC.PrimopWrappers.dataToTag#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxN7: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cxN8; else goto cxN9;
       cxN8: // global
           R2 = R2;
           R1 = GHC.PrimopWrappers.dataToTag#_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cxN9: // global
           I64[Sp - 8] = block_cxN4_info;
           R1 = R2;
           Sp = Sp - 8;
           call stg_ap_0_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cxN4() //  [R1]
         { info_tbl: [(cxN4,
                       label: block_cxN4_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxN4: // global
           R1 = %MO_UU_Conv_W32_W64(I32[I64[R1 & (-8)] + 20]);
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.942600916 UTC

[section ""data" . GHC.PrimopWrappers.addrToAny#_closure" {
     GHC.PrimopWrappers.addrToAny#_closure:
         const GHC.PrimopWrappers.addrToAny#_info;
 },
 GHC.PrimopWrappers.addrToAny#_entry() //  [R2]
         { info_tbl: [(cxNg,
                       label: GHC.PrimopWrappers.addrToAny#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxNg: // global
           R1 = R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.943409554 UTC

[section ""data" . GHC.PrimopWrappers.anyToAddr#_closure" {
     GHC.PrimopWrappers.anyToAddr#_closure:
         const GHC.PrimopWrappers.anyToAddr#_info;
 },
 GHC.PrimopWrappers.anyToAddr#_entry() //  [R2]
         { info_tbl: [(cxNo,
                       label: GHC.PrimopWrappers.anyToAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxNo: // global
           R1 = R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.94424259 UTC

[section ""data" . GHC.PrimopWrappers.mkApUpd0#_closure" {
     GHC.PrimopWrappers.mkApUpd0#_closure:
         const GHC.PrimopWrappers.mkApUpd0#_info;
 },
 GHC.PrimopWrappers.mkApUpd0#_entry() //  [R2]
         { info_tbl: [(cxNv,
                       label: GHC.PrimopWrappers.mkApUpd0#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxNv: // global
           R1 = R2;
           call stg_mkApUpd0#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.945120831 UTC

[section ""data" . GHC.PrimopWrappers.newBCO#_closure" {
     GHC.PrimopWrappers.newBCO#_closure:
         const GHC.PrimopWrappers.newBCO#_info;
 },
 GHC.PrimopWrappers.newBCO#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxNz: // global
           R6 = P64[Sp + 32];
           R5 = I64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = P64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 40;
           call GHC.PrimopWrappers.newBCO#_entry(R6,
                                                 R5,
                                                 R4,
                                                 R3,
                                                 R2,
                                                 R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.newBCO#_entry() //  [R2, R3, R4, R5, R6]
         { info_tbl: [(cxND,
                       label: GHC.PrimopWrappers.newBCO#_info
                       rep:HeapRep static {
                             Fun {arity: 6
                                  fun_type: ArgGen [False, False, False, True, False]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxND: // global
           _B3::I64 = R5;
           R5 = R6;
           _B4::P64 = R4;
           R4 = _B3::I64;
           _B5::P64 = R3;
           R3 = _B4::P64;
           _B6::P64 = R2;
           R2 = _B5::P64;
           R1 = _B6::P64;
           call stg_newBCO#(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.946327715 UTC

[section ""data" . GHC.PrimopWrappers.unpackClosure#_closure" {
     GHC.PrimopWrappers.unpackClosure#_closure:
         const GHC.PrimopWrappers.unpackClosure#_info;
 },
 GHC.PrimopWrappers.unpackClosure#_entry() //  [R2]
         { info_tbl: [(cxNK,
                       label: GHC.PrimopWrappers.unpackClosure#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxNK: // global
           R1 = R2;
           call stg_unpackClosure#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.947117136 UTC

[section ""data" . GHC.PrimopWrappers.getApStackVal#_closure" {
     GHC.PrimopWrappers.getApStackVal#_closure:
         const GHC.PrimopWrappers.getApStackVal#_info;
 },
 GHC.PrimopWrappers.getApStackVal#_entry() //  [R2, R3]
         { info_tbl: [(cxNR,
                       label: GHC.PrimopWrappers.getApStackVal#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxNR: // global
           _B2::P64 = R2;
           R2 = R3;
           R1 = _B2::P64;
           call stg_getApStackVal#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.947932032 UTC

[section ""data" . GHC.PrimopWrappers.getCCSOf#_closure" {
     GHC.PrimopWrappers.getCCSOf#_closure:
         const GHC.PrimopWrappers.getCCSOf#_info;
 },
 GHC.PrimopWrappers.getCCSOf#_entry() //  []
         { info_tbl: [(cxNZ,
                       label: GHC.PrimopWrappers.getCCSOf#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxNZ: // global
           R1 = 0;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.94871699 UTC

[section ""data" . GHC.PrimopWrappers.getCurrentCCS#_closure" {
     GHC.PrimopWrappers.getCurrentCCS#_closure:
         const GHC.PrimopWrappers.getCurrentCCS#_info;
 },
 GHC.PrimopWrappers.getCurrentCCS#_entry() //  []
         { info_tbl: [(cxO7,
                       label: GHC.PrimopWrappers.getCurrentCCS#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxO7: // global
           R1 = CCCS;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.949772381 UTC

[section ""data" . GHC.PrimopWrappers.clearCCS#_closure" {
     GHC.PrimopWrappers.clearCCS#_closure:
         const GHC.PrimopWrappers.clearCCS#_info;
 },
 GHC.PrimopWrappers.clearCCS#_entry() //  [R2]
         { info_tbl: [(cxOe,
                       label: GHC.PrimopWrappers.clearCCS#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxOe: // global
           R1 = R2;
           call stg_clearCCS#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.950544068 UTC

[section ""data" . GHC.PrimopWrappers.traceEvent#_closure" {
     GHC.PrimopWrappers.traceEvent#_closure:
         const GHC.PrimopWrappers.traceEvent#_info;
 },
 GHC.PrimopWrappers.traceEvent#_entry() //  [R2]
         { info_tbl: [(cxOl,
                       label: GHC.PrimopWrappers.traceEvent#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxOl: // global
           R1 = R2;
           call stg_traceEvent#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.951325757 UTC

[section ""data" . GHC.PrimopWrappers.traceMarker#_closure" {
     GHC.PrimopWrappers.traceMarker#_closure:
         const GHC.PrimopWrappers.traceMarker#_info;
 },
 GHC.PrimopWrappers.traceMarker#_entry() //  [R2]
         { info_tbl: [(cxOs,
                       label: GHC.PrimopWrappers.traceMarker#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxOs: // global
           R1 = R2;
           call stg_traceMarker#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.952194734 UTC

[section ""data" . GHC.PrimopWrappers.prefetchByteArray3#_closure" {
     GHC.PrimopWrappers.prefetchByteArray3#_closure:
         const GHC.PrimopWrappers.prefetchByteArray3#_info;
 },
 GHC.PrimopWrappers.prefetchByteArray3#_entry() //  [R2, R3]
         { info_tbl: [(cxOA,
                       label: GHC.PrimopWrappers.prefetchByteArray3#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxOA: // global
           _cxOz::P64 = (R2 + 16) + R3;
           call MO_Prefetch_Data 3(_cxOz::P64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.953041351 UTC

[section ""data" . GHC.PrimopWrappers.prefetchMutableByteArray3#_closure" {
     GHC.PrimopWrappers.prefetchMutableByteArray3#_closure:
         const GHC.PrimopWrappers.prefetchMutableByteArray3#_info;
 },
 GHC.PrimopWrappers.prefetchMutableByteArray3#_entry() //  [R2, R3]
         { info_tbl: [(cxOI,
                       label: GHC.PrimopWrappers.prefetchMutableByteArray3#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxOI: // global
           _cxOH::P64 = (R2 + 16) + R3;
           call MO_Prefetch_Data 3(_cxOH::P64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.953986826 UTC

[section ""data" . GHC.PrimopWrappers.prefetchAddr3#_closure" {
     GHC.PrimopWrappers.prefetchAddr3#_closure:
         const GHC.PrimopWrappers.prefetchAddr3#_info;
 },
 GHC.PrimopWrappers.prefetchAddr3#_entry() //  [R2, R3]
         { info_tbl: [(cxOQ,
                       label: GHC.PrimopWrappers.prefetchAddr3#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxOQ: // global
           _cxOP::I64 = R2 + R3;
           call MO_Prefetch_Data 3(_cxOP::I64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.954849966 UTC

[section ""data" . GHC.PrimopWrappers.prefetchValue3#_closure" {
     GHC.PrimopWrappers.prefetchValue3#_closure:
         const GHC.PrimopWrappers.prefetchValue3#_info;
 },
 GHC.PrimopWrappers.prefetchValue3#_entry() //  [R2]
         { info_tbl: [(cxOY,
                       label: GHC.PrimopWrappers.prefetchValue3#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxOY: // global
           call MO_Prefetch_Data 3(R2);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.955685081 UTC

[section ""data" . GHC.PrimopWrappers.prefetchByteArray2#_closure" {
     GHC.PrimopWrappers.prefetchByteArray2#_closure:
         const GHC.PrimopWrappers.prefetchByteArray2#_info;
 },
 GHC.PrimopWrappers.prefetchByteArray2#_entry() //  [R2, R3]
         { info_tbl: [(cxP6,
                       label: GHC.PrimopWrappers.prefetchByteArray2#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxP6: // global
           _cxP5::P64 = (R2 + 16) + R3;
           call MO_Prefetch_Data 2(_cxP5::P64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.956499545 UTC

[section ""data" . GHC.PrimopWrappers.prefetchMutableByteArray2#_closure" {
     GHC.PrimopWrappers.prefetchMutableByteArray2#_closure:
         const GHC.PrimopWrappers.prefetchMutableByteArray2#_info;
 },
 GHC.PrimopWrappers.prefetchMutableByteArray2#_entry() //  [R2, R3]
         { info_tbl: [(cxPe,
                       label: GHC.PrimopWrappers.prefetchMutableByteArray2#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxPe: // global
           _cxPd::P64 = (R2 + 16) + R3;
           call MO_Prefetch_Data 2(_cxPd::P64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.95742948 UTC

[section ""data" . GHC.PrimopWrappers.prefetchAddr2#_closure" {
     GHC.PrimopWrappers.prefetchAddr2#_closure:
         const GHC.PrimopWrappers.prefetchAddr2#_info;
 },
 GHC.PrimopWrappers.prefetchAddr2#_entry() //  [R2, R3]
         { info_tbl: [(cxPm,
                       label: GHC.PrimopWrappers.prefetchAddr2#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxPm: // global
           _cxPl::I64 = R2 + R3;
           call MO_Prefetch_Data 2(_cxPl::I64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.958266877 UTC

[section ""data" . GHC.PrimopWrappers.prefetchValue2#_closure" {
     GHC.PrimopWrappers.prefetchValue2#_closure:
         const GHC.PrimopWrappers.prefetchValue2#_info;
 },
 GHC.PrimopWrappers.prefetchValue2#_entry() //  [R2]
         { info_tbl: [(cxPu,
                       label: GHC.PrimopWrappers.prefetchValue2#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxPu: // global
           call MO_Prefetch_Data 2(R2);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.959089908 UTC

[section ""data" . GHC.PrimopWrappers.prefetchByteArray1#_closure" {
     GHC.PrimopWrappers.prefetchByteArray1#_closure:
         const GHC.PrimopWrappers.prefetchByteArray1#_info;
 },
 GHC.PrimopWrappers.prefetchByteArray1#_entry() //  [R2, R3]
         { info_tbl: [(cxPC,
                       label: GHC.PrimopWrappers.prefetchByteArray1#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxPC: // global
           _cxPB::P64 = (R2 + 16) + R3;
           call MO_Prefetch_Data 1(_cxPB::P64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.959912336 UTC

[section ""data" . GHC.PrimopWrappers.prefetchMutableByteArray1#_closure" {
     GHC.PrimopWrappers.prefetchMutableByteArray1#_closure:
         const GHC.PrimopWrappers.prefetchMutableByteArray1#_info;
 },
 GHC.PrimopWrappers.prefetchMutableByteArray1#_entry() //  [R2, R3]
         { info_tbl: [(cxPK,
                       label: GHC.PrimopWrappers.prefetchMutableByteArray1#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxPK: // global
           _cxPJ::P64 = (R2 + 16) + R3;
           call MO_Prefetch_Data 1(_cxPJ::P64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.960736138 UTC

[section ""data" . GHC.PrimopWrappers.prefetchAddr1#_closure" {
     GHC.PrimopWrappers.prefetchAddr1#_closure:
         const GHC.PrimopWrappers.prefetchAddr1#_info;
 },
 GHC.PrimopWrappers.prefetchAddr1#_entry() //  [R2, R3]
         { info_tbl: [(cxPS,
                       label: GHC.PrimopWrappers.prefetchAddr1#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxPS: // global
           _cxPR::I64 = R2 + R3;
           call MO_Prefetch_Data 1(_cxPR::I64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.961699214 UTC

[section ""data" . GHC.PrimopWrappers.prefetchValue1#_closure" {
     GHC.PrimopWrappers.prefetchValue1#_closure:
         const GHC.PrimopWrappers.prefetchValue1#_info;
 },
 GHC.PrimopWrappers.prefetchValue1#_entry() //  [R2]
         { info_tbl: [(cxQ0,
                       label: GHC.PrimopWrappers.prefetchValue1#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxQ0: // global
           call MO_Prefetch_Data 1(R2);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.96253926 UTC

[section ""data" . GHC.PrimopWrappers.prefetchByteArray0#_closure" {
     GHC.PrimopWrappers.prefetchByteArray0#_closure:
         const GHC.PrimopWrappers.prefetchByteArray0#_info;
 },
 GHC.PrimopWrappers.prefetchByteArray0#_entry() //  [R2, R3]
         { info_tbl: [(cxQ8,
                       label: GHC.PrimopWrappers.prefetchByteArray0#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxQ8: // global
           _cxQ7::P64 = (R2 + 16) + R3;
           call MO_Prefetch_Data 0(_cxQ7::P64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.963397442 UTC

[section ""data" . GHC.PrimopWrappers.prefetchMutableByteArray0#_closure" {
     GHC.PrimopWrappers.prefetchMutableByteArray0#_closure:
         const GHC.PrimopWrappers.prefetchMutableByteArray0#_info;
 },
 GHC.PrimopWrappers.prefetchMutableByteArray0#_entry() //  [R2, R3]
         { info_tbl: [(cxQg,
                       label: GHC.PrimopWrappers.prefetchMutableByteArray0#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxQg: // global
           _cxQf::P64 = (R2 + 16) + R3;
           call MO_Prefetch_Data 0(_cxQf::P64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.964238071 UTC

[section ""data" . GHC.PrimopWrappers.prefetchAddr0#_closure" {
     GHC.PrimopWrappers.prefetchAddr0#_closure:
         const GHC.PrimopWrappers.prefetchAddr0#_info;
 },
 GHC.PrimopWrappers.prefetchAddr0#_entry() //  [R2, R3]
         { info_tbl: [(cxQo,
                       label: GHC.PrimopWrappers.prefetchAddr0#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxQo: // global
           _cxQn::I64 = R2 + R3;
           call MO_Prefetch_Data 0(_cxQn::I64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.965149454 UTC

[section ""data" . GHC.PrimopWrappers.prefetchValue0#_closure" {
     GHC.PrimopWrappers.prefetchValue0#_closure:
         const GHC.PrimopWrappers.prefetchValue0#_info;
 },
 GHC.PrimopWrappers.prefetchValue0#_entry() //  [R2]
         { info_tbl: [(cxQw,
                       label: GHC.PrimopWrappers.prefetchValue0#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxQw: // global
           call MO_Prefetch_Data 0(R2);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.965986429 UTC

[section ""cstring" . GHC.PrimopWrappers.$trModule4_bytes" {
     GHC.PrimopWrappers.$trModule4_bytes:
         I8[] [103,104,99,45,112,114,105,109]
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.966547497 UTC

[section ""data" . GHC.PrimopWrappers.$trModule3_closure" {
     GHC.PrimopWrappers.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.PrimopWrappers.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.9678682 UTC

[section ""cstring" . GHC.PrimopWrappers.$trModule2_bytes" {
     GHC.PrimopWrappers.$trModule2_bytes:
         I8[] [71,72,67,46,80,114,105,109,111,112,87,114,97,112,112,101,114,115]
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.968405214 UTC

[section ""data" . GHC.PrimopWrappers.$trModule1_closure" {
     GHC.PrimopWrappers.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.PrimopWrappers.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.968967545 UTC

[section ""data" . GHC.PrimopWrappers.$trModule_closure" {
     GHC.PrimopWrappers.$trModule_closure:
         const GHC.Types.Module_con_info;
         const GHC.PrimopWrappers.$trModule3_closure+1;
         const GHC.PrimopWrappers.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.969565764 UTC

[section ""relreadonly" . SwVl_srt" { SwVl_srt:
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.970332395 UTC

[]


==================== Output Cmm ====================
2018-03-16 15:50:16.971559445 UTC

[section ""data" . GHC.PrimopWrappers.gtChar#_closure" {
     GHC.PrimopWrappers.gtChar#_closure:
         const GHC.PrimopWrappers.gtChar#_info;
 },
 GHC.PrimopWrappers.gtChar#_entry() //  [R2, R3]
         { info_tbl: [(cxQE,
                       label: GHC.PrimopWrappers.gtChar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxQE: // global
           R1 = R2 > R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.975766395 UTC

[section ""data" . GHC.PrimopWrappers.geChar#_closure" {
     GHC.PrimopWrappers.geChar#_closure:
         const GHC.PrimopWrappers.geChar#_info;
 },
 GHC.PrimopWrappers.geChar#_entry() //  [R2, R3]
         { info_tbl: [(cxQS,
                       label: GHC.PrimopWrappers.geChar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxQS: // global
           R1 = R2 >= R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.979347784 UTC

[section ""data" . GHC.PrimopWrappers.eqChar#_closure" {
     GHC.PrimopWrappers.eqChar#_closure:
         const GHC.PrimopWrappers.eqChar#_info;
 },
 GHC.PrimopWrappers.eqChar#_entry() //  [R2, R3]
         { info_tbl: [(cxR6,
                       label: GHC.PrimopWrappers.eqChar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxR6: // global
           R1 = R2 == R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.982575656 UTC

[section ""data" . GHC.PrimopWrappers.neChar#_closure" {
     GHC.PrimopWrappers.neChar#_closure:
         const GHC.PrimopWrappers.neChar#_info;
 },
 GHC.PrimopWrappers.neChar#_entry() //  [R2, R3]
         { info_tbl: [(cxRk,
                       label: GHC.PrimopWrappers.neChar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxRk: // global
           R1 = R2 != R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.986008766 UTC

[section ""data" . GHC.PrimopWrappers.ltChar#_closure" {
     GHC.PrimopWrappers.ltChar#_closure:
         const GHC.PrimopWrappers.ltChar#_info;
 },
 GHC.PrimopWrappers.ltChar#_entry() //  [R2, R3]
         { info_tbl: [(cxRy,
                       label: GHC.PrimopWrappers.ltChar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxRy: // global
           R1 = R2 < R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.98942297 UTC

[section ""data" . GHC.PrimopWrappers.leChar#_closure" {
     GHC.PrimopWrappers.leChar#_closure:
         const GHC.PrimopWrappers.leChar#_info;
 },
 GHC.PrimopWrappers.leChar#_entry() //  [R2, R3]
         { info_tbl: [(cxRM,
                       label: GHC.PrimopWrappers.leChar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxRM: // global
           R1 = R2 <= R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.992784548 UTC

[section ""data" . GHC.PrimopWrappers.ord#_closure" {
     GHC.PrimopWrappers.ord#_closure:
         const GHC.PrimopWrappers.ord#_info;
 },
 GHC.PrimopWrappers.ord#_entry() //  [R2]
         { info_tbl: [(cxS0,
                       label: GHC.PrimopWrappers.ord#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxS0: // global
           R1 = R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:16.996840799 UTC

[section ""data" . GHC.PrimopWrappers.+#_closure" {
     GHC.PrimopWrappers.+#_closure:
         const GHC.PrimopWrappers.+#_info;
 },
 GHC.PrimopWrappers.+#_entry() //  [R2, R3]
         { info_tbl: [(cxSd,
                       label: GHC.PrimopWrappers.+#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxSd: // global
           R1 = R2 + R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.000639916 UTC

[section ""data" . GHC.PrimopWrappers.-#_closure" {
     GHC.PrimopWrappers.-#_closure:
         const GHC.PrimopWrappers.-#_info;
 },
 GHC.PrimopWrappers.-#_entry() //  [R2, R3]
         { info_tbl: [(cxSr,
                       label: GHC.PrimopWrappers.-#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxSr: // global
           R1 = R2 - R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.003925979 UTC

[section ""data" . GHC.PrimopWrappers.*#_closure" {
     GHC.PrimopWrappers.*#_closure:
         const GHC.PrimopWrappers.*#_info;
 },
 GHC.PrimopWrappers.*#_entry() //  [R2, R3]
         { info_tbl: [(cxSF,
                       label: GHC.PrimopWrappers.*#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxSF: // global
           R1 = R2 * R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.00737565 UTC

[section ""data" . GHC.PrimopWrappers.mulIntMayOflo#_closure" {
     GHC.PrimopWrappers.mulIntMayOflo#_closure:
         const GHC.PrimopWrappers.mulIntMayOflo#_info;
 },
 GHC.PrimopWrappers.mulIntMayOflo#_entry() //  [R2, R3]
         { info_tbl: [(cxST,
                       label: GHC.PrimopWrappers.mulIntMayOflo#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxST: // global
           R1 = %MO_S_MulMayOflo_W64(R2, R3);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.010770147 UTC

[section ""data" . GHC.PrimopWrappers.quotInt#_closure" {
     GHC.PrimopWrappers.quotInt#_closure:
         const GHC.PrimopWrappers.quotInt#_info;
 },
 GHC.PrimopWrappers.quotInt#_entry() //  [R2, R3]
         { info_tbl: [(cxT6,
                       label: GHC.PrimopWrappers.quotInt#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxT6: // global
           R1 = %MO_S_Quot_W64(R2, R3);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.014280106 UTC

[section ""data" . GHC.PrimopWrappers.remInt#_closure" {
     GHC.PrimopWrappers.remInt#_closure:
         const GHC.PrimopWrappers.remInt#_info;
 },
 GHC.PrimopWrappers.remInt#_entry() //  [R2, R3]
         { info_tbl: [(cxTj,
                       label: GHC.PrimopWrappers.remInt#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxTj: // global
           R1 = %MO_S_Rem_W64(R2, R3);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.018011005 UTC

[section ""data" . GHC.PrimopWrappers.quotRemInt#_closure" {
     GHC.PrimopWrappers.quotRemInt#_closure:
         const GHC.PrimopWrappers.quotRemInt#_info;
 },
 GHC.PrimopWrappers.quotRemInt#_entry() //  [R2, R3]
         { info_tbl: [(cxTx,
                       label: GHC.PrimopWrappers.quotRemInt#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxTx: // global
           _B1::I64 = R3;
           (_cxTv::I64, _cxTw::I64) = call MO_S_QuotRem W64(R2, _B1::I64);
           R2 = _cxTw::I64;
           R1 = _cxTv::I64;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.022044874 UTC

[section ""data" . GHC.PrimopWrappers.andI#_closure" {
     GHC.PrimopWrappers.andI#_closure:
         const GHC.PrimopWrappers.andI#_info;
 },
 GHC.PrimopWrappers.andI#_entry() //  [R2, R3]
         { info_tbl: [(cxTK,
                       label: GHC.PrimopWrappers.andI#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxTK: // global
           R1 = R2 & R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.02563676 UTC

[section ""data" . GHC.PrimopWrappers.orI#_closure" {
     GHC.PrimopWrappers.orI#_closure:
         const GHC.PrimopWrappers.orI#_info;
 },
 GHC.PrimopWrappers.orI#_entry() //  [R2, R3]
         { info_tbl: [(cxTY,
                       label: GHC.PrimopWrappers.orI#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxTY: // global
           R1 = R2 | R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.02884931 UTC

[section ""data" . GHC.PrimopWrappers.xorI#_closure" {
     GHC.PrimopWrappers.xorI#_closure:
         const GHC.PrimopWrappers.xorI#_info;
 },
 GHC.PrimopWrappers.xorI#_entry() //  [R2, R3]
         { info_tbl: [(cxUc,
                       label: GHC.PrimopWrappers.xorI#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxUc: // global
           R1 = R2 ^ R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.032189873 UTC

[section ""data" . GHC.PrimopWrappers.notI#_closure" {
     GHC.PrimopWrappers.notI#_closure:
         const GHC.PrimopWrappers.notI#_info;
 },
 GHC.PrimopWrappers.notI#_entry() //  [R2]
         { info_tbl: [(cxUq,
                       label: GHC.PrimopWrappers.notI#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxUq: // global
           R1 = ~R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.035533284 UTC

[section ""data" . GHC.PrimopWrappers.negateInt#_closure" {
     GHC.PrimopWrappers.negateInt#_closure:
         const GHC.PrimopWrappers.negateInt#_info;
 },
 GHC.PrimopWrappers.negateInt#_entry() //  [R2]
         { info_tbl: [(cxUD,
                       label: GHC.PrimopWrappers.negateInt#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxUD: // global
           R1 = -R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.039190834 UTC

[section ""data" . GHC.PrimopWrappers.addIntC#_closure" {
     GHC.PrimopWrappers.addIntC#_closure:
         const GHC.PrimopWrappers.addIntC#_info;
 },
 GHC.PrimopWrappers.addIntC#_entry() //  [R2, R3]
         { info_tbl: [(cxUR,
                       label: GHC.PrimopWrappers.addIntC#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxUR: // global
           _B1::I64 = R3;
           (_cxUP::I64, _cxUQ::I64) = call MO_AddIntC W64(R2, _B1::I64);
           R2 = _cxUQ::I64;
           R1 = _cxUP::I64;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.042659338 UTC

[section ""data" . GHC.PrimopWrappers.subIntC#_closure" {
     GHC.PrimopWrappers.subIntC#_closure:
         const GHC.PrimopWrappers.subIntC#_info;
 },
 GHC.PrimopWrappers.subIntC#_entry() //  [R2, R3]
         { info_tbl: [(cxV7,
                       label: GHC.PrimopWrappers.subIntC#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxV7: // global
           _B1::I64 = R3;
           (_cxV5::I64, _cxV6::I64) = call MO_SubIntC W64(R2, _B1::I64);
           R2 = _cxV6::I64;
           R1 = _cxV5::I64;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.047085198 UTC

[section ""data" . GHC.PrimopWrappers.>#_closure" {
     GHC.PrimopWrappers.>#_closure:
         const GHC.PrimopWrappers.>#_info;
 },
 GHC.PrimopWrappers.>#_entry() //  [R2, R3]
         { info_tbl: [(cxVm,
                       label: GHC.PrimopWrappers.>#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxVm: // global
           R1 = %MO_S_Gt_W64(R2, R3);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.050429958 UTC

[section ""data" . GHC.PrimopWrappers.>=#_closure" {
     GHC.PrimopWrappers.>=#_closure:
         const GHC.PrimopWrappers.>=#_info;
 },
 GHC.PrimopWrappers.>=#_entry() //  [R2, R3]
         { info_tbl: [(cxVA,
                       label: GHC.PrimopWrappers.>=#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxVA: // global
           R1 = %MO_S_Ge_W64(R2, R3);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.053655367 UTC

[section ""data" . GHC.PrimopWrappers.==#_closure" {
     GHC.PrimopWrappers.==#_closure:
         const GHC.PrimopWrappers.==#_info;
 },
 GHC.PrimopWrappers.==#_entry() //  [R2, R3]
         { info_tbl: [(cxVO,
                       label: GHC.PrimopWrappers.==#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxVO: // global
           R1 = R2 == R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.056885483 UTC

[section ""data" . GHC.PrimopWrappers./=#_closure" {
     GHC.PrimopWrappers./=#_closure:
         const GHC.PrimopWrappers./=#_info;
 },
 GHC.PrimopWrappers./=#_entry() //  [R2, R3]
         { info_tbl: [(cxW2,
                       label: GHC.PrimopWrappers./=#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxW2: // global
           R1 = R2 != R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.06055369 UTC

[section ""data" . GHC.PrimopWrappers.<#_closure" {
     GHC.PrimopWrappers.<#_closure:
         const GHC.PrimopWrappers.<#_info;
 },
 GHC.PrimopWrappers.<#_entry() //  [R2, R3]
         { info_tbl: [(cxWg,
                       label: GHC.PrimopWrappers.<#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxWg: // global
           R1 = %MO_S_Lt_W64(R2, R3);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.063862023 UTC

[section ""data" . GHC.PrimopWrappers.<=#_closure" {
     GHC.PrimopWrappers.<=#_closure:
         const GHC.PrimopWrappers.<=#_info;
 },
 GHC.PrimopWrappers.<=#_entry() //  [R2, R3]
         { info_tbl: [(cxWu,
                       label: GHC.PrimopWrappers.<=#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxWu: // global
           R1 = %MO_S_Le_W64(R2, R3);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.067172936 UTC

[section ""data" . GHC.PrimopWrappers.chr#_closure" {
     GHC.PrimopWrappers.chr#_closure:
         const GHC.PrimopWrappers.chr#_info;
 },
 GHC.PrimopWrappers.chr#_entry() //  [R2]
         { info_tbl: [(cxWI,
                       label: GHC.PrimopWrappers.chr#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxWI: // global
           R1 = R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.070565808 UTC

[section ""data" . GHC.PrimopWrappers.int2Word#_closure" {
     GHC.PrimopWrappers.int2Word#_closure:
         const GHC.PrimopWrappers.int2Word#_info;
 },
 GHC.PrimopWrappers.int2Word#_entry() //  [R2]
         { info_tbl: [(cxWV,
                       label: GHC.PrimopWrappers.int2Word#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxWV: // global
           R1 = R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.074825424 UTC

[section ""data" . GHC.PrimopWrappers.int2Float#_closure" {
     GHC.PrimopWrappers.int2Float#_closure:
         const GHC.PrimopWrappers.int2Float#_info;
 },
 GHC.PrimopWrappers.int2Float#_entry() //  [R2]
         { info_tbl: [(cxX8,
                       label: GHC.PrimopWrappers.int2Float#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxX8: // global
           F1 = %MO_SF_Conv_W64_W32(R2);
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.078183631 UTC

[section ""data" . GHC.PrimopWrappers.int2Double#_closure" {
     GHC.PrimopWrappers.int2Double#_closure:
         const GHC.PrimopWrappers.int2Double#_info;
 },
 GHC.PrimopWrappers.int2Double#_entry() //  [R2]
         { info_tbl: [(cxXl,
                       label: GHC.PrimopWrappers.int2Double#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxXl: // global
           D1 = %MO_SF_Conv_W64_W64(R2);
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.081880254 UTC

[section ""data" . GHC.PrimopWrappers.word2Float#_closure" {
     GHC.PrimopWrappers.word2Float#_closure:
         const GHC.PrimopWrappers.word2Float#_info;
 },
 GHC.PrimopWrappers.word2Float#_entry() //  [R2]
         { info_tbl: [(cxXz,
                       label: GHC.PrimopWrappers.word2Float#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxXz: // global
           (_cxXx::F32) = call MO_UF_Conv W32(R2);
           F1 = _cxXx::F32;
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.085427356 UTC

[section ""data" . GHC.PrimopWrappers.word2Double#_closure" {
     GHC.PrimopWrappers.word2Double#_closure:
         const GHC.PrimopWrappers.word2Double#_info;
 },
 GHC.PrimopWrappers.word2Double#_entry() //  [R2]
         { info_tbl: [(cxXN,
                       label: GHC.PrimopWrappers.word2Double#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxXN: // global
           (_cxXL::F64) = call MO_UF_Conv W64(R2);
           D1 = _cxXL::F64;
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.089000784 UTC

[section ""data" . GHC.PrimopWrappers.uncheckedIShiftL#_closure" {
     GHC.PrimopWrappers.uncheckedIShiftL#_closure:
         const GHC.PrimopWrappers.uncheckedIShiftL#_info;
 },
 GHC.PrimopWrappers.uncheckedIShiftL#_entry() //  [R2, R3]
         { info_tbl: [(cxY0,
                       label: GHC.PrimopWrappers.uncheckedIShiftL#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxY0: // global
           R1 = R2 << R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.092387626 UTC

[section ""data" . GHC.PrimopWrappers.uncheckedIShiftRA#_closure" {
     GHC.PrimopWrappers.uncheckedIShiftRA#_closure:
         const GHC.PrimopWrappers.uncheckedIShiftRA#_info;
 },
 GHC.PrimopWrappers.uncheckedIShiftRA#_entry() //  [R2, R3]
         { info_tbl: [(cxYe,
                       label: GHC.PrimopWrappers.uncheckedIShiftRA#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxYe: // global
           R1 = %MO_S_Shr_W64(R2, R3);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.095905316 UTC

[section ""data" . GHC.PrimopWrappers.uncheckedIShiftRL#_closure" {
     GHC.PrimopWrappers.uncheckedIShiftRL#_closure:
         const GHC.PrimopWrappers.uncheckedIShiftRL#_info;
 },
 GHC.PrimopWrappers.uncheckedIShiftRL#_entry() //  [R2, R3]
         { info_tbl: [(cxYs,
                       label: GHC.PrimopWrappers.uncheckedIShiftRL#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxYs: // global
           R1 = R2 >> R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.1001475 UTC

[section ""data" . GHC.PrimopWrappers.plusWord#_closure" {
     GHC.PrimopWrappers.plusWord#_closure:
         const GHC.PrimopWrappers.plusWord#_info;
 },
 GHC.PrimopWrappers.plusWord#_entry() //  [R2, R3]
         { info_tbl: [(cxYG,
                       label: GHC.PrimopWrappers.plusWord#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxYG: // global
           R1 = R2 + R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.103422079 UTC

[section ""data" . GHC.PrimopWrappers.subWordC#_closure" {
     GHC.PrimopWrappers.subWordC#_closure:
         const GHC.PrimopWrappers.subWordC#_info;
 },
 GHC.PrimopWrappers.subWordC#_entry() //  [R2, R3]
         { info_tbl: [(cxYV,
                       label: GHC.PrimopWrappers.subWordC#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxYV: // global
           _B1::I64 = R3;
           (_cxYT::I64, _cxYU::I64) = call MO_SubWordC W64(R2, _B1::I64);
           R2 = _cxYU::I64;
           R1 = _cxYT::I64;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.107229161 UTC

[section ""data" . GHC.PrimopWrappers.plusWord2#_closure" {
     GHC.PrimopWrappers.plusWord2#_closure:
         const GHC.PrimopWrappers.plusWord2#_info;
 },
 GHC.PrimopWrappers.plusWord2#_entry() //  [R2, R3]
         { info_tbl: [(cxZb,
                       label: GHC.PrimopWrappers.plusWord2#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxZb: // global
           _B1::I64 = R3;
           (_cxZ9::I64, _cxZa::I64) = call MO_Add2 W64(R2, _B1::I64);
           R2 = _cxZa::I64;
           R1 = _cxZ9::I64;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.110739272 UTC

[section ""data" . GHC.PrimopWrappers.minusWord#_closure" {
     GHC.PrimopWrappers.minusWord#_closure:
         const GHC.PrimopWrappers.minusWord#_info;
 },
 GHC.PrimopWrappers.minusWord#_entry() //  [R2, R3]
         { info_tbl: [(cxZp,
                       label: GHC.PrimopWrappers.minusWord#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxZp: // global
           R1 = R2 - R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.114261696 UTC

[section ""data" . GHC.PrimopWrappers.timesWord#_closure" {
     GHC.PrimopWrappers.timesWord#_closure:
         const GHC.PrimopWrappers.timesWord#_info;
 },
 GHC.PrimopWrappers.timesWord#_entry() //  [R2, R3]
         { info_tbl: [(cxZD,
                       label: GHC.PrimopWrappers.timesWord#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxZD: // global
           R1 = R2 * R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.117558956 UTC

[section ""data" . GHC.PrimopWrappers.timesWord2#_closure" {
     GHC.PrimopWrappers.timesWord2#_closure:
         const GHC.PrimopWrappers.timesWord2#_info;
 },
 GHC.PrimopWrappers.timesWord2#_entry() //  [R2, R3]
         { info_tbl: [(cxZS,
                       label: GHC.PrimopWrappers.timesWord2#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cxZS: // global
           _B1::I64 = R3;
           (_cxZQ::I64, _cxZR::I64) = call MO_U_Mul2 W64(R2, _B1::I64);
           R2 = _cxZR::I64;
           R1 = _cxZQ::I64;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.121008642 UTC

[section ""data" . GHC.PrimopWrappers.quotWord#_closure" {
     GHC.PrimopWrappers.quotWord#_closure:
         const GHC.PrimopWrappers.quotWord#_info;
 },
 GHC.PrimopWrappers.quotWord#_entry() //  [R2, R3]
         { info_tbl: [(cy05,
                       label: GHC.PrimopWrappers.quotWord#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cy05: // global
           R1 = R2 / R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.124555551 UTC

[section ""data" . GHC.PrimopWrappers.remWord#_closure" {
     GHC.PrimopWrappers.remWord#_closure:
         const GHC.PrimopWrappers.remWord#_info;
 },
 GHC.PrimopWrappers.remWord#_entry() //  [R2, R3]
         { info_tbl: [(cy0i,
                       label: GHC.PrimopWrappers.remWord#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cy0i: // global
           R1 = R2 % R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.12833855 UTC

[section ""data" . GHC.PrimopWrappers.quotRemWord#_closure" {
     GHC.PrimopWrappers.quotRemWord#_closure:
         const GHC.PrimopWrappers.quotRemWord#_info;
 },
 GHC.PrimopWrappers.quotRemWord#_entry() //  [R2, R3]
         { info_tbl: [(cy0w,
                       label: GHC.PrimopWrappers.quotRemWord#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cy0w: // global
           _B1::I64 = R3;
           (_cy0u::I64, _cy0v::I64) = call MO_U_QuotRem W64(R2, _B1::I64);
           R2 = _cy0v::I64;
           R1 = _cy0u::I64;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.131755097 UTC

[section ""data" . GHC.PrimopWrappers.quotRemWord2#_closure" {
     GHC.PrimopWrappers.quotRemWord2#_closure:
         const GHC.PrimopWrappers.quotRemWord2#_info;
 },
 GHC.PrimopWrappers.quotRemWord2#_entry() //  [R2, R3, R4]
         { info_tbl: [(cy0K,
                       label: GHC.PrimopWrappers.quotRemWord2#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 16} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cy0K: // global
           _B1::I64 = R4;
           _B2::I64 = R3;
           (_cy0I::I64, _cy0J::I64) = call MO_U_QuotRem2 W64(R2, _B2::I64, _B1::I64);
           R2 = _cy0J::I64;
           R1 = _cy0I::I64;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.135418137 UTC

[section ""data" . GHC.PrimopWrappers.and#_closure" {
     GHC.PrimopWrappers.and#_closure:
         const GHC.PrimopWrappers.and#_info;
 },
 GHC.PrimopWrappers.and#_entry() //  [R2, R3]
         { info_tbl: [(cy0X,
                       label: GHC.PrimopWrappers.and#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cy0X: // global
           R1 = R2 & R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.138540281 UTC

[section ""data" . GHC.PrimopWrappers.or#_closure" {
     GHC.PrimopWrappers.or#_closure:
         const GHC.PrimopWrappers.or#_info;
 },
 GHC.PrimopWrappers.or#_entry() //  [R2, R3]
         { info_tbl: [(cy1b,
                       label: GHC.PrimopWrappers.or#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cy1b: // global
           R1 = R2 | R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.141790093 UTC

[section ""data" . GHC.PrimopWrappers.xor#_closure" {
     GHC.PrimopWrappers.xor#_closure:
         const GHC.PrimopWrappers.xor#_info;
 },
 GHC.PrimopWrappers.xor#_entry() //  [R2, R3]
         { info_tbl: [(cy1p,
                       label: GHC.PrimopWrappers.xor#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cy1p: // global
           R1 = R2 ^ R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.144952298 UTC

[section ""data" . GHC.PrimopWrappers.not#_closure" {
     GHC.PrimopWrappers.not#_closure:
         const GHC.PrimopWrappers.not#_info;
 },
 GHC.PrimopWrappers.not#_entry() //  [R2]
         { info_tbl: [(cy1D,
                       label: GHC.PrimopWrappers.not#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cy1D: // global
           R1 = ~R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.14826633 UTC

[section ""data" . GHC.PrimopWrappers.uncheckedShiftL#_closure" {
     GHC.PrimopWrappers.uncheckedShiftL#_closure:
         const GHC.PrimopWrappers.uncheckedShiftL#_info;
 },
 GHC.PrimopWrappers.uncheckedShiftL#_entry() //  [R2, R3]
         { info_tbl: [(cy1Q,
                       label: GHC.PrimopWrappers.uncheckedShiftL#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cy1Q: // global
           R1 = R2 << R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.152105597 UTC

[section ""data" . GHC.PrimopWrappers.uncheckedShiftRL#_closure" {
     GHC.PrimopWrappers.uncheckedShiftRL#_closure:
         const GHC.PrimopWrappers.uncheckedShiftRL#_info;
 },
 GHC.PrimopWrappers.uncheckedShiftRL#_entry() //  [R2, R3]
         { info_tbl: [(cy24,
                       label: GHC.PrimopWrappers.uncheckedShiftRL#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cy24: // global
           R1 = R2 >> R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.155358332 UTC

[section ""data" . GHC.PrimopWrappers.word2Int#_closure" {
     GHC.PrimopWrappers.word2Int#_closure:
         const GHC.PrimopWrappers.word2Int#_info;
 },
 GHC.PrimopWrappers.word2Int#_entry() //  [R2]
         { info_tbl: [(cy2i,
                       label: GHC.PrimopWrappers.word2Int#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cy2i: // global
           R1 = R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.158533541 UTC

[section ""data" . GHC.PrimopWrappers.gtWord#_closure" {
     GHC.PrimopWrappers.gtWord#_closure:
         const GHC.PrimopWrappers.gtWord#_info;
 },
 GHC.PrimopWrappers.gtWord#_entry() //  [R2, R3]
         { info_tbl: [(cy2v,
                       label: GHC.PrimopWrappers.gtWord#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cy2v: // global
           R1 = R2 > R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.161957342 UTC

[section ""data" . GHC.PrimopWrappers.geWord#_closure" {
     GHC.PrimopWrappers.geWord#_closure:
         const GHC.PrimopWrappers.geWord#_info;
 },
 GHC.PrimopWrappers.geWord#_entry() //  [R2, R3]
         { info_tbl: [(cy2J,
                       label: GHC.PrimopWrappers.geWord#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cy2J: // global
           R1 = R2 >= R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.16558889 UTC

[section ""data" . GHC.PrimopWrappers.eqWord#_closure" {
     GHC.PrimopWrappers.eqWord#_closure:
         const GHC.PrimopWrappers.eqWord#_info;
 },
 GHC.PrimopWrappers.eqWord#_entry() //  [R2, R3]
         { info_tbl: [(cy2X,
                       label: GHC.PrimopWrappers.eqWord#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cy2X: // global
           R1 = R2 == R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.168745852 UTC

[section ""data" . GHC.PrimopWrappers.neWord#_closure" {
     GHC.PrimopWrappers.neWord#_closure:
         const GHC.PrimopWrappers.neWord#_info;
 },
 GHC.PrimopWrappers.neWord#_entry() //  [R2, R3]
         { info_tbl: [(cy3b,
                       label: GHC.PrimopWrappers.neWord#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cy3b: // global
           R1 = R2 != R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.171948619 UTC

[section ""data" . GHC.PrimopWrappers.ltWord#_closure" {
     GHC.PrimopWrappers.ltWord#_closure:
         const GHC.PrimopWrappers.ltWord#_info;
 },
 GHC.PrimopWrappers.ltWord#_entry() //  [R2, R3]
         { info_tbl: [(cy3p,
                       label: GHC.PrimopWrappers.ltWord#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cy3p: // global
           R1 = R2 < R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.175706706 UTC

[section ""data" . GHC.PrimopWrappers.leWord#_closure" {
     GHC.PrimopWrappers.leWord#_closure:
         const GHC.PrimopWrappers.leWord#_info;
 },
 GHC.PrimopWrappers.leWord#_entry() //  [R2, R3]
         { info_tbl: [(cy3D,
                       label: GHC.PrimopWrappers.leWord#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cy3D: // global
           R1 = R2 <= R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.17961753 UTC

[section ""data" . GHC.PrimopWrappers.popCnt8#_closure" {
     GHC.PrimopWrappers.popCnt8#_closure:
         const GHC.PrimopWrappers.popCnt8#_info;
 },
 GHC.PrimopWrappers.popCnt8#_entry() //  [R2]
         { info_tbl: [(cy3S,
                       label: GHC.PrimopWrappers.popCnt8#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cy3S: // global
           (_cy3Q::I64) = call MO_PopCnt W8(R2);
           R1 = _cy3Q::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.183479593 UTC

[section ""data" . GHC.PrimopWrappers.popCnt16#_closure" {
     GHC.PrimopWrappers.popCnt16#_closure:
         const GHC.PrimopWrappers.popCnt16#_info;
 },
 GHC.PrimopWrappers.popCnt16#_entry() //  [R2]
         { info_tbl: [(cy46,
                       label: GHC.PrimopWrappers.popCnt16#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cy46: // global
           (_cy44::I64) = call MO_PopCnt W16(R2);
           R1 = _cy44::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.186959853 UTC

[section ""data" . GHC.PrimopWrappers.popCnt32#_closure" {
     GHC.PrimopWrappers.popCnt32#_closure:
         const GHC.PrimopWrappers.popCnt32#_info;
 },
 GHC.PrimopWrappers.popCnt32#_entry() //  [R2]
         { info_tbl: [(cy4k,
                       label: GHC.PrimopWrappers.popCnt32#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cy4k: // global
           (_cy4i::I64) = call MO_PopCnt W32(R2);
           R1 = _cy4i::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.190425394 UTC

[section ""data" . GHC.PrimopWrappers.popCnt64#_closure" {
     GHC.PrimopWrappers.popCnt64#_closure:
         const GHC.PrimopWrappers.popCnt64#_info;
 },
 GHC.PrimopWrappers.popCnt64#_entry() //  [R2]
         { info_tbl: [(cy4y,
                       label: GHC.PrimopWrappers.popCnt64#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cy4y: // global
           (_cy4w::I64) = call MO_PopCnt W64(R2);
           R1 = _cy4w::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.193783438 UTC

[section ""data" . GHC.PrimopWrappers.popCnt#_closure" {
     GHC.PrimopWrappers.popCnt#_closure:
         const GHC.PrimopWrappers.popCnt#_info;
 },
 GHC.PrimopWrappers.popCnt#_entry() //  [R2]
         { info_tbl: [(cy4M,
                       label: GHC.PrimopWrappers.popCnt#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cy4M: // global
           (_cy4K::I64) = call MO_PopCnt W64(R2);
           R1 = _cy4K::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.197191755 UTC

[section ""data" . GHC.PrimopWrappers.pdep8#_closure" {
     GHC.PrimopWrappers.pdep8#_closure:
         const GHC.PrimopWrappers.pdep8#_info;
 },
 GHC.PrimopWrappers.pdep8#_entry() //  [R2, R3]
         { info_tbl: [(cy51,
                       label: GHC.PrimopWrappers.pdep8#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cy51: // global
           _cy50::I64 = R3;
           (_cy4Y::I64) = call MO_Pdep W8(R2, _cy50::I64);
           R1 = _cy4Y::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.200489649 UTC

[section ""data" . GHC.PrimopWrappers.pdep16#_closure" {
     GHC.PrimopWrappers.pdep16#_closure:
         const GHC.PrimopWrappers.pdep16#_info;
 },
 GHC.PrimopWrappers.pdep16#_entry() //  [R2, R3]
         { info_tbl: [(cy5h,
                       label: GHC.PrimopWrappers.pdep16#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cy5h: // global
           _cy5g::I64 = R3;
           (_cy5e::I64) = call MO_Pdep W16(R2, _cy5g::I64);
           R1 = _cy5e::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.204467836 UTC

[section ""data" . GHC.PrimopWrappers.pdep32#_closure" {
     GHC.PrimopWrappers.pdep32#_closure:
         const GHC.PrimopWrappers.pdep32#_info;
 },
 GHC.PrimopWrappers.pdep32#_entry() //  [R2, R3]
         { info_tbl: [(cy5x,
                       label: GHC.PrimopWrappers.pdep32#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cy5x: // global
           _cy5w::I64 = R3;
           (_cy5u::I64) = call MO_Pdep W32(R2, _cy5w::I64);
           R1 = _cy5u::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.20785735 UTC

[section ""data" . GHC.PrimopWrappers.pdep64#_closure" {
     GHC.PrimopWrappers.pdep64#_closure:
         const GHC.PrimopWrappers.pdep64#_info;
 },
 GHC.PrimopWrappers.pdep64#_entry() //  [R2, R3]
         { info_tbl: [(cy5N,
                       label: GHC.PrimopWrappers.pdep64#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cy5N: // global
           _cy5M::I64 = R3;
           (_cy5K::I64) = call MO_Pdep W64(R2, _cy5M::I64);
           R1 = _cy5K::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.211116546 UTC

[section ""data" . GHC.PrimopWrappers.pdep#_closure" {
     GHC.PrimopWrappers.pdep#_closure:
         const GHC.PrimopWrappers.pdep#_info;
 },
 GHC.PrimopWrappers.pdep#_entry() //  [R2, R3]
         { info_tbl: [(cy63,
                       label: GHC.PrimopWrappers.pdep#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cy63: // global
           _cy62::I64 = R3;
           (_cy60::I64) = call MO_Pdep W64(R2, _cy62::I64);
           R1 = _cy60::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.214640387 UTC

[section ""data" . GHC.PrimopWrappers.pext8#_closure" {
     GHC.PrimopWrappers.pext8#_closure:
         const GHC.PrimopWrappers.pext8#_info;
 },
 GHC.PrimopWrappers.pext8#_entry() //  [R2, R3]
         { info_tbl: [(cy6j,
                       label: GHC.PrimopWrappers.pext8#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cy6j: // global
           _cy6i::I64 = R3;
           (_cy6g::I64) = call MO_Pext W8(R2, _cy6i::I64);
           R1 = _cy6g::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.218083678 UTC

[section ""data" . GHC.PrimopWrappers.pext16#_closure" {
     GHC.PrimopWrappers.pext16#_closure:
         const GHC.PrimopWrappers.pext16#_info;
 },
 GHC.PrimopWrappers.pext16#_entry() //  [R2, R3]
         { info_tbl: [(cy6z,
                       label: GHC.PrimopWrappers.pext16#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cy6z: // global
           _cy6y::I64 = R3;
           (_cy6w::I64) = call MO_Pext W16(R2, _cy6y::I64);
           R1 = _cy6w::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.221695588 UTC

[section ""data" . GHC.PrimopWrappers.pext32#_closure" {
     GHC.PrimopWrappers.pext32#_closure:
         const GHC.PrimopWrappers.pext32#_info;
 },
 GHC.PrimopWrappers.pext32#_entry() //  [R2, R3]
         { info_tbl: [(cy6P,
                       label: GHC.PrimopWrappers.pext32#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cy6P: // global
           _cy6O::I64 = R3;
           (_cy6M::I64) = call MO_Pext W32(R2, _cy6O::I64);
           R1 = _cy6M::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.225149564 UTC

[section ""data" . GHC.PrimopWrappers.pext64#_closure" {
     GHC.PrimopWrappers.pext64#_closure:
         const GHC.PrimopWrappers.pext64#_info;
 },
 GHC.PrimopWrappers.pext64#_entry() //  [R2, R3]
         { info_tbl: [(cy75,
                       label: GHC.PrimopWrappers.pext64#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cy75: // global
           _cy74::I64 = R3;
           (_cy72::I64) = call MO_Pext W64(R2, _cy74::I64);
           R1 = _cy72::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.229203919 UTC

[section ""data" . GHC.PrimopWrappers.pext#_closure" {
     GHC.PrimopWrappers.pext#_closure:
         const GHC.PrimopWrappers.pext#_info;
 },
 GHC.PrimopWrappers.pext#_entry() //  [R2, R3]
         { info_tbl: [(cy7l,
                       label: GHC.PrimopWrappers.pext#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cy7l: // global
           _cy7k::I64 = R3;
           (_cy7i::I64) = call MO_Pext W64(R2, _cy7k::I64);
           R1 = _cy7i::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.232714711 UTC

[section ""data" . GHC.PrimopWrappers.clz8#_closure" {
     GHC.PrimopWrappers.clz8#_closure:
         const GHC.PrimopWrappers.clz8#_info;
 },
 GHC.PrimopWrappers.clz8#_entry() //  [R2]
         { info_tbl: [(cy7A,
                       label: GHC.PrimopWrappers.clz8#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cy7A: // global
           (_cy7y::I64) = call MO_Clz W8(R2);
           R1 = _cy7y::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.23637201 UTC

[section ""data" . GHC.PrimopWrappers.clz16#_closure" {
     GHC.PrimopWrappers.clz16#_closure:
         const GHC.PrimopWrappers.clz16#_info;
 },
 GHC.PrimopWrappers.clz16#_entry() //  [R2]
         { info_tbl: [(cy7Q,
                       label: GHC.PrimopWrappers.clz16#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cy7Q: // global
           (_cy7O::I64) = call MO_Clz W16(R2);
           R1 = _cy7O::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.23979868 UTC

[section ""data" . GHC.PrimopWrappers.clz32#_closure" {
     GHC.PrimopWrappers.clz32#_closure:
         const GHC.PrimopWrappers.clz32#_info;
 },
 GHC.PrimopWrappers.clz32#_entry() //  [R2]
         { info_tbl: [(cy86,
                       label: GHC.PrimopWrappers.clz32#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cy86: // global
           (_cy84::I64) = call MO_Clz W32(R2);
           R1 = _cy84::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.243173811 UTC

[section ""data" . GHC.PrimopWrappers.clz64#_closure" {
     GHC.PrimopWrappers.clz64#_closure:
         const GHC.PrimopWrappers.clz64#_info;
 },
 GHC.PrimopWrappers.clz64#_entry() //  [R2]
         { info_tbl: [(cy8m,
                       label: GHC.PrimopWrappers.clz64#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cy8m: // global
           (_cy8k::I64) = call MO_Clz W64(R2);
           R1 = _cy8k::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.246654478 UTC

[section ""data" . GHC.PrimopWrappers.clz#_closure" {
     GHC.PrimopWrappers.clz#_closure:
         const GHC.PrimopWrappers.clz#_info;
 },
 GHC.PrimopWrappers.clz#_entry() //  [R2]
         { info_tbl: [(cy8C,
                       label: GHC.PrimopWrappers.clz#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cy8C: // global
           (_cy8A::I64) = call MO_Clz W64(R2);
           R1 = _cy8A::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.249963774 UTC

[section ""data" . GHC.PrimopWrappers.ctz8#_closure" {
     GHC.PrimopWrappers.ctz8#_closure:
         const GHC.PrimopWrappers.ctz8#_info;
 },
 GHC.PrimopWrappers.ctz8#_entry() //  [R2]
         { info_tbl: [(cy8S,
                       label: GHC.PrimopWrappers.ctz8#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cy8S: // global
           (_cy8Q::I64) = call MO_Ctz W8(R2);
           R1 = _cy8Q::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.253908128 UTC

[section ""data" . GHC.PrimopWrappers.ctz16#_closure" {
     GHC.PrimopWrappers.ctz16#_closure:
         const GHC.PrimopWrappers.ctz16#_info;
 },
 GHC.PrimopWrappers.ctz16#_entry() //  [R2]
         { info_tbl: [(cy98,
                       label: GHC.PrimopWrappers.ctz16#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cy98: // global
           (_cy96::I64) = call MO_Ctz W16(R2);
           R1 = _cy96::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.2575035 UTC

[section ""data" . GHC.PrimopWrappers.ctz32#_closure" {
     GHC.PrimopWrappers.ctz32#_closure:
         const GHC.PrimopWrappers.ctz32#_info;
 },
 GHC.PrimopWrappers.ctz32#_entry() //  [R2]
         { info_tbl: [(cy9o,
                       label: GHC.PrimopWrappers.ctz32#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cy9o: // global
           (_cy9m::I64) = call MO_Ctz W32(R2);
           R1 = _cy9m::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.260801479 UTC

[section ""data" . GHC.PrimopWrappers.ctz64#_closure" {
     GHC.PrimopWrappers.ctz64#_closure:
         const GHC.PrimopWrappers.ctz64#_info;
 },
 GHC.PrimopWrappers.ctz64#_entry() //  [R2]
         { info_tbl: [(cy9E,
                       label: GHC.PrimopWrappers.ctz64#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cy9E: // global
           (_cy9C::I64) = call MO_Ctz W64(R2);
           R1 = _cy9C::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.264398919 UTC

[section ""data" . GHC.PrimopWrappers.ctz#_closure" {
     GHC.PrimopWrappers.ctz#_closure:
         const GHC.PrimopWrappers.ctz#_info;
 },
 GHC.PrimopWrappers.ctz#_entry() //  [R2]
         { info_tbl: [(cy9U,
                       label: GHC.PrimopWrappers.ctz#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cy9U: // global
           (_cy9S::I64) = call MO_Ctz W64(R2);
           R1 = _cy9S::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.267806211 UTC

[section ""data" . GHC.PrimopWrappers.byteSwap16#_closure" {
     GHC.PrimopWrappers.byteSwap16#_closure:
         const GHC.PrimopWrappers.byteSwap16#_info;
 },
 GHC.PrimopWrappers.byteSwap16#_entry() //  [R2]
         { info_tbl: [(cyaa,
                       label: GHC.PrimopWrappers.byteSwap16#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyaa: // global
           (_cya8::I64) = call MO_BSwap W16(R2);
           R1 = _cya8::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.271427865 UTC

[section ""data" . GHC.PrimopWrappers.byteSwap32#_closure" {
     GHC.PrimopWrappers.byteSwap32#_closure:
         const GHC.PrimopWrappers.byteSwap32#_info;
 },
 GHC.PrimopWrappers.byteSwap32#_entry() //  [R2]
         { info_tbl: [(cyao,
                       label: GHC.PrimopWrappers.byteSwap32#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyao: // global
           (_cyam::I64) = call MO_BSwap W32(R2);
           R1 = _cyam::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.274751806 UTC

[section ""data" . GHC.PrimopWrappers.byteSwap64#_closure" {
     GHC.PrimopWrappers.byteSwap64#_closure:
         const GHC.PrimopWrappers.byteSwap64#_info;
 },
 GHC.PrimopWrappers.byteSwap64#_entry() //  [R2]
         { info_tbl: [(cyaC,
                       label: GHC.PrimopWrappers.byteSwap64#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyaC: // global
           (_cyaA::I64) = call MO_BSwap W64(R2);
           R1 = _cyaA::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.278387299 UTC

[section ""data" . GHC.PrimopWrappers.byteSwap#_closure" {
     GHC.PrimopWrappers.byteSwap#_closure:
         const GHC.PrimopWrappers.byteSwap#_info;
 },
 GHC.PrimopWrappers.byteSwap#_entry() //  [R2]
         { info_tbl: [(cyaQ,
                       label: GHC.PrimopWrappers.byteSwap#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyaQ: // global
           (_cyaO::I64) = call MO_BSwap W64(R2);
           R1 = _cyaO::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.282360289 UTC

[section ""data" . GHC.PrimopWrappers.narrow8Int#_closure" {
     GHC.PrimopWrappers.narrow8Int#_closure:
         const GHC.PrimopWrappers.narrow8Int#_info;
 },
 GHC.PrimopWrappers.narrow8Int#_entry() //  [R2]
         { info_tbl: [(cyb3,
                       label: GHC.PrimopWrappers.narrow8Int#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyb3: // global
           R1 = %MO_SS_Conv_W8_W64(%MO_SS_Conv_W64_W8(R2));
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.287007251 UTC

[section ""data" . GHC.PrimopWrappers.narrow16Int#_closure" {
     GHC.PrimopWrappers.narrow16Int#_closure:
         const GHC.PrimopWrappers.narrow16Int#_info;
 },
 GHC.PrimopWrappers.narrow16Int#_entry() //  [R2]
         { info_tbl: [(cybh,
                       label: GHC.PrimopWrappers.narrow16Int#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cybh: // global
           R1 = %MO_SS_Conv_W16_W64(%MO_SS_Conv_W64_W16(R2));
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.290449396 UTC

[section ""data" . GHC.PrimopWrappers.narrow32Int#_closure" {
     GHC.PrimopWrappers.narrow32Int#_closure:
         const GHC.PrimopWrappers.narrow32Int#_info;
 },
 GHC.PrimopWrappers.narrow32Int#_entry() //  [R2]
         { info_tbl: [(cybv,
                       label: GHC.PrimopWrappers.narrow32Int#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cybv: // global
           R1 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(R2));
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.293831476 UTC

[section ""data" . GHC.PrimopWrappers.narrow8Word#_closure" {
     GHC.PrimopWrappers.narrow8Word#_closure:
         const GHC.PrimopWrappers.narrow8Word#_info;
 },
 GHC.PrimopWrappers.narrow8Word#_entry() //  [R2]
         { info_tbl: [(cybI,
                       label: GHC.PrimopWrappers.narrow8Word#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cybI: // global
           R1 = %MO_UU_Conv_W8_W64(%MO_UU_Conv_W64_W8(R2));
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.297299705 UTC

[section ""data" . GHC.PrimopWrappers.narrow16Word#_closure" {
     GHC.PrimopWrappers.narrow16Word#_closure:
         const GHC.PrimopWrappers.narrow16Word#_info;
 },
 GHC.PrimopWrappers.narrow16Word#_entry() //  [R2]
         { info_tbl: [(cybW,
                       label: GHC.PrimopWrappers.narrow16Word#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cybW: // global
           R1 = %MO_UU_Conv_W16_W64(%MO_UU_Conv_W64_W16(R2));
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.300543138 UTC

[section ""data" . GHC.PrimopWrappers.narrow32Word#_closure" {
     GHC.PrimopWrappers.narrow32Word#_closure:
         const GHC.PrimopWrappers.narrow32Word#_info;
 },
 GHC.PrimopWrappers.narrow32Word#_entry() //  [R2]
         { info_tbl: [(cyca,
                       label: GHC.PrimopWrappers.narrow32Word#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyca: // global
           R1 = %MO_UU_Conv_W32_W64(%MO_UU_Conv_W64_W32(R2));
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.304838395 UTC

[section ""data" . GHC.PrimopWrappers.>##_closure" {
     GHC.PrimopWrappers.>##_closure:
         const GHC.PrimopWrappers.>##_info;
 },
 GHC.PrimopWrappers.>##_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cycj: // global
           D2 = F64[Sp + 8];
           D1 = F64[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.>##_entry(D2,
                                             D1,
                                             R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.>##_entry() //  [D1, D2]
         { info_tbl: [(cyco,
                       label: GHC.PrimopWrappers.>##_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyco: // global
           R1 = %MO_F_Gt_W64(D1, D2);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.309744147 UTC

[section ""data" . GHC.PrimopWrappers.>=##_closure" {
     GHC.PrimopWrappers.>=##_closure:
         const GHC.PrimopWrappers.>=##_info;
 },
 GHC.PrimopWrappers.>=##_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cycB: // global
           D2 = F64[Sp + 8];
           D1 = F64[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.>=##_entry(D2,
                                              D1,
                                              R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.>=##_entry() //  [D1, D2]
         { info_tbl: [(cycG,
                       label: GHC.PrimopWrappers.>=##_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cycG: // global
           R1 = %MO_F_Ge_W64(D1, D2);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.314126924 UTC

[section ""data" . GHC.PrimopWrappers.==##_closure" {
     GHC.PrimopWrappers.==##_closure:
         const GHC.PrimopWrappers.==##_info;
 },
 GHC.PrimopWrappers.==##_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cycT: // global
           D2 = F64[Sp + 8];
           D1 = F64[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.==##_entry(D2,
                                              D1,
                                              R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.==##_entry() //  [D1, D2]
         { info_tbl: [(cycY,
                       label: GHC.PrimopWrappers.==##_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cycY: // global
           R1 = %MO_F_Eq_W64(D1, D2);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.318554683 UTC

[section ""data" . GHC.PrimopWrappers./=##_closure" {
     GHC.PrimopWrappers./=##_closure:
         const GHC.PrimopWrappers./=##_info;
 },
 GHC.PrimopWrappers./=##_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cydb: // global
           D2 = F64[Sp + 8];
           D1 = F64[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers./=##_entry(D2,
                                              D1,
                                              R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers./=##_entry() //  [D1, D2]
         { info_tbl: [(cydg,
                       label: GHC.PrimopWrappers./=##_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cydg: // global
           R1 = %MO_F_Ne_W64(D1, D2);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.323375423 UTC

[section ""data" . GHC.PrimopWrappers.<##_closure" {
     GHC.PrimopWrappers.<##_closure:
         const GHC.PrimopWrappers.<##_info;
 },
 GHC.PrimopWrappers.<##_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cydt: // global
           D2 = F64[Sp + 8];
           D1 = F64[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.<##_entry(D2,
                                             D1,
                                             R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.<##_entry() //  [D1, D2]
         { info_tbl: [(cydy,
                       label: GHC.PrimopWrappers.<##_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cydy: // global
           R1 = %MO_F_Lt_W64(D1, D2);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.327857702 UTC

[section ""data" . GHC.PrimopWrappers.<=##_closure" {
     GHC.PrimopWrappers.<=##_closure:
         const GHC.PrimopWrappers.<=##_info;
 },
 GHC.PrimopWrappers.<=##_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cydL: // global
           D2 = F64[Sp + 8];
           D1 = F64[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.<=##_entry(D2,
                                              D1,
                                              R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.<=##_entry() //  [D1, D2]
         { info_tbl: [(cydQ,
                       label: GHC.PrimopWrappers.<=##_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cydQ: // global
           R1 = %MO_F_Le_W64(D1, D2);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.332872253 UTC

[section ""data" . GHC.PrimopWrappers.+##_closure" {
     GHC.PrimopWrappers.+##_closure:
         const GHC.PrimopWrappers.+##_info;
 },
 GHC.PrimopWrappers.+##_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cye3: // global
           D2 = F64[Sp + 8];
           D1 = F64[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.+##_entry(D2,
                                             D1,
                                             R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.+##_entry() //  [D1, D2]
         { info_tbl: [(cye8,
                       label: GHC.PrimopWrappers.+##_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cye8: // global
           D1 = %MO_F_Add_W64(D1, D2);
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.337228157 UTC

[section ""data" . GHC.PrimopWrappers.-##_closure" {
     GHC.PrimopWrappers.-##_closure:
         const GHC.PrimopWrappers.-##_info;
 },
 GHC.PrimopWrappers.-##_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyek: // global
           D2 = F64[Sp + 8];
           D1 = F64[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.-##_entry(D2,
                                             D1,
                                             R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.-##_entry() //  [D1, D2]
         { info_tbl: [(cyep,
                       label: GHC.PrimopWrappers.-##_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyep: // global
           D1 = %MO_F_Sub_W64(D1, D2);
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.342208323 UTC

[section ""data" . GHC.PrimopWrappers.*##_closure" {
     GHC.PrimopWrappers.*##_closure:
         const GHC.PrimopWrappers.*##_info;
 },
 GHC.PrimopWrappers.*##_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyeB: // global
           D2 = F64[Sp + 8];
           D1 = F64[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.*##_entry(D2,
                                             D1,
                                             R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.*##_entry() //  [D1, D2]
         { info_tbl: [(cyeG,
                       label: GHC.PrimopWrappers.*##_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyeG: // global
           D1 = %MO_F_Mul_W64(D1, D2);
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.346720564 UTC

[section ""data" . GHC.PrimopWrappers./##_closure" {
     GHC.PrimopWrappers./##_closure:
         const GHC.PrimopWrappers./##_info;
 },
 GHC.PrimopWrappers./##_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyeS: // global
           D2 = F64[Sp + 8];
           D1 = F64[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers./##_entry(D2,
                                             D1,
                                             R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers./##_entry() //  [D1, D2]
         { info_tbl: [(cyeX,
                       label: GHC.PrimopWrappers./##_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyeX: // global
           D1 = %MO_F_Quot_W64(D1, D2);
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.351026755 UTC

[section ""data" . GHC.PrimopWrappers.negateDouble#_closure" {
     GHC.PrimopWrappers.negateDouble#_closure:
         const GHC.PrimopWrappers.negateDouble#_info;
 },
 GHC.PrimopWrappers.negateDouble#_entry() //  [D1]
         { info_tbl: [(cyfd,
                       label: GHC.PrimopWrappers.negateDouble#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyfd: // global
           D1 = %MO_F_Neg_W64(D1);
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.354480604 UTC

[section ""data" . GHC.PrimopWrappers.fabsDouble#_closure" {
     GHC.PrimopWrappers.fabsDouble#_closure:
         const GHC.PrimopWrappers.fabsDouble#_info;
 },
 GHC.PrimopWrappers.fabsDouble#_entry() //  [D1]
         { info_tbl: [(cyfs,
                       label: GHC.PrimopWrappers.fabsDouble#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyfs: // global
           _B1::F64 = D1;
           (_cyfr::F64) = call MO_F64_Fabs(_B1::F64);
           D1 = _cyfr::F64;
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.359247778 UTC

[section ""data" . GHC.PrimopWrappers.double2Int#_closure" {
     GHC.PrimopWrappers.double2Int#_closure:
         const GHC.PrimopWrappers.double2Int#_info;
 },
 GHC.PrimopWrappers.double2Int#_entry() //  [D1]
         { info_tbl: [(cyfH,
                       label: GHC.PrimopWrappers.double2Int#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyfH: // global
           R1 = %MO_FS_Conv_W64_W64(D1);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.362534049 UTC

[section ""data" . GHC.PrimopWrappers.double2Float#_closure" {
     GHC.PrimopWrappers.double2Float#_closure:
         const GHC.PrimopWrappers.double2Float#_info;
 },
 GHC.PrimopWrappers.double2Float#_entry() //  [D1]
         { info_tbl: [(cyfU,
                       label: GHC.PrimopWrappers.double2Float#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyfU: // global
           F1 = %MO_FF_Conv_W64_W32(D1);
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.365937298 UTC

[section ""data" . GHC.PrimopWrappers.expDouble#_closure" {
     GHC.PrimopWrappers.expDouble#_closure:
         const GHC.PrimopWrappers.expDouble#_info;
 },
 GHC.PrimopWrappers.expDouble#_entry() //  [D1]
         { info_tbl: [(cyg8,
                       label: GHC.PrimopWrappers.expDouble#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyg8: // global
           _cyg7::F64 = D1;
           (_cyg6::F64) = call MO_F64_Exp(_cyg7::F64);
           D1 = _cyg6::F64;
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.369490674 UTC

[section ""data" . GHC.PrimopWrappers.logDouble#_closure" {
     GHC.PrimopWrappers.logDouble#_closure:
         const GHC.PrimopWrappers.logDouble#_info;
 },
 GHC.PrimopWrappers.logDouble#_entry() //  [D1]
         { info_tbl: [(cygm,
                       label: GHC.PrimopWrappers.logDouble#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cygm: // global
           _cygl::F64 = D1;
           (_cygk::F64) = call MO_F64_Log(_cygl::F64);
           D1 = _cygk::F64;
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.372926857 UTC

[section ""data" . GHC.PrimopWrappers.sqrtDouble#_closure" {
     GHC.PrimopWrappers.sqrtDouble#_closure:
         const GHC.PrimopWrappers.sqrtDouble#_info;
 },
 GHC.PrimopWrappers.sqrtDouble#_entry() //  [D1]
         { info_tbl: [(cygA,
                       label: GHC.PrimopWrappers.sqrtDouble#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cygA: // global
           _cygz::F64 = D1;
           (_cygy::F64) = call MO_F64_Sqrt(_cygz::F64);
           D1 = _cygy::F64;
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.37694595 UTC

[section ""data" . GHC.PrimopWrappers.sinDouble#_closure" {
     GHC.PrimopWrappers.sinDouble#_closure:
         const GHC.PrimopWrappers.sinDouble#_info;
 },
 GHC.PrimopWrappers.sinDouble#_entry() //  [D1]
         { info_tbl: [(cygO,
                       label: GHC.PrimopWrappers.sinDouble#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cygO: // global
           _cygN::F64 = D1;
           (_cygM::F64) = call MO_F64_Sin(_cygN::F64);
           D1 = _cygM::F64;
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.380492063 UTC

[section ""data" . GHC.PrimopWrappers.cosDouble#_closure" {
     GHC.PrimopWrappers.cosDouble#_closure:
         const GHC.PrimopWrappers.cosDouble#_info;
 },
 GHC.PrimopWrappers.cosDouble#_entry() //  [D1]
         { info_tbl: [(cyh2,
                       label: GHC.PrimopWrappers.cosDouble#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyh2: // global
           _cyh1::F64 = D1;
           (_cyh0::F64) = call MO_F64_Cos(_cyh1::F64);
           D1 = _cyh0::F64;
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.384765854 UTC

[section ""data" . GHC.PrimopWrappers.tanDouble#_closure" {
     GHC.PrimopWrappers.tanDouble#_closure:
         const GHC.PrimopWrappers.tanDouble#_info;
 },
 GHC.PrimopWrappers.tanDouble#_entry() //  [D1]
         { info_tbl: [(cyhg,
                       label: GHC.PrimopWrappers.tanDouble#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyhg: // global
           _cyhf::F64 = D1;
           (_cyhe::F64) = call MO_F64_Tan(_cyhf::F64);
           D1 = _cyhe::F64;
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.388471921 UTC

[section ""data" . GHC.PrimopWrappers.asinDouble#_closure" {
     GHC.PrimopWrappers.asinDouble#_closure:
         const GHC.PrimopWrappers.asinDouble#_info;
 },
 GHC.PrimopWrappers.asinDouble#_entry() //  [D1]
         { info_tbl: [(cyhu,
                       label: GHC.PrimopWrappers.asinDouble#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyhu: // global
           _cyht::F64 = D1;
           (_cyhs::F64) = call MO_F64_Asin(_cyht::F64);
           D1 = _cyhs::F64;
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.392001674 UTC

[section ""data" . GHC.PrimopWrappers.acosDouble#_closure" {
     GHC.PrimopWrappers.acosDouble#_closure:
         const GHC.PrimopWrappers.acosDouble#_info;
 },
 GHC.PrimopWrappers.acosDouble#_entry() //  [D1]
         { info_tbl: [(cyhI,
                       label: GHC.PrimopWrappers.acosDouble#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyhI: // global
           _cyhH::F64 = D1;
           (_cyhG::F64) = call MO_F64_Acos(_cyhH::F64);
           D1 = _cyhG::F64;
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.395488957 UTC

[section ""data" . GHC.PrimopWrappers.atanDouble#_closure" {
     GHC.PrimopWrappers.atanDouble#_closure:
         const GHC.PrimopWrappers.atanDouble#_info;
 },
 GHC.PrimopWrappers.atanDouble#_entry() //  [D1]
         { info_tbl: [(cyhW,
                       label: GHC.PrimopWrappers.atanDouble#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyhW: // global
           _cyhV::F64 = D1;
           (_cyhU::F64) = call MO_F64_Atan(_cyhV::F64);
           D1 = _cyhU::F64;
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.399070072 UTC

[section ""data" . GHC.PrimopWrappers.sinhDouble#_closure" {
     GHC.PrimopWrappers.sinhDouble#_closure:
         const GHC.PrimopWrappers.sinhDouble#_info;
 },
 GHC.PrimopWrappers.sinhDouble#_entry() //  [D1]
         { info_tbl: [(cyia,
                       label: GHC.PrimopWrappers.sinhDouble#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyia: // global
           _cyi9::F64 = D1;
           (_cyi8::F64) = call MO_F64_Sinh(_cyi9::F64);
           D1 = _cyi8::F64;
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.402553025 UTC

[section ""data" . GHC.PrimopWrappers.coshDouble#_closure" {
     GHC.PrimopWrappers.coshDouble#_closure:
         const GHC.PrimopWrappers.coshDouble#_info;
 },
 GHC.PrimopWrappers.coshDouble#_entry() //  [D1]
         { info_tbl: [(cyio,
                       label: GHC.PrimopWrappers.coshDouble#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyio: // global
           _cyin::F64 = D1;
           (_cyim::F64) = call MO_F64_Cosh(_cyin::F64);
           D1 = _cyim::F64;
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.406071533 UTC

[section ""data" . GHC.PrimopWrappers.tanhDouble#_closure" {
     GHC.PrimopWrappers.tanhDouble#_closure:
         const GHC.PrimopWrappers.tanhDouble#_info;
 },
 GHC.PrimopWrappers.tanhDouble#_entry() //  [D1]
         { info_tbl: [(cyiC,
                       label: GHC.PrimopWrappers.tanhDouble#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyiC: // global
           _cyiB::F64 = D1;
           (_cyiA::F64) = call MO_F64_Tanh(_cyiB::F64);
           D1 = _cyiA::F64;
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.410489388 UTC

[section ""data" . GHC.PrimopWrappers.**##_closure" {
     GHC.PrimopWrappers.**##_closure:
         const GHC.PrimopWrappers.**##_info;
 },
 GHC.PrimopWrappers.**##_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyiL: // global
           D2 = F64[Sp + 8];
           D1 = F64[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.**##_entry(D2,
                                              D1,
                                              R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.**##_entry() //  [D1, D2]
         { info_tbl: [(cyiS,
                       label: GHC.PrimopWrappers.**##_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyiS: // global
           _cyiQ::F64 = D1;
           _cyiR::F64 = D2;
           (_cyiP::F64) = call MO_F64_Pwr(_cyiQ::F64, _cyiR::F64);
           D1 = _cyiP::F64;
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.414927908 UTC

[section ""data" . GHC.PrimopWrappers.decodeDouble_2Int#_closure" {
     GHC.PrimopWrappers.decodeDouble_2Int#_closure:
         const GHC.PrimopWrappers.decodeDouble_2Int#_info;
 },
 GHC.PrimopWrappers.decodeDouble_2Int#_entry() //  [D1]
         { info_tbl: [(cyj7,
                       label: GHC.PrimopWrappers.decodeDouble_2Int#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyj7: // global
           D1 = D1;
           call stg_decodeDouble_2Int#(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.418097826 UTC

[section ""data" . GHC.PrimopWrappers.decodeDouble_Int64#_closure" {
     GHC.PrimopWrappers.decodeDouble_Int64#_closure:
         const GHC.PrimopWrappers.decodeDouble_Int64#_info;
 },
 GHC.PrimopWrappers.decodeDouble_Int64#_entry() //  [D1]
         { info_tbl: [(cyji,
                       label: GHC.PrimopWrappers.decodeDouble_Int64#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyji: // global
           D1 = D1;
           call stg_decodeDouble_Int64#(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.421731621 UTC

[section ""data" . GHC.PrimopWrappers.gtFloat#_closure" {
     GHC.PrimopWrappers.gtFloat#_closure:
         const GHC.PrimopWrappers.gtFloat#_info;
 },
 GHC.PrimopWrappers.gtFloat#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyjq: // global
           F2 = F32[Sp + 8];
           F1 = F32[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.gtFloat#_entry(F2,
                                                  F1,
                                                  R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.gtFloat#_entry() //  [F1, F2]
         { info_tbl: [(cyjv,
                       label: GHC.PrimopWrappers.gtFloat#_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyjv: // global
           R1 = %MO_F_Gt_W32(F1, F2);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.426159837 UTC

[section ""data" . GHC.PrimopWrappers.geFloat#_closure" {
     GHC.PrimopWrappers.geFloat#_closure:
         const GHC.PrimopWrappers.geFloat#_info;
 },
 GHC.PrimopWrappers.geFloat#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyjI: // global
           F2 = F32[Sp + 8];
           F1 = F32[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.geFloat#_entry(F2,
                                                  F1,
                                                  R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.geFloat#_entry() //  [F1, F2]
         { info_tbl: [(cyjN,
                       label: GHC.PrimopWrappers.geFloat#_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyjN: // global
           R1 = %MO_F_Ge_W32(F1, F2);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.430521981 UTC

[section ""data" . GHC.PrimopWrappers.eqFloat#_closure" {
     GHC.PrimopWrappers.eqFloat#_closure:
         const GHC.PrimopWrappers.eqFloat#_info;
 },
 GHC.PrimopWrappers.eqFloat#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyk0: // global
           F2 = F32[Sp + 8];
           F1 = F32[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.eqFloat#_entry(F2,
                                                  F1,
                                                  R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.eqFloat#_entry() //  [F1, F2]
         { info_tbl: [(cyk5,
                       label: GHC.PrimopWrappers.eqFloat#_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyk5: // global
           R1 = %MO_F_Eq_W32(F1, F2);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.435565867 UTC

[section ""data" . GHC.PrimopWrappers.neFloat#_closure" {
     GHC.PrimopWrappers.neFloat#_closure:
         const GHC.PrimopWrappers.neFloat#_info;
 },
 GHC.PrimopWrappers.neFloat#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyki: // global
           F2 = F32[Sp + 8];
           F1 = F32[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.neFloat#_entry(F2,
                                                  F1,
                                                  R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.neFloat#_entry() //  [F1, F2]
         { info_tbl: [(cykn,
                       label: GHC.PrimopWrappers.neFloat#_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cykn: // global
           R1 = %MO_F_Ne_W32(F1, F2);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.440948836 UTC

[section ""data" . GHC.PrimopWrappers.ltFloat#_closure" {
     GHC.PrimopWrappers.ltFloat#_closure:
         const GHC.PrimopWrappers.ltFloat#_info;
 },
 GHC.PrimopWrappers.ltFloat#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cykA: // global
           F2 = F32[Sp + 8];
           F1 = F32[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.ltFloat#_entry(F2,
                                                  F1,
                                                  R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.ltFloat#_entry() //  [F1, F2]
         { info_tbl: [(cykF,
                       label: GHC.PrimopWrappers.ltFloat#_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cykF: // global
           R1 = %MO_F_Lt_W32(F1, F2);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.445605818 UTC

[section ""data" . GHC.PrimopWrappers.leFloat#_closure" {
     GHC.PrimopWrappers.leFloat#_closure:
         const GHC.PrimopWrappers.leFloat#_info;
 },
 GHC.PrimopWrappers.leFloat#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cykS: // global
           F2 = F32[Sp + 8];
           F1 = F32[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.leFloat#_entry(F2,
                                                  F1,
                                                  R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.leFloat#_entry() //  [F1, F2]
         { info_tbl: [(cykX,
                       label: GHC.PrimopWrappers.leFloat#_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cykX: // global
           R1 = %MO_F_Le_W32(F1, F2);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.450150801 UTC

[section ""data" . GHC.PrimopWrappers.plusFloat#_closure" {
     GHC.PrimopWrappers.plusFloat#_closure:
         const GHC.PrimopWrappers.plusFloat#_info;
 },
 GHC.PrimopWrappers.plusFloat#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyla: // global
           F2 = F32[Sp + 8];
           F1 = F32[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.plusFloat#_entry(F2,
                                                    F1,
                                                    R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.plusFloat#_entry() //  [F1, F2]
         { info_tbl: [(cylf,
                       label: GHC.PrimopWrappers.plusFloat#_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cylf: // global
           F1 = %MO_F_Add_W32(F1, F2);
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.455033397 UTC

[section ""data" . GHC.PrimopWrappers.minusFloat#_closure" {
     GHC.PrimopWrappers.minusFloat#_closure:
         const GHC.PrimopWrappers.minusFloat#_info;
 },
 GHC.PrimopWrappers.minusFloat#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cylr: // global
           F2 = F32[Sp + 8];
           F1 = F32[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.minusFloat#_entry(F2,
                                                     F1,
                                                     R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.minusFloat#_entry() //  [F1, F2]
         { info_tbl: [(cylw,
                       label: GHC.PrimopWrappers.minusFloat#_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cylw: // global
           F1 = %MO_F_Sub_W32(F1, F2);
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.459640458 UTC

[section ""data" . GHC.PrimopWrappers.timesFloat#_closure" {
     GHC.PrimopWrappers.timesFloat#_closure:
         const GHC.PrimopWrappers.timesFloat#_info;
 },
 GHC.PrimopWrappers.timesFloat#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cylI: // global
           F2 = F32[Sp + 8];
           F1 = F32[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.timesFloat#_entry(F2,
                                                     F1,
                                                     R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.timesFloat#_entry() //  [F1, F2]
         { info_tbl: [(cylN,
                       label: GHC.PrimopWrappers.timesFloat#_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cylN: // global
           F1 = %MO_F_Mul_W32(F1, F2);
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.464732833 UTC

[section ""data" . GHC.PrimopWrappers.divideFloat#_closure" {
     GHC.PrimopWrappers.divideFloat#_closure:
         const GHC.PrimopWrappers.divideFloat#_info;
 },
 GHC.PrimopWrappers.divideFloat#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cylZ: // global
           F2 = F32[Sp + 8];
           F1 = F32[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.divideFloat#_entry(F2,
                                                      F1,
                                                      R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.divideFloat#_entry() //  [F1, F2]
         { info_tbl: [(cym4,
                       label: GHC.PrimopWrappers.divideFloat#_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cym4: // global
           F1 = %MO_F_Quot_W32(F1, F2);
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.469190089 UTC

[section ""data" . GHC.PrimopWrappers.negateFloat#_closure" {
     GHC.PrimopWrappers.negateFloat#_closure:
         const GHC.PrimopWrappers.negateFloat#_info;
 },
 GHC.PrimopWrappers.negateFloat#_entry() //  [F1]
         { info_tbl: [(cymk,
                       label: GHC.PrimopWrappers.negateFloat#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cymk: // global
           F1 = %MO_F_Neg_W32(F1);
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.472991423 UTC

[section ""data" . GHC.PrimopWrappers.fabsFloat#_closure" {
     GHC.PrimopWrappers.fabsFloat#_closure:
         const GHC.PrimopWrappers.fabsFloat#_info;
 },
 GHC.PrimopWrappers.fabsFloat#_entry() //  [F1]
         { info_tbl: [(cymz,
                       label: GHC.PrimopWrappers.fabsFloat#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cymz: // global
           _B1::F32 = F1;
           (_cymy::F32) = call MO_F32_Fabs(_B1::F32);
           F1 = _cymy::F32;
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.476521033 UTC

[section ""data" . GHC.PrimopWrappers.float2Int#_closure" {
     GHC.PrimopWrappers.float2Int#_closure:
         const GHC.PrimopWrappers.float2Int#_info;
 },
 GHC.PrimopWrappers.float2Int#_entry() //  [F1]
         { info_tbl: [(cymO,
                       label: GHC.PrimopWrappers.float2Int#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cymO: // global
           R1 = %MO_FS_Conv_W32_W64(F1);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.480245112 UTC

[section ""data" . GHC.PrimopWrappers.expFloat#_closure" {
     GHC.PrimopWrappers.expFloat#_closure:
         const GHC.PrimopWrappers.expFloat#_info;
 },
 GHC.PrimopWrappers.expFloat#_entry() //  [F1]
         { info_tbl: [(cyn2,
                       label: GHC.PrimopWrappers.expFloat#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyn2: // global
           _cyn1::F32 = F1;
           (_cyn0::F32) = call MO_F32_Exp(_cyn1::F32);
           F1 = _cyn0::F32;
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.483827503 UTC

[section ""data" . GHC.PrimopWrappers.logFloat#_closure" {
     GHC.PrimopWrappers.logFloat#_closure:
         const GHC.PrimopWrappers.logFloat#_info;
 },
 GHC.PrimopWrappers.logFloat#_entry() //  [F1]
         { info_tbl: [(cyng,
                       label: GHC.PrimopWrappers.logFloat#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyng: // global
           _cynf::F32 = F1;
           (_cyne::F32) = call MO_F32_Log(_cynf::F32);
           F1 = _cyne::F32;
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.487724082 UTC

[section ""data" . GHC.PrimopWrappers.sqrtFloat#_closure" {
     GHC.PrimopWrappers.sqrtFloat#_closure:
         const GHC.PrimopWrappers.sqrtFloat#_info;
 },
 GHC.PrimopWrappers.sqrtFloat#_entry() //  [F1]
         { info_tbl: [(cynu,
                       label: GHC.PrimopWrappers.sqrtFloat#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cynu: // global
           _cynt::F32 = F1;
           (_cyns::F32) = call MO_F32_Sqrt(_cynt::F32);
           F1 = _cyns::F32;
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.491406032 UTC

[section ""data" . GHC.PrimopWrappers.sinFloat#_closure" {
     GHC.PrimopWrappers.sinFloat#_closure:
         const GHC.PrimopWrappers.sinFloat#_info;
 },
 GHC.PrimopWrappers.sinFloat#_entry() //  [F1]
         { info_tbl: [(cynI,
                       label: GHC.PrimopWrappers.sinFloat#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cynI: // global
           _cynH::F32 = F1;
           (_cynG::F32) = call MO_F32_Sin(_cynH::F32);
           F1 = _cynG::F32;
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.494721812 UTC

[section ""data" . GHC.PrimopWrappers.cosFloat#_closure" {
     GHC.PrimopWrappers.cosFloat#_closure:
         const GHC.PrimopWrappers.cosFloat#_info;
 },
 GHC.PrimopWrappers.cosFloat#_entry() //  [F1]
         { info_tbl: [(cynW,
                       label: GHC.PrimopWrappers.cosFloat#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cynW: // global
           _cynV::F32 = F1;
           (_cynU::F32) = call MO_F32_Cos(_cynV::F32);
           F1 = _cynU::F32;
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.498187384 UTC

[section ""data" . GHC.PrimopWrappers.tanFloat#_closure" {
     GHC.PrimopWrappers.tanFloat#_closure:
         const GHC.PrimopWrappers.tanFloat#_info;
 },
 GHC.PrimopWrappers.tanFloat#_entry() //  [F1]
         { info_tbl: [(cyoa,
                       label: GHC.PrimopWrappers.tanFloat#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyoa: // global
           _cyo9::F32 = F1;
           (_cyo8::F32) = call MO_F32_Tan(_cyo9::F32);
           F1 = _cyo8::F32;
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.501506102 UTC

[section ""data" . GHC.PrimopWrappers.asinFloat#_closure" {
     GHC.PrimopWrappers.asinFloat#_closure:
         const GHC.PrimopWrappers.asinFloat#_info;
 },
 GHC.PrimopWrappers.asinFloat#_entry() //  [F1]
         { info_tbl: [(cyoo,
                       label: GHC.PrimopWrappers.asinFloat#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyoo: // global
           _cyon::F32 = F1;
           (_cyom::F32) = call MO_F32_Asin(_cyon::F32);
           F1 = _cyom::F32;
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.50488548 UTC

[section ""data" . GHC.PrimopWrappers.acosFloat#_closure" {
     GHC.PrimopWrappers.acosFloat#_closure:
         const GHC.PrimopWrappers.acosFloat#_info;
 },
 GHC.PrimopWrappers.acosFloat#_entry() //  [F1]
         { info_tbl: [(cyoC,
                       label: GHC.PrimopWrappers.acosFloat#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyoC: // global
           _cyoB::F32 = F1;
           (_cyoA::F32) = call MO_F32_Acos(_cyoB::F32);
           F1 = _cyoA::F32;
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.508365293 UTC

[section ""data" . GHC.PrimopWrappers.atanFloat#_closure" {
     GHC.PrimopWrappers.atanFloat#_closure:
         const GHC.PrimopWrappers.atanFloat#_info;
 },
 GHC.PrimopWrappers.atanFloat#_entry() //  [F1]
         { info_tbl: [(cyoQ,
                       label: GHC.PrimopWrappers.atanFloat#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyoQ: // global
           _cyoP::F32 = F1;
           (_cyoO::F32) = call MO_F32_Atan(_cyoP::F32);
           F1 = _cyoO::F32;
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.512160026 UTC

[section ""data" . GHC.PrimopWrappers.sinhFloat#_closure" {
     GHC.PrimopWrappers.sinhFloat#_closure:
         const GHC.PrimopWrappers.sinhFloat#_info;
 },
 GHC.PrimopWrappers.sinhFloat#_entry() //  [F1]
         { info_tbl: [(cyp4,
                       label: GHC.PrimopWrappers.sinhFloat#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyp4: // global
           _cyp3::F32 = F1;
           (_cyp2::F32) = call MO_F32_Sinh(_cyp3::F32);
           F1 = _cyp2::F32;
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.516160292 UTC

[section ""data" . GHC.PrimopWrappers.coshFloat#_closure" {
     GHC.PrimopWrappers.coshFloat#_closure:
         const GHC.PrimopWrappers.coshFloat#_info;
 },
 GHC.PrimopWrappers.coshFloat#_entry() //  [F1]
         { info_tbl: [(cypi,
                       label: GHC.PrimopWrappers.coshFloat#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cypi: // global
           _cyph::F32 = F1;
           (_cypg::F32) = call MO_F32_Cosh(_cyph::F32);
           F1 = _cypg::F32;
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.519905691 UTC

[section ""data" . GHC.PrimopWrappers.tanhFloat#_closure" {
     GHC.PrimopWrappers.tanhFloat#_closure:
         const GHC.PrimopWrappers.tanhFloat#_info;
 },
 GHC.PrimopWrappers.tanhFloat#_entry() //  [F1]
         { info_tbl: [(cypw,
                       label: GHC.PrimopWrappers.tanhFloat#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cypw: // global
           _cypv::F32 = F1;
           (_cypu::F32) = call MO_F32_Tanh(_cypv::F32);
           F1 = _cypu::F32;
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.523561105 UTC

[section ""data" . GHC.PrimopWrappers.powerFloat#_closure" {
     GHC.PrimopWrappers.powerFloat#_closure:
         const GHC.PrimopWrappers.powerFloat#_info;
 },
 GHC.PrimopWrappers.powerFloat#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cypF: // global
           F2 = F32[Sp + 8];
           F1 = F32[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.powerFloat#_entry(F2,
                                                     F1,
                                                     R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.powerFloat#_entry() //  [F1, F2]
         { info_tbl: [(cypM,
                       label: GHC.PrimopWrappers.powerFloat#_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cypM: // global
           _cypK::F32 = F1;
           _cypL::F32 = F2;
           (_cypJ::F32) = call MO_F32_Pwr(_cypK::F32, _cypL::F32);
           F1 = _cypJ::F32;
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.528171031 UTC

[section ""data" . GHC.PrimopWrappers.float2Double#_closure" {
     GHC.PrimopWrappers.float2Double#_closure:
         const GHC.PrimopWrappers.float2Double#_info;
 },
 GHC.PrimopWrappers.float2Double#_entry() //  [F1]
         { info_tbl: [(cyq2,
                       label: GHC.PrimopWrappers.float2Double#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyq2: // global
           D1 = %MO_FF_Conv_W32_W64(F1);
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.532123014 UTC

[section ""data" . GHC.PrimopWrappers.decodeFloat_Int#_closure" {
     GHC.PrimopWrappers.decodeFloat_Int#_closure:
         const GHC.PrimopWrappers.decodeFloat_Int#_info;
 },
 GHC.PrimopWrappers.decodeFloat_Int#_entry() //  [F1]
         { info_tbl: [(cyqe,
                       label: GHC.PrimopWrappers.decodeFloat_Int#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyqe: // global
           F1 = F1;
           call stg_decodeFloat_Int#(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.535470799 UTC

[section ""data" . GHC.PrimopWrappers.newArray#_closure" {
     GHC.PrimopWrappers.newArray#_closure:
         const GHC.PrimopWrappers.newArray#_info;
 },
 GHC.PrimopWrappers.newArray#_entry() //  [R2, R3]
         { info_tbl: [(cyqp,
                       label: GHC.PrimopWrappers.newArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 13} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyqp: // global
           _B3::I64 = R2;
           R2 = R3;
           R1 = _B3::I64;
           call stg_newArray#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.539677352 UTC

[section ""data" . GHC.PrimopWrappers.sameMutableArray#_closure" {
     GHC.PrimopWrappers.sameMutableArray#_closure:
         const GHC.PrimopWrappers.sameMutableArray#_info;
 },
 GHC.PrimopWrappers.sameMutableArray#_entry() //  [R2, R3]
         { info_tbl: [(cyqB,
                       label: GHC.PrimopWrappers.sameMutableArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyqB: // global
           R1 = R2 == R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.543124406 UTC

[section ""data" . GHC.PrimopWrappers.readArray#_closure" {
     GHC.PrimopWrappers.readArray#_closure:
         const GHC.PrimopWrappers.readArray#_info;
 },
 GHC.PrimopWrappers.readArray#_entry() //  [R2, R3]
         { info_tbl: [(cyqP,
                       label: GHC.PrimopWrappers.readArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyqP: // global
           R1 = P64[(R2 + 24) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.546702827 UTC

[section ""data" . GHC.PrimopWrappers.writeArray#_closure" {
     GHC.PrimopWrappers.writeArray#_closure:
         const GHC.PrimopWrappers.writeArray#_info;
 },
 GHC.PrimopWrappers.writeArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cyr1,
                       label: GHC.PrimopWrappers.writeArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 21} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyr1: // global
           _B2::P64 = R4;
           _B3::I64 = R3;
           call MO_WriteBarrier();
           P64[(R2 + 24) + (_B3::I64 << 3)] = _B2::P64;
           I64[R2] = stg_MUT_ARR_PTRS_DIRTY_info;
           I8[(R2 + 24) + ((I64[R2 + 8] << 3) + (_B3::I64 >> 7))] = 1 :: W8;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.55047119 UTC

[section ""data" . GHC.PrimopWrappers.sizeofArray#_closure" {
     GHC.PrimopWrappers.sizeofArray#_closure:
         const GHC.PrimopWrappers.sizeofArray#_info;
 },
 GHC.PrimopWrappers.sizeofArray#_entry() //  [R2]
         { info_tbl: [(cyri,
                       label: GHC.PrimopWrappers.sizeofArray#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyri: // global
           R1 = I64[R2 + 8];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.553895969 UTC

[section ""data" . GHC.PrimopWrappers.sizeofMutableArray#_closure" {
     GHC.PrimopWrappers.sizeofMutableArray#_closure:
         const GHC.PrimopWrappers.sizeofMutableArray#_info;
 },
 GHC.PrimopWrappers.sizeofMutableArray#_entry() //  [R2]
         { info_tbl: [(cyrv,
                       label: GHC.PrimopWrappers.sizeofMutableArray#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyrv: // global
           R1 = I64[R2 + 8];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.557806567 UTC

[section ""data" . GHC.PrimopWrappers.indexArray#_closure" {
     GHC.PrimopWrappers.indexArray#_closure:
         const GHC.PrimopWrappers.indexArray#_info;
 },
 GHC.PrimopWrappers.indexArray#_entry() //  [R2, R3]
         { info_tbl: [(cyrI,
                       label: GHC.PrimopWrappers.indexArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyrI: // global
           R1 = P64[(R2 + 24) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.56128732 UTC

[section ""data" . GHC.PrimopWrappers.unsafeFreezeArray#_closure" {
     GHC.PrimopWrappers.unsafeFreezeArray#_closure:
         const GHC.PrimopWrappers.unsafeFreezeArray#_info;
 },
 GHC.PrimopWrappers.unsafeFreezeArray#_entry() //  [R2]
         { info_tbl: [(cyrV,
                       label: GHC.PrimopWrappers.unsafeFreezeArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyrV: // global
           I64[R2] = stg_MUT_ARR_PTRS_FROZEN0_info;
           R1 = R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.56513681 UTC

[section ""data" . GHC.PrimopWrappers.unsafeThawArray#_closure" {
     GHC.PrimopWrappers.unsafeThawArray#_closure:
         const GHC.PrimopWrappers.unsafeThawArray#_info;
 },
 GHC.PrimopWrappers.unsafeThawArray#_entry() //  [R2]
         { info_tbl: [(cys7,
                       label: GHC.PrimopWrappers.unsafeThawArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cys7: // global
           R1 = R2;
           call stg_unsafeThawArray#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.568528489 UTC

[section ""data" . GHC.PrimopWrappers.copyArray#_closure" {
     GHC.PrimopWrappers.copyArray#_closure:
         const GHC.PrimopWrappers.copyArray#_info;
 },
 GHC.PrimopWrappers.copyArray#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cysf: // global
           R6 = I64[Sp + 32];
           R5 = I64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 40;
           call GHC.PrimopWrappers.copyArray#_entry(R6,
                                                    R5,
                                                    R4,
                                                    R3,
                                                    R2,
                                                    R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.copyArray#_entry() //  [R2, R3, R4, R5, R6]
         { info_tbl: [(cysj,
                       label: GHC.PrimopWrappers.copyArray#_info
                       rep:HeapRep static {
                             Fun {arity: 6
                                  fun_type: ArgGen [False, True, False, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cysj: // global
           _B3::I64 = R5;
           R5 = R6;
           _B4::P64 = R4;
           R4 = _B3::I64;
           _B5::I64 = R3;
           R3 = _B4::P64;
           _B6::P64 = R2;
           R2 = _B5::I64;
           R1 = _B6::P64;
           call stg_copyArray#(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.573490723 UTC

[section ""data" . GHC.PrimopWrappers.copyMutableArray#_closure" {
     GHC.PrimopWrappers.copyMutableArray#_closure:
         const GHC.PrimopWrappers.copyMutableArray#_info;
 },
 GHC.PrimopWrappers.copyMutableArray#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyst: // global
           R6 = I64[Sp + 32];
           R5 = I64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 40;
           call GHC.PrimopWrappers.copyMutableArray#_entry(R6,
                                                           R5,
                                                           R4,
                                                           R3,
                                                           R2,
                                                           R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.copyMutableArray#_entry() //  [R2, R3, R4, R5,
                                                   R6]
         { info_tbl: [(cysx,
                       label: GHC.PrimopWrappers.copyMutableArray#_info
                       rep:HeapRep static {
                             Fun {arity: 6
                                  fun_type: ArgGen [False, True, False, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cysx: // global
           _B3::I64 = R5;
           R5 = R6;
           _B4::P64 = R4;
           R4 = _B3::I64;
           _B5::I64 = R3;
           R3 = _B4::P64;
           _B6::P64 = R2;
           R2 = _B5::I64;
           R1 = _B6::P64;
           call stg_copyMutableArray#(R5,
                                      R4,
                                      R3,
                                      R2,
                                      R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.578234074 UTC

[section ""data" . GHC.PrimopWrappers.cloneArray#_closure" {
     GHC.PrimopWrappers.cloneArray#_closure:
         const GHC.PrimopWrappers.cloneArray#_info;
 },
 GHC.PrimopWrappers.cloneArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cysK,
                       label: GHC.PrimopWrappers.cloneArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cysK: // global
           _B2::I64 = R3;
           R3 = R4;
           _B3::P64 = R2;
           R2 = _B2::I64;
           R1 = _B3::P64;
           call stg_cloneArray#(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.581863096 UTC

[section ""data" . GHC.PrimopWrappers.cloneMutableArray#_closure" {
     GHC.PrimopWrappers.cloneMutableArray#_closure:
         const GHC.PrimopWrappers.cloneMutableArray#_info;
 },
 GHC.PrimopWrappers.cloneMutableArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cysV,
                       label: GHC.PrimopWrappers.cloneMutableArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cysV: // global
           _B3::I64 = R3;
           R3 = R4;
           _B4::P64 = R2;
           R2 = _B3::I64;
           R1 = _B4::P64;
           call stg_cloneMutableArray#(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.585362212 UTC

[section ""data" . GHC.PrimopWrappers.freezeArray#_closure" {
     GHC.PrimopWrappers.freezeArray#_closure:
         const GHC.PrimopWrappers.freezeArray#_info;
 },
 GHC.PrimopWrappers.freezeArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cyt6,
                       label: GHC.PrimopWrappers.freezeArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyt6: // global
           _B3::I64 = R3;
           R3 = R4;
           _B4::P64 = R2;
           R2 = _B3::I64;
           R1 = _B4::P64;
           call stg_freezeArray#(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.589609211 UTC

[section ""data" . GHC.PrimopWrappers.thawArray#_closure" {
     GHC.PrimopWrappers.thawArray#_closure:
         const GHC.PrimopWrappers.thawArray#_info;
 },
 GHC.PrimopWrappers.thawArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cyth,
                       label: GHC.PrimopWrappers.thawArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyth: // global
           _B3::I64 = R3;
           R3 = R4;
           _B4::P64 = R2;
           R2 = _B3::I64;
           R1 = _B4::P64;
           call stg_thawArray#(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.593829538 UTC

[section ""data" . GHC.PrimopWrappers.casArray#_closure" {
     GHC.PrimopWrappers.casArray#_closure:
         const GHC.PrimopWrappers.casArray#_info;
 },
 GHC.PrimopWrappers.casArray#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cytp: // global
           R5 = P64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 32;
           call GHC.PrimopWrappers.casArray#_entry(R5,
                                                   R4,
                                                   R3,
                                                   R2,
                                                   R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.casArray#_entry() //  [R2, R3, R4, R5]
         { info_tbl: [(cytt,
                       label: GHC.PrimopWrappers.casArray#_info
                       rep:HeapRep static {
                             Fun {arity: 5 fun_type: ArgGen [False, True, False, False]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cytt: // global
           _B3::P64 = R4;
           R4 = R5;
           _B4::I64 = R3;
           R3 = _B3::P64;
           _B5::P64 = R2;
           R2 = _B4::I64;
           R1 = _B5::P64;
           call stg_casArray#(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.598455862 UTC

[section ""data" . GHC.PrimopWrappers.newSmallArray#_closure" {
     GHC.PrimopWrappers.newSmallArray#_closure:
         const GHC.PrimopWrappers.newSmallArray#_info;
 },
 GHC.PrimopWrappers.newSmallArray#_entry() //  [R2, R3]
         { info_tbl: [(cytG,
                       label: GHC.PrimopWrappers.newSmallArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 13} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cytG: // global
           _B3::I64 = R2;
           R2 = R3;
           R1 = _B3::I64;
           call stg_newSmallArray#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.602090686 UTC

[section ""data" . GHC.PrimopWrappers.sameSmallMutableArray#_closure" {
     GHC.PrimopWrappers.sameSmallMutableArray#_closure:
         const GHC.PrimopWrappers.sameSmallMutableArray#_info;
 },
 GHC.PrimopWrappers.sameSmallMutableArray#_entry() //  [R2, R3]
         { info_tbl: [(cytS,
                       label: GHC.PrimopWrappers.sameSmallMutableArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cytS: // global
           R1 = R2 == R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.605452246 UTC

[section ""data" . GHC.PrimopWrappers.readSmallArray#_closure" {
     GHC.PrimopWrappers.readSmallArray#_closure:
         const GHC.PrimopWrappers.readSmallArray#_info;
 },
 GHC.PrimopWrappers.readSmallArray#_entry() //  [R2, R3]
         { info_tbl: [(cyu6,
                       label: GHC.PrimopWrappers.readSmallArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyu6: // global
           R1 = P64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.608948427 UTC

[section ""data" . GHC.PrimopWrappers.writeSmallArray#_closure" {
     GHC.PrimopWrappers.writeSmallArray#_closure:
         const GHC.PrimopWrappers.writeSmallArray#_info;
 },
 GHC.PrimopWrappers.writeSmallArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cyui,
                       label: GHC.PrimopWrappers.writeSmallArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 21} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyui: // global
           P64[(R2 + 16) + (R3 << 3)] = R4;
           I64[R2] = stg_SMALL_MUT_ARR_PTRS_DIRTY_info;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.612659358 UTC

[section ""data" . GHC.PrimopWrappers.sizeofSmallArray#_closure" {
     GHC.PrimopWrappers.sizeofSmallArray#_closure:
         const GHC.PrimopWrappers.sizeofSmallArray#_info;
 },
 GHC.PrimopWrappers.sizeofSmallArray#_entry() //  [R2]
         { info_tbl: [(cyuv,
                       label: GHC.PrimopWrappers.sizeofSmallArray#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyuv: // global
           R1 = I64[R2 + 8];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.617028679 UTC

[section ""data" . GHC.PrimopWrappers.sizeofSmallMutableArray#_closure" {
     GHC.PrimopWrappers.sizeofSmallMutableArray#_closure:
         const GHC.PrimopWrappers.sizeofSmallMutableArray#_info;
 },
 GHC.PrimopWrappers.sizeofSmallMutableArray#_entry() //  [R2]
         { info_tbl: [(cyuI,
                       label: GHC.PrimopWrappers.sizeofSmallMutableArray#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyuI: // global
           R1 = I64[R2 + 8];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.62062317 UTC

[section ""data" . GHC.PrimopWrappers.indexSmallArray#_closure" {
     GHC.PrimopWrappers.indexSmallArray#_closure:
         const GHC.PrimopWrappers.indexSmallArray#_info;
 },
 GHC.PrimopWrappers.indexSmallArray#_entry() //  [R2, R3]
         { info_tbl: [(cyuV,
                       label: GHC.PrimopWrappers.indexSmallArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyuV: // global
           R1 = P64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.624334857 UTC

[section ""data" . GHC.PrimopWrappers.unsafeFreezeSmallArray#_closure" {
     GHC.PrimopWrappers.unsafeFreezeSmallArray#_closure:
         const GHC.PrimopWrappers.unsafeFreezeSmallArray#_info;
 },
 GHC.PrimopWrappers.unsafeFreezeSmallArray#_entry() //  [R2]
         { info_tbl: [(cyv8,
                       label: GHC.PrimopWrappers.unsafeFreezeSmallArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyv8: // global
           I64[R2] = stg_SMALL_MUT_ARR_PTRS_FROZEN0_info;
           R1 = R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.627739946 UTC

[section ""data" . GHC.PrimopWrappers.unsafeThawSmallArray#_closure" {
     GHC.PrimopWrappers.unsafeThawSmallArray#_closure:
         const GHC.PrimopWrappers.unsafeThawSmallArray#_info;
 },
 GHC.PrimopWrappers.unsafeThawSmallArray#_entry() //  [R2]
         { info_tbl: [(cyvk,
                       label: GHC.PrimopWrappers.unsafeThawSmallArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyvk: // global
           R1 = R2;
           call stg_unsafeThawSmallArray#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.631234625 UTC

[section ""data" . GHC.PrimopWrappers.copySmallArray#_closure" {
     GHC.PrimopWrappers.copySmallArray#_closure:
         const GHC.PrimopWrappers.copySmallArray#_info;
 },
 GHC.PrimopWrappers.copySmallArray#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyvs: // global
           R6 = I64[Sp + 32];
           R5 = I64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 40;
           call GHC.PrimopWrappers.copySmallArray#_entry(R6,
                                                         R5,
                                                         R4,
                                                         R3,
                                                         R2,
                                                         R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.copySmallArray#_entry() //  [R2, R3, R4, R5, R6]
         { info_tbl: [(cyvw,
                       label: GHC.PrimopWrappers.copySmallArray#_info
                       rep:HeapRep static {
                             Fun {arity: 6
                                  fun_type: ArgGen [False, True, False, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyvw: // global
           _B3::I64 = R5;
           R5 = R6;
           _B4::P64 = R4;
           R4 = _B3::I64;
           _B5::I64 = R3;
           R3 = _B4::P64;
           _B6::P64 = R2;
           R2 = _B5::I64;
           R1 = _B6::P64;
           call stg_copySmallArray#(R5,
                                    R4,
                                    R3,
                                    R2,
                                    R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.636175644 UTC

[section ""data" . GHC.PrimopWrappers.copySmallMutableArray#_closure" {
     GHC.PrimopWrappers.copySmallMutableArray#_closure:
         const GHC.PrimopWrappers.copySmallMutableArray#_info;
 },
 GHC.PrimopWrappers.copySmallMutableArray#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyvG: // global
           R6 = I64[Sp + 32];
           R5 = I64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 40;
           call GHC.PrimopWrappers.copySmallMutableArray#_entry(R6,
                                                                R5,
                                                                R4,
                                                                R3,
                                                                R2,
                                                                R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.copySmallMutableArray#_entry() //  [R2, R3, R4,
                                                        R5, R6]
         { info_tbl: [(cyvK,
                       label: GHC.PrimopWrappers.copySmallMutableArray#_info
                       rep:HeapRep static {
                             Fun {arity: 6
                                  fun_type: ArgGen [False, True, False, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyvK: // global
           _B3::I64 = R5;
           R5 = R6;
           _B4::P64 = R4;
           R4 = _B3::I64;
           _B5::I64 = R3;
           R3 = _B4::P64;
           _B6::P64 = R2;
           R2 = _B5::I64;
           R1 = _B6::P64;
           call stg_copySmallMutableArray#(R5,
                                           R4,
                                           R3,
                                           R2,
                                           R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.641834975 UTC

[section ""data" . GHC.PrimopWrappers.cloneSmallArray#_closure" {
     GHC.PrimopWrappers.cloneSmallArray#_closure:
         const GHC.PrimopWrappers.cloneSmallArray#_info;
 },
 GHC.PrimopWrappers.cloneSmallArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cyvX,
                       label: GHC.PrimopWrappers.cloneSmallArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyvX: // global
           _B2::I64 = R3;
           R3 = R4;
           _B3::P64 = R2;
           R2 = _B2::I64;
           R1 = _B3::P64;
           call stg_cloneSmallArray#(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.645542268 UTC

[section ""data" . GHC.PrimopWrappers.cloneSmallMutableArray#_closure" {
     GHC.PrimopWrappers.cloneSmallMutableArray#_closure:
         const GHC.PrimopWrappers.cloneSmallMutableArray#_info;
 },
 GHC.PrimopWrappers.cloneSmallMutableArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cyw8,
                       label: GHC.PrimopWrappers.cloneSmallMutableArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyw8: // global
           _B3::I64 = R3;
           R3 = R4;
           _B4::P64 = R2;
           R2 = _B3::I64;
           R1 = _B4::P64;
           call stg_cloneSmallMutableArray#(R3,
                                            R2,
                                            R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.649075465 UTC

[section ""data" . GHC.PrimopWrappers.freezeSmallArray#_closure" {
     GHC.PrimopWrappers.freezeSmallArray#_closure:
         const GHC.PrimopWrappers.freezeSmallArray#_info;
 },
 GHC.PrimopWrappers.freezeSmallArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cywj,
                       label: GHC.PrimopWrappers.freezeSmallArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cywj: // global
           _B3::I64 = R3;
           R3 = R4;
           _B4::P64 = R2;
           R2 = _B3::I64;
           R1 = _B4::P64;
           call stg_freezeSmallArray#(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.652536746 UTC

[section ""data" . GHC.PrimopWrappers.thawSmallArray#_closure" {
     GHC.PrimopWrappers.thawSmallArray#_closure:
         const GHC.PrimopWrappers.thawSmallArray#_info;
 },
 GHC.PrimopWrappers.thawSmallArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cywu,
                       label: GHC.PrimopWrappers.thawSmallArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cywu: // global
           _B3::I64 = R3;
           R3 = R4;
           _B4::P64 = R2;
           R2 = _B3::I64;
           R1 = _B4::P64;
           call stg_thawSmallArray#(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.65615137 UTC

[section ""data" . GHC.PrimopWrappers.casSmallArray#_closure" {
     GHC.PrimopWrappers.casSmallArray#_closure:
         const GHC.PrimopWrappers.casSmallArray#_info;
 },
 GHC.PrimopWrappers.casSmallArray#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cywC: // global
           R5 = P64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 32;
           call GHC.PrimopWrappers.casSmallArray#_entry(R5,
                                                        R4,
                                                        R3,
                                                        R2,
                                                        R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.casSmallArray#_entry() //  [R2, R3, R4, R5]
         { info_tbl: [(cywG,
                       label: GHC.PrimopWrappers.casSmallArray#_info
                       rep:HeapRep static {
                             Fun {arity: 5 fun_type: ArgGen [False, True, False, False]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cywG: // global
           _B3::P64 = R4;
           R4 = R5;
           _B4::I64 = R3;
           R3 = _B3::P64;
           _B5::P64 = R2;
           R2 = _B4::I64;
           R1 = _B5::P64;
           call stg_casSmallArray#(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.661076249 UTC

[section ""data" . GHC.PrimopWrappers.newByteArray#_closure" {
     GHC.PrimopWrappers.newByteArray#_closure:
         const GHC.PrimopWrappers.newByteArray#_info;
 },
 GHC.PrimopWrappers.newByteArray#_entry() //  [R2]
         { info_tbl: [(cywT,
                       label: GHC.PrimopWrappers.newByteArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cywT: // global
           R1 = R2;
           call stg_newByteArray#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.66506893 UTC

[section ""data" . GHC.PrimopWrappers.newPinnedByteArray#_closure" {
     GHC.PrimopWrappers.newPinnedByteArray#_closure:
         const GHC.PrimopWrappers.newPinnedByteArray#_info;
 },
 GHC.PrimopWrappers.newPinnedByteArray#_entry() //  [R2]
         { info_tbl: [(cyx4,
                       label: GHC.PrimopWrappers.newPinnedByteArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyx4: // global
           R1 = R2;
           call stg_newPinnedByteArray#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.668370247 UTC

[section ""data" . GHC.PrimopWrappers.newAlignedPinnedByteArray#_closure" {
     GHC.PrimopWrappers.newAlignedPinnedByteArray#_closure:
         const GHC.PrimopWrappers.newAlignedPinnedByteArray#_info;
 },
 GHC.PrimopWrappers.newAlignedPinnedByteArray#_entry() //  [R2, R3]
         { info_tbl: [(cyxf,
                       label: GHC.PrimopWrappers.newAlignedPinnedByteArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyxf: // global
           _B3::I64 = R2;
           R2 = R3;
           R1 = _B3::I64;
           call stg_newAlignedPinnedByteArray#(R2,
                                               R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.672037888 UTC

[section ""data" . GHC.PrimopWrappers.isMutableByteArrayPinned#_closure" {
     GHC.PrimopWrappers.isMutableByteArrayPinned#_closure:
         const GHC.PrimopWrappers.isMutableByteArrayPinned#_info;
 },
 GHC.PrimopWrappers.isMutableByteArrayPinned#_entry() //  [R2]
         { info_tbl: [(cyxq,
                       label: GHC.PrimopWrappers.isMutableByteArrayPinned#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyxq: // global
           R1 = R2;
           call stg_isMutableByteArrayPinned#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.675389496 UTC

[section ""data" . GHC.PrimopWrappers.isByteArrayPinned#_closure" {
     GHC.PrimopWrappers.isByteArrayPinned#_closure:
         const GHC.PrimopWrappers.isByteArrayPinned#_info;
 },
 GHC.PrimopWrappers.isByteArrayPinned#_entry() //  [R2]
         { info_tbl: [(cyxB,
                       label: GHC.PrimopWrappers.isByteArrayPinned#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyxB: // global
           R1 = R2;
           call stg_isByteArrayPinned#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.678635481 UTC

[section ""data" . GHC.PrimopWrappers.byteArrayContents#_closure" {
     GHC.PrimopWrappers.byteArrayContents#_closure:
         const GHC.PrimopWrappers.byteArrayContents#_info;
 },
 GHC.PrimopWrappers.byteArrayContents#_entry() //  [R2]
         { info_tbl: [(cyxN,
                       label: GHC.PrimopWrappers.byteArrayContents#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyxN: // global
           R1 = R2 + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.682303219 UTC

[section ""data" . GHC.PrimopWrappers.sameMutableByteArray#_closure" {
     GHC.PrimopWrappers.sameMutableByteArray#_closure:
         const GHC.PrimopWrappers.sameMutableByteArray#_info;
 },
 GHC.PrimopWrappers.sameMutableByteArray#_entry() //  [R2, R3]
         { info_tbl: [(cyy0,
                       label: GHC.PrimopWrappers.sameMutableByteArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyy0: // global
           R1 = R2 == R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.685845627 UTC

[section ""data" . GHC.PrimopWrappers.shrinkMutableByteArray#_closure" {
     GHC.PrimopWrappers.shrinkMutableByteArray#_closure:
         const GHC.PrimopWrappers.shrinkMutableByteArray#_info;
 },
 GHC.PrimopWrappers.shrinkMutableByteArray#_entry() //  [R2, R3]
         { info_tbl: [(cyyd,
                       label: GHC.PrimopWrappers.shrinkMutableByteArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyyd: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_shrinkMutableByteArray#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.689705369 UTC

[section ""data" . GHC.PrimopWrappers.resizeMutableByteArray#_closure" {
     GHC.PrimopWrappers.resizeMutableByteArray#_closure:
         const GHC.PrimopWrappers.resizeMutableByteArray#_info;
 },
 GHC.PrimopWrappers.resizeMutableByteArray#_entry() //  [R2, R3]
         { info_tbl: [(cyyo,
                       label: GHC.PrimopWrappers.resizeMutableByteArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyyo: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_resizeMutableByteArray#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.693921418 UTC

[section ""data" . GHC.PrimopWrappers.unsafeFreezeByteArray#_closure" {
     GHC.PrimopWrappers.unsafeFreezeByteArray#_closure:
         const GHC.PrimopWrappers.unsafeFreezeByteArray#_info;
 },
 GHC.PrimopWrappers.unsafeFreezeByteArray#_entry() //  [R2]
         { info_tbl: [(cyyA,
                       label: GHC.PrimopWrappers.unsafeFreezeByteArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyyA: // global
           R1 = R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.697550946 UTC

[section ""data" . GHC.PrimopWrappers.sizeofByteArray#_closure" {
     GHC.PrimopWrappers.sizeofByteArray#_closure:
         const GHC.PrimopWrappers.sizeofByteArray#_info;
 },
 GHC.PrimopWrappers.sizeofByteArray#_entry() //  [R2]
         { info_tbl: [(cyyN,
                       label: GHC.PrimopWrappers.sizeofByteArray#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyyN: // global
           R1 = I64[R2 + 8];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.701000456 UTC

[section ""data" . GHC.PrimopWrappers.sizeofMutableByteArray#_closure" {
     GHC.PrimopWrappers.sizeofMutableByteArray#_closure:
         const GHC.PrimopWrappers.sizeofMutableByteArray#_info;
 },
 GHC.PrimopWrappers.sizeofMutableByteArray#_entry() //  [R2]
         { info_tbl: [(cyz0,
                       label: GHC.PrimopWrappers.sizeofMutableByteArray#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyz0: // global
           R1 = I64[R2 + 8];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.704380442 UTC

[section ""data" . GHC.PrimopWrappers.getSizeofMutableByteArray#_closure" {
     GHC.PrimopWrappers.getSizeofMutableByteArray#_closure:
         const GHC.PrimopWrappers.getSizeofMutableByteArray#_info;
 },
 GHC.PrimopWrappers.getSizeofMutableByteArray#_entry() //  [R2]
         { info_tbl: [(cyzd,
                       label: GHC.PrimopWrappers.getSizeofMutableByteArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyzd: // global
           R1 = I64[R2 + 8];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.708298672 UTC

[section ""data" . GHC.PrimopWrappers.indexCharArray#_closure" {
     GHC.PrimopWrappers.indexCharArray#_closure:
         const GHC.PrimopWrappers.indexCharArray#_info;
 },
 GHC.PrimopWrappers.indexCharArray#_entry() //  [R2, R3]
         { info_tbl: [(cyzq,
                       label: GHC.PrimopWrappers.indexCharArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyzq: // global
           R1 = %MO_UU_Conv_W8_W64(I8[(R2 + 16) + R3]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.711949749 UTC

[section ""data" . GHC.PrimopWrappers.indexWideCharArray#_closure" {
     GHC.PrimopWrappers.indexWideCharArray#_closure:
         const GHC.PrimopWrappers.indexWideCharArray#_info;
 },
 GHC.PrimopWrappers.indexWideCharArray#_entry() //  [R2, R3]
         { info_tbl: [(cyzE,
                       label: GHC.PrimopWrappers.indexWideCharArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyzE: // global
           R1 = %MO_UU_Conv_W32_W64(I32[(R2 + 16) + (R3 << 2)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.716202719 UTC

[section ""data" . GHC.PrimopWrappers.indexIntArray#_closure" {
     GHC.PrimopWrappers.indexIntArray#_closure:
         const GHC.PrimopWrappers.indexIntArray#_info;
 },
 GHC.PrimopWrappers.indexIntArray#_entry() //  [R2, R3]
         { info_tbl: [(cyzR,
                       label: GHC.PrimopWrappers.indexIntArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyzR: // global
           R1 = I64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.719631971 UTC

[section ""data" . GHC.PrimopWrappers.indexWordArray#_closure" {
     GHC.PrimopWrappers.indexWordArray#_closure:
         const GHC.PrimopWrappers.indexWordArray#_info;
 },
 GHC.PrimopWrappers.indexWordArray#_entry() //  [R2, R3]
         { info_tbl: [(cyA4,
                       label: GHC.PrimopWrappers.indexWordArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyA4: // global
           R1 = I64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.723454876 UTC

[section ""data" . GHC.PrimopWrappers.indexAddrArray#_closure" {
     GHC.PrimopWrappers.indexAddrArray#_closure:
         const GHC.PrimopWrappers.indexAddrArray#_info;
 },
 GHC.PrimopWrappers.indexAddrArray#_entry() //  [R2, R3]
         { info_tbl: [(cyAh,
                       label: GHC.PrimopWrappers.indexAddrArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyAh: // global
           R1 = I64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.726993887 UTC

[section ""data" . GHC.PrimopWrappers.indexFloatArray#_closure" {
     GHC.PrimopWrappers.indexFloatArray#_closure:
         const GHC.PrimopWrappers.indexFloatArray#_info;
 },
 GHC.PrimopWrappers.indexFloatArray#_entry() //  [R2, R3]
         { info_tbl: [(cyAu,
                       label: GHC.PrimopWrappers.indexFloatArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyAu: // global
           F1 = F32[(R2 + 16) + (R3 << 2)];
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.730481344 UTC

[section ""data" . GHC.PrimopWrappers.indexDoubleArray#_closure" {
     GHC.PrimopWrappers.indexDoubleArray#_closure:
         const GHC.PrimopWrappers.indexDoubleArray#_info;
 },
 GHC.PrimopWrappers.indexDoubleArray#_entry() //  [R2, R3]
         { info_tbl: [(cyAH,
                       label: GHC.PrimopWrappers.indexDoubleArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyAH: // global
           D1 = F64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.734326125 UTC

[section ""data" . GHC.PrimopWrappers.indexStablePtrArray#_closure" {
     GHC.PrimopWrappers.indexStablePtrArray#_closure:
         const GHC.PrimopWrappers.indexStablePtrArray#_info;
 },
 GHC.PrimopWrappers.indexStablePtrArray#_entry() //  [R2, R3]
         { info_tbl: [(cyAU,
                       label: GHC.PrimopWrappers.indexStablePtrArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyAU: // global
           R1 = I64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.737953853 UTC

[section ""data" . GHC.PrimopWrappers.indexInt8Array#_closure" {
     GHC.PrimopWrappers.indexInt8Array#_closure:
         const GHC.PrimopWrappers.indexInt8Array#_info;
 },
 GHC.PrimopWrappers.indexInt8Array#_entry() //  [R2, R3]
         { info_tbl: [(cyB7,
                       label: GHC.PrimopWrappers.indexInt8Array#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyB7: // global
           R1 = %MO_SS_Conv_W8_W64(I8[(R2 + 16) + R3]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.742189109 UTC

[section ""data" . GHC.PrimopWrappers.indexInt16Array#_closure" {
     GHC.PrimopWrappers.indexInt16Array#_closure:
         const GHC.PrimopWrappers.indexInt16Array#_info;
 },
 GHC.PrimopWrappers.indexInt16Array#_entry() //  [R2, R3]
         { info_tbl: [(cyBl,
                       label: GHC.PrimopWrappers.indexInt16Array#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyBl: // global
           R1 = %MO_SS_Conv_W16_W64(I16[(R2 + 16) + (R3 << 1)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.745742468 UTC

[section ""data" . GHC.PrimopWrappers.indexInt32Array#_closure" {
     GHC.PrimopWrappers.indexInt32Array#_closure:
         const GHC.PrimopWrappers.indexInt32Array#_info;
 },
 GHC.PrimopWrappers.indexInt32Array#_entry() //  [R2, R3]
         { info_tbl: [(cyBy,
                       label: GHC.PrimopWrappers.indexInt32Array#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyBy: // global
           R1 = %MO_SS_Conv_W32_W64(I32[(R2 + 16) + (R3 << 2)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.749324875 UTC

[section ""data" . GHC.PrimopWrappers.indexInt64Array#_closure" {
     GHC.PrimopWrappers.indexInt64Array#_closure:
         const GHC.PrimopWrappers.indexInt64Array#_info;
 },
 GHC.PrimopWrappers.indexInt64Array#_entry() //  [R2, R3]
         { info_tbl: [(cyBL,
                       label: GHC.PrimopWrappers.indexInt64Array#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyBL: // global
           R1 = I64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.752767301 UTC

[section ""data" . GHC.PrimopWrappers.indexWord8Array#_closure" {
     GHC.PrimopWrappers.indexWord8Array#_closure:
         const GHC.PrimopWrappers.indexWord8Array#_info;
 },
 GHC.PrimopWrappers.indexWord8Array#_entry() //  [R2, R3]
         { info_tbl: [(cyBY,
                       label: GHC.PrimopWrappers.indexWord8Array#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyBY: // global
           R1 = %MO_UU_Conv_W8_W64(I8[(R2 + 16) + R3]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.756385691 UTC

[section ""data" . GHC.PrimopWrappers.indexWord16Array#_closure" {
     GHC.PrimopWrappers.indexWord16Array#_closure:
         const GHC.PrimopWrappers.indexWord16Array#_info;
 },
 GHC.PrimopWrappers.indexWord16Array#_entry() //  [R2, R3]
         { info_tbl: [(cyCc,
                       label: GHC.PrimopWrappers.indexWord16Array#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyCc: // global
           R1 = %MO_UU_Conv_W16_W64(I16[(R2 + 16) + (R3 << 1)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.760193039 UTC

[section ""data" . GHC.PrimopWrappers.indexWord32Array#_closure" {
     GHC.PrimopWrappers.indexWord32Array#_closure:
         const GHC.PrimopWrappers.indexWord32Array#_info;
 },
 GHC.PrimopWrappers.indexWord32Array#_entry() //  [R2, R3]
         { info_tbl: [(cyCp,
                       label: GHC.PrimopWrappers.indexWord32Array#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyCp: // global
           R1 = %MO_UU_Conv_W32_W64(I32[(R2 + 16) + (R3 << 2)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.763721939 UTC

[section ""data" . GHC.PrimopWrappers.indexWord64Array#_closure" {
     GHC.PrimopWrappers.indexWord64Array#_closure:
         const GHC.PrimopWrappers.indexWord64Array#_info;
 },
 GHC.PrimopWrappers.indexWord64Array#_entry() //  [R2, R3]
         { info_tbl: [(cyCC,
                       label: GHC.PrimopWrappers.indexWord64Array#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyCC: // global
           R1 = I64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.767780937 UTC

[section ""data" . GHC.PrimopWrappers.readCharArray#_closure" {
     GHC.PrimopWrappers.readCharArray#_closure:
         const GHC.PrimopWrappers.readCharArray#_info;
 },
 GHC.PrimopWrappers.readCharArray#_entry() //  [R2, R3]
         { info_tbl: [(cyCP,
                       label: GHC.PrimopWrappers.readCharArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyCP: // global
           R1 = %MO_UU_Conv_W8_W64(I8[(R2 + 16) + R3]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.771371683 UTC

[section ""data" . GHC.PrimopWrappers.readWideCharArray#_closure" {
     GHC.PrimopWrappers.readWideCharArray#_closure:
         const GHC.PrimopWrappers.readWideCharArray#_info;
 },
 GHC.PrimopWrappers.readWideCharArray#_entry() //  [R2, R3]
         { info_tbl: [(cyD3,
                       label: GHC.PrimopWrappers.readWideCharArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyD3: // global
           R1 = %MO_UU_Conv_W32_W64(I32[(R2 + 16) + (R3 << 2)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.77494199 UTC

[section ""data" . GHC.PrimopWrappers.readIntArray#_closure" {
     GHC.PrimopWrappers.readIntArray#_closure:
         const GHC.PrimopWrappers.readIntArray#_info;
 },
 GHC.PrimopWrappers.readIntArray#_entry() //  [R2, R3]
         { info_tbl: [(cyDg,
                       label: GHC.PrimopWrappers.readIntArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyDg: // global
           R1 = I64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.778402972 UTC

[section ""data" . GHC.PrimopWrappers.readWordArray#_closure" {
     GHC.PrimopWrappers.readWordArray#_closure:
         const GHC.PrimopWrappers.readWordArray#_info;
 },
 GHC.PrimopWrappers.readWordArray#_entry() //  [R2, R3]
         { info_tbl: [(cyDt,
                       label: GHC.PrimopWrappers.readWordArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyDt: // global
           R1 = I64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.782365133 UTC

[section ""data" . GHC.PrimopWrappers.readAddrArray#_closure" {
     GHC.PrimopWrappers.readAddrArray#_closure:
         const GHC.PrimopWrappers.readAddrArray#_info;
 },
 GHC.PrimopWrappers.readAddrArray#_entry() //  [R2, R3]
         { info_tbl: [(cyDG,
                       label: GHC.PrimopWrappers.readAddrArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyDG: // global
           R1 = I64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.78596515 UTC

[section ""data" . GHC.PrimopWrappers.readFloatArray#_closure" {
     GHC.PrimopWrappers.readFloatArray#_closure:
         const GHC.PrimopWrappers.readFloatArray#_info;
 },
 GHC.PrimopWrappers.readFloatArray#_entry() //  [R2, R3]
         { info_tbl: [(cyDT,
                       label: GHC.PrimopWrappers.readFloatArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyDT: // global
           F1 = F32[(R2 + 16) + (R3 << 2)];
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.789480067 UTC

[section ""data" . GHC.PrimopWrappers.readDoubleArray#_closure" {
     GHC.PrimopWrappers.readDoubleArray#_closure:
         const GHC.PrimopWrappers.readDoubleArray#_info;
 },
 GHC.PrimopWrappers.readDoubleArray#_entry() //  [R2, R3]
         { info_tbl: [(cyE6,
                       label: GHC.PrimopWrappers.readDoubleArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyE6: // global
           D1 = F64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.793657103 UTC

[section ""data" . GHC.PrimopWrappers.readStablePtrArray#_closure" {
     GHC.PrimopWrappers.readStablePtrArray#_closure:
         const GHC.PrimopWrappers.readStablePtrArray#_info;
 },
 GHC.PrimopWrappers.readStablePtrArray#_entry() //  [R2, R3]
         { info_tbl: [(cyEj,
                       label: GHC.PrimopWrappers.readStablePtrArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyEj: // global
           R1 = I64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.797117171 UTC

[section ""data" . GHC.PrimopWrappers.readInt8Array#_closure" {
     GHC.PrimopWrappers.readInt8Array#_closure:
         const GHC.PrimopWrappers.readInt8Array#_info;
 },
 GHC.PrimopWrappers.readInt8Array#_entry() //  [R2, R3]
         { info_tbl: [(cyEw,
                       label: GHC.PrimopWrappers.readInt8Array#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyEw: // global
           R1 = %MO_SS_Conv_W8_W64(I8[(R2 + 16) + R3]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.800961407 UTC

[section ""data" . GHC.PrimopWrappers.readInt16Array#_closure" {
     GHC.PrimopWrappers.readInt16Array#_closure:
         const GHC.PrimopWrappers.readInt16Array#_info;
 },
 GHC.PrimopWrappers.readInt16Array#_entry() //  [R2, R3]
         { info_tbl: [(cyEK,
                       label: GHC.PrimopWrappers.readInt16Array#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyEK: // global
           R1 = %MO_SS_Conv_W16_W64(I16[(R2 + 16) + (R3 << 1)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.804476142 UTC

[section ""data" . GHC.PrimopWrappers.readInt32Array#_closure" {
     GHC.PrimopWrappers.readInt32Array#_closure:
         const GHC.PrimopWrappers.readInt32Array#_info;
 },
 GHC.PrimopWrappers.readInt32Array#_entry() //  [R2, R3]
         { info_tbl: [(cyEX,
                       label: GHC.PrimopWrappers.readInt32Array#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyEX: // global
           R1 = %MO_SS_Conv_W32_W64(I32[(R2 + 16) + (R3 << 2)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.808245863 UTC

[section ""data" . GHC.PrimopWrappers.readInt64Array#_closure" {
     GHC.PrimopWrappers.readInt64Array#_closure:
         const GHC.PrimopWrappers.readInt64Array#_info;
 },
 GHC.PrimopWrappers.readInt64Array#_entry() //  [R2, R3]
         { info_tbl: [(cyFa,
                       label: GHC.PrimopWrappers.readInt64Array#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyFa: // global
           R1 = I64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.811786535 UTC

[section ""data" . GHC.PrimopWrappers.readWord8Array#_closure" {
     GHC.PrimopWrappers.readWord8Array#_closure:
         const GHC.PrimopWrappers.readWord8Array#_info;
 },
 GHC.PrimopWrappers.readWord8Array#_entry() //  [R2, R3]
         { info_tbl: [(cyFn,
                       label: GHC.PrimopWrappers.readWord8Array#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyFn: // global
           R1 = %MO_UU_Conv_W8_W64(I8[(R2 + 16) + R3]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.815250322 UTC

[section ""data" . GHC.PrimopWrappers.readWord16Array#_closure" {
     GHC.PrimopWrappers.readWord16Array#_closure:
         const GHC.PrimopWrappers.readWord16Array#_info;
 },
 GHC.PrimopWrappers.readWord16Array#_entry() //  [R2, R3]
         { info_tbl: [(cyFB,
                       label: GHC.PrimopWrappers.readWord16Array#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyFB: // global
           R1 = %MO_UU_Conv_W16_W64(I16[(R2 + 16) + (R3 << 1)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.819752678 UTC

[section ""data" . GHC.PrimopWrappers.readWord32Array#_closure" {
     GHC.PrimopWrappers.readWord32Array#_closure:
         const GHC.PrimopWrappers.readWord32Array#_info;
 },
 GHC.PrimopWrappers.readWord32Array#_entry() //  [R2, R3]
         { info_tbl: [(cyFO,
                       label: GHC.PrimopWrappers.readWord32Array#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyFO: // global
           R1 = %MO_UU_Conv_W32_W64(I32[(R2 + 16) + (R3 << 2)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.823252621 UTC

[section ""data" . GHC.PrimopWrappers.readWord64Array#_closure" {
     GHC.PrimopWrappers.readWord64Array#_closure:
         const GHC.PrimopWrappers.readWord64Array#_info;
 },
 GHC.PrimopWrappers.readWord64Array#_entry() //  [R2, R3]
         { info_tbl: [(cyG1,
                       label: GHC.PrimopWrappers.readWord64Array#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyG1: // global
           R1 = I64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.826763159 UTC

[section ""data" . GHC.PrimopWrappers.writeCharArray#_closure" {
     GHC.PrimopWrappers.writeCharArray#_closure:
         const GHC.PrimopWrappers.writeCharArray#_info;
 },
 GHC.PrimopWrappers.writeCharArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cyGd,
                       label: GHC.PrimopWrappers.writeCharArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyGd: // global
           I8[(R2 + 16) + R3] = %MO_UU_Conv_W64_W8(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.830570849 UTC

[section ""data" . GHC.PrimopWrappers.writeWideCharArray#_closure" {
     GHC.PrimopWrappers.writeWideCharArray#_closure:
         const GHC.PrimopWrappers.writeWideCharArray#_info;
 },
 GHC.PrimopWrappers.writeWideCharArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cyGr,
                       label: GHC.PrimopWrappers.writeWideCharArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyGr: // global
           I32[(R2 + 16) + (R3 << 2)] = %MO_UU_Conv_W64_W32(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.83409436 UTC

[section ""data" . GHC.PrimopWrappers.writeIntArray#_closure" {
     GHC.PrimopWrappers.writeIntArray#_closure:
         const GHC.PrimopWrappers.writeIntArray#_info;
 },
 GHC.PrimopWrappers.writeIntArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cyGD,
                       label: GHC.PrimopWrappers.writeIntArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyGD: // global
           I64[(R2 + 16) + (R3 << 3)] = R4;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.837444883 UTC

[section ""data" . GHC.PrimopWrappers.writeWordArray#_closure" {
     GHC.PrimopWrappers.writeWordArray#_closure:
         const GHC.PrimopWrappers.writeWordArray#_info;
 },
 GHC.PrimopWrappers.writeWordArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cyGP,
                       label: GHC.PrimopWrappers.writeWordArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyGP: // global
           I64[(R2 + 16) + (R3 << 3)] = R4;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.841402529 UTC

[section ""data" . GHC.PrimopWrappers.writeAddrArray#_closure" {
     GHC.PrimopWrappers.writeAddrArray#_closure:
         const GHC.PrimopWrappers.writeAddrArray#_info;
 },
 GHC.PrimopWrappers.writeAddrArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cyH1,
                       label: GHC.PrimopWrappers.writeAddrArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyH1: // global
           I64[(R2 + 16) + (R3 << 3)] = R4;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.844984246 UTC

[section ""data" . GHC.PrimopWrappers.writeFloatArray#_closure" {
     GHC.PrimopWrappers.writeFloatArray#_closure:
         const GHC.PrimopWrappers.writeFloatArray#_info;
 },
 GHC.PrimopWrappers.writeFloatArray#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyHa: // global
           F1 = F32[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 24;
           call GHC.PrimopWrappers.writeFloatArray#_entry(F1,
                                                          R3,
                                                          R2,
                                                          R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.writeFloatArray#_entry() //  [R2, R3, F1]
         { info_tbl: [(cyHe,
                       label: GHC.PrimopWrappers.writeFloatArray#_info
                       rep:HeapRep static {
                             Fun {arity: 4 fun_type: ArgGen [False, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyHe: // global
           F32[(R2 + 16) + (R3 << 2)] = F1;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.850115268 UTC

[section ""data" . GHC.PrimopWrappers.writeDoubleArray#_closure" {
     GHC.PrimopWrappers.writeDoubleArray#_closure:
         const GHC.PrimopWrappers.writeDoubleArray#_info;
 },
 GHC.PrimopWrappers.writeDoubleArray#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyHp: // global
           D1 = F64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 24;
           call GHC.PrimopWrappers.writeDoubleArray#_entry(D1,
                                                           R3,
                                                           R2,
                                                           R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.writeDoubleArray#_entry() //  [R2, R3, D1]
         { info_tbl: [(cyHt,
                       label: GHC.PrimopWrappers.writeDoubleArray#_info
                       rep:HeapRep static {
                             Fun {arity: 4 fun_type: ArgGen [False, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyHt: // global
           F64[(R2 + 16) + (R3 << 3)] = D1;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.854565261 UTC

[section ""data" . GHC.PrimopWrappers.writeStablePtrArray#_closure" {
     GHC.PrimopWrappers.writeStablePtrArray#_closure:
         const GHC.PrimopWrappers.writeStablePtrArray#_info;
 },
 GHC.PrimopWrappers.writeStablePtrArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cyHH,
                       label: GHC.PrimopWrappers.writeStablePtrArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyHH: // global
           I64[(R2 + 16) + (R3 << 3)] = R4;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.858151652 UTC

[section ""data" . GHC.PrimopWrappers.writeInt8Array#_closure" {
     GHC.PrimopWrappers.writeInt8Array#_closure:
         const GHC.PrimopWrappers.writeInt8Array#_info;
 },
 GHC.PrimopWrappers.writeInt8Array#_entry() //  [R2, R3, R4]
         { info_tbl: [(cyHT,
                       label: GHC.PrimopWrappers.writeInt8Array#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyHT: // global
           I8[(R2 + 16) + R3] = %MO_UU_Conv_W64_W8(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.861595032 UTC

[section ""data" . GHC.PrimopWrappers.writeInt16Array#_closure" {
     GHC.PrimopWrappers.writeInt16Array#_closure:
         const GHC.PrimopWrappers.writeInt16Array#_info;
 },
 GHC.PrimopWrappers.writeInt16Array#_entry() //  [R2, R3, R4]
         { info_tbl: [(cyI7,
                       label: GHC.PrimopWrappers.writeInt16Array#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyI7: // global
           I16[(R2 + 16) + (R3 << 1)] = %MO_UU_Conv_W64_W16(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.865069947 UTC

[section ""data" . GHC.PrimopWrappers.writeInt32Array#_closure" {
     GHC.PrimopWrappers.writeInt32Array#_closure:
         const GHC.PrimopWrappers.writeInt32Array#_info;
 },
 GHC.PrimopWrappers.writeInt32Array#_entry() //  [R2, R3, R4]
         { info_tbl: [(cyIk,
                       label: GHC.PrimopWrappers.writeInt32Array#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyIk: // global
           I32[(R2 + 16) + (R3 << 2)] = %MO_UU_Conv_W64_W32(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.86914236 UTC

[section ""data" . GHC.PrimopWrappers.writeInt64Array#_closure" {
     GHC.PrimopWrappers.writeInt64Array#_closure:
         const GHC.PrimopWrappers.writeInt64Array#_info;
 },
 GHC.PrimopWrappers.writeInt64Array#_entry() //  [R2, R3, R4]
         { info_tbl: [(cyIw,
                       label: GHC.PrimopWrappers.writeInt64Array#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyIw: // global
           I64[(R2 + 16) + (R3 << 3)] = R4;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.872721938 UTC

[section ""data" . GHC.PrimopWrappers.writeWord8Array#_closure" {
     GHC.PrimopWrappers.writeWord8Array#_closure:
         const GHC.PrimopWrappers.writeWord8Array#_info;
 },
 GHC.PrimopWrappers.writeWord8Array#_entry() //  [R2, R3, R4]
         { info_tbl: [(cyII,
                       label: GHC.PrimopWrappers.writeWord8Array#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyII: // global
           I8[(R2 + 16) + R3] = %MO_UU_Conv_W64_W8(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.876521278 UTC

[section ""data" . GHC.PrimopWrappers.writeWord16Array#_closure" {
     GHC.PrimopWrappers.writeWord16Array#_closure:
         const GHC.PrimopWrappers.writeWord16Array#_info;
 },
 GHC.PrimopWrappers.writeWord16Array#_entry() //  [R2, R3, R4]
         { info_tbl: [(cyIW,
                       label: GHC.PrimopWrappers.writeWord16Array#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyIW: // global
           I16[(R2 + 16) + (R3 << 1)] = %MO_UU_Conv_W64_W16(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.879995548 UTC

[section ""data" . GHC.PrimopWrappers.writeWord32Array#_closure" {
     GHC.PrimopWrappers.writeWord32Array#_closure:
         const GHC.PrimopWrappers.writeWord32Array#_info;
 },
 GHC.PrimopWrappers.writeWord32Array#_entry() //  [R2, R3, R4]
         { info_tbl: [(cyJ9,
                       label: GHC.PrimopWrappers.writeWord32Array#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyJ9: // global
           I32[(R2 + 16) + (R3 << 2)] = %MO_UU_Conv_W64_W32(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.883540191 UTC

[section ""data" . GHC.PrimopWrappers.writeWord64Array#_closure" {
     GHC.PrimopWrappers.writeWord64Array#_closure:
         const GHC.PrimopWrappers.writeWord64Array#_info;
 },
 GHC.PrimopWrappers.writeWord64Array#_entry() //  [R2, R3, R4]
         { info_tbl: [(cyJl,
                       label: GHC.PrimopWrappers.writeWord64Array#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyJl: // global
           I64[(R2 + 16) + (R3 << 3)] = R4;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.887392598 UTC

[section ""data" . GHC.PrimopWrappers.compareByteArrays#_closure" {
     GHC.PrimopWrappers.compareByteArrays#_closure:
         const GHC.PrimopWrappers.compareByteArrays#_info;
 },
 GHC.PrimopWrappers.compareByteArrays#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyJu: // global
           R6 = I64[Sp + 32];
           R5 = I64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 40;
           call GHC.PrimopWrappers.compareByteArrays#_entry(R6,
                                                            R5,
                                                            R4,
                                                            R3,
                                                            R2,
                                                            R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.compareByteArrays#_entry() //  [R2, R3, R4, R5,
                                                    R6]
         { info_tbl: [(cyJH,
                       label: GHC.PrimopWrappers.compareByteArrays#_info
                       rep:HeapRep static {
                             Fun {arity: 5
                                  fun_type: ArgGen [False, True, False, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyJH: // global
           _cyJz::P64 = (R2 + 16) + R3;
           _cyJA::P64 = (R4 + 16) + R5;
           _cyJy::I64 = 0;
           if (_cyJz::P64 == _cyJA::P64) (likely: False) goto cyJB; else goto cyJC;
       cyJC: // global
           _cyJG::I64 = R6;
           (_cyJD::I32) = call MO_Memcmp 1(_cyJz::P64, _cyJA::P64, _cyJG::I64);
           _cyJy::I64 = %MO_SS_Conv_W32_W64(_cyJD::I32);
           goto cyJB;
       cyJB: // global
           R1 = _cyJy::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.893547031 UTC

[section ""data" . GHC.PrimopWrappers.copyByteArray#_closure" {
     GHC.PrimopWrappers.copyByteArray#_closure:
         const GHC.PrimopWrappers.copyByteArray#_info;
 },
 GHC.PrimopWrappers.copyByteArray#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyJX: // global
           R6 = I64[Sp + 32];
           R5 = I64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 40;
           call GHC.PrimopWrappers.copyByteArray#_entry(R6,
                                                        R5,
                                                        R4,
                                                        R3,
                                                        R2,
                                                        R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.copyByteArray#_entry() //  [R2, R3, R4, R5, R6]
         { info_tbl: [(cyK6,
                       label: GHC.PrimopWrappers.copyByteArray#_info
                       rep:HeapRep static {
                             Fun {arity: 6
                                  fun_type: ArgGen [False, True, False, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyK6: // global
           _cyK3::P64 = (R4 + 16) + R5;
           _cyK4::P64 = (R2 + 16) + R3;
           _cyK5::I64 = R6;
           call MO_Memcpy 1(_cyK3::P64, _cyK4::P64, _cyK5::I64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.89864136 UTC

[section ""data" . GHC.PrimopWrappers.copyMutableByteArray#_closure" {
     GHC.PrimopWrappers.copyMutableByteArray#_closure:
         const GHC.PrimopWrappers.copyMutableByteArray#_info;
 },
 GHC.PrimopWrappers.copyMutableByteArray#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyKl: // global
           R6 = I64[Sp + 32];
           R5 = I64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 40;
           call GHC.PrimopWrappers.copyMutableByteArray#_entry(R6,
                                                               R5,
                                                               R4,
                                                               R3,
                                                               R2,
                                                               R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.copyMutableByteArray#_entry() //  [R2, R3, R4,
                                                       R5, R6]
         { info_tbl: [(cyKv,
                       label: GHC.PrimopWrappers.copyMutableByteArray#_info
                       rep:HeapRep static {
                             Fun {arity: 6
                                  fun_type: ArgGen [False, True, False, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyKv: // global
           _cyKp::P64 = (R4 + 16) + R5;
           _cyKq::P64 = (R2 + 16) + R3;
           if (R2 == R4) goto cyKt; else goto cyKu;
       cyKt: // global
           _cyKD::I64 = R6;
           call MO_Memmove 1(_cyKp::P64, _cyKq::P64, _cyKD::I64);
           goto cyKs;
       cyKu: // global
           _cyKF::I64 = R6;
           call MO_Memcpy 1(_cyKp::P64, _cyKq::P64, _cyKF::I64);
           goto cyKs;
       cyKs: // global
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.90385532 UTC

[section ""data" . GHC.PrimopWrappers.copyByteArrayToAddr#_closure" {
     GHC.PrimopWrappers.copyByteArrayToAddr#_closure:
         const GHC.PrimopWrappers.copyByteArrayToAddr#_info;
 },
 GHC.PrimopWrappers.copyByteArrayToAddr#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyKU: // global
           R5 = I64[Sp + 24];
           R4 = I64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 32;
           call GHC.PrimopWrappers.copyByteArrayToAddr#_entry(R5,
                                                              R4,
                                                              R3,
                                                              R2,
                                                              R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.copyByteArrayToAddr#_entry() //  [R2, R3, R4,
                                                      R5]
         { info_tbl: [(cyL2,
                       label: GHC.PrimopWrappers.copyByteArrayToAddr#_info
                       rep:HeapRep static {
                             Fun {arity: 5 fun_type: ArgGen [False, True, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyL2: // global
           _cyKZ::I64 = R4;
           _cyL0::P64 = (R2 + 16) + R3;
           _cyL1::I64 = R5;
           call MO_Memcpy 1(_cyKZ::I64, _cyL0::P64, _cyL1::I64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.908687326 UTC

[section ""data" . GHC.PrimopWrappers.copyMutableByteArrayToAddr#_closure" {
     GHC.PrimopWrappers.copyMutableByteArrayToAddr#_closure:
         const GHC.PrimopWrappers.copyMutableByteArrayToAddr#_info;
 },
 GHC.PrimopWrappers.copyMutableByteArrayToAddr#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyLg: // global
           R5 = I64[Sp + 24];
           R4 = I64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 32;
           call GHC.PrimopWrappers.copyMutableByteArrayToAddr#_entry(R5,
                                                                     R4,
                                                                     R3,
                                                                     R2,
                                                                     R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.copyMutableByteArrayToAddr#_entry() //  [R2, R3,
                                                             R4, R5]
         { info_tbl: [(cyLo,
                       label: GHC.PrimopWrappers.copyMutableByteArrayToAddr#_info
                       rep:HeapRep static {
                             Fun {arity: 5 fun_type: ArgGen [False, True, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyLo: // global
           _cyLl::I64 = R4;
           _cyLm::P64 = (R2 + 16) + R3;
           _cyLn::I64 = R5;
           call MO_Memcpy 1(_cyLl::I64, _cyLm::P64, _cyLn::I64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.914113996 UTC

[section ""data" . GHC.PrimopWrappers.copyAddrToByteArray#_closure" {
     GHC.PrimopWrappers.copyAddrToByteArray#_closure:
         const GHC.PrimopWrappers.copyAddrToByteArray#_info;
 },
 GHC.PrimopWrappers.copyAddrToByteArray#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyLC: // global
           R5 = I64[Sp + 24];
           R4 = I64[Sp + 16];
           R3 = P64[Sp + 8];
           R2 = I64[Sp];
           R1 = R1;
           Sp = Sp + 32;
           call GHC.PrimopWrappers.copyAddrToByteArray#_entry(R5,
                                                              R4,
                                                              R3,
                                                              R2,
                                                              R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.copyAddrToByteArray#_entry() //  [R2, R3, R4,
                                                      R5]
         { info_tbl: [(cyLK,
                       label: GHC.PrimopWrappers.copyAddrToByteArray#_info
                       rep:HeapRep static {
                             Fun {arity: 5 fun_type: ArgGen [True, False, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyLK: // global
           _cyLH::P64 = (R3 + 16) + R4;
           _cyLJ::I64 = R5;
           call MO_Memcpy 1(_cyLH::P64, R2, _cyLJ::I64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.919399457 UTC

[section ""data" . GHC.PrimopWrappers.setByteArray#_closure" {
     GHC.PrimopWrappers.setByteArray#_closure:
         const GHC.PrimopWrappers.setByteArray#_info;
 },
 GHC.PrimopWrappers.setByteArray#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyLY: // global
           R5 = I64[Sp + 24];
           R4 = I64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 32;
           call GHC.PrimopWrappers.setByteArray#_entry(R5,
                                                       R4,
                                                       R3,
                                                       R2,
                                                       R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.setByteArray#_entry() //  [R2, R3, R4, R5]
         { info_tbl: [(cyM6,
                       label: GHC.PrimopWrappers.setByteArray#_info
                       rep:HeapRep static {
                             Fun {arity: 5 fun_type: ArgGen [False, True, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyM6: // global
           _cyM3::P64 = (R2 + 16) + R3;
           _cyM4::I64 = R5;
           _cyM5::I64 = R4;
           call MO_Memset 1(_cyM3::P64, _cyM4::I64, _cyM5::I64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.924202535 UTC

[section ""data" . GHC.PrimopWrappers.atomicReadIntArray#_closure" {
     GHC.PrimopWrappers.atomicReadIntArray#_closure:
         const GHC.PrimopWrappers.atomicReadIntArray#_info;
 },
 GHC.PrimopWrappers.atomicReadIntArray#_entry() //  [R2, R3]
         { info_tbl: [(cyMp,
                       label: GHC.PrimopWrappers.atomicReadIntArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyMp: // global
           _cyMo::P64 = (R2 + 16) + (R3 << 3);
           (_cyMn::I64) = call MO_AtomicRead W64(_cyMo::P64);
           R1 = _cyMn::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.927776038 UTC

[section ""data" . GHC.PrimopWrappers.atomicWriteIntArray#_closure" {
     GHC.PrimopWrappers.atomicWriteIntArray#_closure:
         const GHC.PrimopWrappers.atomicWriteIntArray#_info;
 },
 GHC.PrimopWrappers.atomicWriteIntArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cyMF,
                       label: GHC.PrimopWrappers.atomicWriteIntArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyMF: // global
           _cyMD::P64 = (R2 + 16) + (R3 << 3);
           _cyME::I64 = R4;
           call MO_AtomicWrite W64(_cyMD::P64, _cyME::I64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.931495568 UTC

[section ""data" . GHC.PrimopWrappers.casIntArray#_closure" {
     GHC.PrimopWrappers.casIntArray#_closure:
         const GHC.PrimopWrappers.casIntArray#_info;
 },
 GHC.PrimopWrappers.casIntArray#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyMQ: // global
           R5 = I64[Sp + 24];
           R4 = I64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 32;
           call GHC.PrimopWrappers.casIntArray#_entry(R5,
                                                      R4,
                                                      R3,
                                                      R2,
                                                      R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.casIntArray#_entry() //  [R2, R3, R4, R5]
         { info_tbl: [(cyMY,
                       label: GHC.PrimopWrappers.casIntArray#_info
                       rep:HeapRep static {
                             Fun {arity: 5 fun_type: ArgGen [False, True, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyMY: // global
           _cyMV::P64 = (R2 + 16) + (R3 << 3);
           _cyMW::I64 = R4;
           _cyMX::I64 = R5;
           (_cyMU::I64) = call MO_Cmpxchg W64(_cyMV::P64, _cyMW::I64, _cyMX::I64);
           R1 = _cyMU::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.936067018 UTC

[section ""data" . GHC.PrimopWrappers.fetchAddIntArray#_closure" {
     GHC.PrimopWrappers.fetchAddIntArray#_closure:
         const GHC.PrimopWrappers.fetchAddIntArray#_info;
 },
 GHC.PrimopWrappers.fetchAddIntArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cyNj,
                       label: GHC.PrimopWrappers.fetchAddIntArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyNj: // global
           _cyNh::P64 = (R2 + 16) + (R3 << 3);
           _cyNi::I64 = R4;
           (_cyNg::I64) = call MO_AtomicRMW W64 AMO_Add(_cyNh::P64, _cyNi::I64);
           R1 = _cyNg::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.940201099 UTC

[section ""data" . GHC.PrimopWrappers.fetchSubIntArray#_closure" {
     GHC.PrimopWrappers.fetchSubIntArray#_closure:
         const GHC.PrimopWrappers.fetchSubIntArray#_info;
 },
 GHC.PrimopWrappers.fetchSubIntArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cyNB,
                       label: GHC.PrimopWrappers.fetchSubIntArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyNB: // global
           _cyNz::P64 = (R2 + 16) + (R3 << 3);
           _cyNA::I64 = R4;
           (_cyNy::I64) = call MO_AtomicRMW W64 AMO_Sub(_cyNz::P64, _cyNA::I64);
           R1 = _cyNy::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.944018116 UTC

[section ""data" . GHC.PrimopWrappers.fetchAndIntArray#_closure" {
     GHC.PrimopWrappers.fetchAndIntArray#_closure:
         const GHC.PrimopWrappers.fetchAndIntArray#_info;
 },
 GHC.PrimopWrappers.fetchAndIntArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cyNT,
                       label: GHC.PrimopWrappers.fetchAndIntArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyNT: // global
           _cyNR::P64 = (R2 + 16) + (R3 << 3);
           _cyNS::I64 = R4;
           (_cyNQ::I64) = call MO_AtomicRMW W64 AMO_And(_cyNR::P64, _cyNS::I64);
           R1 = _cyNQ::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.948230949 UTC

[section ""data" . GHC.PrimopWrappers.fetchNandIntArray#_closure" {
     GHC.PrimopWrappers.fetchNandIntArray#_closure:
         const GHC.PrimopWrappers.fetchNandIntArray#_info;
 },
 GHC.PrimopWrappers.fetchNandIntArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cyOd,
                       label: GHC.PrimopWrappers.fetchNandIntArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyOd: // global
           _cyOb::P64 = (R2 + 16) + (R3 << 3);
           _cyOc::I64 = R4;
           (_cyOa::I64) = call MO_AtomicRMW W64 AMO_Nand(_cyOb::P64, _cyOc::I64);
           R1 = _cyOa::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.951871378 UTC

[section ""data" . GHC.PrimopWrappers.fetchOrIntArray#_closure" {
     GHC.PrimopWrappers.fetchOrIntArray#_closure:
         const GHC.PrimopWrappers.fetchOrIntArray#_info;
 },
 GHC.PrimopWrappers.fetchOrIntArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cyOx,
                       label: GHC.PrimopWrappers.fetchOrIntArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyOx: // global
           _cyOv::P64 = (R2 + 16) + (R3 << 3);
           _cyOw::I64 = R4;
           (_cyOu::I64) = call MO_AtomicRMW W64 AMO_Or(_cyOv::P64, _cyOw::I64);
           R1 = _cyOu::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.95583729 UTC

[section ""data" . GHC.PrimopWrappers.fetchXorIntArray#_closure" {
     GHC.PrimopWrappers.fetchXorIntArray#_closure:
         const GHC.PrimopWrappers.fetchXorIntArray#_info;
 },
 GHC.PrimopWrappers.fetchXorIntArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cyOR,
                       label: GHC.PrimopWrappers.fetchXorIntArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyOR: // global
           _cyOP::P64 = (R2 + 16) + (R3 << 3);
           _cyOQ::I64 = R4;
           (_cyOO::I64) = call MO_AtomicRMW W64 AMO_Xor(_cyOP::P64, _cyOQ::I64);
           R1 = _cyOO::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.959550608 UTC

[section ""data" . GHC.PrimopWrappers.newArrayArray#_closure" {
     GHC.PrimopWrappers.newArrayArray#_closure:
         const GHC.PrimopWrappers.newArrayArray#_info;
 },
 GHC.PrimopWrappers.newArrayArray#_entry() //  [R2]
         { info_tbl: [(cyP8,
                       label: GHC.PrimopWrappers.newArrayArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyP8: // global
           R1 = R2;
           call stg_newArrayArray#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.962984839 UTC

[section ""data" . GHC.PrimopWrappers.sameMutableArrayArray#_closure" {
     GHC.PrimopWrappers.sameMutableArrayArray#_closure:
         const GHC.PrimopWrappers.sameMutableArrayArray#_info;
 },
 GHC.PrimopWrappers.sameMutableArrayArray#_entry() //  [R2, R3]
         { info_tbl: [(cyPk,
                       label: GHC.PrimopWrappers.sameMutableArrayArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyPk: // global
           R1 = R2 == R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.966504375 UTC

[section ""data" . GHC.PrimopWrappers.unsafeFreezeArrayArray#_closure" {
     GHC.PrimopWrappers.unsafeFreezeArrayArray#_closure:
         const GHC.PrimopWrappers.unsafeFreezeArrayArray#_info;
 },
 GHC.PrimopWrappers.unsafeFreezeArrayArray#_entry() //  [R2]
         { info_tbl: [(cyPy,
                       label: GHC.PrimopWrappers.unsafeFreezeArrayArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyPy: // global
           I64[R2] = stg_MUT_ARR_PTRS_FROZEN0_info;
           R1 = R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.969973067 UTC

[section ""data" . GHC.PrimopWrappers.sizeofArrayArray#_closure" {
     GHC.PrimopWrappers.sizeofArrayArray#_closure:
         const GHC.PrimopWrappers.sizeofArrayArray#_info;
 },
 GHC.PrimopWrappers.sizeofArrayArray#_entry() //  [R2]
         { info_tbl: [(cyPL,
                       label: GHC.PrimopWrappers.sizeofArrayArray#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyPL: // global
           R1 = I64[R2 + 8];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.973875877 UTC

[section ""data" . GHC.PrimopWrappers.sizeofMutableArrayArray#_closure" {
     GHC.PrimopWrappers.sizeofMutableArrayArray#_closure:
         const GHC.PrimopWrappers.sizeofMutableArrayArray#_info;
 },
 GHC.PrimopWrappers.sizeofMutableArrayArray#_entry() //  [R2]
         { info_tbl: [(cyPY,
                       label: GHC.PrimopWrappers.sizeofMutableArrayArray#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyPY: // global
           R1 = I64[R2 + 8];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.977334536 UTC

[section ""data" . GHC.PrimopWrappers.indexByteArrayArray#_closure" {
     GHC.PrimopWrappers.indexByteArrayArray#_closure:
         const GHC.PrimopWrappers.indexByteArrayArray#_info;
 },
 GHC.PrimopWrappers.indexByteArrayArray#_entry() //  [R2, R3]
         { info_tbl: [(cyQb,
                       label: GHC.PrimopWrappers.indexByteArrayArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyQb: // global
           R1 = P64[(R2 + 24) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.980640287 UTC

[section ""data" . GHC.PrimopWrappers.indexArrayArrayArray#_closure" {
     GHC.PrimopWrappers.indexArrayArrayArray#_closure:
         const GHC.PrimopWrappers.indexArrayArrayArray#_info;
 },
 GHC.PrimopWrappers.indexArrayArrayArray#_entry() //  [R2, R3]
         { info_tbl: [(cyQo,
                       label: GHC.PrimopWrappers.indexArrayArrayArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyQo: // global
           R1 = P64[(R2 + 24) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.984032189 UTC

[section ""data" . GHC.PrimopWrappers.readByteArrayArray#_closure" {
     GHC.PrimopWrappers.readByteArrayArray#_closure:
         const GHC.PrimopWrappers.readByteArrayArray#_info;
 },
 GHC.PrimopWrappers.readByteArrayArray#_entry() //  [R2, R3]
         { info_tbl: [(cyQB,
                       label: GHC.PrimopWrappers.readByteArrayArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyQB: // global
           R1 = P64[(R2 + 24) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.98761616 UTC

[section ""data" . GHC.PrimopWrappers.readMutableByteArrayArray#_closure" {
     GHC.PrimopWrappers.readMutableByteArrayArray#_closure:
         const GHC.PrimopWrappers.readMutableByteArrayArray#_info;
 },
 GHC.PrimopWrappers.readMutableByteArrayArray#_entry() //  [R2, R3]
         { info_tbl: [(cyQO,
                       label: GHC.PrimopWrappers.readMutableByteArrayArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyQO: // global
           R1 = P64[(R2 + 24) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.991070961 UTC

[section ""data" . GHC.PrimopWrappers.readArrayArrayArray#_closure" {
     GHC.PrimopWrappers.readArrayArrayArray#_closure:
         const GHC.PrimopWrappers.readArrayArrayArray#_info;
 },
 GHC.PrimopWrappers.readArrayArrayArray#_entry() //  [R2, R3]
         { info_tbl: [(cyR1,
                       label: GHC.PrimopWrappers.readArrayArrayArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyR1: // global
           R1 = P64[(R2 + 24) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.994388556 UTC

[section ""data" . GHC.PrimopWrappers.readMutableArrayArrayArray#_closure" {
     GHC.PrimopWrappers.readMutableArrayArrayArray#_closure:
         const GHC.PrimopWrappers.readMutableArrayArrayArray#_info;
 },
 GHC.PrimopWrappers.readMutableArrayArrayArray#_entry() //  [R2, R3]
         { info_tbl: [(cyRe,
                       label: GHC.PrimopWrappers.readMutableArrayArrayArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyRe: // global
           R1 = P64[(R2 + 24) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:17.998345949 UTC

[section ""data" . GHC.PrimopWrappers.writeByteArrayArray#_closure" {
     GHC.PrimopWrappers.writeByteArrayArray#_closure:
         const GHC.PrimopWrappers.writeByteArrayArray#_info;
 },
 GHC.PrimopWrappers.writeByteArrayArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cyRq,
                       label: GHC.PrimopWrappers.writeByteArrayArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 21} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyRq: // global
           _B2::P64 = R4;
           _B3::I64 = R3;
           call MO_WriteBarrier();
           P64[(R2 + 24) + (_B3::I64 << 3)] = _B2::P64;
           I64[R2] = stg_MUT_ARR_PTRS_DIRTY_info;
           I8[(R2 + 24) + ((I64[R2 + 8] << 3) + (_B3::I64 >> 7))] = 1 :: W8;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.00233152 UTC

[section ""data" . GHC.PrimopWrappers.writeMutableByteArrayArray#_closure" {
     GHC.PrimopWrappers.writeMutableByteArrayArray#_closure:
         const GHC.PrimopWrappers.writeMutableByteArrayArray#_info;
 },
 GHC.PrimopWrappers.writeMutableByteArrayArray#_entry() //  [R2, R3,
                                                             R4]
         { info_tbl: [(cyRG,
                       label: GHC.PrimopWrappers.writeMutableByteArrayArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 21} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyRG: // global
           _B2::P64 = R4;
           _B3::I64 = R3;
           call MO_WriteBarrier();
           P64[(R2 + 24) + (_B3::I64 << 3)] = _B2::P64;
           I64[R2] = stg_MUT_ARR_PTRS_DIRTY_info;
           I8[(R2 + 24) + ((I64[R2 + 8] << 3) + (_B3::I64 >> 7))] = 1 :: W8;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.005828753 UTC

[section ""data" . GHC.PrimopWrappers.writeArrayArrayArray#_closure" {
     GHC.PrimopWrappers.writeArrayArrayArray#_closure:
         const GHC.PrimopWrappers.writeArrayArrayArray#_info;
 },
 GHC.PrimopWrappers.writeArrayArrayArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cyRW,
                       label: GHC.PrimopWrappers.writeArrayArrayArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 21} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyRW: // global
           _B2::P64 = R4;
           _B3::I64 = R3;
           call MO_WriteBarrier();
           P64[(R2 + 24) + (_B3::I64 << 3)] = _B2::P64;
           I64[R2] = stg_MUT_ARR_PTRS_DIRTY_info;
           I8[(R2 + 24) + ((I64[R2 + 8] << 3) + (_B3::I64 >> 7))] = 1 :: W8;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.009387916 UTC

[section ""data" . GHC.PrimopWrappers.writeMutableArrayArrayArray#_closure" {
     GHC.PrimopWrappers.writeMutableArrayArrayArray#_closure:
         const GHC.PrimopWrappers.writeMutableArrayArrayArray#_info;
 },
 GHC.PrimopWrappers.writeMutableArrayArrayArray#_entry() //  [R2,
                                                              R3, R4]
         { info_tbl: [(cySc,
                       label: GHC.PrimopWrappers.writeMutableArrayArrayArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 21} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cySc: // global
           _B2::P64 = R4;
           _B3::I64 = R3;
           call MO_WriteBarrier();
           P64[(R2 + 24) + (_B3::I64 << 3)] = _B2::P64;
           I64[R2] = stg_MUT_ARR_PTRS_DIRTY_info;
           I8[(R2 + 24) + ((I64[R2 + 8] << 3) + (_B3::I64 >> 7))] = 1 :: W8;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.013063847 UTC

[section ""data" . GHC.PrimopWrappers.copyArrayArray#_closure" {
     GHC.PrimopWrappers.copyArrayArray#_closure:
         const GHC.PrimopWrappers.copyArrayArray#_info;
 },
 GHC.PrimopWrappers.copyArrayArray#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cySp: // global
           R6 = I64[Sp + 32];
           R5 = I64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 40;
           call GHC.PrimopWrappers.copyArrayArray#_entry(R6,
                                                         R5,
                                                         R4,
                                                         R3,
                                                         R2,
                                                         R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.copyArrayArray#_entry() //  [R2, R3, R4, R5, R6]
         { info_tbl: [(cySt,
                       label: GHC.PrimopWrappers.copyArrayArray#_info
                       rep:HeapRep static {
                             Fun {arity: 6
                                  fun_type: ArgGen [False, True, False, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cySt: // global
           _B3::I64 = R5;
           R5 = R6;
           _B4::P64 = R4;
           R4 = _B3::I64;
           _B5::I64 = R3;
           R3 = _B4::P64;
           _B6::P64 = R2;
           R2 = _B5::I64;
           R1 = _B6::P64;
           call stg_copyArrayArray#(R5,
                                    R4,
                                    R3,
                                    R2,
                                    R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.018435576 UTC

[section ""data" . GHC.PrimopWrappers.copyMutableArrayArray#_closure" {
     GHC.PrimopWrappers.copyMutableArrayArray#_closure:
         const GHC.PrimopWrappers.copyMutableArrayArray#_info;
 },
 GHC.PrimopWrappers.copyMutableArrayArray#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cySD: // global
           R6 = I64[Sp + 32];
           R5 = I64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 40;
           call GHC.PrimopWrappers.copyMutableArrayArray#_entry(R6,
                                                                R5,
                                                                R4,
                                                                R3,
                                                                R2,
                                                                R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.copyMutableArrayArray#_entry() //  [R2, R3, R4,
                                                        R5, R6]
         { info_tbl: [(cySH,
                       label: GHC.PrimopWrappers.copyMutableArrayArray#_info
                       rep:HeapRep static {
                             Fun {arity: 6
                                  fun_type: ArgGen [False, True, False, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cySH: // global
           _B3::I64 = R5;
           R5 = R6;
           _B4::P64 = R4;
           R4 = _B3::I64;
           _B5::I64 = R3;
           R3 = _B4::P64;
           _B6::P64 = R2;
           R2 = _B5::I64;
           R1 = _B6::P64;
           call stg_copyMutableArrayArray#(R5,
                                           R4,
                                           R3,
                                           R2,
                                           R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.023703531 UTC

[section ""data" . GHC.PrimopWrappers.plusAddr#_closure" {
     GHC.PrimopWrappers.plusAddr#_closure:
         const GHC.PrimopWrappers.plusAddr#_info;
 },
 GHC.PrimopWrappers.plusAddr#_entry() //  [R2, R3]
         { info_tbl: [(cySV,
                       label: GHC.PrimopWrappers.plusAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cySV: // global
           R1 = R2 + R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.027419264 UTC

[section ""data" . GHC.PrimopWrappers.minusAddr#_closure" {
     GHC.PrimopWrappers.minusAddr#_closure:
         const GHC.PrimopWrappers.minusAddr#_info;
 },
 GHC.PrimopWrappers.minusAddr#_entry() //  [R2, R3]
         { info_tbl: [(cyT9,
                       label: GHC.PrimopWrappers.minusAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyT9: // global
           R1 = R2 - R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.030767645 UTC

[section ""data" . GHC.PrimopWrappers.remAddr#_closure" {
     GHC.PrimopWrappers.remAddr#_closure:
         const GHC.PrimopWrappers.remAddr#_info;
 },
 GHC.PrimopWrappers.remAddr#_entry() //  [R2, R3]
         { info_tbl: [(cyTn,
                       label: GHC.PrimopWrappers.remAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyTn: // global
           R1 = R2 % R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.034162197 UTC

[section ""data" . GHC.PrimopWrappers.addr2Int#_closure" {
     GHC.PrimopWrappers.addr2Int#_closure:
         const GHC.PrimopWrappers.addr2Int#_info;
 },
 GHC.PrimopWrappers.addr2Int#_entry() //  [R2]
         { info_tbl: [(cyTA,
                       label: GHC.PrimopWrappers.addr2Int#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyTA: // global
           R1 = R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.037659006 UTC

[section ""data" . GHC.PrimopWrappers.int2Addr#_closure" {
     GHC.PrimopWrappers.int2Addr#_closure:
         const GHC.PrimopWrappers.int2Addr#_info;
 },
 GHC.PrimopWrappers.int2Addr#_entry() //  [R2]
         { info_tbl: [(cyTN,
                       label: GHC.PrimopWrappers.int2Addr#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyTN: // global
           R1 = R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.040963776 UTC

[section ""data" . GHC.PrimopWrappers.gtAddr#_closure" {
     GHC.PrimopWrappers.gtAddr#_closure:
         const GHC.PrimopWrappers.gtAddr#_info;
 },
 GHC.PrimopWrappers.gtAddr#_entry() //  [R2, R3]
         { info_tbl: [(cyU0,
                       label: GHC.PrimopWrappers.gtAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyU0: // global
           R1 = R2 > R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.044416149 UTC

[section ""data" . GHC.PrimopWrappers.geAddr#_closure" {
     GHC.PrimopWrappers.geAddr#_closure:
         const GHC.PrimopWrappers.geAddr#_info;
 },
 GHC.PrimopWrappers.geAddr#_entry() //  [R2, R3]
         { info_tbl: [(cyUe,
                       label: GHC.PrimopWrappers.geAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyUe: // global
           R1 = R2 >= R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.047789922 UTC

[section ""data" . GHC.PrimopWrappers.eqAddr#_closure" {
     GHC.PrimopWrappers.eqAddr#_closure:
         const GHC.PrimopWrappers.eqAddr#_info;
 },
 GHC.PrimopWrappers.eqAddr#_entry() //  [R2, R3]
         { info_tbl: [(cyUs,
                       label: GHC.PrimopWrappers.eqAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyUs: // global
           R1 = R2 == R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.051743483 UTC

[section ""data" . GHC.PrimopWrappers.neAddr#_closure" {
     GHC.PrimopWrappers.neAddr#_closure:
         const GHC.PrimopWrappers.neAddr#_info;
 },
 GHC.PrimopWrappers.neAddr#_entry() //  [R2, R3]
         { info_tbl: [(cyUG,
                       label: GHC.PrimopWrappers.neAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyUG: // global
           R1 = R2 != R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.055072832 UTC

[section ""data" . GHC.PrimopWrappers.ltAddr#_closure" {
     GHC.PrimopWrappers.ltAddr#_closure:
         const GHC.PrimopWrappers.ltAddr#_info;
 },
 GHC.PrimopWrappers.ltAddr#_entry() //  [R2, R3]
         { info_tbl: [(cyUU,
                       label: GHC.PrimopWrappers.ltAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyUU: // global
           R1 = R2 < R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.05853689 UTC

[section ""data" . GHC.PrimopWrappers.leAddr#_closure" {
     GHC.PrimopWrappers.leAddr#_closure:
         const GHC.PrimopWrappers.leAddr#_info;
 },
 GHC.PrimopWrappers.leAddr#_entry() //  [R2, R3]
         { info_tbl: [(cyV8,
                       label: GHC.PrimopWrappers.leAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyV8: // global
           R1 = R2 <= R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.06186813 UTC

[section ""data" . GHC.PrimopWrappers.indexCharOffAddr#_closure" {
     GHC.PrimopWrappers.indexCharOffAddr#_closure:
         const GHC.PrimopWrappers.indexCharOffAddr#_info;
 },
 GHC.PrimopWrappers.indexCharOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cyVm,
                       label: GHC.PrimopWrappers.indexCharOffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyVm: // global
           R1 = %MO_UU_Conv_W8_W64(I8[R2 + R3]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.06513242 UTC

[section ""data" . GHC.PrimopWrappers.indexWideCharOffAddr#_closure" {
     GHC.PrimopWrappers.indexWideCharOffAddr#_closure:
         const GHC.PrimopWrappers.indexWideCharOffAddr#_info;
 },
 GHC.PrimopWrappers.indexWideCharOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cyVz,
                       label: GHC.PrimopWrappers.indexWideCharOffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyVz: // global
           R1 = %MO_UU_Conv_W32_W64(I32[R2 + (R3 << 2)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.068765597 UTC

[section ""data" . GHC.PrimopWrappers.indexIntOffAddr#_closure" {
     GHC.PrimopWrappers.indexIntOffAddr#_closure:
         const GHC.PrimopWrappers.indexIntOffAddr#_info;
 },
 GHC.PrimopWrappers.indexIntOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cyVM,
                       label: GHC.PrimopWrappers.indexIntOffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyVM: // global
           R1 = I64[R2 + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.072060544 UTC

[section ""data" . GHC.PrimopWrappers.indexWordOffAddr#_closure" {
     GHC.PrimopWrappers.indexWordOffAddr#_closure:
         const GHC.PrimopWrappers.indexWordOffAddr#_info;
 },
 GHC.PrimopWrappers.indexWordOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cyVZ,
                       label: GHC.PrimopWrappers.indexWordOffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyVZ: // global
           R1 = I64[R2 + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.075908825 UTC

[section ""data" . GHC.PrimopWrappers.indexAddrOffAddr#_closure" {
     GHC.PrimopWrappers.indexAddrOffAddr#_closure:
         const GHC.PrimopWrappers.indexAddrOffAddr#_info;
 },
 GHC.PrimopWrappers.indexAddrOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cyWc,
                       label: GHC.PrimopWrappers.indexAddrOffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyWc: // global
           R1 = I64[R2 + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.079232144 UTC

[section ""data" . GHC.PrimopWrappers.indexFloatOffAddr#_closure" {
     GHC.PrimopWrappers.indexFloatOffAddr#_closure:
         const GHC.PrimopWrappers.indexFloatOffAddr#_info;
 },
 GHC.PrimopWrappers.indexFloatOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cyWp,
                       label: GHC.PrimopWrappers.indexFloatOffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyWp: // global
           F1 = F32[R2 + (R3 << 2)];
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.082584877 UTC

[section ""data" . GHC.PrimopWrappers.indexDoubleOffAddr#_closure" {
     GHC.PrimopWrappers.indexDoubleOffAddr#_closure:
         const GHC.PrimopWrappers.indexDoubleOffAddr#_info;
 },
 GHC.PrimopWrappers.indexDoubleOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cyWC,
                       label: GHC.PrimopWrappers.indexDoubleOffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyWC: // global
           D1 = F64[R2 + (R3 << 3)];
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.085959211 UTC

[section ""data" . GHC.PrimopWrappers.indexStablePtrOffAddr#_closure" {
     GHC.PrimopWrappers.indexStablePtrOffAddr#_closure:
         const GHC.PrimopWrappers.indexStablePtrOffAddr#_info;
 },
 GHC.PrimopWrappers.indexStablePtrOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cyWP,
                       label: GHC.PrimopWrappers.indexStablePtrOffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyWP: // global
           R1 = I64[R2 + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.089211697 UTC

[section ""data" . GHC.PrimopWrappers.indexInt8OffAddr#_closure" {
     GHC.PrimopWrappers.indexInt8OffAddr#_closure:
         const GHC.PrimopWrappers.indexInt8OffAddr#_info;
 },
 GHC.PrimopWrappers.indexInt8OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cyX2,
                       label: GHC.PrimopWrappers.indexInt8OffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyX2: // global
           R1 = %MO_SS_Conv_W8_W64(I8[R2 + R3]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.092528239 UTC

[section ""data" . GHC.PrimopWrappers.indexInt16OffAddr#_closure" {
     GHC.PrimopWrappers.indexInt16OffAddr#_closure:
         const GHC.PrimopWrappers.indexInt16OffAddr#_info;
 },
 GHC.PrimopWrappers.indexInt16OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cyXf,
                       label: GHC.PrimopWrappers.indexInt16OffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyXf: // global
           R1 = %MO_SS_Conv_W16_W64(I16[R2 + (R3 << 1)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.095930127 UTC

[section ""data" . GHC.PrimopWrappers.indexInt32OffAddr#_closure" {
     GHC.PrimopWrappers.indexInt32OffAddr#_closure:
         const GHC.PrimopWrappers.indexInt32OffAddr#_info;
 },
 GHC.PrimopWrappers.indexInt32OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cyXs,
                       label: GHC.PrimopWrappers.indexInt32OffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyXs: // global
           R1 = %MO_SS_Conv_W32_W64(I32[R2 + (R3 << 2)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.099937396 UTC

[section ""data" . GHC.PrimopWrappers.indexInt64OffAddr#_closure" {
     GHC.PrimopWrappers.indexInt64OffAddr#_closure:
         const GHC.PrimopWrappers.indexInt64OffAddr#_info;
 },
 GHC.PrimopWrappers.indexInt64OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cyXF,
                       label: GHC.PrimopWrappers.indexInt64OffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyXF: // global
           R1 = I64[R2 + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.103711296 UTC

[section ""data" . GHC.PrimopWrappers.indexWord8OffAddr#_closure" {
     GHC.PrimopWrappers.indexWord8OffAddr#_closure:
         const GHC.PrimopWrappers.indexWord8OffAddr#_info;
 },
 GHC.PrimopWrappers.indexWord8OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cyXS,
                       label: GHC.PrimopWrappers.indexWord8OffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyXS: // global
           R1 = %MO_UU_Conv_W8_W64(I8[R2 + R3]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.107136822 UTC

[section ""data" . GHC.PrimopWrappers.indexWord16OffAddr#_closure" {
     GHC.PrimopWrappers.indexWord16OffAddr#_closure:
         const GHC.PrimopWrappers.indexWord16OffAddr#_info;
 },
 GHC.PrimopWrappers.indexWord16OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cyY5,
                       label: GHC.PrimopWrappers.indexWord16OffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyY5: // global
           R1 = %MO_UU_Conv_W16_W64(I16[R2 + (R3 << 1)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.110533715 UTC

[section ""data" . GHC.PrimopWrappers.indexWord32OffAddr#_closure" {
     GHC.PrimopWrappers.indexWord32OffAddr#_closure:
         const GHC.PrimopWrappers.indexWord32OffAddr#_info;
 },
 GHC.PrimopWrappers.indexWord32OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cyYi,
                       label: GHC.PrimopWrappers.indexWord32OffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyYi: // global
           R1 = %MO_UU_Conv_W32_W64(I32[R2 + (R3 << 2)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.113895833 UTC

[section ""data" . GHC.PrimopWrappers.indexWord64OffAddr#_closure" {
     GHC.PrimopWrappers.indexWord64OffAddr#_closure:
         const GHC.PrimopWrappers.indexWord64OffAddr#_info;
 },
 GHC.PrimopWrappers.indexWord64OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cyYv,
                       label: GHC.PrimopWrappers.indexWord64OffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyYv: // global
           R1 = I64[R2 + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.117321624 UTC

[section ""data" . GHC.PrimopWrappers.readCharOffAddr#_closure" {
     GHC.PrimopWrappers.readCharOffAddr#_closure:
         const GHC.PrimopWrappers.readCharOffAddr#_info;
 },
 GHC.PrimopWrappers.readCharOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cyYI,
                       label: GHC.PrimopWrappers.readCharOffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyYI: // global
           R1 = %MO_UU_Conv_W8_W64(I8[R2 + R3]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.120703405 UTC

[section ""data" . GHC.PrimopWrappers.readWideCharOffAddr#_closure" {
     GHC.PrimopWrappers.readWideCharOffAddr#_closure:
         const GHC.PrimopWrappers.readWideCharOffAddr#_info;
 },
 GHC.PrimopWrappers.readWideCharOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cyYV,
                       label: GHC.PrimopWrappers.readWideCharOffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyYV: // global
           R1 = %MO_UU_Conv_W32_W64(I32[R2 + (R3 << 2)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.124557403 UTC

[section ""data" . GHC.PrimopWrappers.readIntOffAddr#_closure" {
     GHC.PrimopWrappers.readIntOffAddr#_closure:
         const GHC.PrimopWrappers.readIntOffAddr#_info;
 },
 GHC.PrimopWrappers.readIntOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cyZ8,
                       label: GHC.PrimopWrappers.readIntOffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyZ8: // global
           R1 = I64[R2 + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.1288001 UTC

[section ""data" . GHC.PrimopWrappers.readWordOffAddr#_closure" {
     GHC.PrimopWrappers.readWordOffAddr#_closure:
         const GHC.PrimopWrappers.readWordOffAddr#_info;
 },
 GHC.PrimopWrappers.readWordOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cyZl,
                       label: GHC.PrimopWrappers.readWordOffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyZl: // global
           R1 = I64[R2 + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.132221331 UTC

[section ""data" . GHC.PrimopWrappers.readAddrOffAddr#_closure" {
     GHC.PrimopWrappers.readAddrOffAddr#_closure:
         const GHC.PrimopWrappers.readAddrOffAddr#_info;
 },
 GHC.PrimopWrappers.readAddrOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cyZy,
                       label: GHC.PrimopWrappers.readAddrOffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyZy: // global
           R1 = I64[R2 + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.135658933 UTC

[section ""data" . GHC.PrimopWrappers.readFloatOffAddr#_closure" {
     GHC.PrimopWrappers.readFloatOffAddr#_closure:
         const GHC.PrimopWrappers.readFloatOffAddr#_info;
 },
 GHC.PrimopWrappers.readFloatOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cyZL,
                       label: GHC.PrimopWrappers.readFloatOffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyZL: // global
           F1 = F32[R2 + (R3 << 2)];
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.139976675 UTC

[section ""data" . GHC.PrimopWrappers.readDoubleOffAddr#_closure" {
     GHC.PrimopWrappers.readDoubleOffAddr#_closure:
         const GHC.PrimopWrappers.readDoubleOffAddr#_info;
 },
 GHC.PrimopWrappers.readDoubleOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cyZY,
                       label: GHC.PrimopWrappers.readDoubleOffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cyZY: // global
           D1 = F64[R2 + (R3 << 3)];
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.143547554 UTC

[section ""data" . GHC.PrimopWrappers.readStablePtrOffAddr#_closure" {
     GHC.PrimopWrappers.readStablePtrOffAddr#_closure:
         const GHC.PrimopWrappers.readStablePtrOffAddr#_info;
 },
 GHC.PrimopWrappers.readStablePtrOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cz0b,
                       label: GHC.PrimopWrappers.readStablePtrOffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cz0b: // global
           R1 = I64[R2 + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.147090502 UTC

[section ""data" . GHC.PrimopWrappers.readInt8OffAddr#_closure" {
     GHC.PrimopWrappers.readInt8OffAddr#_closure:
         const GHC.PrimopWrappers.readInt8OffAddr#_info;
 },
 GHC.PrimopWrappers.readInt8OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cz0o,
                       label: GHC.PrimopWrappers.readInt8OffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cz0o: // global
           R1 = %MO_SS_Conv_W8_W64(I8[R2 + R3]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.150599969 UTC

[section ""data" . GHC.PrimopWrappers.readInt16OffAddr#_closure" {
     GHC.PrimopWrappers.readInt16OffAddr#_closure:
         const GHC.PrimopWrappers.readInt16OffAddr#_info;
 },
 GHC.PrimopWrappers.readInt16OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cz0B,
                       label: GHC.PrimopWrappers.readInt16OffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cz0B: // global
           R1 = %MO_SS_Conv_W16_W64(I16[R2 + (R3 << 1)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.154572297 UTC

[section ""data" . GHC.PrimopWrappers.readInt32OffAddr#_closure" {
     GHC.PrimopWrappers.readInt32OffAddr#_closure:
         const GHC.PrimopWrappers.readInt32OffAddr#_info;
 },
 GHC.PrimopWrappers.readInt32OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cz0O,
                       label: GHC.PrimopWrappers.readInt32OffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cz0O: // global
           R1 = %MO_SS_Conv_W32_W64(I32[R2 + (R3 << 2)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.158043077 UTC

[section ""data" . GHC.PrimopWrappers.readInt64OffAddr#_closure" {
     GHC.PrimopWrappers.readInt64OffAddr#_closure:
         const GHC.PrimopWrappers.readInt64OffAddr#_info;
 },
 GHC.PrimopWrappers.readInt64OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cz11,
                       label: GHC.PrimopWrappers.readInt64OffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cz11: // global
           R1 = I64[R2 + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.161428854 UTC

[section ""data" . GHC.PrimopWrappers.readWord8OffAddr#_closure" {
     GHC.PrimopWrappers.readWord8OffAddr#_closure:
         const GHC.PrimopWrappers.readWord8OffAddr#_info;
 },
 GHC.PrimopWrappers.readWord8OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cz1e,
                       label: GHC.PrimopWrappers.readWord8OffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cz1e: // global
           R1 = %MO_UU_Conv_W8_W64(I8[R2 + R3]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.164763266 UTC

[section ""data" . GHC.PrimopWrappers.readWord16OffAddr#_closure" {
     GHC.PrimopWrappers.readWord16OffAddr#_closure:
         const GHC.PrimopWrappers.readWord16OffAddr#_info;
 },
 GHC.PrimopWrappers.readWord16OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cz1r,
                       label: GHC.PrimopWrappers.readWord16OffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cz1r: // global
           R1 = %MO_UU_Conv_W16_W64(I16[R2 + (R3 << 1)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.168158505 UTC

[section ""data" . GHC.PrimopWrappers.readWord32OffAddr#_closure" {
     GHC.PrimopWrappers.readWord32OffAddr#_closure:
         const GHC.PrimopWrappers.readWord32OffAddr#_info;
 },
 GHC.PrimopWrappers.readWord32OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cz1E,
                       label: GHC.PrimopWrappers.readWord32OffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cz1E: // global
           R1 = %MO_UU_Conv_W32_W64(I32[R2 + (R3 << 2)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.171562704 UTC

[section ""data" . GHC.PrimopWrappers.readWord64OffAddr#_closure" {
     GHC.PrimopWrappers.readWord64OffAddr#_closure:
         const GHC.PrimopWrappers.readWord64OffAddr#_info;
 },
 GHC.PrimopWrappers.readWord64OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cz1R,
                       label: GHC.PrimopWrappers.readWord64OffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cz1R: // global
           R1 = I64[R2 + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.175052221 UTC

[section ""data" . GHC.PrimopWrappers.writeCharOffAddr#_closure" {
     GHC.PrimopWrappers.writeCharOffAddr#_closure:
         const GHC.PrimopWrappers.writeCharOffAddr#_info;
 },
 GHC.PrimopWrappers.writeCharOffAddr#_entry() //  [R2, R3, R4]
         { info_tbl: [(cz23,
                       label: GHC.PrimopWrappers.writeCharOffAddr#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 16} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cz23: // global
           I8[R2 + R3] = %MO_UU_Conv_W64_W8(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.17899882 UTC

[section ""data" . GHC.PrimopWrappers.writeWideCharOffAddr#_closure" {
     GHC.PrimopWrappers.writeWideCharOffAddr#_closure:
         const GHC.PrimopWrappers.writeWideCharOffAddr#_info;
 },
 GHC.PrimopWrappers.writeWideCharOffAddr#_entry() //  [R2, R3, R4]
         { info_tbl: [(cz2g,
                       label: GHC.PrimopWrappers.writeWideCharOffAddr#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 16} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cz2g: // global
           I32[R2 + (R3 << 2)] = %MO_UU_Conv_W64_W32(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.182946933 UTC

[section ""data" . GHC.PrimopWrappers.writeIntOffAddr#_closure" {
     GHC.PrimopWrappers.writeIntOffAddr#_closure:
         const GHC.PrimopWrappers.writeIntOffAddr#_info;
 },
 GHC.PrimopWrappers.writeIntOffAddr#_entry() //  [R2, R3, R4]
         { info_tbl: [(cz2s,
                       label: GHC.PrimopWrappers.writeIntOffAddr#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 16} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cz2s: // global
           I64[R2 + (R3 << 3)] = R4;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.18641862 UTC

[section ""data" . GHC.PrimopWrappers.writeWordOffAddr#_closure" {
     GHC.PrimopWrappers.writeWordOffAddr#_closure:
         const GHC.PrimopWrappers.writeWordOffAddr#_info;
 },
 GHC.PrimopWrappers.writeWordOffAddr#_entry() //  [R2, R3, R4]
         { info_tbl: [(cz2E,
                       label: GHC.PrimopWrappers.writeWordOffAddr#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 16} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cz2E: // global
           I64[R2 + (R3 << 3)] = R4;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.190297939 UTC

[section ""data" . GHC.PrimopWrappers.writeAddrOffAddr#_closure" {
     GHC.PrimopWrappers.writeAddrOffAddr#_closure:
         const GHC.PrimopWrappers.writeAddrOffAddr#_info;
 },
 GHC.PrimopWrappers.writeAddrOffAddr#_entry() //  [R2, R3, R4]
         { info_tbl: [(cz2Q,
                       label: GHC.PrimopWrappers.writeAddrOffAddr#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 16} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cz2Q: // global
           I64[R2 + (R3 << 3)] = R4;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.193655523 UTC

[section ""data" . GHC.PrimopWrappers.writeFloatOffAddr#_closure" {
     GHC.PrimopWrappers.writeFloatOffAddr#_closure:
         const GHC.PrimopWrappers.writeFloatOffAddr#_info;
 },
 GHC.PrimopWrappers.writeFloatOffAddr#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cz2Z: // global
           F1 = F32[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = I64[Sp];
           R1 = R1;
           Sp = Sp + 24;
           call GHC.PrimopWrappers.writeFloatOffAddr#_entry(F1,
                                                            R3,
                                                            R2,
                                                            R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.writeFloatOffAddr#_entry() //  [R2, R3, F1]
         { info_tbl: [(cz33,
                       label: GHC.PrimopWrappers.writeFloatOffAddr#_info
                       rep:HeapRep static {
                             Fun {arity: 4 fun_type: ArgGen [True, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cz33: // global
           F32[R2 + (R3 << 2)] = F1;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.198089425 UTC

[section ""data" . GHC.PrimopWrappers.writeDoubleOffAddr#_closure" {
     GHC.PrimopWrappers.writeDoubleOffAddr#_closure:
         const GHC.PrimopWrappers.writeDoubleOffAddr#_info;
 },
 GHC.PrimopWrappers.writeDoubleOffAddr#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cz3e: // global
           D1 = F64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = I64[Sp];
           R1 = R1;
           Sp = Sp + 24;
           call GHC.PrimopWrappers.writeDoubleOffAddr#_entry(D1,
                                                             R3,
                                                             R2,
                                                             R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.writeDoubleOffAddr#_entry() //  [R2, R3, D1]
         { info_tbl: [(cz3i,
                       label: GHC.PrimopWrappers.writeDoubleOffAddr#_info
                       rep:HeapRep static {
                             Fun {arity: 4 fun_type: ArgGen [True, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cz3i: // global
           F64[R2 + (R3 << 3)] = D1;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.20311779 UTC

[section ""data" . GHC.PrimopWrappers.writeStablePtrOffAddr#_closure" {
     GHC.PrimopWrappers.writeStablePtrOffAddr#_closure:
         const GHC.PrimopWrappers.writeStablePtrOffAddr#_info;
 },
 GHC.PrimopWrappers.writeStablePtrOffAddr#_entry() //  [R2, R3, R4]
         { info_tbl: [(cz3w,
                       label: GHC.PrimopWrappers.writeStablePtrOffAddr#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 16} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cz3w: // global
           I64[R2 + (R3 << 3)] = R4;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.207609344 UTC

[section ""data" . GHC.PrimopWrappers.writeInt8OffAddr#_closure" {
     GHC.PrimopWrappers.writeInt8OffAddr#_closure:
         const GHC.PrimopWrappers.writeInt8OffAddr#_info;
 },
 GHC.PrimopWrappers.writeInt8OffAddr#_entry() //  [R2, R3, R4]
         { info_tbl: [(cz3I,
                       label: GHC.PrimopWrappers.writeInt8OffAddr#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 16} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cz3I: // global
           I8[R2 + R3] = %MO_UU_Conv_W64_W8(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.211018065 UTC

[section ""data" . GHC.PrimopWrappers.writeInt16OffAddr#_closure" {
     GHC.PrimopWrappers.writeInt16OffAddr#_closure:
         const GHC.PrimopWrappers.writeInt16OffAddr#_info;
 },
 GHC.PrimopWrappers.writeInt16OffAddr#_entry() //  [R2, R3, R4]
         { info_tbl: [(cz3V,
                       label: GHC.PrimopWrappers.writeInt16OffAddr#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 16} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cz3V: // global
           I16[R2 + (R3 << 1)] = %MO_UU_Conv_W64_W16(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.21451156 UTC

[section ""data" . GHC.PrimopWrappers.writeInt32OffAddr#_closure" {
     GHC.PrimopWrappers.writeInt32OffAddr#_closure:
         const GHC.PrimopWrappers.writeInt32OffAddr#_info;
 },
 GHC.PrimopWrappers.writeInt32OffAddr#_entry() //  [R2, R3, R4]
         { info_tbl: [(cz48,
                       label: GHC.PrimopWrappers.writeInt32OffAddr#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 16} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cz48: // global
           I32[R2 + (R3 << 2)] = %MO_UU_Conv_W64_W32(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.218003781 UTC

[section ""data" . GHC.PrimopWrappers.writeInt64OffAddr#_closure" {
     GHC.PrimopWrappers.writeInt64OffAddr#_closure:
         const GHC.PrimopWrappers.writeInt64OffAddr#_info;
 },
 GHC.PrimopWrappers.writeInt64OffAddr#_entry() //  [R2, R3, R4]
         { info_tbl: [(cz4k,
                       label: GHC.PrimopWrappers.writeInt64OffAddr#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 16} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cz4k: // global
           I64[R2 + (R3 << 3)] = R4;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.221760315 UTC

[section ""data" . GHC.PrimopWrappers.writeWord8OffAddr#_closure" {
     GHC.PrimopWrappers.writeWord8OffAddr#_closure:
         const GHC.PrimopWrappers.writeWord8OffAddr#_info;
 },
 GHC.PrimopWrappers.writeWord8OffAddr#_entry() //  [R2, R3, R4]
         { info_tbl: [(cz4w,
                       label: GHC.PrimopWrappers.writeWord8OffAddr#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 16} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cz4w: // global
           I8[R2 + R3] = %MO_UU_Conv_W64_W8(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.225103766 UTC

[section ""data" . GHC.PrimopWrappers.writeWord16OffAddr#_closure" {
     GHC.PrimopWrappers.writeWord16OffAddr#_closure:
         const GHC.PrimopWrappers.writeWord16OffAddr#_info;
 },
 GHC.PrimopWrappers.writeWord16OffAddr#_entry() //  [R2, R3, R4]
         { info_tbl: [(cz4J,
                       label: GHC.PrimopWrappers.writeWord16OffAddr#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 16} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cz4J: // global
           I16[R2 + (R3 << 1)] = %MO_UU_Conv_W64_W16(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.229192894 UTC

[section ""data" . GHC.PrimopWrappers.writeWord32OffAddr#_closure" {
     GHC.PrimopWrappers.writeWord32OffAddr#_closure:
         const GHC.PrimopWrappers.writeWord32OffAddr#_info;
 },
 GHC.PrimopWrappers.writeWord32OffAddr#_entry() //  [R2, R3, R4]
         { info_tbl: [(cz4W,
                       label: GHC.PrimopWrappers.writeWord32OffAddr#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 16} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cz4W: // global
           I32[R2 + (R3 << 2)] = %MO_UU_Conv_W64_W32(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.232674571 UTC

[section ""data" . GHC.PrimopWrappers.writeWord64OffAddr#_closure" {
     GHC.PrimopWrappers.writeWord64OffAddr#_closure:
         const GHC.PrimopWrappers.writeWord64OffAddr#_info;
 },
 GHC.PrimopWrappers.writeWord64OffAddr#_entry() //  [R2, R3, R4]
         { info_tbl: [(cz58,
                       label: GHC.PrimopWrappers.writeWord64OffAddr#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 16} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cz58: // global
           I64[R2 + (R3 << 3)] = R4;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.236023364 UTC

[section ""data" . GHC.PrimopWrappers.newMutVar#_closure" {
     GHC.PrimopWrappers.newMutVar#_closure:
         const GHC.PrimopWrappers.newMutVar#_info;
 },
 GHC.PrimopWrappers.newMutVar#_entry() //  [R2]
         { info_tbl: [(cz5k,
                       label: GHC.PrimopWrappers.newMutVar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cz5k: // global
           R1 = R2;
           call stg_newMutVar#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.239382218 UTC

[section ""data" . GHC.PrimopWrappers.readMutVar#_closure" {
     GHC.PrimopWrappers.readMutVar#_closure:
         const GHC.PrimopWrappers.readMutVar#_info;
 },
 GHC.PrimopWrappers.readMutVar#_entry() //  [R2]
         { info_tbl: [(cz5w,
                       label: GHC.PrimopWrappers.readMutVar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cz5w: // global
           R1 = P64[R2 + 8];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.243005567 UTC

[section ""data" . GHC.PrimopWrappers.writeMutVar#_closure" {
     GHC.PrimopWrappers.writeMutVar#_closure:
         const GHC.PrimopWrappers.writeMutVar#_info;
 },
 GHC.PrimopWrappers.writeMutVar#_entry() //  [R2, R3]
         { info_tbl: [(cz5L,
                       label: GHC.PrimopWrappers.writeMutVar#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cz5L: // global
           _B2::P64 = R3;
           call MO_WriteBarrier();
           P64[R2 + 8] = _B2::P64;
           call "ccall" arg hints:  [PtrHint,
                                     PtrHint]  result hints:  [] dirty_MUT_VAR(BaseReg, R2);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.246706963 UTC

[section ""data" . GHC.PrimopWrappers.sameMutVar#_closure" {
     GHC.PrimopWrappers.sameMutVar#_closure:
         const GHC.PrimopWrappers.sameMutVar#_info;
 },
 GHC.PrimopWrappers.sameMutVar#_entry() //  [R2, R3]
         { info_tbl: [(cz5Z,
                       label: GHC.PrimopWrappers.sameMutVar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cz5Z: // global
           R1 = R2 == R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.250031067 UTC

[section ""data" . GHC.PrimopWrappers.atomicModifyMutVar#_closure" {
     GHC.PrimopWrappers.atomicModifyMutVar#_closure:
         const GHC.PrimopWrappers.atomicModifyMutVar#_info;
 },
 GHC.PrimopWrappers.atomicModifyMutVar#_entry() //  [R2, R3]
         { info_tbl: [(cz6c,
                       label: GHC.PrimopWrappers.atomicModifyMutVar#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cz6c: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_atomicModifyMutVar#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.25428939 UTC

[section ""data" . GHC.PrimopWrappers.casMutVar#_closure" {
     GHC.PrimopWrappers.casMutVar#_closure:
         const GHC.PrimopWrappers.casMutVar#_info;
 },
 GHC.PrimopWrappers.casMutVar#_entry() //  [R2, R3, R4]
         { info_tbl: [(cz6n,
                       label: GHC.PrimopWrappers.casMutVar#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cz6n: // global
           _B3::P64 = R3;
           R3 = R4;
           _B4::P64 = R2;
           R2 = _B3::P64;
           R1 = _B4::P64;
           call stg_casMutVar#(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.257677401 UTC

[section ""data" . GHC.PrimopWrappers.catch#_closure" {
     GHC.PrimopWrappers.catch#_closure:
         const GHC.PrimopWrappers.catch#_info;
 },
 GHC.PrimopWrappers.catch#_entry() //  [R2, R3]
         { info_tbl: [(cz6y,
                       label: GHC.PrimopWrappers.catch#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cz6y: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_catch#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.260953686 UTC

[section ""data" . GHC.PrimopWrappers.raise#_closure" {
     GHC.PrimopWrappers.raise#_closure:
         const GHC.PrimopWrappers.raise#_info;
 },
 GHC.PrimopWrappers.raise#_entry() //  [R2]
         { info_tbl: [(cz6J,
                       label: GHC.PrimopWrappers.raise#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cz6J: // global
           R1 = R2;
           call stg_raise#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.264304103 UTC

[section ""data" . GHC.PrimopWrappers.raiseIO#_closure" {
     GHC.PrimopWrappers.raiseIO#_closure:
         const GHC.PrimopWrappers.raiseIO#_info;
 },
 GHC.PrimopWrappers.raiseIO#_entry() //  [R2]
         { info_tbl: [(cz6U,
                       label: GHC.PrimopWrappers.raiseIO#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cz6U: // global
           R1 = R2;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.267640652 UTC

[section ""data" . GHC.PrimopWrappers.maskAsyncExceptions#_closure" {
     GHC.PrimopWrappers.maskAsyncExceptions#_closure:
         const GHC.PrimopWrappers.maskAsyncExceptions#_info;
 },
 GHC.PrimopWrappers.maskAsyncExceptions#_entry() //  [R2]
         { info_tbl: [(cz75,
                       label: GHC.PrimopWrappers.maskAsyncExceptions#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cz75: // global
           R1 = R2;
           call stg_maskAsyncExceptions#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.270945455 UTC

[section ""data" . GHC.PrimopWrappers.maskUninterruptible#_closure" {
     GHC.PrimopWrappers.maskUninterruptible#_closure:
         const GHC.PrimopWrappers.maskUninterruptible#_info;
 },
 GHC.PrimopWrappers.maskUninterruptible#_entry() //  [R2]
         { info_tbl: [(cz7g,
                       label: GHC.PrimopWrappers.maskUninterruptible#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cz7g: // global
           R1 = R2;
           call stg_maskUninterruptible#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.274387625 UTC

[section ""data" . GHC.PrimopWrappers.unmaskAsyncExceptions#_closure" {
     GHC.PrimopWrappers.unmaskAsyncExceptions#_closure:
         const GHC.PrimopWrappers.unmaskAsyncExceptions#_info;
 },
 GHC.PrimopWrappers.unmaskAsyncExceptions#_entry() //  [R2]
         { info_tbl: [(cz7r,
                       label: GHC.PrimopWrappers.unmaskAsyncExceptions#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cz7r: // global
           R1 = R2;
           call stg_unmaskAsyncExceptions#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.278309 UTC

[section ""data" . GHC.PrimopWrappers.getMaskingState#_closure" {
     GHC.PrimopWrappers.getMaskingState#_closure:
         const GHC.PrimopWrappers.getMaskingState#_info;
 },
 GHC.PrimopWrappers.getMaskingState#_entry() //  []
         { info_tbl: [(cz7C,
                       label: GHC.PrimopWrappers.getMaskingState#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cz7C: // global
           call stg_getMaskingState#() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.281440217 UTC

[section ""data" . GHC.PrimopWrappers.atomically#_closure" {
     GHC.PrimopWrappers.atomically#_closure:
         const GHC.PrimopWrappers.atomically#_info;
 },
 GHC.PrimopWrappers.atomically#_entry() //  [R2]
         { info_tbl: [(cz7N,
                       label: GHC.PrimopWrappers.atomically#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cz7N: // global
           R1 = R2;
           call stg_atomically#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.284708743 UTC

[section ""data" . GHC.PrimopWrappers.retry#_closure" {
     GHC.PrimopWrappers.retry#_closure:
         const GHC.PrimopWrappers.retry#_info;
 },
 GHC.PrimopWrappers.retry#_entry() //  []
         { info_tbl: [(cz7Y,
                       label: GHC.PrimopWrappers.retry#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cz7Y: // global
           call stg_retry#() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.287906939 UTC

[section ""data" . GHC.PrimopWrappers.catchRetry#_closure" {
     GHC.PrimopWrappers.catchRetry#_closure:
         const GHC.PrimopWrappers.catchRetry#_info;
 },
 GHC.PrimopWrappers.catchRetry#_entry() //  [R2, R3]
         { info_tbl: [(cz89,
                       label: GHC.PrimopWrappers.catchRetry#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cz89: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_catchRetry#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.291374946 UTC

[section ""data" . GHC.PrimopWrappers.catchSTM#_closure" {
     GHC.PrimopWrappers.catchSTM#_closure:
         const GHC.PrimopWrappers.catchSTM#_info;
 },
 GHC.PrimopWrappers.catchSTM#_entry() //  [R2, R3]
         { info_tbl: [(cz8k,
                       label: GHC.PrimopWrappers.catchSTM#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cz8k: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_catchSTM#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.294826838 UTC

[section ""data" . GHC.PrimopWrappers.check#_closure" {
     GHC.PrimopWrappers.check#_closure:
         const GHC.PrimopWrappers.check#_info;
 },
 GHC.PrimopWrappers.check#_entry() //  [R2]
         { info_tbl: [(cz8v,
                       label: GHC.PrimopWrappers.check#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cz8v: // global
           R1 = R2;
           call stg_check#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.298255297 UTC

[section ""data" . GHC.PrimopWrappers.newTVar#_closure" {
     GHC.PrimopWrappers.newTVar#_closure:
         const GHC.PrimopWrappers.newTVar#_info;
 },
 GHC.PrimopWrappers.newTVar#_entry() //  [R2]
         { info_tbl: [(cz8G,
                       label: GHC.PrimopWrappers.newTVar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cz8G: // global
           R1 = R2;
           call stg_newTVar#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.302111177 UTC

[section ""data" . GHC.PrimopWrappers.readTVar#_closure" {
     GHC.PrimopWrappers.readTVar#_closure:
         const GHC.PrimopWrappers.readTVar#_info;
 },
 GHC.PrimopWrappers.readTVar#_entry() //  [R2]
         { info_tbl: [(cz8R,
                       label: GHC.PrimopWrappers.readTVar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cz8R: // global
           R1 = R2;
           call stg_readTVar#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.305906228 UTC

[section ""data" . GHC.PrimopWrappers.readTVarIO#_closure" {
     GHC.PrimopWrappers.readTVarIO#_closure:
         const GHC.PrimopWrappers.readTVarIO#_info;
 },
 GHC.PrimopWrappers.readTVarIO#_entry() //  [R2]
         { info_tbl: [(cz92,
                       label: GHC.PrimopWrappers.readTVarIO#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cz92: // global
           R1 = R2;
           call stg_readTVarIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.309278739 UTC

[section ""data" . GHC.PrimopWrappers.writeTVar#_closure" {
     GHC.PrimopWrappers.writeTVar#_closure:
         const GHC.PrimopWrappers.writeTVar#_info;
 },
 GHC.PrimopWrappers.writeTVar#_entry() //  [R2, R3]
         { info_tbl: [(cz9d,
                       label: GHC.PrimopWrappers.writeTVar#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cz9d: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_writeTVar#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.312639721 UTC

[section ""data" . GHC.PrimopWrappers.sameTVar#_closure" {
     GHC.PrimopWrappers.sameTVar#_closure:
         const GHC.PrimopWrappers.sameTVar#_info;
 },
 GHC.PrimopWrappers.sameTVar#_entry() //  [R2, R3]
         { info_tbl: [(cz9p,
                       label: GHC.PrimopWrappers.sameTVar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cz9p: // global
           R1 = R2 == R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.316010579 UTC

[section ""data" . GHC.PrimopWrappers.newMVar#_closure" {
     GHC.PrimopWrappers.newMVar#_closure:
         const GHC.PrimopWrappers.newMVar#_info;
 },
 GHC.PrimopWrappers.newMVar#_entry() //  []
         { info_tbl: [(cz9C,
                       label: GHC.PrimopWrappers.newMVar#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cz9C: // global
           call stg_newMVar#() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.319558739 UTC

[section ""data" . GHC.PrimopWrappers.takeMVar#_closure" {
     GHC.PrimopWrappers.takeMVar#_closure:
         const GHC.PrimopWrappers.takeMVar#_info;
 },
 GHC.PrimopWrappers.takeMVar#_entry() //  [R2]
         { info_tbl: [(cz9N,
                       label: GHC.PrimopWrappers.takeMVar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cz9N: // global
           R1 = R2;
           call stg_takeMVar#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.323032027 UTC

[section ""data" . GHC.PrimopWrappers.tryTakeMVar#_closure" {
     GHC.PrimopWrappers.tryTakeMVar#_closure:
         const GHC.PrimopWrappers.tryTakeMVar#_info;
 },
 GHC.PrimopWrappers.tryTakeMVar#_entry() //  [R2]
         { info_tbl: [(cz9Y,
                       label: GHC.PrimopWrappers.tryTakeMVar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cz9Y: // global
           R1 = R2;
           call stg_tryTakeMVar#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.326867653 UTC

[section ""data" . GHC.PrimopWrappers.putMVar#_closure" {
     GHC.PrimopWrappers.putMVar#_closure:
         const GHC.PrimopWrappers.putMVar#_info;
 },
 GHC.PrimopWrappers.putMVar#_entry() //  [R2, R3]
         { info_tbl: [(cza9,
                       label: GHC.PrimopWrappers.putMVar#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cza9: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_putMVar#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.330238032 UTC

[section ""data" . GHC.PrimopWrappers.tryPutMVar#_closure" {
     GHC.PrimopWrappers.tryPutMVar#_closure:
         const GHC.PrimopWrappers.tryPutMVar#_info;
 },
 GHC.PrimopWrappers.tryPutMVar#_entry() //  [R2, R3]
         { info_tbl: [(czak,
                       label: GHC.PrimopWrappers.tryPutMVar#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czak: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_tryPutMVar#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.333557752 UTC

[section ""data" . GHC.PrimopWrappers.readMVar#_closure" {
     GHC.PrimopWrappers.readMVar#_closure:
         const GHC.PrimopWrappers.readMVar#_info;
 },
 GHC.PrimopWrappers.readMVar#_entry() //  [R2]
         { info_tbl: [(czav,
                       label: GHC.PrimopWrappers.readMVar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czav: // global
           R1 = R2;
           call stg_readMVar#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.336733351 UTC

[section ""data" . GHC.PrimopWrappers.tryReadMVar#_closure" {
     GHC.PrimopWrappers.tryReadMVar#_closure:
         const GHC.PrimopWrappers.tryReadMVar#_info;
 },
 GHC.PrimopWrappers.tryReadMVar#_entry() //  [R2]
         { info_tbl: [(czaG,
                       label: GHC.PrimopWrappers.tryReadMVar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czaG: // global
           R1 = R2;
           call stg_tryReadMVar#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.33998138 UTC

[section ""data" . GHC.PrimopWrappers.sameMVar#_closure" {
     GHC.PrimopWrappers.sameMVar#_closure:
         const GHC.PrimopWrappers.sameMVar#_info;
 },
 GHC.PrimopWrappers.sameMVar#_entry() //  [R2, R3]
         { info_tbl: [(czaS,
                       label: GHC.PrimopWrappers.sameMVar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czaS: // global
           R1 = R2 == R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.343399578 UTC

[section ""data" . GHC.PrimopWrappers.isEmptyMVar#_closure" {
     GHC.PrimopWrappers.isEmptyMVar#_closure:
         const GHC.PrimopWrappers.isEmptyMVar#_info;
 },
 GHC.PrimopWrappers.isEmptyMVar#_entry() //  [R2]
         { info_tbl: [(czb5,
                       label: GHC.PrimopWrappers.isEmptyMVar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czb5: // global
           R1 = R2;
           call stg_isEmptyMVar#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.346722401 UTC

[section ""data" . GHC.PrimopWrappers.delay#_closure" {
     GHC.PrimopWrappers.delay#_closure:
         const GHC.PrimopWrappers.delay#_info;
 },
 GHC.PrimopWrappers.delay#_entry() //  [R2]
         { info_tbl: [(czbg,
                       label: GHC.PrimopWrappers.delay#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czbg: // global
           R1 = R2;
           call stg_delay#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.350653053 UTC

[section ""data" . GHC.PrimopWrappers.waitRead#_closure" {
     GHC.PrimopWrappers.waitRead#_closure:
         const GHC.PrimopWrappers.waitRead#_info;
 },
 GHC.PrimopWrappers.waitRead#_entry() //  [R2]
         { info_tbl: [(czbr,
                       label: GHC.PrimopWrappers.waitRead#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czbr: // global
           R1 = R2;
           call stg_waitRead#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.353866317 UTC

[section ""data" . GHC.PrimopWrappers.waitWrite#_closure" {
     GHC.PrimopWrappers.waitWrite#_closure:
         const GHC.PrimopWrappers.waitWrite#_info;
 },
 GHC.PrimopWrappers.waitWrite#_entry() //  [R2]
         { info_tbl: [(czbC,
                       label: GHC.PrimopWrappers.waitWrite#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czbC: // global
           R1 = R2;
           call stg_waitWrite#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.357117491 UTC

[section ""data" . GHC.PrimopWrappers.fork#_closure" {
     GHC.PrimopWrappers.fork#_closure:
         const GHC.PrimopWrappers.fork#_info;
 },
 GHC.PrimopWrappers.fork#_entry() //  [R2]
         { info_tbl: [(czbN,
                       label: GHC.PrimopWrappers.fork#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czbN: // global
           R1 = R2;
           call stg_fork#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.360453751 UTC

[section ""data" . GHC.PrimopWrappers.forkOn#_closure" {
     GHC.PrimopWrappers.forkOn#_closure:
         const GHC.PrimopWrappers.forkOn#_info;
 },
 GHC.PrimopWrappers.forkOn#_entry() //  [R2, R3]
         { info_tbl: [(czbY,
                       label: GHC.PrimopWrappers.forkOn#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 13} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czbY: // global
           _B3::I64 = R2;
           R2 = R3;
           R1 = _B3::I64;
           call stg_forkOn#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.363864231 UTC

[section ""data" . GHC.PrimopWrappers.killThread#_closure" {
     GHC.PrimopWrappers.killThread#_closure:
         const GHC.PrimopWrappers.killThread#_info;
 },
 GHC.PrimopWrappers.killThread#_entry() //  [R2, R3]
         { info_tbl: [(czc9,
                       label: GHC.PrimopWrappers.killThread#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czc9: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_killThread#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.367261835 UTC

[section ""data" . GHC.PrimopWrappers.yield#_closure" {
     GHC.PrimopWrappers.yield#_closure:
         const GHC.PrimopWrappers.yield#_info;
 },
 GHC.PrimopWrappers.yield#_entry() //  []
         { info_tbl: [(czck,
                       label: GHC.PrimopWrappers.yield#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czck: // global
           call stg_yield#() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.371973931 UTC

[section ""data" . GHC.PrimopWrappers.myThreadId#_closure" {
     GHC.PrimopWrappers.myThreadId#_closure:
         const GHC.PrimopWrappers.myThreadId#_info;
 },
 GHC.PrimopWrappers.myThreadId#_entry() //  []
         { info_tbl: [(czcw,
                       label: GHC.PrimopWrappers.myThreadId#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czcw: // global
           R1 = CurrentTSO;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.376036859 UTC

[section ""data" . GHC.PrimopWrappers.labelThread#_closure" {
     GHC.PrimopWrappers.labelThread#_closure:
         const GHC.PrimopWrappers.labelThread#_info;
 },
 GHC.PrimopWrappers.labelThread#_entry() //  [R2, R3]
         { info_tbl: [(czcI,
                       label: GHC.PrimopWrappers.labelThread#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czcI: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_labelThread#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.379521284 UTC

[section ""data" . GHC.PrimopWrappers.isCurrentThreadBound#_closure" {
     GHC.PrimopWrappers.isCurrentThreadBound#_closure:
         const GHC.PrimopWrappers.isCurrentThreadBound#_info;
 },
 GHC.PrimopWrappers.isCurrentThreadBound#_entry() //  []
         { info_tbl: [(czcT,
                       label: GHC.PrimopWrappers.isCurrentThreadBound#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czcT: // global
           call stg_isCurrentThreadBound#() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.382885482 UTC

[section ""data" . GHC.PrimopWrappers.noDuplicate#_closure" {
     GHC.PrimopWrappers.noDuplicate#_closure:
         const GHC.PrimopWrappers.noDuplicate#_info;
 },
 GHC.PrimopWrappers.noDuplicate#_entry() //  []
         { info_tbl: [(czd4,
                       label: GHC.PrimopWrappers.noDuplicate#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czd4: // global
           call stg_noDuplicate#() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.386330199 UTC

[section ""data" . GHC.PrimopWrappers.threadStatus#_closure" {
     GHC.PrimopWrappers.threadStatus#_closure:
         const GHC.PrimopWrappers.threadStatus#_info;
 },
 GHC.PrimopWrappers.threadStatus#_entry() //  [R2]
         { info_tbl: [(czdf,
                       label: GHC.PrimopWrappers.threadStatus#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czdf: // global
           R1 = R2;
           call stg_threadStatus#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.389730246 UTC

[section ""data" . GHC.PrimopWrappers.mkWeak#_closure" {
     GHC.PrimopWrappers.mkWeak#_closure:
         const GHC.PrimopWrappers.mkWeak#_info;
 },
 GHC.PrimopWrappers.mkWeak#_entry() //  [R2, R3, R4]
         { info_tbl: [(czdq,
                       label: GHC.PrimopWrappers.mkWeak#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czdq: // global
           _B3::P64 = R3;
           R3 = R4;
           _B4::P64 = R2;
           R2 = _B3::P64;
           R1 = _B4::P64;
           call stg_mkWeak#(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.393230616 UTC

[section ""data" . GHC.PrimopWrappers.mkWeakNoFinalizer#_closure" {
     GHC.PrimopWrappers.mkWeakNoFinalizer#_closure:
         const GHC.PrimopWrappers.mkWeakNoFinalizer#_info;
 },
 GHC.PrimopWrappers.mkWeakNoFinalizer#_entry() //  [R2, R3]
         { info_tbl: [(czdB,
                       label: GHC.PrimopWrappers.mkWeakNoFinalizer#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czdB: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_mkWeakNoFinalizer#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.396778561 UTC

[section ""data" . GHC.PrimopWrappers.addCFinalizerToWeak#_closure" {
     GHC.PrimopWrappers.addCFinalizerToWeak#_closure:
         const GHC.PrimopWrappers.addCFinalizerToWeak#_info;
 },
 GHC.PrimopWrappers.addCFinalizerToWeak#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czdJ: // global
           R6 = P64[Sp + 32];
           R5 = I64[Sp + 24];
           R4 = I64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = I64[Sp];
           R1 = R1;
           Sp = Sp + 40;
           call GHC.PrimopWrappers.addCFinalizerToWeak#_entry(R6,
                                                              R5,
                                                              R4,
                                                              R3,
                                                              R2,
                                                              R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.addCFinalizerToWeak#_entry() //  [R2, R3, R4,
                                                      R5, R6]
         { info_tbl: [(czdN,
                       label: GHC.PrimopWrappers.addCFinalizerToWeak#_info
                       rep:HeapRep static {
                             Fun {arity: 6 fun_type: ArgGen [True, True, True, True, False]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czdN: // global
           _B3::I64 = R5;
           R5 = R6;
           _B4::I64 = R4;
           R4 = _B3::I64;
           _B5::I64 = R3;
           R3 = _B4::I64;
           _B6::I64 = R2;
           R2 = _B5::I64;
           R1 = _B6::I64;
           call stg_addCFinalizerToWeak#(R5,
                                         R4,
                                         R3,
                                         R2,
                                         R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.402207944 UTC

[section ""data" . GHC.PrimopWrappers.deRefWeak#_closure" {
     GHC.PrimopWrappers.deRefWeak#_closure:
         const GHC.PrimopWrappers.deRefWeak#_info;
 },
 GHC.PrimopWrappers.deRefWeak#_entry() //  [R2]
         { info_tbl: [(cze0,
                       label: GHC.PrimopWrappers.deRefWeak#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cze0: // global
           R1 = R2;
           call stg_deRefWeak#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.405593445 UTC

[section ""data" . GHC.PrimopWrappers.finalizeWeak#_closure" {
     GHC.PrimopWrappers.finalizeWeak#_closure:
         const GHC.PrimopWrappers.finalizeWeak#_info;
 },
 GHC.PrimopWrappers.finalizeWeak#_entry() //  [R2]
         { info_tbl: [(czeb,
                       label: GHC.PrimopWrappers.finalizeWeak#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czeb: // global
           R1 = R2;
           call stg_finalizeWeak#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.408931162 UTC

[section ""data" . GHC.PrimopWrappers.touch#_closure" {
     GHC.PrimopWrappers.touch#_closure:
         const GHC.PrimopWrappers.touch#_info;
 },
 GHC.PrimopWrappers.touch#_entry() //  [R2]
         { info_tbl: [(czen,
                       label: GHC.PrimopWrappers.touch#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czen: // global
           call MO_Touch(R2);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.412344415 UTC

[section ""data" . GHC.PrimopWrappers.makeStablePtr#_closure" {
     GHC.PrimopWrappers.makeStablePtr#_closure:
         const GHC.PrimopWrappers.makeStablePtr#_info;
 },
 GHC.PrimopWrappers.makeStablePtr#_entry() //  [R2]
         { info_tbl: [(czez,
                       label: GHC.PrimopWrappers.makeStablePtr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czez: // global
           R1 = R2;
           call stg_makeStablePtr#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.415878149 UTC

[section ""data" . GHC.PrimopWrappers.deRefStablePtr#_closure" {
     GHC.PrimopWrappers.deRefStablePtr#_closure:
         const GHC.PrimopWrappers.deRefStablePtr#_info;
 },
 GHC.PrimopWrappers.deRefStablePtr#_entry() //  [R2]
         { info_tbl: [(czeK,
                       label: GHC.PrimopWrappers.deRefStablePtr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czeK: // global
           R1 = R2;
           call stg_deRefStablePtr#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.419588455 UTC

[section ""data" . GHC.PrimopWrappers.eqStablePtr#_closure" {
     GHC.PrimopWrappers.eqStablePtr#_closure:
         const GHC.PrimopWrappers.eqStablePtr#_info;
 },
 GHC.PrimopWrappers.eqStablePtr#_entry() //  [R2, R3]
         { info_tbl: [(czeW,
                       label: GHC.PrimopWrappers.eqStablePtr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czeW: // global
           R1 = R2 == R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.423104955 UTC

[section ""data" . GHC.PrimopWrappers.makeStableName#_closure" {
     GHC.PrimopWrappers.makeStableName#_closure:
         const GHC.PrimopWrappers.makeStableName#_info;
 },
 GHC.PrimopWrappers.makeStableName#_entry() //  [R2]
         { info_tbl: [(czf9,
                       label: GHC.PrimopWrappers.makeStableName#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czf9: // global
           R1 = R2;
           call stg_makeStableName#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.427117903 UTC

[section ""data" . GHC.PrimopWrappers.eqStableName#_closure" {
     GHC.PrimopWrappers.eqStableName#_closure:
         const GHC.PrimopWrappers.eqStableName#_info;
 },
 GHC.PrimopWrappers.eqStableName#_entry() //  [R2, R3]
         { info_tbl: [(czfl,
                       label: GHC.PrimopWrappers.eqStableName#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czfl: // global
           R1 = I64[R2 + 8] == I64[R3 + 8];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.43058212 UTC

[section ""data" . GHC.PrimopWrappers.stableNameToInt#_closure" {
     GHC.PrimopWrappers.stableNameToInt#_closure:
         const GHC.PrimopWrappers.stableNameToInt#_info;
 },
 GHC.PrimopWrappers.stableNameToInt#_entry() //  [R2]
         { info_tbl: [(czfA,
                       label: GHC.PrimopWrappers.stableNameToInt#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czfA: // global
           R1 = I64[R2 + 8];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.434000964 UTC

[section ""data" . GHC.PrimopWrappers.compactNew#_closure" {
     GHC.PrimopWrappers.compactNew#_closure:
         const GHC.PrimopWrappers.compactNew#_info;
 },
 GHC.PrimopWrappers.compactNew#_entry() //  [R2]
         { info_tbl: [(czfM,
                       label: GHC.PrimopWrappers.compactNew#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czfM: // global
           R1 = R2;
           call stg_compactNew#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.43737548 UTC

[section ""data" . GHC.PrimopWrappers.compactResize#_closure" {
     GHC.PrimopWrappers.compactResize#_closure:
         const GHC.PrimopWrappers.compactResize#_info;
 },
 GHC.PrimopWrappers.compactResize#_entry() //  [R2, R3]
         { info_tbl: [(czfX,
                       label: GHC.PrimopWrappers.compactResize#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czfX: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_compactResize#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.440794878 UTC

[section ""data" . GHC.PrimopWrappers.compactContains#_closure" {
     GHC.PrimopWrappers.compactContains#_closure:
         const GHC.PrimopWrappers.compactContains#_info;
 },
 GHC.PrimopWrappers.compactContains#_entry() //  [R2, R3]
         { info_tbl: [(czg8,
                       label: GHC.PrimopWrappers.compactContains#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czg8: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_compactContains#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.444610511 UTC

[section ""data" . GHC.PrimopWrappers.compactContainsAny#_closure" {
     GHC.PrimopWrappers.compactContainsAny#_closure:
         const GHC.PrimopWrappers.compactContainsAny#_info;
 },
 GHC.PrimopWrappers.compactContainsAny#_entry() //  [R2]
         { info_tbl: [(czgj,
                       label: GHC.PrimopWrappers.compactContainsAny#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czgj: // global
           R1 = R2;
           call stg_compactContainsAny#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.448030067 UTC

[section ""data" . GHC.PrimopWrappers.compactGetFirstBlock#_closure" {
     GHC.PrimopWrappers.compactGetFirstBlock#_closure:
         const GHC.PrimopWrappers.compactGetFirstBlock#_info;
 },
 GHC.PrimopWrappers.compactGetFirstBlock#_entry() //  [R2]
         { info_tbl: [(czgu,
                       label: GHC.PrimopWrappers.compactGetFirstBlock#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czgu: // global
           R1 = R2;
           call stg_compactGetFirstBlock#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.452007035 UTC

[section ""data" . GHC.PrimopWrappers.compactGetNextBlock#_closure" {
     GHC.PrimopWrappers.compactGetNextBlock#_closure:
         const GHC.PrimopWrappers.compactGetNextBlock#_info;
 },
 GHC.PrimopWrappers.compactGetNextBlock#_entry() //  [R2, R3]
         { info_tbl: [(czgF,
                       label: GHC.PrimopWrappers.compactGetNextBlock#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czgF: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_compactGetNextBlock#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.458008025 UTC

[section ""data" . GHC.PrimopWrappers.compactAllocateBlock#_closure" {
     GHC.PrimopWrappers.compactAllocateBlock#_closure:
         const GHC.PrimopWrappers.compactAllocateBlock#_info;
 },
 GHC.PrimopWrappers.compactAllocateBlock#_entry() //  [R2, R3]
         { info_tbl: [(czgQ,
                       label: GHC.PrimopWrappers.compactAllocateBlock#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czgQ: // global
           _B3::I64 = R2;
           R2 = R3;
           R1 = _B3::I64;
           call stg_compactAllocateBlock#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.461391588 UTC

[section ""data" . GHC.PrimopWrappers.compactFixupPointers#_closure" {
     GHC.PrimopWrappers.compactFixupPointers#_closure:
         const GHC.PrimopWrappers.compactFixupPointers#_info;
 },
 GHC.PrimopWrappers.compactFixupPointers#_entry() //  [R2, R3]
         { info_tbl: [(czh1,
                       label: GHC.PrimopWrappers.compactFixupPointers#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czh1: // global
           _B3::I64 = R2;
           R2 = R3;
           R1 = _B3::I64;
           call stg_compactFixupPointers#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.464615699 UTC

[section ""data" . GHC.PrimopWrappers.compactAdd#_closure" {
     GHC.PrimopWrappers.compactAdd#_closure:
         const GHC.PrimopWrappers.compactAdd#_info;
 },
 GHC.PrimopWrappers.compactAdd#_entry() //  [R2, R3]
         { info_tbl: [(czhc,
                       label: GHC.PrimopWrappers.compactAdd#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czhc: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_compactAdd#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.467906973 UTC

[section ""data" . GHC.PrimopWrappers.compactAddWithSharing#_closure" {
     GHC.PrimopWrappers.compactAddWithSharing#_closure:
         const GHC.PrimopWrappers.compactAddWithSharing#_info;
 },
 GHC.PrimopWrappers.compactAddWithSharing#_entry() //  [R2, R3]
         { info_tbl: [(czhn,
                       label: GHC.PrimopWrappers.compactAddWithSharing#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czhn: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_compactAddWithSharing#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.471238023 UTC

[section ""data" . GHC.PrimopWrappers.compactSize#_closure" {
     GHC.PrimopWrappers.compactSize#_closure:
         const GHC.PrimopWrappers.compactSize#_info;
 },
 GHC.PrimopWrappers.compactSize#_entry() //  [R2]
         { info_tbl: [(czhy,
                       label: GHC.PrimopWrappers.compactSize#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czhy: // global
           R1 = R2;
           call stg_compactSize#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.474757473 UTC

[section ""data" . GHC.PrimopWrappers.reallyUnsafePtrEquality#_closure" {
     GHC.PrimopWrappers.reallyUnsafePtrEquality#_closure:
         const GHC.PrimopWrappers.reallyUnsafePtrEquality#_info;
 },
 GHC.PrimopWrappers.reallyUnsafePtrEquality#_entry() //  [R2, R3]
         { info_tbl: [(czhK,
                       label: GHC.PrimopWrappers.reallyUnsafePtrEquality#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czhK: // global
           R1 = R2 == R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.478988979 UTC

[section ""data" . GHC.PrimopWrappers.par#_closure" {
     GHC.PrimopWrappers.par#_closure:
         const GHC.PrimopWrappers.par#_info;
 },
 GHC.PrimopWrappers.par#_entry() //  [R2]
         { info_tbl: [(czi1,
                       label: GHC.PrimopWrappers.par#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czi1: // global
           (_czhX::I64) = call "ccall" arg hints:  [PtrHint,
                                                    PtrHint]  result hints:  [] newSpark(BaseReg, R2);
           R1 = _czhX::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.482486092 UTC

[section ""data" . GHC.PrimopWrappers.spark#_closure" {
     GHC.PrimopWrappers.spark#_closure:
         const GHC.PrimopWrappers.spark#_info;
 },
 GHC.PrimopWrappers.spark#_entry() //  [R2]
         { info_tbl: [(czij,
                       label: GHC.PrimopWrappers.spark#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czij: // global
           (_czif::I64) = call "ccall" arg hints:  [PtrHint,
                                                    PtrHint]  result hints:  [] newSpark(BaseReg, R2);
           R1 = R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.486048148 UTC

[section ""data" . GHC.PrimopWrappers.seq#_closure" {
     GHC.PrimopWrappers.seq#_closure:
         const GHC.PrimopWrappers.seq#_info;
 },
 GHC.PrimopWrappers.seq#_entry() //  [R2]
         { info_tbl: [(cziw,
                       label: GHC.PrimopWrappers.seq#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cziw: // global
           R1 = R2;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.489314205 UTC

[section ""data" . GHC.PrimopWrappers.getSpark#_closure" {
     GHC.PrimopWrappers.getSpark#_closure:
         const GHC.PrimopWrappers.getSpark#_info;
 },
 GHC.PrimopWrappers.getSpark#_entry() //  []
         { info_tbl: [(cziH,
                       label: GHC.PrimopWrappers.getSpark#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cziH: // global
           call stg_getSpark#() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.492409687 UTC

[section ""data" . GHC.PrimopWrappers.numSparks#_closure" {
     GHC.PrimopWrappers.numSparks#_closure:
         const GHC.PrimopWrappers.numSparks#_info;
 },
 GHC.PrimopWrappers.numSparks#_entry() //  []
         { info_tbl: [(cziS,
                       label: GHC.PrimopWrappers.numSparks#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cziS: // global
           call stg_numSparks#() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.495816716 UTC

[section ""data" . GHC.PrimopWrappers.dataToTag#_closure" {
     GHC.PrimopWrappers.dataToTag#_closure:
         const GHC.PrimopWrappers.dataToTag#_info;
 },
 GHC.PrimopWrappers.dataToTag#_entry() //  [R2]
         { info_tbl: [(czj6,
                       label: GHC.PrimopWrappers.dataToTag#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czj6: // global
           if ((Sp + -8) < SpLim) (likely: False) goto czj7; else goto czj8;
       czj7: // global
           R2 = R2;
           R1 = GHC.PrimopWrappers.dataToTag#_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       czj8: // global
           I64[Sp - 8] = block_czj3_info;
           R1 = R2;
           Sp = Sp - 8;
           call stg_ap_0_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _czj3() //  [R1]
         { info_tbl: [(czj3,
                       label: block_czj3_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czj3: // global
           R1 = %MO_UU_Conv_W32_W64(I32[I64[R1 & (-8)] + 20]);
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.501112568 UTC

[section ""data" . GHC.PrimopWrappers.addrToAny#_closure" {
     GHC.PrimopWrappers.addrToAny#_closure:
         const GHC.PrimopWrappers.addrToAny#_info;
 },
 GHC.PrimopWrappers.addrToAny#_entry() //  [R2]
         { info_tbl: [(czjr,
                       label: GHC.PrimopWrappers.addrToAny#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czjr: // global
           R1 = R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.505077835 UTC

[section ""data" . GHC.PrimopWrappers.anyToAddr#_closure" {
     GHC.PrimopWrappers.anyToAddr#_closure:
         const GHC.PrimopWrappers.anyToAddr#_info;
 },
 GHC.PrimopWrappers.anyToAddr#_entry() //  [R2]
         { info_tbl: [(czjE,
                       label: GHC.PrimopWrappers.anyToAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czjE: // global
           R1 = R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.50854053 UTC

[section ""data" . GHC.PrimopWrappers.mkApUpd0#_closure" {
     GHC.PrimopWrappers.mkApUpd0#_closure:
         const GHC.PrimopWrappers.mkApUpd0#_info;
 },
 GHC.PrimopWrappers.mkApUpd0#_entry() //  [R2]
         { info_tbl: [(czjQ,
                       label: GHC.PrimopWrappers.mkApUpd0#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czjQ: // global
           R1 = R2;
           call stg_mkApUpd0#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.512004062 UTC

[section ""data" . GHC.PrimopWrappers.newBCO#_closure" {
     GHC.PrimopWrappers.newBCO#_closure:
         const GHC.PrimopWrappers.newBCO#_info;
 },
 GHC.PrimopWrappers.newBCO#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czjY: // global
           R6 = P64[Sp + 32];
           R5 = I64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = P64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 40;
           call GHC.PrimopWrappers.newBCO#_entry(R6,
                                                 R5,
                                                 R4,
                                                 R3,
                                                 R2,
                                                 R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.newBCO#_entry() //  [R2, R3, R4, R5, R6]
         { info_tbl: [(czk2,
                       label: GHC.PrimopWrappers.newBCO#_info
                       rep:HeapRep static {
                             Fun {arity: 6
                                  fun_type: ArgGen [False, False, False, True, False]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czk2: // global
           _B3::I64 = R5;
           R5 = R6;
           _B4::P64 = R4;
           R4 = _B3::I64;
           _B5::P64 = R3;
           R3 = _B4::P64;
           _B6::P64 = R2;
           R2 = _B5::P64;
           R1 = _B6::P64;
           call stg_newBCO#(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.516801467 UTC

[section ""data" . GHC.PrimopWrappers.unpackClosure#_closure" {
     GHC.PrimopWrappers.unpackClosure#_closure:
         const GHC.PrimopWrappers.unpackClosure#_info;
 },
 GHC.PrimopWrappers.unpackClosure#_entry() //  [R2]
         { info_tbl: [(czkf,
                       label: GHC.PrimopWrappers.unpackClosure#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czkf: // global
           R1 = R2;
           call stg_unpackClosure#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.520095875 UTC

[section ""data" . GHC.PrimopWrappers.getApStackVal#_closure" {
     GHC.PrimopWrappers.getApStackVal#_closure:
         const GHC.PrimopWrappers.getApStackVal#_info;
 },
 GHC.PrimopWrappers.getApStackVal#_entry() //  [R2, R3]
         { info_tbl: [(czkq,
                       label: GHC.PrimopWrappers.getApStackVal#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czkq: // global
           _B2::P64 = R2;
           R2 = R3;
           R1 = _B2::P64;
           call stg_getApStackVal#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.523582091 UTC

[section ""data" . GHC.PrimopWrappers.getCCSOf#_closure" {
     GHC.PrimopWrappers.getCCSOf#_closure:
         const GHC.PrimopWrappers.getCCSOf#_info;
 },
 GHC.PrimopWrappers.getCCSOf#_entry() //  []
         { info_tbl: [(czkC,
                       label: GHC.PrimopWrappers.getCCSOf#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czkC: // global
           R1 = 0;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.527025372 UTC

[section ""data" . GHC.PrimopWrappers.getCurrentCCS#_closure" {
     GHC.PrimopWrappers.getCurrentCCS#_closure:
         const GHC.PrimopWrappers.getCurrentCCS#_info;
 },
 GHC.PrimopWrappers.getCurrentCCS#_entry() //  []
         { info_tbl: [(czkP,
                       label: GHC.PrimopWrappers.getCurrentCCS#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czkP: // global
           R1 = CCCS;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.531793735 UTC

[section ""data" . GHC.PrimopWrappers.clearCCS#_closure" {
     GHC.PrimopWrappers.clearCCS#_closure:
         const GHC.PrimopWrappers.clearCCS#_info;
 },
 GHC.PrimopWrappers.clearCCS#_entry() //  [R2]
         { info_tbl: [(czl1,
                       label: GHC.PrimopWrappers.clearCCS#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czl1: // global
           R1 = R2;
           call stg_clearCCS#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.535281081 UTC

[section ""data" . GHC.PrimopWrappers.traceEvent#_closure" {
     GHC.PrimopWrappers.traceEvent#_closure:
         const GHC.PrimopWrappers.traceEvent#_info;
 },
 GHC.PrimopWrappers.traceEvent#_entry() //  [R2]
         { info_tbl: [(czlc,
                       label: GHC.PrimopWrappers.traceEvent#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czlc: // global
           R1 = R2;
           call stg_traceEvent#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.539376796 UTC

[section ""data" . GHC.PrimopWrappers.traceMarker#_closure" {
     GHC.PrimopWrappers.traceMarker#_closure:
         const GHC.PrimopWrappers.traceMarker#_info;
 },
 GHC.PrimopWrappers.traceMarker#_entry() //  [R2]
         { info_tbl: [(czln,
                       label: GHC.PrimopWrappers.traceMarker#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czln: // global
           R1 = R2;
           call stg_traceMarker#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.542835586 UTC

[section ""data" . GHC.PrimopWrappers.prefetchByteArray3#_closure" {
     GHC.PrimopWrappers.prefetchByteArray3#_closure:
         const GHC.PrimopWrappers.prefetchByteArray3#_info;
 },
 GHC.PrimopWrappers.prefetchByteArray3#_entry() //  [R2, R3]
         { info_tbl: [(czlz,
                       label: GHC.PrimopWrappers.prefetchByteArray3#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czlz: // global
           _czly::P64 = (R2 + 16) + R3;
           call MO_Prefetch_Data 3(_czly::P64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.546312229 UTC

[section ""data" . GHC.PrimopWrappers.prefetchMutableByteArray3#_closure" {
     GHC.PrimopWrappers.prefetchMutableByteArray3#_closure:
         const GHC.PrimopWrappers.prefetchMutableByteArray3#_info;
 },
 GHC.PrimopWrappers.prefetchMutableByteArray3#_entry() //  [R2, R3]
         { info_tbl: [(czlO,
                       label: GHC.PrimopWrappers.prefetchMutableByteArray3#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czlO: // global
           _czlN::P64 = (R2 + 16) + R3;
           call MO_Prefetch_Data 3(_czlN::P64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.550044934 UTC

[section ""data" . GHC.PrimopWrappers.prefetchAddr3#_closure" {
     GHC.PrimopWrappers.prefetchAddr3#_closure:
         const GHC.PrimopWrappers.prefetchAddr3#_info;
 },
 GHC.PrimopWrappers.prefetchAddr3#_entry() //  [R2, R3]
         { info_tbl: [(czm3,
                       label: GHC.PrimopWrappers.prefetchAddr3#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czm3: // global
           _czm2::I64 = R2 + R3;
           call MO_Prefetch_Data 3(_czm2::I64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.555396745 UTC

[section ""data" . GHC.PrimopWrappers.prefetchValue3#_closure" {
     GHC.PrimopWrappers.prefetchValue3#_closure:
         const GHC.PrimopWrappers.prefetchValue3#_info;
 },
 GHC.PrimopWrappers.prefetchValue3#_entry() //  [R2]
         { info_tbl: [(czmi,
                       label: GHC.PrimopWrappers.prefetchValue3#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czmi: // global
           call MO_Prefetch_Data 3(R2);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.559403795 UTC

[section ""data" . GHC.PrimopWrappers.prefetchByteArray2#_closure" {
     GHC.PrimopWrappers.prefetchByteArray2#_closure:
         const GHC.PrimopWrappers.prefetchByteArray2#_info;
 },
 GHC.PrimopWrappers.prefetchByteArray2#_entry() //  [R2, R3]
         { info_tbl: [(czmw,
                       label: GHC.PrimopWrappers.prefetchByteArray2#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czmw: // global
           _czmv::P64 = (R2 + 16) + R3;
           call MO_Prefetch_Data 2(_czmv::P64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.562992656 UTC

[section ""data" . GHC.PrimopWrappers.prefetchMutableByteArray2#_closure" {
     GHC.PrimopWrappers.prefetchMutableByteArray2#_closure:
         const GHC.PrimopWrappers.prefetchMutableByteArray2#_info;
 },
 GHC.PrimopWrappers.prefetchMutableByteArray2#_entry() //  [R2, R3]
         { info_tbl: [(czmL,
                       label: GHC.PrimopWrappers.prefetchMutableByteArray2#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czmL: // global
           _czmK::P64 = (R2 + 16) + R3;
           call MO_Prefetch_Data 2(_czmK::P64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.566619895 UTC

[section ""data" . GHC.PrimopWrappers.prefetchAddr2#_closure" {
     GHC.PrimopWrappers.prefetchAddr2#_closure:
         const GHC.PrimopWrappers.prefetchAddr2#_info;
 },
 GHC.PrimopWrappers.prefetchAddr2#_entry() //  [R2, R3]
         { info_tbl: [(czn0,
                       label: GHC.PrimopWrappers.prefetchAddr2#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czn0: // global
           _czmZ::I64 = R2 + R3;
           call MO_Prefetch_Data 2(_czmZ::I64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.569997481 UTC

[section ""data" . GHC.PrimopWrappers.prefetchValue2#_closure" {
     GHC.PrimopWrappers.prefetchValue2#_closure:
         const GHC.PrimopWrappers.prefetchValue2#_info;
 },
 GHC.PrimopWrappers.prefetchValue2#_entry() //  [R2]
         { info_tbl: [(cznf,
                       label: GHC.PrimopWrappers.prefetchValue2#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cznf: // global
           call MO_Prefetch_Data 2(R2);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.573827136 UTC

[section ""data" . GHC.PrimopWrappers.prefetchByteArray1#_closure" {
     GHC.PrimopWrappers.prefetchByteArray1#_closure:
         const GHC.PrimopWrappers.prefetchByteArray1#_info;
 },
 GHC.PrimopWrappers.prefetchByteArray1#_entry() //  [R2, R3]
         { info_tbl: [(cznt,
                       label: GHC.PrimopWrappers.prefetchByteArray1#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cznt: // global
           _czns::P64 = (R2 + 16) + R3;
           call MO_Prefetch_Data 1(_czns::P64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.577456725 UTC

[section ""data" . GHC.PrimopWrappers.prefetchMutableByteArray1#_closure" {
     GHC.PrimopWrappers.prefetchMutableByteArray1#_closure:
         const GHC.PrimopWrappers.prefetchMutableByteArray1#_info;
 },
 GHC.PrimopWrappers.prefetchMutableByteArray1#_entry() //  [R2, R3]
         { info_tbl: [(cznI,
                       label: GHC.PrimopWrappers.prefetchMutableByteArray1#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cznI: // global
           _cznH::P64 = (R2 + 16) + R3;
           call MO_Prefetch_Data 1(_cznH::P64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.581545762 UTC

[section ""data" . GHC.PrimopWrappers.prefetchAddr1#_closure" {
     GHC.PrimopWrappers.prefetchAddr1#_closure:
         const GHC.PrimopWrappers.prefetchAddr1#_info;
 },
 GHC.PrimopWrappers.prefetchAddr1#_entry() //  [R2, R3]
         { info_tbl: [(cznX,
                       label: GHC.PrimopWrappers.prefetchAddr1#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cznX: // global
           _cznW::I64 = R2 + R3;
           call MO_Prefetch_Data 1(_cznW::I64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.585160696 UTC

[section ""data" . GHC.PrimopWrappers.prefetchValue1#_closure" {
     GHC.PrimopWrappers.prefetchValue1#_closure:
         const GHC.PrimopWrappers.prefetchValue1#_info;
 },
 GHC.PrimopWrappers.prefetchValue1#_entry() //  [R2]
         { info_tbl: [(czoc,
                       label: GHC.PrimopWrappers.prefetchValue1#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czoc: // global
           call MO_Prefetch_Data 1(R2);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.588687278 UTC

[section ""data" . GHC.PrimopWrappers.prefetchByteArray0#_closure" {
     GHC.PrimopWrappers.prefetchByteArray0#_closure:
         const GHC.PrimopWrappers.prefetchByteArray0#_info;
 },
 GHC.PrimopWrappers.prefetchByteArray0#_entry() //  [R2, R3]
         { info_tbl: [(czoq,
                       label: GHC.PrimopWrappers.prefetchByteArray0#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czoq: // global
           _czop::P64 = (R2 + 16) + R3;
           call MO_Prefetch_Data 0(_czop::P64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.59232076 UTC

[section ""data" . GHC.PrimopWrappers.prefetchMutableByteArray0#_closure" {
     GHC.PrimopWrappers.prefetchMutableByteArray0#_closure:
         const GHC.PrimopWrappers.prefetchMutableByteArray0#_info;
 },
 GHC.PrimopWrappers.prefetchMutableByteArray0#_entry() //  [R2, R3]
         { info_tbl: [(czoF,
                       label: GHC.PrimopWrappers.prefetchMutableByteArray0#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czoF: // global
           _czoE::P64 = (R2 + 16) + R3;
           call MO_Prefetch_Data 0(_czoE::P64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.595903048 UTC

[section ""data" . GHC.PrimopWrappers.prefetchAddr0#_closure" {
     GHC.PrimopWrappers.prefetchAddr0#_closure:
         const GHC.PrimopWrappers.prefetchAddr0#_info;
 },
 GHC.PrimopWrappers.prefetchAddr0#_entry() //  [R2, R3]
         { info_tbl: [(czoU,
                       label: GHC.PrimopWrappers.prefetchAddr0#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czoU: // global
           _czoT::I64 = R2 + R3;
           call MO_Prefetch_Data 0(_czoT::I64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.59947308 UTC

[section ""data" . GHC.PrimopWrappers.prefetchValue0#_closure" {
     GHC.PrimopWrappers.prefetchValue0#_closure:
         const GHC.PrimopWrappers.prefetchValue0#_info;
 },
 GHC.PrimopWrappers.prefetchValue0#_entry() //  [R2]
         { info_tbl: [(czp9,
                       label: GHC.PrimopWrappers.prefetchValue0#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czp9: // global
           call MO_Prefetch_Data 0(R2);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.602732567 UTC

[section ""cstring" . GHC.PrimopWrappers.$trModule4_bytes" {
     GHC.PrimopWrappers.$trModule4_bytes:
         I8[] [103,104,99,45,112,114,105,109]
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.604533882 UTC

[section ""data" . GHC.PrimopWrappers.$trModule3_closure" {
     GHC.PrimopWrappers.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.PrimopWrappers.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.606855101 UTC

[section ""cstring" . GHC.PrimopWrappers.$trModule2_bytes" {
     GHC.PrimopWrappers.$trModule2_bytes:
         I8[] [71,72,67,46,80,114,105,109,111,112,87,114,97,112,112,101,114,115]
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.6085856 UTC

[section ""data" . GHC.PrimopWrappers.$trModule1_closure" {
     GHC.PrimopWrappers.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.PrimopWrappers.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.610258889 UTC

[section ""data" . GHC.PrimopWrappers.$trModule_closure" {
     GHC.PrimopWrappers.$trModule_closure:
         const GHC.Types.Module_con_info;
         const GHC.PrimopWrappers.$trModule3_closure+1;
         const GHC.PrimopWrappers.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:50:18.612036662 UTC

[section ""relreadonly" . SwVl_srt" { SwVl_srt:
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.589028694 UTC

[]


==================== Output Cmm ====================
2018-03-16 15:50:20.590715834 UTC

[section ""data" . GHC.PrimopWrappers.gtChar#_closure" {
     GHC.PrimopWrappers.gtChar#_closure:
         const GHC.PrimopWrappers.gtChar#_info;
 },
 GHC.PrimopWrappers.gtChar#_entry() //  [R2, R3]
         { info_tbl: [(czpv,
                       label: GHC.PrimopWrappers.gtChar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czpv: // global
           R1 = R2 > R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.594395681 UTC

[section ""data" . GHC.PrimopWrappers.geChar#_closure" {
     GHC.PrimopWrappers.geChar#_closure:
         const GHC.PrimopWrappers.geChar#_info;
 },
 GHC.PrimopWrappers.geChar#_entry() //  [R2, R3]
         { info_tbl: [(czpJ,
                       label: GHC.PrimopWrappers.geChar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czpJ: // global
           R1 = R2 >= R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.597980164 UTC

[section ""data" . GHC.PrimopWrappers.eqChar#_closure" {
     GHC.PrimopWrappers.eqChar#_closure:
         const GHC.PrimopWrappers.eqChar#_info;
 },
 GHC.PrimopWrappers.eqChar#_entry() //  [R2, R3]
         { info_tbl: [(czpX,
                       label: GHC.PrimopWrappers.eqChar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czpX: // global
           R1 = R2 == R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.601538964 UTC

[section ""data" . GHC.PrimopWrappers.neChar#_closure" {
     GHC.PrimopWrappers.neChar#_closure:
         const GHC.PrimopWrappers.neChar#_info;
 },
 GHC.PrimopWrappers.neChar#_entry() //  [R2, R3]
         { info_tbl: [(czqb,
                       label: GHC.PrimopWrappers.neChar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czqb: // global
           R1 = R2 != R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.60625864 UTC

[section ""data" . GHC.PrimopWrappers.ltChar#_closure" {
     GHC.PrimopWrappers.ltChar#_closure:
         const GHC.PrimopWrappers.ltChar#_info;
 },
 GHC.PrimopWrappers.ltChar#_entry() //  [R2, R3]
         { info_tbl: [(czqp,
                       label: GHC.PrimopWrappers.ltChar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czqp: // global
           R1 = R2 < R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.610116553 UTC

[section ""data" . GHC.PrimopWrappers.leChar#_closure" {
     GHC.PrimopWrappers.leChar#_closure:
         const GHC.PrimopWrappers.leChar#_info;
 },
 GHC.PrimopWrappers.leChar#_entry() //  [R2, R3]
         { info_tbl: [(czqD,
                       label: GHC.PrimopWrappers.leChar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czqD: // global
           R1 = R2 <= R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.613810672 UTC

[section ""data" . GHC.PrimopWrappers.ord#_closure" {
     GHC.PrimopWrappers.ord#_closure:
         const GHC.PrimopWrappers.ord#_info;
 },
 GHC.PrimopWrappers.ord#_entry() //  [R2]
         { info_tbl: [(czqR,
                       label: GHC.PrimopWrappers.ord#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czqR: // global
           R1 = R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.61734621 UTC

[section ""data" . GHC.PrimopWrappers.+#_closure" {
     GHC.PrimopWrappers.+#_closure:
         const GHC.PrimopWrappers.+#_info;
 },
 GHC.PrimopWrappers.+#_entry() //  [R2, R3]
         { info_tbl: [(czr4,
                       label: GHC.PrimopWrappers.+#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czr4: // global
           R1 = R2 + R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.621116209 UTC

[section ""data" . GHC.PrimopWrappers.-#_closure" {
     GHC.PrimopWrappers.-#_closure:
         const GHC.PrimopWrappers.-#_info;
 },
 GHC.PrimopWrappers.-#_entry() //  [R2, R3]
         { info_tbl: [(czri,
                       label: GHC.PrimopWrappers.-#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czri: // global
           R1 = R2 - R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.624717313 UTC

[section ""data" . GHC.PrimopWrappers.*#_closure" {
     GHC.PrimopWrappers.*#_closure:
         const GHC.PrimopWrappers.*#_info;
 },
 GHC.PrimopWrappers.*#_entry() //  [R2, R3]
         { info_tbl: [(czrw,
                       label: GHC.PrimopWrappers.*#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czrw: // global
           R1 = R2 * R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.628398885 UTC

[section ""data" . GHC.PrimopWrappers.mulIntMayOflo#_closure" {
     GHC.PrimopWrappers.mulIntMayOflo#_closure:
         const GHC.PrimopWrappers.mulIntMayOflo#_info;
 },
 GHC.PrimopWrappers.mulIntMayOflo#_entry() //  [R2, R3]
         { info_tbl: [(czrK,
                       label: GHC.PrimopWrappers.mulIntMayOflo#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czrK: // global
           R1 = %MO_S_MulMayOflo_W64(R2, R3);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.632255983 UTC

[section ""data" . GHC.PrimopWrappers.quotInt#_closure" {
     GHC.PrimopWrappers.quotInt#_closure:
         const GHC.PrimopWrappers.quotInt#_info;
 },
 GHC.PrimopWrappers.quotInt#_entry() //  [R2, R3]
         { info_tbl: [(czrX,
                       label: GHC.PrimopWrappers.quotInt#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czrX: // global
           R1 = %MO_S_Quot_W64(R2, R3);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.636090379 UTC

[section ""data" . GHC.PrimopWrappers.remInt#_closure" {
     GHC.PrimopWrappers.remInt#_closure:
         const GHC.PrimopWrappers.remInt#_info;
 },
 GHC.PrimopWrappers.remInt#_entry() //  [R2, R3]
         { info_tbl: [(czsa,
                       label: GHC.PrimopWrappers.remInt#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czsa: // global
           R1 = %MO_S_Rem_W64(R2, R3);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.640344491 UTC

[section ""data" . GHC.PrimopWrappers.quotRemInt#_closure" {
     GHC.PrimopWrappers.quotRemInt#_closure:
         const GHC.PrimopWrappers.quotRemInt#_info;
 },
 GHC.PrimopWrappers.quotRemInt#_entry() //  [R2, R3]
         { info_tbl: [(czso,
                       label: GHC.PrimopWrappers.quotRemInt#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czso: // global
           _B1::I64 = R3;
           (_czsm::I64, _czsn::I64) = call MO_S_QuotRem W64(R2, _B1::I64);
           R2 = _czsn::I64;
           R1 = _czsm::I64;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.644276732 UTC

[section ""data" . GHC.PrimopWrappers.andI#_closure" {
     GHC.PrimopWrappers.andI#_closure:
         const GHC.PrimopWrappers.andI#_info;
 },
 GHC.PrimopWrappers.andI#_entry() //  [R2, R3]
         { info_tbl: [(czsB,
                       label: GHC.PrimopWrappers.andI#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czsB: // global
           R1 = R2 & R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.647962582 UTC

[section ""data" . GHC.PrimopWrappers.orI#_closure" {
     GHC.PrimopWrappers.orI#_closure:
         const GHC.PrimopWrappers.orI#_info;
 },
 GHC.PrimopWrappers.orI#_entry() //  [R2, R3]
         { info_tbl: [(czsP,
                       label: GHC.PrimopWrappers.orI#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czsP: // global
           R1 = R2 | R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.651530297 UTC

[section ""data" . GHC.PrimopWrappers.xorI#_closure" {
     GHC.PrimopWrappers.xorI#_closure:
         const GHC.PrimopWrappers.xorI#_info;
 },
 GHC.PrimopWrappers.xorI#_entry() //  [R2, R3]
         { info_tbl: [(czt3,
                       label: GHC.PrimopWrappers.xorI#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czt3: // global
           R1 = R2 ^ R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.655233222 UTC

[section ""data" . GHC.PrimopWrappers.notI#_closure" {
     GHC.PrimopWrappers.notI#_closure:
         const GHC.PrimopWrappers.notI#_info;
 },
 GHC.PrimopWrappers.notI#_entry() //  [R2]
         { info_tbl: [(czth,
                       label: GHC.PrimopWrappers.notI#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czth: // global
           R1 = ~R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.65895114 UTC

[section ""data" . GHC.PrimopWrappers.negateInt#_closure" {
     GHC.PrimopWrappers.negateInt#_closure:
         const GHC.PrimopWrappers.negateInt#_info;
 },
 GHC.PrimopWrappers.negateInt#_entry() //  [R2]
         { info_tbl: [(cztu,
                       label: GHC.PrimopWrappers.negateInt#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cztu: // global
           R1 = -R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.662424452 UTC

[section ""data" . GHC.PrimopWrappers.addIntC#_closure" {
     GHC.PrimopWrappers.addIntC#_closure:
         const GHC.PrimopWrappers.addIntC#_info;
 },
 GHC.PrimopWrappers.addIntC#_entry() //  [R2, R3]
         { info_tbl: [(cztI,
                       label: GHC.PrimopWrappers.addIntC#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cztI: // global
           _B1::I64 = R3;
           (_cztG::I64, _cztH::I64) = call MO_AddIntC W64(R2, _B1::I64);
           R2 = _cztH::I64;
           R1 = _cztG::I64;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.666086355 UTC

[section ""data" . GHC.PrimopWrappers.subIntC#_closure" {
     GHC.PrimopWrappers.subIntC#_closure:
         const GHC.PrimopWrappers.subIntC#_info;
 },
 GHC.PrimopWrappers.subIntC#_entry() //  [R2, R3]
         { info_tbl: [(cztY,
                       label: GHC.PrimopWrappers.subIntC#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cztY: // global
           _B1::I64 = R3;
           (_cztW::I64, _cztX::I64) = call MO_SubIntC W64(R2, _B1::I64);
           R2 = _cztX::I64;
           R1 = _cztW::I64;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.670092811 UTC

[section ""data" . GHC.PrimopWrappers.>#_closure" {
     GHC.PrimopWrappers.>#_closure:
         const GHC.PrimopWrappers.>#_info;
 },
 GHC.PrimopWrappers.>#_entry() //  [R2, R3]
         { info_tbl: [(czud,
                       label: GHC.PrimopWrappers.>#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czud: // global
           R1 = %MO_S_Gt_W64(R2, R3);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.674207948 UTC

[section ""data" . GHC.PrimopWrappers.>=#_closure" {
     GHC.PrimopWrappers.>=#_closure:
         const GHC.PrimopWrappers.>=#_info;
 },
 GHC.PrimopWrappers.>=#_entry() //  [R2, R3]
         { info_tbl: [(czur,
                       label: GHC.PrimopWrappers.>=#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czur: // global
           R1 = %MO_S_Ge_W64(R2, R3);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.678221264 UTC

[section ""data" . GHC.PrimopWrappers.==#_closure" {
     GHC.PrimopWrappers.==#_closure:
         const GHC.PrimopWrappers.==#_info;
 },
 GHC.PrimopWrappers.==#_entry() //  [R2, R3]
         { info_tbl: [(czuF,
                       label: GHC.PrimopWrappers.==#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czuF: // global
           R1 = R2 == R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.681786581 UTC

[section ""data" . GHC.PrimopWrappers./=#_closure" {
     GHC.PrimopWrappers./=#_closure:
         const GHC.PrimopWrappers./=#_info;
 },
 GHC.PrimopWrappers./=#_entry() //  [R2, R3]
         { info_tbl: [(czuT,
                       label: GHC.PrimopWrappers./=#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czuT: // global
           R1 = R2 != R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.685341634 UTC

[section ""data" . GHC.PrimopWrappers.<#_closure" {
     GHC.PrimopWrappers.<#_closure:
         const GHC.PrimopWrappers.<#_info;
 },
 GHC.PrimopWrappers.<#_entry() //  [R2, R3]
         { info_tbl: [(czv7,
                       label: GHC.PrimopWrappers.<#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czv7: // global
           R1 = %MO_S_Lt_W64(R2, R3);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.688895744 UTC

[section ""data" . GHC.PrimopWrappers.<=#_closure" {
     GHC.PrimopWrappers.<=#_closure:
         const GHC.PrimopWrappers.<=#_info;
 },
 GHC.PrimopWrappers.<=#_entry() //  [R2, R3]
         { info_tbl: [(czvl,
                       label: GHC.PrimopWrappers.<=#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czvl: // global
           R1 = %MO_S_Le_W64(R2, R3);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.692368216 UTC

[section ""data" . GHC.PrimopWrappers.chr#_closure" {
     GHC.PrimopWrappers.chr#_closure:
         const GHC.PrimopWrappers.chr#_info;
 },
 GHC.PrimopWrappers.chr#_entry() //  [R2]
         { info_tbl: [(czvz,
                       label: GHC.PrimopWrappers.chr#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czvz: // global
           R1 = R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.695918305 UTC

[section ""data" . GHC.PrimopWrappers.int2Word#_closure" {
     GHC.PrimopWrappers.int2Word#_closure:
         const GHC.PrimopWrappers.int2Word#_info;
 },
 GHC.PrimopWrappers.int2Word#_entry() //  [R2]
         { info_tbl: [(czvM,
                       label: GHC.PrimopWrappers.int2Word#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czvM: // global
           R1 = R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.699893094 UTC

[section ""data" . GHC.PrimopWrappers.int2Float#_closure" {
     GHC.PrimopWrappers.int2Float#_closure:
         const GHC.PrimopWrappers.int2Float#_info;
 },
 GHC.PrimopWrappers.int2Float#_entry() //  [R2]
         { info_tbl: [(czvZ,
                       label: GHC.PrimopWrappers.int2Float#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czvZ: // global
           F1 = %MO_SF_Conv_W64_W32(R2);
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.704306289 UTC

[section ""data" . GHC.PrimopWrappers.int2Double#_closure" {
     GHC.PrimopWrappers.int2Double#_closure:
         const GHC.PrimopWrappers.int2Double#_info;
 },
 GHC.PrimopWrappers.int2Double#_entry() //  [R2]
         { info_tbl: [(czwc,
                       label: GHC.PrimopWrappers.int2Double#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czwc: // global
           D1 = %MO_SF_Conv_W64_W64(R2);
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.708209236 UTC

[section ""data" . GHC.PrimopWrappers.word2Float#_closure" {
     GHC.PrimopWrappers.word2Float#_closure:
         const GHC.PrimopWrappers.word2Float#_info;
 },
 GHC.PrimopWrappers.word2Float#_entry() //  [R2]
         { info_tbl: [(czwq,
                       label: GHC.PrimopWrappers.word2Float#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czwq: // global
           (_czwo::F32) = call MO_UF_Conv W32(R2);
           F1 = _czwo::F32;
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.71203863 UTC

[section ""data" . GHC.PrimopWrappers.word2Double#_closure" {
     GHC.PrimopWrappers.word2Double#_closure:
         const GHC.PrimopWrappers.word2Double#_info;
 },
 GHC.PrimopWrappers.word2Double#_entry() //  [R2]
         { info_tbl: [(czwE,
                       label: GHC.PrimopWrappers.word2Double#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czwE: // global
           (_czwC::F64) = call MO_UF_Conv W64(R2);
           D1 = _czwC::F64;
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.715900866 UTC

[section ""data" . GHC.PrimopWrappers.uncheckedIShiftL#_closure" {
     GHC.PrimopWrappers.uncheckedIShiftL#_closure:
         const GHC.PrimopWrappers.uncheckedIShiftL#_info;
 },
 GHC.PrimopWrappers.uncheckedIShiftL#_entry() //  [R2, R3]
         { info_tbl: [(czwR,
                       label: GHC.PrimopWrappers.uncheckedIShiftL#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czwR: // global
           R1 = R2 << R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.719872044 UTC

[section ""data" . GHC.PrimopWrappers.uncheckedIShiftRA#_closure" {
     GHC.PrimopWrappers.uncheckedIShiftRA#_closure:
         const GHC.PrimopWrappers.uncheckedIShiftRA#_info;
 },
 GHC.PrimopWrappers.uncheckedIShiftRA#_entry() //  [R2, R3]
         { info_tbl: [(czx5,
                       label: GHC.PrimopWrappers.uncheckedIShiftRA#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czx5: // global
           R1 = %MO_S_Shr_W64(R2, R3);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.723677704 UTC

[section ""data" . GHC.PrimopWrappers.uncheckedIShiftRL#_closure" {
     GHC.PrimopWrappers.uncheckedIShiftRL#_closure:
         const GHC.PrimopWrappers.uncheckedIShiftRL#_info;
 },
 GHC.PrimopWrappers.uncheckedIShiftRL#_entry() //  [R2, R3]
         { info_tbl: [(czxj,
                       label: GHC.PrimopWrappers.uncheckedIShiftRL#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czxj: // global
           R1 = R2 >> R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.727611285 UTC

[section ""data" . GHC.PrimopWrappers.plusWord#_closure" {
     GHC.PrimopWrappers.plusWord#_closure:
         const GHC.PrimopWrappers.plusWord#_info;
 },
 GHC.PrimopWrappers.plusWord#_entry() //  [R2, R3]
         { info_tbl: [(czxx,
                       label: GHC.PrimopWrappers.plusWord#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czxx: // global
           R1 = R2 + R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.731190848 UTC

[section ""data" . GHC.PrimopWrappers.subWordC#_closure" {
     GHC.PrimopWrappers.subWordC#_closure:
         const GHC.PrimopWrappers.subWordC#_info;
 },
 GHC.PrimopWrappers.subWordC#_entry() //  [R2, R3]
         { info_tbl: [(czxM,
                       label: GHC.PrimopWrappers.subWordC#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czxM: // global
           _B1::I64 = R3;
           (_czxK::I64, _czxL::I64) = call MO_SubWordC W64(R2, _B1::I64);
           R2 = _czxL::I64;
           R1 = _czxK::I64;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.735374956 UTC

[section ""data" . GHC.PrimopWrappers.plusWord2#_closure" {
     GHC.PrimopWrappers.plusWord2#_closure:
         const GHC.PrimopWrappers.plusWord2#_info;
 },
 GHC.PrimopWrappers.plusWord2#_entry() //  [R2, R3]
         { info_tbl: [(czy2,
                       label: GHC.PrimopWrappers.plusWord2#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czy2: // global
           _B1::I64 = R3;
           (_czy0::I64, _czy1::I64) = call MO_Add2 W64(R2, _B1::I64);
           R2 = _czy1::I64;
           R1 = _czy0::I64;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.739547009 UTC

[section ""data" . GHC.PrimopWrappers.minusWord#_closure" {
     GHC.PrimopWrappers.minusWord#_closure:
         const GHC.PrimopWrappers.minusWord#_info;
 },
 GHC.PrimopWrappers.minusWord#_entry() //  [R2, R3]
         { info_tbl: [(czyg,
                       label: GHC.PrimopWrappers.minusWord#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czyg: // global
           R1 = R2 - R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.743383969 UTC

[section ""data" . GHC.PrimopWrappers.timesWord#_closure" {
     GHC.PrimopWrappers.timesWord#_closure:
         const GHC.PrimopWrappers.timesWord#_info;
 },
 GHC.PrimopWrappers.timesWord#_entry() //  [R2, R3]
         { info_tbl: [(czyu,
                       label: GHC.PrimopWrappers.timesWord#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czyu: // global
           R1 = R2 * R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.747242469 UTC

[section ""data" . GHC.PrimopWrappers.timesWord2#_closure" {
     GHC.PrimopWrappers.timesWord2#_closure:
         const GHC.PrimopWrappers.timesWord2#_info;
 },
 GHC.PrimopWrappers.timesWord2#_entry() //  [R2, R3]
         { info_tbl: [(czyJ,
                       label: GHC.PrimopWrappers.timesWord2#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czyJ: // global
           _B1::I64 = R3;
           (_czyH::I64, _czyI::I64) = call MO_U_Mul2 W64(R2, _B1::I64);
           R2 = _czyI::I64;
           R1 = _czyH::I64;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.751106997 UTC

[section ""data" . GHC.PrimopWrappers.quotWord#_closure" {
     GHC.PrimopWrappers.quotWord#_closure:
         const GHC.PrimopWrappers.quotWord#_info;
 },
 GHC.PrimopWrappers.quotWord#_entry() //  [R2, R3]
         { info_tbl: [(czyW,
                       label: GHC.PrimopWrappers.quotWord#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czyW: // global
           R1 = R2 / R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.754751224 UTC

[section ""data" . GHC.PrimopWrappers.remWord#_closure" {
     GHC.PrimopWrappers.remWord#_closure:
         const GHC.PrimopWrappers.remWord#_info;
 },
 GHC.PrimopWrappers.remWord#_entry() //  [R2, R3]
         { info_tbl: [(czz9,
                       label: GHC.PrimopWrappers.remWord#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czz9: // global
           R1 = R2 % R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.758467869 UTC

[section ""data" . GHC.PrimopWrappers.quotRemWord#_closure" {
     GHC.PrimopWrappers.quotRemWord#_closure:
         const GHC.PrimopWrappers.quotRemWord#_info;
 },
 GHC.PrimopWrappers.quotRemWord#_entry() //  [R2, R3]
         { info_tbl: [(czzn,
                       label: GHC.PrimopWrappers.quotRemWord#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czzn: // global
           _B1::I64 = R3;
           (_czzl::I64, _czzm::I64) = call MO_U_QuotRem W64(R2, _B1::I64);
           R2 = _czzm::I64;
           R1 = _czzl::I64;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.762481062 UTC

[section ""data" . GHC.PrimopWrappers.quotRemWord2#_closure" {
     GHC.PrimopWrappers.quotRemWord2#_closure:
         const GHC.PrimopWrappers.quotRemWord2#_info;
 },
 GHC.PrimopWrappers.quotRemWord2#_entry() //  [R2, R3, R4]
         { info_tbl: [(czzB,
                       label: GHC.PrimopWrappers.quotRemWord2#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 16} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czzB: // global
           _B1::I64 = R4;
           _B2::I64 = R3;
           (_czzz::I64, _czzA::I64) = call MO_U_QuotRem2 W64(R2, _B2::I64, _B1::I64);
           R2 = _czzA::I64;
           R1 = _czzz::I64;
           call (I64[P64[Sp]])(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.766295223 UTC

[section ""data" . GHC.PrimopWrappers.and#_closure" {
     GHC.PrimopWrappers.and#_closure:
         const GHC.PrimopWrappers.and#_info;
 },
 GHC.PrimopWrappers.and#_entry() //  [R2, R3]
         { info_tbl: [(czzO,
                       label: GHC.PrimopWrappers.and#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czzO: // global
           R1 = R2 & R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.770559894 UTC

[section ""data" . GHC.PrimopWrappers.or#_closure" {
     GHC.PrimopWrappers.or#_closure:
         const GHC.PrimopWrappers.or#_info;
 },
 GHC.PrimopWrappers.or#_entry() //  [R2, R3]
         { info_tbl: [(czA2,
                       label: GHC.PrimopWrappers.or#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czA2: // global
           R1 = R2 | R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.774483402 UTC

[section ""data" . GHC.PrimopWrappers.xor#_closure" {
     GHC.PrimopWrappers.xor#_closure:
         const GHC.PrimopWrappers.xor#_info;
 },
 GHC.PrimopWrappers.xor#_entry() //  [R2, R3]
         { info_tbl: [(czAg,
                       label: GHC.PrimopWrappers.xor#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czAg: // global
           R1 = R2 ^ R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.778118932 UTC

[section ""data" . GHC.PrimopWrappers.not#_closure" {
     GHC.PrimopWrappers.not#_closure:
         const GHC.PrimopWrappers.not#_info;
 },
 GHC.PrimopWrappers.not#_entry() //  [R2]
         { info_tbl: [(czAu,
                       label: GHC.PrimopWrappers.not#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czAu: // global
           R1 = ~R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.781763735 UTC

[section ""data" . GHC.PrimopWrappers.uncheckedShiftL#_closure" {
     GHC.PrimopWrappers.uncheckedShiftL#_closure:
         const GHC.PrimopWrappers.uncheckedShiftL#_info;
 },
 GHC.PrimopWrappers.uncheckedShiftL#_entry() //  [R2, R3]
         { info_tbl: [(czAH,
                       label: GHC.PrimopWrappers.uncheckedShiftL#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czAH: // global
           R1 = R2 << R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.785598288 UTC

[section ""data" . GHC.PrimopWrappers.uncheckedShiftRL#_closure" {
     GHC.PrimopWrappers.uncheckedShiftRL#_closure:
         const GHC.PrimopWrappers.uncheckedShiftRL#_info;
 },
 GHC.PrimopWrappers.uncheckedShiftRL#_entry() //  [R2, R3]
         { info_tbl: [(czAV,
                       label: GHC.PrimopWrappers.uncheckedShiftRL#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czAV: // global
           R1 = R2 >> R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.789313731 UTC

[section ""data" . GHC.PrimopWrappers.word2Int#_closure" {
     GHC.PrimopWrappers.word2Int#_closure:
         const GHC.PrimopWrappers.word2Int#_info;
 },
 GHC.PrimopWrappers.word2Int#_entry() //  [R2]
         { info_tbl: [(czB9,
                       label: GHC.PrimopWrappers.word2Int#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czB9: // global
           R1 = R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.793052645 UTC

[section ""data" . GHC.PrimopWrappers.gtWord#_closure" {
     GHC.PrimopWrappers.gtWord#_closure:
         const GHC.PrimopWrappers.gtWord#_info;
 },
 GHC.PrimopWrappers.gtWord#_entry() //  [R2, R3]
         { info_tbl: [(czBm,
                       label: GHC.PrimopWrappers.gtWord#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czBm: // global
           R1 = R2 > R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.796860491 UTC

[section ""data" . GHC.PrimopWrappers.geWord#_closure" {
     GHC.PrimopWrappers.geWord#_closure:
         const GHC.PrimopWrappers.geWord#_info;
 },
 GHC.PrimopWrappers.geWord#_entry() //  [R2, R3]
         { info_tbl: [(czBA,
                       label: GHC.PrimopWrappers.geWord#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czBA: // global
           R1 = R2 >= R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.801356578 UTC

[section ""data" . GHC.PrimopWrappers.eqWord#_closure" {
     GHC.PrimopWrappers.eqWord#_closure:
         const GHC.PrimopWrappers.eqWord#_info;
 },
 GHC.PrimopWrappers.eqWord#_entry() //  [R2, R3]
         { info_tbl: [(czBO,
                       label: GHC.PrimopWrappers.eqWord#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czBO: // global
           R1 = R2 == R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.804950545 UTC

[section ""data" . GHC.PrimopWrappers.neWord#_closure" {
     GHC.PrimopWrappers.neWord#_closure:
         const GHC.PrimopWrappers.neWord#_info;
 },
 GHC.PrimopWrappers.neWord#_entry() //  [R2, R3]
         { info_tbl: [(czC2,
                       label: GHC.PrimopWrappers.neWord#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czC2: // global
           R1 = R2 != R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.808606537 UTC

[section ""data" . GHC.PrimopWrappers.ltWord#_closure" {
     GHC.PrimopWrappers.ltWord#_closure:
         const GHC.PrimopWrappers.ltWord#_info;
 },
 GHC.PrimopWrappers.ltWord#_entry() //  [R2, R3]
         { info_tbl: [(czCg,
                       label: GHC.PrimopWrappers.ltWord#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czCg: // global
           R1 = R2 < R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.812249886 UTC

[section ""data" . GHC.PrimopWrappers.leWord#_closure" {
     GHC.PrimopWrappers.leWord#_closure:
         const GHC.PrimopWrappers.leWord#_info;
 },
 GHC.PrimopWrappers.leWord#_entry() //  [R2, R3]
         { info_tbl: [(czCu,
                       label: GHC.PrimopWrappers.leWord#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czCu: // global
           R1 = R2 <= R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.815889008 UTC

[section ""data" . GHC.PrimopWrappers.popCnt8#_closure" {
     GHC.PrimopWrappers.popCnt8#_closure:
         const GHC.PrimopWrappers.popCnt8#_info;
 },
 GHC.PrimopWrappers.popCnt8#_entry() //  [R2]
         { info_tbl: [(czCJ,
                       label: GHC.PrimopWrappers.popCnt8#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czCJ: // global
           (_czCH::I64) = call MO_PopCnt W8(R2);
           R1 = _czCH::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.819981948 UTC

[section ""data" . GHC.PrimopWrappers.popCnt16#_closure" {
     GHC.PrimopWrappers.popCnt16#_closure:
         const GHC.PrimopWrappers.popCnt16#_info;
 },
 GHC.PrimopWrappers.popCnt16#_entry() //  [R2]
         { info_tbl: [(czCX,
                       label: GHC.PrimopWrappers.popCnt16#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czCX: // global
           (_czCV::I64) = call MO_PopCnt W16(R2);
           R1 = _czCV::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.823812726 UTC

[section ""data" . GHC.PrimopWrappers.popCnt32#_closure" {
     GHC.PrimopWrappers.popCnt32#_closure:
         const GHC.PrimopWrappers.popCnt32#_info;
 },
 GHC.PrimopWrappers.popCnt32#_entry() //  [R2]
         { info_tbl: [(czDb,
                       label: GHC.PrimopWrappers.popCnt32#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czDb: // global
           (_czD9::I64) = call MO_PopCnt W32(R2);
           R1 = _czD9::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.827600569 UTC

[section ""data" . GHC.PrimopWrappers.popCnt64#_closure" {
     GHC.PrimopWrappers.popCnt64#_closure:
         const GHC.PrimopWrappers.popCnt64#_info;
 },
 GHC.PrimopWrappers.popCnt64#_entry() //  [R2]
         { info_tbl: [(czDp,
                       label: GHC.PrimopWrappers.popCnt64#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czDp: // global
           (_czDn::I64) = call MO_PopCnt W64(R2);
           R1 = _czDn::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.83178521 UTC

[section ""data" . GHC.PrimopWrappers.popCnt#_closure" {
     GHC.PrimopWrappers.popCnt#_closure:
         const GHC.PrimopWrappers.popCnt#_info;
 },
 GHC.PrimopWrappers.popCnt#_entry() //  [R2]
         { info_tbl: [(czDD,
                       label: GHC.PrimopWrappers.popCnt#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czDD: // global
           (_czDB::I64) = call MO_PopCnt W64(R2);
           R1 = _czDB::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.836193052 UTC

[section ""data" . GHC.PrimopWrappers.pdep8#_closure" {
     GHC.PrimopWrappers.pdep8#_closure:
         const GHC.PrimopWrappers.pdep8#_info;
 },
 GHC.PrimopWrappers.pdep8#_entry() //  [R2, R3]
         { info_tbl: [(czDS,
                       label: GHC.PrimopWrappers.pdep8#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czDS: // global
           _czDR::I64 = R3;
           (_czDP::I64) = call MO_Pdep W8(R2, _czDR::I64);
           R1 = _czDP::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.839914649 UTC

[section ""data" . GHC.PrimopWrappers.pdep16#_closure" {
     GHC.PrimopWrappers.pdep16#_closure:
         const GHC.PrimopWrappers.pdep16#_info;
 },
 GHC.PrimopWrappers.pdep16#_entry() //  [R2, R3]
         { info_tbl: [(czE8,
                       label: GHC.PrimopWrappers.pdep16#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czE8: // global
           _czE7::I64 = R3;
           (_czE5::I64) = call MO_Pdep W16(R2, _czE7::I64);
           R1 = _czE5::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.843560152 UTC

[section ""data" . GHC.PrimopWrappers.pdep32#_closure" {
     GHC.PrimopWrappers.pdep32#_closure:
         const GHC.PrimopWrappers.pdep32#_info;
 },
 GHC.PrimopWrappers.pdep32#_entry() //  [R2, R3]
         { info_tbl: [(czEo,
                       label: GHC.PrimopWrappers.pdep32#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czEo: // global
           _czEn::I64 = R3;
           (_czEl::I64) = call MO_Pdep W32(R2, _czEn::I64);
           R1 = _czEl::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.848447167 UTC

[section ""data" . GHC.PrimopWrappers.pdep64#_closure" {
     GHC.PrimopWrappers.pdep64#_closure:
         const GHC.PrimopWrappers.pdep64#_info;
 },
 GHC.PrimopWrappers.pdep64#_entry() //  [R2, R3]
         { info_tbl: [(czEE,
                       label: GHC.PrimopWrappers.pdep64#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czEE: // global
           _czED::I64 = R3;
           (_czEB::I64) = call MO_Pdep W64(R2, _czED::I64);
           R1 = _czEB::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.852321028 UTC

[section ""data" . GHC.PrimopWrappers.pdep#_closure" {
     GHC.PrimopWrappers.pdep#_closure:
         const GHC.PrimopWrappers.pdep#_info;
 },
 GHC.PrimopWrappers.pdep#_entry() //  [R2, R3]
         { info_tbl: [(czEU,
                       label: GHC.PrimopWrappers.pdep#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czEU: // global
           _czET::I64 = R3;
           (_czER::I64) = call MO_Pdep W64(R2, _czET::I64);
           R1 = _czER::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.856154573 UTC

[section ""data" . GHC.PrimopWrappers.pext8#_closure" {
     GHC.PrimopWrappers.pext8#_closure:
         const GHC.PrimopWrappers.pext8#_info;
 },
 GHC.PrimopWrappers.pext8#_entry() //  [R2, R3]
         { info_tbl: [(czFa,
                       label: GHC.PrimopWrappers.pext8#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czFa: // global
           _czF9::I64 = R3;
           (_czF7::I64) = call MO_Pext W8(R2, _czF9::I64);
           R1 = _czF7::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.860257551 UTC

[section ""data" . GHC.PrimopWrappers.pext16#_closure" {
     GHC.PrimopWrappers.pext16#_closure:
         const GHC.PrimopWrappers.pext16#_info;
 },
 GHC.PrimopWrappers.pext16#_entry() //  [R2, R3]
         { info_tbl: [(czFq,
                       label: GHC.PrimopWrappers.pext16#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czFq: // global
           _czFp::I64 = R3;
           (_czFn::I64) = call MO_Pext W16(R2, _czFp::I64);
           R1 = _czFn::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.863955771 UTC

[section ""data" . GHC.PrimopWrappers.pext32#_closure" {
     GHC.PrimopWrappers.pext32#_closure:
         const GHC.PrimopWrappers.pext32#_info;
 },
 GHC.PrimopWrappers.pext32#_entry() //  [R2, R3]
         { info_tbl: [(czFG,
                       label: GHC.PrimopWrappers.pext32#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czFG: // global
           _czFF::I64 = R3;
           (_czFD::I64) = call MO_Pext W32(R2, _czFF::I64);
           R1 = _czFD::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.868100149 UTC

[section ""data" . GHC.PrimopWrappers.pext64#_closure" {
     GHC.PrimopWrappers.pext64#_closure:
         const GHC.PrimopWrappers.pext64#_info;
 },
 GHC.PrimopWrappers.pext64#_entry() //  [R2, R3]
         { info_tbl: [(czFW,
                       label: GHC.PrimopWrappers.pext64#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czFW: // global
           _czFV::I64 = R3;
           (_czFT::I64) = call MO_Pext W64(R2, _czFV::I64);
           R1 = _czFT::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.872073972 UTC

[section ""data" . GHC.PrimopWrappers.pext#_closure" {
     GHC.PrimopWrappers.pext#_closure:
         const GHC.PrimopWrappers.pext#_info;
 },
 GHC.PrimopWrappers.pext#_entry() //  [R2, R3]
         { info_tbl: [(czGc,
                       label: GHC.PrimopWrappers.pext#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czGc: // global
           _czGb::I64 = R3;
           (_czG9::I64) = call MO_Pext W64(R2, _czGb::I64);
           R1 = _czG9::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.876212774 UTC

[section ""data" . GHC.PrimopWrappers.clz8#_closure" {
     GHC.PrimopWrappers.clz8#_closure:
         const GHC.PrimopWrappers.clz8#_info;
 },
 GHC.PrimopWrappers.clz8#_entry() //  [R2]
         { info_tbl: [(czGr,
                       label: GHC.PrimopWrappers.clz8#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czGr: // global
           (_czGp::I64) = call MO_Clz W8(R2);
           R1 = _czGp::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.880005747 UTC

[section ""data" . GHC.PrimopWrappers.clz16#_closure" {
     GHC.PrimopWrappers.clz16#_closure:
         const GHC.PrimopWrappers.clz16#_info;
 },
 GHC.PrimopWrappers.clz16#_entry() //  [R2]
         { info_tbl: [(czGH,
                       label: GHC.PrimopWrappers.clz16#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czGH: // global
           (_czGF::I64) = call MO_Clz W16(R2);
           R1 = _czGF::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.884039518 UTC

[section ""data" . GHC.PrimopWrappers.clz32#_closure" {
     GHC.PrimopWrappers.clz32#_closure:
         const GHC.PrimopWrappers.clz32#_info;
 },
 GHC.PrimopWrappers.clz32#_entry() //  [R2]
         { info_tbl: [(czGX,
                       label: GHC.PrimopWrappers.clz32#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czGX: // global
           (_czGV::I64) = call MO_Clz W32(R2);
           R1 = _czGV::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.887667892 UTC

[section ""data" . GHC.PrimopWrappers.clz64#_closure" {
     GHC.PrimopWrappers.clz64#_closure:
         const GHC.PrimopWrappers.clz64#_info;
 },
 GHC.PrimopWrappers.clz64#_entry() //  [R2]
         { info_tbl: [(czHd,
                       label: GHC.PrimopWrappers.clz64#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czHd: // global
           (_czHb::I64) = call MO_Clz W64(R2);
           R1 = _czHb::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.89113038 UTC

[section ""data" . GHC.PrimopWrappers.clz#_closure" {
     GHC.PrimopWrappers.clz#_closure:
         const GHC.PrimopWrappers.clz#_info;
 },
 GHC.PrimopWrappers.clz#_entry() //  [R2]
         { info_tbl: [(czHt,
                       label: GHC.PrimopWrappers.clz#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czHt: // global
           (_czHr::I64) = call MO_Clz W64(R2);
           R1 = _czHr::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.894862401 UTC

[section ""data" . GHC.PrimopWrappers.ctz8#_closure" {
     GHC.PrimopWrappers.ctz8#_closure:
         const GHC.PrimopWrappers.ctz8#_info;
 },
 GHC.PrimopWrappers.ctz8#_entry() //  [R2]
         { info_tbl: [(czHJ,
                       label: GHC.PrimopWrappers.ctz8#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czHJ: // global
           (_czHH::I64) = call MO_Ctz W8(R2);
           R1 = _czHH::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.898610803 UTC

[section ""data" . GHC.PrimopWrappers.ctz16#_closure" {
     GHC.PrimopWrappers.ctz16#_closure:
         const GHC.PrimopWrappers.ctz16#_info;
 },
 GHC.PrimopWrappers.ctz16#_entry() //  [R2]
         { info_tbl: [(czHZ,
                       label: GHC.PrimopWrappers.ctz16#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czHZ: // global
           (_czHX::I64) = call MO_Ctz W16(R2);
           R1 = _czHX::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.902897786 UTC

[section ""data" . GHC.PrimopWrappers.ctz32#_closure" {
     GHC.PrimopWrappers.ctz32#_closure:
         const GHC.PrimopWrappers.ctz32#_info;
 },
 GHC.PrimopWrappers.ctz32#_entry() //  [R2]
         { info_tbl: [(czIf,
                       label: GHC.PrimopWrappers.ctz32#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czIf: // global
           (_czId::I64) = call MO_Ctz W32(R2);
           R1 = _czId::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.906601817 UTC

[section ""data" . GHC.PrimopWrappers.ctz64#_closure" {
     GHC.PrimopWrappers.ctz64#_closure:
         const GHC.PrimopWrappers.ctz64#_info;
 },
 GHC.PrimopWrappers.ctz64#_entry() //  [R2]
         { info_tbl: [(czIv,
                       label: GHC.PrimopWrappers.ctz64#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czIv: // global
           (_czIt::I64) = call MO_Ctz W64(R2);
           R1 = _czIt::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.910161495 UTC

[section ""data" . GHC.PrimopWrappers.ctz#_closure" {
     GHC.PrimopWrappers.ctz#_closure:
         const GHC.PrimopWrappers.ctz#_info;
 },
 GHC.PrimopWrappers.ctz#_entry() //  [R2]
         { info_tbl: [(czIL,
                       label: GHC.PrimopWrappers.ctz#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czIL: // global
           (_czIJ::I64) = call MO_Ctz W64(R2);
           R1 = _czIJ::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.91371237 UTC

[section ""data" . GHC.PrimopWrappers.byteSwap16#_closure" {
     GHC.PrimopWrappers.byteSwap16#_closure:
         const GHC.PrimopWrappers.byteSwap16#_info;
 },
 GHC.PrimopWrappers.byteSwap16#_entry() //  [R2]
         { info_tbl: [(czJ1,
                       label: GHC.PrimopWrappers.byteSwap16#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czJ1: // global
           (_czIZ::I64) = call MO_BSwap W16(R2);
           R1 = _czIZ::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.917093329 UTC

[section ""data" . GHC.PrimopWrappers.byteSwap32#_closure" {
     GHC.PrimopWrappers.byteSwap32#_closure:
         const GHC.PrimopWrappers.byteSwap32#_info;
 },
 GHC.PrimopWrappers.byteSwap32#_entry() //  [R2]
         { info_tbl: [(czJf,
                       label: GHC.PrimopWrappers.byteSwap32#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czJf: // global
           (_czJd::I64) = call MO_BSwap W32(R2);
           R1 = _czJd::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.920648561 UTC

[section ""data" . GHC.PrimopWrappers.byteSwap64#_closure" {
     GHC.PrimopWrappers.byteSwap64#_closure:
         const GHC.PrimopWrappers.byteSwap64#_info;
 },
 GHC.PrimopWrappers.byteSwap64#_entry() //  [R2]
         { info_tbl: [(czJt,
                       label: GHC.PrimopWrappers.byteSwap64#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czJt: // global
           (_czJr::I64) = call MO_BSwap W64(R2);
           R1 = _czJr::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.924517497 UTC

[section ""data" . GHC.PrimopWrappers.byteSwap#_closure" {
     GHC.PrimopWrappers.byteSwap#_closure:
         const GHC.PrimopWrappers.byteSwap#_info;
 },
 GHC.PrimopWrappers.byteSwap#_entry() //  [R2]
         { info_tbl: [(czJH,
                       label: GHC.PrimopWrappers.byteSwap#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czJH: // global
           (_czJF::I64) = call MO_BSwap W64(R2);
           R1 = _czJF::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.927957974 UTC

[section ""data" . GHC.PrimopWrappers.narrow8Int#_closure" {
     GHC.PrimopWrappers.narrow8Int#_closure:
         const GHC.PrimopWrappers.narrow8Int#_info;
 },
 GHC.PrimopWrappers.narrow8Int#_entry() //  [R2]
         { info_tbl: [(czJU,
                       label: GHC.PrimopWrappers.narrow8Int#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czJU: // global
           R1 = %MO_SS_Conv_W8_W64(%MO_SS_Conv_W64_W8(R2));
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.931974513 UTC

[section ""data" . GHC.PrimopWrappers.narrow16Int#_closure" {
     GHC.PrimopWrappers.narrow16Int#_closure:
         const GHC.PrimopWrappers.narrow16Int#_info;
 },
 GHC.PrimopWrappers.narrow16Int#_entry() //  [R2]
         { info_tbl: [(czK8,
                       label: GHC.PrimopWrappers.narrow16Int#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czK8: // global
           R1 = %MO_SS_Conv_W16_W64(%MO_SS_Conv_W64_W16(R2));
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.935439126 UTC

[section ""data" . GHC.PrimopWrappers.narrow32Int#_closure" {
     GHC.PrimopWrappers.narrow32Int#_closure:
         const GHC.PrimopWrappers.narrow32Int#_info;
 },
 GHC.PrimopWrappers.narrow32Int#_entry() //  [R2]
         { info_tbl: [(czKm,
                       label: GHC.PrimopWrappers.narrow32Int#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czKm: // global
           R1 = %MO_SS_Conv_W32_W64(%MO_SS_Conv_W64_W32(R2));
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.938830444 UTC

[section ""data" . GHC.PrimopWrappers.narrow8Word#_closure" {
     GHC.PrimopWrappers.narrow8Word#_closure:
         const GHC.PrimopWrappers.narrow8Word#_info;
 },
 GHC.PrimopWrappers.narrow8Word#_entry() //  [R2]
         { info_tbl: [(czKz,
                       label: GHC.PrimopWrappers.narrow8Word#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czKz: // global
           R1 = %MO_UU_Conv_W8_W64(%MO_UU_Conv_W64_W8(R2));
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.942538056 UTC

[section ""data" . GHC.PrimopWrappers.narrow16Word#_closure" {
     GHC.PrimopWrappers.narrow16Word#_closure:
         const GHC.PrimopWrappers.narrow16Word#_info;
 },
 GHC.PrimopWrappers.narrow16Word#_entry() //  [R2]
         { info_tbl: [(czKN,
                       label: GHC.PrimopWrappers.narrow16Word#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czKN: // global
           R1 = %MO_UU_Conv_W16_W64(%MO_UU_Conv_W64_W16(R2));
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.946009071 UTC

[section ""data" . GHC.PrimopWrappers.narrow32Word#_closure" {
     GHC.PrimopWrappers.narrow32Word#_closure:
         const GHC.PrimopWrappers.narrow32Word#_info;
 },
 GHC.PrimopWrappers.narrow32Word#_entry() //  [R2]
         { info_tbl: [(czL1,
                       label: GHC.PrimopWrappers.narrow32Word#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czL1: // global
           R1 = %MO_UU_Conv_W32_W64(%MO_UU_Conv_W64_W32(R2));
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.949519931 UTC

[section ""data" . GHC.PrimopWrappers.>##_closure" {
     GHC.PrimopWrappers.>##_closure:
         const GHC.PrimopWrappers.>##_info;
 },
 GHC.PrimopWrappers.>##_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czLa: // global
           D2 = F64[Sp + 8];
           D1 = F64[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.>##_entry(D2,
                                             D1,
                                             R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.>##_entry() //  [D1, D2]
         { info_tbl: [(czLf,
                       label: GHC.PrimopWrappers.>##_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czLf: // global
           R1 = %MO_F_Gt_W64(D1, D2);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.953991856 UTC

[section ""data" . GHC.PrimopWrappers.>=##_closure" {
     GHC.PrimopWrappers.>=##_closure:
         const GHC.PrimopWrappers.>=##_info;
 },
 GHC.PrimopWrappers.>=##_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czLs: // global
           D2 = F64[Sp + 8];
           D1 = F64[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.>=##_entry(D2,
                                              D1,
                                              R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.>=##_entry() //  [D1, D2]
         { info_tbl: [(czLx,
                       label: GHC.PrimopWrappers.>=##_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czLx: // global
           R1 = %MO_F_Ge_W64(D1, D2);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.95833615 UTC

[section ""data" . GHC.PrimopWrappers.==##_closure" {
     GHC.PrimopWrappers.==##_closure:
         const GHC.PrimopWrappers.==##_info;
 },
 GHC.PrimopWrappers.==##_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czLK: // global
           D2 = F64[Sp + 8];
           D1 = F64[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.==##_entry(D2,
                                              D1,
                                              R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.==##_entry() //  [D1, D2]
         { info_tbl: [(czLP,
                       label: GHC.PrimopWrappers.==##_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czLP: // global
           R1 = %MO_F_Eq_W64(D1, D2);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.963322014 UTC

[section ""data" . GHC.PrimopWrappers./=##_closure" {
     GHC.PrimopWrappers./=##_closure:
         const GHC.PrimopWrappers./=##_info;
 },
 GHC.PrimopWrappers./=##_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czM2: // global
           D2 = F64[Sp + 8];
           D1 = F64[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers./=##_entry(D2,
                                              D1,
                                              R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers./=##_entry() //  [D1, D2]
         { info_tbl: [(czM7,
                       label: GHC.PrimopWrappers./=##_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czM7: // global
           R1 = %MO_F_Ne_W64(D1, D2);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.967861413 UTC

[section ""data" . GHC.PrimopWrappers.<##_closure" {
     GHC.PrimopWrappers.<##_closure:
         const GHC.PrimopWrappers.<##_info;
 },
 GHC.PrimopWrappers.<##_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czMk: // global
           D2 = F64[Sp + 8];
           D1 = F64[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.<##_entry(D2,
                                             D1,
                                             R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.<##_entry() //  [D1, D2]
         { info_tbl: [(czMp,
                       label: GHC.PrimopWrappers.<##_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czMp: // global
           R1 = %MO_F_Lt_W64(D1, D2);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.972359023 UTC

[section ""data" . GHC.PrimopWrappers.<=##_closure" {
     GHC.PrimopWrappers.<=##_closure:
         const GHC.PrimopWrappers.<=##_info;
 },
 GHC.PrimopWrappers.<=##_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czMC: // global
           D2 = F64[Sp + 8];
           D1 = F64[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.<=##_entry(D2,
                                              D1,
                                              R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.<=##_entry() //  [D1, D2]
         { info_tbl: [(czMH,
                       label: GHC.PrimopWrappers.<=##_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czMH: // global
           R1 = %MO_F_Le_W64(D1, D2);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.977084156 UTC

[section ""data" . GHC.PrimopWrappers.+##_closure" {
     GHC.PrimopWrappers.+##_closure:
         const GHC.PrimopWrappers.+##_info;
 },
 GHC.PrimopWrappers.+##_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czMU: // global
           D2 = F64[Sp + 8];
           D1 = F64[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.+##_entry(D2,
                                             D1,
                                             R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.+##_entry() //  [D1, D2]
         { info_tbl: [(czMZ,
                       label: GHC.PrimopWrappers.+##_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czMZ: // global
           D1 = %MO_F_Add_W64(D1, D2);
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.981537028 UTC

[section ""data" . GHC.PrimopWrappers.-##_closure" {
     GHC.PrimopWrappers.-##_closure:
         const GHC.PrimopWrappers.-##_info;
 },
 GHC.PrimopWrappers.-##_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czNb: // global
           D2 = F64[Sp + 8];
           D1 = F64[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.-##_entry(D2,
                                             D1,
                                             R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.-##_entry() //  [D1, D2]
         { info_tbl: [(czNg,
                       label: GHC.PrimopWrappers.-##_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czNg: // global
           D1 = %MO_F_Sub_W64(D1, D2);
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.985933263 UTC

[section ""data" . GHC.PrimopWrappers.*##_closure" {
     GHC.PrimopWrappers.*##_closure:
         const GHC.PrimopWrappers.*##_info;
 },
 GHC.PrimopWrappers.*##_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czNs: // global
           D2 = F64[Sp + 8];
           D1 = F64[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.*##_entry(D2,
                                             D1,
                                             R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.*##_entry() //  [D1, D2]
         { info_tbl: [(czNx,
                       label: GHC.PrimopWrappers.*##_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czNx: // global
           D1 = %MO_F_Mul_W64(D1, D2);
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.991140247 UTC

[section ""data" . GHC.PrimopWrappers./##_closure" {
     GHC.PrimopWrappers./##_closure:
         const GHC.PrimopWrappers./##_info;
 },
 GHC.PrimopWrappers./##_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czNJ: // global
           D2 = F64[Sp + 8];
           D1 = F64[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers./##_entry(D2,
                                             D1,
                                             R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers./##_entry() //  [D1, D2]
         { info_tbl: [(czNO,
                       label: GHC.PrimopWrappers./##_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czNO: // global
           D1 = %MO_F_Quot_W64(D1, D2);
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.995598942 UTC

[section ""data" . GHC.PrimopWrappers.negateDouble#_closure" {
     GHC.PrimopWrappers.negateDouble#_closure:
         const GHC.PrimopWrappers.negateDouble#_info;
 },
 GHC.PrimopWrappers.negateDouble#_entry() //  [D1]
         { info_tbl: [(czO4,
                       label: GHC.PrimopWrappers.negateDouble#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czO4: // global
           D1 = %MO_F_Neg_W64(D1);
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:20.999524347 UTC

[section ""data" . GHC.PrimopWrappers.fabsDouble#_closure" {
     GHC.PrimopWrappers.fabsDouble#_closure:
         const GHC.PrimopWrappers.fabsDouble#_info;
 },
 GHC.PrimopWrappers.fabsDouble#_entry() //  [D1]
         { info_tbl: [(czOj,
                       label: GHC.PrimopWrappers.fabsDouble#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czOj: // global
           _B1::F64 = D1;
           (_czOi::F64) = call MO_F64_Fabs(_B1::F64);
           D1 = _czOi::F64;
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.003469066 UTC

[section ""data" . GHC.PrimopWrappers.double2Int#_closure" {
     GHC.PrimopWrappers.double2Int#_closure:
         const GHC.PrimopWrappers.double2Int#_info;
 },
 GHC.PrimopWrappers.double2Int#_entry() //  [D1]
         { info_tbl: [(czOy,
                       label: GHC.PrimopWrappers.double2Int#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czOy: // global
           R1 = %MO_FS_Conv_W64_W64(D1);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.006743553 UTC

[section ""data" . GHC.PrimopWrappers.double2Float#_closure" {
     GHC.PrimopWrappers.double2Float#_closure:
         const GHC.PrimopWrappers.double2Float#_info;
 },
 GHC.PrimopWrappers.double2Float#_entry() //  [D1]
         { info_tbl: [(czOL,
                       label: GHC.PrimopWrappers.double2Float#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czOL: // global
           F1 = %MO_FF_Conv_W64_W32(D1);
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.010080693 UTC

[section ""data" . GHC.PrimopWrappers.expDouble#_closure" {
     GHC.PrimopWrappers.expDouble#_closure:
         const GHC.PrimopWrappers.expDouble#_info;
 },
 GHC.PrimopWrappers.expDouble#_entry() //  [D1]
         { info_tbl: [(czOZ,
                       label: GHC.PrimopWrappers.expDouble#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czOZ: // global
           _czOY::F64 = D1;
           (_czOX::F64) = call MO_F64_Exp(_czOY::F64);
           D1 = _czOX::F64;
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.013930136 UTC

[section ""data" . GHC.PrimopWrappers.logDouble#_closure" {
     GHC.PrimopWrappers.logDouble#_closure:
         const GHC.PrimopWrappers.logDouble#_info;
 },
 GHC.PrimopWrappers.logDouble#_entry() //  [D1]
         { info_tbl: [(czPd,
                       label: GHC.PrimopWrappers.logDouble#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czPd: // global
           _czPc::F64 = D1;
           (_czPb::F64) = call MO_F64_Log(_czPc::F64);
           D1 = _czPb::F64;
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.017284143 UTC

[section ""data" . GHC.PrimopWrappers.sqrtDouble#_closure" {
     GHC.PrimopWrappers.sqrtDouble#_closure:
         const GHC.PrimopWrappers.sqrtDouble#_info;
 },
 GHC.PrimopWrappers.sqrtDouble#_entry() //  [D1]
         { info_tbl: [(czPr,
                       label: GHC.PrimopWrappers.sqrtDouble#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czPr: // global
           _czPq::F64 = D1;
           (_czPp::F64) = call MO_F64_Sqrt(_czPq::F64);
           D1 = _czPp::F64;
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.020643522 UTC

[section ""data" . GHC.PrimopWrappers.sinDouble#_closure" {
     GHC.PrimopWrappers.sinDouble#_closure:
         const GHC.PrimopWrappers.sinDouble#_info;
 },
 GHC.PrimopWrappers.sinDouble#_entry() //  [D1]
         { info_tbl: [(czPF,
                       label: GHC.PrimopWrappers.sinDouble#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czPF: // global
           _czPE::F64 = D1;
           (_czPD::F64) = call MO_F64_Sin(_czPE::F64);
           D1 = _czPD::F64;
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.024163605 UTC

[section ""data" . GHC.PrimopWrappers.cosDouble#_closure" {
     GHC.PrimopWrappers.cosDouble#_closure:
         const GHC.PrimopWrappers.cosDouble#_info;
 },
 GHC.PrimopWrappers.cosDouble#_entry() //  [D1]
         { info_tbl: [(czPT,
                       label: GHC.PrimopWrappers.cosDouble#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czPT: // global
           _czPS::F64 = D1;
           (_czPR::F64) = call MO_F64_Cos(_czPS::F64);
           D1 = _czPR::F64;
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.028328908 UTC

[section ""data" . GHC.PrimopWrappers.tanDouble#_closure" {
     GHC.PrimopWrappers.tanDouble#_closure:
         const GHC.PrimopWrappers.tanDouble#_info;
 },
 GHC.PrimopWrappers.tanDouble#_entry() //  [D1]
         { info_tbl: [(czQ7,
                       label: GHC.PrimopWrappers.tanDouble#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czQ7: // global
           _czQ6::F64 = D1;
           (_czQ5::F64) = call MO_F64_Tan(_czQ6::F64);
           D1 = _czQ5::F64;
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.03180935 UTC

[section ""data" . GHC.PrimopWrappers.asinDouble#_closure" {
     GHC.PrimopWrappers.asinDouble#_closure:
         const GHC.PrimopWrappers.asinDouble#_info;
 },
 GHC.PrimopWrappers.asinDouble#_entry() //  [D1]
         { info_tbl: [(czQl,
                       label: GHC.PrimopWrappers.asinDouble#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czQl: // global
           _czQk::F64 = D1;
           (_czQj::F64) = call MO_F64_Asin(_czQk::F64);
           D1 = _czQj::F64;
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.03534594 UTC

[section ""data" . GHC.PrimopWrappers.acosDouble#_closure" {
     GHC.PrimopWrappers.acosDouble#_closure:
         const GHC.PrimopWrappers.acosDouble#_info;
 },
 GHC.PrimopWrappers.acosDouble#_entry() //  [D1]
         { info_tbl: [(czQz,
                       label: GHC.PrimopWrappers.acosDouble#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czQz: // global
           _czQy::F64 = D1;
           (_czQx::F64) = call MO_F64_Acos(_czQy::F64);
           D1 = _czQx::F64;
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.038830387 UTC

[section ""data" . GHC.PrimopWrappers.atanDouble#_closure" {
     GHC.PrimopWrappers.atanDouble#_closure:
         const GHC.PrimopWrappers.atanDouble#_info;
 },
 GHC.PrimopWrappers.atanDouble#_entry() //  [D1]
         { info_tbl: [(czQN,
                       label: GHC.PrimopWrappers.atanDouble#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czQN: // global
           _czQM::F64 = D1;
           (_czQL::F64) = call MO_F64_Atan(_czQM::F64);
           D1 = _czQL::F64;
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.042408061 UTC

[section ""data" . GHC.PrimopWrappers.sinhDouble#_closure" {
     GHC.PrimopWrappers.sinhDouble#_closure:
         const GHC.PrimopWrappers.sinhDouble#_info;
 },
 GHC.PrimopWrappers.sinhDouble#_entry() //  [D1]
         { info_tbl: [(czR1,
                       label: GHC.PrimopWrappers.sinhDouble#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czR1: // global
           _czR0::F64 = D1;
           (_czQZ::F64) = call MO_F64_Sinh(_czR0::F64);
           D1 = _czQZ::F64;
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.045912135 UTC

[section ""data" . GHC.PrimopWrappers.coshDouble#_closure" {
     GHC.PrimopWrappers.coshDouble#_closure:
         const GHC.PrimopWrappers.coshDouble#_info;
 },
 GHC.PrimopWrappers.coshDouble#_entry() //  [D1]
         { info_tbl: [(czRf,
                       label: GHC.PrimopWrappers.coshDouble#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czRf: // global
           _czRe::F64 = D1;
           (_czRd::F64) = call MO_F64_Cosh(_czRe::F64);
           D1 = _czRd::F64;
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.049321934 UTC

[section ""data" . GHC.PrimopWrappers.tanhDouble#_closure" {
     GHC.PrimopWrappers.tanhDouble#_closure:
         const GHC.PrimopWrappers.tanhDouble#_info;
 },
 GHC.PrimopWrappers.tanhDouble#_entry() //  [D1]
         { info_tbl: [(czRt,
                       label: GHC.PrimopWrappers.tanhDouble#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czRt: // global
           _czRs::F64 = D1;
           (_czRr::F64) = call MO_F64_Tanh(_czRs::F64);
           D1 = _czRr::F64;
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.052908409 UTC

[section ""data" . GHC.PrimopWrappers.**##_closure" {
     GHC.PrimopWrappers.**##_closure:
         const GHC.PrimopWrappers.**##_info;
 },
 GHC.PrimopWrappers.**##_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czRC: // global
           D2 = F64[Sp + 8];
           D1 = F64[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.**##_entry(D2,
                                              D1,
                                              R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.**##_entry() //  [D1, D2]
         { info_tbl: [(czRJ,
                       label: GHC.PrimopWrappers.**##_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czRJ: // global
           _czRH::F64 = D1;
           _czRI::F64 = D2;
           (_czRG::F64) = call MO_F64_Pwr(_czRH::F64, _czRI::F64);
           D1 = _czRG::F64;
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.057981482 UTC

[section ""data" . GHC.PrimopWrappers.decodeDouble_2Int#_closure" {
     GHC.PrimopWrappers.decodeDouble_2Int#_closure:
         const GHC.PrimopWrappers.decodeDouble_2Int#_info;
 },
 GHC.PrimopWrappers.decodeDouble_2Int#_entry() //  [D1]
         { info_tbl: [(czRY,
                       label: GHC.PrimopWrappers.decodeDouble_2Int#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czRY: // global
           D1 = D1;
           call stg_decodeDouble_2Int#(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.062023646 UTC

[section ""data" . GHC.PrimopWrappers.decodeDouble_Int64#_closure" {
     GHC.PrimopWrappers.decodeDouble_Int64#_closure:
         const GHC.PrimopWrappers.decodeDouble_Int64#_info;
 },
 GHC.PrimopWrappers.decodeDouble_Int64#_entry() //  [D1]
         { info_tbl: [(czS9,
                       label: GHC.PrimopWrappers.decodeDouble_Int64#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 7} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czS9: // global
           D1 = D1;
           call stg_decodeDouble_Int64#(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.065812765 UTC

[section ""data" . GHC.PrimopWrappers.gtFloat#_closure" {
     GHC.PrimopWrappers.gtFloat#_closure:
         const GHC.PrimopWrappers.gtFloat#_info;
 },
 GHC.PrimopWrappers.gtFloat#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czSh: // global
           F2 = F32[Sp + 8];
           F1 = F32[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.gtFloat#_entry(F2,
                                                  F1,
                                                  R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.gtFloat#_entry() //  [F1, F2]
         { info_tbl: [(czSm,
                       label: GHC.PrimopWrappers.gtFloat#_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czSm: // global
           R1 = %MO_F_Gt_W32(F1, F2);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.070806409 UTC

[section ""data" . GHC.PrimopWrappers.geFloat#_closure" {
     GHC.PrimopWrappers.geFloat#_closure:
         const GHC.PrimopWrappers.geFloat#_info;
 },
 GHC.PrimopWrappers.geFloat#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czSz: // global
           F2 = F32[Sp + 8];
           F1 = F32[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.geFloat#_entry(F2,
                                                  F1,
                                                  R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.geFloat#_entry() //  [F1, F2]
         { info_tbl: [(czSE,
                       label: GHC.PrimopWrappers.geFloat#_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czSE: // global
           R1 = %MO_F_Ge_W32(F1, F2);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.075926141 UTC

[section ""data" . GHC.PrimopWrappers.eqFloat#_closure" {
     GHC.PrimopWrappers.eqFloat#_closure:
         const GHC.PrimopWrappers.eqFloat#_info;
 },
 GHC.PrimopWrappers.eqFloat#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czSR: // global
           F2 = F32[Sp + 8];
           F1 = F32[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.eqFloat#_entry(F2,
                                                  F1,
                                                  R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.eqFloat#_entry() //  [F1, F2]
         { info_tbl: [(czSW,
                       label: GHC.PrimopWrappers.eqFloat#_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czSW: // global
           R1 = %MO_F_Eq_W32(F1, F2);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.081146431 UTC

[section ""data" . GHC.PrimopWrappers.neFloat#_closure" {
     GHC.PrimopWrappers.neFloat#_closure:
         const GHC.PrimopWrappers.neFloat#_info;
 },
 GHC.PrimopWrappers.neFloat#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czT9: // global
           F2 = F32[Sp + 8];
           F1 = F32[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.neFloat#_entry(F2,
                                                  F1,
                                                  R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.neFloat#_entry() //  [F1, F2]
         { info_tbl: [(czTe,
                       label: GHC.PrimopWrappers.neFloat#_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czTe: // global
           R1 = %MO_F_Ne_W32(F1, F2);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.086694829 UTC

[section ""data" . GHC.PrimopWrappers.ltFloat#_closure" {
     GHC.PrimopWrappers.ltFloat#_closure:
         const GHC.PrimopWrappers.ltFloat#_info;
 },
 GHC.PrimopWrappers.ltFloat#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czTr: // global
           F2 = F32[Sp + 8];
           F1 = F32[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.ltFloat#_entry(F2,
                                                  F1,
                                                  R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.ltFloat#_entry() //  [F1, F2]
         { info_tbl: [(czTw,
                       label: GHC.PrimopWrappers.ltFloat#_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czTw: // global
           R1 = %MO_F_Lt_W32(F1, F2);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.091864419 UTC

[section ""data" . GHC.PrimopWrappers.leFloat#_closure" {
     GHC.PrimopWrappers.leFloat#_closure:
         const GHC.PrimopWrappers.leFloat#_info;
 },
 GHC.PrimopWrappers.leFloat#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czTJ: // global
           F2 = F32[Sp + 8];
           F1 = F32[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.leFloat#_entry(F2,
                                                  F1,
                                                  R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.leFloat#_entry() //  [F1, F2]
         { info_tbl: [(czTO,
                       label: GHC.PrimopWrappers.leFloat#_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czTO: // global
           R1 = %MO_F_Le_W32(F1, F2);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.097988065 UTC

[section ""data" . GHC.PrimopWrappers.plusFloat#_closure" {
     GHC.PrimopWrappers.plusFloat#_closure:
         const GHC.PrimopWrappers.plusFloat#_info;
 },
 GHC.PrimopWrappers.plusFloat#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czU1: // global
           F2 = F32[Sp + 8];
           F1 = F32[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.plusFloat#_entry(F2,
                                                    F1,
                                                    R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.plusFloat#_entry() //  [F1, F2]
         { info_tbl: [(czU6,
                       label: GHC.PrimopWrappers.plusFloat#_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czU6: // global
           F1 = %MO_F_Add_W32(F1, F2);
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.102892595 UTC

[section ""data" . GHC.PrimopWrappers.minusFloat#_closure" {
     GHC.PrimopWrappers.minusFloat#_closure:
         const GHC.PrimopWrappers.minusFloat#_info;
 },
 GHC.PrimopWrappers.minusFloat#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czUi: // global
           F2 = F32[Sp + 8];
           F1 = F32[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.minusFloat#_entry(F2,
                                                     F1,
                                                     R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.minusFloat#_entry() //  [F1, F2]
         { info_tbl: [(czUn,
                       label: GHC.PrimopWrappers.minusFloat#_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czUn: // global
           F1 = %MO_F_Sub_W32(F1, F2);
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.107798383 UTC

[section ""data" . GHC.PrimopWrappers.timesFloat#_closure" {
     GHC.PrimopWrappers.timesFloat#_closure:
         const GHC.PrimopWrappers.timesFloat#_info;
 },
 GHC.PrimopWrappers.timesFloat#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czUz: // global
           F2 = F32[Sp + 8];
           F1 = F32[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.timesFloat#_entry(F2,
                                                     F1,
                                                     R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.timesFloat#_entry() //  [F1, F2]
         { info_tbl: [(czUE,
                       label: GHC.PrimopWrappers.timesFloat#_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czUE: // global
           F1 = %MO_F_Mul_W32(F1, F2);
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.112819925 UTC

[section ""data" . GHC.PrimopWrappers.divideFloat#_closure" {
     GHC.PrimopWrappers.divideFloat#_closure:
         const GHC.PrimopWrappers.divideFloat#_info;
 },
 GHC.PrimopWrappers.divideFloat#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czUQ: // global
           F2 = F32[Sp + 8];
           F1 = F32[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.divideFloat#_entry(F2,
                                                      F1,
                                                      R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.divideFloat#_entry() //  [F1, F2]
         { info_tbl: [(czUV,
                       label: GHC.PrimopWrappers.divideFloat#_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czUV: // global
           F1 = %MO_F_Quot_W32(F1, F2);
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.11800175 UTC

[section ""data" . GHC.PrimopWrappers.negateFloat#_closure" {
     GHC.PrimopWrappers.negateFloat#_closure:
         const GHC.PrimopWrappers.negateFloat#_info;
 },
 GHC.PrimopWrappers.negateFloat#_entry() //  [F1]
         { info_tbl: [(czVb,
                       label: GHC.PrimopWrappers.negateFloat#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czVb: // global
           F1 = %MO_F_Neg_W32(F1);
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.122739435 UTC

[section ""data" . GHC.PrimopWrappers.fabsFloat#_closure" {
     GHC.PrimopWrappers.fabsFloat#_closure:
         const GHC.PrimopWrappers.fabsFloat#_info;
 },
 GHC.PrimopWrappers.fabsFloat#_entry() //  [F1]
         { info_tbl: [(czVq,
                       label: GHC.PrimopWrappers.fabsFloat#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czVq: // global
           _B1::F32 = F1;
           (_czVp::F32) = call MO_F32_Fabs(_B1::F32);
           F1 = _czVp::F32;
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.126800117 UTC

[section ""data" . GHC.PrimopWrappers.float2Int#_closure" {
     GHC.PrimopWrappers.float2Int#_closure:
         const GHC.PrimopWrappers.float2Int#_info;
 },
 GHC.PrimopWrappers.float2Int#_entry() //  [F1]
         { info_tbl: [(czVF,
                       label: GHC.PrimopWrappers.float2Int#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czVF: // global
           R1 = %MO_FS_Conv_W32_W64(F1);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.130789618 UTC

[section ""data" . GHC.PrimopWrappers.expFloat#_closure" {
     GHC.PrimopWrappers.expFloat#_closure:
         const GHC.PrimopWrappers.expFloat#_info;
 },
 GHC.PrimopWrappers.expFloat#_entry() //  [F1]
         { info_tbl: [(czVT,
                       label: GHC.PrimopWrappers.expFloat#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czVT: // global
           _czVS::F32 = F1;
           (_czVR::F32) = call MO_F32_Exp(_czVS::F32);
           F1 = _czVR::F32;
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.134515967 UTC

[section ""data" . GHC.PrimopWrappers.logFloat#_closure" {
     GHC.PrimopWrappers.logFloat#_closure:
         const GHC.PrimopWrappers.logFloat#_info;
 },
 GHC.PrimopWrappers.logFloat#_entry() //  [F1]
         { info_tbl: [(czW7,
                       label: GHC.PrimopWrappers.logFloat#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czW7: // global
           _czW6::F32 = F1;
           (_czW5::F32) = call MO_F32_Log(_czW6::F32);
           F1 = _czW5::F32;
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.138336502 UTC

[section ""data" . GHC.PrimopWrappers.sqrtFloat#_closure" {
     GHC.PrimopWrappers.sqrtFloat#_closure:
         const GHC.PrimopWrappers.sqrtFloat#_info;
 },
 GHC.PrimopWrappers.sqrtFloat#_entry() //  [F1]
         { info_tbl: [(czWl,
                       label: GHC.PrimopWrappers.sqrtFloat#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czWl: // global
           _czWk::F32 = F1;
           (_czWj::F32) = call MO_F32_Sqrt(_czWk::F32);
           F1 = _czWj::F32;
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.141793905 UTC

[section ""data" . GHC.PrimopWrappers.sinFloat#_closure" {
     GHC.PrimopWrappers.sinFloat#_closure:
         const GHC.PrimopWrappers.sinFloat#_info;
 },
 GHC.PrimopWrappers.sinFloat#_entry() //  [F1]
         { info_tbl: [(czWz,
                       label: GHC.PrimopWrappers.sinFloat#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czWz: // global
           _czWy::F32 = F1;
           (_czWx::F32) = call MO_F32_Sin(_czWy::F32);
           F1 = _czWx::F32;
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.145187948 UTC

[section ""data" . GHC.PrimopWrappers.cosFloat#_closure" {
     GHC.PrimopWrappers.cosFloat#_closure:
         const GHC.PrimopWrappers.cosFloat#_info;
 },
 GHC.PrimopWrappers.cosFloat#_entry() //  [F1]
         { info_tbl: [(czWN,
                       label: GHC.PrimopWrappers.cosFloat#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czWN: // global
           _czWM::F32 = F1;
           (_czWL::F32) = call MO_F32_Cos(_czWM::F32);
           F1 = _czWL::F32;
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.148597446 UTC

[section ""data" . GHC.PrimopWrappers.tanFloat#_closure" {
     GHC.PrimopWrappers.tanFloat#_closure:
         const GHC.PrimopWrappers.tanFloat#_info;
 },
 GHC.PrimopWrappers.tanFloat#_entry() //  [F1]
         { info_tbl: [(czX1,
                       label: GHC.PrimopWrappers.tanFloat#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czX1: // global
           _czX0::F32 = F1;
           (_czWZ::F32) = call MO_F32_Tan(_czX0::F32);
           F1 = _czWZ::F32;
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.152037916 UTC

[section ""data" . GHC.PrimopWrappers.asinFloat#_closure" {
     GHC.PrimopWrappers.asinFloat#_closure:
         const GHC.PrimopWrappers.asinFloat#_info;
 },
 GHC.PrimopWrappers.asinFloat#_entry() //  [F1]
         { info_tbl: [(czXf,
                       label: GHC.PrimopWrappers.asinFloat#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czXf: // global
           _czXe::F32 = F1;
           (_czXd::F32) = call MO_F32_Asin(_czXe::F32);
           F1 = _czXd::F32;
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.155460823 UTC

[section ""data" . GHC.PrimopWrappers.acosFloat#_closure" {
     GHC.PrimopWrappers.acosFloat#_closure:
         const GHC.PrimopWrappers.acosFloat#_info;
 },
 GHC.PrimopWrappers.acosFloat#_entry() //  [F1]
         { info_tbl: [(czXt,
                       label: GHC.PrimopWrappers.acosFloat#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czXt: // global
           _czXs::F32 = F1;
           (_czXr::F32) = call MO_F32_Acos(_czXs::F32);
           F1 = _czXr::F32;
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.158950605 UTC

[section ""data" . GHC.PrimopWrappers.atanFloat#_closure" {
     GHC.PrimopWrappers.atanFloat#_closure:
         const GHC.PrimopWrappers.atanFloat#_info;
 },
 GHC.PrimopWrappers.atanFloat#_entry() //  [F1]
         { info_tbl: [(czXH,
                       label: GHC.PrimopWrappers.atanFloat#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czXH: // global
           _czXG::F32 = F1;
           (_czXF::F32) = call MO_F32_Atan(_czXG::F32);
           F1 = _czXF::F32;
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.162897284 UTC

[section ""data" . GHC.PrimopWrappers.sinhFloat#_closure" {
     GHC.PrimopWrappers.sinhFloat#_closure:
         const GHC.PrimopWrappers.sinhFloat#_info;
 },
 GHC.PrimopWrappers.sinhFloat#_entry() //  [F1]
         { info_tbl: [(czXV,
                       label: GHC.PrimopWrappers.sinhFloat#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czXV: // global
           _czXU::F32 = F1;
           (_czXT::F32) = call MO_F32_Sinh(_czXU::F32);
           F1 = _czXT::F32;
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.166263544 UTC

[section ""data" . GHC.PrimopWrappers.coshFloat#_closure" {
     GHC.PrimopWrappers.coshFloat#_closure:
         const GHC.PrimopWrappers.coshFloat#_info;
 },
 GHC.PrimopWrappers.coshFloat#_entry() //  [F1]
         { info_tbl: [(czY9,
                       label: GHC.PrimopWrappers.coshFloat#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czY9: // global
           _czY8::F32 = F1;
           (_czY7::F32) = call MO_F32_Cosh(_czY8::F32);
           F1 = _czY7::F32;
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.169631466 UTC

[section ""data" . GHC.PrimopWrappers.tanhFloat#_closure" {
     GHC.PrimopWrappers.tanhFloat#_closure:
         const GHC.PrimopWrappers.tanhFloat#_info;
 },
 GHC.PrimopWrappers.tanhFloat#_entry() //  [F1]
         { info_tbl: [(czYn,
                       label: GHC.PrimopWrappers.tanhFloat#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czYn: // global
           _czYm::F32 = F1;
           (_czYl::F32) = call MO_F32_Tanh(_czYm::F32);
           F1 = _czYl::F32;
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.173120139 UTC

[section ""data" . GHC.PrimopWrappers.powerFloat#_closure" {
     GHC.PrimopWrappers.powerFloat#_closure:
         const GHC.PrimopWrappers.powerFloat#_info;
 },
 GHC.PrimopWrappers.powerFloat#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czYw: // global
           F2 = F32[Sp + 8];
           F1 = F32[Sp];
           R1 = R1;
           Sp = Sp + 16;
           call GHC.PrimopWrappers.powerFloat#_entry(F2,
                                                     F1,
                                                     R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.powerFloat#_entry() //  [F1, F2]
         { info_tbl: [(czYD,
                       label: GHC.PrimopWrappers.powerFloat#_info
                       rep:HeapRep static {
                             Fun {arity: 2 fun_type: ArgGen [True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czYD: // global
           _czYB::F32 = F1;
           _czYC::F32 = F2;
           (_czYA::F32) = call MO_F32_Pwr(_czYB::F32, _czYC::F32);
           F1 = _czYA::F32;
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.17787226 UTC

[section ""data" . GHC.PrimopWrappers.float2Double#_closure" {
     GHC.PrimopWrappers.float2Double#_closure:
         const GHC.PrimopWrappers.float2Double#_info;
 },
 GHC.PrimopWrappers.float2Double#_entry() //  [F1]
         { info_tbl: [(czYT,
                       label: GHC.PrimopWrappers.float2Double#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czYT: // global
           D1 = %MO_FF_Conv_W32_W64(F1);
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.181161251 UTC

[section ""data" . GHC.PrimopWrappers.decodeFloat_Int#_closure" {
     GHC.PrimopWrappers.decodeFloat_Int#_closure:
         const GHC.PrimopWrappers.decodeFloat_Int#_info;
 },
 GHC.PrimopWrappers.decodeFloat_Int#_entry() //  [F1]
         { info_tbl: [(czZ5,
                       label: GHC.PrimopWrappers.decodeFloat_Int#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 6} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czZ5: // global
           F1 = F1;
           call stg_decodeFloat_Int#(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.184460256 UTC

[section ""data" . GHC.PrimopWrappers.newArray#_closure" {
     GHC.PrimopWrappers.newArray#_closure:
         const GHC.PrimopWrappers.newArray#_info;
 },
 GHC.PrimopWrappers.newArray#_entry() //  [R2, R3]
         { info_tbl: [(czZg,
                       label: GHC.PrimopWrappers.newArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 13} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czZg: // global
           _B3::I64 = R2;
           R2 = R3;
           R1 = _B3::I64;
           call stg_newArray#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.187786306 UTC

[section ""data" . GHC.PrimopWrappers.sameMutableArray#_closure" {
     GHC.PrimopWrappers.sameMutableArray#_closure:
         const GHC.PrimopWrappers.sameMutableArray#_info;
 },
 GHC.PrimopWrappers.sameMutableArray#_entry() //  [R2, R3]
         { info_tbl: [(czZs,
                       label: GHC.PrimopWrappers.sameMutableArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czZs: // global
           R1 = R2 == R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.191764649 UTC

[section ""data" . GHC.PrimopWrappers.readArray#_closure" {
     GHC.PrimopWrappers.readArray#_closure:
         const GHC.PrimopWrappers.readArray#_info;
 },
 GHC.PrimopWrappers.readArray#_entry() //  [R2, R3]
         { info_tbl: [(czZG,
                       label: GHC.PrimopWrappers.readArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czZG: // global
           R1 = P64[(R2 + 24) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.19519263 UTC

[section ""data" . GHC.PrimopWrappers.writeArray#_closure" {
     GHC.PrimopWrappers.writeArray#_closure:
         const GHC.PrimopWrappers.writeArray#_info;
 },
 GHC.PrimopWrappers.writeArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(czZS,
                       label: GHC.PrimopWrappers.writeArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 21} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       czZS: // global
           _B2::P64 = R4;
           _B3::I64 = R3;
           call MO_WriteBarrier();
           P64[(R2 + 24) + (_B3::I64 << 3)] = _B2::P64;
           I64[R2] = stg_MUT_ARR_PTRS_DIRTY_info;
           I8[(R2 + 24) + ((I64[R2 + 8] << 3) + (_B3::I64 >> 7))] = 1 :: W8;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.198760647 UTC

[section ""data" . GHC.PrimopWrappers.sizeofArray#_closure" {
     GHC.PrimopWrappers.sizeofArray#_closure:
         const GHC.PrimopWrappers.sizeofArray#_info;
 },
 GHC.PrimopWrappers.sizeofArray#_entry() //  [R2]
         { info_tbl: [(cA0a,
                       label: GHC.PrimopWrappers.sizeofArray#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cA0a: // global
           R1 = I64[R2 + 8];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.202043461 UTC

[section ""data" . GHC.PrimopWrappers.sizeofMutableArray#_closure" {
     GHC.PrimopWrappers.sizeofMutableArray#_closure:
         const GHC.PrimopWrappers.sizeofMutableArray#_info;
 },
 GHC.PrimopWrappers.sizeofMutableArray#_entry() //  [R2]
         { info_tbl: [(cA0n,
                       label: GHC.PrimopWrappers.sizeofMutableArray#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cA0n: // global
           R1 = I64[R2 + 8];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.206516802 UTC

[section ""data" . GHC.PrimopWrappers.indexArray#_closure" {
     GHC.PrimopWrappers.indexArray#_closure:
         const GHC.PrimopWrappers.indexArray#_info;
 },
 GHC.PrimopWrappers.indexArray#_entry() //  [R2, R3]
         { info_tbl: [(cA0A,
                       label: GHC.PrimopWrappers.indexArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cA0A: // global
           R1 = P64[(R2 + 24) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.209908946 UTC

[section ""data" . GHC.PrimopWrappers.unsafeFreezeArray#_closure" {
     GHC.PrimopWrappers.unsafeFreezeArray#_closure:
         const GHC.PrimopWrappers.unsafeFreezeArray#_info;
 },
 GHC.PrimopWrappers.unsafeFreezeArray#_entry() //  [R2]
         { info_tbl: [(cA0N,
                       label: GHC.PrimopWrappers.unsafeFreezeArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cA0N: // global
           I64[R2] = stg_MUT_ARR_PTRS_FROZEN0_info;
           R1 = R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.213393634 UTC

[section ""data" . GHC.PrimopWrappers.unsafeThawArray#_closure" {
     GHC.PrimopWrappers.unsafeThawArray#_closure:
         const GHC.PrimopWrappers.unsafeThawArray#_info;
 },
 GHC.PrimopWrappers.unsafeThawArray#_entry() //  [R2]
         { info_tbl: [(cA10,
                       label: GHC.PrimopWrappers.unsafeThawArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cA10: // global
           R1 = R2;
           call stg_unsafeThawArray#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.216750312 UTC

[section ""data" . GHC.PrimopWrappers.copyArray#_closure" {
     GHC.PrimopWrappers.copyArray#_closure:
         const GHC.PrimopWrappers.copyArray#_info;
 },
 GHC.PrimopWrappers.copyArray#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cA18: // global
           R6 = I64[Sp + 32];
           R5 = I64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 40;
           call GHC.PrimopWrappers.copyArray#_entry(R6,
                                                    R5,
                                                    R4,
                                                    R3,
                                                    R2,
                                                    R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.copyArray#_entry() //  [R2, R3, R4, R5, R6]
         { info_tbl: [(cA1c,
                       label: GHC.PrimopWrappers.copyArray#_info
                       rep:HeapRep static {
                             Fun {arity: 6
                                  fun_type: ArgGen [False, True, False, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cA1c: // global
           _B3::I64 = R5;
           R5 = R6;
           _B4::P64 = R4;
           R4 = _B3::I64;
           _B5::I64 = R3;
           R3 = _B4::P64;
           _B6::P64 = R2;
           R2 = _B5::I64;
           R1 = _B6::P64;
           call stg_copyArray#(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.221533804 UTC

[section ""data" . GHC.PrimopWrappers.copyMutableArray#_closure" {
     GHC.PrimopWrappers.copyMutableArray#_closure:
         const GHC.PrimopWrappers.copyMutableArray#_info;
 },
 GHC.PrimopWrappers.copyMutableArray#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cA1m: // global
           R6 = I64[Sp + 32];
           R5 = I64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 40;
           call GHC.PrimopWrappers.copyMutableArray#_entry(R6,
                                                           R5,
                                                           R4,
                                                           R3,
                                                           R2,
                                                           R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.copyMutableArray#_entry() //  [R2, R3, R4, R5,
                                                   R6]
         { info_tbl: [(cA1q,
                       label: GHC.PrimopWrappers.copyMutableArray#_info
                       rep:HeapRep static {
                             Fun {arity: 6
                                  fun_type: ArgGen [False, True, False, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cA1q: // global
           _B3::I64 = R5;
           R5 = R6;
           _B4::P64 = R4;
           R4 = _B3::I64;
           _B5::I64 = R3;
           R3 = _B4::P64;
           _B6::P64 = R2;
           R2 = _B5::I64;
           R1 = _B6::P64;
           call stg_copyMutableArray#(R5,
                                      R4,
                                      R3,
                                      R2,
                                      R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.226817385 UTC

[section ""data" . GHC.PrimopWrappers.cloneArray#_closure" {
     GHC.PrimopWrappers.cloneArray#_closure:
         const GHC.PrimopWrappers.cloneArray#_info;
 },
 GHC.PrimopWrappers.cloneArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cA1D,
                       label: GHC.PrimopWrappers.cloneArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cA1D: // global
           _B2::I64 = R3;
           R3 = R4;
           _B3::P64 = R2;
           R2 = _B2::I64;
           R1 = _B3::P64;
           call stg_cloneArray#(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.230281719 UTC

[section ""data" . GHC.PrimopWrappers.cloneMutableArray#_closure" {
     GHC.PrimopWrappers.cloneMutableArray#_closure:
         const GHC.PrimopWrappers.cloneMutableArray#_info;
 },
 GHC.PrimopWrappers.cloneMutableArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cA1O,
                       label: GHC.PrimopWrappers.cloneMutableArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cA1O: // global
           _B3::I64 = R3;
           R3 = R4;
           _B4::P64 = R2;
           R2 = _B3::I64;
           R1 = _B4::P64;
           call stg_cloneMutableArray#(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.233947617 UTC

[section ""data" . GHC.PrimopWrappers.freezeArray#_closure" {
     GHC.PrimopWrappers.freezeArray#_closure:
         const GHC.PrimopWrappers.freezeArray#_info;
 },
 GHC.PrimopWrappers.freezeArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cA1Z,
                       label: GHC.PrimopWrappers.freezeArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cA1Z: // global
           _B3::I64 = R3;
           R3 = R4;
           _B4::P64 = R2;
           R2 = _B3::I64;
           R1 = _B4::P64;
           call stg_freezeArray#(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.237373686 UTC

[section ""data" . GHC.PrimopWrappers.thawArray#_closure" {
     GHC.PrimopWrappers.thawArray#_closure:
         const GHC.PrimopWrappers.thawArray#_info;
 },
 GHC.PrimopWrappers.thawArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cA2a,
                       label: GHC.PrimopWrappers.thawArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cA2a: // global
           _B3::I64 = R3;
           R3 = R4;
           _B4::P64 = R2;
           R2 = _B3::I64;
           R1 = _B4::P64;
           call stg_thawArray#(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.240899996 UTC

[section ""data" . GHC.PrimopWrappers.casArray#_closure" {
     GHC.PrimopWrappers.casArray#_closure:
         const GHC.PrimopWrappers.casArray#_info;
 },
 GHC.PrimopWrappers.casArray#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cA2i: // global
           R5 = P64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 32;
           call GHC.PrimopWrappers.casArray#_entry(R5,
                                                   R4,
                                                   R3,
                                                   R2,
                                                   R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.casArray#_entry() //  [R2, R3, R4, R5]
         { info_tbl: [(cA2m,
                       label: GHC.PrimopWrappers.casArray#_info
                       rep:HeapRep static {
                             Fun {arity: 5 fun_type: ArgGen [False, True, False, False]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cA2m: // global
           _B3::P64 = R4;
           R4 = R5;
           _B4::I64 = R3;
           R3 = _B3::P64;
           _B5::P64 = R2;
           R2 = _B4::I64;
           R1 = _B5::P64;
           call stg_casArray#(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.246005678 UTC

[section ""data" . GHC.PrimopWrappers.newSmallArray#_closure" {
     GHC.PrimopWrappers.newSmallArray#_closure:
         const GHC.PrimopWrappers.newSmallArray#_info;
 },
 GHC.PrimopWrappers.newSmallArray#_entry() //  [R2, R3]
         { info_tbl: [(cA2z,
                       label: GHC.PrimopWrappers.newSmallArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 13} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cA2z: // global
           _B3::I64 = R2;
           R2 = R3;
           R1 = _B3::I64;
           call stg_newSmallArray#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.249426966 UTC

[section ""data" . GHC.PrimopWrappers.sameSmallMutableArray#_closure" {
     GHC.PrimopWrappers.sameSmallMutableArray#_closure:
         const GHC.PrimopWrappers.sameSmallMutableArray#_info;
 },
 GHC.PrimopWrappers.sameSmallMutableArray#_entry() //  [R2, R3]
         { info_tbl: [(cA2L,
                       label: GHC.PrimopWrappers.sameSmallMutableArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cA2L: // global
           R1 = R2 == R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.252771015 UTC

[section ""data" . GHC.PrimopWrappers.readSmallArray#_closure" {
     GHC.PrimopWrappers.readSmallArray#_closure:
         const GHC.PrimopWrappers.readSmallArray#_info;
 },
 GHC.PrimopWrappers.readSmallArray#_entry() //  [R2, R3]
         { info_tbl: [(cA2Z,
                       label: GHC.PrimopWrappers.readSmallArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cA2Z: // global
           R1 = P64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.258376198 UTC

[section ""data" . GHC.PrimopWrappers.writeSmallArray#_closure" {
     GHC.PrimopWrappers.writeSmallArray#_closure:
         const GHC.PrimopWrappers.writeSmallArray#_info;
 },
 GHC.PrimopWrappers.writeSmallArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cA3b,
                       label: GHC.PrimopWrappers.writeSmallArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 21} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cA3b: // global
           P64[(R2 + 16) + (R3 << 3)] = R4;
           I64[R2] = stg_SMALL_MUT_ARR_PTRS_DIRTY_info;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.26301551 UTC

[section ""data" . GHC.PrimopWrappers.sizeofSmallArray#_closure" {
     GHC.PrimopWrappers.sizeofSmallArray#_closure:
         const GHC.PrimopWrappers.sizeofSmallArray#_info;
 },
 GHC.PrimopWrappers.sizeofSmallArray#_entry() //  [R2]
         { info_tbl: [(cA3p,
                       label: GHC.PrimopWrappers.sizeofSmallArray#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cA3p: // global
           R1 = I64[R2 + 8];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.267067809 UTC

[section ""data" . GHC.PrimopWrappers.sizeofSmallMutableArray#_closure" {
     GHC.PrimopWrappers.sizeofSmallMutableArray#_closure:
         const GHC.PrimopWrappers.sizeofSmallMutableArray#_info;
 },
 GHC.PrimopWrappers.sizeofSmallMutableArray#_entry() //  [R2]
         { info_tbl: [(cA3C,
                       label: GHC.PrimopWrappers.sizeofSmallMutableArray#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cA3C: // global
           R1 = I64[R2 + 8];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.270868251 UTC

[section ""data" . GHC.PrimopWrappers.indexSmallArray#_closure" {
     GHC.PrimopWrappers.indexSmallArray#_closure:
         const GHC.PrimopWrappers.indexSmallArray#_info;
 },
 GHC.PrimopWrappers.indexSmallArray#_entry() //  [R2, R3]
         { info_tbl: [(cA3P,
                       label: GHC.PrimopWrappers.indexSmallArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cA3P: // global
           R1 = P64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.274342029 UTC

[section ""data" . GHC.PrimopWrappers.unsafeFreezeSmallArray#_closure" {
     GHC.PrimopWrappers.unsafeFreezeSmallArray#_closure:
         const GHC.PrimopWrappers.unsafeFreezeSmallArray#_info;
 },
 GHC.PrimopWrappers.unsafeFreezeSmallArray#_entry() //  [R2]
         { info_tbl: [(cA42,
                       label: GHC.PrimopWrappers.unsafeFreezeSmallArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cA42: // global
           I64[R2] = stg_SMALL_MUT_ARR_PTRS_FROZEN0_info;
           R1 = R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.277835204 UTC

[section ""data" . GHC.PrimopWrappers.unsafeThawSmallArray#_closure" {
     GHC.PrimopWrappers.unsafeThawSmallArray#_closure:
         const GHC.PrimopWrappers.unsafeThawSmallArray#_info;
 },
 GHC.PrimopWrappers.unsafeThawSmallArray#_entry() //  [R2]
         { info_tbl: [(cA4f,
                       label: GHC.PrimopWrappers.unsafeThawSmallArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cA4f: // global
           R1 = R2;
           call stg_unsafeThawSmallArray#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.281138481 UTC

[section ""data" . GHC.PrimopWrappers.copySmallArray#_closure" {
     GHC.PrimopWrappers.copySmallArray#_closure:
         const GHC.PrimopWrappers.copySmallArray#_info;
 },
 GHC.PrimopWrappers.copySmallArray#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cA4n: // global
           R6 = I64[Sp + 32];
           R5 = I64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 40;
           call GHC.PrimopWrappers.copySmallArray#_entry(R6,
                                                         R5,
                                                         R4,
                                                         R3,
                                                         R2,
                                                         R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.copySmallArray#_entry() //  [R2, R3, R4, R5, R6]
         { info_tbl: [(cA4r,
                       label: GHC.PrimopWrappers.copySmallArray#_info
                       rep:HeapRep static {
                             Fun {arity: 6
                                  fun_type: ArgGen [False, True, False, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cA4r: // global
           _B3::I64 = R5;
           R5 = R6;
           _B4::P64 = R4;
           R4 = _B3::I64;
           _B5::I64 = R3;
           R3 = _B4::P64;
           _B6::P64 = R2;
           R2 = _B5::I64;
           R1 = _B6::P64;
           call stg_copySmallArray#(R5,
                                    R4,
                                    R3,
                                    R2,
                                    R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.285930198 UTC

[section ""data" . GHC.PrimopWrappers.copySmallMutableArray#_closure" {
     GHC.PrimopWrappers.copySmallMutableArray#_closure:
         const GHC.PrimopWrappers.copySmallMutableArray#_info;
 },
 GHC.PrimopWrappers.copySmallMutableArray#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cA4B: // global
           R6 = I64[Sp + 32];
           R5 = I64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 40;
           call GHC.PrimopWrappers.copySmallMutableArray#_entry(R6,
                                                                R5,
                                                                R4,
                                                                R3,
                                                                R2,
                                                                R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.copySmallMutableArray#_entry() //  [R2, R3, R4,
                                                        R5, R6]
         { info_tbl: [(cA4F,
                       label: GHC.PrimopWrappers.copySmallMutableArray#_info
                       rep:HeapRep static {
                             Fun {arity: 6
                                  fun_type: ArgGen [False, True, False, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cA4F: // global
           _B3::I64 = R5;
           R5 = R6;
           _B4::P64 = R4;
           R4 = _B3::I64;
           _B5::I64 = R3;
           R3 = _B4::P64;
           _B6::P64 = R2;
           R2 = _B5::I64;
           R1 = _B6::P64;
           call stg_copySmallMutableArray#(R5,
                                           R4,
                                           R3,
                                           R2,
                                           R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.291536821 UTC

[section ""data" . GHC.PrimopWrappers.cloneSmallArray#_closure" {
     GHC.PrimopWrappers.cloneSmallArray#_closure:
         const GHC.PrimopWrappers.cloneSmallArray#_info;
 },
 GHC.PrimopWrappers.cloneSmallArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cA4S,
                       label: GHC.PrimopWrappers.cloneSmallArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cA4S: // global
           _B2::I64 = R3;
           R3 = R4;
           _B3::P64 = R2;
           R2 = _B2::I64;
           R1 = _B3::P64;
           call stg_cloneSmallArray#(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.294954216 UTC

[section ""data" . GHC.PrimopWrappers.cloneSmallMutableArray#_closure" {
     GHC.PrimopWrappers.cloneSmallMutableArray#_closure:
         const GHC.PrimopWrappers.cloneSmallMutableArray#_info;
 },
 GHC.PrimopWrappers.cloneSmallMutableArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cA53,
                       label: GHC.PrimopWrappers.cloneSmallMutableArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cA53: // global
           _B3::I64 = R3;
           R3 = R4;
           _B4::P64 = R2;
           R2 = _B3::I64;
           R1 = _B4::P64;
           call stg_cloneSmallMutableArray#(R3,
                                            R2,
                                            R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.298428528 UTC

[section ""data" . GHC.PrimopWrappers.freezeSmallArray#_closure" {
     GHC.PrimopWrappers.freezeSmallArray#_closure:
         const GHC.PrimopWrappers.freezeSmallArray#_info;
 },
 GHC.PrimopWrappers.freezeSmallArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cA5e,
                       label: GHC.PrimopWrappers.freezeSmallArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cA5e: // global
           _B3::I64 = R3;
           R3 = R4;
           _B4::P64 = R2;
           R2 = _B3::I64;
           R1 = _B4::P64;
           call stg_freezeSmallArray#(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.301785023 UTC

[section ""data" . GHC.PrimopWrappers.thawSmallArray#_closure" {
     GHC.PrimopWrappers.thawSmallArray#_closure:
         const GHC.PrimopWrappers.thawSmallArray#_info;
 },
 GHC.PrimopWrappers.thawSmallArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cA5p,
                       label: GHC.PrimopWrappers.thawSmallArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cA5p: // global
           _B3::I64 = R3;
           R3 = R4;
           _B4::P64 = R2;
           R2 = _B3::I64;
           R1 = _B4::P64;
           call stg_thawSmallArray#(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.305208338 UTC

[section ""data" . GHC.PrimopWrappers.casSmallArray#_closure" {
     GHC.PrimopWrappers.casSmallArray#_closure:
         const GHC.PrimopWrappers.casSmallArray#_info;
 },
 GHC.PrimopWrappers.casSmallArray#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cA5x: // global
           R5 = P64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 32;
           call GHC.PrimopWrappers.casSmallArray#_entry(R5,
                                                        R4,
                                                        R3,
                                                        R2,
                                                        R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.casSmallArray#_entry() //  [R2, R3, R4, R5]
         { info_tbl: [(cA5B,
                       label: GHC.PrimopWrappers.casSmallArray#_info
                       rep:HeapRep static {
                             Fun {arity: 5 fun_type: ArgGen [False, True, False, False]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cA5B: // global
           _B3::P64 = R4;
           R4 = R5;
           _B4::I64 = R3;
           R3 = _B3::P64;
           _B5::P64 = R2;
           R2 = _B4::I64;
           R1 = _B5::P64;
           call stg_casSmallArray#(R4, R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.310064013 UTC

[section ""data" . GHC.PrimopWrappers.newByteArray#_closure" {
     GHC.PrimopWrappers.newByteArray#_closure:
         const GHC.PrimopWrappers.newByteArray#_info;
 },
 GHC.PrimopWrappers.newByteArray#_entry() //  [R2]
         { info_tbl: [(cA5O,
                       label: GHC.PrimopWrappers.newByteArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cA5O: // global
           R1 = R2;
           call stg_newByteArray#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.313331318 UTC

[section ""data" . GHC.PrimopWrappers.newPinnedByteArray#_closure" {
     GHC.PrimopWrappers.newPinnedByteArray#_closure:
         const GHC.PrimopWrappers.newPinnedByteArray#_info;
 },
 GHC.PrimopWrappers.newPinnedByteArray#_entry() //  [R2]
         { info_tbl: [(cA5Z,
                       label: GHC.PrimopWrappers.newPinnedByteArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cA5Z: // global
           R1 = R2;
           call stg_newPinnedByteArray#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.316584358 UTC

[section ""data" . GHC.PrimopWrappers.newAlignedPinnedByteArray#_closure" {
     GHC.PrimopWrappers.newAlignedPinnedByteArray#_closure:
         const GHC.PrimopWrappers.newAlignedPinnedByteArray#_info;
 },
 GHC.PrimopWrappers.newAlignedPinnedByteArray#_entry() //  [R2, R3]
         { info_tbl: [(cA6a,
                       label: GHC.PrimopWrappers.newAlignedPinnedByteArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cA6a: // global
           _B3::I64 = R2;
           R2 = R3;
           R1 = _B3::I64;
           call stg_newAlignedPinnedByteArray#(R2,
                                               R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.320697995 UTC

[section ""data" . GHC.PrimopWrappers.isMutableByteArrayPinned#_closure" {
     GHC.PrimopWrappers.isMutableByteArrayPinned#_closure:
         const GHC.PrimopWrappers.isMutableByteArrayPinned#_info;
 },
 GHC.PrimopWrappers.isMutableByteArrayPinned#_entry() //  [R2]
         { info_tbl: [(cA6l,
                       label: GHC.PrimopWrappers.isMutableByteArrayPinned#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cA6l: // global
           R1 = R2;
           call stg_isMutableByteArrayPinned#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.324078507 UTC

[section ""data" . GHC.PrimopWrappers.isByteArrayPinned#_closure" {
     GHC.PrimopWrappers.isByteArrayPinned#_closure:
         const GHC.PrimopWrappers.isByteArrayPinned#_info;
 },
 GHC.PrimopWrappers.isByteArrayPinned#_entry() //  [R2]
         { info_tbl: [(cA6w,
                       label: GHC.PrimopWrappers.isByteArrayPinned#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cA6w: // global
           R1 = R2;
           call stg_isByteArrayPinned#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.327318694 UTC

[section ""data" . GHC.PrimopWrappers.byteArrayContents#_closure" {
     GHC.PrimopWrappers.byteArrayContents#_closure:
         const GHC.PrimopWrappers.byteArrayContents#_info;
 },
 GHC.PrimopWrappers.byteArrayContents#_entry() //  [R2]
         { info_tbl: [(cA6I,
                       label: GHC.PrimopWrappers.byteArrayContents#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cA6I: // global
           R1 = R2 + 16;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.330597217 UTC

[section ""data" . GHC.PrimopWrappers.sameMutableByteArray#_closure" {
     GHC.PrimopWrappers.sameMutableByteArray#_closure:
         const GHC.PrimopWrappers.sameMutableByteArray#_info;
 },
 GHC.PrimopWrappers.sameMutableByteArray#_entry() //  [R2, R3]
         { info_tbl: [(cA6V,
                       label: GHC.PrimopWrappers.sameMutableByteArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cA6V: // global
           R1 = R2 == R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.334278797 UTC

[section ""data" . GHC.PrimopWrappers.shrinkMutableByteArray#_closure" {
     GHC.PrimopWrappers.shrinkMutableByteArray#_closure:
         const GHC.PrimopWrappers.shrinkMutableByteArray#_info;
 },
 GHC.PrimopWrappers.shrinkMutableByteArray#_entry() //  [R2, R3]
         { info_tbl: [(cA78,
                       label: GHC.PrimopWrappers.shrinkMutableByteArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cA78: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_shrinkMutableByteArray#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.337524195 UTC

[section ""data" . GHC.PrimopWrappers.resizeMutableByteArray#_closure" {
     GHC.PrimopWrappers.resizeMutableByteArray#_closure:
         const GHC.PrimopWrappers.resizeMutableByteArray#_info;
 },
 GHC.PrimopWrappers.resizeMutableByteArray#_entry() //  [R2, R3]
         { info_tbl: [(cA7j,
                       label: GHC.PrimopWrappers.resizeMutableByteArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cA7j: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_resizeMutableByteArray#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.340851397 UTC

[section ""data" . GHC.PrimopWrappers.unsafeFreezeByteArray#_closure" {
     GHC.PrimopWrappers.unsafeFreezeByteArray#_closure:
         const GHC.PrimopWrappers.unsafeFreezeByteArray#_info;
 },
 GHC.PrimopWrappers.unsafeFreezeByteArray#_entry() //  [R2]
         { info_tbl: [(cA7v,
                       label: GHC.PrimopWrappers.unsafeFreezeByteArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cA7v: // global
           R1 = R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.344180293 UTC

[section ""data" . GHC.PrimopWrappers.sizeofByteArray#_closure" {
     GHC.PrimopWrappers.sizeofByteArray#_closure:
         const GHC.PrimopWrappers.sizeofByteArray#_info;
 },
 GHC.PrimopWrappers.sizeofByteArray#_entry() //  [R2]
         { info_tbl: [(cA7I,
                       label: GHC.PrimopWrappers.sizeofByteArray#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cA7I: // global
           R1 = I64[R2 + 8];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.347574908 UTC

[section ""data" . GHC.PrimopWrappers.sizeofMutableByteArray#_closure" {
     GHC.PrimopWrappers.sizeofMutableByteArray#_closure:
         const GHC.PrimopWrappers.sizeofMutableByteArray#_info;
 },
 GHC.PrimopWrappers.sizeofMutableByteArray#_entry() //  [R2]
         { info_tbl: [(cA7V,
                       label: GHC.PrimopWrappers.sizeofMutableByteArray#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cA7V: // global
           R1 = I64[R2 + 8];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.351548667 UTC

[section ""data" . GHC.PrimopWrappers.getSizeofMutableByteArray#_closure" {
     GHC.PrimopWrappers.getSizeofMutableByteArray#_closure:
         const GHC.PrimopWrappers.getSizeofMutableByteArray#_info;
 },
 GHC.PrimopWrappers.getSizeofMutableByteArray#_entry() //  [R2]
         { info_tbl: [(cA88,
                       label: GHC.PrimopWrappers.getSizeofMutableByteArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cA88: // global
           R1 = I64[R2 + 8];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.355282407 UTC

[section ""data" . GHC.PrimopWrappers.indexCharArray#_closure" {
     GHC.PrimopWrappers.indexCharArray#_closure:
         const GHC.PrimopWrappers.indexCharArray#_info;
 },
 GHC.PrimopWrappers.indexCharArray#_entry() //  [R2, R3]
         { info_tbl: [(cA8l,
                       label: GHC.PrimopWrappers.indexCharArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cA8l: // global
           R1 = %MO_UU_Conv_W8_W64(I8[(R2 + 16) + R3]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.358559411 UTC

[section ""data" . GHC.PrimopWrappers.indexWideCharArray#_closure" {
     GHC.PrimopWrappers.indexWideCharArray#_closure:
         const GHC.PrimopWrappers.indexWideCharArray#_info;
 },
 GHC.PrimopWrappers.indexWideCharArray#_entry() //  [R2, R3]
         { info_tbl: [(cA8z,
                       label: GHC.PrimopWrappers.indexWideCharArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cA8z: // global
           R1 = %MO_UU_Conv_W32_W64(I32[(R2 + 16) + (R3 << 2)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.361969608 UTC

[section ""data" . GHC.PrimopWrappers.indexIntArray#_closure" {
     GHC.PrimopWrappers.indexIntArray#_closure:
         const GHC.PrimopWrappers.indexIntArray#_info;
 },
 GHC.PrimopWrappers.indexIntArray#_entry() //  [R2, R3]
         { info_tbl: [(cA8M,
                       label: GHC.PrimopWrappers.indexIntArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cA8M: // global
           R1 = I64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.365342458 UTC

[section ""data" . GHC.PrimopWrappers.indexWordArray#_closure" {
     GHC.PrimopWrappers.indexWordArray#_closure:
         const GHC.PrimopWrappers.indexWordArray#_info;
 },
 GHC.PrimopWrappers.indexWordArray#_entry() //  [R2, R3]
         { info_tbl: [(cA8Z,
                       label: GHC.PrimopWrappers.indexWordArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cA8Z: // global
           R1 = I64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.368721839 UTC

[section ""data" . GHC.PrimopWrappers.indexAddrArray#_closure" {
     GHC.PrimopWrappers.indexAddrArray#_closure:
         const GHC.PrimopWrappers.indexAddrArray#_info;
 },
 GHC.PrimopWrappers.indexAddrArray#_entry() //  [R2, R3]
         { info_tbl: [(cA9c,
                       label: GHC.PrimopWrappers.indexAddrArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cA9c: // global
           R1 = I64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.372152199 UTC

[section ""data" . GHC.PrimopWrappers.indexFloatArray#_closure" {
     GHC.PrimopWrappers.indexFloatArray#_closure:
         const GHC.PrimopWrappers.indexFloatArray#_info;
 },
 GHC.PrimopWrappers.indexFloatArray#_entry() //  [R2, R3]
         { info_tbl: [(cA9p,
                       label: GHC.PrimopWrappers.indexFloatArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cA9p: // global
           F1 = F32[(R2 + 16) + (R3 << 2)];
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.375448147 UTC

[section ""data" . GHC.PrimopWrappers.indexDoubleArray#_closure" {
     GHC.PrimopWrappers.indexDoubleArray#_closure:
         const GHC.PrimopWrappers.indexDoubleArray#_info;
 },
 GHC.PrimopWrappers.indexDoubleArray#_entry() //  [R2, R3]
         { info_tbl: [(cA9C,
                       label: GHC.PrimopWrappers.indexDoubleArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cA9C: // global
           D1 = F64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.379376277 UTC

[section ""data" . GHC.PrimopWrappers.indexStablePtrArray#_closure" {
     GHC.PrimopWrappers.indexStablePtrArray#_closure:
         const GHC.PrimopWrappers.indexStablePtrArray#_info;
 },
 GHC.PrimopWrappers.indexStablePtrArray#_entry() //  [R2, R3]
         { info_tbl: [(cA9P,
                       label: GHC.PrimopWrappers.indexStablePtrArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cA9P: // global
           R1 = I64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.38317045 UTC

[section ""data" . GHC.PrimopWrappers.indexInt8Array#_closure" {
     GHC.PrimopWrappers.indexInt8Array#_closure:
         const GHC.PrimopWrappers.indexInt8Array#_info;
 },
 GHC.PrimopWrappers.indexInt8Array#_entry() //  [R2, R3]
         { info_tbl: [(cAa2,
                       label: GHC.PrimopWrappers.indexInt8Array#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAa2: // global
           R1 = %MO_SS_Conv_W8_W64(I8[(R2 + 16) + R3]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.386690797 UTC

[section ""data" . GHC.PrimopWrappers.indexInt16Array#_closure" {
     GHC.PrimopWrappers.indexInt16Array#_closure:
         const GHC.PrimopWrappers.indexInt16Array#_info;
 },
 GHC.PrimopWrappers.indexInt16Array#_entry() //  [R2, R3]
         { info_tbl: [(cAag,
                       label: GHC.PrimopWrappers.indexInt16Array#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAag: // global
           R1 = %MO_SS_Conv_W16_W64(I16[(R2 + 16) + (R3 << 1)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.390043884 UTC

[section ""data" . GHC.PrimopWrappers.indexInt32Array#_closure" {
     GHC.PrimopWrappers.indexInt32Array#_closure:
         const GHC.PrimopWrappers.indexInt32Array#_info;
 },
 GHC.PrimopWrappers.indexInt32Array#_entry() //  [R2, R3]
         { info_tbl: [(cAat,
                       label: GHC.PrimopWrappers.indexInt32Array#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAat: // global
           R1 = %MO_SS_Conv_W32_W64(I32[(R2 + 16) + (R3 << 2)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.39382779 UTC

[section ""data" . GHC.PrimopWrappers.indexInt64Array#_closure" {
     GHC.PrimopWrappers.indexInt64Array#_closure:
         const GHC.PrimopWrappers.indexInt64Array#_info;
 },
 GHC.PrimopWrappers.indexInt64Array#_entry() //  [R2, R3]
         { info_tbl: [(cAaG,
                       label: GHC.PrimopWrappers.indexInt64Array#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAaG: // global
           R1 = I64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.397304608 UTC

[section ""data" . GHC.PrimopWrappers.indexWord8Array#_closure" {
     GHC.PrimopWrappers.indexWord8Array#_closure:
         const GHC.PrimopWrappers.indexWord8Array#_info;
 },
 GHC.PrimopWrappers.indexWord8Array#_entry() //  [R2, R3]
         { info_tbl: [(cAaT,
                       label: GHC.PrimopWrappers.indexWord8Array#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAaT: // global
           R1 = %MO_UU_Conv_W8_W64(I8[(R2 + 16) + R3]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.400712902 UTC

[section ""data" . GHC.PrimopWrappers.indexWord16Array#_closure" {
     GHC.PrimopWrappers.indexWord16Array#_closure:
         const GHC.PrimopWrappers.indexWord16Array#_info;
 },
 GHC.PrimopWrappers.indexWord16Array#_entry() //  [R2, R3]
         { info_tbl: [(cAb7,
                       label: GHC.PrimopWrappers.indexWord16Array#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAb7: // global
           R1 = %MO_UU_Conv_W16_W64(I16[(R2 + 16) + (R3 << 1)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.404077032 UTC

[section ""data" . GHC.PrimopWrappers.indexWord32Array#_closure" {
     GHC.PrimopWrappers.indexWord32Array#_closure:
         const GHC.PrimopWrappers.indexWord32Array#_info;
 },
 GHC.PrimopWrappers.indexWord32Array#_entry() //  [R2, R3]
         { info_tbl: [(cAbk,
                       label: GHC.PrimopWrappers.indexWord32Array#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAbk: // global
           R1 = %MO_UU_Conv_W32_W64(I32[(R2 + 16) + (R3 << 2)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.408112269 UTC

[section ""data" . GHC.PrimopWrappers.indexWord64Array#_closure" {
     GHC.PrimopWrappers.indexWord64Array#_closure:
         const GHC.PrimopWrappers.indexWord64Array#_info;
 },
 GHC.PrimopWrappers.indexWord64Array#_entry() //  [R2, R3]
         { info_tbl: [(cAbx,
                       label: GHC.PrimopWrappers.indexWord64Array#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAbx: // global
           R1 = I64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.412363507 UTC

[section ""data" . GHC.PrimopWrappers.readCharArray#_closure" {
     GHC.PrimopWrappers.readCharArray#_closure:
         const GHC.PrimopWrappers.readCharArray#_info;
 },
 GHC.PrimopWrappers.readCharArray#_entry() //  [R2, R3]
         { info_tbl: [(cAbK,
                       label: GHC.PrimopWrappers.readCharArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAbK: // global
           R1 = %MO_UU_Conv_W8_W64(I8[(R2 + 16) + R3]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.416327312 UTC

[section ""data" . GHC.PrimopWrappers.readWideCharArray#_closure" {
     GHC.PrimopWrappers.readWideCharArray#_closure:
         const GHC.PrimopWrappers.readWideCharArray#_info;
 },
 GHC.PrimopWrappers.readWideCharArray#_entry() //  [R2, R3]
         { info_tbl: [(cAbY,
                       label: GHC.PrimopWrappers.readWideCharArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAbY: // global
           R1 = %MO_UU_Conv_W32_W64(I32[(R2 + 16) + (R3 << 2)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.41977602 UTC

[section ""data" . GHC.PrimopWrappers.readIntArray#_closure" {
     GHC.PrimopWrappers.readIntArray#_closure:
         const GHC.PrimopWrappers.readIntArray#_info;
 },
 GHC.PrimopWrappers.readIntArray#_entry() //  [R2, R3]
         { info_tbl: [(cAcb,
                       label: GHC.PrimopWrappers.readIntArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAcb: // global
           R1 = I64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.423245005 UTC

[section ""data" . GHC.PrimopWrappers.readWordArray#_closure" {
     GHC.PrimopWrappers.readWordArray#_closure:
         const GHC.PrimopWrappers.readWordArray#_info;
 },
 GHC.PrimopWrappers.readWordArray#_entry() //  [R2, R3]
         { info_tbl: [(cAco,
                       label: GHC.PrimopWrappers.readWordArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAco: // global
           R1 = I64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.426771862 UTC

[section ""data" . GHC.PrimopWrappers.readAddrArray#_closure" {
     GHC.PrimopWrappers.readAddrArray#_closure:
         const GHC.PrimopWrappers.readAddrArray#_info;
 },
 GHC.PrimopWrappers.readAddrArray#_entry() //  [R2, R3]
         { info_tbl: [(cAcB,
                       label: GHC.PrimopWrappers.readAddrArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAcB: // global
           R1 = I64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.430174384 UTC

[section ""data" . GHC.PrimopWrappers.readFloatArray#_closure" {
     GHC.PrimopWrappers.readFloatArray#_closure:
         const GHC.PrimopWrappers.readFloatArray#_info;
 },
 GHC.PrimopWrappers.readFloatArray#_entry() //  [R2, R3]
         { info_tbl: [(cAcO,
                       label: GHC.PrimopWrappers.readFloatArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAcO: // global
           F1 = F32[(R2 + 16) + (R3 << 2)];
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.433505282 UTC

[section ""data" . GHC.PrimopWrappers.readDoubleArray#_closure" {
     GHC.PrimopWrappers.readDoubleArray#_closure:
         const GHC.PrimopWrappers.readDoubleArray#_info;
 },
 GHC.PrimopWrappers.readDoubleArray#_entry() //  [R2, R3]
         { info_tbl: [(cAd1,
                       label: GHC.PrimopWrappers.readDoubleArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAd1: // global
           D1 = F64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.436782794 UTC

[section ""data" . GHC.PrimopWrappers.readStablePtrArray#_closure" {
     GHC.PrimopWrappers.readStablePtrArray#_closure:
         const GHC.PrimopWrappers.readStablePtrArray#_info;
 },
 GHC.PrimopWrappers.readStablePtrArray#_entry() //  [R2, R3]
         { info_tbl: [(cAde,
                       label: GHC.PrimopWrappers.readStablePtrArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAde: // global
           R1 = I64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.440837183 UTC

[section ""data" . GHC.PrimopWrappers.readInt8Array#_closure" {
     GHC.PrimopWrappers.readInt8Array#_closure:
         const GHC.PrimopWrappers.readInt8Array#_info;
 },
 GHC.PrimopWrappers.readInt8Array#_entry() //  [R2, R3]
         { info_tbl: [(cAdr,
                       label: GHC.PrimopWrappers.readInt8Array#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAdr: // global
           R1 = %MO_SS_Conv_W8_W64(I8[(R2 + 16) + R3]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.444361316 UTC

[section ""data" . GHC.PrimopWrappers.readInt16Array#_closure" {
     GHC.PrimopWrappers.readInt16Array#_closure:
         const GHC.PrimopWrappers.readInt16Array#_info;
 },
 GHC.PrimopWrappers.readInt16Array#_entry() //  [R2, R3]
         { info_tbl: [(cAdF,
                       label: GHC.PrimopWrappers.readInt16Array#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAdF: // global
           R1 = %MO_SS_Conv_W16_W64(I16[(R2 + 16) + (R3 << 1)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.447856522 UTC

[section ""data" . GHC.PrimopWrappers.readInt32Array#_closure" {
     GHC.PrimopWrappers.readInt32Array#_closure:
         const GHC.PrimopWrappers.readInt32Array#_info;
 },
 GHC.PrimopWrappers.readInt32Array#_entry() //  [R2, R3]
         { info_tbl: [(cAdS,
                       label: GHC.PrimopWrappers.readInt32Array#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAdS: // global
           R1 = %MO_SS_Conv_W32_W64(I32[(R2 + 16) + (R3 << 2)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.451268312 UTC

[section ""data" . GHC.PrimopWrappers.readInt64Array#_closure" {
     GHC.PrimopWrappers.readInt64Array#_closure:
         const GHC.PrimopWrappers.readInt64Array#_info;
 },
 GHC.PrimopWrappers.readInt64Array#_entry() //  [R2, R3]
         { info_tbl: [(cAe5,
                       label: GHC.PrimopWrappers.readInt64Array#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAe5: // global
           R1 = I64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.454634835 UTC

[section ""data" . GHC.PrimopWrappers.readWord8Array#_closure" {
     GHC.PrimopWrappers.readWord8Array#_closure:
         const GHC.PrimopWrappers.readWord8Array#_info;
 },
 GHC.PrimopWrappers.readWord8Array#_entry() //  [R2, R3]
         { info_tbl: [(cAei,
                       label: GHC.PrimopWrappers.readWord8Array#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAei: // global
           R1 = %MO_UU_Conv_W8_W64(I8[(R2 + 16) + R3]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.458057475 UTC

[section ""data" . GHC.PrimopWrappers.readWord16Array#_closure" {
     GHC.PrimopWrappers.readWord16Array#_closure:
         const GHC.PrimopWrappers.readWord16Array#_info;
 },
 GHC.PrimopWrappers.readWord16Array#_entry() //  [R2, R3]
         { info_tbl: [(cAew,
                       label: GHC.PrimopWrappers.readWord16Array#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAew: // global
           R1 = %MO_UU_Conv_W16_W64(I16[(R2 + 16) + (R3 << 1)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.462002567 UTC

[section ""data" . GHC.PrimopWrappers.readWord32Array#_closure" {
     GHC.PrimopWrappers.readWord32Array#_closure:
         const GHC.PrimopWrappers.readWord32Array#_info;
 },
 GHC.PrimopWrappers.readWord32Array#_entry() //  [R2, R3]
         { info_tbl: [(cAeJ,
                       label: GHC.PrimopWrappers.readWord32Array#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAeJ: // global
           R1 = %MO_UU_Conv_W32_W64(I32[(R2 + 16) + (R3 << 2)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.465473821 UTC

[section ""data" . GHC.PrimopWrappers.readWord64Array#_closure" {
     GHC.PrimopWrappers.readWord64Array#_closure:
         const GHC.PrimopWrappers.readWord64Array#_info;
 },
 GHC.PrimopWrappers.readWord64Array#_entry() //  [R2, R3]
         { info_tbl: [(cAeW,
                       label: GHC.PrimopWrappers.readWord64Array#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAeW: // global
           R1 = I64[(R2 + 16) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.468808817 UTC

[section ""data" . GHC.PrimopWrappers.writeCharArray#_closure" {
     GHC.PrimopWrappers.writeCharArray#_closure:
         const GHC.PrimopWrappers.writeCharArray#_info;
 },
 GHC.PrimopWrappers.writeCharArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cAf8,
                       label: GHC.PrimopWrappers.writeCharArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAf8: // global
           I8[(R2 + 16) + R3] = %MO_UU_Conv_W64_W8(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.472980519 UTC

[section ""data" . GHC.PrimopWrappers.writeWideCharArray#_closure" {
     GHC.PrimopWrappers.writeWideCharArray#_closure:
         const GHC.PrimopWrappers.writeWideCharArray#_info;
 },
 GHC.PrimopWrappers.writeWideCharArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cAfm,
                       label: GHC.PrimopWrappers.writeWideCharArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAfm: // global
           I32[(R2 + 16) + (R3 << 2)] = %MO_UU_Conv_W64_W32(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.477028349 UTC

[section ""data" . GHC.PrimopWrappers.writeIntArray#_closure" {
     GHC.PrimopWrappers.writeIntArray#_closure:
         const GHC.PrimopWrappers.writeIntArray#_info;
 },
 GHC.PrimopWrappers.writeIntArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cAfy,
                       label: GHC.PrimopWrappers.writeIntArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAfy: // global
           I64[(R2 + 16) + (R3 << 3)] = R4;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.480446203 UTC

[section ""data" . GHC.PrimopWrappers.writeWordArray#_closure" {
     GHC.PrimopWrappers.writeWordArray#_closure:
         const GHC.PrimopWrappers.writeWordArray#_info;
 },
 GHC.PrimopWrappers.writeWordArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cAfK,
                       label: GHC.PrimopWrappers.writeWordArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAfK: // global
           I64[(R2 + 16) + (R3 << 3)] = R4;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.483957253 UTC

[section ""data" . GHC.PrimopWrappers.writeAddrArray#_closure" {
     GHC.PrimopWrappers.writeAddrArray#_closure:
         const GHC.PrimopWrappers.writeAddrArray#_info;
 },
 GHC.PrimopWrappers.writeAddrArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cAfW,
                       label: GHC.PrimopWrappers.writeAddrArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAfW: // global
           I64[(R2 + 16) + (R3 << 3)] = R4;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.487589546 UTC

[section ""data" . GHC.PrimopWrappers.writeFloatArray#_closure" {
     GHC.PrimopWrappers.writeFloatArray#_closure:
         const GHC.PrimopWrappers.writeFloatArray#_info;
 },
 GHC.PrimopWrappers.writeFloatArray#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAg5: // global
           F1 = F32[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 24;
           call GHC.PrimopWrappers.writeFloatArray#_entry(F1,
                                                          R3,
                                                          R2,
                                                          R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.writeFloatArray#_entry() //  [R2, R3, F1]
         { info_tbl: [(cAg9,
                       label: GHC.PrimopWrappers.writeFloatArray#_info
                       rep:HeapRep static {
                             Fun {arity: 4 fun_type: ArgGen [False, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAg9: // global
           F32[(R2 + 16) + (R3 << 2)] = F1;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.492994376 UTC

[section ""data" . GHC.PrimopWrappers.writeDoubleArray#_closure" {
     GHC.PrimopWrappers.writeDoubleArray#_closure:
         const GHC.PrimopWrappers.writeDoubleArray#_info;
 },
 GHC.PrimopWrappers.writeDoubleArray#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAgk: // global
           D1 = F64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 24;
           call GHC.PrimopWrappers.writeDoubleArray#_entry(D1,
                                                           R3,
                                                           R2,
                                                           R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.writeDoubleArray#_entry() //  [R2, R3, D1]
         { info_tbl: [(cAgo,
                       label: GHC.PrimopWrappers.writeDoubleArray#_info
                       rep:HeapRep static {
                             Fun {arity: 4 fun_type: ArgGen [False, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAgo: // global
           F64[(R2 + 16) + (R3 << 3)] = D1;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.497868233 UTC

[section ""data" . GHC.PrimopWrappers.writeStablePtrArray#_closure" {
     GHC.PrimopWrappers.writeStablePtrArray#_closure:
         const GHC.PrimopWrappers.writeStablePtrArray#_info;
 },
 GHC.PrimopWrappers.writeStablePtrArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cAgC,
                       label: GHC.PrimopWrappers.writeStablePtrArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAgC: // global
           I64[(R2 + 16) + (R3 << 3)] = R4;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.501325864 UTC

[section ""data" . GHC.PrimopWrappers.writeInt8Array#_closure" {
     GHC.PrimopWrappers.writeInt8Array#_closure:
         const GHC.PrimopWrappers.writeInt8Array#_info;
 },
 GHC.PrimopWrappers.writeInt8Array#_entry() //  [R2, R3, R4]
         { info_tbl: [(cAgO,
                       label: GHC.PrimopWrappers.writeInt8Array#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAgO: // global
           I8[(R2 + 16) + R3] = %MO_UU_Conv_W64_W8(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.505460943 UTC

[section ""data" . GHC.PrimopWrappers.writeInt16Array#_closure" {
     GHC.PrimopWrappers.writeInt16Array#_closure:
         const GHC.PrimopWrappers.writeInt16Array#_info;
 },
 GHC.PrimopWrappers.writeInt16Array#_entry() //  [R2, R3, R4]
         { info_tbl: [(cAh2,
                       label: GHC.PrimopWrappers.writeInt16Array#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAh2: // global
           I16[(R2 + 16) + (R3 << 1)] = %MO_UU_Conv_W64_W16(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.508957394 UTC

[section ""data" . GHC.PrimopWrappers.writeInt32Array#_closure" {
     GHC.PrimopWrappers.writeInt32Array#_closure:
         const GHC.PrimopWrappers.writeInt32Array#_info;
 },
 GHC.PrimopWrappers.writeInt32Array#_entry() //  [R2, R3, R4]
         { info_tbl: [(cAhf,
                       label: GHC.PrimopWrappers.writeInt32Array#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAhf: // global
           I32[(R2 + 16) + (R3 << 2)] = %MO_UU_Conv_W64_W32(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.512505442 UTC

[section ""data" . GHC.PrimopWrappers.writeInt64Array#_closure" {
     GHC.PrimopWrappers.writeInt64Array#_closure:
         const GHC.PrimopWrappers.writeInt64Array#_info;
 },
 GHC.PrimopWrappers.writeInt64Array#_entry() //  [R2, R3, R4]
         { info_tbl: [(cAhr,
                       label: GHC.PrimopWrappers.writeInt64Array#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAhr: // global
           I64[(R2 + 16) + (R3 << 3)] = R4;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.516262572 UTC

[section ""data" . GHC.PrimopWrappers.writeWord8Array#_closure" {
     GHC.PrimopWrappers.writeWord8Array#_closure:
         const GHC.PrimopWrappers.writeWord8Array#_info;
 },
 GHC.PrimopWrappers.writeWord8Array#_entry() //  [R2, R3, R4]
         { info_tbl: [(cAhD,
                       label: GHC.PrimopWrappers.writeWord8Array#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAhD: // global
           I8[(R2 + 16) + R3] = %MO_UU_Conv_W64_W8(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.519759042 UTC

[section ""data" . GHC.PrimopWrappers.writeWord16Array#_closure" {
     GHC.PrimopWrappers.writeWord16Array#_closure:
         const GHC.PrimopWrappers.writeWord16Array#_info;
 },
 GHC.PrimopWrappers.writeWord16Array#_entry() //  [R2, R3, R4]
         { info_tbl: [(cAhR,
                       label: GHC.PrimopWrappers.writeWord16Array#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAhR: // global
           I16[(R2 + 16) + (R3 << 1)] = %MO_UU_Conv_W64_W16(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.523246431 UTC

[section ""data" . GHC.PrimopWrappers.writeWord32Array#_closure" {
     GHC.PrimopWrappers.writeWord32Array#_closure:
         const GHC.PrimopWrappers.writeWord32Array#_info;
 },
 GHC.PrimopWrappers.writeWord32Array#_entry() //  [R2, R3, R4]
         { info_tbl: [(cAi4,
                       label: GHC.PrimopWrappers.writeWord32Array#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAi4: // global
           I32[(R2 + 16) + (R3 << 2)] = %MO_UU_Conv_W64_W32(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.526895365 UTC

[section ""data" . GHC.PrimopWrappers.writeWord64Array#_closure" {
     GHC.PrimopWrappers.writeWord64Array#_closure:
         const GHC.PrimopWrappers.writeWord64Array#_info;
 },
 GHC.PrimopWrappers.writeWord64Array#_entry() //  [R2, R3, R4]
         { info_tbl: [(cAig,
                       label: GHC.PrimopWrappers.writeWord64Array#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAig: // global
           I64[(R2 + 16) + (R3 << 3)] = R4;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.530607606 UTC

[section ""data" . GHC.PrimopWrappers.compareByteArrays#_closure" {
     GHC.PrimopWrappers.compareByteArrays#_closure:
         const GHC.PrimopWrappers.compareByteArrays#_info;
 },
 GHC.PrimopWrappers.compareByteArrays#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAip: // global
           R6 = I64[Sp + 32];
           R5 = I64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 40;
           call GHC.PrimopWrappers.compareByteArrays#_entry(R6,
                                                            R5,
                                                            R4,
                                                            R3,
                                                            R2,
                                                            R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.compareByteArrays#_entry() //  [R2, R3, R4, R5,
                                                    R6]
         { info_tbl: [(cAiC,
                       label: GHC.PrimopWrappers.compareByteArrays#_info
                       rep:HeapRep static {
                             Fun {arity: 5
                                  fun_type: ArgGen [False, True, False, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAiC: // global
           _cAiu::P64 = (R2 + 16) + R3;
           _cAiv::P64 = (R4 + 16) + R5;
           _cAit::I64 = 0;
           if (_cAiu::P64 == _cAiv::P64) (likely: False) goto cAiw; else goto cAix;
       cAix: // global
           _cAiB::I64 = R6;
           (_cAiy::I32) = call MO_Memcmp 1(_cAiu::P64, _cAiv::P64, _cAiB::I64);
           _cAit::I64 = %MO_SS_Conv_W32_W64(_cAiy::I32);
           goto cAiw;
       cAiw: // global
           R1 = _cAit::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.536402134 UTC

[section ""data" . GHC.PrimopWrappers.copyByteArray#_closure" {
     GHC.PrimopWrappers.copyByteArray#_closure:
         const GHC.PrimopWrappers.copyByteArray#_info;
 },
 GHC.PrimopWrappers.copyByteArray#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAiS: // global
           R6 = I64[Sp + 32];
           R5 = I64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 40;
           call GHC.PrimopWrappers.copyByteArray#_entry(R6,
                                                        R5,
                                                        R4,
                                                        R3,
                                                        R2,
                                                        R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.copyByteArray#_entry() //  [R2, R3, R4, R5, R6]
         { info_tbl: [(cAj1,
                       label: GHC.PrimopWrappers.copyByteArray#_info
                       rep:HeapRep static {
                             Fun {arity: 6
                                  fun_type: ArgGen [False, True, False, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAj1: // global
           _cAiY::P64 = (R4 + 16) + R5;
           _cAiZ::P64 = (R2 + 16) + R3;
           _cAj0::I64 = R6;
           call MO_Memcpy 1(_cAiY::P64, _cAiZ::P64, _cAj0::I64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.541939415 UTC

[section ""data" . GHC.PrimopWrappers.copyMutableByteArray#_closure" {
     GHC.PrimopWrappers.copyMutableByteArray#_closure:
         const GHC.PrimopWrappers.copyMutableByteArray#_info;
 },
 GHC.PrimopWrappers.copyMutableByteArray#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAjg: // global
           R6 = I64[Sp + 32];
           R5 = I64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 40;
           call GHC.PrimopWrappers.copyMutableByteArray#_entry(R6,
                                                               R5,
                                                               R4,
                                                               R3,
                                                               R2,
                                                               R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.copyMutableByteArray#_entry() //  [R2, R3, R4,
                                                       R5, R6]
         { info_tbl: [(cAjq,
                       label: GHC.PrimopWrappers.copyMutableByteArray#_info
                       rep:HeapRep static {
                             Fun {arity: 6
                                  fun_type: ArgGen [False, True, False, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAjq: // global
           _cAjk::P64 = (R4 + 16) + R5;
           _cAjl::P64 = (R2 + 16) + R3;
           if (R2 == R4) goto cAjo; else goto cAjp;
       cAjo: // global
           _cAjy::I64 = R6;
           call MO_Memmove 1(_cAjk::P64, _cAjl::P64, _cAjy::I64);
           goto cAjn;
       cAjp: // global
           _cAjA::I64 = R6;
           call MO_Memcpy 1(_cAjk::P64, _cAjl::P64, _cAjA::I64);
           goto cAjn;
       cAjn: // global
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.54701896 UTC

[section ""data" . GHC.PrimopWrappers.copyByteArrayToAddr#_closure" {
     GHC.PrimopWrappers.copyByteArrayToAddr#_closure:
         const GHC.PrimopWrappers.copyByteArrayToAddr#_info;
 },
 GHC.PrimopWrappers.copyByteArrayToAddr#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAjP: // global
           R5 = I64[Sp + 24];
           R4 = I64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 32;
           call GHC.PrimopWrappers.copyByteArrayToAddr#_entry(R5,
                                                              R4,
                                                              R3,
                                                              R2,
                                                              R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.copyByteArrayToAddr#_entry() //  [R2, R3, R4,
                                                      R5]
         { info_tbl: [(cAjX,
                       label: GHC.PrimopWrappers.copyByteArrayToAddr#_info
                       rep:HeapRep static {
                             Fun {arity: 5 fun_type: ArgGen [False, True, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAjX: // global
           _cAjU::I64 = R4;
           _cAjV::P64 = (R2 + 16) + R3;
           _cAjW::I64 = R5;
           call MO_Memcpy 1(_cAjU::I64, _cAjV::P64, _cAjW::I64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.551837239 UTC

[section ""data" . GHC.PrimopWrappers.copyMutableByteArrayToAddr#_closure" {
     GHC.PrimopWrappers.copyMutableByteArrayToAddr#_closure:
         const GHC.PrimopWrappers.copyMutableByteArrayToAddr#_info;
 },
 GHC.PrimopWrappers.copyMutableByteArrayToAddr#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAkb: // global
           R5 = I64[Sp + 24];
           R4 = I64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 32;
           call GHC.PrimopWrappers.copyMutableByteArrayToAddr#_entry(R5,
                                                                     R4,
                                                                     R3,
                                                                     R2,
                                                                     R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.copyMutableByteArrayToAddr#_entry() //  [R2, R3,
                                                             R4, R5]
         { info_tbl: [(cAkj,
                       label: GHC.PrimopWrappers.copyMutableByteArrayToAddr#_info
                       rep:HeapRep static {
                             Fun {arity: 5 fun_type: ArgGen [False, True, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAkj: // global
           _cAkg::I64 = R4;
           _cAkh::P64 = (R2 + 16) + R3;
           _cAki::I64 = R5;
           call MO_Memcpy 1(_cAkg::I64, _cAkh::P64, _cAki::I64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.55708611 UTC

[section ""data" . GHC.PrimopWrappers.copyAddrToByteArray#_closure" {
     GHC.PrimopWrappers.copyAddrToByteArray#_closure:
         const GHC.PrimopWrappers.copyAddrToByteArray#_info;
 },
 GHC.PrimopWrappers.copyAddrToByteArray#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAkx: // global
           R5 = I64[Sp + 24];
           R4 = I64[Sp + 16];
           R3 = P64[Sp + 8];
           R2 = I64[Sp];
           R1 = R1;
           Sp = Sp + 32;
           call GHC.PrimopWrappers.copyAddrToByteArray#_entry(R5,
                                                              R4,
                                                              R3,
                                                              R2,
                                                              R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.copyAddrToByteArray#_entry() //  [R2, R3, R4,
                                                      R5]
         { info_tbl: [(cAkF,
                       label: GHC.PrimopWrappers.copyAddrToByteArray#_info
                       rep:HeapRep static {
                             Fun {arity: 5 fun_type: ArgGen [True, False, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAkF: // global
           _cAkC::P64 = (R3 + 16) + R4;
           _cAkE::I64 = R5;
           call MO_Memcpy 1(_cAkC::P64, R2, _cAkE::I64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.562193153 UTC

[section ""data" . GHC.PrimopWrappers.setByteArray#_closure" {
     GHC.PrimopWrappers.setByteArray#_closure:
         const GHC.PrimopWrappers.setByteArray#_info;
 },
 GHC.PrimopWrappers.setByteArray#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAkT: // global
           R5 = I64[Sp + 24];
           R4 = I64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 32;
           call GHC.PrimopWrappers.setByteArray#_entry(R5,
                                                       R4,
                                                       R3,
                                                       R2,
                                                       R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.setByteArray#_entry() //  [R2, R3, R4, R5]
         { info_tbl: [(cAl1,
                       label: GHC.PrimopWrappers.setByteArray#_info
                       rep:HeapRep static {
                             Fun {arity: 5 fun_type: ArgGen [False, True, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAl1: // global
           _cAkY::P64 = (R2 + 16) + R3;
           _cAkZ::I64 = R5;
           _cAl0::I64 = R4;
           call MO_Memset 1(_cAkY::P64, _cAkZ::I64, _cAl0::I64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.566886776 UTC

[section ""data" . GHC.PrimopWrappers.atomicReadIntArray#_closure" {
     GHC.PrimopWrappers.atomicReadIntArray#_closure:
         const GHC.PrimopWrappers.atomicReadIntArray#_info;
 },
 GHC.PrimopWrappers.atomicReadIntArray#_entry() //  [R2, R3]
         { info_tbl: [(cAlk,
                       label: GHC.PrimopWrappers.atomicReadIntArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAlk: // global
           _cAlj::P64 = (R2 + 16) + (R3 << 3);
           (_cAli::I64) = call MO_AtomicRead W64(_cAlj::P64);
           R1 = _cAli::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.57055031 UTC

[section ""data" . GHC.PrimopWrappers.atomicWriteIntArray#_closure" {
     GHC.PrimopWrappers.atomicWriteIntArray#_closure:
         const GHC.PrimopWrappers.atomicWriteIntArray#_info;
 },
 GHC.PrimopWrappers.atomicWriteIntArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cAlA,
                       label: GHC.PrimopWrappers.atomicWriteIntArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAlA: // global
           _cAly::P64 = (R2 + 16) + (R3 << 3);
           _cAlz::I64 = R4;
           call MO_AtomicWrite W64(_cAly::P64, _cAlz::I64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.574833169 UTC

[section ""data" . GHC.PrimopWrappers.casIntArray#_closure" {
     GHC.PrimopWrappers.casIntArray#_closure:
         const GHC.PrimopWrappers.casIntArray#_info;
 },
 GHC.PrimopWrappers.casIntArray#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAlL: // global
           R5 = I64[Sp + 24];
           R4 = I64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 32;
           call GHC.PrimopWrappers.casIntArray#_entry(R5,
                                                      R4,
                                                      R3,
                                                      R2,
                                                      R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.casIntArray#_entry() //  [R2, R3, R4, R5]
         { info_tbl: [(cAlT,
                       label: GHC.PrimopWrappers.casIntArray#_info
                       rep:HeapRep static {
                             Fun {arity: 5 fun_type: ArgGen [False, True, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAlT: // global
           _cAlQ::P64 = (R2 + 16) + (R3 << 3);
           _cAlR::I64 = R4;
           _cAlS::I64 = R5;
           (_cAlP::I64) = call MO_Cmpxchg W64(_cAlQ::P64, _cAlR::I64, _cAlS::I64);
           R1 = _cAlP::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.579543356 UTC

[section ""data" . GHC.PrimopWrappers.fetchAddIntArray#_closure" {
     GHC.PrimopWrappers.fetchAddIntArray#_closure:
         const GHC.PrimopWrappers.fetchAddIntArray#_info;
 },
 GHC.PrimopWrappers.fetchAddIntArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cAme,
                       label: GHC.PrimopWrappers.fetchAddIntArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAme: // global
           _cAmc::P64 = (R2 + 16) + (R3 << 3);
           _cAmd::I64 = R4;
           (_cAmb::I64) = call MO_AtomicRMW W64 AMO_Add(_cAmc::P64, _cAmd::I64);
           R1 = _cAmb::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.583225995 UTC

[section ""data" . GHC.PrimopWrappers.fetchSubIntArray#_closure" {
     GHC.PrimopWrappers.fetchSubIntArray#_closure:
         const GHC.PrimopWrappers.fetchSubIntArray#_info;
 },
 GHC.PrimopWrappers.fetchSubIntArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cAmw,
                       label: GHC.PrimopWrappers.fetchSubIntArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAmw: // global
           _cAmu::P64 = (R2 + 16) + (R3 << 3);
           _cAmv::I64 = R4;
           (_cAmt::I64) = call MO_AtomicRMW W64 AMO_Sub(_cAmu::P64, _cAmv::I64);
           R1 = _cAmt::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.587158156 UTC

[section ""data" . GHC.PrimopWrappers.fetchAndIntArray#_closure" {
     GHC.PrimopWrappers.fetchAndIntArray#_closure:
         const GHC.PrimopWrappers.fetchAndIntArray#_info;
 },
 GHC.PrimopWrappers.fetchAndIntArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cAmO,
                       label: GHC.PrimopWrappers.fetchAndIntArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAmO: // global
           _cAmM::P64 = (R2 + 16) + (R3 << 3);
           _cAmN::I64 = R4;
           (_cAmL::I64) = call MO_AtomicRMW W64 AMO_And(_cAmM::P64, _cAmN::I64);
           R1 = _cAmL::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.591050486 UTC

[section ""data" . GHC.PrimopWrappers.fetchNandIntArray#_closure" {
     GHC.PrimopWrappers.fetchNandIntArray#_closure:
         const GHC.PrimopWrappers.fetchNandIntArray#_info;
 },
 GHC.PrimopWrappers.fetchNandIntArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cAn8,
                       label: GHC.PrimopWrappers.fetchNandIntArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAn8: // global
           _cAn6::P64 = (R2 + 16) + (R3 << 3);
           _cAn7::I64 = R4;
           (_cAn5::I64) = call MO_AtomicRMW W64 AMO_Nand(_cAn6::P64, _cAn7::I64);
           R1 = _cAn5::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.594798535 UTC

[section ""data" . GHC.PrimopWrappers.fetchOrIntArray#_closure" {
     GHC.PrimopWrappers.fetchOrIntArray#_closure:
         const GHC.PrimopWrappers.fetchOrIntArray#_info;
 },
 GHC.PrimopWrappers.fetchOrIntArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cAns,
                       label: GHC.PrimopWrappers.fetchOrIntArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAns: // global
           _cAnq::P64 = (R2 + 16) + (R3 << 3);
           _cAnr::I64 = R4;
           (_cAnp::I64) = call MO_AtomicRMW W64 AMO_Or(_cAnq::P64, _cAnr::I64);
           R1 = _cAnp::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.598572896 UTC

[section ""data" . GHC.PrimopWrappers.fetchXorIntArray#_closure" {
     GHC.PrimopWrappers.fetchXorIntArray#_closure:
         const GHC.PrimopWrappers.fetchXorIntArray#_info;
 },
 GHC.PrimopWrappers.fetchXorIntArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cAnM,
                       label: GHC.PrimopWrappers.fetchXorIntArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 20} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAnM: // global
           _cAnK::P64 = (R2 + 16) + (R3 << 3);
           _cAnL::I64 = R4;
           (_cAnJ::I64) = call MO_AtomicRMW W64 AMO_Xor(_cAnK::P64, _cAnL::I64);
           R1 = _cAnJ::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.602295267 UTC

[section ""data" . GHC.PrimopWrappers.newArrayArray#_closure" {
     GHC.PrimopWrappers.newArrayArray#_closure:
         const GHC.PrimopWrappers.newArrayArray#_info;
 },
 GHC.PrimopWrappers.newArrayArray#_entry() //  [R2]
         { info_tbl: [(cAo3,
                       label: GHC.PrimopWrappers.newArrayArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAo3: // global
           R1 = R2;
           call stg_newArrayArray#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.606274301 UTC

[section ""data" . GHC.PrimopWrappers.sameMutableArrayArray#_closure" {
     GHC.PrimopWrappers.sameMutableArrayArray#_closure:
         const GHC.PrimopWrappers.sameMutableArrayArray#_info;
 },
 GHC.PrimopWrappers.sameMutableArrayArray#_entry() //  [R2, R3]
         { info_tbl: [(cAof,
                       label: GHC.PrimopWrappers.sameMutableArrayArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAof: // global
           R1 = R2 == R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.609731052 UTC

[section ""data" . GHC.PrimopWrappers.unsafeFreezeArrayArray#_closure" {
     GHC.PrimopWrappers.unsafeFreezeArrayArray#_closure:
         const GHC.PrimopWrappers.unsafeFreezeArrayArray#_info;
 },
 GHC.PrimopWrappers.unsafeFreezeArrayArray#_entry() //  [R2]
         { info_tbl: [(cAot,
                       label: GHC.PrimopWrappers.unsafeFreezeArrayArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAot: // global
           I64[R2] = stg_MUT_ARR_PTRS_FROZEN0_info;
           R1 = R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.613311185 UTC

[section ""data" . GHC.PrimopWrappers.sizeofArrayArray#_closure" {
     GHC.PrimopWrappers.sizeofArrayArray#_closure:
         const GHC.PrimopWrappers.sizeofArrayArray#_info;
 },
 GHC.PrimopWrappers.sizeofArrayArray#_entry() //  [R2]
         { info_tbl: [(cAoH,
                       label: GHC.PrimopWrappers.sizeofArrayArray#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAoH: // global
           R1 = I64[R2 + 8];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.616723205 UTC

[section ""data" . GHC.PrimopWrappers.sizeofMutableArrayArray#_closure" {
     GHC.PrimopWrappers.sizeofMutableArrayArray#_closure:
         const GHC.PrimopWrappers.sizeofMutableArrayArray#_info;
 },
 GHC.PrimopWrappers.sizeofMutableArrayArray#_entry() //  [R2]
         { info_tbl: [(cAoU,
                       label: GHC.PrimopWrappers.sizeofMutableArrayArray#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAoU: // global
           R1 = I64[R2 + 8];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.620133004 UTC

[section ""data" . GHC.PrimopWrappers.indexByteArrayArray#_closure" {
     GHC.PrimopWrappers.indexByteArrayArray#_closure:
         const GHC.PrimopWrappers.indexByteArrayArray#_info;
 },
 GHC.PrimopWrappers.indexByteArrayArray#_entry() //  [R2, R3]
         { info_tbl: [(cAp7,
                       label: GHC.PrimopWrappers.indexByteArrayArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAp7: // global
           R1 = P64[(R2 + 24) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.62354005 UTC

[section ""data" . GHC.PrimopWrappers.indexArrayArrayArray#_closure" {
     GHC.PrimopWrappers.indexArrayArrayArray#_closure:
         const GHC.PrimopWrappers.indexArrayArrayArray#_info;
 },
 GHC.PrimopWrappers.indexArrayArrayArray#_entry() //  [R2, R3]
         { info_tbl: [(cApk,
                       label: GHC.PrimopWrappers.indexArrayArrayArray#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cApk: // global
           R1 = P64[(R2 + 24) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.626996007 UTC

[section ""data" . GHC.PrimopWrappers.readByteArrayArray#_closure" {
     GHC.PrimopWrappers.readByteArrayArray#_closure:
         const GHC.PrimopWrappers.readByteArrayArray#_info;
 },
 GHC.PrimopWrappers.readByteArrayArray#_entry() //  [R2, R3]
         { info_tbl: [(cApx,
                       label: GHC.PrimopWrappers.readByteArrayArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cApx: // global
           R1 = P64[(R2 + 24) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.630422743 UTC

[section ""data" . GHC.PrimopWrappers.readMutableByteArrayArray#_closure" {
     GHC.PrimopWrappers.readMutableByteArrayArray#_closure:
         const GHC.PrimopWrappers.readMutableByteArrayArray#_info;
 },
 GHC.PrimopWrappers.readMutableByteArrayArray#_entry() //  [R2, R3]
         { info_tbl: [(cApK,
                       label: GHC.PrimopWrappers.readMutableByteArrayArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cApK: // global
           R1 = P64[(R2 + 24) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.633884218 UTC

[section ""data" . GHC.PrimopWrappers.readArrayArrayArray#_closure" {
     GHC.PrimopWrappers.readArrayArrayArray#_closure:
         const GHC.PrimopWrappers.readArrayArrayArray#_info;
 },
 GHC.PrimopWrappers.readArrayArrayArray#_entry() //  [R2, R3]
         { info_tbl: [(cApX,
                       label: GHC.PrimopWrappers.readArrayArrayArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cApX: // global
           R1 = P64[(R2 + 24) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.638033833 UTC

[section ""data" . GHC.PrimopWrappers.readMutableArrayArrayArray#_closure" {
     GHC.PrimopWrappers.readMutableArrayArrayArray#_closure:
         const GHC.PrimopWrappers.readMutableArrayArrayArray#_info;
 },
 GHC.PrimopWrappers.readMutableArrayArrayArray#_entry() //  [R2, R3]
         { info_tbl: [(cAqa,
                       label: GHC.PrimopWrappers.readMutableArrayArrayArray#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAqa: // global
           R1 = P64[(R2 + 24) + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.641458744 UTC

[section ""data" . GHC.PrimopWrappers.writeByteArrayArray#_closure" {
     GHC.PrimopWrappers.writeByteArrayArray#_closure:
         const GHC.PrimopWrappers.writeByteArrayArray#_info;
 },
 GHC.PrimopWrappers.writeByteArrayArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cAqm,
                       label: GHC.PrimopWrappers.writeByteArrayArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 21} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAqm: // global
           _B2::P64 = R4;
           _B3::I64 = R3;
           call MO_WriteBarrier();
           P64[(R2 + 24) + (_B3::I64 << 3)] = _B2::P64;
           I64[R2] = stg_MUT_ARR_PTRS_DIRTY_info;
           I8[(R2 + 24) + ((I64[R2 + 8] << 3) + (_B3::I64 >> 7))] = 1 :: W8;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.645365103 UTC

[section ""data" . GHC.PrimopWrappers.writeMutableByteArrayArray#_closure" {
     GHC.PrimopWrappers.writeMutableByteArrayArray#_closure:
         const GHC.PrimopWrappers.writeMutableByteArrayArray#_info;
 },
 GHC.PrimopWrappers.writeMutableByteArrayArray#_entry() //  [R2, R3,
                                                             R4]
         { info_tbl: [(cAqD,
                       label: GHC.PrimopWrappers.writeMutableByteArrayArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 21} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAqD: // global
           _B2::P64 = R4;
           _B3::I64 = R3;
           call MO_WriteBarrier();
           P64[(R2 + 24) + (_B3::I64 << 3)] = _B2::P64;
           I64[R2] = stg_MUT_ARR_PTRS_DIRTY_info;
           I8[(R2 + 24) + ((I64[R2 + 8] << 3) + (_B3::I64 >> 7))] = 1 :: W8;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.649202798 UTC

[section ""data" . GHC.PrimopWrappers.writeArrayArrayArray#_closure" {
     GHC.PrimopWrappers.writeArrayArrayArray#_closure:
         const GHC.PrimopWrappers.writeArrayArrayArray#_info;
 },
 GHC.PrimopWrappers.writeArrayArrayArray#_entry() //  [R2, R3, R4]
         { info_tbl: [(cAqU,
                       label: GHC.PrimopWrappers.writeArrayArrayArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 21} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAqU: // global
           _B2::P64 = R4;
           _B3::I64 = R3;
           call MO_WriteBarrier();
           P64[(R2 + 24) + (_B3::I64 << 3)] = _B2::P64;
           I64[R2] = stg_MUT_ARR_PTRS_DIRTY_info;
           I8[(R2 + 24) + ((I64[R2 + 8] << 3) + (_B3::I64 >> 7))] = 1 :: W8;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.65305811 UTC

[section ""data" . GHC.PrimopWrappers.writeMutableArrayArrayArray#_closure" {
     GHC.PrimopWrappers.writeMutableArrayArrayArray#_closure:
         const GHC.PrimopWrappers.writeMutableArrayArrayArray#_info;
 },
 GHC.PrimopWrappers.writeMutableArrayArrayArray#_entry() //  [R2,
                                                              R3, R4]
         { info_tbl: [(cArb,
                       label: GHC.PrimopWrappers.writeMutableArrayArrayArray#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 21} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cArb: // global
           _B2::P64 = R4;
           _B3::I64 = R3;
           call MO_WriteBarrier();
           P64[(R2 + 24) + (_B3::I64 << 3)] = _B2::P64;
           I64[R2] = stg_MUT_ARR_PTRS_DIRTY_info;
           I8[(R2 + 24) + ((I64[R2 + 8] << 3) + (_B3::I64 >> 7))] = 1 :: W8;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.657068501 UTC

[section ""data" . GHC.PrimopWrappers.copyArrayArray#_closure" {
     GHC.PrimopWrappers.copyArrayArray#_closure:
         const GHC.PrimopWrappers.copyArrayArray#_info;
 },
 GHC.PrimopWrappers.copyArrayArray#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cArp: // global
           R6 = I64[Sp + 32];
           R5 = I64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 40;
           call GHC.PrimopWrappers.copyArrayArray#_entry(R6,
                                                         R5,
                                                         R4,
                                                         R3,
                                                         R2,
                                                         R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.copyArrayArray#_entry() //  [R2, R3, R4, R5, R6]
         { info_tbl: [(cArt,
                       label: GHC.PrimopWrappers.copyArrayArray#_info
                       rep:HeapRep static {
                             Fun {arity: 6
                                  fun_type: ArgGen [False, True, False, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cArt: // global
           _B3::I64 = R5;
           R5 = R6;
           _B4::P64 = R4;
           R4 = _B3::I64;
           _B5::I64 = R3;
           R3 = _B4::P64;
           _B6::P64 = R2;
           R2 = _B5::I64;
           R1 = _B6::P64;
           call stg_copyArrayArray#(R5,
                                    R4,
                                    R3,
                                    R2,
                                    R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.662078448 UTC

[section ""data" . GHC.PrimopWrappers.copyMutableArrayArray#_closure" {
     GHC.PrimopWrappers.copyMutableArrayArray#_closure:
         const GHC.PrimopWrappers.copyMutableArrayArray#_info;
 },
 GHC.PrimopWrappers.copyMutableArrayArray#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cArD: // global
           R6 = I64[Sp + 32];
           R5 = I64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 40;
           call GHC.PrimopWrappers.copyMutableArrayArray#_entry(R6,
                                                                R5,
                                                                R4,
                                                                R3,
                                                                R2,
                                                                R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.copyMutableArrayArray#_entry() //  [R2, R3, R4,
                                                        R5, R6]
         { info_tbl: [(cArH,
                       label: GHC.PrimopWrappers.copyMutableArrayArray#_info
                       rep:HeapRep static {
                             Fun {arity: 6
                                  fun_type: ArgGen [False, True, False, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cArH: // global
           _B3::I64 = R5;
           R5 = R6;
           _B4::P64 = R4;
           R4 = _B3::I64;
           _B5::I64 = R3;
           R3 = _B4::P64;
           _B6::P64 = R2;
           R2 = _B5::I64;
           R1 = _B6::P64;
           call stg_copyMutableArrayArray#(R5,
                                           R4,
                                           R3,
                                           R2,
                                           R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.667427995 UTC

[section ""data" . GHC.PrimopWrappers.plusAddr#_closure" {
     GHC.PrimopWrappers.plusAddr#_closure:
         const GHC.PrimopWrappers.plusAddr#_info;
 },
 GHC.PrimopWrappers.plusAddr#_entry() //  [R2, R3]
         { info_tbl: [(cArV,
                       label: GHC.PrimopWrappers.plusAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cArV: // global
           R1 = R2 + R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.67137362 UTC

[section ""data" . GHC.PrimopWrappers.minusAddr#_closure" {
     GHC.PrimopWrappers.minusAddr#_closure:
         const GHC.PrimopWrappers.minusAddr#_info;
 },
 GHC.PrimopWrappers.minusAddr#_entry() //  [R2, R3]
         { info_tbl: [(cAs9,
                       label: GHC.PrimopWrappers.minusAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAs9: // global
           R1 = R2 - R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.674669844 UTC

[section ""data" . GHC.PrimopWrappers.remAddr#_closure" {
     GHC.PrimopWrappers.remAddr#_closure:
         const GHC.PrimopWrappers.remAddr#_info;
 },
 GHC.PrimopWrappers.remAddr#_entry() //  [R2, R3]
         { info_tbl: [(cAsn,
                       label: GHC.PrimopWrappers.remAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAsn: // global
           R1 = R2 % R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.678031077 UTC

[section ""data" . GHC.PrimopWrappers.addr2Int#_closure" {
     GHC.PrimopWrappers.addr2Int#_closure:
         const GHC.PrimopWrappers.addr2Int#_info;
 },
 GHC.PrimopWrappers.addr2Int#_entry() //  [R2]
         { info_tbl: [(cAsA,
                       label: GHC.PrimopWrappers.addr2Int#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAsA: // global
           R1 = R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.681351765 UTC

[section ""data" . GHC.PrimopWrappers.int2Addr#_closure" {
     GHC.PrimopWrappers.int2Addr#_closure:
         const GHC.PrimopWrappers.int2Addr#_info;
 },
 GHC.PrimopWrappers.int2Addr#_entry() //  [R2]
         { info_tbl: [(cAsN,
                       label: GHC.PrimopWrappers.int2Addr#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAsN: // global
           R1 = R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.684678168 UTC

[section ""data" . GHC.PrimopWrappers.gtAddr#_closure" {
     GHC.PrimopWrappers.gtAddr#_closure:
         const GHC.PrimopWrappers.gtAddr#_info;
 },
 GHC.PrimopWrappers.gtAddr#_entry() //  [R2, R3]
         { info_tbl: [(cAt0,
                       label: GHC.PrimopWrappers.gtAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAt0: // global
           R1 = R2 > R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.689140134 UTC

[section ""data" . GHC.PrimopWrappers.geAddr#_closure" {
     GHC.PrimopWrappers.geAddr#_closure:
         const GHC.PrimopWrappers.geAddr#_info;
 },
 GHC.PrimopWrappers.geAddr#_entry() //  [R2, R3]
         { info_tbl: [(cAte,
                       label: GHC.PrimopWrappers.geAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAte: // global
           R1 = R2 >= R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.692566584 UTC

[section ""data" . GHC.PrimopWrappers.eqAddr#_closure" {
     GHC.PrimopWrappers.eqAddr#_closure:
         const GHC.PrimopWrappers.eqAddr#_info;
 },
 GHC.PrimopWrappers.eqAddr#_entry() //  [R2, R3]
         { info_tbl: [(cAts,
                       label: GHC.PrimopWrappers.eqAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAts: // global
           R1 = R2 == R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.695916644 UTC

[section ""data" . GHC.PrimopWrappers.neAddr#_closure" {
     GHC.PrimopWrappers.neAddr#_closure:
         const GHC.PrimopWrappers.neAddr#_info;
 },
 GHC.PrimopWrappers.neAddr#_entry() //  [R2, R3]
         { info_tbl: [(cAtG,
                       label: GHC.PrimopWrappers.neAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAtG: // global
           R1 = R2 != R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.700643748 UTC

[section ""data" . GHC.PrimopWrappers.ltAddr#_closure" {
     GHC.PrimopWrappers.ltAddr#_closure:
         const GHC.PrimopWrappers.ltAddr#_info;
 },
 GHC.PrimopWrappers.ltAddr#_entry() //  [R2, R3]
         { info_tbl: [(cAtU,
                       label: GHC.PrimopWrappers.ltAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAtU: // global
           R1 = R2 < R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.703961042 UTC

[section ""data" . GHC.PrimopWrappers.leAddr#_closure" {
     GHC.PrimopWrappers.leAddr#_closure:
         const GHC.PrimopWrappers.leAddr#_info;
 },
 GHC.PrimopWrappers.leAddr#_entry() //  [R2, R3]
         { info_tbl: [(cAu8,
                       label: GHC.PrimopWrappers.leAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAu8: // global
           R1 = R2 <= R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.707335561 UTC

[section ""data" . GHC.PrimopWrappers.indexCharOffAddr#_closure" {
     GHC.PrimopWrappers.indexCharOffAddr#_closure:
         const GHC.PrimopWrappers.indexCharOffAddr#_info;
 },
 GHC.PrimopWrappers.indexCharOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cAum,
                       label: GHC.PrimopWrappers.indexCharOffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAum: // global
           R1 = %MO_UU_Conv_W8_W64(I8[R2 + R3]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.711157784 UTC

[section ""data" . GHC.PrimopWrappers.indexWideCharOffAddr#_closure" {
     GHC.PrimopWrappers.indexWideCharOffAddr#_closure:
         const GHC.PrimopWrappers.indexWideCharOffAddr#_info;
 },
 GHC.PrimopWrappers.indexWideCharOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cAuz,
                       label: GHC.PrimopWrappers.indexWideCharOffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAuz: // global
           R1 = %MO_UU_Conv_W32_W64(I32[R2 + (R3 << 2)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.714646131 UTC

[section ""data" . GHC.PrimopWrappers.indexIntOffAddr#_closure" {
     GHC.PrimopWrappers.indexIntOffAddr#_closure:
         const GHC.PrimopWrappers.indexIntOffAddr#_info;
 },
 GHC.PrimopWrappers.indexIntOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cAuM,
                       label: GHC.PrimopWrappers.indexIntOffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAuM: // global
           R1 = I64[R2 + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.718086516 UTC

[section ""data" . GHC.PrimopWrappers.indexWordOffAddr#_closure" {
     GHC.PrimopWrappers.indexWordOffAddr#_closure:
         const GHC.PrimopWrappers.indexWordOffAddr#_info;
 },
 GHC.PrimopWrappers.indexWordOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cAuZ,
                       label: GHC.PrimopWrappers.indexWordOffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAuZ: // global
           R1 = I64[R2 + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.721915938 UTC

[section ""data" . GHC.PrimopWrappers.indexAddrOffAddr#_closure" {
     GHC.PrimopWrappers.indexAddrOffAddr#_closure:
         const GHC.PrimopWrappers.indexAddrOffAddr#_info;
 },
 GHC.PrimopWrappers.indexAddrOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cAvc,
                       label: GHC.PrimopWrappers.indexAddrOffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAvc: // global
           R1 = I64[R2 + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.725411914 UTC

[section ""data" . GHC.PrimopWrappers.indexFloatOffAddr#_closure" {
     GHC.PrimopWrappers.indexFloatOffAddr#_closure:
         const GHC.PrimopWrappers.indexFloatOffAddr#_info;
 },
 GHC.PrimopWrappers.indexFloatOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cAvp,
                       label: GHC.PrimopWrappers.indexFloatOffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAvp: // global
           F1 = F32[R2 + (R3 << 2)];
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.728759308 UTC

[section ""data" . GHC.PrimopWrappers.indexDoubleOffAddr#_closure" {
     GHC.PrimopWrappers.indexDoubleOffAddr#_closure:
         const GHC.PrimopWrappers.indexDoubleOffAddr#_info;
 },
 GHC.PrimopWrappers.indexDoubleOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cAvC,
                       label: GHC.PrimopWrappers.indexDoubleOffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAvC: // global
           D1 = F64[R2 + (R3 << 3)];
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.732833719 UTC

[section ""data" . GHC.PrimopWrappers.indexStablePtrOffAddr#_closure" {
     GHC.PrimopWrappers.indexStablePtrOffAddr#_closure:
         const GHC.PrimopWrappers.indexStablePtrOffAddr#_info;
 },
 GHC.PrimopWrappers.indexStablePtrOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cAvP,
                       label: GHC.PrimopWrappers.indexStablePtrOffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAvP: // global
           R1 = I64[R2 + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.736882611 UTC

[section ""data" . GHC.PrimopWrappers.indexInt8OffAddr#_closure" {
     GHC.PrimopWrappers.indexInt8OffAddr#_closure:
         const GHC.PrimopWrappers.indexInt8OffAddr#_info;
 },
 GHC.PrimopWrappers.indexInt8OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cAw2,
                       label: GHC.PrimopWrappers.indexInt8OffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAw2: // global
           R1 = %MO_SS_Conv_W8_W64(I8[R2 + R3]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.740353416 UTC

[section ""data" . GHC.PrimopWrappers.indexInt16OffAddr#_closure" {
     GHC.PrimopWrappers.indexInt16OffAddr#_closure:
         const GHC.PrimopWrappers.indexInt16OffAddr#_info;
 },
 GHC.PrimopWrappers.indexInt16OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cAwf,
                       label: GHC.PrimopWrappers.indexInt16OffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAwf: // global
           R1 = %MO_SS_Conv_W16_W64(I16[R2 + (R3 << 1)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.743774632 UTC

[section ""data" . GHC.PrimopWrappers.indexInt32OffAddr#_closure" {
     GHC.PrimopWrappers.indexInt32OffAddr#_closure:
         const GHC.PrimopWrappers.indexInt32OffAddr#_info;
 },
 GHC.PrimopWrappers.indexInt32OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cAws,
                       label: GHC.PrimopWrappers.indexInt32OffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAws: // global
           R1 = %MO_SS_Conv_W32_W64(I32[R2 + (R3 << 2)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.747387209 UTC

[section ""data" . GHC.PrimopWrappers.indexInt64OffAddr#_closure" {
     GHC.PrimopWrappers.indexInt64OffAddr#_closure:
         const GHC.PrimopWrappers.indexInt64OffAddr#_info;
 },
 GHC.PrimopWrappers.indexInt64OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cAwF,
                       label: GHC.PrimopWrappers.indexInt64OffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAwF: // global
           R1 = I64[R2 + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.750713732 UTC

[section ""data" . GHC.PrimopWrappers.indexWord8OffAddr#_closure" {
     GHC.PrimopWrappers.indexWord8OffAddr#_closure:
         const GHC.PrimopWrappers.indexWord8OffAddr#_info;
 },
 GHC.PrimopWrappers.indexWord8OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cAwS,
                       label: GHC.PrimopWrappers.indexWord8OffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAwS: // global
           R1 = %MO_UU_Conv_W8_W64(I8[R2 + R3]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.75426069 UTC

[section ""data" . GHC.PrimopWrappers.indexWord16OffAddr#_closure" {
     GHC.PrimopWrappers.indexWord16OffAddr#_closure:
         const GHC.PrimopWrappers.indexWord16OffAddr#_info;
 },
 GHC.PrimopWrappers.indexWord16OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cAx5,
                       label: GHC.PrimopWrappers.indexWord16OffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAx5: // global
           R1 = %MO_UU_Conv_W16_W64(I16[R2 + (R3 << 1)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.757705292 UTC

[section ""data" . GHC.PrimopWrappers.indexWord32OffAddr#_closure" {
     GHC.PrimopWrappers.indexWord32OffAddr#_closure:
         const GHC.PrimopWrappers.indexWord32OffAddr#_info;
 },
 GHC.PrimopWrappers.indexWord32OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cAxi,
                       label: GHC.PrimopWrappers.indexWord32OffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAxi: // global
           R1 = %MO_UU_Conv_W32_W64(I32[R2 + (R3 << 2)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.76195474 UTC

[section ""data" . GHC.PrimopWrappers.indexWord64OffAddr#_closure" {
     GHC.PrimopWrappers.indexWord64OffAddr#_closure:
         const GHC.PrimopWrappers.indexWord64OffAddr#_info;
 },
 GHC.PrimopWrappers.indexWord64OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cAxv,
                       label: GHC.PrimopWrappers.indexWord64OffAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAxv: // global
           R1 = I64[R2 + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.765384061 UTC

[section ""data" . GHC.PrimopWrappers.readCharOffAddr#_closure" {
     GHC.PrimopWrappers.readCharOffAddr#_closure:
         const GHC.PrimopWrappers.readCharOffAddr#_info;
 },
 GHC.PrimopWrappers.readCharOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cAxI,
                       label: GHC.PrimopWrappers.readCharOffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAxI: // global
           R1 = %MO_UU_Conv_W8_W64(I8[R2 + R3]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.768606924 UTC

[section ""data" . GHC.PrimopWrappers.readWideCharOffAddr#_closure" {
     GHC.PrimopWrappers.readWideCharOffAddr#_closure:
         const GHC.PrimopWrappers.readWideCharOffAddr#_info;
 },
 GHC.PrimopWrappers.readWideCharOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cAxV,
                       label: GHC.PrimopWrappers.readWideCharOffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAxV: // global
           R1 = %MO_UU_Conv_W32_W64(I32[R2 + (R3 << 2)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.771945158 UTC

[section ""data" . GHC.PrimopWrappers.readIntOffAddr#_closure" {
     GHC.PrimopWrappers.readIntOffAddr#_closure:
         const GHC.PrimopWrappers.readIntOffAddr#_info;
 },
 GHC.PrimopWrappers.readIntOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cAy8,
                       label: GHC.PrimopWrappers.readIntOffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAy8: // global
           R1 = I64[R2 + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.775333592 UTC

[section ""data" . GHC.PrimopWrappers.readWordOffAddr#_closure" {
     GHC.PrimopWrappers.readWordOffAddr#_closure:
         const GHC.PrimopWrappers.readWordOffAddr#_info;
 },
 GHC.PrimopWrappers.readWordOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cAyl,
                       label: GHC.PrimopWrappers.readWordOffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAyl: // global
           R1 = I64[R2 + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.778591145 UTC

[section ""data" . GHC.PrimopWrappers.readAddrOffAddr#_closure" {
     GHC.PrimopWrappers.readAddrOffAddr#_closure:
         const GHC.PrimopWrappers.readAddrOffAddr#_info;
 },
 GHC.PrimopWrappers.readAddrOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cAyy,
                       label: GHC.PrimopWrappers.readAddrOffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAyy: // global
           R1 = I64[R2 + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.781971362 UTC

[section ""data" . GHC.PrimopWrappers.readFloatOffAddr#_closure" {
     GHC.PrimopWrappers.readFloatOffAddr#_closure:
         const GHC.PrimopWrappers.readFloatOffAddr#_info;
 },
 GHC.PrimopWrappers.readFloatOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cAyL,
                       label: GHC.PrimopWrappers.readFloatOffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAyL: // global
           F1 = F32[R2 + (R3 << 2)];
           call (I64[P64[Sp]])(F1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.785453271 UTC

[section ""data" . GHC.PrimopWrappers.readDoubleOffAddr#_closure" {
     GHC.PrimopWrappers.readDoubleOffAddr#_closure:
         const GHC.PrimopWrappers.readDoubleOffAddr#_info;
 },
 GHC.PrimopWrappers.readDoubleOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cAyY,
                       label: GHC.PrimopWrappers.readDoubleOffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAyY: // global
           D1 = F64[R2 + (R3 << 3)];
           call (I64[P64[Sp]])(D1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.788902666 UTC

[section ""data" . GHC.PrimopWrappers.readStablePtrOffAddr#_closure" {
     GHC.PrimopWrappers.readStablePtrOffAddr#_closure:
         const GHC.PrimopWrappers.readStablePtrOffAddr#_info;
 },
 GHC.PrimopWrappers.readStablePtrOffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cAzb,
                       label: GHC.PrimopWrappers.readStablePtrOffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAzb: // global
           R1 = I64[R2 + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.793000591 UTC

[section ""data" . GHC.PrimopWrappers.readInt8OffAddr#_closure" {
     GHC.PrimopWrappers.readInt8OffAddr#_closure:
         const GHC.PrimopWrappers.readInt8OffAddr#_info;
 },
 GHC.PrimopWrappers.readInt8OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cAzo,
                       label: GHC.PrimopWrappers.readInt8OffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAzo: // global
           R1 = %MO_SS_Conv_W8_W64(I8[R2 + R3]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.79660014 UTC

[section ""data" . GHC.PrimopWrappers.readInt16OffAddr#_closure" {
     GHC.PrimopWrappers.readInt16OffAddr#_closure:
         const GHC.PrimopWrappers.readInt16OffAddr#_info;
 },
 GHC.PrimopWrappers.readInt16OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cAzB,
                       label: GHC.PrimopWrappers.readInt16OffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAzB: // global
           R1 = %MO_SS_Conv_W16_W64(I16[R2 + (R3 << 1)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.800030523 UTC

[section ""data" . GHC.PrimopWrappers.readInt32OffAddr#_closure" {
     GHC.PrimopWrappers.readInt32OffAddr#_closure:
         const GHC.PrimopWrappers.readInt32OffAddr#_info;
 },
 GHC.PrimopWrappers.readInt32OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cAzO,
                       label: GHC.PrimopWrappers.readInt32OffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAzO: // global
           R1 = %MO_SS_Conv_W32_W64(I32[R2 + (R3 << 2)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.803240643 UTC

[section ""data" . GHC.PrimopWrappers.readInt64OffAddr#_closure" {
     GHC.PrimopWrappers.readInt64OffAddr#_closure:
         const GHC.PrimopWrappers.readInt64OffAddr#_info;
 },
 GHC.PrimopWrappers.readInt64OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cAA1,
                       label: GHC.PrimopWrappers.readInt64OffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAA1: // global
           R1 = I64[R2 + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.806533229 UTC

[section ""data" . GHC.PrimopWrappers.readWord8OffAddr#_closure" {
     GHC.PrimopWrappers.readWord8OffAddr#_closure:
         const GHC.PrimopWrappers.readWord8OffAddr#_info;
 },
 GHC.PrimopWrappers.readWord8OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cAAe,
                       label: GHC.PrimopWrappers.readWord8OffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAAe: // global
           R1 = %MO_UU_Conv_W8_W64(I8[R2 + R3]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.810084323 UTC

[section ""data" . GHC.PrimopWrappers.readWord16OffAddr#_closure" {
     GHC.PrimopWrappers.readWord16OffAddr#_closure:
         const GHC.PrimopWrappers.readWord16OffAddr#_info;
 },
 GHC.PrimopWrappers.readWord16OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cAAr,
                       label: GHC.PrimopWrappers.readWord16OffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAAr: // global
           R1 = %MO_UU_Conv_W16_W64(I16[R2 + (R3 << 1)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.813402545 UTC

[section ""data" . GHC.PrimopWrappers.readWord32OffAddr#_closure" {
     GHC.PrimopWrappers.readWord32OffAddr#_closure:
         const GHC.PrimopWrappers.readWord32OffAddr#_info;
 },
 GHC.PrimopWrappers.readWord32OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cAAE,
                       label: GHC.PrimopWrappers.readWord32OffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAAE: // global
           R1 = %MO_UU_Conv_W32_W64(I32[R2 + (R3 << 2)]);
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.816764669 UTC

[section ""data" . GHC.PrimopWrappers.readWord64OffAddr#_closure" {
     GHC.PrimopWrappers.readWord64OffAddr#_closure:
         const GHC.PrimopWrappers.readWord64OffAddr#_info;
 },
 GHC.PrimopWrappers.readWord64OffAddr#_entry() //  [R2, R3]
         { info_tbl: [(cAAR,
                       label: GHC.PrimopWrappers.readWord64OffAddr#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAAR: // global
           R1 = I64[R2 + (R3 << 3)];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.820632751 UTC

[section ""data" . GHC.PrimopWrappers.writeCharOffAddr#_closure" {
     GHC.PrimopWrappers.writeCharOffAddr#_closure:
         const GHC.PrimopWrappers.writeCharOffAddr#_info;
 },
 GHC.PrimopWrappers.writeCharOffAddr#_entry() //  [R2, R3, R4]
         { info_tbl: [(cAB3,
                       label: GHC.PrimopWrappers.writeCharOffAddr#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 16} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAB3: // global
           I8[R2 + R3] = %MO_UU_Conv_W64_W8(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.825340598 UTC

[section ""data" . GHC.PrimopWrappers.writeWideCharOffAddr#_closure" {
     GHC.PrimopWrappers.writeWideCharOffAddr#_closure:
         const GHC.PrimopWrappers.writeWideCharOffAddr#_info;
 },
 GHC.PrimopWrappers.writeWideCharOffAddr#_entry() //  [R2, R3, R4]
         { info_tbl: [(cABg,
                       label: GHC.PrimopWrappers.writeWideCharOffAddr#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 16} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cABg: // global
           I32[R2 + (R3 << 2)] = %MO_UU_Conv_W64_W32(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.82876035 UTC

[section ""data" . GHC.PrimopWrappers.writeIntOffAddr#_closure" {
     GHC.PrimopWrappers.writeIntOffAddr#_closure:
         const GHC.PrimopWrappers.writeIntOffAddr#_info;
 },
 GHC.PrimopWrappers.writeIntOffAddr#_entry() //  [R2, R3, R4]
         { info_tbl: [(cABs,
                       label: GHC.PrimopWrappers.writeIntOffAddr#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 16} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cABs: // global
           I64[R2 + (R3 << 3)] = R4;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.832092279 UTC

[section ""data" . GHC.PrimopWrappers.writeWordOffAddr#_closure" {
     GHC.PrimopWrappers.writeWordOffAddr#_closure:
         const GHC.PrimopWrappers.writeWordOffAddr#_info;
 },
 GHC.PrimopWrappers.writeWordOffAddr#_entry() //  [R2, R3, R4]
         { info_tbl: [(cABE,
                       label: GHC.PrimopWrappers.writeWordOffAddr#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 16} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cABE: // global
           I64[R2 + (R3 << 3)] = R4;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.835575109 UTC

[section ""data" . GHC.PrimopWrappers.writeAddrOffAddr#_closure" {
     GHC.PrimopWrappers.writeAddrOffAddr#_closure:
         const GHC.PrimopWrappers.writeAddrOffAddr#_info;
 },
 GHC.PrimopWrappers.writeAddrOffAddr#_entry() //  [R2, R3, R4]
         { info_tbl: [(cABQ,
                       label: GHC.PrimopWrappers.writeAddrOffAddr#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 16} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cABQ: // global
           I64[R2 + (R3 << 3)] = R4;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.839005121 UTC

[section ""data" . GHC.PrimopWrappers.writeFloatOffAddr#_closure" {
     GHC.PrimopWrappers.writeFloatOffAddr#_closure:
         const GHC.PrimopWrappers.writeFloatOffAddr#_info;
 },
 GHC.PrimopWrappers.writeFloatOffAddr#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cABZ: // global
           F1 = F32[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = I64[Sp];
           R1 = R1;
           Sp = Sp + 24;
           call GHC.PrimopWrappers.writeFloatOffAddr#_entry(F1,
                                                            R3,
                                                            R2,
                                                            R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.writeFloatOffAddr#_entry() //  [R2, R3, F1]
         { info_tbl: [(cAC3,
                       label: GHC.PrimopWrappers.writeFloatOffAddr#_info
                       rep:HeapRep static {
                             Fun {arity: 4 fun_type: ArgGen [True, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAC3: // global
           F32[R2 + (R3 << 2)] = F1;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.843532747 UTC

[section ""data" . GHC.PrimopWrappers.writeDoubleOffAddr#_closure" {
     GHC.PrimopWrappers.writeDoubleOffAddr#_closure:
         const GHC.PrimopWrappers.writeDoubleOffAddr#_info;
 },
 GHC.PrimopWrappers.writeDoubleOffAddr#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cACe: // global
           D1 = F64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = I64[Sp];
           R1 = R1;
           Sp = Sp + 24;
           call GHC.PrimopWrappers.writeDoubleOffAddr#_entry(D1,
                                                             R3,
                                                             R2,
                                                             R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.writeDoubleOffAddr#_entry() //  [R2, R3, D1]
         { info_tbl: [(cACi,
                       label: GHC.PrimopWrappers.writeDoubleOffAddr#_info
                       rep:HeapRep static {
                             Fun {arity: 4 fun_type: ArgGen [True, True, True]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cACi: // global
           F64[R2 + (R3 << 3)] = D1;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.847998617 UTC

[section ""data" . GHC.PrimopWrappers.writeStablePtrOffAddr#_closure" {
     GHC.PrimopWrappers.writeStablePtrOffAddr#_closure:
         const GHC.PrimopWrappers.writeStablePtrOffAddr#_info;
 },
 GHC.PrimopWrappers.writeStablePtrOffAddr#_entry() //  [R2, R3, R4]
         { info_tbl: [(cACw,
                       label: GHC.PrimopWrappers.writeStablePtrOffAddr#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 16} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cACw: // global
           I64[R2 + (R3 << 3)] = R4;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.851696748 UTC

[section ""data" . GHC.PrimopWrappers.writeInt8OffAddr#_closure" {
     GHC.PrimopWrappers.writeInt8OffAddr#_closure:
         const GHC.PrimopWrappers.writeInt8OffAddr#_info;
 },
 GHC.PrimopWrappers.writeInt8OffAddr#_entry() //  [R2, R3, R4]
         { info_tbl: [(cACI,
                       label: GHC.PrimopWrappers.writeInt8OffAddr#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 16} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cACI: // global
           I8[R2 + R3] = %MO_UU_Conv_W64_W8(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.855691437 UTC

[section ""data" . GHC.PrimopWrappers.writeInt16OffAddr#_closure" {
     GHC.PrimopWrappers.writeInt16OffAddr#_closure:
         const GHC.PrimopWrappers.writeInt16OffAddr#_info;
 },
 GHC.PrimopWrappers.writeInt16OffAddr#_entry() //  [R2, R3, R4]
         { info_tbl: [(cACV,
                       label: GHC.PrimopWrappers.writeInt16OffAddr#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 16} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cACV: // global
           I16[R2 + (R3 << 1)] = %MO_UU_Conv_W64_W16(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.859080806 UTC

[section ""data" . GHC.PrimopWrappers.writeInt32OffAddr#_closure" {
     GHC.PrimopWrappers.writeInt32OffAddr#_closure:
         const GHC.PrimopWrappers.writeInt32OffAddr#_info;
 },
 GHC.PrimopWrappers.writeInt32OffAddr#_entry() //  [R2, R3, R4]
         { info_tbl: [(cAD8,
                       label: GHC.PrimopWrappers.writeInt32OffAddr#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 16} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAD8: // global
           I32[R2 + (R3 << 2)] = %MO_UU_Conv_W64_W32(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.862418584 UTC

[section ""data" . GHC.PrimopWrappers.writeInt64OffAddr#_closure" {
     GHC.PrimopWrappers.writeInt64OffAddr#_closure:
         const GHC.PrimopWrappers.writeInt64OffAddr#_info;
 },
 GHC.PrimopWrappers.writeInt64OffAddr#_entry() //  [R2, R3, R4]
         { info_tbl: [(cADk,
                       label: GHC.PrimopWrappers.writeInt64OffAddr#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 16} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cADk: // global
           I64[R2 + (R3 << 3)] = R4;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.866232167 UTC

[section ""data" . GHC.PrimopWrappers.writeWord8OffAddr#_closure" {
     GHC.PrimopWrappers.writeWord8OffAddr#_closure:
         const GHC.PrimopWrappers.writeWord8OffAddr#_info;
 },
 GHC.PrimopWrappers.writeWord8OffAddr#_entry() //  [R2, R3, R4]
         { info_tbl: [(cADw,
                       label: GHC.PrimopWrappers.writeWord8OffAddr#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 16} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cADw: // global
           I8[R2 + R3] = %MO_UU_Conv_W64_W8(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.869713673 UTC

[section ""data" . GHC.PrimopWrappers.writeWord16OffAddr#_closure" {
     GHC.PrimopWrappers.writeWord16OffAddr#_closure:
         const GHC.PrimopWrappers.writeWord16OffAddr#_info;
 },
 GHC.PrimopWrappers.writeWord16OffAddr#_entry() //  [R2, R3, R4]
         { info_tbl: [(cADJ,
                       label: GHC.PrimopWrappers.writeWord16OffAddr#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 16} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cADJ: // global
           I16[R2 + (R3 << 1)] = %MO_UU_Conv_W64_W16(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.873197365 UTC

[section ""data" . GHC.PrimopWrappers.writeWord32OffAddr#_closure" {
     GHC.PrimopWrappers.writeWord32OffAddr#_closure:
         const GHC.PrimopWrappers.writeWord32OffAddr#_info;
 },
 GHC.PrimopWrappers.writeWord32OffAddr#_entry() //  [R2, R3, R4]
         { info_tbl: [(cADW,
                       label: GHC.PrimopWrappers.writeWord32OffAddr#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 16} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cADW: // global
           I32[R2 + (R3 << 2)] = %MO_UU_Conv_W64_W32(R4);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.876599761 UTC

[section ""data" . GHC.PrimopWrappers.writeWord64OffAddr#_closure" {
     GHC.PrimopWrappers.writeWord64OffAddr#_closure:
         const GHC.PrimopWrappers.writeWord64OffAddr#_info;
 },
 GHC.PrimopWrappers.writeWord64OffAddr#_entry() //  [R2, R3, R4]
         { info_tbl: [(cAE8,
                       label: GHC.PrimopWrappers.writeWord64OffAddr#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 16} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAE8: // global
           I64[R2 + (R3 << 3)] = R4;
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.88033853 UTC

[section ""data" . GHC.PrimopWrappers.newMutVar#_closure" {
     GHC.PrimopWrappers.newMutVar#_closure:
         const GHC.PrimopWrappers.newMutVar#_info;
 },
 GHC.PrimopWrappers.newMutVar#_entry() //  [R2]
         { info_tbl: [(cAEk,
                       label: GHC.PrimopWrappers.newMutVar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAEk: // global
           R1 = R2;
           call stg_newMutVar#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.884262631 UTC

[section ""data" . GHC.PrimopWrappers.readMutVar#_closure" {
     GHC.PrimopWrappers.readMutVar#_closure:
         const GHC.PrimopWrappers.readMutVar#_info;
 },
 GHC.PrimopWrappers.readMutVar#_entry() //  [R2]
         { info_tbl: [(cAEw,
                       label: GHC.PrimopWrappers.readMutVar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAEw: // global
           R1 = P64[R2 + 8];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.887956252 UTC

[section ""data" . GHC.PrimopWrappers.writeMutVar#_closure" {
     GHC.PrimopWrappers.writeMutVar#_closure:
         const GHC.PrimopWrappers.writeMutVar#_info;
 },
 GHC.PrimopWrappers.writeMutVar#_entry() //  [R2, R3]
         { info_tbl: [(cAEL,
                       label: GHC.PrimopWrappers.writeMutVar#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAEL: // global
           _B2::P64 = R3;
           call MO_WriteBarrier();
           P64[R2 + 8] = _B2::P64;
           call "ccall" arg hints:  [PtrHint,
                                     PtrHint]  result hints:  [] dirty_MUT_VAR(BaseReg, R2);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.891493528 UTC

[section ""data" . GHC.PrimopWrappers.sameMutVar#_closure" {
     GHC.PrimopWrappers.sameMutVar#_closure:
         const GHC.PrimopWrappers.sameMutVar#_info;
 },
 GHC.PrimopWrappers.sameMutVar#_entry() //  [R2, R3]
         { info_tbl: [(cAEZ,
                       label: GHC.PrimopWrappers.sameMutVar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAEZ: // global
           R1 = R2 == R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.89501673 UTC

[section ""data" . GHC.PrimopWrappers.atomicModifyMutVar#_closure" {
     GHC.PrimopWrappers.atomicModifyMutVar#_closure:
         const GHC.PrimopWrappers.atomicModifyMutVar#_info;
 },
 GHC.PrimopWrappers.atomicModifyMutVar#_entry() //  [R2, R3]
         { info_tbl: [(cAFc,
                       label: GHC.PrimopWrappers.atomicModifyMutVar#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAFc: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_atomicModifyMutVar#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.898841146 UTC

[section ""data" . GHC.PrimopWrappers.casMutVar#_closure" {
     GHC.PrimopWrappers.casMutVar#_closure:
         const GHC.PrimopWrappers.casMutVar#_info;
 },
 GHC.PrimopWrappers.casMutVar#_entry() //  [R2, R3, R4]
         { info_tbl: [(cAFn,
                       label: GHC.PrimopWrappers.casMutVar#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAFn: // global
           _B3::P64 = R3;
           R3 = R4;
           _B4::P64 = R2;
           R2 = _B3::P64;
           R1 = _B4::P64;
           call stg_casMutVar#(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.902344069 UTC

[section ""data" . GHC.PrimopWrappers.catch#_closure" {
     GHC.PrimopWrappers.catch#_closure:
         const GHC.PrimopWrappers.catch#_info;
 },
 GHC.PrimopWrappers.catch#_entry() //  [R2, R3]
         { info_tbl: [(cAFy,
                       label: GHC.PrimopWrappers.catch#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAFy: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_catch#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.905887815 UTC

[section ""data" . GHC.PrimopWrappers.raise#_closure" {
     GHC.PrimopWrappers.raise#_closure:
         const GHC.PrimopWrappers.raise#_info;
 },
 GHC.PrimopWrappers.raise#_entry() //  [R2]
         { info_tbl: [(cAFJ,
                       label: GHC.PrimopWrappers.raise#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAFJ: // global
           R1 = R2;
           call stg_raise#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.909161007 UTC

[section ""data" . GHC.PrimopWrappers.raiseIO#_closure" {
     GHC.PrimopWrappers.raiseIO#_closure:
         const GHC.PrimopWrappers.raiseIO#_info;
 },
 GHC.PrimopWrappers.raiseIO#_entry() //  [R2]
         { info_tbl: [(cAFU,
                       label: GHC.PrimopWrappers.raiseIO#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAFU: // global
           R1 = R2;
           call stg_raiseIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.912434739 UTC

[section ""data" . GHC.PrimopWrappers.maskAsyncExceptions#_closure" {
     GHC.PrimopWrappers.maskAsyncExceptions#_closure:
         const GHC.PrimopWrappers.maskAsyncExceptions#_info;
 },
 GHC.PrimopWrappers.maskAsyncExceptions#_entry() //  [R2]
         { info_tbl: [(cAG5,
                       label: GHC.PrimopWrappers.maskAsyncExceptions#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAG5: // global
           R1 = R2;
           call stg_maskAsyncExceptions#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.916488763 UTC

[section ""data" . GHC.PrimopWrappers.maskUninterruptible#_closure" {
     GHC.PrimopWrappers.maskUninterruptible#_closure:
         const GHC.PrimopWrappers.maskUninterruptible#_info;
 },
 GHC.PrimopWrappers.maskUninterruptible#_entry() //  [R2]
         { info_tbl: [(cAGg,
                       label: GHC.PrimopWrappers.maskUninterruptible#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAGg: // global
           R1 = R2;
           call stg_maskUninterruptible#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.919865534 UTC

[section ""data" . GHC.PrimopWrappers.unmaskAsyncExceptions#_closure" {
     GHC.PrimopWrappers.unmaskAsyncExceptions#_closure:
         const GHC.PrimopWrappers.unmaskAsyncExceptions#_info;
 },
 GHC.PrimopWrappers.unmaskAsyncExceptions#_entry() //  [R2]
         { info_tbl: [(cAGr,
                       label: GHC.PrimopWrappers.unmaskAsyncExceptions#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAGr: // global
           R1 = R2;
           call stg_unmaskAsyncExceptions#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.923311913 UTC

[section ""data" . GHC.PrimopWrappers.getMaskingState#_closure" {
     GHC.PrimopWrappers.getMaskingState#_closure:
         const GHC.PrimopWrappers.getMaskingState#_info;
 },
 GHC.PrimopWrappers.getMaskingState#_entry() //  []
         { info_tbl: [(cAGC,
                       label: GHC.PrimopWrappers.getMaskingState#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAGC: // global
           call stg_getMaskingState#() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.926569934 UTC

[section ""data" . GHC.PrimopWrappers.atomically#_closure" {
     GHC.PrimopWrappers.atomically#_closure:
         const GHC.PrimopWrappers.atomically#_info;
 },
 GHC.PrimopWrappers.atomically#_entry() //  [R2]
         { info_tbl: [(cAGN,
                       label: GHC.PrimopWrappers.atomically#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAGN: // global
           R1 = R2;
           call stg_atomically#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.929897908 UTC

[section ""data" . GHC.PrimopWrappers.retry#_closure" {
     GHC.PrimopWrappers.retry#_closure:
         const GHC.PrimopWrappers.retry#_info;
 },
 GHC.PrimopWrappers.retry#_entry() //  []
         { info_tbl: [(cAGY,
                       label: GHC.PrimopWrappers.retry#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAGY: // global
           call stg_retry#() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.933135194 UTC

[section ""data" . GHC.PrimopWrappers.catchRetry#_closure" {
     GHC.PrimopWrappers.catchRetry#_closure:
         const GHC.PrimopWrappers.catchRetry#_info;
 },
 GHC.PrimopWrappers.catchRetry#_entry() //  [R2, R3]
         { info_tbl: [(cAH9,
                       label: GHC.PrimopWrappers.catchRetry#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAH9: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_catchRetry#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.936749048 UTC

[section ""data" . GHC.PrimopWrappers.catchSTM#_closure" {
     GHC.PrimopWrappers.catchSTM#_closure:
         const GHC.PrimopWrappers.catchSTM#_info;
 },
 GHC.PrimopWrappers.catchSTM#_entry() //  [R2, R3]
         { info_tbl: [(cAHk,
                       label: GHC.PrimopWrappers.catchSTM#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAHk: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_catchSTM#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.940164952 UTC

[section ""data" . GHC.PrimopWrappers.check#_closure" {
     GHC.PrimopWrappers.check#_closure:
         const GHC.PrimopWrappers.check#_info;
 },
 GHC.PrimopWrappers.check#_entry() //  [R2]
         { info_tbl: [(cAHv,
                       label: GHC.PrimopWrappers.check#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAHv: // global
           R1 = R2;
           call stg_check#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.944635351 UTC

[section ""data" . GHC.PrimopWrappers.newTVar#_closure" {
     GHC.PrimopWrappers.newTVar#_closure:
         const GHC.PrimopWrappers.newTVar#_info;
 },
 GHC.PrimopWrappers.newTVar#_entry() //  [R2]
         { info_tbl: [(cAHG,
                       label: GHC.PrimopWrappers.newTVar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAHG: // global
           R1 = R2;
           call stg_newTVar#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.947966446 UTC

[section ""data" . GHC.PrimopWrappers.readTVar#_closure" {
     GHC.PrimopWrappers.readTVar#_closure:
         const GHC.PrimopWrappers.readTVar#_info;
 },
 GHC.PrimopWrappers.readTVar#_entry() //  [R2]
         { info_tbl: [(cAHR,
                       label: GHC.PrimopWrappers.readTVar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAHR: // global
           R1 = R2;
           call stg_readTVar#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.951198811 UTC

[section ""data" . GHC.PrimopWrappers.readTVarIO#_closure" {
     GHC.PrimopWrappers.readTVarIO#_closure:
         const GHC.PrimopWrappers.readTVarIO#_info;
 },
 GHC.PrimopWrappers.readTVarIO#_entry() //  [R2]
         { info_tbl: [(cAI2,
                       label: GHC.PrimopWrappers.readTVarIO#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAI2: // global
           R1 = R2;
           call stg_readTVarIO#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.954645321 UTC

[section ""data" . GHC.PrimopWrappers.writeTVar#_closure" {
     GHC.PrimopWrappers.writeTVar#_closure:
         const GHC.PrimopWrappers.writeTVar#_info;
 },
 GHC.PrimopWrappers.writeTVar#_entry() //  [R2, R3]
         { info_tbl: [(cAId,
                       label: GHC.PrimopWrappers.writeTVar#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAId: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_writeTVar#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.958075724 UTC

[section ""data" . GHC.PrimopWrappers.sameTVar#_closure" {
     GHC.PrimopWrappers.sameTVar#_closure:
         const GHC.PrimopWrappers.sameTVar#_info;
 },
 GHC.PrimopWrappers.sameTVar#_entry() //  [R2, R3]
         { info_tbl: [(cAIp,
                       label: GHC.PrimopWrappers.sameTVar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAIp: // global
           R1 = R2 == R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.961623907 UTC

[section ""data" . GHC.PrimopWrappers.newMVar#_closure" {
     GHC.PrimopWrappers.newMVar#_closure:
         const GHC.PrimopWrappers.newMVar#_info;
 },
 GHC.PrimopWrappers.newMVar#_entry() //  []
         { info_tbl: [(cAIC,
                       label: GHC.PrimopWrappers.newMVar#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAIC: // global
           call stg_newMVar#() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.964840851 UTC

[section ""data" . GHC.PrimopWrappers.takeMVar#_closure" {
     GHC.PrimopWrappers.takeMVar#_closure:
         const GHC.PrimopWrappers.takeMVar#_info;
 },
 GHC.PrimopWrappers.takeMVar#_entry() //  [R2]
         { info_tbl: [(cAIN,
                       label: GHC.PrimopWrappers.takeMVar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAIN: // global
           R1 = R2;
           call stg_takeMVar#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.96852741 UTC

[section ""data" . GHC.PrimopWrappers.tryTakeMVar#_closure" {
     GHC.PrimopWrappers.tryTakeMVar#_closure:
         const GHC.PrimopWrappers.tryTakeMVar#_info;
 },
 GHC.PrimopWrappers.tryTakeMVar#_entry() //  [R2]
         { info_tbl: [(cAIY,
                       label: GHC.PrimopWrappers.tryTakeMVar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAIY: // global
           R1 = R2;
           call stg_tryTakeMVar#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.972242401 UTC

[section ""data" . GHC.PrimopWrappers.putMVar#_closure" {
     GHC.PrimopWrappers.putMVar#_closure:
         const GHC.PrimopWrappers.putMVar#_info;
 },
 GHC.PrimopWrappers.putMVar#_entry() //  [R2, R3]
         { info_tbl: [(cAJ9,
                       label: GHC.PrimopWrappers.putMVar#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAJ9: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_putMVar#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.976321853 UTC

[section ""data" . GHC.PrimopWrappers.tryPutMVar#_closure" {
     GHC.PrimopWrappers.tryPutMVar#_closure:
         const GHC.PrimopWrappers.tryPutMVar#_info;
 },
 GHC.PrimopWrappers.tryPutMVar#_entry() //  [R2, R3]
         { info_tbl: [(cAJk,
                       label: GHC.PrimopWrappers.tryPutMVar#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAJk: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_tryPutMVar#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.979775117 UTC

[section ""data" . GHC.PrimopWrappers.readMVar#_closure" {
     GHC.PrimopWrappers.readMVar#_closure:
         const GHC.PrimopWrappers.readMVar#_info;
 },
 GHC.PrimopWrappers.readMVar#_entry() //  [R2]
         { info_tbl: [(cAJv,
                       label: GHC.PrimopWrappers.readMVar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAJv: // global
           R1 = R2;
           call stg_readMVar#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.983368864 UTC

[section ""data" . GHC.PrimopWrappers.tryReadMVar#_closure" {
     GHC.PrimopWrappers.tryReadMVar#_closure:
         const GHC.PrimopWrappers.tryReadMVar#_info;
 },
 GHC.PrimopWrappers.tryReadMVar#_entry() //  [R2]
         { info_tbl: [(cAJG,
                       label: GHC.PrimopWrappers.tryReadMVar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAJG: // global
           R1 = R2;
           call stg_tryReadMVar#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.986755036 UTC

[section ""data" . GHC.PrimopWrappers.sameMVar#_closure" {
     GHC.PrimopWrappers.sameMVar#_closure:
         const GHC.PrimopWrappers.sameMVar#_info;
 },
 GHC.PrimopWrappers.sameMVar#_entry() //  [R2, R3]
         { info_tbl: [(cAJS,
                       label: GHC.PrimopWrappers.sameMVar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAJS: // global
           R1 = R2 == R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.990210135 UTC

[section ""data" . GHC.PrimopWrappers.isEmptyMVar#_closure" {
     GHC.PrimopWrappers.isEmptyMVar#_closure:
         const GHC.PrimopWrappers.isEmptyMVar#_info;
 },
 GHC.PrimopWrappers.isEmptyMVar#_entry() //  [R2]
         { info_tbl: [(cAK5,
                       label: GHC.PrimopWrappers.isEmptyMVar#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAK5: // global
           R1 = R2;
           call stg_isEmptyMVar#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.99360935 UTC

[section ""data" . GHC.PrimopWrappers.delay#_closure" {
     GHC.PrimopWrappers.delay#_closure:
         const GHC.PrimopWrappers.delay#_info;
 },
 GHC.PrimopWrappers.delay#_entry() //  [R2]
         { info_tbl: [(cAKg,
                       label: GHC.PrimopWrappers.delay#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAKg: // global
           R1 = R2;
           call stg_delay#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:21.996774228 UTC

[section ""data" . GHC.PrimopWrappers.waitRead#_closure" {
     GHC.PrimopWrappers.waitRead#_closure:
         const GHC.PrimopWrappers.waitRead#_info;
 },
 GHC.PrimopWrappers.waitRead#_entry() //  [R2]
         { info_tbl: [(cAKr,
                       label: GHC.PrimopWrappers.waitRead#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAKr: // global
           R1 = R2;
           call stg_waitRead#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.000230219 UTC

[section ""data" . GHC.PrimopWrappers.waitWrite#_closure" {
     GHC.PrimopWrappers.waitWrite#_closure:
         const GHC.PrimopWrappers.waitWrite#_info;
 },
 GHC.PrimopWrappers.waitWrite#_entry() //  [R2]
         { info_tbl: [(cAKC,
                       label: GHC.PrimopWrappers.waitWrite#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAKC: // global
           R1 = R2;
           call stg_waitWrite#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.003980308 UTC

[section ""data" . GHC.PrimopWrappers.fork#_closure" {
     GHC.PrimopWrappers.fork#_closure:
         const GHC.PrimopWrappers.fork#_info;
 },
 GHC.PrimopWrappers.fork#_entry() //  [R2]
         { info_tbl: [(cAKN,
                       label: GHC.PrimopWrappers.fork#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAKN: // global
           R1 = R2;
           call stg_fork#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.007232499 UTC

[section ""data" . GHC.PrimopWrappers.forkOn#_closure" {
     GHC.PrimopWrappers.forkOn#_closure:
         const GHC.PrimopWrappers.forkOn#_info;
 },
 GHC.PrimopWrappers.forkOn#_entry() //  [R2, R3]
         { info_tbl: [(cAKY,
                       label: GHC.PrimopWrappers.forkOn#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 13} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAKY: // global
           _B3::I64 = R2;
           R2 = R3;
           R1 = _B3::I64;
           call stg_forkOn#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.010578385 UTC

[section ""data" . GHC.PrimopWrappers.killThread#_closure" {
     GHC.PrimopWrappers.killThread#_closure:
         const GHC.PrimopWrappers.killThread#_info;
 },
 GHC.PrimopWrappers.killThread#_entry() //  [R2, R3]
         { info_tbl: [(cAL9,
                       label: GHC.PrimopWrappers.killThread#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAL9: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_killThread#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.014193121 UTC

[section ""data" . GHC.PrimopWrappers.yield#_closure" {
     GHC.PrimopWrappers.yield#_closure:
         const GHC.PrimopWrappers.yield#_info;
 },
 GHC.PrimopWrappers.yield#_entry() //  []
         { info_tbl: [(cALk,
                       label: GHC.PrimopWrappers.yield#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cALk: // global
           call stg_yield#() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.017422345 UTC

[section ""data" . GHC.PrimopWrappers.myThreadId#_closure" {
     GHC.PrimopWrappers.myThreadId#_closure:
         const GHC.PrimopWrappers.myThreadId#_info;
 },
 GHC.PrimopWrappers.myThreadId#_entry() //  []
         { info_tbl: [(cALw,
                       label: GHC.PrimopWrappers.myThreadId#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cALw: // global
           R1 = CurrentTSO;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.020754318 UTC

[section ""data" . GHC.PrimopWrappers.labelThread#_closure" {
     GHC.PrimopWrappers.labelThread#_closure:
         const GHC.PrimopWrappers.labelThread#_info;
 },
 GHC.PrimopWrappers.labelThread#_entry() //  [R2, R3]
         { info_tbl: [(cALI,
                       label: GHC.PrimopWrappers.labelThread#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cALI: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_labelThread#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.024365558 UTC

[section ""data" . GHC.PrimopWrappers.isCurrentThreadBound#_closure" {
     GHC.PrimopWrappers.isCurrentThreadBound#_closure:
         const GHC.PrimopWrappers.isCurrentThreadBound#_info;
 },
 GHC.PrimopWrappers.isCurrentThreadBound#_entry() //  []
         { info_tbl: [(cALT,
                       label: GHC.PrimopWrappers.isCurrentThreadBound#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cALT: // global
           call stg_isCurrentThreadBound#() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.027609924 UTC

[section ""data" . GHC.PrimopWrappers.noDuplicate#_closure" {
     GHC.PrimopWrappers.noDuplicate#_closure:
         const GHC.PrimopWrappers.noDuplicate#_info;
 },
 GHC.PrimopWrappers.noDuplicate#_entry() //  []
         { info_tbl: [(cAM4,
                       label: GHC.PrimopWrappers.noDuplicate#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAM4: // global
           call stg_noDuplicate#() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.030952611 UTC

[section ""data" . GHC.PrimopWrappers.threadStatus#_closure" {
     GHC.PrimopWrappers.threadStatus#_closure:
         const GHC.PrimopWrappers.threadStatus#_info;
 },
 GHC.PrimopWrappers.threadStatus#_entry() //  [R2]
         { info_tbl: [(cAMf,
                       label: GHC.PrimopWrappers.threadStatus#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAMf: // global
           R1 = R2;
           call stg_threadStatus#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.034932033 UTC

[section ""data" . GHC.PrimopWrappers.mkWeak#_closure" {
     GHC.PrimopWrappers.mkWeak#_closure:
         const GHC.PrimopWrappers.mkWeak#_info;
 },
 GHC.PrimopWrappers.mkWeak#_entry() //  [R2, R3, R4]
         { info_tbl: [(cAMq,
                       label: GHC.PrimopWrappers.mkWeak#_info
                       rep:HeapRep static { Fun {arity: 4 fun_type: ArgSpec 23} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAMq: // global
           _B3::P64 = R3;
           R3 = R4;
           _B4::P64 = R2;
           R2 = _B3::P64;
           R1 = _B4::P64;
           call stg_mkWeak#(R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.038767436 UTC

[section ""data" . GHC.PrimopWrappers.mkWeakNoFinalizer#_closure" {
     GHC.PrimopWrappers.mkWeakNoFinalizer#_closure:
         const GHC.PrimopWrappers.mkWeakNoFinalizer#_info;
 },
 GHC.PrimopWrappers.mkWeakNoFinalizer#_entry() //  [R2, R3]
         { info_tbl: [(cAMB,
                       label: GHC.PrimopWrappers.mkWeakNoFinalizer#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAMB: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_mkWeakNoFinalizer#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.042192844 UTC

[section ""data" . GHC.PrimopWrappers.addCFinalizerToWeak#_closure" {
     GHC.PrimopWrappers.addCFinalizerToWeak#_closure:
         const GHC.PrimopWrappers.addCFinalizerToWeak#_info;
 },
 GHC.PrimopWrappers.addCFinalizerToWeak#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAMJ: // global
           R6 = P64[Sp + 32];
           R5 = I64[Sp + 24];
           R4 = I64[Sp + 16];
           R3 = I64[Sp + 8];
           R2 = I64[Sp];
           R1 = R1;
           Sp = Sp + 40;
           call GHC.PrimopWrappers.addCFinalizerToWeak#_entry(R6,
                                                              R5,
                                                              R4,
                                                              R3,
                                                              R2,
                                                              R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.addCFinalizerToWeak#_entry() //  [R2, R3, R4,
                                                      R5, R6]
         { info_tbl: [(cAMN,
                       label: GHC.PrimopWrappers.addCFinalizerToWeak#_info
                       rep:HeapRep static {
                             Fun {arity: 6 fun_type: ArgGen [True, True, True, True, False]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAMN: // global
           _B3::I64 = R5;
           R5 = R6;
           _B4::I64 = R4;
           R4 = _B3::I64;
           _B5::I64 = R3;
           R3 = _B4::I64;
           _B6::I64 = R2;
           R2 = _B5::I64;
           R1 = _B6::I64;
           call stg_addCFinalizerToWeak#(R5,
                                         R4,
                                         R3,
                                         R2,
                                         R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.047094266 UTC

[section ""data" . GHC.PrimopWrappers.deRefWeak#_closure" {
     GHC.PrimopWrappers.deRefWeak#_closure:
         const GHC.PrimopWrappers.deRefWeak#_info;
 },
 GHC.PrimopWrappers.deRefWeak#_entry() //  [R2]
         { info_tbl: [(cAN0,
                       label: GHC.PrimopWrappers.deRefWeak#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAN0: // global
           R1 = R2;
           call stg_deRefWeak#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.050470593 UTC

[section ""data" . GHC.PrimopWrappers.finalizeWeak#_closure" {
     GHC.PrimopWrappers.finalizeWeak#_closure:
         const GHC.PrimopWrappers.finalizeWeak#_info;
 },
 GHC.PrimopWrappers.finalizeWeak#_entry() //  [R2]
         { info_tbl: [(cANb,
                       label: GHC.PrimopWrappers.finalizeWeak#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cANb: // global
           R1 = R2;
           call stg_finalizeWeak#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.053866674 UTC

[section ""data" . GHC.PrimopWrappers.touch#_closure" {
     GHC.PrimopWrappers.touch#_closure:
         const GHC.PrimopWrappers.touch#_info;
 },
 GHC.PrimopWrappers.touch#_entry() //  [R2]
         { info_tbl: [(cANn,
                       label: GHC.PrimopWrappers.touch#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cANn: // global
           call MO_Touch(R2);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.057179094 UTC

[section ""data" . GHC.PrimopWrappers.makeStablePtr#_closure" {
     GHC.PrimopWrappers.makeStablePtr#_closure:
         const GHC.PrimopWrappers.makeStablePtr#_info;
 },
 GHC.PrimopWrappers.makeStablePtr#_entry() //  [R2]
         { info_tbl: [(cANz,
                       label: GHC.PrimopWrappers.makeStablePtr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cANz: // global
           R1 = R2;
           call stg_makeStablePtr#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.060543807 UTC

[section ""data" . GHC.PrimopWrappers.deRefStablePtr#_closure" {
     GHC.PrimopWrappers.deRefStablePtr#_closure:
         const GHC.PrimopWrappers.deRefStablePtr#_info;
 },
 GHC.PrimopWrappers.deRefStablePtr#_entry() //  [R2]
         { info_tbl: [(cANK,
                       label: GHC.PrimopWrappers.deRefStablePtr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cANK: // global
           R1 = R2;
           call stg_deRefStablePtr#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.064556205 UTC

[section ""data" . GHC.PrimopWrappers.eqStablePtr#_closure" {
     GHC.PrimopWrappers.eqStablePtr#_closure:
         const GHC.PrimopWrappers.eqStablePtr#_info;
 },
 GHC.PrimopWrappers.eqStablePtr#_entry() //  [R2, R3]
         { info_tbl: [(cANW,
                       label: GHC.PrimopWrappers.eqStablePtr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cANW: // global
           R1 = R2 == R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.068243777 UTC

[section ""data" . GHC.PrimopWrappers.makeStableName#_closure" {
     GHC.PrimopWrappers.makeStableName#_closure:
         const GHC.PrimopWrappers.makeStableName#_info;
 },
 GHC.PrimopWrappers.makeStableName#_entry() //  [R2]
         { info_tbl: [(cAO9,
                       label: GHC.PrimopWrappers.makeStableName#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAO9: // global
           R1 = R2;
           call stg_makeStableName#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.071555686 UTC

[section ""data" . GHC.PrimopWrappers.eqStableName#_closure" {
     GHC.PrimopWrappers.eqStableName#_closure:
         const GHC.PrimopWrappers.eqStableName#_info;
 },
 GHC.PrimopWrappers.eqStableName#_entry() //  [R2, R3]
         { info_tbl: [(cAOl,
                       label: GHC.PrimopWrappers.eqStableName#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAOl: // global
           R1 = I64[R2 + 8] == I64[R3 + 8];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.074930239 UTC

[section ""data" . GHC.PrimopWrappers.stableNameToInt#_closure" {
     GHC.PrimopWrappers.stableNameToInt#_closure:
         const GHC.PrimopWrappers.stableNameToInt#_info;
 },
 GHC.PrimopWrappers.stableNameToInt#_entry() //  [R2]
         { info_tbl: [(cAOA,
                       label: GHC.PrimopWrappers.stableNameToInt#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAOA: // global
           R1 = I64[R2 + 8];
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.078475317 UTC

[section ""data" . GHC.PrimopWrappers.compactNew#_closure" {
     GHC.PrimopWrappers.compactNew#_closure:
         const GHC.PrimopWrappers.compactNew#_info;
 },
 GHC.PrimopWrappers.compactNew#_entry() //  [R2]
         { info_tbl: [(cAOM,
                       label: GHC.PrimopWrappers.compactNew#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAOM: // global
           R1 = R2;
           call stg_compactNew#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.081889461 UTC

[section ""data" . GHC.PrimopWrappers.compactResize#_closure" {
     GHC.PrimopWrappers.compactResize#_closure:
         const GHC.PrimopWrappers.compactResize#_info;
 },
 GHC.PrimopWrappers.compactResize#_entry() //  [R2, R3]
         { info_tbl: [(cAOX,
                       label: GHC.PrimopWrappers.compactResize#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAOX: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_compactResize#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.085170914 UTC

[section ""data" . GHC.PrimopWrappers.compactContains#_closure" {
     GHC.PrimopWrappers.compactContains#_closure:
         const GHC.PrimopWrappers.compactContains#_info;
 },
 GHC.PrimopWrappers.compactContains#_entry() //  [R2, R3]
         { info_tbl: [(cAP8,
                       label: GHC.PrimopWrappers.compactContains#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAP8: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_compactContains#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.08914532 UTC

[section ""data" . GHC.PrimopWrappers.compactContainsAny#_closure" {
     GHC.PrimopWrappers.compactContainsAny#_closure:
         const GHC.PrimopWrappers.compactContainsAny#_info;
 },
 GHC.PrimopWrappers.compactContainsAny#_entry() //  [R2]
         { info_tbl: [(cAPj,
                       label: GHC.PrimopWrappers.compactContainsAny#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAPj: // global
           R1 = R2;
           call stg_compactContainsAny#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.092484016 UTC

[section ""data" . GHC.PrimopWrappers.compactGetFirstBlock#_closure" {
     GHC.PrimopWrappers.compactGetFirstBlock#_closure:
         const GHC.PrimopWrappers.compactGetFirstBlock#_info;
 },
 GHC.PrimopWrappers.compactGetFirstBlock#_entry() //  [R2]
         { info_tbl: [(cAPu,
                       label: GHC.PrimopWrappers.compactGetFirstBlock#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAPu: // global
           R1 = R2;
           call stg_compactGetFirstBlock#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.096403909 UTC

[section ""data" . GHC.PrimopWrappers.compactGetNextBlock#_closure" {
     GHC.PrimopWrappers.compactGetNextBlock#_closure:
         const GHC.PrimopWrappers.compactGetNextBlock#_info;
 },
 GHC.PrimopWrappers.compactGetNextBlock#_entry() //  [R2, R3]
         { info_tbl: [(cAPF,
                       label: GHC.PrimopWrappers.compactGetNextBlock#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAPF: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_compactGetNextBlock#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.099773546 UTC

[section ""data" . GHC.PrimopWrappers.compactAllocateBlock#_closure" {
     GHC.PrimopWrappers.compactAllocateBlock#_closure:
         const GHC.PrimopWrappers.compactAllocateBlock#_info;
 },
 GHC.PrimopWrappers.compactAllocateBlock#_entry() //  [R2, R3]
         { info_tbl: [(cAPQ,
                       label: GHC.PrimopWrappers.compactAllocateBlock#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAPQ: // global
           _B3::I64 = R2;
           R2 = R3;
           R1 = _B3::I64;
           call stg_compactAllocateBlock#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.103535099 UTC

[section ""data" . GHC.PrimopWrappers.compactFixupPointers#_closure" {
     GHC.PrimopWrappers.compactFixupPointers#_closure:
         const GHC.PrimopWrappers.compactFixupPointers#_info;
 },
 GHC.PrimopWrappers.compactFixupPointers#_entry() //  [R2, R3]
         { info_tbl: [(cAQ1,
                       label: GHC.PrimopWrappers.compactFixupPointers#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAQ1: // global
           _B3::I64 = R2;
           R2 = R3;
           R1 = _B3::I64;
           call stg_compactFixupPointers#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.106883178 UTC

[section ""data" . GHC.PrimopWrappers.compactAdd#_closure" {
     GHC.PrimopWrappers.compactAdd#_closure:
         const GHC.PrimopWrappers.compactAdd#_info;
 },
 GHC.PrimopWrappers.compactAdd#_entry() //  [R2, R3]
         { info_tbl: [(cAQc,
                       label: GHC.PrimopWrappers.compactAdd#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAQc: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_compactAdd#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.110434232 UTC

[section ""data" . GHC.PrimopWrappers.compactAddWithSharing#_closure" {
     GHC.PrimopWrappers.compactAddWithSharing#_closure:
         const GHC.PrimopWrappers.compactAddWithSharing#_info;
 },
 GHC.PrimopWrappers.compactAddWithSharing#_entry() //  [R2, R3]
         { info_tbl: [(cAQn,
                       label: GHC.PrimopWrappers.compactAddWithSharing#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAQn: // global
           _B3::P64 = R2;
           R2 = R3;
           R1 = _B3::P64;
           call stg_compactAddWithSharing#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.113766604 UTC

[section ""data" . GHC.PrimopWrappers.compactSize#_closure" {
     GHC.PrimopWrappers.compactSize#_closure:
         const GHC.PrimopWrappers.compactSize#_info;
 },
 GHC.PrimopWrappers.compactSize#_entry() //  [R2]
         { info_tbl: [(cAQy,
                       label: GHC.PrimopWrappers.compactSize#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAQy: // global
           R1 = R2;
           call stg_compactSize#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.117290096 UTC

[section ""data" . GHC.PrimopWrappers.reallyUnsafePtrEquality#_closure" {
     GHC.PrimopWrappers.reallyUnsafePtrEquality#_closure:
         const GHC.PrimopWrappers.reallyUnsafePtrEquality#_info;
 },
 GHC.PrimopWrappers.reallyUnsafePtrEquality#_entry() //  [R2, R3]
         { info_tbl: [(cAQK,
                       label: GHC.PrimopWrappers.reallyUnsafePtrEquality#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 15} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAQK: // global
           R1 = R2 == R3;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.120613117 UTC

[section ""data" . GHC.PrimopWrappers.par#_closure" {
     GHC.PrimopWrappers.par#_closure:
         const GHC.PrimopWrappers.par#_info;
 },
 GHC.PrimopWrappers.par#_entry() //  [R2]
         { info_tbl: [(cAR1,
                       label: GHC.PrimopWrappers.par#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAR1: // global
           (_cAQX::I64) = call "ccall" arg hints:  [PtrHint,
                                                    PtrHint]  result hints:  [] newSpark(BaseReg, R2);
           R1 = _cAQX::I64;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.124911921 UTC

[section ""data" . GHC.PrimopWrappers.spark#_closure" {
     GHC.PrimopWrappers.spark#_closure:
         const GHC.PrimopWrappers.spark#_info;
 },
 GHC.PrimopWrappers.spark#_entry() //  [R2]
         { info_tbl: [(cARj,
                       label: GHC.PrimopWrappers.spark#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cARj: // global
           (_cARf::I64) = call "ccall" arg hints:  [PtrHint,
                                                    PtrHint]  result hints:  [] newSpark(BaseReg, R2);
           R1 = R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.129017507 UTC

[section ""data" . GHC.PrimopWrappers.seq#_closure" {
     GHC.PrimopWrappers.seq#_closure:
         const GHC.PrimopWrappers.seq#_info;
 },
 GHC.PrimopWrappers.seq#_entry() //  [R2]
         { info_tbl: [(cARw,
                       label: GHC.PrimopWrappers.seq#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cARw: // global
           R1 = R2;
           call stg_ap_0_fast(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.132299274 UTC

[section ""data" . GHC.PrimopWrappers.getSpark#_closure" {
     GHC.PrimopWrappers.getSpark#_closure:
         const GHC.PrimopWrappers.getSpark#_info;
 },
 GHC.PrimopWrappers.getSpark#_entry() //  []
         { info_tbl: [(cARH,
                       label: GHC.PrimopWrappers.getSpark#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cARH: // global
           call stg_getSpark#() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.135744724 UTC

[section ""data" . GHC.PrimopWrappers.numSparks#_closure" {
     GHC.PrimopWrappers.numSparks#_closure:
         const GHC.PrimopWrappers.numSparks#_info;
 },
 GHC.PrimopWrappers.numSparks#_entry() //  []
         { info_tbl: [(cARS,
                       label: GHC.PrimopWrappers.numSparks#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 3} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cARS: // global
           call stg_numSparks#() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.139129269 UTC

[section ""data" . GHC.PrimopWrappers.dataToTag#_closure" {
     GHC.PrimopWrappers.dataToTag#_closure:
         const GHC.PrimopWrappers.dataToTag#_info;
 },
 GHC.PrimopWrappers.dataToTag#_entry() //  [R2]
         { info_tbl: [(cAS6,
                       label: GHC.PrimopWrappers.dataToTag#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAS6: // global
           if ((Sp + -8) < SpLim) (likely: False) goto cAS7; else goto cAS8;
       cAS7: // global
           R2 = R2;
           R1 = GHC.PrimopWrappers.dataToTag#_closure;
           call (stg_gc_fun)(R2, R1) args: 8, res: 0, upd: 8;
       cAS8: // global
           I64[Sp - 8] = block_cAS3_info;
           R1 = R2;
           Sp = Sp - 8;
           call stg_ap_0_fast(R1) args: 8, res: 8, upd: 8;
     }
 },
 _cAS3() //  [R1]
         { info_tbl: [(cAS3,
                       label: block_cAS3_info
                       rep:StackRep [])]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAS3: // global
           R1 = %MO_UU_Conv_W32_W64(I32[I64[R1 & (-8)] + 20]);
           Sp = Sp + 8;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.144463059 UTC

[section ""data" . GHC.PrimopWrappers.addrToAny#_closure" {
     GHC.PrimopWrappers.addrToAny#_closure:
         const GHC.PrimopWrappers.addrToAny#_info;
 },
 GHC.PrimopWrappers.addrToAny#_entry() //  [R2]
         { info_tbl: [(cASs,
                       label: GHC.PrimopWrappers.addrToAny#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cASs: // global
           R1 = R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.14802313 UTC

[section ""data" . GHC.PrimopWrappers.anyToAddr#_closure" {
     GHC.PrimopWrappers.anyToAddr#_closure:
         const GHC.PrimopWrappers.anyToAddr#_info;
 },
 GHC.PrimopWrappers.anyToAddr#_entry() //  [R2]
         { info_tbl: [(cASF,
                       label: GHC.PrimopWrappers.anyToAddr#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cASF: // global
           R1 = R2;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.151265314 UTC

[section ""data" . GHC.PrimopWrappers.mkApUpd0#_closure" {
     GHC.PrimopWrappers.mkApUpd0#_closure:
         const GHC.PrimopWrappers.mkApUpd0#_info;
 },
 GHC.PrimopWrappers.mkApUpd0#_entry() //  [R2]
         { info_tbl: [(cASR,
                       label: GHC.PrimopWrappers.mkApUpd0#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cASR: // global
           R1 = R2;
           call stg_mkApUpd0#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.155347527 UTC

[section ""data" . GHC.PrimopWrappers.newBCO#_closure" {
     GHC.PrimopWrappers.newBCO#_closure:
         const GHC.PrimopWrappers.newBCO#_info;
 },
 GHC.PrimopWrappers.newBCO#_slow() //  [R1]
         { info_tbl: []
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cASZ: // global
           R6 = P64[Sp + 32];
           R5 = I64[Sp + 24];
           R4 = P64[Sp + 16];
           R3 = P64[Sp + 8];
           R2 = P64[Sp];
           R1 = R1;
           Sp = Sp + 40;
           call GHC.PrimopWrappers.newBCO#_entry(R6,
                                                 R5,
                                                 R4,
                                                 R3,
                                                 R2,
                                                 R1) args: 8, res: 0, upd: 8;
     }
 },
 GHC.PrimopWrappers.newBCO#_entry() //  [R2, R3, R4, R5, R6]
         { info_tbl: [(cAT3,
                       label: GHC.PrimopWrappers.newBCO#_info
                       rep:HeapRep static {
                             Fun {arity: 6
                                  fun_type: ArgGen [False, False, False, True, False]} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAT3: // global
           _B3::I64 = R5;
           R5 = R6;
           _B4::P64 = R4;
           R4 = _B3::I64;
           _B5::P64 = R3;
           R3 = _B4::P64;
           _B6::P64 = R2;
           R2 = _B5::P64;
           R1 = _B6::P64;
           call stg_newBCO#(R5, R4, R3, R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.160077022 UTC

[section ""data" . GHC.PrimopWrappers.unpackClosure#_closure" {
     GHC.PrimopWrappers.unpackClosure#_closure:
         const GHC.PrimopWrappers.unpackClosure#_info;
 },
 GHC.PrimopWrappers.unpackClosure#_entry() //  [R2]
         { info_tbl: [(cATg,
                       label: GHC.PrimopWrappers.unpackClosure#_info
                       rep:HeapRep static { Fun {arity: 1 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cATg: // global
           R1 = R2;
           call stg_unpackClosure#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.163397012 UTC

[section ""data" . GHC.PrimopWrappers.getApStackVal#_closure" {
     GHC.PrimopWrappers.getApStackVal#_closure:
         const GHC.PrimopWrappers.getApStackVal#_info;
 },
 GHC.PrimopWrappers.getApStackVal#_entry() //  [R2, R3]
         { info_tbl: [(cATr,
                       label: GHC.PrimopWrappers.getApStackVal#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cATr: // global
           _B2::P64 = R2;
           R2 = R3;
           R1 = _B2::P64;
           call stg_getApStackVal#(R2, R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.166794355 UTC

[section ""data" . GHC.PrimopWrappers.getCCSOf#_closure" {
     GHC.PrimopWrappers.getCCSOf#_closure:
         const GHC.PrimopWrappers.getCCSOf#_info;
 },
 GHC.PrimopWrappers.getCCSOf#_entry() //  []
         { info_tbl: [(cATD,
                       label: GHC.PrimopWrappers.getCCSOf#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cATD: // global
           R1 = 0;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.170129806 UTC

[section ""data" . GHC.PrimopWrappers.getCurrentCCS#_closure" {
     GHC.PrimopWrappers.getCurrentCCS#_closure:
         const GHC.PrimopWrappers.getCurrentCCS#_info;
 },
 GHC.PrimopWrappers.getCurrentCCS#_entry() //  []
         { info_tbl: [(cATQ,
                       label: GHC.PrimopWrappers.getCurrentCCS#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cATQ: // global
           R1 = CCCS;
           call (I64[P64[Sp]])(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.173921342 UTC

[section ""data" . GHC.PrimopWrappers.clearCCS#_closure" {
     GHC.PrimopWrappers.clearCCS#_closure:
         const GHC.PrimopWrappers.clearCCS#_info;
 },
 GHC.PrimopWrappers.clearCCS#_entry() //  [R2]
         { info_tbl: [(cAU2,
                       label: GHC.PrimopWrappers.clearCCS#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAU2: // global
           R1 = R2;
           call stg_clearCCS#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.177129823 UTC

[section ""data" . GHC.PrimopWrappers.traceEvent#_closure" {
     GHC.PrimopWrappers.traceEvent#_closure:
         const GHC.PrimopWrappers.traceEvent#_info;
 },
 GHC.PrimopWrappers.traceEvent#_entry() //  [R2]
         { info_tbl: [(cAUd,
                       label: GHC.PrimopWrappers.traceEvent#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAUd: // global
           R1 = R2;
           call stg_traceEvent#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.180478602 UTC

[section ""data" . GHC.PrimopWrappers.traceMarker#_closure" {
     GHC.PrimopWrappers.traceMarker#_closure:
         const GHC.PrimopWrappers.traceMarker#_info;
 },
 GHC.PrimopWrappers.traceMarker#_entry() //  [R2]
         { info_tbl: [(cAUo,
                       label: GHC.PrimopWrappers.traceMarker#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 4} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAUo: // global
           R1 = R2;
           call stg_traceMarker#(R1) args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.184350562 UTC

[section ""data" . GHC.PrimopWrappers.prefetchByteArray3#_closure" {
     GHC.PrimopWrappers.prefetchByteArray3#_closure:
         const GHC.PrimopWrappers.prefetchByteArray3#_info;
 },
 GHC.PrimopWrappers.prefetchByteArray3#_entry() //  [R2, R3]
         { info_tbl: [(cAUA,
                       label: GHC.PrimopWrappers.prefetchByteArray3#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAUA: // global
           _cAUz::P64 = (R2 + 16) + R3;
           call MO_Prefetch_Data 3(_cAUz::P64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.188520585 UTC

[section ""data" . GHC.PrimopWrappers.prefetchMutableByteArray3#_closure" {
     GHC.PrimopWrappers.prefetchMutableByteArray3#_closure:
         const GHC.PrimopWrappers.prefetchMutableByteArray3#_info;
 },
 GHC.PrimopWrappers.prefetchMutableByteArray3#_entry() //  [R2, R3]
         { info_tbl: [(cAUP,
                       label: GHC.PrimopWrappers.prefetchMutableByteArray3#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAUP: // global
           _cAUO::P64 = (R2 + 16) + R3;
           call MO_Prefetch_Data 3(_cAUO::P64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.192689844 UTC

[section ""data" . GHC.PrimopWrappers.prefetchAddr3#_closure" {
     GHC.PrimopWrappers.prefetchAddr3#_closure:
         const GHC.PrimopWrappers.prefetchAddr3#_info;
 },
 GHC.PrimopWrappers.prefetchAddr3#_entry() //  [R2, R3]
         { info_tbl: [(cAV4,
                       label: GHC.PrimopWrappers.prefetchAddr3#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAV4: // global
           _cAV3::I64 = R2 + R3;
           call MO_Prefetch_Data 3(_cAV3::I64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.196153942 UTC

[section ""data" . GHC.PrimopWrappers.prefetchValue3#_closure" {
     GHC.PrimopWrappers.prefetchValue3#_closure:
         const GHC.PrimopWrappers.prefetchValue3#_info;
 },
 GHC.PrimopWrappers.prefetchValue3#_entry() //  [R2]
         { info_tbl: [(cAVj,
                       label: GHC.PrimopWrappers.prefetchValue3#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAVj: // global
           call MO_Prefetch_Data 3(R2);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.19948765 UTC

[section ""data" . GHC.PrimopWrappers.prefetchByteArray2#_closure" {
     GHC.PrimopWrappers.prefetchByteArray2#_closure:
         const GHC.PrimopWrappers.prefetchByteArray2#_info;
 },
 GHC.PrimopWrappers.prefetchByteArray2#_entry() //  [R2, R3]
         { info_tbl: [(cAVx,
                       label: GHC.PrimopWrappers.prefetchByteArray2#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAVx: // global
           _cAVw::P64 = (R2 + 16) + R3;
           call MO_Prefetch_Data 2(_cAVw::P64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.203071089 UTC

[section ""data" . GHC.PrimopWrappers.prefetchMutableByteArray2#_closure" {
     GHC.PrimopWrappers.prefetchMutableByteArray2#_closure:
         const GHC.PrimopWrappers.prefetchMutableByteArray2#_info;
 },
 GHC.PrimopWrappers.prefetchMutableByteArray2#_entry() //  [R2, R3]
         { info_tbl: [(cAVM,
                       label: GHC.PrimopWrappers.prefetchMutableByteArray2#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAVM: // global
           _cAVL::P64 = (R2 + 16) + R3;
           call MO_Prefetch_Data 2(_cAVL::P64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.20650238 UTC

[section ""data" . GHC.PrimopWrappers.prefetchAddr2#_closure" {
     GHC.PrimopWrappers.prefetchAddr2#_closure:
         const GHC.PrimopWrappers.prefetchAddr2#_info;
 },
 GHC.PrimopWrappers.prefetchAddr2#_entry() //  [R2, R3]
         { info_tbl: [(cAW1,
                       label: GHC.PrimopWrappers.prefetchAddr2#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAW1: // global
           _cAW0::I64 = R2 + R3;
           call MO_Prefetch_Data 2(_cAW0::I64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.210274895 UTC

[section ""data" . GHC.PrimopWrappers.prefetchValue2#_closure" {
     GHC.PrimopWrappers.prefetchValue2#_closure:
         const GHC.PrimopWrappers.prefetchValue2#_info;
 },
 GHC.PrimopWrappers.prefetchValue2#_entry() //  [R2]
         { info_tbl: [(cAWg,
                       label: GHC.PrimopWrappers.prefetchValue2#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAWg: // global
           call MO_Prefetch_Data 2(R2);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.213738013 UTC

[section ""data" . GHC.PrimopWrappers.prefetchByteArray1#_closure" {
     GHC.PrimopWrappers.prefetchByteArray1#_closure:
         const GHC.PrimopWrappers.prefetchByteArray1#_info;
 },
 GHC.PrimopWrappers.prefetchByteArray1#_entry() //  [R2, R3]
         { info_tbl: [(cAWu,
                       label: GHC.PrimopWrappers.prefetchByteArray1#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAWu: // global
           _cAWt::P64 = (R2 + 16) + R3;
           call MO_Prefetch_Data 1(_cAWt::P64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.217865356 UTC

[section ""data" . GHC.PrimopWrappers.prefetchMutableByteArray1#_closure" {
     GHC.PrimopWrappers.prefetchMutableByteArray1#_closure:
         const GHC.PrimopWrappers.prefetchMutableByteArray1#_info;
 },
 GHC.PrimopWrappers.prefetchMutableByteArray1#_entry() //  [R2, R3]
         { info_tbl: [(cAWJ,
                       label: GHC.PrimopWrappers.prefetchMutableByteArray1#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAWJ: // global
           _cAWI::P64 = (R2 + 16) + R3;
           call MO_Prefetch_Data 1(_cAWI::P64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.221651353 UTC

[section ""data" . GHC.PrimopWrappers.prefetchAddr1#_closure" {
     GHC.PrimopWrappers.prefetchAddr1#_closure:
         const GHC.PrimopWrappers.prefetchAddr1#_info;
 },
 GHC.PrimopWrappers.prefetchAddr1#_entry() //  [R2, R3]
         { info_tbl: [(cAWY,
                       label: GHC.PrimopWrappers.prefetchAddr1#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAWY: // global
           _cAWX::I64 = R2 + R3;
           call MO_Prefetch_Data 1(_cAWX::I64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.224913532 UTC

[section ""data" . GHC.PrimopWrappers.prefetchValue1#_closure" {
     GHC.PrimopWrappers.prefetchValue1#_closure:
         const GHC.PrimopWrappers.prefetchValue1#_info;
 },
 GHC.PrimopWrappers.prefetchValue1#_entry() //  [R2]
         { info_tbl: [(cAXd,
                       label: GHC.PrimopWrappers.prefetchValue1#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAXd: // global
           call MO_Prefetch_Data 1(R2);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.228118077 UTC

[section ""data" . GHC.PrimopWrappers.prefetchByteArray0#_closure" {
     GHC.PrimopWrappers.prefetchByteArray0#_closure:
         const GHC.PrimopWrappers.prefetchByteArray0#_info;
 },
 GHC.PrimopWrappers.prefetchByteArray0#_entry() //  [R2, R3]
         { info_tbl: [(cAXr,
                       label: GHC.PrimopWrappers.prefetchByteArray0#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAXr: // global
           _cAXq::P64 = (R2 + 16) + R3;
           call MO_Prefetch_Data 0(_cAXq::P64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.231560965 UTC

[section ""data" . GHC.PrimopWrappers.prefetchMutableByteArray0#_closure" {
     GHC.PrimopWrappers.prefetchMutableByteArray0#_closure:
         const GHC.PrimopWrappers.prefetchMutableByteArray0#_info;
 },
 GHC.PrimopWrappers.prefetchMutableByteArray0#_entry() //  [R2, R3]
         { info_tbl: [(cAXG,
                       label: GHC.PrimopWrappers.prefetchMutableByteArray0#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 14} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAXG: // global
           _cAXF::P64 = (R2 + 16) + R3;
           call MO_Prefetch_Data 0(_cAXF::P64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.235013865 UTC

[section ""data" . GHC.PrimopWrappers.prefetchAddr0#_closure" {
     GHC.PrimopWrappers.prefetchAddr0#_closure:
         const GHC.PrimopWrappers.prefetchAddr0#_info;
 },
 GHC.PrimopWrappers.prefetchAddr0#_entry() //  [R2, R3]
         { info_tbl: [(cAXV,
                       label: GHC.PrimopWrappers.prefetchAddr0#_info
                       rep:HeapRep static { Fun {arity: 3 fun_type: ArgSpec 12} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAXV: // global
           _cAXU::I64 = R2 + R3;
           call MO_Prefetch_Data 0(_cAXU::I64);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.238341735 UTC

[section ""data" . GHC.PrimopWrappers.prefetchValue0#_closure" {
     GHC.PrimopWrappers.prefetchValue0#_closure:
         const GHC.PrimopWrappers.prefetchValue0#_info;
 },
 GHC.PrimopWrappers.prefetchValue0#_entry() //  [R2]
         { info_tbl: [(cAYa,
                       label: GHC.PrimopWrappers.prefetchValue0#_info
                       rep:HeapRep static { Fun {arity: 2 fun_type: ArgSpec 5} })]
           stack_info: arg_space: 0 updfr_space: Nothing
         }
     {offset
       cAYa: // global
           call MO_Prefetch_Data 0(R2);
           call (I64[P64[Sp]])() args: 8, res: 0, upd: 8;
     }
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.241446595 UTC

[section ""cstring" . GHC.PrimopWrappers.$trModule4_bytes" {
     GHC.PrimopWrappers.$trModule4_bytes:
         I8[] [103,104,99,45,112,114,105,109]
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.243082898 UTC

[section ""data" . GHC.PrimopWrappers.$trModule3_closure" {
     GHC.PrimopWrappers.$trModule3_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.PrimopWrappers.$trModule4_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.245493346 UTC

[section ""cstring" . GHC.PrimopWrappers.$trModule2_bytes" {
     GHC.PrimopWrappers.$trModule2_bytes:
         I8[] [71,72,67,46,80,114,105,109,111,112,87,114,97,112,112,101,114,115]
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.247270178 UTC

[section ""data" . GHC.PrimopWrappers.$trModule1_closure" {
     GHC.PrimopWrappers.$trModule1_closure:
         const GHC.Types.TrNameS_con_info;
         const GHC.PrimopWrappers.$trModule2_bytes;
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.24893713 UTC

[section ""data" . GHC.PrimopWrappers.$trModule_closure" {
     GHC.PrimopWrappers.$trModule_closure:
         const GHC.Types.Module_con_info;
         const GHC.PrimopWrappers.$trModule3_closure+1;
         const GHC.PrimopWrappers.$trModule1_closure+1;
         const 3;
 }]


==================== Output Cmm ====================
2018-03-16 15:50:22.25069368 UTC

[section ""relreadonly" . SAYo_srt" { SAYo_srt:
 }]

